
STM32F746G_DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001f608  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001e54  0801f7d8  0801f7d8  000207d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000058  0802162c  0802162c  0002262c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08021684  08021684  000b9294  2**0
                  CONTENTS
  5 .ARM          00000008  08021684  08021684  00022684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0802168c  0802168c  000b9294  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0802168c  0802168c  0002268c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  080216a4  080216a4  000226a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000124  20000000  080216ac  00023000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          00015bb8  20000124  080217d0  00023124  2**2
                  ALLOC
 11 ._user_heap_stack 00001404  20015cdc  080217d0  00023cdc  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000b9294  2**0
                  CONTENTS, READONLY
 13 BufferSection 000bf400  c0000000  c0000000  000ba000  2**2
                  ALLOC
 14 ExtFlashSection 00093d00  90000000  90000000  00024000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 FontFlashSection 00001414  90093d00  90093d00  000b7d00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 00000180  90095114  90095114  000b9114  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .debug_info   000d9c2b  00000000  00000000  000b92c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00019b18  00000000  00000000  00192eef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 000034f8  00000000  00000000  001aca08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 00003d82  00000000  00000000  001aff00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  00039c3c  00000000  00000000  001b3c82  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   00065753  00000000  00000000  001ed8be  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00126d30  00000000  00000000  00253011  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000c2  00000000  00000000  00379d41  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00008fb4  00000000  00000000  00379e04  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 0001b9b8  00000000  00000000  00382db8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000006c  00000000  00000000  0039e770  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000124 	.word	0x20000124
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0801f7c0 	.word	0x0801f7c0

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000128 	.word	0x20000128
 800020c:	0801f7c0 	.word	0x0801f7c0

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_uldivmod>:
 80002b0:	b953      	cbnz	r3, 80002c8 <__aeabi_uldivmod+0x18>
 80002b2:	b94a      	cbnz	r2, 80002c8 <__aeabi_uldivmod+0x18>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bf08      	it	eq
 80002b8:	2800      	cmpeq	r0, #0
 80002ba:	bf1c      	itt	ne
 80002bc:	f04f 31ff 	movne.w	r1, #4294967295
 80002c0:	f04f 30ff 	movne.w	r0, #4294967295
 80002c4:	f000 b96a 	b.w	800059c <__aeabi_idiv0>
 80002c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d0:	f000 f806 	bl	80002e0 <__udivmoddi4>
 80002d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002dc:	b004      	add	sp, #16
 80002de:	4770      	bx	lr

080002e0 <__udivmoddi4>:
 80002e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002e4:	9d08      	ldr	r5, [sp, #32]
 80002e6:	460c      	mov	r4, r1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	d14e      	bne.n	800038a <__udivmoddi4+0xaa>
 80002ec:	4694      	mov	ip, r2
 80002ee:	458c      	cmp	ip, r1
 80002f0:	4686      	mov	lr, r0
 80002f2:	fab2 f282 	clz	r2, r2
 80002f6:	d962      	bls.n	80003be <__udivmoddi4+0xde>
 80002f8:	b14a      	cbz	r2, 800030e <__udivmoddi4+0x2e>
 80002fa:	f1c2 0320 	rsb	r3, r2, #32
 80002fe:	4091      	lsls	r1, r2
 8000300:	fa20 f303 	lsr.w	r3, r0, r3
 8000304:	fa0c fc02 	lsl.w	ip, ip, r2
 8000308:	4319      	orrs	r1, r3
 800030a:	fa00 fe02 	lsl.w	lr, r0, r2
 800030e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000312:	fa1f f68c 	uxth.w	r6, ip
 8000316:	fbb1 f4f7 	udiv	r4, r1, r7
 800031a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800031e:	fb07 1114 	mls	r1, r7, r4, r1
 8000322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000326:	fb04 f106 	mul.w	r1, r4, r6
 800032a:	4299      	cmp	r1, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x64>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f104 30ff 	add.w	r0, r4, #4294967295
 8000336:	f080 8112 	bcs.w	800055e <__udivmoddi4+0x27e>
 800033a:	4299      	cmp	r1, r3
 800033c:	f240 810f 	bls.w	800055e <__udivmoddi4+0x27e>
 8000340:	3c02      	subs	r4, #2
 8000342:	4463      	add	r3, ip
 8000344:	1a59      	subs	r1, r3, r1
 8000346:	fa1f f38e 	uxth.w	r3, lr
 800034a:	fbb1 f0f7 	udiv	r0, r1, r7
 800034e:	fb07 1110 	mls	r1, r7, r0, r1
 8000352:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000356:	fb00 f606 	mul.w	r6, r0, r6
 800035a:	429e      	cmp	r6, r3
 800035c:	d90a      	bls.n	8000374 <__udivmoddi4+0x94>
 800035e:	eb1c 0303 	adds.w	r3, ip, r3
 8000362:	f100 31ff 	add.w	r1, r0, #4294967295
 8000366:	f080 80fc 	bcs.w	8000562 <__udivmoddi4+0x282>
 800036a:	429e      	cmp	r6, r3
 800036c:	f240 80f9 	bls.w	8000562 <__udivmoddi4+0x282>
 8000370:	4463      	add	r3, ip
 8000372:	3802      	subs	r0, #2
 8000374:	1b9b      	subs	r3, r3, r6
 8000376:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800037a:	2100      	movs	r1, #0
 800037c:	b11d      	cbz	r5, 8000386 <__udivmoddi4+0xa6>
 800037e:	40d3      	lsrs	r3, r2
 8000380:	2200      	movs	r2, #0
 8000382:	e9c5 3200 	strd	r3, r2, [r5]
 8000386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800038a:	428b      	cmp	r3, r1
 800038c:	d905      	bls.n	800039a <__udivmoddi4+0xba>
 800038e:	b10d      	cbz	r5, 8000394 <__udivmoddi4+0xb4>
 8000390:	e9c5 0100 	strd	r0, r1, [r5]
 8000394:	2100      	movs	r1, #0
 8000396:	4608      	mov	r0, r1
 8000398:	e7f5      	b.n	8000386 <__udivmoddi4+0xa6>
 800039a:	fab3 f183 	clz	r1, r3
 800039e:	2900      	cmp	r1, #0
 80003a0:	d146      	bne.n	8000430 <__udivmoddi4+0x150>
 80003a2:	42a3      	cmp	r3, r4
 80003a4:	d302      	bcc.n	80003ac <__udivmoddi4+0xcc>
 80003a6:	4290      	cmp	r0, r2
 80003a8:	f0c0 80f0 	bcc.w	800058c <__udivmoddi4+0x2ac>
 80003ac:	1a86      	subs	r6, r0, r2
 80003ae:	eb64 0303 	sbc.w	r3, r4, r3
 80003b2:	2001      	movs	r0, #1
 80003b4:	2d00      	cmp	r5, #0
 80003b6:	d0e6      	beq.n	8000386 <__udivmoddi4+0xa6>
 80003b8:	e9c5 6300 	strd	r6, r3, [r5]
 80003bc:	e7e3      	b.n	8000386 <__udivmoddi4+0xa6>
 80003be:	2a00      	cmp	r2, #0
 80003c0:	f040 8090 	bne.w	80004e4 <__udivmoddi4+0x204>
 80003c4:	eba1 040c 	sub.w	r4, r1, ip
 80003c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003cc:	fa1f f78c 	uxth.w	r7, ip
 80003d0:	2101      	movs	r1, #1
 80003d2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003d6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003da:	fb08 4416 	mls	r4, r8, r6, r4
 80003de:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003e2:	fb07 f006 	mul.w	r0, r7, r6
 80003e6:	4298      	cmp	r0, r3
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x11c>
 80003ea:	eb1c 0303 	adds.w	r3, ip, r3
 80003ee:	f106 34ff 	add.w	r4, r6, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x11a>
 80003f4:	4298      	cmp	r0, r3
 80003f6:	f200 80cd 	bhi.w	8000594 <__udivmoddi4+0x2b4>
 80003fa:	4626      	mov	r6, r4
 80003fc:	1a1c      	subs	r4, r3, r0
 80003fe:	fa1f f38e 	uxth.w	r3, lr
 8000402:	fbb4 f0f8 	udiv	r0, r4, r8
 8000406:	fb08 4410 	mls	r4, r8, r0, r4
 800040a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800040e:	fb00 f707 	mul.w	r7, r0, r7
 8000412:	429f      	cmp	r7, r3
 8000414:	d908      	bls.n	8000428 <__udivmoddi4+0x148>
 8000416:	eb1c 0303 	adds.w	r3, ip, r3
 800041a:	f100 34ff 	add.w	r4, r0, #4294967295
 800041e:	d202      	bcs.n	8000426 <__udivmoddi4+0x146>
 8000420:	429f      	cmp	r7, r3
 8000422:	f200 80b0 	bhi.w	8000586 <__udivmoddi4+0x2a6>
 8000426:	4620      	mov	r0, r4
 8000428:	1bdb      	subs	r3, r3, r7
 800042a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800042e:	e7a5      	b.n	800037c <__udivmoddi4+0x9c>
 8000430:	f1c1 0620 	rsb	r6, r1, #32
 8000434:	408b      	lsls	r3, r1
 8000436:	fa22 f706 	lsr.w	r7, r2, r6
 800043a:	431f      	orrs	r7, r3
 800043c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000440:	fa04 f301 	lsl.w	r3, r4, r1
 8000444:	ea43 030c 	orr.w	r3, r3, ip
 8000448:	40f4      	lsrs	r4, r6
 800044a:	fa00 f801 	lsl.w	r8, r0, r1
 800044e:	0c38      	lsrs	r0, r7, #16
 8000450:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000454:	fbb4 fef0 	udiv	lr, r4, r0
 8000458:	fa1f fc87 	uxth.w	ip, r7
 800045c:	fb00 441e 	mls	r4, r0, lr, r4
 8000460:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000464:	fb0e f90c 	mul.w	r9, lr, ip
 8000468:	45a1      	cmp	r9, r4
 800046a:	fa02 f201 	lsl.w	r2, r2, r1
 800046e:	d90a      	bls.n	8000486 <__udivmoddi4+0x1a6>
 8000470:	193c      	adds	r4, r7, r4
 8000472:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000476:	f080 8084 	bcs.w	8000582 <__udivmoddi4+0x2a2>
 800047a:	45a1      	cmp	r9, r4
 800047c:	f240 8081 	bls.w	8000582 <__udivmoddi4+0x2a2>
 8000480:	f1ae 0e02 	sub.w	lr, lr, #2
 8000484:	443c      	add	r4, r7
 8000486:	eba4 0409 	sub.w	r4, r4, r9
 800048a:	fa1f f983 	uxth.w	r9, r3
 800048e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000492:	fb00 4413 	mls	r4, r0, r3, r4
 8000496:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800049a:	fb03 fc0c 	mul.w	ip, r3, ip
 800049e:	45a4      	cmp	ip, r4
 80004a0:	d907      	bls.n	80004b2 <__udivmoddi4+0x1d2>
 80004a2:	193c      	adds	r4, r7, r4
 80004a4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004a8:	d267      	bcs.n	800057a <__udivmoddi4+0x29a>
 80004aa:	45a4      	cmp	ip, r4
 80004ac:	d965      	bls.n	800057a <__udivmoddi4+0x29a>
 80004ae:	3b02      	subs	r3, #2
 80004b0:	443c      	add	r4, r7
 80004b2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004b6:	fba0 9302 	umull	r9, r3, r0, r2
 80004ba:	eba4 040c 	sub.w	r4, r4, ip
 80004be:	429c      	cmp	r4, r3
 80004c0:	46ce      	mov	lr, r9
 80004c2:	469c      	mov	ip, r3
 80004c4:	d351      	bcc.n	800056a <__udivmoddi4+0x28a>
 80004c6:	d04e      	beq.n	8000566 <__udivmoddi4+0x286>
 80004c8:	b155      	cbz	r5, 80004e0 <__udivmoddi4+0x200>
 80004ca:	ebb8 030e 	subs.w	r3, r8, lr
 80004ce:	eb64 040c 	sbc.w	r4, r4, ip
 80004d2:	fa04 f606 	lsl.w	r6, r4, r6
 80004d6:	40cb      	lsrs	r3, r1
 80004d8:	431e      	orrs	r6, r3
 80004da:	40cc      	lsrs	r4, r1
 80004dc:	e9c5 6400 	strd	r6, r4, [r5]
 80004e0:	2100      	movs	r1, #0
 80004e2:	e750      	b.n	8000386 <__udivmoddi4+0xa6>
 80004e4:	f1c2 0320 	rsb	r3, r2, #32
 80004e8:	fa20 f103 	lsr.w	r1, r0, r3
 80004ec:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f0:	fa24 f303 	lsr.w	r3, r4, r3
 80004f4:	4094      	lsls	r4, r2
 80004f6:	430c      	orrs	r4, r1
 80004f8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004fc:	fa00 fe02 	lsl.w	lr, r0, r2
 8000500:	fa1f f78c 	uxth.w	r7, ip
 8000504:	fbb3 f0f8 	udiv	r0, r3, r8
 8000508:	fb08 3110 	mls	r1, r8, r0, r3
 800050c:	0c23      	lsrs	r3, r4, #16
 800050e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000512:	fb00 f107 	mul.w	r1, r0, r7
 8000516:	4299      	cmp	r1, r3
 8000518:	d908      	bls.n	800052c <__udivmoddi4+0x24c>
 800051a:	eb1c 0303 	adds.w	r3, ip, r3
 800051e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000522:	d22c      	bcs.n	800057e <__udivmoddi4+0x29e>
 8000524:	4299      	cmp	r1, r3
 8000526:	d92a      	bls.n	800057e <__udivmoddi4+0x29e>
 8000528:	3802      	subs	r0, #2
 800052a:	4463      	add	r3, ip
 800052c:	1a5b      	subs	r3, r3, r1
 800052e:	b2a4      	uxth	r4, r4
 8000530:	fbb3 f1f8 	udiv	r1, r3, r8
 8000534:	fb08 3311 	mls	r3, r8, r1, r3
 8000538:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800053c:	fb01 f307 	mul.w	r3, r1, r7
 8000540:	42a3      	cmp	r3, r4
 8000542:	d908      	bls.n	8000556 <__udivmoddi4+0x276>
 8000544:	eb1c 0404 	adds.w	r4, ip, r4
 8000548:	f101 36ff 	add.w	r6, r1, #4294967295
 800054c:	d213      	bcs.n	8000576 <__udivmoddi4+0x296>
 800054e:	42a3      	cmp	r3, r4
 8000550:	d911      	bls.n	8000576 <__udivmoddi4+0x296>
 8000552:	3902      	subs	r1, #2
 8000554:	4464      	add	r4, ip
 8000556:	1ae4      	subs	r4, r4, r3
 8000558:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800055c:	e739      	b.n	80003d2 <__udivmoddi4+0xf2>
 800055e:	4604      	mov	r4, r0
 8000560:	e6f0      	b.n	8000344 <__udivmoddi4+0x64>
 8000562:	4608      	mov	r0, r1
 8000564:	e706      	b.n	8000374 <__udivmoddi4+0x94>
 8000566:	45c8      	cmp	r8, r9
 8000568:	d2ae      	bcs.n	80004c8 <__udivmoddi4+0x1e8>
 800056a:	ebb9 0e02 	subs.w	lr, r9, r2
 800056e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000572:	3801      	subs	r0, #1
 8000574:	e7a8      	b.n	80004c8 <__udivmoddi4+0x1e8>
 8000576:	4631      	mov	r1, r6
 8000578:	e7ed      	b.n	8000556 <__udivmoddi4+0x276>
 800057a:	4603      	mov	r3, r0
 800057c:	e799      	b.n	80004b2 <__udivmoddi4+0x1d2>
 800057e:	4630      	mov	r0, r6
 8000580:	e7d4      	b.n	800052c <__udivmoddi4+0x24c>
 8000582:	46d6      	mov	lr, sl
 8000584:	e77f      	b.n	8000486 <__udivmoddi4+0x1a6>
 8000586:	4463      	add	r3, ip
 8000588:	3802      	subs	r0, #2
 800058a:	e74d      	b.n	8000428 <__udivmoddi4+0x148>
 800058c:	4606      	mov	r6, r0
 800058e:	4623      	mov	r3, r4
 8000590:	4608      	mov	r0, r1
 8000592:	e70f      	b.n	80003b4 <__udivmoddi4+0xd4>
 8000594:	3e02      	subs	r6, #2
 8000596:	4463      	add	r3, ip
 8000598:	e730      	b.n	80003fc <__udivmoddi4+0x11c>
 800059a:	bf00      	nop

0800059c <__aeabi_idiv0>:
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop

080005a0 <vApplicationIdleHook>:
   specified, or call vTaskDelay()). If the application makes use of the
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
   vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80005a0:	4901      	ldr	r1, [pc, #4]	@ (80005a8 <vApplicationIdleHook+0x8>)
 80005a2:	2000      	movs	r0, #0
 80005a4:	f009 ba02 	b.w	80099ac <vTaskSetApplicationTaskTag>
 80005a8:	08001821 	.word	0x08001821

080005ac <_Z26Bluetooth_Receive_CallbackPht>:
/* USER CODE END MX_GPIO_Init_2 */
}

/* USER CODE BEGIN 4 */
char rx_data[256];
void Bluetooth_Receive_Callback(uint8_t* data, uint16_t size) {
 80005ac:	b508      	push	{r3, lr}
	if(bt.rx_buffer[0]=='\0'){
 80005ae:	4b09      	ldr	r3, [pc, #36]	@ (80005d4 <_Z26Bluetooth_Receive_CallbackPht+0x28>)
 80005b0:	791a      	ldrb	r2, [r3, #4]
 80005b2:	b90a      	cbnz	r2, 80005b8 <_Z26Bluetooth_Receive_CallbackPht+0xc>
		bt.rx_buffer[0]= bt.rx_buffer[8];
 80005b4:	7b1a      	ldrb	r2, [r3, #12]
 80005b6:	711a      	strb	r2, [r3, #4]
	}
	strncpy(rx_data,(char*)bt.rx_buffer,8);
 80005b8:	2208      	movs	r2, #8
 80005ba:	4907      	ldr	r1, [pc, #28]	@ (80005d8 <_Z26Bluetooth_Receive_CallbackPht+0x2c>)
 80005bc:	4807      	ldr	r0, [pc, #28]	@ (80005dc <_Z26Bluetooth_Receive_CallbackPht+0x30>)
 80005be:	f01e fb6f 	bl	801eca0 <strncpy>
    //Bluetooth_write_data(&bt, data, size);
	memset(bt.rx_buffer,0,256);
 80005c2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80005c6:	2100      	movs	r1, #0
 80005c8:	4803      	ldr	r0, [pc, #12]	@ (80005d8 <_Z26Bluetooth_Receive_CallbackPht+0x2c>)
}
 80005ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	memset(bt.rx_buffer,0,256);
 80005ce:	f01e bb4d 	b.w	801ec6c <memset>
 80005d2:	bf00      	nop
 80005d4:	20001cf4 	.word	0x20001cf4
 80005d8:	20001cf8 	.word	0x20001cf8
 80005dc:	20000140 	.word	0x20000140

080005e0 <_Z16StartDefaultTaskPv>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80005e0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
	  osDelay(100);
 80005e2:	2064      	movs	r0, #100	@ 0x64
 80005e4:	f007 fbf4 	bl	8007dd0 <osDelay>
  for(;;)
 80005e8:	e7fb      	b.n	80005e2 <_Z16StartDefaultTaskPv+0x2>
	...

080005ec <_Z8BLE_TaskPv>:
	Bluetooth_init(&bt, &huart7, Bluetooth_Receive_Callback, Bluetooth_Transmit_Callback);

  for(;;)
  {

	  HAL_UART_Receive_IT(&huart7, (uint8_t *)&bt.rx_buffer[bt.rx_index], 1);
 80005ec:	4c0a      	ldr	r4, [pc, #40]	@ (8000618 <_Z8BLE_TaskPv+0x2c>)
 80005ee:	4d0b      	ldr	r5, [pc, #44]	@ (800061c <_Z8BLE_TaskPv+0x30>)
	Bluetooth_init(&bt, &huart7, Bluetooth_Receive_Callback, Bluetooth_Transmit_Callback);
 80005f0:	4a0b      	ldr	r2, [pc, #44]	@ (8000620 <_Z8BLE_TaskPv+0x34>)
 80005f2:	490a      	ldr	r1, [pc, #40]	@ (800061c <_Z8BLE_TaskPv+0x30>)
 80005f4:	4808      	ldr	r0, [pc, #32]	@ (8000618 <_Z8BLE_TaskPv+0x2c>)
{
 80005f6:	b508      	push	{r3, lr}
	Bluetooth_init(&bt, &huart7, Bluetooth_Receive_Callback, Bluetooth_Transmit_Callback);
 80005f8:	4b0a      	ldr	r3, [pc, #40]	@ (8000624 <_Z8BLE_TaskPv+0x38>)
 80005fa:	f003 fef9 	bl	80043f0 <Bluetooth_init>
	  HAL_UART_Receive_IT(&huart7, (uint8_t *)&bt.rx_buffer[bt.rx_index], 1);
 80005fe:	f8b4 1104 	ldrh.w	r1, [r4, #260]	@ 0x104
 8000602:	2201      	movs	r2, #1
 8000604:	4628      	mov	r0, r5
 8000606:	3104      	adds	r1, #4
 8000608:	4421      	add	r1, r4
 800060a:	f007 faab 	bl	8007b64 <HAL_UART_Receive_IT>
    osDelay(25);
 800060e:	2019      	movs	r0, #25
 8000610:	f007 fbde 	bl	8007dd0 <osDelay>
  for(;;)
 8000614:	e7f3      	b.n	80005fe <_Z8BLE_TaskPv+0x12>
 8000616:	bf00      	nop
 8000618:	20001cf4 	.word	0x20001cf4
 800061c:	20000294 	.word	0x20000294
 8000620:	080005ad 	.word	0x080005ad
 8000624:	08000629 	.word	0x08000629

08000628 <_Z27Bluetooth_Transmit_Callbackv>:
void Bluetooth_Transmit_Callback(void) {
 8000628:	4770      	bx	lr
	...

0800062c <_Z18SystemClock_Configv>:
{
 800062c:	b510      	push	{r4, lr}
 800062e:	b094      	sub	sp, #80	@ 0x50
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000630:	2210      	movs	r2, #16
 8000632:	2100      	movs	r1, #0
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000634:	2402      	movs	r4, #2
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000636:	a80a      	add	r0, sp, #40	@ 0x28
 8000638:	f01e fb18 	bl	801ec6c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800063c:	2214      	movs	r2, #20
 800063e:	2100      	movs	r1, #0
 8000640:	a803      	add	r0, sp, #12
 8000642:	f01e fb13 	bl	801ec6c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8000646:	4b1d      	ldr	r3, [pc, #116]	@ (80006bc <_Z18SystemClock_Configv+0x90>)
  RCC_OscInitStruct.PLL.PLLN = 432;
 8000648:	2119      	movs	r1, #25
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800064a:	a808      	add	r0, sp, #32
  __HAL_RCC_PWR_CLK_ENABLE();
 800064c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800064e:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000652:	641a      	str	r2, [r3, #64]	@ 0x40
 8000654:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000656:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800065a:	9301      	str	r3, [sp, #4]
 800065c:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800065e:	4b18      	ldr	r3, [pc, #96]	@ (80006c0 <_Z18SystemClock_Configv+0x94>)
 8000660:	681a      	ldr	r2, [r3, #0]
 8000662:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8000666:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000668:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000670:	9302      	str	r3, [sp, #8]
 8000672:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000674:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000678:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800067c:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8000680:	e9cd 430e 	strd	r4, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 432;
 8000684:	f44f 73d8 	mov.w	r3, #432	@ 0x1b0
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000688:	e9cd 4412 	strd	r4, r4, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLN = 432;
 800068c:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000690:	f005 fe50 	bl	8006334 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000694:	f005 faec 	bl	8005c70 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000698:	230f      	movs	r3, #15
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800069a:	2000      	movs	r0, #0
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 800069c:	2107      	movs	r1, #7
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800069e:	e9cd 3403 	strd	r3, r4, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80006a2:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80006a6:	e9cd 0305 	strd	r0, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80006aa:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80006ae:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80006b0:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80006b2:	f006 f827 	bl	8006704 <HAL_RCC_ClockConfig>
}
 80006b6:	b014      	add	sp, #80	@ 0x50
 80006b8:	bd10      	pop	{r4, pc}
 80006ba:	bf00      	nop
 80006bc:	40023800 	.word	0x40023800
 80006c0:	40007000 	.word	0x40007000

080006c4 <main>:
{
 80006c4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80006c8:	b09b      	sub	sp, #108	@ 0x6c

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006ca:	2210      	movs	r2, #16
 80006cc:	2100      	movs	r1, #0
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80006ce:	2501      	movs	r5, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006d0:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006d2:	f04f 4a10 	mov.w	sl, #2415919104	@ 0x90000000
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006d6:	f01e fac9 	bl	801ec6c <memset>
  MPU_InitStruct.SubRegionDisable = 0x0;
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 80006da:	2400      	movs	r4, #0
  HAL_MPU_Disable();
 80006dc:	f004 fa1c 	bl	8004b18 <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006e0:	4bc7      	ldr	r3, [pc, #796]	@ (8000a00 <main+0x33c>)
  MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006e2:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80006e4:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 80006e8:	9410      	str	r4, [sp, #64]	@ 0x40
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006ea:	e9cd a30e 	strd	sl, r3, [sp, #56]	@ 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006ee:	f004 fa31 	bl	8004b54 <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 80006f2:	2317      	movs	r3, #23
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006f4:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 80006f6:	f88d 5035 	strb.w	r5, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 80006fa:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 80006fe:	f88d 5042 	strb.w	r5, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000702:	f004 fa27 	bl	8004b54 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 8000706:	2004      	movs	r0, #4
 8000708:	f004 fa14 	bl	8004b34 <HAL_MPU_Enable>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800070c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000710:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000714:	4abb      	ldr	r2, [pc, #748]	@ (8000a04 <main+0x340>)
 8000716:	f8c2 4250 	str.w	r4, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800071a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800071e:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000722:	6953      	ldr	r3, [r2, #20]
 8000724:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000728:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800072a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800072e:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8000732:	f8c2 4084 	str.w	r4, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8000736:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 800073a:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800073e:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000742:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8000746:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800074a:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800074c:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000750:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000752:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8000756:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000758:	f8c2 5260 	str.w	r5, [r2, #608]	@ 0x260
      } while (ways-- != 0U);
 800075c:	d2f9      	bcs.n	8000752 <main+0x8e>
    } while(sets-- != 0U);
 800075e:	3b20      	subs	r3, #32
 8000760:	f113 0f20 	cmn.w	r3, #32
 8000764:	d1f2      	bne.n	800074c <main+0x88>
 8000766:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 800076a:	6953      	ldr	r3, [r2, #20]
 800076c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000770:	6153      	str	r3, [r2, #20]
 8000772:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000776:	f3bf 8f6f 	isb	sy
  HAL_Init();
 800077a:	f004 f933 	bl	80049e4 <HAL_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800077e:	2400      	movs	r4, #0
  SystemClock_Config();
 8000780:	f7ff ff54 	bl	800062c <_Z18SystemClock_Configv>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000784:	2214      	movs	r2, #20
 8000786:	2100      	movs	r1, #0
 8000788:	a80d      	add	r0, sp, #52	@ 0x34
 800078a:	f01e fa6f 	bl	801ec6c <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800078e:	4b9e      	ldr	r3, [pc, #632]	@ (8000a08 <main+0x344>)
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000790:	2110      	movs	r1, #16
 8000792:	489e      	ldr	r0, [pc, #632]	@ (8000a0c <main+0x348>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000794:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000796:	2701      	movs	r7, #1
 8000798:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800079c:	f04f 0b03 	mov.w	fp, #3
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007a0:	f042 0210 	orr.w	r2, r2, #16
  GPIO_InitStruct.Pin = LCD_DISP_Pin;
 80007a4:	f44f 5a80 	mov.w	sl, #4096	@ 0x1000
  hdma2d.Instance = DMA2D;
 80007a8:	4d99      	ldr	r5, [pc, #612]	@ (8000a10 <main+0x34c>)
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80007aa:	f04f 0904 	mov.w	r9, #4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007ae:	631a      	str	r2, [r3, #48]	@ 0x30
 80007b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80007b2:	4e98      	ldr	r6, [pc, #608]	@ (8000a14 <main+0x350>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007b4:	f002 0210 	and.w	r2, r2, #16
 80007b8:	9202      	str	r2, [sp, #8]
 80007ba:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80007bc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007be:	f042 0202 	orr.w	r2, r2, #2
 80007c2:	631a      	str	r2, [r3, #48]	@ 0x30
 80007c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007c6:	f002 0202 	and.w	r2, r2, #2
 80007ca:	9203      	str	r2, [sp, #12]
 80007cc:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80007ce:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007d0:	f042 0201 	orr.w	r2, r2, #1
 80007d4:	631a      	str	r2, [r3, #48]	@ 0x30
 80007d6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007d8:	f002 0201 	and.w	r2, r2, #1
 80007dc:	9204      	str	r2, [sp, #16]
 80007de:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80007e0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007e2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80007e6:	631a      	str	r2, [r3, #48]	@ 0x30
 80007e8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007ea:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80007ee:	9205      	str	r2, [sp, #20]
 80007f0:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80007f2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007f4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80007f8:	631a      	str	r2, [r3, #48]	@ 0x30
 80007fa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007fc:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 8000800:	9206      	str	r2, [sp, #24]
 8000802:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000804:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000806:	f042 0208 	orr.w	r2, r2, #8
 800080a:	631a      	str	r2, [r3, #48]	@ 0x30
 800080c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800080e:	f002 0208 	and.w	r2, r2, #8
 8000812:	9207      	str	r2, [sp, #28]
 8000814:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8000816:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000818:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800081c:	631a      	str	r2, [r3, #48]	@ 0x30
 800081e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000820:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
 8000824:	9208      	str	r2, [sp, #32]
 8000826:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000828:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800082a:	f042 0220 	orr.w	r2, r2, #32
 800082e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000830:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000832:	f002 0220 	and.w	r2, r2, #32
 8000836:	9209      	str	r2, [sp, #36]	@ 0x24
 8000838:	9a09      	ldr	r2, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800083a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800083c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000840:	631a      	str	r2, [r3, #48]	@ 0x30
 8000842:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000844:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8000848:	920a      	str	r2, [sp, #40]	@ 0x28
 800084a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800084c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800084e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000852:	631a      	str	r2, [r3, #48]	@ 0x30
 8000854:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000856:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 800085a:	920b      	str	r2, [sp, #44]	@ 0x2c
 800085c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800085e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000860:	f042 0204 	orr.w	r2, r2, #4
 8000864:	631a      	str	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000866:	2200      	movs	r2, #0
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000868:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800086a:	f003 0304 	and.w	r3, r3, #4
 800086e:	930c      	str	r3, [sp, #48]	@ 0x30
 8000870:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000872:	f004 fccd 	bl	8005210 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000876:	2201      	movs	r2, #1
 8000878:	2108      	movs	r1, #8
 800087a:	4867      	ldr	r0, [pc, #412]	@ (8000a18 <main+0x354>)
 800087c:	f004 fcc8 	bl	8005210 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 8000880:	2201      	movs	r2, #1
 8000882:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000886:	4865      	ldr	r0, [pc, #404]	@ (8000a1c <main+0x358>)
 8000888:	f004 fcc2 	bl	8005210 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 800088c:	2200      	movs	r2, #0
 800088e:	21c0      	movs	r1, #192	@ 0xc0
 8000890:	4863      	ldr	r0, [pc, #396]	@ (8000a20 <main+0x35c>)
 8000892:	f004 fcbd 	bl	8005210 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000896:	2200      	movs	r2, #0
 8000898:	2140      	movs	r1, #64	@ 0x40
 800089a:	4862      	ldr	r0, [pc, #392]	@ (8000a24 <main+0x360>)
 800089c:	f004 fcb8 	bl	8005210 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80008a0:	a90d      	add	r1, sp, #52	@ 0x34
 80008a2:	485a      	ldr	r0, [pc, #360]	@ (8000a0c <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008a4:	e9cd 870d 	strd	r8, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008a8:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80008ac:	f004 fb2c 	bl	8004f08 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 80008b0:	2308      	movs	r3, #8
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80008b2:	a90d      	add	r1, sp, #52	@ 0x34
 80008b4:	4858      	ldr	r0, [pc, #352]	@ (8000a18 <main+0x354>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008b6:	e9cd 370d 	strd	r3, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008ba:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80008be:	f004 fb23 	bl	8004f08 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 80008c2:	a90d      	add	r1, sp, #52	@ 0x34
 80008c4:	4855      	ldr	r0, [pc, #340]	@ (8000a1c <main+0x358>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008c6:	e9cd a70d 	strd	sl, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008ca:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 80008ce:	f004 fb1b 	bl	8004f08 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
 80008d2:	22c0      	movs	r2, #192	@ 0xc0
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80008d4:	a90d      	add	r1, sp, #52	@ 0x34
 80008d6:	4852      	ldr	r0, [pc, #328]	@ (8000a20 <main+0x35c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008d8:	e9cd 270d 	strd	r2, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008dc:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80008e0:	f004 fb12 	bl	8004f08 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
 80008e4:	2240      	movs	r2, #64	@ 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80008e6:	a90d      	add	r1, sp, #52	@ 0x34
 80008e8:	484e      	ldr	r0, [pc, #312]	@ (8000a24 <main+0x360>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008ea:	e9cd 270d 	strd	r2, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008ee:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80008f2:	f004 fb09 	bl	8004f08 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80008f6:	484c      	ldr	r0, [pc, #304]	@ (8000a28 <main+0x364>)
 80008f8:	494c      	ldr	r1, [pc, #304]	@ (8000a2c <main+0x368>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 80008fa:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
 80008fc:	6001      	str	r1, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80008fe:	6207      	str	r7, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000900:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000904:	f004 f952 	bl	8004bac <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8000908:	4949      	ldr	r1, [pc, #292]	@ (8000a30 <main+0x36c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800090a:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 800090c:	e9c5 1400 	strd	r1, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8000910:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8000914:	e9c5 440a 	strd	r4, r4, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000918:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800091c:	f004 f9f5 	bl	8004d0a <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000920:	4639      	mov	r1, r7
 8000922:	4628      	mov	r0, r5
    Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8000924:	4d43      	ldr	r5, [pc, #268]	@ (8000a34 <main+0x370>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000926:	f004 faa9 	bl	8004e7c <HAL_DMA2D_ConfigLayer>
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800092a:	2340      	movs	r3, #64	@ 0x40
 800092c:	f44f 72c0 	mov.w	r2, #384	@ 0x180
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000930:	4941      	ldr	r1, [pc, #260]	@ (8000a38 <main+0x374>)
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000932:	4630      	mov	r0, r6
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000934:	60b4      	str	r4, [r6, #8]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000936:	61f4      	str	r4, [r6, #28]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 8000938:	62b4      	str	r4, [r6, #40]	@ 0x28
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800093a:	e9c6 3205 	strd	r3, r2, [r6, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800093e:	f44f 6200 	mov.w	r2, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8000942:	e9c6 2a08 	strd	r2, sl, [r6, #32]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000946:	f04f 0a02 	mov.w	sl, #2
 800094a:	2207      	movs	r2, #7
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 800094c:	e9c6 1400 	strd	r1, r4, [r6]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000950:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.RCDDelay = 2;
 8000952:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000956:	e9c6 9803 	strd	r9, r8, [r6, #12]
  SdramTiming.RowCycleDelay = 7;
 800095a:	e9cd 920f 	strd	r9, r2, [sp, #60]	@ 0x3c
  SdramTiming.ExitSelfRefreshDelay = 7;
 800095e:	e9cd a20d 	strd	sl, r2, [sp, #52]	@ 0x34
  SdramTiming.RPDelay = 2;
 8000962:	e9cd ba11 	strd	fp, sl, [sp, #68]	@ 0x44
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000966:	f006 fa33 	bl	8006dd0 <HAL_SDRAM_Init>
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800096a:	4629      	mov	r1, r5
 800096c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000970:	4630      	mov	r0, r6
  __IO uint32_t tmpmrd = 0;
 8000972:	9401      	str	r4, [sp, #4]
    Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK1;
 8000974:	e9c5 7800 	strd	r7, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 8000978:	e9c5 7402 	strd	r7, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800097c:	f006 fa48 	bl	8006e10 <HAL_SDRAM_SendCommand>
    HAL_Delay(1);
 8000980:	4638      	mov	r0, r7
 8000982:	f004 f853 	bl	8004a2c <HAL_Delay>
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000986:	4629      	mov	r1, r5
 8000988:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800098c:	4630      	mov	r0, r6
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800098e:	e9c5 a800 	strd	sl, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 8000992:	e9c5 7402 	strd	r7, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000996:	f006 fa3b 	bl	8006e10 <HAL_SDRAM_SendCommand>
    Command.AutoRefreshNumber      = 8;
 800099a:	2308      	movs	r3, #8
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800099c:	4629      	mov	r1, r5
 800099e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80009a2:	4630      	mov	r0, r6
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80009a4:	e9c5 b800 	strd	fp, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 80009a8:	e9c5 3402 	strd	r3, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009ac:	f006 fa30 	bl	8006e10 <HAL_SDRAM_SendCommand>
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 80009b0:	f44f 730c 	mov.w	r3, #560	@ 0x230
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009b4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80009b8:	4629      	mov	r1, r5
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 80009ba:	9301      	str	r3, [sp, #4]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009bc:	4630      	mov	r0, r6
    Command.ModeRegisterDefinition = tmpmrd;
 80009be:	9b01      	ldr	r3, [sp, #4]
    Command.AutoRefreshNumber      = 1;
 80009c0:	60af      	str	r7, [r5, #8]
    Command.ModeRegisterDefinition = tmpmrd;
 80009c2:	60eb      	str	r3, [r5, #12]
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80009c4:	e9c5 9800 	strd	r9, r8, [r5]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009c8:	f006 fa22 	bl	8006e10 <HAL_SDRAM_SendCommand>
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 80009cc:	f240 712b 	movw	r1, #1835	@ 0x72b
 80009d0:	4630      	mov	r0, r6
  hi2c3.Instance = I2C3;
 80009d2:	4d1a      	ldr	r5, [pc, #104]	@ (8000a3c <main+0x378>)
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 80009d4:	f006 fa3b 	bl	8006e4e <HAL_SDRAM_ProgramRefreshRate>
    FMC_Bank1->BTCR[0] = 0x000030D2;
 80009d8:	f04f 4320 	mov.w	r3, #2684354560	@ 0xa0000000
 80009dc:	f243 02d2 	movw	r2, #12498	@ 0x30d2
  HAL_Delay(100); //Delay to fix initialization issue on some boards 
 80009e0:	2064      	movs	r0, #100	@ 0x64
  hltdc.Init.AccumulatedActiveH = 283;
 80009e2:	f240 2615 	movw	r6, #533	@ 0x215
    FMC_Bank1->BTCR[0] = 0x000030D2;
 80009e6:	601a      	str	r2, [r3, #0]
  HAL_Delay(100); //Delay to fix initialization issue on some boards 
 80009e8:	f004 f820 	bl	8004a2c <HAL_Delay>
  hi2c3.Init.Timing = 0x20404768;
 80009ec:	4b14      	ldr	r3, [pc, #80]	@ (8000a40 <main+0x37c>)
 80009ee:	4a15      	ldr	r2, [pc, #84]	@ (8000a44 <main+0x380>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80009f0:	4628      	mov	r0, r5
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80009f2:	622c      	str	r4, [r5, #32]
  hi2c3.Init.Timing = 0x20404768;
 80009f4:	e9c5 2300 	strd	r2, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80009f8:	e9c5 4702 	strd	r4, r7, [r5, #8]
 80009fc:	e024      	b.n	8000a48 <main+0x384>
 80009fe:	bf00      	nop
 8000a00:	0300001b 	.word	0x0300001b
 8000a04:	e000ed00 	.word	0xe000ed00
 8000a08:	40023800 	.word	0x40023800
 8000a0c:	40020400 	.word	0x40020400
 8000a10:	20000464 	.word	0x20000464
 8000a14:	20000260 	.word	0x20000260
 8000a18:	40022800 	.word	0x40022800
 8000a1c:	40022000 	.word	0x40022000
 8000a20:	40020800 	.word	0x40020800
 8000a24:	40021800 	.word	0x40021800
 8000a28:	200004a4 	.word	0x200004a4
 8000a2c:	40023000 	.word	0x40023000
 8000a30:	4002b000 	.word	0x4002b000
 8000a34:	20000240 	.word	0x20000240
 8000a38:	a0000140 	.word	0xa0000140
 8000a3c:	20000410 	.word	0x20000410
 8000a40:	20404768 	.word	0x20404768
 8000a44:	40005c00 	.word	0x40005c00
  hi2c3.Init.OwnAddress2 = 0;
 8000a48:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000a4c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000a50:	f004 fd06 	bl	8005460 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000a54:	4621      	mov	r1, r4
 8000a56:	4628      	mov	r0, r5
 8000a58:	f004 ff24 	bl	80058a4 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000a5c:	4621      	mov	r1, r4
 8000a5e:	4628      	mov	r0, r5
  hltdc.Instance = LTDC;
 8000a60:	4d4a      	ldr	r5, [pc, #296]	@ (8000b8c <main+0x4c8>)
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000a62:	f004 ff45 	bl	80058f0 <HAL_I2CEx_ConfigDigitalFilter>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000a66:	2234      	movs	r2, #52	@ 0x34
 8000a68:	4621      	mov	r1, r4
 8000a6a:	eb0d 0002 	add.w	r0, sp, r2
 8000a6e:	f01e f8fd 	bl	801ec6c <memset>
  hltdc.Instance = LTDC;
 8000a72:	4b47      	ldr	r3, [pc, #284]	@ (8000b90 <main+0x4cc>)
  hltdc.Init.VerticalSync = 9;
 8000a74:	2128      	movs	r1, #40	@ 0x28
  hltdc.Init.AccumulatedVBP = 11;
 8000a76:	2035      	movs	r0, #53	@ 0x35
  hltdc.Init.TotalHeigh = 285;
 8000a78:	f240 2c35 	movw	ip, #565	@ 0x235
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000a7c:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Blue = 0;
 8000a7e:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8000a80:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000a84:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.VerticalSync = 9;
 8000a88:	2309      	movs	r3, #9
 8000a8a:	e9c5 1305 	strd	r1, r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
 8000a8e:	230b      	movs	r3, #11
 8000a90:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
 8000a94:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000a98:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
 8000a9a:	e9c5 6309 	strd	r6, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
 8000a9e:	f240 131d 	movw	r3, #285	@ 0x11d
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000aa2:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.TotalHeigh = 285;
 8000aa6:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000aaa:	f004 ffcd 	bl	8005a48 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8000aae:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ab0:	f44f 6e80 	mov.w	lr, #1024	@ 0x400
  pLayerCfg.WindowX1 = 480;
 8000ab4:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  pLayerCfg.WindowY1 = 272;
 8000ab8:	f44f 7388 	mov.w	r3, #272	@ 0x110
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000abc:	4628      	mov	r0, r5
  pLayerCfg.WindowX0 = 0;
 8000abe:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.ImageHeight = 272;
 8000ac0:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000ac2:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8000ac6:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  pLayerCfg.Alpha0 = 0;
 8000aca:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ace:	2105      	movs	r1, #5
 8000ad0:	e9cd e114 	strd	lr, r1, [sp, #80]	@ 0x50
  pLayerCfg.FBStartAdress = 0xC0000000;
 8000ad4:	f04f 4140 	mov.w	r1, #3221225472	@ 0xc0000000
  pLayerCfg.WindowY0 = 0;
 8000ad8:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.ImageWidth = 480;
 8000adc:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ae0:	4622      	mov	r2, r4
 8000ae2:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000ae4:	e9cd 3a10 	strd	r3, sl, [sp, #64]	@ 0x40
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ae8:	f005 f879 	bl	8005bde <HAL_LTDC_ConfigLayer>
  hqspi.Instance = QUADSPI;
 8000aec:	4829      	ldr	r0, [pc, #164]	@ (8000b94 <main+0x4d0>)
 8000aee:	4b2a      	ldr	r3, [pc, #168]	@ (8000b98 <main+0x4d4>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8000af0:	6204      	str	r4, [r0, #32]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8000af2:	e9c0 9802 	strd	r9, r8, [r0, #8]
  hqspi.Init.ClockPrescaler = 1;
 8000af6:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 8000afa:	f04f 0818 	mov.w	r8, #24
 8000afe:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
  huart7.Init.BaudRate = 115200;
 8000b02:	f8df 90c8 	ldr.w	r9, [pc, #200]	@ 8000bcc <main+0x508>
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 8000b06:	e9c0 8304 	strd	r8, r3, [r0, #16]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8000b0a:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8000b0e:	f005 f9c9 	bl	8005ea4 <HAL_QSPI_Init>
  BSP_QSPI_Init();
 8000b12:	f003 fde7 	bl	80046e4 <BSP_QSPI_Init>
  BSP_QSPI_MemoryMappedMode();
 8000b16:	f003 fd2d 	bl	8004574 <BSP_QSPI_EnableMemoryMappedMode>
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8000b1a:	205c      	movs	r0, #92	@ 0x5c
 8000b1c:	f003 ffea 	bl	8004af4 <HAL_NVIC_DisableIRQ>
  MX_LIBJPEG_Init();
 8000b20:	f000 fbfe 	bl	8001320 <MX_LIBJPEG_Init>
  huart7.Instance = UART7;
 8000b24:	481d      	ldr	r0, [pc, #116]	@ (8000b9c <main+0x4d8>)
  huart7.Init.BaudRate = 115200;
 8000b26:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
  huart7.Init.Parity = UART_PARITY_NONE;
 8000b2a:	6104      	str	r4, [r0, #16]
  huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000b2c:	6244      	str	r4, [r0, #36]	@ 0x24
  huart7.Init.BaudRate = 115200;
 8000b2e:	e9c0 9300 	strd	r9, r3, [r0]
  huart7.Init.Mode = UART_MODE_TX_RX;
 8000b32:	230c      	movs	r3, #12
  huart7.Init.StopBits = UART_STOPBITS_1;
 8000b34:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000b38:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000b3c:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_UART_Init(&huart7) != HAL_OK)
 8000b40:	f006 ff88 	bl	8007a54 <HAL_UART_Init>
  MX_TouchGFX_Init();
 8000b44:	f000 fc18 	bl	8001378 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000b48:	f000 fc15 	bl	8001376 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8000b4c:	f007 f8b2 	bl	8007cb4 <osKernelInitialize>
  bluMutexHandle = osMutexNew(&bluMutex_attributes);
 8000b50:	4813      	ldr	r0, [pc, #76]	@ (8000ba0 <main+0x4dc>)
 8000b52:	f007 f955 	bl	8007e00 <osMutexNew>
 8000b56:	4b13      	ldr	r3, [pc, #76]	@ (8000ba4 <main+0x4e0>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b58:	4a13      	ldr	r2, [pc, #76]	@ (8000ba8 <main+0x4e4>)
 8000b5a:	4621      	mov	r1, r4
  bluMutexHandle = osMutexNew(&bluMutex_attributes);
 8000b5c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b5e:	4813      	ldr	r0, [pc, #76]	@ (8000bac <main+0x4e8>)
 8000b60:	f007 f8e2 	bl	8007d28 <osThreadNew>
 8000b64:	4b12      	ldr	r3, [pc, #72]	@ (8000bb0 <main+0x4ec>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b66:	4a13      	ldr	r2, [pc, #76]	@ (8000bb4 <main+0x4f0>)
 8000b68:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b6a:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b6c:	4812      	ldr	r0, [pc, #72]	@ (8000bb8 <main+0x4f4>)
 8000b6e:	f007 f8db 	bl	8007d28 <osThreadNew>
 8000b72:	4b12      	ldr	r3, [pc, #72]	@ (8000bbc <main+0x4f8>)
  Bluethooth_taskHandle = osThreadNew(BLE_Task, NULL, &Bluethooth_task_attributes);
 8000b74:	4a12      	ldr	r2, [pc, #72]	@ (8000bc0 <main+0x4fc>)
 8000b76:	4621      	mov	r1, r4
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b78:	6018      	str	r0, [r3, #0]
  Bluethooth_taskHandle = osThreadNew(BLE_Task, NULL, &Bluethooth_task_attributes);
 8000b7a:	4812      	ldr	r0, [pc, #72]	@ (8000bc4 <main+0x500>)
 8000b7c:	f007 f8d4 	bl	8007d28 <osThreadNew>
 8000b80:	4b11      	ldr	r3, [pc, #68]	@ (8000bc8 <main+0x504>)
 8000b82:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8000b84:	f007 f8b0 	bl	8007ce8 <osKernelStart>
  while (1)
 8000b88:	e7fe      	b.n	8000b88 <main+0x4c4>
 8000b8a:	bf00      	nop
 8000b8c:	20000368 	.word	0x20000368
 8000b90:	40016800 	.word	0x40016800
 8000b94:	2000031c 	.word	0x2000031c
 8000b98:	a0001000 	.word	0xa0001000
 8000b9c:	20000294 	.word	0x20000294
 8000ba0:	0801f850 	.word	0x0801f850
 8000ba4:	20000250 	.word	0x20000250
 8000ba8:	0801f8a8 	.word	0x0801f8a8
 8000bac:	080005e1 	.word	0x080005e1
 8000bb0:	2000025c 	.word	0x2000025c
 8000bb4:	0801f884 	.word	0x0801f884
 8000bb8:	08001387 	.word	0x08001387
 8000bbc:	20000258 	.word	0x20000258
 8000bc0:	0801f860 	.word	0x0801f860
 8000bc4:	080005ed 	.word	0x080005ed
 8000bc8:	20000254 	.word	0x20000254
 8000bcc:	40007800 	.word	0x40007800

08000bd0 <HAL_UART_TxCpltCallback>:
    if (huart->Instance == UART7) {
 8000bd0:	6802      	ldr	r2, [r0, #0]
 8000bd2:	4b06      	ldr	r3, [pc, #24]	@ (8000bec <HAL_UART_TxCpltCallback+0x1c>)
 8000bd4:	429a      	cmp	r2, r3
 8000bd6:	d107      	bne.n	8000be8 <HAL_UART_TxCpltCallback+0x18>
        bt.tx_complete = 1;
 8000bd8:	4b05      	ldr	r3, [pc, #20]	@ (8000bf0 <HAL_UART_TxCpltCallback+0x20>)
 8000bda:	2201      	movs	r2, #1
 8000bdc:	f883 2106 	strb.w	r2, [r3, #262]	@ 0x106
        if (bt.bluetooth_tx_callback) {
 8000be0:	f8d3 310c 	ldr.w	r3, [r3, #268]	@ 0x10c
 8000be4:	b103      	cbz	r3, 8000be8 <HAL_UART_TxCpltCallback+0x18>
            bt.bluetooth_tx_callback();
 8000be6:	4718      	bx	r3
}
 8000be8:	4770      	bx	lr
 8000bea:	bf00      	nop
 8000bec:	40007800 	.word	0x40007800
 8000bf0:	20001cf4 	.word	0x20001cf4

08000bf4 <HAL_UART_RxCpltCallback>:
    if (huart->Instance == UART7) {
 8000bf4:	6802      	ldr	r2, [r0, #0]
 8000bf6:	4b03      	ldr	r3, [pc, #12]	@ (8000c04 <HAL_UART_RxCpltCallback+0x10>)
 8000bf8:	429a      	cmp	r2, r3
 8000bfa:	d102      	bne.n	8000c02 <HAL_UART_RxCpltCallback+0xe>
        Bluetooth_handle_rx_interrupt(&bt);
 8000bfc:	4802      	ldr	r0, [pc, #8]	@ (8000c08 <HAL_UART_RxCpltCallback+0x14>)
 8000bfe:	f003 bc29 	b.w	8004454 <Bluetooth_handle_rx_interrupt>
}
 8000c02:	4770      	bx	lr
 8000c04:	40007800 	.word	0x40007800
 8000c08:	20001cf4 	.word	0x20001cf4

08000c0c <_Z14push_bt_buttonv>:
void push_bt_button(void){
 8000c0c:	b513      	push	{r0, r1, r4, lr}
	osStatus_t mutex_status = osMutexAcquire(bluMutexHandle, osWaitForever);
 8000c0e:	4c0c      	ldr	r4, [pc, #48]	@ (8000c40 <_Z14push_bt_buttonv+0x34>)
 8000c10:	f04f 31ff 	mov.w	r1, #4294967295
 8000c14:	6820      	ldr	r0, [r4, #0]
 8000c16:	f007 f935 	bl	8007e84 <osMutexAcquire>
	if (mutex_status == osOK){
 8000c1a:	b950      	cbnz	r0, 8000c32 <_Z14push_bt_buttonv+0x26>
	uint8_t data_[] = "Hello";
 8000c1c:	4b09      	ldr	r3, [pc, #36]	@ (8000c44 <_Z14push_bt_buttonv+0x38>)
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c1e:	2207      	movs	r2, #7
 8000c20:	4669      	mov	r1, sp
	uint8_t data_[] = "Hello";
 8000c22:	6818      	ldr	r0, [r3, #0]
 8000c24:	889b      	ldrh	r3, [r3, #4]
 8000c26:	9000      	str	r0, [sp, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c28:	4807      	ldr	r0, [pc, #28]	@ (8000c48 <_Z14push_bt_buttonv+0x3c>)
	uint8_t data_[] = "Hello";
 8000c2a:	f8ad 3004 	strh.w	r3, [sp, #4]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c2e:	f003 fc05 	bl	800443c <Bluetooth_write_data>
	 osMutexRelease(bluMutexHandle);
 8000c32:	6820      	ldr	r0, [r4, #0]
}
 8000c34:	b002      	add	sp, #8
 8000c36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	 osMutexRelease(bluMutexHandle);
 8000c3a:	f007 b953 	b.w	8007ee4 <osMutexRelease>
 8000c3e:	bf00      	nop
 8000c40:	20000250 	.word	0x20000250
 8000c44:	0801f818 	.word	0x0801f818
 8000c48:	20001cf4 	.word	0x20001cf4

08000c4c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8000c4c:	6802      	ldr	r2, [r0, #0]
 8000c4e:	4b03      	ldr	r3, [pc, #12]	@ (8000c5c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8000c50:	429a      	cmp	r2, r3
 8000c52:	d101      	bne.n	8000c58 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8000c54:	f003 bed8 	b.w	8004a08 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000c58:	4770      	bx	lr
 8000c5a:	bf00      	nop
 8000c5c:	40001000 	.word	0x40001000

08000c60 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8000c60:	4770      	bx	lr
	...

08000c64 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8000c64:	4b0d      	ldr	r3, [pc, #52]	@ (8000c9c <HAL_MspInit+0x38>)
{
 8000c66:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000c68:	210f      	movs	r1, #15
 8000c6a:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 8000c6e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000c70:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000c74:	641a      	str	r2, [r3, #64]	@ 0x40
 8000c76:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000c78:	f002 5280 	and.w	r2, r2, #268435456	@ 0x10000000
 8000c7c:	9200      	str	r2, [sp, #0]
 8000c7e:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000c80:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000c82:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8000c86:	645a      	str	r2, [r3, #68]	@ 0x44
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000c88:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000c8a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c8c:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000c90:	9301      	str	r3, [sp, #4]
 8000c92:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000c94:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000c96:	f003 beed 	b.w	8004a74 <HAL_NVIC_SetPriority>
 8000c9a:	bf00      	nop
 8000c9c:	40023800 	.word	0x40023800

08000ca0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000ca0:	6802      	ldr	r2, [r0, #0]
{
 8000ca2:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8000ca4:	4b08      	ldr	r3, [pc, #32]	@ (8000cc8 <HAL_CRC_MspInit+0x28>)
 8000ca6:	429a      	cmp	r2, r3
 8000ca8:	d10b      	bne.n	8000cc2 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000caa:	f8d3 2830 	ldr.w	r2, [r3, #2096]	@ 0x830
 8000cae:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8000cb2:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8000cb6:	631a      	str	r2, [r3, #48]	@ 0x30
 8000cb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cba:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000cbe:	9301      	str	r3, [sp, #4]
 8000cc0:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000cc2:	b002      	add	sp, #8
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop
 8000cc8:	40023000 	.word	0x40023000

08000ccc <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8000ccc:	4b0e      	ldr	r3, [pc, #56]	@ (8000d08 <HAL_DMA2D_MspInit+0x3c>)
{
 8000cce:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8000cd0:	6802      	ldr	r2, [r0, #0]
 8000cd2:	429a      	cmp	r2, r3
 8000cd4:	d115      	bne.n	8000d02 <HAL_DMA2D_MspInit+0x36>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000cd6:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000cda:	2105      	movs	r1, #5
 8000cdc:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000cde:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000ce0:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000ce4:	631a      	str	r2, [r3, #48]	@ 0x30
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000ce6:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000ce8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cea:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000cee:	9301      	str	r3, [sp, #4]
 8000cf0:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000cf2:	f003 febf 	bl	8004a74 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000cf6:	205a      	movs	r0, #90	@ 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8000cf8:	b003      	add	sp, #12
 8000cfa:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000cfe:	f003 beeb 	b.w	8004ad8 <HAL_NVIC_EnableIRQ>
}
 8000d02:	b003      	add	sp, #12
 8000d04:	f85d fb04 	ldr.w	pc, [sp], #4
 8000d08:	4002b000 	.word	0x4002b000

08000d0c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000d0c:	b510      	push	{r4, lr}
 8000d0e:	b0a8      	sub	sp, #160	@ 0xa0
 8000d10:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d12:	2214      	movs	r2, #20
 8000d14:	2100      	movs	r1, #0
 8000d16:	a802      	add	r0, sp, #8
 8000d18:	f01d ffa8 	bl	801ec6c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000d1c:	2284      	movs	r2, #132	@ 0x84
 8000d1e:	2100      	movs	r1, #0
 8000d20:	a807      	add	r0, sp, #28
 8000d22:	f01d ffa3 	bl	801ec6c <memset>
  if(hi2c->Instance==I2C3)
 8000d26:	6822      	ldr	r2, [r4, #0]
 8000d28:	4b17      	ldr	r3, [pc, #92]	@ (8000d88 <HAL_I2C_MspInit+0x7c>)
 8000d2a:	429a      	cmp	r2, r3
 8000d2c:	d12a      	bne.n	8000d84 <HAL_I2C_MspInit+0x78>

  /* USER CODE END I2C3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000d2e:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000d32:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000d34:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000d36:	f005 fdc1 	bl	80068bc <HAL_RCCEx_PeriphCLKConfig>
 8000d3a:	b108      	cbz	r0, 8000d40 <HAL_I2C_MspInit+0x34>
    {
      Error_Handler();
 8000d3c:	f7ff ff90 	bl	8000c60 <Error_Handler>
    }

    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000d40:	4c12      	ldr	r4, [pc, #72]	@ (8000d8c <HAL_I2C_MspInit+0x80>)
    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000d42:	f44f 72c0 	mov.w	r2, #384	@ 0x180
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d46:	2101      	movs	r1, #1
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000d48:	4811      	ldr	r0, [pc, #68]	@ (8000d90 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000d4a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8000d4c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000d50:	6323      	str	r3, [r4, #48]	@ 0x30
 8000d52:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8000d54:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000d58:	9300      	str	r3, [sp, #0]
 8000d5a:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000d5c:	2312      	movs	r3, #18
 8000d5e:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d62:	2303      	movs	r3, #3
 8000d64:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000d68:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000d6a:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000d6c:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000d6e:	f004 f8cb 	bl	8004f08 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8000d72:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000d74:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000d78:	6423      	str	r3, [r4, #64]	@ 0x40
 8000d7a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000d7c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000d80:	9301      	str	r3, [sp, #4]
 8000d82:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8000d84:	b028      	add	sp, #160	@ 0xa0
 8000d86:	bd10      	pop	{r4, pc}
 8000d88:	40005c00 	.word	0x40005c00
 8000d8c:	40023800 	.word	0x40023800
 8000d90:	40021c00 	.word	0x40021c00

08000d94 <HAL_I2C_MspDeInit>:
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
  if(hi2c->Instance==I2C3)
 8000d94:	6802      	ldr	r2, [r0, #0]
{
 8000d96:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C3)
 8000d98:	4b09      	ldr	r3, [pc, #36]	@ (8000dc0 <HAL_I2C_MspDeInit+0x2c>)
 8000d9a:	429a      	cmp	r2, r3
 8000d9c:	d10f      	bne.n	8000dbe <HAL_I2C_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN I2C3_MspDeInit 0 */

  /* USER CODE END I2C3_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000d9e:	4a09      	ldr	r2, [pc, #36]	@ (8000dc4 <HAL_I2C_MspDeInit+0x30>)

    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_7);
 8000da0:	2180      	movs	r1, #128	@ 0x80
 8000da2:	4809      	ldr	r0, [pc, #36]	@ (8000dc8 <HAL_I2C_MspDeInit+0x34>)
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000da4:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8000da6:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8000daa:	6413      	str	r3, [r2, #64]	@ 0x40
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_7);
 8000dac:	f004 f990 	bl	80050d0 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_8);
 8000db0:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000db4:	4804      	ldr	r0, [pc, #16]	@ (8000dc8 <HAL_I2C_MspDeInit+0x34>)
  /* USER CODE BEGIN I2C3_MspDeInit 1 */

  /* USER CODE END I2C3_MspDeInit 1 */
  }

}
 8000db6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_8);
 8000dba:	f004 b989 	b.w	80050d0 <HAL_GPIO_DeInit>
}
 8000dbe:	bd08      	pop	{r3, pc}
 8000dc0:	40005c00 	.word	0x40005c00
 8000dc4:	40023800 	.word	0x40023800
 8000dc8:	40021c00 	.word	0x40021c00

08000dcc <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000dcc:	b570      	push	{r4, r5, r6, lr}
 8000dce:	b0ac      	sub	sp, #176	@ 0xb0
 8000dd0:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000dd2:	2214      	movs	r2, #20
 8000dd4:	2100      	movs	r1, #0
 8000dd6:	a806      	add	r0, sp, #24
 8000dd8:	f01d ff48 	bl	801ec6c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000ddc:	2284      	movs	r2, #132	@ 0x84
 8000dde:	2100      	movs	r1, #0
 8000de0:	a80b      	add	r0, sp, #44	@ 0x2c
 8000de2:	f01d ff43 	bl	801ec6c <memset>
  if(hltdc->Instance==LTDC)
 8000de6:	6822      	ldr	r2, [r4, #0]
 8000de8:	4b48      	ldr	r3, [pc, #288]	@ (8000f0c <HAL_LTDC_MspInit+0x140>)
 8000dea:	429a      	cmp	r2, r3
 8000dec:	f040 808c 	bne.w	8000f08 <HAL_LTDC_MspInit+0x13c>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000df0:	2308      	movs	r3, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000df2:	2005      	movs	r0, #5
    PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV2;
    PeriphClkInitStruct.PLLSAIDivQ = 1;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000df4:	2401      	movs	r4, #1
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000df6:	930b      	str	r3, [sp, #44]	@ 0x2c
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
 8000df8:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8000dfc:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000dfe:	2302      	movs	r3, #2
 8000e00:	e9cd 3011 	strd	r3, r0, [sp, #68]	@ 0x44
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000e04:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000e08:	a80b      	add	r0, sp, #44	@ 0x2c
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000e0a:	e9cd 4315 	strd	r4, r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000e0e:	f005 fd55 	bl	80068bc <HAL_RCCEx_PeriphCLKConfig>
 8000e12:	b108      	cbz	r0, 8000e18 <HAL_LTDC_MspInit+0x4c>
    {
      Error_Handler();
 8000e14:	f7ff ff24 	bl	8000c60 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e18:	4b3d      	ldr	r3, [pc, #244]	@ (8000f10 <HAL_LTDC_MspInit+0x144>)
    PJ0     ------> LTDC_R1
    PJ1     ------> LTDC_R2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e1a:	2400      	movs	r4, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e1c:	2502      	movs	r5, #2
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000e1e:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e20:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000e22:	a906      	add	r1, sp, #24
 8000e24:	483b      	ldr	r0, [pc, #236]	@ (8000f14 <HAL_LTDC_MspInit+0x148>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e26:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8000e2a:	645a      	str	r2, [r3, #68]	@ 0x44
 8000e2c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000e2e:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8000e32:	9200      	str	r2, [sp, #0]
 8000e34:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000e36:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e38:	f042 0210 	orr.w	r2, r2, #16
 8000e3c:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e3e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e40:	f002 0210 	and.w	r2, r2, #16
 8000e44:	9201      	str	r2, [sp, #4]
 8000e46:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000e48:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e4a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000e4e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e50:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e52:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 8000e56:	9202      	str	r2, [sp, #8]
 8000e58:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOK_CLK_ENABLE();
 8000e5a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e5c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8000e60:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e62:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e64:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
 8000e68:	9203      	str	r2, [sp, #12]
 8000e6a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000e6c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e6e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8000e72:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e74:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e76:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8000e7a:	9204      	str	r2, [sp, #16]
 8000e7c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000e7e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e80:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000e84:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e88:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000e8c:	9305      	str	r3, [sp, #20]
 8000e8e:	9b05      	ldr	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e90:	2310      	movs	r3, #16
 8000e92:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e96:	e9cd 4408 	strd	r4, r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000e9a:	960a      	str	r6, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000e9c:	f004 f834 	bl	8004f08 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_11
 8000ea0:	f64e 73ff 	movw	r3, #61439	@ 0xefff
                          |GPIO_PIN_2|GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000ea4:	a906      	add	r1, sp, #24
 8000ea6:	481c      	ldr	r0, [pc, #112]	@ (8000f18 <HAL_LTDC_MspInit+0x14c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000ea8:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000eaa:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000eae:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000eb2:	f004 f829 	bl	8004f08 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4
 8000eb6:	23f7      	movs	r3, #247	@ 0xf7
                          |GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000eb8:	a906      	add	r1, sp, #24
 8000eba:	4818      	ldr	r0, [pc, #96]	@ (8000f1c <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000ebc:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ebe:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ec2:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000ec6:	f004 f81f 	bl	8004f08 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000eca:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000ece:	a906      	add	r1, sp, #24
 8000ed0:	4813      	ldr	r0, [pc, #76]	@ (8000f20 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ed2:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000ed6:	2309      	movs	r3, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ed8:	e9cd 4408 	strd	r4, r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000edc:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000ede:	f004 f813 	bl	8004f08 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_15|GPIO_PIN_14;
 8000ee2:	f44f 4346 	mov.w	r3, #50688	@ 0xc600
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000ee6:	a906      	add	r1, sp, #24
 8000ee8:	480e      	ldr	r0, [pc, #56]	@ (8000f24 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000eea:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000eec:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ef0:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000ef4:	f004 f808 	bl	8004f08 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000ef8:	2058      	movs	r0, #88	@ 0x58
 8000efa:	4622      	mov	r2, r4
 8000efc:	2105      	movs	r1, #5
 8000efe:	f003 fdb9 	bl	8004a74 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000f02:	2058      	movs	r0, #88	@ 0x58
 8000f04:	f003 fde8 	bl	8004ad8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000f08:	b02c      	add	sp, #176	@ 0xb0
 8000f0a:	bd70      	pop	{r4, r5, r6, pc}
 8000f0c:	40016800 	.word	0x40016800
 8000f10:	40023800 	.word	0x40023800
 8000f14:	40021000 	.word	0x40021000
 8000f18:	40022400 	.word	0x40022400
 8000f1c:	40022800 	.word	0x40022800
 8000f20:	40021800 	.word	0x40021800
 8000f24:	40022000 	.word	0x40022000

08000f28 <HAL_QSPI_MspInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f28:	2214      	movs	r2, #20
 8000f2a:	2100      	movs	r1, #0
{
 8000f2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f30:	b08a      	sub	sp, #40	@ 0x28
 8000f32:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f34:	eb0d 0002 	add.w	r0, sp, r2
 8000f38:	f01d fe98 	bl	801ec6c <memset>
  if(hqspi->Instance==QUADSPI)
 8000f3c:	6822      	ldr	r2, [r4, #0]
 8000f3e:	4b2c      	ldr	r3, [pc, #176]	@ (8000ff0 <HAL_QSPI_MspInit+0xc8>)
 8000f40:	429a      	cmp	r2, r3
 8000f42:	d151      	bne.n	8000fe8 <HAL_QSPI_MspInit+0xc0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000f44:	4b2b      	ldr	r3, [pc, #172]	@ (8000ff4 <HAL_QSPI_MspInit+0xcc>)
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f46:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000f48:	2403      	movs	r4, #3
 8000f4a:	2609      	movs	r6, #9
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000f4c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f4e:	f04f 0804 	mov.w	r8, #4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000f52:	a905      	add	r1, sp, #20
 8000f54:	4828      	ldr	r0, [pc, #160]	@ (8000ff8 <HAL_QSPI_MspInit+0xd0>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000f56:	f042 0202 	orr.w	r2, r2, #2

    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f5a:	2700      	movs	r7, #0
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000f5c:	639a      	str	r2, [r3, #56]	@ 0x38
 8000f5e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8000f60:	f002 0202 	and.w	r2, r2, #2
 8000f64:	9201      	str	r2, [sp, #4]
 8000f66:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000f68:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f6a:	f042 0210 	orr.w	r2, r2, #16
 8000f6e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f70:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f72:	f002 0210 	and.w	r2, r2, #16
 8000f76:	9202      	str	r2, [sp, #8]
 8000f78:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000f7a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f7c:	f042 0202 	orr.w	r2, r2, #2
 8000f80:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f82:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f84:	f002 0202 	and.w	r2, r2, #2
 8000f88:	9203      	str	r2, [sp, #12]
 8000f8a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000f8c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f8e:	f042 0208 	orr.w	r2, r2, #8
 8000f92:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f96:	f003 0308 	and.w	r3, r3, #8
 8000f9a:	9304      	str	r3, [sp, #16]
 8000f9c:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f9e:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000fa2:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000fa6:	f003 ffaf 	bl	8004f08 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8000faa:	2340      	movs	r3, #64	@ 0x40
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fac:	a905      	add	r1, sp, #20
 8000fae:	4813      	ldr	r0, [pc, #76]	@ (8000ffc <HAL_QSPI_MspInit+0xd4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fb0:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8000fb4:	230a      	movs	r3, #10
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fb6:	e9cd 7407 	strd	r7, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8000fba:	9309      	str	r3, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fbc:	f003 ffa4 	bl	8004f08 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fc0:	a905      	add	r1, sp, #20
 8000fc2:	480e      	ldr	r0, [pc, #56]	@ (8000ffc <HAL_QSPI_MspInit+0xd4>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000fc4:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fc6:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fca:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fce:	f003 ff9b 	bl	8004f08 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11;
 8000fd2:	f44f 5360 	mov.w	r3, #14336	@ 0x3800
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000fd6:	a905      	add	r1, sp, #20
 8000fd8:	4809      	ldr	r0, [pc, #36]	@ (8001000 <HAL_QSPI_MspInit+0xd8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000fda:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fdc:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fe0:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000fe4:	f003 ff90 	bl	8004f08 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8000fe8:	b00a      	add	sp, #40	@ 0x28
 8000fea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000fee:	bf00      	nop
 8000ff0:	a0001000 	.word	0xa0001000
 8000ff4:	40023800 	.word	0x40023800
 8000ff8:	40021000 	.word	0x40021000
 8000ffc:	40020400 	.word	0x40020400
 8001000:	40020c00 	.word	0x40020c00

08001004 <HAL_QSPI_MspDeInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
  if(hqspi->Instance==QUADSPI)
 8001004:	6802      	ldr	r2, [r0, #0]
{
 8001006:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001008:	4b0b      	ldr	r3, [pc, #44]	@ (8001038 <HAL_QSPI_MspDeInit+0x34>)
 800100a:	429a      	cmp	r2, r3
 800100c:	d113      	bne.n	8001036 <HAL_QSPI_MspDeInit+0x32>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 800100e:	4a0b      	ldr	r2, [pc, #44]	@ (800103c <HAL_QSPI_MspDeInit+0x38>)
    PB2     ------> QUADSPI_CLK
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 8001010:	2104      	movs	r1, #4
 8001012:	480b      	ldr	r0, [pc, #44]	@ (8001040 <HAL_QSPI_MspDeInit+0x3c>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001014:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8001016:	f023 0302 	bic.w	r3, r3, #2
 800101a:	6393      	str	r3, [r2, #56]	@ 0x38
    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 800101c:	f004 f858 	bl	80050d0 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_2);
 8001020:	2144      	movs	r1, #68	@ 0x44
 8001022:	4808      	ldr	r0, [pc, #32]	@ (8001044 <HAL_QSPI_MspDeInit+0x40>)
 8001024:	f004 f854 	bl	80050d0 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11);
 8001028:	f44f 5160 	mov.w	r1, #14336	@ 0x3800
 800102c:	4806      	ldr	r0, [pc, #24]	@ (8001048 <HAL_QSPI_MspDeInit+0x44>)
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 800102e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11);
 8001032:	f004 b84d 	b.w	80050d0 <HAL_GPIO_DeInit>
}
 8001036:	bd08      	pop	{r3, pc}
 8001038:	a0001000 	.word	0xa0001000
 800103c:	40023800 	.word	0x40023800
 8001040:	40021000 	.word	0x40021000
 8001044:	40020400 	.word	0x40020400
 8001048:	40020c00 	.word	0x40020c00

0800104c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800104c:	b510      	push	{r4, lr}
 800104e:	b0a8      	sub	sp, #160	@ 0xa0
 8001050:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001052:	2214      	movs	r2, #20
 8001054:	2100      	movs	r1, #0
 8001056:	a802      	add	r0, sp, #8
 8001058:	f01d fe08 	bl	801ec6c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800105c:	2284      	movs	r2, #132	@ 0x84
 800105e:	2100      	movs	r1, #0
 8001060:	a807      	add	r0, sp, #28
 8001062:	f01d fe03 	bl	801ec6c <memset>
  if(huart->Instance==UART7)
 8001066:	6822      	ldr	r2, [r4, #0]
 8001068:	4b17      	ldr	r3, [pc, #92]	@ (80010c8 <HAL_UART_MspInit+0x7c>)
 800106a:	429a      	cmp	r2, r3
 800106c:	d12a      	bne.n	80010c4 <HAL_UART_MspInit+0x78>

  /* USER CODE END UART7_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 800106e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001072:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 8001074:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001076:	f005 fc21 	bl	80068bc <HAL_RCCEx_PeriphCLKConfig>
 800107a:	b108      	cbz	r0, 8001080 <HAL_UART_MspInit+0x34>
    {
      Error_Handler();
 800107c:	f7ff fdf0 	bl	8000c60 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_UART7_CLK_ENABLE();
 8001080:	4b12      	ldr	r3, [pc, #72]	@ (80010cc <HAL_UART_MspInit+0x80>)
    PF6     ------> UART7_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001082:	2100      	movs	r1, #0
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001084:	4812      	ldr	r0, [pc, #72]	@ (80010d0 <HAL_UART_MspInit+0x84>)
    __HAL_RCC_UART7_CLK_ENABLE();
 8001086:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001088:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800108c:	641a      	str	r2, [r3, #64]	@ 0x40
 800108e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001090:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 8001094:	9200      	str	r2, [sp, #0]
 8001096:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001098:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800109a:	f042 0220 	orr.w	r2, r2, #32
 800109e:	631a      	str	r2, [r3, #48]	@ 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010a0:	22c0      	movs	r2, #192	@ 0xc0
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80010a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010a4:	f003 0320 	and.w	r3, r3, #32
 80010a8:	9301      	str	r3, [sp, #4]
 80010aa:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010ac:	2302      	movs	r3, #2
 80010ae:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010b2:	2303      	movs	r3, #3
 80010b4:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 80010b8:	2308      	movs	r3, #8
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80010ba:	eb0d 0103 	add.w	r1, sp, r3
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 80010be:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80010c0:	f003 ff22 	bl	8004f08 <HAL_GPIO_Init>
  /* USER CODE BEGIN UART7_MspInit 1 */

  /* USER CODE END UART7_MspInit 1 */
  }

}
 80010c4:	b028      	add	sp, #160	@ 0xa0
 80010c6:	bd10      	pop	{r4, pc}
 80010c8:	40007800 	.word	0x40007800
 80010cc:	40023800 	.word	0x40023800
 80010d0:	40021400 	.word	0x40021400

080010d4 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80010d4:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80010d6:	2300      	movs	r3, #0
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80010d8:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80010da:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80010dc:	4b29      	ldr	r3, [pc, #164]	@ (8001184 <HAL_SDRAM_MspInit+0xb0>)
 80010de:	681e      	ldr	r6, [r3, #0]
 80010e0:	2e00      	cmp	r6, #0
 80010e2:	d14d      	bne.n	8001180 <HAL_SDRAM_MspInit+0xac>
  FMC_Initialized = 1;
 80010e4:	2201      	movs	r2, #1
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010e6:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80010e8:	2503      	movs	r5, #3
 80010ea:	240c      	movs	r4, #12
  FMC_Initialized = 1;
 80010ec:	601a      	str	r2, [r3, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80010ee:	a901      	add	r1, sp, #4
  __HAL_RCC_FMC_CLK_ENABLE();
 80010f0:	4b25      	ldr	r3, [pc, #148]	@ (8001188 <HAL_SDRAM_MspInit+0xb4>)
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80010f2:	4826      	ldr	r0, [pc, #152]	@ (800118c <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80010f4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80010f6:	f042 0201 	orr.w	r2, r2, #1
 80010fa:	639a      	str	r2, [r3, #56]	@ 0x38
 80010fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80010fe:	f003 0301 	and.w	r3, r3, #1
 8001102:	9300      	str	r3, [sp, #0]
 8001104:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001106:	f64f 7383 	movw	r3, #65411	@ 0xff83
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800110a:	e9cd 5404 	strd	r5, r4, [sp, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800110e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001112:	f003 fef9 	bl	8004f08 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001116:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800111a:	a901      	add	r1, sp, #4
 800111c:	481c      	ldr	r0, [pc, #112]	@ (8001190 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800111e:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001120:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001124:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001128:	f003 feee 	bl	8004f08 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 800112c:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001130:	a901      	add	r1, sp, #4
 8001132:	4818      	ldr	r0, [pc, #96]	@ (8001194 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001134:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001136:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800113a:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800113e:	f003 fee3 	bl	8004f08 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001142:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001146:	a901      	add	r1, sp, #4
 8001148:	4813      	ldr	r0, [pc, #76]	@ (8001198 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800114a:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800114c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001150:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001154:	f003 fed8 	bl	8004f08 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_3;
 8001158:	2328      	movs	r3, #40	@ 0x28
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800115a:	a901      	add	r1, sp, #4
 800115c:	480f      	ldr	r0, [pc, #60]	@ (800119c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800115e:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001160:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001164:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001168:	f003 fece 	bl	8004f08 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 800116c:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800116e:	a901      	add	r1, sp, #4
 8001170:	480b      	ldr	r0, [pc, #44]	@ (80011a0 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001172:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001174:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001178:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800117c:	f003 fec4 	bl	8004f08 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001180:	b007      	add	sp, #28
 8001182:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001184:	200004c8 	.word	0x200004c8
 8001188:	40023800 	.word	0x40023800
 800118c:	40021000 	.word	0x40021000
 8001190:	40021800 	.word	0x40021800
 8001194:	40020c00 	.word	0x40020c00
 8001198:	40021400 	.word	0x40021400
 800119c:	40021c00 	.word	0x40021c00
 80011a0:	40020800 	.word	0x40020800

080011a4 <HAL_InitTick>:
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80011a4:	4b21      	ldr	r3, [pc, #132]	@ (800122c <HAL_InitTick+0x88>)
 80011a6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80011a8:	f042 0210 	orr.w	r2, r2, #16
{
 80011ac:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_TIM6_CLK_ENABLE();
 80011ae:	641a      	str	r2, [r3, #64]	@ 0x40
{
 80011b0:	b088      	sub	sp, #32
  __HAL_RCC_TIM6_CLK_ENABLE();
 80011b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
{
 80011b4:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80011b6:	a901      	add	r1, sp, #4
 80011b8:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80011ba:	f003 0310 	and.w	r3, r3, #16
 80011be:	9302      	str	r3, [sp, #8]
 80011c0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80011c2:	f005 fb5d 	bl	8006880 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80011c6:	9b06      	ldr	r3, [sp, #24]
 80011c8:	bb4b      	cbnz	r3, 800121e <HAL_InitTick+0x7a>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80011ca:	f005 fb39 	bl	8006840 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80011ce:	4e18      	ldr	r6, [pc, #96]	@ (8001230 <HAL_InitTick+0x8c>)
 80011d0:	4b18      	ldr	r3, [pc, #96]	@ (8001234 <HAL_InitTick+0x90>)
 80011d2:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80011d4:	f240 33e7 	movw	r3, #999	@ 0x3e7
 80011d8:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80011da:	4b17      	ldr	r3, [pc, #92]	@ (8001238 <HAL_InitTick+0x94>)
 80011dc:	fbb0 f3f3 	udiv	r3, r0, r3
 80011e0:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80011e2:	4630      	mov	r0, r6
  htim6.Init.Prescaler = uwPrescalerValue;
 80011e4:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
 80011e6:	2300      	movs	r3, #0
 80011e8:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80011ea:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80011ec:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 80011ee:	f005 ff9f 	bl	8007130 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80011f2:	4604      	mov	r4, r0
 80011f4:	b980      	cbnz	r0, 8001218 <HAL_InitTick+0x74>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 80011f6:	4630      	mov	r0, r6
 80011f8:	f005 fe42 	bl	8006e80 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80011fc:	4604      	mov	r4, r0
 80011fe:	b958      	cbnz	r0, 8001218 <HAL_InitTick+0x74>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001200:	2036      	movs	r0, #54	@ 0x36
 8001202:	f003 fc69 	bl	8004ad8 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001206:	2d0f      	cmp	r5, #15
 8001208:	d80d      	bhi.n	8001226 <HAL_InitTick+0x82>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800120a:	4622      	mov	r2, r4
 800120c:	4629      	mov	r1, r5
 800120e:	2036      	movs	r0, #54	@ 0x36
 8001210:	f003 fc30 	bl	8004a74 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001214:	4b09      	ldr	r3, [pc, #36]	@ (800123c <HAL_InitTick+0x98>)
 8001216:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8001218:	4620      	mov	r0, r4
 800121a:	b008      	add	sp, #32
 800121c:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800121e:	f005 fb0f 	bl	8006840 <HAL_RCC_GetPCLK1Freq>
 8001222:	0040      	lsls	r0, r0, #1
 8001224:	e7d3      	b.n	80011ce <HAL_InitTick+0x2a>
        status = HAL_ERROR;
 8001226:	2401      	movs	r4, #1
 8001228:	e7f6      	b.n	8001218 <HAL_InitTick+0x74>
 800122a:	bf00      	nop
 800122c:	40023800 	.word	0x40023800
 8001230:	200004cc 	.word	0x200004cc
 8001234:	40001000 	.word	0x40001000
 8001238:	000f4240 	.word	0x000f4240
 800123c:	2000003c 	.word	0x2000003c

08001240 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001240:	4770      	bx	lr

08001242 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001242:	e7fe      	b.n	8001242 <HardFault_Handler>

08001244 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001244:	e7fe      	b.n	8001244 <MemManage_Handler>

08001246 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001246:	e7fe      	b.n	8001246 <BusFault_Handler>

08001248 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001248:	e7fe      	b.n	8001248 <UsageFault_Handler>

0800124a <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 800124a:	4770      	bx	lr

0800124c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 800124c:	4801      	ldr	r0, [pc, #4]	@ (8001254 <TIM6_DAC_IRQHandler+0x8>)
 800124e:	f005 be59 	b.w	8006f04 <HAL_TIM_IRQHandler>
 8001252:	bf00      	nop
 8001254:	200004cc 	.word	0x200004cc

08001258 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001258:	4801      	ldr	r0, [pc, #4]	@ (8001260 <LTDC_IRQHandler+0x8>)
 800125a:	f004 bc63 	b.w	8005b24 <HAL_LTDC_IRQHandler>
 800125e:	bf00      	nop
 8001260:	20000368 	.word	0x20000368

08001264 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001264:	4801      	ldr	r0, [pc, #4]	@ (800126c <DMA2D_IRQHandler+0x8>)
 8001266:	f003 bd7e 	b.w	8004d66 <HAL_DMA2D_IRQHandler>
 800126a:	bf00      	nop
 800126c:	20000464 	.word	0x20000464

08001270 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001270:	2001      	movs	r0, #1
 8001272:	4770      	bx	lr

08001274 <_kill>:

int _kill(int pid, int sig)
{
 8001274:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001276:	f01d fdc1 	bl	801edfc <__errno>
 800127a:	2316      	movs	r3, #22
 800127c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800127e:	f04f 30ff 	mov.w	r0, #4294967295
 8001282:	bd08      	pop	{r3, pc}

08001284 <_exit>:

void _exit (int status)
{
 8001284:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001286:	f01d fdb9 	bl	801edfc <__errno>
 800128a:	2316      	movs	r3, #22
 800128c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800128e:	e7fe      	b.n	800128e <_exit+0xa>

08001290 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001290:	b570      	push	{r4, r5, r6, lr}
 8001292:	460d      	mov	r5, r1
 8001294:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001296:	460e      	mov	r6, r1
 8001298:	1b73      	subs	r3, r6, r5
 800129a:	429c      	cmp	r4, r3
 800129c:	dc01      	bgt.n	80012a2 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800129e:	4620      	mov	r0, r4
 80012a0:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 80012a2:	f3af 8000 	nop.w
 80012a6:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012aa:	e7f5      	b.n	8001298 <_read+0x8>

080012ac <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80012ac:	b570      	push	{r4, r5, r6, lr}
 80012ae:	460d      	mov	r5, r1
 80012b0:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012b2:	460e      	mov	r6, r1
 80012b4:	1b73      	subs	r3, r6, r5
 80012b6:	429c      	cmp	r4, r3
 80012b8:	dc01      	bgt.n	80012be <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80012ba:	4620      	mov	r0, r4
 80012bc:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80012be:	f816 0b01 	ldrb.w	r0, [r6], #1
 80012c2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012c6:	e7f5      	b.n	80012b4 <_write+0x8>

080012c8 <_close>:

int _close(int file)
{
	return -1;
}
 80012c8:	f04f 30ff 	mov.w	r0, #4294967295
 80012cc:	4770      	bx	lr

080012ce <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80012ce:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
 80012d2:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 80012d4:	604b      	str	r3, [r1, #4]
}
 80012d6:	4770      	bx	lr

080012d8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80012d8:	2001      	movs	r0, #1
 80012da:	4770      	bx	lr

080012dc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80012dc:	2000      	movs	r0, #0
 80012de:	4770      	bx	lr

080012e0 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80012e0:	4a0b      	ldr	r2, [pc, #44]	@ (8001310 <_sbrk+0x30>)
{
 80012e2:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 80012e4:	6811      	ldr	r1, [r2, #0]
{
 80012e6:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 80012e8:	b909      	cbnz	r1, 80012ee <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 80012ea:	490a      	ldr	r1, [pc, #40]	@ (8001314 <_sbrk+0x34>)
 80012ec:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80012ee:	6810      	ldr	r0, [r2, #0]
 80012f0:	4909      	ldr	r1, [pc, #36]	@ (8001318 <_sbrk+0x38>)
 80012f2:	4c0a      	ldr	r4, [pc, #40]	@ (800131c <_sbrk+0x3c>)
 80012f4:	4403      	add	r3, r0
 80012f6:	1b09      	subs	r1, r1, r4
 80012f8:	428b      	cmp	r3, r1
 80012fa:	d906      	bls.n	800130a <_sbrk+0x2a>
  {
    errno = ENOMEM;
 80012fc:	f01d fd7e 	bl	801edfc <__errno>
 8001300:	230c      	movs	r3, #12
 8001302:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8001304:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8001308:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 800130a:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 800130c:	e7fc      	b.n	8001308 <_sbrk+0x28>
 800130e:	bf00      	nop
 8001310:	20000518 	.word	0x20000518
 8001314:	20015ce0 	.word	0x20015ce0
 8001318:	20050000 	.word	0x20050000
 800131c:	00000a00 	.word	0x00000a00

08001320 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
 8001320:	4770      	bx	lr
	...

08001324 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8001324:	f8df d034 	ldr.w	sp, [pc, #52]	@ 800135c <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8001328:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800132a:	e003      	b.n	8001334 <LoopCopyDataInit>

0800132c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800132c:	4b0c      	ldr	r3, [pc, #48]	@ (8001360 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800132e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001330:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8001332:	3104      	adds	r1, #4

08001334 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8001334:	480b      	ldr	r0, [pc, #44]	@ (8001364 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8001336:	4b0c      	ldr	r3, [pc, #48]	@ (8001368 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8001338:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800133a:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 800133c:	d3f6      	bcc.n	800132c <CopyDataInit>
  ldr  r2, =_sbss
 800133e:	4a0b      	ldr	r2, [pc, #44]	@ (800136c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001340:	e002      	b.n	8001348 <LoopFillZerobss>

08001342 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8001342:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8001344:	f842 3b04 	str.w	r3, [r2], #4

08001348 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001348:	4b09      	ldr	r3, [pc, #36]	@ (8001370 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800134a:	429a      	cmp	r2, r3
  bcc  FillZerobss
 800134c:	d3f9      	bcc.n	8001342 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 800134e:	f003 fa61 	bl	8004814 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001352:	f01d fd59 	bl	801ee08 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001356:	f7ff f9b5 	bl	80006c4 <main>
  bx  lr    
 800135a:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 800135c:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8001360:	080216ac 	.word	0x080216ac
  ldr  r0, =_sdata
 8001364:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001368:	20000124 	.word	0x20000124
  ldr  r2, =_sbss
 800136c:	20000124 	.word	0x20000124
  ldr  r3, = _ebss
 8001370:	20015cdc 	.word	0x20015cdc

08001374 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001374:	e7fe      	b.n	8001374 <ADC_IRQHandler>

08001376 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001376:	4770      	bx	lr

08001378 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001378:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 800137a:	f000 fd5f 	bl	8001e3c <touchgfx_components_init>
    touchgfx_init();
}
 800137e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8001382:	f000 bceb 	b.w	8001d5c <touchgfx_init>

08001386 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8001386:	f000 bd5b 	b.w	8001e40 <touchgfx_taskEntry>

0800138a <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800138a:	6840      	ldr	r0, [r0, #4]
    }
 800138c:	4770      	bx	lr

0800138e <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 800138e:	6041      	str	r1, [r0, #4]
    }
 8001390:	4770      	bx	lr
	...

08001394 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8001394:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8001398:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 800139c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80013a0:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 80013a4:	4b05      	ldr	r3, [pc, #20]	@ (80013bc <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 80013a6:	4a06      	ldr	r2, [pc, #24]	@ (80013c0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 80013a8:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
 80013ac:	430a      	orrs	r2, r1
 80013ae:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 80013b2:	681a      	ldr	r2, [r3, #0]
 80013b4:	f042 0201 	orr.w	r2, r2, #1
 80013b8:	601a      	str	r2, [r3, #0]
}
 80013ba:	4770      	bx	lr
 80013bc:	e0001000 	.word	0xe0001000
 80013c0:	c5acce55 	.word	0xc5acce55

080013c4 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 80013c4:	1a52      	subs	r2, r2, r1
 80013c6:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 80013ca:	fbb2 f0f3 	udiv	r0, r2, r3
 80013ce:	4770      	bx	lr

080013d0 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 80013d0:	4b01      	ldr	r3, [pc, #4]	@ (80013d8 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 80013d2:	6858      	ldr	r0, [r3, #4]
}
 80013d4:	4770      	bx	lr
 80013d6:	bf00      	nop
 80013d8:	e0001000 	.word	0xe0001000

080013dc <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 80013dc:	4770      	bx	lr

080013de <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 80013de:	b510      	push	{r4, lr}
 80013e0:	4604      	mov	r4, r0
 80013e2:	210c      	movs	r1, #12
 80013e4:	f01d f978 	bl	801e6d8 <_ZdlPvj>
 80013e8:	4620      	mov	r0, r4
 80013ea:	bd10      	pop	{r4, pc}

080013ec <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80013ec:	6803      	ldr	r3, [r0, #0]
{
 80013ee:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80013f0:	691b      	ldr	r3, [r3, #16]
{
 80013f2:	4604      	mov	r4, r0
    if (active) //idle task sched out
 80013f4:	b131      	cbz	r1, 8001404 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80013f6:	4798      	blx	r3
 80013f8:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 80013fa:	6863      	ldr	r3, [r4, #4]
 80013fc:	1a9b      	subs	r3, r3, r2
 80013fe:	4403      	add	r3, r0
 8001400:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8001402:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8001404:	4798      	blx	r3
 8001406:	60a0      	str	r0, [r4, #8]
}
 8001408:	e7fb      	b.n	8001402 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>
	...

0800140c <_ZN20STM32TouchController4initEv>:
extern I2C_HandleTypeDef hi2c3;

void STM32TouchController::init()
{
    /* Initialize the TS driver structure */
    tsDriver = &ft5336_ts_drv;
 800140c:	4b02      	ldr	r3, [pc, #8]	@ (8001418 <_ZN20STM32TouchController4initEv+0xc>)

    /* Initialize the TS driver */
    tsDriver->Start(TS_I2C_ADDRESS);
 800140e:	2070      	movs	r0, #112	@ 0x70
    tsDriver = &ft5336_ts_drv;
 8001410:	4a02      	ldr	r2, [pc, #8]	@ (800141c <_ZN20STM32TouchController4initEv+0x10>)
 8001412:	6013      	str	r3, [r2, #0]
    tsDriver->Start(TS_I2C_ADDRESS);
 8001414:	68db      	ldr	r3, [r3, #12]
 8001416:	4718      	bx	r3
 8001418:	20000010 	.word	0x20000010
 800141c:	2000051c 	.word	0x2000051c

08001420 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001420:	4770      	bx	lr

08001422 <_ZN20STM32TouchControllerD0Ev>:
 8001422:	b510      	push	{r4, lr}
 8001424:	4604      	mov	r4, r0
 8001426:	2104      	movs	r1, #4
 8001428:	f01d f956 	bl	801e6d8 <_ZdlPvj>
 800142c:	4620      	mov	r0, r4
 800142e:	bd10      	pop	{r4, pc}

08001430 <_ZN20STM32TouchController11sampleTouchERlS0_>:
}

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8001430:	b573      	push	{r0, r1, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (tsDriver)
 8001432:	4e0e      	ldr	r6, [pc, #56]	@ (800146c <_ZN20STM32TouchController11sampleTouchERlS0_+0x3c>)
{
 8001434:	460d      	mov	r5, r1
 8001436:	4614      	mov	r4, r2
    if (tsDriver)
 8001438:	6833      	ldr	r3, [r6, #0]
 800143a:	b913      	cbnz	r3, 8001442 <_ZN20STM32TouchController11sampleTouchERlS0_+0x12>
            x = (int32_t)_x;
            y = (int32_t)_y;
            return true;
        }
    }
    return false;
 800143c:	2000      	movs	r0, #0
}
 800143e:	b002      	add	sp, #8
 8001440:	bd70      	pop	{r4, r5, r6, pc}
        if (tsDriver->DetectTouch(TS_I2C_ADDRESS))
 8001442:	691b      	ldr	r3, [r3, #16]
 8001444:	2070      	movs	r0, #112	@ 0x70
 8001446:	4798      	blx	r3
 8001448:	2800      	cmp	r0, #0
 800144a:	d0f7      	beq.n	800143c <_ZN20STM32TouchController11sampleTouchERlS0_+0xc>
            tsDriver->GetXY(TS_I2C_ADDRESS, &_y, &_x);
 800144c:	6833      	ldr	r3, [r6, #0]
 800144e:	2070      	movs	r0, #112	@ 0x70
 8001450:	aa01      	add	r2, sp, #4
 8001452:	f10d 0106 	add.w	r1, sp, #6
 8001456:	695b      	ldr	r3, [r3, #20]
 8001458:	4798      	blx	r3
            x = (int32_t)_x;
 800145a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800145e:	2001      	movs	r0, #1
 8001460:	602b      	str	r3, [r5, #0]
            y = (int32_t)_y;
 8001462:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001466:	6023      	str	r3, [r4, #0]
            return true;
 8001468:	e7e9      	b.n	800143e <_ZN20STM32TouchController11sampleTouchERlS0_+0xe>
 800146a:	bf00      	nop
 800146c:	2000051c 	.word	0x2000051c

08001470 <TS_IO_Write>:
  * @param  Reg: Reg address
  * @param  Value: Data to be written
  * @retval None
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8001470:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8001472:	2301      	movs	r3, #1
{
 8001474:	f88d 2017 	strb.w	r2, [sp, #23]
    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8001478:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800147c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001480:	f10d 0217 	add.w	r2, sp, #23
 8001484:	9200      	str	r2, [sp, #0]
 8001486:	460a      	mov	r2, r1
 8001488:	4601      	mov	r1, r0
 800148a:	4805      	ldr	r0, [pc, #20]	@ (80014a0 <TS_IO_Write+0x30>)
 800148c:	f004 f852 	bl	8005534 <HAL_I2C_Mem_Write>
    if (status != HAL_OK)
 8001490:	b110      	cbz	r0, 8001498 <TS_IO_Write+0x28>
    HAL_I2C_DeInit(i2c_handler);
 8001492:	4803      	ldr	r0, [pc, #12]	@ (80014a0 <TS_IO_Write+0x30>)
 8001494:	f004 f835 	bl	8005502 <HAL_I2C_DeInit>
    I2Cx_WriteMultiple(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&Value, 1);
}
 8001498:	b007      	add	sp, #28
 800149a:	f85d fb04 	ldr.w	pc, [sp], #4
 800149e:	bf00      	nop
 80014a0:	20000410 	.word	0x20000410

080014a4 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Reg address
  * @retval Data to be read
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 80014a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    uint8_t read_value = 0;
 80014a6:	2300      	movs	r3, #0
{
 80014a8:	460a      	mov	r2, r1
    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 80014aa:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
    uint8_t read_value = 0;
 80014ae:	f88d 3017 	strb.w	r3, [sp, #23]
    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 80014b2:	2301      	movs	r3, #1
 80014b4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80014b8:	f10d 0117 	add.w	r1, sp, #23
 80014bc:	9100      	str	r1, [sp, #0]
 80014be:	4601      	mov	r1, r0
 80014c0:	4805      	ldr	r0, [pc, #20]	@ (80014d8 <TS_IO_Read+0x34>)
 80014c2:	f004 f911 	bl	80056e8 <HAL_I2C_Mem_Read>
    if (status != HAL_OK)
 80014c6:	b110      	cbz	r0, 80014ce <TS_IO_Read+0x2a>
    HAL_I2C_DeInit(i2c_handler);
 80014c8:	4803      	ldr	r0, [pc, #12]	@ (80014d8 <TS_IO_Read+0x34>)
 80014ca:	f004 f81a 	bl	8005502 <HAL_I2C_DeInit>

    I2Cx_ReadMultiple(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&read_value, 1);

    return read_value;
}
 80014ce:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80014d2:	b007      	add	sp, #28
 80014d4:	f85d fb04 	ldr.w	pc, [sp], #4
 80014d8:	20000410 	.word	0x20000410

080014dc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 80014dc:	2803      	cmp	r0, #3
 80014de:	d823      	bhi.n	8001528 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
 80014e0:	e8df f000 	tbb	[pc, r0]
 80014e4:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 80014e8:	4b10      	ldr	r3, [pc, #64]	@ (800152c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80014ea:	2110      	movs	r1, #16
 80014ec:	4810      	ldr	r0, [pc, #64]	@ (8001530 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 80014ee:	681a      	ldr	r2, [r3, #0]
 80014f0:	fab2 f282 	clz	r2, r2
 80014f4:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80014f6:	f003 be8b 	b.w	8005210 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 80014fa:	4b0c      	ldr	r3, [pc, #48]	@ (800152c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80014fc:	2140      	movs	r1, #64	@ 0x40
 80014fe:	685a      	ldr	r2, [r3, #4]
 8001500:	fab2 f282 	clz	r2, r2
 8001504:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001506:	480b      	ldr	r0, [pc, #44]	@ (8001534 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 8001508:	e7f5      	b.n	80014f6 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800150a:	4b08      	ldr	r3, [pc, #32]	@ (800152c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800150c:	2180      	movs	r1, #128	@ 0x80
 800150e:	689a      	ldr	r2, [r3, #8]
 8001510:	fab2 f282 	clz	r2, r2
 8001514:	0952      	lsrs	r2, r2, #5
 8001516:	e7f6      	b.n	8001506 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001518:	4b04      	ldr	r3, [pc, #16]	@ (800152c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800151a:	2140      	movs	r1, #64	@ 0x40
 800151c:	4806      	ldr	r0, [pc, #24]	@ (8001538 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
 800151e:	68da      	ldr	r2, [r3, #12]
 8001520:	fab2 f282 	clz	r2, r2
 8001524:	0952      	lsrs	r2, r2, #5
 8001526:	e7e6      	b.n	80014f6 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8001528:	4770      	bx	lr
 800152a:	bf00      	nop
 800152c:	20000520 	.word	0x20000520
 8001530:	40020400 	.word	0x40020400
 8001534:	40020800 	.word	0x40020800
 8001538:	40021800 	.word	0x40021800

0800153c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800153c:	2803      	cmp	r0, #3
 800153e:	d823      	bhi.n	8001588 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
 8001540:	e8df f000 	tbb	[pc, r0]
 8001544:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001548:	4b10      	ldr	r3, [pc, #64]	@ (800158c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800154a:	2110      	movs	r1, #16
 800154c:	4810      	ldr	r0, [pc, #64]	@ (8001590 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 800154e:	681a      	ldr	r2, [r3, #0]
 8001550:	3a00      	subs	r2, #0
 8001552:	bf18      	it	ne
 8001554:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001556:	f003 be5b 	b.w	8005210 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 800155a:	4b0c      	ldr	r3, [pc, #48]	@ (800158c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800155c:	2140      	movs	r1, #64	@ 0x40
 800155e:	685a      	ldr	r2, [r3, #4]
 8001560:	3a00      	subs	r2, #0
 8001562:	bf18      	it	ne
 8001564:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001566:	480b      	ldr	r0, [pc, #44]	@ (8001594 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 8001568:	e7f5      	b.n	8001556 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 800156a:	4b08      	ldr	r3, [pc, #32]	@ (800158c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800156c:	2180      	movs	r1, #128	@ 0x80
 800156e:	689a      	ldr	r2, [r3, #8]
 8001570:	3a00      	subs	r2, #0
 8001572:	bf18      	it	ne
 8001574:	2201      	movne	r2, #1
 8001576:	e7f6      	b.n	8001566 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001578:	4b04      	ldr	r3, [pc, #16]	@ (800158c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800157a:	2140      	movs	r1, #64	@ 0x40
 800157c:	4806      	ldr	r0, [pc, #24]	@ (8001598 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
 800157e:	68da      	ldr	r2, [r3, #12]
 8001580:	3a00      	subs	r2, #0
 8001582:	bf18      	it	ne
 8001584:	2201      	movne	r2, #1
 8001586:	e7e6      	b.n	8001556 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8001588:	4770      	bx	lr
 800158a:	bf00      	nop
 800158c:	20000520 	.word	0x20000520
 8001590:	40020400 	.word	0x40020400
 8001594:	40020800 	.word	0x40020800
 8001598:	40021800 	.word	0x40021800

0800159c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 800159c:	2803      	cmp	r0, #3
 800159e:	d80f      	bhi.n	80015c0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
 80015a0:	e8df f000 	tbb	[pc, r0]
 80015a4:	0b090602 	.word	0x0b090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80015a8:	2110      	movs	r1, #16
 80015aa:	4806      	ldr	r0, [pc, #24]	@ (80015c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80015ac:	f003 be35 	b.w	800521a <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80015b0:	2140      	movs	r1, #64	@ 0x40
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80015b2:	4805      	ldr	r0, [pc, #20]	@ (80015c8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
 80015b4:	e7fa      	b.n	80015ac <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80015b6:	2180      	movs	r1, #128	@ 0x80
 80015b8:	e7fb      	b.n	80015b2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80015ba:	2140      	movs	r1, #64	@ 0x40
 80015bc:	4803      	ldr	r0, [pc, #12]	@ (80015cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
 80015be:	e7f5      	b.n	80015ac <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 80015c0:	4770      	bx	lr
 80015c2:	bf00      	nop
 80015c4:	40020400 	.word	0x40020400
 80015c8:	40020800 	.word	0x40020800
 80015cc:	40021800 	.word	0x40021800

080015d0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80015d0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80015d2:	2803      	cmp	r0, #3
 80015d4:	d813      	bhi.n	80015fe <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 80015d6:	e8df f000 	tbb	[pc, r0]
 80015da:	0a02      	.short	0x0a02
 80015dc:	0f0d      	.short	0x0f0d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80015de:	2110      	movs	r1, #16
 80015e0:	4808      	ldr	r0, [pc, #32]	@ (8001604 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80015e2:	f003 fe0f 	bl	8005204 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80015e6:	1e43      	subs	r3, r0, #1
 80015e8:	4258      	negs	r0, r3
 80015ea:	4158      	adcs	r0, r3
 80015ec:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80015ee:	2140      	movs	r1, #64	@ 0x40
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80015f0:	4805      	ldr	r0, [pc, #20]	@ (8001608 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
 80015f2:	e7f6      	b.n	80015e2 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80015f4:	2180      	movs	r1, #128	@ 0x80
 80015f6:	e7fb      	b.n	80015f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80015f8:	2140      	movs	r1, #64	@ 0x40
 80015fa:	4804      	ldr	r0, [pc, #16]	@ (800160c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x3c>)
 80015fc:	e7f1      	b.n	80015e2 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
    switch (id)
 80015fe:	2000      	movs	r0, #0
 8001600:	e7f1      	b.n	80015e6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8001602:	bf00      	nop
 8001604:	40020400 	.word	0x40020400
 8001608:	40020800 	.word	0x40020800
 800160c:	40021800 	.word	0x40021800

08001610 <_ZN8touchgfx4GPIO4initEv>:
{
 8001610:	b570      	push	{r4, r5, r6, lr}
 8001612:	4d08      	ldr	r5, [pc, #32]	@ (8001634 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001614:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001616:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001618:	b2e0      	uxtb	r0, r4
 800161a:	f7ff ffd9 	bl	80015d0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800161e:	b118      	cbz	r0, 8001628 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001620:	682b      	ldr	r3, [r5, #0]
 8001622:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001624:	bf18      	it	ne
 8001626:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001628:	3401      	adds	r4, #1
 800162a:	3504      	adds	r5, #4
 800162c:	2c05      	cmp	r4, #5
 800162e:	d1f3      	bne.n	8001618 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001630:	bd70      	pop	{r4, r5, r6, pc}
 8001632:	bf00      	nop
 8001634:	20000520 	.word	0x20000520

08001638 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001638:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800163a:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800163e:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8001642:	4770      	bx	lr

08001644 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001644:	2000      	movs	r0, #0
 8001646:	4770      	bx	lr

08001648 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001648:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800164a:	3900      	subs	r1, #0
 800164c:	4b02      	ldr	r3, [pc, #8]	@ (8001658 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 800164e:	bf18      	it	ne
 8001650:	2101      	movne	r1, #1
 8001652:	7019      	strb	r1, [r3, #0]
    }
 8001654:	4770      	bx	lr
 8001656:	bf00      	nop
 8001658:	200150ab 	.word	0x200150ab

0800165c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800165c:	2000      	movs	r0, #0
 800165e:	4770      	bx	lr

08001660 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001660:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8001662:	b10b      	cbz	r3, 8001668 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001664:	4608      	mov	r0, r1
 8001666:	4718      	bx	r3
        }
    }
 8001668:	4770      	bx	lr

0800166a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800166a:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800166e:	4770      	bx	lr

08001670 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001670:	6840      	ldr	r0, [r0, #4]
 8001672:	6803      	ldr	r3, [r0, #0]
 8001674:	699b      	ldr	r3, [r3, #24]
 8001676:	4718      	bx	r3

08001678 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001678:	4770      	bx	lr
	...

0800167c <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationBuffer[(480 * 272 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 800167c:	b538      	push	{r3, r4, r5, lr}
 800167e:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001680:	f000 fca6 	bl	8001fd0 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);  //enable the animation storage to allow slide animations
 8001684:	4908      	ldr	r1, [pc, #32]	@ (80016a8 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
 8001686:	6823      	ldr	r3, [r4, #0]
 8001688:	4620      	mov	r0, r4
    lockDMAToFrontPorch(false);
    instrumentation.init();
 800168a:	4d08      	ldr	r5, [pc, #32]	@ (80016ac <_ZN11TouchGFXHAL10initializeEv+0x30>)
    setAnimationStorage((void*)animationBuffer);  //enable the animation storage to allow slide animations
 800168c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001690:	4798      	blx	r3
        lockDMAToPorch = enableLock;
 8001692:	2300      	movs	r3, #0
    instrumentation.init();
 8001694:	4628      	mov	r0, r5
 8001696:	f884 304a 	strb.w	r3, [r4, #74]	@ 0x4a
 800169a:	f7ff fe7b 	bl	8001394 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 800169e:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 80016a0:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 80016a2:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
}
 80016a6:	bd38      	pop	{r3, r4, r5, pc}
 80016a8:	c0000000 	.word	0xc0000000
 80016ac:	20000530 	.word	0x20000530

080016b0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80016b0:	f000 bc58 	b.w	8001f64 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080016b4 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80016b4:	f000 bc5c 	b.w	8001f70 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080016b8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80016b8:	b570      	push	{r4, r5, r6, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80016ba:	f000 fca7 	bl	800200c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 80016be:	4910      	ldr	r1, [pc, #64]	@ (8001700 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x48>)
 80016c0:	2300      	movs	r3, #0
 80016c2:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80016c6:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 80016ca:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80016ce:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80016d2:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80016d6:	f3c3 334e 	ubfx	r3, r3, #13, #15
 80016da:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80016dc:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80016e0:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80016e2:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 80016e6:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80016e8:	f8c1 5274 	str.w	r5, [r1, #628]	@ 0x274
      } while (ways-- != 0U);
 80016ec:	d2f9      	bcs.n	80016e2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2a>
    } while(sets-- != 0U);
 80016ee:	3b20      	subs	r3, #32
 80016f0:	f113 0f20 	cmn.w	r3, #32
 80016f4:	d1f2      	bne.n	80016dc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x24>
 80016f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80016fa:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
 80016fe:	bd70      	pop	{r4, r5, r6, pc}
 8001700:	e000ed00 	.word	0xe000ed00

08001704 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8001704:	f000 bc84 	b.w	8002010 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08001708 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001708:	f000 bc08 	b.w	8001f1c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800170c <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800170c:	f000 bc82 	b.w	8002014 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001710 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001710:	f000 bc8a 	b.w	8002028 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001714 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001714:	f000 bc0c 	b.w	8001f30 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001718 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001718:	b510      	push	{r4, lr}
 800171a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800171c:	f009 fe22 	bl	800b364 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001720:	6823      	ldr	r3, [r4, #0]
 8001722:	4620      	mov	r0, r4
 8001724:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 8001728:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800172c:	4718      	bx	r3

0800172e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800172e:	f009 b877 	b.w	800a820 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001732 <_ZN11TouchGFXHALD0Ev>:
 8001732:	b510      	push	{r4, lr}
 8001734:	4604      	mov	r4, r0
 8001736:	217c      	movs	r1, #124	@ 0x7c
 8001738:	f01c ffce 	bl	801e6d8 <_ZdlPvj>
 800173c:	4620      	mov	r0, r4
 800173e:	bd10      	pop	{r4, pc}

08001740 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8001740:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
 8001744:	4b0d      	ldr	r3, [pc, #52]	@ (800177c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
 8001746:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001748:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 800174c:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800174e:	428c      	cmp	r4, r1
 8001750:	d009      	beq.n	8001766 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001752:	b93a      	cbnz	r2, 8001764 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001754:	490a      	ldr	r1, [pc, #40]	@ (8001780 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001756:	4a0b      	ldr	r2, [pc, #44]	@ (8001784 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001758:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800175a:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 800175c:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800175e:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001760:	800c      	strh	r4, [r1, #0]
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
 8001762:	701a      	strb	r2, [r3, #0]
        }
    }
 8001764:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001766:	2a00      	cmp	r2, #0
 8001768:	d0fc      	beq.n	8001764 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800176a:	4a06      	ldr	r2, [pc, #24]	@ (8001784 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800176c:	4904      	ldr	r1, [pc, #16]	@ (8001780 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800176e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001770:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001772:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001774:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 8001776:	2200      	movs	r2, #0
 8001778:	e7f3      	b.n	8001762 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800177a:	bf00      	nop
 800177c:	200150a4 	.word	0x200150a4
 8001780:	200150a2 	.word	0x200150a2
 8001784:	200150a0 	.word	0x200150a0

08001788 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001788:	b570      	push	{r4, r5, r6, lr}
 800178a:	460d      	mov	r5, r1
 800178c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800178e:	b935      	cbnz	r5, 800179e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001790:	4b09      	ldr	r3, [pc, #36]	@ (80017b8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001792:	f240 21d2 	movw	r1, #722	@ 0x2d2
 8001796:	4a09      	ldr	r2, [pc, #36]	@ (80017bc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001798:	4809      	ldr	r0, [pc, #36]	@ (80017c0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 800179a:	f01c ffcb 	bl	801e734 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800179e:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80017a2:	3a00      	subs	r2, #0
 80017a4:	4b07      	ldr	r3, [pc, #28]	@ (80017c4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80017a6:	bf18      	it	ne
 80017a8:	2201      	movne	r2, #1
 80017aa:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80017ac:	6803      	ldr	r3, [r0, #0]
    }
 80017ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80017b2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80017b6:	4718      	bx	r3
 80017b8:	0801f90c 	.word	0x0801f90c
 80017bc:	0801f944 	.word	0x0801f944
 80017c0:	0801f992 	.word	0x0801f992
 80017c4:	200150aa 	.word	0x200150aa

080017c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80017c8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80017ca:	4b09      	ldr	r3, [pc, #36]	@ (80017f0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80017cc:	881b      	ldrh	r3, [r3, #0]
 80017ce:	428b      	cmp	r3, r1
 80017d0:	d803      	bhi.n	80017da <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80017d2:	4b08      	ldr	r3, [pc, #32]	@ (80017f4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80017d4:	881b      	ldrh	r3, [r3, #0]
 80017d6:	4293      	cmp	r3, r2
 80017d8:	d905      	bls.n	80017e6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80017da:	4b07      	ldr	r3, [pc, #28]	@ (80017f8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80017dc:	219e      	movs	r1, #158	@ 0x9e
 80017de:	4a07      	ldr	r2, [pc, #28]	@ (80017fc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80017e0:	4807      	ldr	r0, [pc, #28]	@ (8001800 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80017e2:	f01c ffa7 	bl	801e734 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80017e6:	4b07      	ldr	r3, [pc, #28]	@ (8001804 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80017e8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80017ea:	4b07      	ldr	r3, [pc, #28]	@ (8001808 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80017ec:	801a      	strh	r2, [r3, #0]
    }
 80017ee:	bd08      	pop	{r3, pc}
 80017f0:	200150a0 	.word	0x200150a0
 80017f4:	200150a2 	.word	0x200150a2
 80017f8:	0801f9d7 	.word	0x0801f9d7
 80017fc:	0801fa3a 	.word	0x0801fa3a
 8001800:	0801f992 	.word	0x0801f992
 8001804:	200150a6 	.word	0x200150a6
 8001808:	200150a8 	.word	0x200150a8

0800180c <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 800180c:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 800180e:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001812:	b118      	cbz	r0, 800181c <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001814:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8001816:	6803      	ldr	r3, [r0, #0]
 8001818:	681b      	ldr	r3, [r3, #0]
 800181a:	4718      	bx	r3
    }
 800181c:	4770      	bx	lr
	...

08001820 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001820:	4601      	mov	r1, r0
 8001822:	b508      	push	{r3, lr}
        return instance;
 8001824:	4b03      	ldr	r3, [pc, #12]	@ (8001834 <IdleTaskHook+0x14>)
 8001826:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8001828:	b101      	cbz	r1, 800182c <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 800182a:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 800182c:	f009 fdb4 	bl	800b398 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001830:	2001      	movs	r0, #1
 8001832:	bd08      	pop	{r3, pc}
 8001834:	200150ac 	.word	0x200150ac

08001838 <_GLOBAL__sub_I_instrumentation>:
        : cc_consumed(0),
 8001838:	4b03      	ldr	r3, [pc, #12]	@ (8001848 <_GLOBAL__sub_I_instrumentation+0x10>)
 800183a:	2200      	movs	r2, #0
 800183c:	605a      	str	r2, [r3, #4]
          cc_in(0)
 800183e:	609a      	str	r2, [r3, #8]
 8001840:	4a02      	ldr	r2, [pc, #8]	@ (800184c <_GLOBAL__sub_I_instrumentation+0x14>)
 8001842:	601a      	str	r2, [r3, #0]
}
 8001844:	4770      	bx	lr
 8001846:	bf00      	nop
 8001848:	20000530 	.word	0x20000530
 800184c:	0801f8d4 	.word	0x0801f8d4

08001850 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001850:	2101      	movs	r1, #1
 8001852:	2200      	movs	r2, #0
{
 8001854:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001856:	4608      	mov	r0, r1
 8001858:	f006 fb70 	bl	8007f3c <osSemaphoreNew>
 800185c:	4b0a      	ldr	r3, [pc, #40]	@ (8001888 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800185e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001860:	b928      	cbnz	r0, 800186e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001862:	4b0a      	ldr	r3, [pc, #40]	@ (800188c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001864:	2128      	movs	r1, #40	@ 0x28
 8001866:	4a0a      	ldr	r2, [pc, #40]	@ (8001890 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001868:	480a      	ldr	r0, [pc, #40]	@ (8001894 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800186a:	f01c ff63 	bl	801e734 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800186e:	2200      	movs	r2, #0
 8001870:	2104      	movs	r1, #4
 8001872:	2001      	movs	r0, #1
 8001874:	f006 fc2c 	bl	80080d0 <osMessageQueueNew>
 8001878:	4b07      	ldr	r3, [pc, #28]	@ (8001898 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800187a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800187c:	b918      	cbnz	r0, 8001886 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 800187e:	4b07      	ldr	r3, [pc, #28]	@ (800189c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001880:	212c      	movs	r1, #44	@ 0x2c
 8001882:	4a03      	ldr	r2, [pc, #12]	@ (8001890 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001884:	e7f0      	b.n	8001868 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001886:	bd08      	pop	{r3, pc}
 8001888:	20000540 	.word	0x20000540
 800188c:	0801fb58 	.word	0x0801fb58
 8001890:	0801fba1 	.word	0x0801fba1
 8001894:	0801fbd0 	.word	0x0801fbd0
 8001898:	2000053c 	.word	0x2000053c
 800189c:	0801fc1e 	.word	0x0801fc1e

080018a0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 80018a0:	4b02      	ldr	r3, [pc, #8]	@ (80018ac <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 80018a2:	f04f 31ff 	mov.w	r1, #4294967295
 80018a6:	6818      	ldr	r0, [r3, #0]
 80018a8:	f006 bba0 	b.w	8007fec <osSemaphoreAcquire>
 80018ac:	20000540 	.word	0x20000540

080018b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80018b0:	4b01      	ldr	r3, [pc, #4]	@ (80018b8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80018b2:	6818      	ldr	r0, [r3, #0]
 80018b4:	f006 bbd6 	b.w	8008064 <osSemaphoreRelease>
 80018b8:	20000540 	.word	0x20000540

080018bc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80018bc:	4b02      	ldr	r3, [pc, #8]	@ (80018c8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80018be:	2100      	movs	r1, #0
 80018c0:	6818      	ldr	r0, [r3, #0]
 80018c2:	f006 bb93 	b.w	8007fec <osSemaphoreAcquire>
 80018c6:	bf00      	nop
 80018c8:	20000540 	.word	0x20000540

080018cc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 80018cc:	f7ff bff0 	b.w	80018b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080018d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80018d0:	2300      	movs	r3, #0
 80018d2:	4803      	ldr	r0, [pc, #12]	@ (80018e0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80018d4:	4903      	ldr	r1, [pc, #12]	@ (80018e4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80018d6:	461a      	mov	r2, r3
 80018d8:	6800      	ldr	r0, [r0, #0]
 80018da:	f006 bc3f 	b.w	800815c <osMessageQueuePut>
 80018de:	bf00      	nop
 80018e0:	2000053c 	.word	0x2000053c
 80018e4:	20000004 	.word	0x20000004

080018e8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80018e8:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80018ea:	2300      	movs	r3, #0
 80018ec:	4c07      	ldr	r4, [pc, #28]	@ (800190c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80018ee:	a901      	add	r1, sp, #4
 80018f0:	461a      	mov	r2, r3
 80018f2:	6820      	ldr	r0, [r4, #0]
 80018f4:	f006 fc74 	bl	80081e0 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80018f8:	f04f 33ff 	mov.w	r3, #4294967295
 80018fc:	2200      	movs	r2, #0
 80018fe:	a901      	add	r1, sp, #4
 8001900:	6820      	ldr	r0, [r4, #0]
 8001902:	f006 fc6d 	bl	80081e0 <osMessageQueueGet>
}
 8001906:	b002      	add	sp, #8
 8001908:	bd10      	pop	{r4, pc}
 800190a:	bf00      	nop
 800190c:	2000053c 	.word	0x2000053c

08001910 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001910:	6803      	ldr	r3, [r0, #0]
 8001912:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001914:	4718      	bx	r3

08001916 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001916:	2001      	movs	r0, #1
 8001918:	4770      	bx	lr

0800191a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800191a:	6803      	ldr	r3, [r0, #0]
 800191c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800191e:	4718      	bx	r3

08001920 <_ZN8STM32DMA10initializeEv>:
}

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001920:	4b0d      	ldr	r3, [pc, #52]	@ (8001958 <_ZN8STM32DMA10initializeEv+0x38>)
{
 8001922:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001924:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001926:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800192a:	631a      	str	r2, [r3, #48]	@ 0x30
 800192c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800192e:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8001932:	9201      	str	r2, [sp, #4]
 8001934:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001936:	691a      	ldr	r2, [r3, #16]
 8001938:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800193c:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800193e:	691a      	ldr	r2, [r3, #16]
 8001940:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8001944:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001946:	4b05      	ldr	r3, [pc, #20]	@ (800195c <_ZN8STM32DMA10initializeEv+0x3c>)
 8001948:	4a05      	ldr	r2, [pc, #20]	@ (8001960 <_ZN8STM32DMA10initializeEv+0x40>)
 800194a:	611a      	str	r2, [r3, #16]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800194c:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001950:	4b04      	ldr	r3, [pc, #16]	@ (8001964 <_ZN8STM32DMA10initializeEv+0x44>)
 8001952:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001954:	b002      	add	sp, #8
 8001956:	4770      	bx	lr
 8001958:	40023800 	.word	0x40023800
 800195c:	20000464 	.word	0x20000464
 8001960:	08001bf1 	.word	0x08001bf1
 8001964:	e000e100 	.word	0xe000e100

08001968 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001968:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 800196c:	4770      	bx	lr
	...

08001970 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001970:	4b05      	ldr	r3, [pc, #20]	@ (8001988 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001972:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001976:	6003      	str	r3, [r0, #0]
 8001978:	4b04      	ldr	r3, [pc, #16]	@ (800198c <_ZN8STM32DMAD1Ev+0x1c>)
 800197a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800197e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001982:	f3bf 8f6f 	isb	sy
}
 8001986:	4770      	bx	lr
 8001988:	0801fdbc 	.word	0x0801fdbc
 800198c:	e000e100 	.word	0xe000e100

08001990 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001990:	b510      	push	{r4, lr}
 8001992:	4604      	mov	r4, r0
}
 8001994:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001998:	f7ff ffea 	bl	8001970 <_ZN8STM32DMAD1Ev>
 800199c:	4620      	mov	r0, r4
 800199e:	f01c fe9b 	bl	801e6d8 <_ZdlPvj>
 80019a2:	4620      	mov	r0, r4
 80019a4:	bd10      	pop	{r4, pc}
	...

080019a8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 80019a8:	b508      	push	{r3, lr}
    switch (format)
 80019aa:	280a      	cmp	r0, #10
 80019ac:	d809      	bhi.n	80019c2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 80019ae:	e8df f000 	tbb	[pc, r0]
 80019b2:	1006      	.short	0x1006
 80019b4:	0808080e 	.word	0x0808080e
 80019b8:	10101008 	.word	0x10101008
 80019bc:	10          	.byte	0x10
 80019bd:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80019be:	2002      	movs	r0, #2
}
 80019c0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80019c2:	4b05      	ldr	r3, [pc, #20]	@ (80019d8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 80019c4:	2186      	movs	r1, #134	@ 0x86
 80019c6:	4a05      	ldr	r2, [pc, #20]	@ (80019dc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80019c8:	4805      	ldr	r0, [pc, #20]	@ (80019e0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80019ca:	f01c feb3 	bl	801e734 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 80019ce:	2000      	movs	r0, #0
 80019d0:	e7f6      	b.n	80019c0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 80019d2:	2001      	movs	r0, #1
    return dma2dColorMode;
 80019d4:	e7f4      	b.n	80019c0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80019d6:	bf00      	nop
 80019d8:	0801fc60 	.word	0x0801fc60
 80019dc:	0801fc7b 	.word	0x0801fc7b
 80019e0:	0801fcc6 	.word	0x0801fcc6

080019e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80019e4:	b538      	push	{r3, r4, r5, lr}
 80019e6:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80019e8:	7f88      	ldrb	r0, [r1, #30]
 80019ea:	f7ff ffdd 	bl	80019a8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80019ee:	4b17      	ldr	r3, [pc, #92]	@ (8001a4c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80019f0:	8aa5      	ldrh	r5, [r4, #20]
 80019f2:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80019f4:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80019f6:	ea42 4205 	orr.w	r2, r2, r5, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80019fa:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80019fc:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80019fe:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001a00:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001a02:	1b52      	subs	r2, r2, r5
 8001a04:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001a06:	6825      	ldr	r5, [r4, #0]
 8001a08:	2d08      	cmp	r5, #8
 8001a0a:	d10e      	bne.n	8001a2a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001a0c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001a0e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001a10:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001a12:	4a0f      	ldr	r2, [pc, #60]	@ (8001a50 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001a14:	7f20      	ldrb	r0, [r4, #28]
 8001a16:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001a1a:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001a1c:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001a1e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001a20:	4a0c      	ldr	r2, [pc, #48]	@ (8001a54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001a22:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001a24:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001a26:	601a      	str	r2, [r3, #0]
    }
}
 8001a28:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001a2a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001a2c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001a2e:	611a      	str	r2, [r3, #16]
 8001a30:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001a32:	0a0a      	lsrs	r2, r1, #8
 8001a34:	0948      	lsrs	r0, r1, #5
 8001a36:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001a3a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8001a3e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8001a42:	4302      	orrs	r2, r0
 8001a44:	430a      	orrs	r2, r1
 8001a46:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001a48:	4a03      	ldr	r2, [pc, #12]	@ (8001a58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001a4a:	e7ec      	b.n	8001a26 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001a4c:	4002b000 	.word	0x4002b000
 8001a50:	00010009 	.word	0x00010009
 8001a54:	00020201 	.word	0x00020201
 8001a58:	00030201 	.word	0x00030201

08001a5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8001a5c:	b508      	push	{r3, lr}
    switch (format)
 8001a5e:	280b      	cmp	r0, #11
 8001a60:	d80b      	bhi.n	8001a7a <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8001a62:	e8df f000 	tbb	[pc, r0]
 8001a66:	1206      	.short	0x1206
 8001a68:	0a0a0a10 	.word	0x0a0a0a10
 8001a6c:	0808080a 	.word	0x0808080a
 8001a70:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001a72:	2002      	movs	r0, #2
}
 8001a74:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001a76:	2005      	movs	r0, #5
        break;
 8001a78:	e7fc      	b.n	8001a74 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8001a7a:	4b05      	ldr	r3, [pc, #20]	@ (8001a90 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001a7c:	2165      	movs	r1, #101	@ 0x65
 8001a7e:	4a05      	ldr	r2, [pc, #20]	@ (8001a94 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001a80:	4805      	ldr	r0, [pc, #20]	@ (8001a98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8001a82:	f01c fe57 	bl	801e734 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001a86:	2000      	movs	r0, #0
 8001a88:	e7f4      	b.n	8001a74 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001a8a:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001a8c:	e7f2      	b.n	8001a74 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001a8e:	bf00      	nop
 8001a90:	0801fc60 	.word	0x0801fc60
 8001a94:	0801fd12 	.word	0x0801fd12
 8001a98:	0801fcc6 	.word	0x0801fcc6

08001a9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8001a9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001aa0:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8001aa4:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001aa6:	4640      	mov	r0, r8
 8001aa8:	f7ff ffd8 	bl	8001a5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001aac:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001aae:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001ab0:	4638      	mov	r0, r7
 8001ab2:	f7ff ffd3 	bl	8001a5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8001ab6:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001ab8:	4638      	mov	r0, r7
 8001aba:	f7ff ff75 	bl	80019a8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001abe:	8aa1      	ldrh	r1, [r4, #20]
 8001ac0:	8b62      	ldrh	r2, [r4, #26]
 8001ac2:	4b43      	ldr	r3, [pc, #268]	@ (8001bd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001ac4:	1a52      	subs	r2, r2, r1
 8001ac6:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001ac8:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001aca:	8b22      	ldrh	r2, [r4, #24]
 8001acc:	1a52      	subs	r2, r2, r1
 8001ace:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ad0:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001ad2:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ad4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ad8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ada:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001adc:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ade:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001ae0:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8001ae2:	6820      	ldr	r0, [r4, #0]
 8001ae4:	2880      	cmp	r0, #128	@ 0x80
 8001ae6:	d028      	beq.n	8001b3a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8001ae8:	7f22      	ldrb	r2, [r4, #28]
 8001aea:	d80f      	bhi.n	8001b0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8001aec:	2820      	cmp	r0, #32
 8001aee:	d066      	beq.n	8001bbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
 8001af0:	2840      	cmp	r0, #64	@ 0x40
 8001af2:	d064      	beq.n	8001bbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
 8001af4:	2804      	cmp	r0, #4
 8001af6:	d01a      	beq.n	8001b2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001af8:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001afc:	4b34      	ldr	r3, [pc, #208]	@ (8001bd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001afe:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b00:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001b04:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001b06:	d060      	beq.n	8001bca <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12e>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001b08:	4a32      	ldr	r2, [pc, #200]	@ (8001bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001b0a:	e044      	b.n	8001b96 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8001b0c:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8001b10:	d004      	beq.n	8001b1c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8001b12:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8001b16:	d1ef      	bne.n	8001af8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b18:	482f      	ldr	r0, [pc, #188]	@ (8001bd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001b1a:	e000      	b.n	8001b1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b1c:	482f      	ldr	r0, [pc, #188]	@ (8001bdc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b1e:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8001b22:	61da      	str	r2, [r3, #28]
 8001b24:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001b26:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001b28:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001b2a:	6159      	str	r1, [r3, #20]
 8001b2c:	e032      	b.n	8001b94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b2e:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001b32:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b36:	61da      	str	r2, [r3, #28]
 8001b38:	e7f6      	b.n	8001b28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001b3a:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001b3c:	1d02      	adds	r2, r0, #4
 8001b3e:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b40:	7f22      	ldrb	r2, [r4, #28]
 8001b42:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001b46:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001b4a:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001b4c:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001b4e:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001b50:	7801      	ldrb	r1, [r0, #0]
 8001b52:	b141      	cbz	r1, 8001b66 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8001b54:	2901      	cmp	r1, #1
 8001b56:	d021      	beq.n	8001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8001b58:	4b21      	ldr	r3, [pc, #132]	@ (8001be0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8001b5a:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8001b5e:	4a21      	ldr	r2, [pc, #132]	@ (8001be4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001b60:	4821      	ldr	r0, [pc, #132]	@ (8001be8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8001b62:	f01c fde7 	bl	801e734 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001b66:	69da      	ldr	r2, [r3, #28]
 8001b68:	8841      	ldrh	r1, [r0, #2]
 8001b6a:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001b6e:	3901      	subs	r1, #1
 8001b70:	f022 0210 	bic.w	r2, r2, #16
 8001b74:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 8001b78:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001b7a:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001b7c:	4b14      	ldr	r3, [pc, #80]	@ (8001bd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001b7e:	69da      	ldr	r2, [r3, #28]
 8001b80:	f042 0220 	orr.w	r2, r2, #32
 8001b84:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001b86:	69da      	ldr	r2, [r3, #28]
 8001b88:	0692      	lsls	r2, r2, #26
 8001b8a:	d4fc      	bmi.n	8001b86 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001b8c:	2210      	movs	r2, #16
 8001b8e:	609a      	str	r2, [r3, #8]
            if (blend)
 8001b90:	2900      	cmp	r1, #0
 8001b92:	d0b9      	beq.n	8001b08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001b94:	4a15      	ldr	r2, [pc, #84]	@ (8001bec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001b96:	601a      	str	r2, [r3, #0]
}
 8001b98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8001b9c:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001ba0:	69da      	ldr	r2, [r3, #28]
 8001ba2:	8840      	ldrh	r0, [r0, #2]
 8001ba4:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
                if (blitOp.alpha == 255)
 8001ba8:	bf18      	it	ne
 8001baa:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001bac:	3801      	subs	r0, #1
 8001bae:	f022 0210 	bic.w	r2, r2, #16
 8001bb2:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001bb6:	f042 0210 	orr.w	r2, r2, #16
 8001bba:	61da      	str	r2, [r3, #28]
                break;
 8001bbc:	e7de      	b.n	8001b7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bbe:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001bc2:	4b03      	ldr	r3, [pc, #12]	@ (8001bd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001bc4:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001bc8:	e7b5      	b.n	8001b36 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001bca:	f240 2201 	movw	r2, #513	@ 0x201
 8001bce:	e7e2      	b.n	8001b96 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8001bd0:	4002b000 	.word	0x4002b000
 8001bd4:	00010201 	.word	0x00010201
 8001bd8:	00020009 	.word	0x00020009
 8001bdc:	0002000a 	.word	0x0002000a
 8001be0:	0801fd5c 	.word	0x0801fd5c
 8001be4:	0801fd76 	.word	0x0801fd76
 8001be8:	0801fcc6 	.word	0x0801fcc6
 8001bec:	00020201 	.word	0x00020201

08001bf0 <DMA2D_XferCpltCallback>:
 8001bf0:	4b02      	ldr	r3, [pc, #8]	@ (8001bfc <DMA2D_XferCpltCallback+0xc>)
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001bf6:	6803      	ldr	r3, [r0, #0]
 8001bf8:	695b      	ldr	r3, [r3, #20]
 8001bfa:	4718      	bx	r3
 8001bfc:	200150ac 	.word	0x200150ac

08001c00 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001c00:	b570      	push	{r4, r5, r6, lr}
 8001c02:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001c04:	4b0a      	ldr	r3, [pc, #40]	@ (8001c30 <_ZN8STM32DMAC1Ev+0x30>)
 8001c06:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001c08:	2600      	movs	r6, #0
 8001c0a:	4625      	mov	r5, r4
 8001c0c:	2260      	movs	r2, #96	@ 0x60
 8001c0e:	6060      	str	r0, [r4, #4]
 8001c10:	7226      	strb	r6, [r4, #8]
 8001c12:	7266      	strb	r6, [r4, #9]
 8001c14:	f845 3b20 	str.w	r3, [r5], #32
 8001c18:	4629      	mov	r1, r5
 8001c1a:	f009 fcf9 	bl	800b610 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001c1e:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8001c22:	60ee      	str	r6, [r5, #12]
 8001c24:	3524      	adds	r5, #36	@ 0x24
 8001c26:	429d      	cmp	r5, r3
 8001c28:	d1fb      	bne.n	8001c22 <_ZN8STM32DMAC1Ev+0x22>
}
 8001c2a:	4620      	mov	r0, r4
 8001c2c:	bd70      	pop	{r4, r5, r6, pc}
 8001c2e:	bf00      	nop
 8001c30:	0801fdbc 	.word	0x0801fdbc

08001c34 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001c34:	2001      	movs	r0, #1
 8001c36:	4770      	bx	lr

08001c38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001c38:	200c      	movs	r0, #12
 8001c3a:	4770      	bx	lr

08001c3c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001c3c:	230c      	movs	r3, #12
 8001c3e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001c42:	3008      	adds	r0, #8
 8001c44:	4770      	bx	lr

08001c46 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001c46:	230c      	movs	r3, #12
 8001c48:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001c4c:	3008      	adds	r0, #8
 8001c4e:	4770      	bx	lr

08001c50 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001c50:	2001      	movs	r0, #1
 8001c52:	4770      	bx	lr

08001c54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001c54:	f44f 60d5 	mov.w	r0, #1704	@ 0x6a8
 8001c58:	4770      	bx	lr

08001c5a <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001c5a:	f44f 63d5 	mov.w	r3, #1704	@ 0x6a8
 8001c5e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001c62:	3008      	adds	r0, #8
 8001c64:	4770      	bx	lr

08001c66 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001c66:	f44f 63d5 	mov.w	r3, #1704	@ 0x6a8
 8001c6a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001c6e:	3008      	adds	r0, #8
 8001c70:	4770      	bx	lr

08001c72 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001c72:	2001      	movs	r0, #1
 8001c74:	4770      	bx	lr

08001c76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001c76:	2010      	movs	r0, #16
 8001c78:	4770      	bx	lr

08001c7a <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001c7a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001c7e:	3008      	adds	r0, #8
 8001c80:	4770      	bx	lr

08001c82 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001c82:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001c86:	3008      	adds	r0, #8
 8001c88:	4770      	bx	lr

08001c8a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainScreenNoTransition();
 8001c8a:	4608      	mov	r0, r1
 8001c8c:	f000 bbcc 	b.w	8002428 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>

08001c90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001c90:	4b03      	ldr	r3, [pc, #12]	@ (8001ca0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001c92:	b510      	push	{r4, lr}
 8001c94:	4604      	mov	r4, r0
 8001c96:	6003      	str	r3, [r0, #0]
 8001c98:	f008 fb1b 	bl	800a2d2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001c9c:	4620      	mov	r0, r4
 8001c9e:	bd10      	pop	{r4, pc}
 8001ca0:	0801fe74 	.word	0x0801fe74

08001ca4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001ca4:	b510      	push	{r4, lr}
 8001ca6:	4604      	mov	r4, r0
 8001ca8:	f7ff fff2 	bl	8001c90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001cac:	2114      	movs	r1, #20
 8001cae:	4620      	mov	r0, r4
 8001cb0:	f01c fd12 	bl	801e6d8 <_ZdlPvj>
 8001cb4:	4620      	mov	r0, r4
 8001cb6:	bd10      	pop	{r4, pc}

08001cb8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001cb8:	4b03      	ldr	r3, [pc, #12]	@ (8001cc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001cba:	b510      	push	{r4, lr}
 8001cbc:	4604      	mov	r4, r0
 8001cbe:	6003      	str	r3, [r0, #0]
 8001cc0:	f008 fb07 	bl	800a2d2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001cc4:	4620      	mov	r0, r4
 8001cc6:	bd10      	pop	{r4, pc}
 8001cc8:	0801fe40 	.word	0x0801fe40

08001ccc <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001ccc:	b510      	push	{r4, lr}
 8001cce:	4604      	mov	r4, r0
 8001cd0:	f7ff fff2 	bl	8001cb8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001cd4:	f44f 61d6 	mov.w	r1, #1712	@ 0x6b0
 8001cd8:	4620      	mov	r0, r4
 8001cda:	f01c fcfd 	bl	801e6d8 <_ZdlPvj>
 8001cde:	4620      	mov	r0, r4
 8001ce0:	bd10      	pop	{r4, pc}
	...

08001ce4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001ce4:	4b03      	ldr	r3, [pc, #12]	@ (8001cf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001ce6:	b510      	push	{r4, lr}
 8001ce8:	4604      	mov	r4, r0
 8001cea:	6003      	str	r3, [r0, #0]
 8001cec:	f008 faf1 	bl	800a2d2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001cf0:	4620      	mov	r0, r4
 8001cf2:	bd10      	pop	{r4, pc}
 8001cf4:	0801fe0c 	.word	0x0801fe0c

08001cf8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001cf8:	b510      	push	{r4, lr}
 8001cfa:	4604      	mov	r4, r0
 8001cfc:	f7ff fff2 	bl	8001ce4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d00:	2118      	movs	r1, #24
 8001d02:	4620      	mov	r0, r4
 8001d04:	f01c fce8 	bl	801e6d8 <_ZdlPvj>
 8001d08:	4620      	mov	r0, r4
 8001d0a:	bd10      	pop	{r4, pc}

08001d0c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001d0c:	4b08      	ldr	r3, [pc, #32]	@ (8001d30 <_ZN12FrontendHeapD1Ev+0x24>)
 8001d0e:	b510      	push	{r4, lr}
 8001d10:	4604      	mov	r4, r0
 8001d12:	6003      	str	r3, [r0, #0]
 8001d14:	f200 60dc 	addw	r0, r0, #1756	@ 0x6dc
 8001d18:	f7ff ffba 	bl	8001c90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d1c:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001d20:	f7ff ffca 	bl	8001cb8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d24:	f104 0014 	add.w	r0, r4, #20
 8001d28:	f7ff ffdc 	bl	8001ce4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d2c:	4620      	mov	r0, r4
 8001d2e:	bd10      	pop	{r4, pc}
 8001d30:	0801fea8 	.word	0x0801fea8

08001d34 <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001d34:	b508      	push	{r3, lr}
 8001d36:	4802      	ldr	r0, [pc, #8]	@ (8001d40 <__tcf_0+0xc>)
 8001d38:	f7ff ffe8 	bl	8001d0c <_ZN12FrontendHeapD1Ev>
 8001d3c:	bd08      	pop	{r3, pc}
 8001d3e:	bf00      	nop
 8001d40:	200013f4 	.word	0x200013f4

08001d44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001d44:	b510      	push	{r4, lr}
 8001d46:	4604      	mov	r4, r0
 8001d48:	f7ff ffe0 	bl	8001d0c <_ZN12FrontendHeapD1Ev>
 8001d4c:	f44f 6105 	mov.w	r1, #2128	@ 0x850
 8001d50:	4620      	mov	r0, r4
 8001d52:	f01c fcc1 	bl	801e6d8 <_ZdlPvj>
 8001d56:	4620      	mov	r0, r4
 8001d58:	bd10      	pop	{r4, pc}
	...

08001d5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
 8001d5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001d60:	f000 f9c4 	bl	80020ec <_ZN14BitmapDatabase11getInstanceEv>
 8001d64:	2400      	movs	r4, #0
 8001d66:	4605      	mov	r5, r0
 8001d68:	f000 f9c4 	bl	80020f4 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001d6c:	4623      	mov	r3, r4
 8001d6e:	4601      	mov	r1, r0
 8001d70:	4622      	mov	r2, r4
 8001d72:	4628      	mov	r0, r5
 8001d74:	9400      	str	r4, [sp, #0]
 8001d76:	f00f f82b 	bl	8010dd0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001d7a:	4b25      	ldr	r3, [pc, #148]	@ (8001e10 <touchgfx_init+0xb4>)
 8001d7c:	4a25      	ldr	r2, [pc, #148]	@ (8001e14 <touchgfx_init+0xb8>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001d7e:	4620      	mov	r0, r4
        static FrontendHeap instance;
 8001d80:	4d25      	ldr	r5, [pc, #148]	@ (8001e18 <touchgfx_init+0xbc>)
 8001d82:	601a      	str	r2, [r3, #0]
 8001d84:	f001 f99a 	bl	80030bc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001d88:	4824      	ldr	r0, [pc, #144]	@ (8001e1c <touchgfx_init+0xc0>)
 8001d8a:	f00e ff89 	bl	8010ca0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001d8e:	682b      	ldr	r3, [r5, #0]
 8001d90:	f3bf 8f5b 	dmb	ish
 8001d94:	07db      	lsls	r3, r3, #31
 8001d96:	d435      	bmi.n	8001e04 <touchgfx_init+0xa8>
 8001d98:	4628      	mov	r0, r5
 8001d9a:	f01c fc9f 	bl	801e6dc <__cxa_guard_acquire>
 8001d9e:	b388      	cbz	r0, 8001e04 <touchgfx_init+0xa8>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001da0:	4c1f      	ldr	r4, [pc, #124]	@ (8001e20 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
        app(model, *this)
 8001da2:	4b20      	ldr	r3, [pc, #128]	@ (8001e24 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001da4:	f204 66f4 	addw	r6, r4, #1780	@ 0x6f4
        : presenterStorage(pres),
 8001da8:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8001dac:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 8001db0:	f204 67dc 	addw	r7, r4, #1756	@ 0x6dc
 8001db4:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 8001db6:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001db8:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001dbc:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001dbe:	6126      	str	r6, [r4, #16]
 8001dc0:	f008 fa88 	bl	800a2d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001dc4:	4b18      	ldr	r3, [pc, #96]	@ (8001e28 <touchgfx_init+0xcc>)
 8001dc6:	4640      	mov	r0, r8
 8001dc8:	6163      	str	r3, [r4, #20]
 8001dca:	f008 fa83 	bl	800a2d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001dce:	4b17      	ldr	r3, [pc, #92]	@ (8001e2c <touchgfx_init+0xd0>)
 8001dd0:	4638      	mov	r0, r7
 8001dd2:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001dd4:	f008 fa7e 	bl	800a2d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001dd8:	4b15      	ldr	r3, [pc, #84]	@ (8001e30 <touchgfx_init+0xd4>)
 8001dda:	f504 60de 	add.w	r0, r4, #1776	@ 0x6f0
 8001dde:	f8c4 36dc 	str.w	r3, [r4, #1756]	@ 0x6dc
 8001de2:	f002 f8fb 	bl	8003fdc <_ZN5ModelC1Ev>
 8001de6:	4622      	mov	r2, r4
 8001de8:	f504 61de 	add.w	r1, r4, #1776	@ 0x6f0
 8001dec:	4630      	mov	r0, r6
 8001dee:	f002 f899 	bl	8003f24 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001df2:	4630      	mov	r0, r6
 8001df4:	f000 fb18 	bl	8002428 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
        static FrontendHeap instance;
 8001df8:	480e      	ldr	r0, [pc, #56]	@ (8001e34 <touchgfx_init+0xd8>)
 8001dfa:	f01c fcb9 	bl	801e770 <atexit>
 8001dfe:	4628      	mov	r0, r5
 8001e00:	f01c fc78 	bl	801e6f4 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001e04:	480c      	ldr	r0, [pc, #48]	@ (8001e38 <touchgfx_init+0xdc>)
}
 8001e06:	b002      	add	sp, #8
 8001e08:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001e0c:	f7ff bc36 	b.w	800167c <_ZN11TouchGFXHAL10initializeEv>
 8001e10:	20015108 	.word	0x20015108
 8001e14:	200005c0 	.word	0x200005c0
 8001e18:	200013f0 	.word	0x200013f0
 8001e1c:	20000008 	.word	0x20000008
 8001e20:	200013f4 	.word	0x200013f4
 8001e24:	0801fea8 	.word	0x0801fea8
 8001e28:	0801fe0c 	.word	0x0801fe0c
 8001e2c:	0801fe40 	.word	0x0801fe40
 8001e30:	0801fe74 	.word	0x0801fe74
 8001e34:	08001d35 	.word	0x08001d35
 8001e38:	20000544 	.word	0x20000544

08001e3c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001e3c:	4770      	bx	lr
	...

08001e40 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001e40:	4801      	ldr	r0, [pc, #4]	@ (8001e48 <touchgfx_taskEntry+0x8>)
 8001e42:	f008 bd56 	b.w	800a8f2 <_ZN8touchgfx3HAL9taskEntryEv>
 8001e46:	bf00      	nop
 8001e48:	20000544 	.word	0x20000544

08001e4c <_GLOBAL__sub_I_touchgfx_init>:
}
 8001e4c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001e4e:	4e22      	ldr	r6, [pc, #136]	@ (8001ed8 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001e50:	4b22      	ldr	r3, [pc, #136]	@ (8001edc <_GLOBAL__sub_I_touchgfx_init+0x90>)
 8001e52:	4c23      	ldr	r4, [pc, #140]	@ (8001ee0 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001e54:	4630      	mov	r0, r6
static LCD16bpp display;
 8001e56:	4d23      	ldr	r5, [pc, #140]	@ (8001ee4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001e58:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001e5a:	f7ff fed1 	bl	8001c00 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001e5e:	4628      	mov	r0, r5
 8001e60:	f013 fa90 	bl	8015384 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8001e64:	4b20      	ldr	r3, [pc, #128]	@ (8001ee8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
          mcuInstrumentation(0),
 8001e66:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001e68:	f44f 7180 	mov.w	r1, #256	@ 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001e6c:	481f      	ldr	r0, [pc, #124]	@ (8001eec <_GLOBAL__sub_I_touchgfx_init+0xa0>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001e6e:	861a      	strh	r2, [r3, #48]	@ 0x30
          useAuxiliaryLCD(false),
 8001e70:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
 8001e74:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 8001e76:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 8001e7a:	675a      	str	r2, [r3, #116]	@ 0x74
          touchController(touchCtrl),
 8001e7c:	60dc      	str	r4, [r3, #12]
          auxiliaryLCD(0),
 8001e7e:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001e82:	491b      	ldr	r1, [pc, #108]	@ (8001ef0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          vSyncCompensationEnabled(false),
 8001e84:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001e88:	491a      	ldr	r1, [pc, #104]	@ (8001ef4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001e8a:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 8001e8c:	491a      	ldr	r1, [pc, #104]	@ (8001ef8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8001e8e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001e90:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8001e94:	8001      	strh	r1, [r0, #0]
 8001e96:	4819      	ldr	r0, [pc, #100]	@ (8001efc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 8001e98:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001e9a:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8001e9e:	4818      	ldr	r0, [pc, #96]	@ (8001f00 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          buttonController(0),
 8001ea0:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001ea4:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001ea8:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001eac:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8001eb0:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8001eb4:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001eb8:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 8001ebc:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lcdRef(display),
 8001ec0:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001ec4:	8001      	strh	r1, [r0, #0]
 8001ec6:	480f      	ldr	r0, [pc, #60]	@ (8001f04 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001ec8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001ecc:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001ece:	490e      	ldr	r1, [pc, #56]	@ (8001f08 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001ed0:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001ed2:	4a0e      	ldr	r2, [pc, #56]	@ (8001f0c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001ed4:	601a      	str	r2, [r3, #0]
}
 8001ed6:	bd70      	pop	{r4, r5, r6, pc}
 8001ed8:	2000064c 	.word	0x2000064c
 8001edc:	0801f8fc 	.word	0x0801f8fc
 8001ee0:	200013ec 	.word	0x200013ec
 8001ee4:	200005c4 	.word	0x200005c4
 8001ee8:	20000544 	.word	0x20000544
 8001eec:	200150a0 	.word	0x200150a0
 8001ef0:	01000001 	.word	0x01000001
 8001ef4:	01010000 	.word	0x01010000
 8001ef8:	200150ac 	.word	0x200150ac
 8001efc:	200150a6 	.word	0x200150a6
 8001f00:	200150a2 	.word	0x200150a2
 8001f04:	200150a8 	.word	0x200150a8
 8001f08:	200150a4 	.word	0x200150a4
 8001f0c:	0801fa88 	.word	0x0801fa88

08001f10 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001f10:	4801      	ldr	r0, [pc, #4]	@ (8001f18 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001f12:	f7ff bd2d 	b.w	8001970 <_ZN8STM32DMAD1Ev>
 8001f16:	bf00      	nop
 8001f18:	2000064c 	.word	0x2000064c

08001f1c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001f1c:	4b03      	ldr	r3, [pc, #12]	@ (8001f2c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001f1e:	2290      	movs	r2, #144	@ 0x90
 8001f20:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8001f24:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001f28:	4770      	bx	lr
 8001f2a:	bf00      	nop
 8001f2c:	e000e100 	.word	0xe000e100

08001f30 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001f30:	4a09      	ldr	r2, [pc, #36]	@ (8001f58 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001f32:	490a      	ldr	r1, [pc, #40]	@ (8001f5c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001f34:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001f36:	480a      	ldr	r0, [pc, #40]	@ (8001f60 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001f38:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001f3c:	3b01      	subs	r3, #1
 8001f3e:	b29b      	uxth	r3, r3
 8001f40:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001f42:	6911      	ldr	r1, [r2, #16]
 8001f44:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001f48:	3901      	subs	r1, #1
 8001f4a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001f4c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001f4e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001f50:	f043 0301 	orr.w	r3, r3, #1
 8001f54:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001f56:	4770      	bx	lr
 8001f58:	40016800 	.word	0x40016800
 8001f5c:	20001c46 	.word	0x20001c46
 8001f60:	20001c44 	.word	0x20001c44

08001f64 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001f64:	4b01      	ldr	r3, [pc, #4]	@ (8001f6c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001f66:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8001f6a:	4770      	bx	lr
 8001f6c:	40016800 	.word	0x40016800

08001f70 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001f70:	4b02      	ldr	r3, [pc, #8]	@ (8001f7c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001f72:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001f74:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001f78:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001f7a:	4770      	bx	lr
 8001f7c:	40016800 	.word	0x40016800

08001f80 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8001f80:	4a12      	ldr	r2, [pc, #72]	@ (8001fcc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x4c>)
 8001f82:	6953      	ldr	r3, [r2, #20]
 8001f84:	03db      	lsls	r3, r3, #15
{
 8001f86:	b570      	push	{r4, r5, r6, lr}
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8001f88:	d51e      	bpl.n	8001fc8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8001f8a:	2300      	movs	r3, #0
 8001f8c:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001f90:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 8001f94:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001f98:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001f9c:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8001fa0:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8001fa4:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001fa6:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001faa:	4601      	mov	r1, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001fac:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
 8001fb0:	3901      	subs	r1, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001fb2:	f8c2 5274 	str.w	r5, [r2, #628]	@ 0x274
      } while (ways-- != 0U);
 8001fb6:	d2f9      	bcs.n	8001fac <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>
    } while(sets-- != 0U);
 8001fb8:	3b20      	subs	r3, #32
 8001fba:	f113 0f20 	cmn.w	r3, #32
 8001fbe:	d1f2      	bne.n	8001fa6 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x26>
 8001fc0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001fc4:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
 8001fc8:	bd70      	pop	{r4, r5, r6, pc}
 8001fca:	bf00      	nop
 8001fcc:	e000ed00 	.word	0xe000ed00

08001fd0 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001fd0:	b570      	push	{r4, r5, r6, lr}
 8001fd2:	4604      	mov	r4, r0
    HAL::initialize();
 8001fd4:	f008 fc79 	bl	800a8ca <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001fd8:	6823      	ldr	r3, [r4, #0]
 8001fda:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 8001fdc:	f00b fe9c 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
 8001fe0:	4601      	mov	r1, r0
 8001fe2:	4620      	mov	r0, r4
 8001fe4:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001fe6:	6823      	ldr	r3, [r4, #0]
 8001fe8:	4a05      	ldr	r2, [pc, #20]	@ (8002000 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001fea:	4620      	mov	r0, r4
 8001fec:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 8001ff0:	2300      	movs	r3, #0
 8001ff2:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
 8001ff6:	46ac      	mov	ip, r5
}
 8001ff8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001ffc:	4760      	bx	ip
 8001ffe:	bf00      	nop
 8002000:	c007f800 	.word	0xc007f800

08002004 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002004:	f008 bc48 	b.w	800a898 <_ZN8touchgfx3HAL10beginFrameEv>

08002008 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002008:	f008 bc52 	b.w	800a8b0 <_ZN8touchgfx3HAL8endFrameEv>

0800200c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
    HAL::flushFrameBuffer(rect);
 800200c:	f008 bc0e 	b.w	800a82c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002010 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
    return HAL::blockCopy(dest, src, numBytes);
 8002010:	f008 bd7d 	b.w	800ab0e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002014 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002014:	4b03      	ldr	r3, [pc, #12]	@ (8002024 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8002016:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800201a:	609a      	str	r2, [r3, #8]
 800201c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002020:	609a      	str	r2, [r3, #8]
}
 8002022:	4770      	bx	lr
 8002024:	e000e100 	.word	0xe000e100

08002028 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002028:	4b08      	ldr	r3, [pc, #32]	@ (800204c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800202a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800202e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002032:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002036:	f3bf 8f6f 	isb	sy
 800203a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800203e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002042:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002046:	f3bf 8f6f 	isb	sy
}
 800204a:	4770      	bx	lr
 800204c:	e000e100 	.word	0xe000e100

08002050 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002050:	b510      	push	{r4, lr}
        return instance;
 8002052:	4c14      	ldr	r4, [pc, #80]	@ (80020a4 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002054:	6823      	ldr	r3, [r4, #0]
 8002056:	b323      	cbz	r3, 80020a2 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002058:	4b13      	ldr	r3, [pc, #76]	@ (80020a8 <HAL_LTDC_LineEventCallback+0x58>)
 800205a:	4a14      	ldr	r2, [pc, #80]	@ (80020ac <HAL_LTDC_LineEventCallback+0x5c>)
 800205c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800205e:	8811      	ldrh	r1, [r2, #0]
 8002060:	428b      	cmp	r3, r1
 8002062:	d113      	bne.n	800208c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002064:	4b12      	ldr	r3, [pc, #72]	@ (80020b0 <HAL_LTDC_LineEventCallback+0x60>)
 8002066:	8819      	ldrh	r1, [r3, #0]
 8002068:	f003 fde6 	bl	8005c38 <HAL_LTDC_ProgramLineEvent>
 800206c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800206e:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 8002072:	3301      	adds	r3, #1
 8002074:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002078:	f7ff fc2a 	bl	80018d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800207c:	6820      	ldr	r0, [r4, #0]
 800207e:	f009 f971 	bl	800b364 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8002082:	2000      	movs	r0, #0

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002084:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002088:	f7ff ba28 	b.w	80014dc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800208c:	f003 fdd4 	bl	8005c38 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002090:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8002092:	6803      	ldr	r3, [r0, #0]
 8002094:	6a1b      	ldr	r3, [r3, #32]
 8002096:	4798      	blx	r3
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002098:	2000      	movs	r0, #0
    }
 800209a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800209e:	f7ff ba4d 	b.w	800153c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80020a2:	bd10      	pop	{r4, pc}
 80020a4:	200150ac 	.word	0x200150ac
 80020a8:	40016800 	.word	0x40016800
 80020ac:	20001c46 	.word	0x20001c46
 80020b0:	20001c44 	.word	0x20001c44

080020b4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId T___SINGLEUSE_JOGG = 1; // verdana_18_4bpp
    static const touchgfx::FontId LARGE = 2;              // verdana_40_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80020b4:	4770      	bx	lr

080020b6 <_ZN23ApplicationFontProviderD0Ev>:
 80020b6:	b510      	push	{r4, lr}
 80020b8:	4604      	mov	r4, r0
 80020ba:	2104      	movs	r1, #4
 80020bc:	f01c fb0c 	bl	801e6d8 <_ZdlPvj>
 80020c0:	4620      	mov	r0, r4
 80020c2:	bd10      	pop	{r4, pc}

080020c4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80020c4:	2901      	cmp	r1, #1
{
 80020c6:	b508      	push	{r3, lr}
    switch (typography)
 80020c8:	d006      	beq.n	80020d8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 80020ca:	2902      	cmp	r1, #2
 80020cc:	d008      	beq.n	80020e0 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 80020ce:	b959      	cbnz	r1, 80020e8 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::LABELS:
        // NotoSans_Regular_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80020d0:	f001 f840 	bl	8003154 <_ZN17TypedTextDatabase8getFontsEv>
 80020d4:	6800      	ldr	r0, [r0, #0]
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 80020d6:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80020d8:	f001 f83c 	bl	8003154 <_ZN17TypedTextDatabase8getFontsEv>
 80020dc:	6840      	ldr	r0, [r0, #4]
 80020de:	e7fa      	b.n	80020d6 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80020e0:	f001 f838 	bl	8003154 <_ZN17TypedTextDatabase8getFontsEv>
 80020e4:	6880      	ldr	r0, [r0, #8]
 80020e6:	e7f6      	b.n	80020d6 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 80020e8:	2000      	movs	r0, #0
 80020ea:	e7f4      	b.n	80020d6 <_ZN23ApplicationFontProvider7getFontEt+0x12>

080020ec <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80020ec:	4800      	ldr	r0, [pc, #0]	@ (80020f0 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80020ee:	4770      	bx	lr
 80020f0:	0801fec8 	.word	0x0801fec8

080020f4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80020f4:	2009      	movs	r0, #9
 80020f6:	4770      	bx	lr

080020f8 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80020f8:	b513      	push	{r0, r1, r4, lr}
 80020fa:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80020fc:	b151      	cbz	r1, 8002114 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020fe:	6803      	ldr	r3, [r0, #0]
 8002100:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
 8002102:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002104:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002108:	689c      	ldr	r4, [r3, #8]
 800210a:	f10d 0303 	add.w	r3, sp, #3
 800210e:	47a0      	blx	r4
        return glyph;
    }
 8002110:	b002      	add	sp, #8
 8002112:	bd10      	pop	{r4, pc}
            return 0;
 8002114:	4608      	mov	r0, r1
 8002116:	e7fb      	b.n	8002110 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002118 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002118:	89c0      	ldrh	r0, [r0, #14]
 800211a:	4770      	bx	lr

0800211c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 800211c:	8a00      	ldrh	r0, [r0, #16]
 800211e:	4770      	bx	lr

08002120 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002120:	88c0      	ldrh	r0, [r0, #6]
 8002122:	4770      	bx	lr

08002124 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002124:	8880      	ldrh	r0, [r0, #4]
 8002126:	4770      	bx	lr

08002128 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002128:	7a80      	ldrb	r0, [r0, #10]
    }
 800212a:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 800212e:	4770      	bx	lr

08002130 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002130:	7a80      	ldrb	r0, [r0, #10]
    }
 8002132:	09c0      	lsrs	r0, r0, #7
 8002134:	4770      	bx	lr

08002136 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002136:	2000      	movs	r0, #0
 8002138:	4770      	bx	lr
	...

0800213c <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 800213c:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002144 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002140:	4770      	bx	lr
 8002142:	bf00      	nop
 8002144:	00000000 	.word	0x00000000

08002148 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002148:	2000      	movs	r0, #0
 800214a:	4770      	bx	lr

0800214c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800214c:	8081      	strh	r1, [r0, #4]
    }
 800214e:	4770      	bx	lr

08002150 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002150:	80c1      	strh	r1, [r0, #6]
    }
 8002152:	4770      	bx	lr

08002154 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002154:	8101      	strh	r1, [r0, #8]
    }
 8002156:	4770      	bx	lr

08002158 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002158:	8141      	strh	r1, [r0, #10]
    }
 800215a:	4770      	bx	lr

0800215c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800215c:	4770      	bx	lr

0800215e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800215e:	4770      	bx	lr

08002160 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002160:	4770      	bx	lr

08002162 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002162:	4770      	bx	lr

08002164 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002164:	4770      	bx	lr

08002166 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002166:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002168:	88c4      	ldrh	r4, [r0, #6]
 800216a:	6803      	ldr	r3, [r0, #0]
 800216c:	1b12      	subs	r2, r2, r4
 800216e:	8884      	ldrh	r4, [r0, #4]
 8002170:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002172:	1b09      	subs	r1, r1, r4
 8002174:	b212      	sxth	r2, r2
    }
 8002176:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800217a:	b209      	sxth	r1, r1
 800217c:	4718      	bx	r3

0800217e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800217e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002182:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002184:	f04f 33ff 	mov.w	r3, #4294967295
 8002188:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800218a:	6813      	ldr	r3, [r2, #0]
 800218c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800218e:	6010      	str	r0, [r2, #0]
    }
 8002190:	4770      	bx	lr

08002192 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002192:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002194:	4770      	bx	lr

08002196 <_ZN20CustomContainer1BaseD1Ev>:
}

CustomContainer1Base::~CustomContainer1Base()
{

}
 8002196:	4770      	bx	lr

08002198 <_ZN20CustomContainer1Base10initializeEv>:

void CustomContainer1Base::initialize()
{

}
 8002198:	4770      	bx	lr

0800219a <_ZN20CustomContainer1BaseD0Ev>:
CustomContainer1Base::~CustomContainer1Base()
 800219a:	b510      	push	{r4, lr}
 800219c:	4604      	mov	r4, r0
}
 800219e:	2184      	movs	r1, #132	@ 0x84
 80021a0:	f01c fa9a 	bl	801e6d8 <_ZdlPvj>
 80021a4:	4620      	mov	r0, r4
 80021a6:	bd10      	pop	{r4, pc}

080021a8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80021a8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80021ac:	b112      	cbz	r2, 80021b4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80021ae:	6803      	ldr	r3, [r0, #0]
 80021b0:	695b      	ldr	r3, [r3, #20]
 80021b2:	4718      	bx	r3
    }
 80021b4:	4770      	bx	lr

080021b6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80021b6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80021ba:	b11a      	cbz	r2, 80021c4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80021bc:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80021c0:	b102      	cbz	r2, 80021c4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80021c2:	6018      	str	r0, [r3, #0]
        }
    }
 80021c4:	4770      	bx	lr

080021c6 <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
 80021c6:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80021c8:	b570      	push	{r4, r5, r6, lr}
 80021ca:	4604      	mov	r4, r0
        setX(x);
 80021cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 80021ce:	4615      	mov	r5, r2
        setX(x);
 80021d0:	4798      	blx	r3
        setY(y);
 80021d2:	6823      	ldr	r3, [r4, #0]
 80021d4:	4620      	mov	r0, r4
 80021d6:	4629      	mov	r1, r5
 80021d8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 80021da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80021de:	4718      	bx	r3

080021e0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 80021e0:	2300      	movs	r3, #0
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 80021e2:	b510      	push	{r4, lr}
 80021e4:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80021e8:	e9c0 3303 	strd	r3, r3, [r0, #12]
          cachedAbsX(0),
 80021ec:	e9c0 3307 	strd	r3, r3, [r0, #28]
          nextSibling(0),
 80021f0:	e9c0 3305 	strd	r3, r3, [r0, #20]
          touchable(false),
 80021f4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80021f8:	4604      	mov	r4, r0
 80021fa:	8483      	strh	r3, [r0, #36]	@ 0x24
        : Widget(), bitmap(bmp), alpha(255)
 80021fc:	4b05      	ldr	r3, [pc, #20]	@ (8002214 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x34>)
 80021fe:	6003      	str	r3, [r0, #0]
 8002200:	880b      	ldrh	r3, [r1, #0]
 8002202:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8002204:	23ff      	movs	r3, #255	@ 0xff
 8002206:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
    {
        Image::setBitmap(bmp);
 800220a:	f009 ff34 	bl	800c076 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800220e:	4620      	mov	r0, r4
 8002210:	bd10      	pop	{r4, pc}
 8002212:	bf00      	nop
 8002214:	080210d8 	.word	0x080210d8

08002218 <_ZN20CustomContainer1BaseC1Ev>:
 8002218:	f44f 7380 	mov.w	r3, #256	@ 0x100
CustomContainer1Base::CustomContainer1Base()
 800221c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8002220:	4604      	mov	r4, r0
 8002222:	2500      	movs	r5, #0
 8002224:	4606      	mov	r6, r0
 8002226:	8483      	strh	r3, [r0, #36]	@ 0x24
 8002228:	4b24      	ldr	r3, [pc, #144]	@ (80022bc <_ZN20CustomContainer1BaseC1Ev+0xa4>)
 800222a:	f104 0758 	add.w	r7, r4, #88	@ 0x58
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800222e:	f64f 78ff 	movw	r8, #65535	@ 0xffff
          firstChild(0)
 8002232:	6285      	str	r5, [r0, #40]	@ 0x28
 8002234:	a901      	add	r1, sp, #4
 8002236:	f04f 0907 	mov.w	r9, #7
 800223a:	f8ad 8004 	strh.w	r8, [sp, #4]
 800223e:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002242:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 8002246:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 800224a:	e9c0 5507 	strd	r5, r5, [r0, #28]
 800224e:	f846 3b2c 	str.w	r3, [r6], #44
 8002252:	4630      	mov	r0, r6
 8002254:	f7ff ffc4 	bl	80021e0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002258:	a901      	add	r1, sp, #4
 800225a:	4638      	mov	r0, r7
 800225c:	f8ad 8004 	strh.w	r8, [sp, #4]
 8002260:	f7ff ffbe 	bl	80021e0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        rect.width = width;
 8002264:	4b16      	ldr	r3, [pc, #88]	@ (80022c0 <_ZN20CustomContainer1BaseC1Ev+0xa8>)
    image2.setXY(0, 54);
 8002266:	2236      	movs	r2, #54	@ 0x36
 8002268:	4629      	mov	r1, r5
 800226a:	60a3      	str	r3, [r4, #8]
 800226c:	4630      	mov	r0, r6
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800226e:	f04f 0896 	mov.w	r8, #150	@ 0x96
 8002272:	f7ff ffa8 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 8002276:	a901      	add	r1, sp, #4
 8002278:	4630      	mov	r0, r6
 800227a:	f8ad 9004 	strh.w	r9, [sp, #4]
 800227e:	f009 fefa 	bl	800c076 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image2);
 8002282:	4631      	mov	r1, r6
 8002284:	4620      	mov	r0, r4
 8002286:	f884 8054 	strb.w	r8, [r4, #84]	@ 0x54
 800228a:	f008 f835 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, -2);
 800228e:	f06f 0201 	mvn.w	r2, #1
 8002292:	4629      	mov	r1, r5
 8002294:	4638      	mov	r0, r7
 8002296:	f7ff ff96 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 800229a:	a901      	add	r1, sp, #4
 800229c:	4638      	mov	r0, r7
 800229e:	f8ad 9004 	strh.w	r9, [sp, #4]
 80022a2:	f009 fee8 	bl	800c076 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image1);
 80022a6:	4620      	mov	r0, r4
 80022a8:	4639      	mov	r1, r7
 80022aa:	f884 8080 	strb.w	r8, [r4, #128]	@ 0x80
 80022ae:	f008 f823 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80022b2:	4620      	mov	r0, r4
 80022b4:	b003      	add	sp, #12
 80022b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80022ba:	bf00      	nop
 80022bc:	0801ff84 	.word	0x0801ff84
 80022c0:	006e0082 	.word	0x006e0082

080022c4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80022c4:	4770      	bx	lr

080022c6 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80022c6:	b510      	push	{r4, lr}
 80022c8:	4604      	mov	r4, r0
    }
 80022ca:	2108      	movs	r1, #8
 80022cc:	f01c fa04 	bl	801e6d8 <_ZdlPvj>
 80022d0:	4620      	mov	r0, r4
 80022d2:	bd10      	pop	{r4, pc}

080022d4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80022d4:	4770      	bx	lr

080022d6 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80022d6:	4770      	bx	lr

080022d8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80022d8:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 80022dc:	6808      	ldr	r0, [r1, #0]
 80022de:	6849      	ldr	r1, [r1, #4]
 80022e0:	c303      	stmia	r3!, {r0, r1}
    }
 80022e2:	4770      	bx	lr

080022e4 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80022e4:	4770      	bx	lr

080022e6 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80022e6:	4770      	bx	lr

080022e8 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80022e8:	6041      	str	r1, [r0, #4]
    }
 80022ea:	4770      	bx	lr

080022ec <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80022ec:	4770      	bx	lr
	...

080022f0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80022f0:	4b06      	ldr	r3, [pc, #24]	@ (800230c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80022f2:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80022f6:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80022fa:	2300      	movs	r3, #0
 80022fc:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002300:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002304:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoMainScreenNoTransition();
    }
 8002308:	4770      	bx	lr
 800230a:	bf00      	nop
 800230c:	08002889 	.word	0x08002889

08002310 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002310:	2301      	movs	r3, #1
 8002312:	7203      	strb	r3, [r0, #8]
    }
 8002314:	4770      	bx	lr

08002316 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002316:	4770      	bx	lr

08002318 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002318:	4770      	bx	lr

0800231a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800231a:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800231c:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
 800231e:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002320:	68c2      	ldr	r2, [r0, #12]
 8002322:	689b      	ldr	r3, [r3, #8]
 8002324:	1054      	asrs	r4, r2, #1
 8002326:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800232a:	07d2      	lsls	r2, r2, #31
 800232c:	bf48      	it	mi
 800232e:	590a      	ldrmi	r2, [r1, r4]
    }
 8002330:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002334:	bf48      	it	mi
 8002336:	58d3      	ldrmi	r3, [r2, r3]
 8002338:	4718      	bx	r3

0800233a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800233a:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 800233c:	6840      	ldr	r0, [r0, #4]
 800233e:	b130      	cbz	r0, 800234e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002340:	689a      	ldr	r2, [r3, #8]
 8002342:	b91a      	cbnz	r2, 800234c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002344:	68d8      	ldr	r0, [r3, #12]
 8002346:	f000 0001 	and.w	r0, r0, #1
 800234a:	4770      	bx	lr
 800234c:	2001      	movs	r0, #1
    }
 800234e:	4770      	bx	lr

08002350 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002350:	b510      	push	{r4, lr}
 8002352:	4604      	mov	r4, r0
 8002354:	210c      	movs	r1, #12
 8002356:	f01c f9bf 	bl	801e6d8 <_ZdlPvj>
 800235a:	4620      	mov	r0, r4
 800235c:	bd10      	pop	{r4, pc}

0800235e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800235e:	b510      	push	{r4, lr}
 8002360:	4604      	mov	r4, r0
 8002362:	2110      	movs	r1, #16
 8002364:	f01c f9b8 	bl	801e6d8 <_ZdlPvj>
 8002368:	4620      	mov	r0, r4
 800236a:	bd10      	pop	{r4, pc}

0800236c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800236c:	b510      	push	{r4, lr}
 800236e:	4604      	mov	r4, r0
 8002370:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002374:	f01c f9b0 	bl	801e6d8 <_ZdlPvj>
 8002378:	4620      	mov	r0, r4
 800237a:	bd10      	pop	{r4, pc}

0800237c <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800237c:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 800237e:	f00b fccb 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
 8002382:	6803      	ldr	r3, [r0, #0]
    }
 8002384:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002388:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800238a:	4718      	bx	r3

0800238c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800238c:	b510      	push	{r4, lr}
 800238e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002390:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002394:	b158      	cbz	r0, 80023ae <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002396:	6803      	ldr	r3, [r0, #0]
 8002398:	68db      	ldr	r3, [r3, #12]
 800239a:	4798      	blx	r3
 800239c:	b138      	cbz	r0, 80023ae <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800239e:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 80023a2:	6803      	ldr	r3, [r0, #0]
 80023a4:	689b      	ldr	r3, [r3, #8]
 80023a6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80023a8:	2300      	movs	r3, #0
 80023aa:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 80023ae:	bd10      	pop	{r4, pc}

080023b0 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80023b0:	4b04      	ldr	r3, [pc, #16]	@ (80023c4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80023b2:	681b      	ldr	r3, [r3, #0]
 80023b4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80023b8:	b10a      	cbz	r2, 80023be <_ZN8touchgfx3HAL3lcdEv+0xe>
 80023ba:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80023bc:	b900      	cbnz	r0, 80023c0 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80023be:	6898      	ldr	r0, [r3, #8]
    }
 80023c0:	4770      	bx	lr
 80023c2:	bf00      	nop
 80023c4:	200150ac 	.word	0x200150ac

080023c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80023c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80023ca:	4604      	mov	r4, r0
 80023cc:	4617      	mov	r7, r2
 80023ce:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80023d0:	f00b fd68 	bl	800dea4 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80023d4:	4b10      	ldr	r3, [pc, #64]	@ (8002418 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
 80023d6:	2500      	movs	r5, #0
        instance = this;
 80023d8:	601c      	str	r4, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80023da:	4629      	mov	r1, r5
      model(m)
 80023dc:	4b0f      	ldr	r3, [pc, #60]	@ (800241c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80023de:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80023e0:	4b0f      	ldr	r3, [pc, #60]	@ (8002420 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80023e2:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 80023e6:	4b0f      	ldr	r3, [pc, #60]	@ (8002424 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80023e8:	6818      	ldr	r0, [r3, #0]
 80023ea:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80023ee:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 80023f0:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
 80023f4:	689b      	ldr	r3, [r3, #8]
      model(m)
 80023f6:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80023fa:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80023fc:	4628      	mov	r0, r5
 80023fe:	f000 fe5d 	bl	80030bc <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002402:	f7ff ffd5 	bl	80023b0 <_ZN8touchgfx3HAL3lcdEv>
 8002406:	f014 fdee 	bl	8016fe6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800240a:	f7ff ffd1 	bl	80023b0 <_ZN8touchgfx3HAL3lcdEv>
 800240e:	f014 fe65 	bl	80170dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8002412:	4620      	mov	r0, r4
 8002414:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002416:	bf00      	nop
 8002418:	200150f8 	.word	0x200150f8
 800241c:	08020598 	.word	0x08020598
 8002420:	08020580 	.word	0x08020580
 8002424:	200150ac 	.word	0x200150ac

08002428 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002428:	4b06      	ldr	r3, [pc, #24]	@ (8002444 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x1c>)
 800242a:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800242e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002432:	2300      	movs	r3, #0
 8002434:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002438:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 800243c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002440:	4770      	bx	lr
 8002442:	bf00      	nop
 8002444:	08002889 	.word	0x08002889

08002448 <_ZN23FrontendApplicationBase28gotosensorScreenNoTransitionEv>:
 8002448:	4b06      	ldr	r3, [pc, #24]	@ (8002464 <_ZN23FrontendApplicationBase28gotosensorScreenNoTransitionEv+0x1c>)
 800244a:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800244e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002452:	2300      	movs	r3, #0
 8002454:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// sensor

void FrontendApplicationBase::gotosensorScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotosensorScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002458:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 800245c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002460:	4770      	bx	lr
 8002462:	bf00      	nop
 8002464:	08002741 	.word	0x08002741

08002468 <_ZN23FrontendApplicationBase27gotomotorScreenNoTransitionEv>:
 8002468:	4b06      	ldr	r3, [pc, #24]	@ (8002484 <_ZN23FrontendApplicationBase27gotomotorScreenNoTransitionEv+0x1c>)
 800246a:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800246e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002472:	2300      	movs	r3, #0
 8002474:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// motor

void FrontendApplicationBase::gotomotorScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotomotorScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002478:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 800247c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002480:	4770      	bx	lr
 8002482:	bf00      	nop
 8002484:	080025f9 	.word	0x080025f9

08002488 <_ZN23FrontendApplicationBase28gotoconfigScreenNoTransitionEv>:
 8002488:	4b06      	ldr	r3, [pc, #24]	@ (80024a4 <_ZN23FrontendApplicationBase28gotoconfigScreenNoTransitionEv+0x1c>)
 800248a:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800248e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002492:	2300      	movs	r3, #0
 8002494:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// config

void FrontendApplicationBase::gotoconfigScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoconfigScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002498:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 800249c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80024a0:	4770      	bx	lr
 80024a2:	bf00      	nop
 80024a4:	080024b1 	.word	0x080024b1

080024a8 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80024a8:	6803      	ldr	r3, [r0, #0]
 80024aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80024ac:	4718      	bx	r3
	...

080024b0 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoconfigScreenNoTransitionImpl()
{
 80024b0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<configView, configPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80024b4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80024b8:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80024ba:	68b0      	ldr	r0, [r6, #8]
 80024bc:	6803      	ldr	r3, [r0, #0]
 80024be:	6a1b      	ldr	r3, [r3, #32]
 80024c0:	4798      	blx	r3
 80024c2:	28db      	cmp	r0, #219	@ 0xdb
 80024c4:	d805      	bhi.n	80024d2 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x22>
 80024c6:	4b44      	ldr	r3, [pc, #272]	@ (80025d8 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x128>)
 80024c8:	21a3      	movs	r1, #163	@ 0xa3
 80024ca:	4a44      	ldr	r2, [pc, #272]	@ (80025dc <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80024cc:	4844      	ldr	r0, [pc, #272]	@ (80025e0 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x130>)
 80024ce:	f01c f931 	bl	801e734 <__assert_func>
 80024d2:	6870      	ldr	r0, [r6, #4]
 80024d4:	6803      	ldr	r3, [r0, #0]
 80024d6:	6a1b      	ldr	r3, [r3, #32]
 80024d8:	4798      	blx	r3
 80024da:	280f      	cmp	r0, #15
 80024dc:	d803      	bhi.n	80024e6 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x36>
 80024de:	4b41      	ldr	r3, [pc, #260]	@ (80025e4 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x134>)
 80024e0:	21a4      	movs	r1, #164	@ 0xa4
 80024e2:	4a3e      	ldr	r2, [pc, #248]	@ (80025dc <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x12c>)
 80024e4:	e7f2      	b.n	80024cc <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80024e6:	68f0      	ldr	r0, [r6, #12]
 80024e8:	6803      	ldr	r3, [r0, #0]
 80024ea:	6a1b      	ldr	r3, [r3, #32]
 80024ec:	4798      	blx	r3
 80024ee:	280b      	cmp	r0, #11
 80024f0:	d803      	bhi.n	80024fa <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x4a>
 80024f2:	4b3d      	ldr	r3, [pc, #244]	@ (80025e8 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x138>)
 80024f4:	21a5      	movs	r1, #165	@ 0xa5
 80024f6:	4a39      	ldr	r2, [pc, #228]	@ (80025dc <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x12c>)
 80024f8:	e7e8      	b.n	80024cc <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x1c>
    if (*currentTrans)
 80024fa:	f8df 90f4 	ldr.w	r9, [pc, #244]	@ 80025f0 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x140>
    Application::getInstance()->clearAllTimerWidgets();
 80024fe:	f00b fc0b 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002502:	3004      	adds	r0, #4
 8002504:	f00b fc2d 	bl	800dd62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 8002508:	f8d9 0000 	ldr.w	r0, [r9]
 800250c:	b110      	cbz	r0, 8002514 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800250e:	6803      	ldr	r3, [r0, #0]
 8002510:	68db      	ldr	r3, [r3, #12]
 8002512:	4798      	blx	r3
    if (*currentTrans)
 8002514:	f8d9 0000 	ldr.w	r0, [r9]
 8002518:	b110      	cbz	r0, 8002520 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800251a:	6803      	ldr	r3, [r0, #0]
 800251c:	681b      	ldr	r3, [r3, #0]
 800251e:	4798      	blx	r3
    if (*currentScreen)
 8002520:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80025f4 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x144>
 8002524:	f8d8 0000 	ldr.w	r0, [r8]
 8002528:	b110      	cbz	r0, 8002530 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800252a:	6803      	ldr	r3, [r0, #0]
 800252c:	695b      	ldr	r3, [r3, #20]
 800252e:	4798      	blx	r3
    if (*currentPresenter)
 8002530:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002534:	b110      	cbz	r0, 800253c <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002536:	6803      	ldr	r3, [r0, #0]
 8002538:	685b      	ldr	r3, [r3, #4]
 800253a:	4798      	blx	r3
    if (*currentScreen)
 800253c:	f8d8 0000 	ldr.w	r0, [r8]
 8002540:	b110      	cbz	r0, 8002548 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002542:	6803      	ldr	r3, [r0, #0]
 8002544:	681b      	ldr	r3, [r3, #0]
 8002546:	4798      	blx	r3
    if (*currentPresenter)
 8002548:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800254c:	b110      	cbz	r0, 8002554 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800254e:	6803      	ldr	r3, [r0, #0]
 8002550:	689b      	ldr	r3, [r3, #8]
 8002552:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002554:	2100      	movs	r1, #0
 8002556:	68f0      	ldr	r0, [r6, #12]
 8002558:	f7ff ffa6 	bl	80024a8 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 800255c:	f04f 0b00 	mov.w	fp, #0
 8002560:	4b22      	ldr	r3, [pc, #136]	@ (80025ec <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x13c>)
 8002562:	4604      	mov	r4, r0
 8002564:	f8c0 b004 	str.w	fp, [r0, #4]
 8002568:	4659      	mov	r1, fp
 800256a:	f880 b008 	strb.w	fp, [r0, #8]
 800256e:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002570:	68b0      	ldr	r0, [r6, #8]
 8002572:	6803      	ldr	r3, [r0, #0]
 8002574:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002576:	4798      	blx	r3
 8002578:	4605      	mov	r5, r0
 800257a:	f001 fd63 	bl	8004044 <_ZN10configViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800257e:	6870      	ldr	r0, [r6, #4]
 8002580:	4659      	mov	r1, fp
 8002582:	6803      	ldr	r3, [r0, #0]
 8002584:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002586:	4798      	blx	r3
 8002588:	4606      	mov	r6, r0
 800258a:	4629      	mov	r1, r5
 800258c:	f001 fd3a 	bl	8004004 <_ZN15configPresenterC1ER10configView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002590:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002592:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 8002596:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 8002598:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800259c:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80025a0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80025a4:	682b      	ldr	r3, [r5, #0]

    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80025a6:	f8c6 a008 	str.w	sl, [r6, #8]
 80025aa:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80025ac:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80025ae:	4798      	blx	r3
    newPresenter->activate();
 80025b0:	6833      	ldr	r3, [r6, #0]
 80025b2:	4630      	mov	r0, r6
 80025b4:	681b      	ldr	r3, [r3, #0]
 80025b6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80025b8:	4621      	mov	r1, r4
 80025ba:	4628      	mov	r0, r5
 80025bc:	f00d f878 	bl	800f6b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80025c0:	6823      	ldr	r3, [r4, #0]
 80025c2:	4620      	mov	r0, r4
 80025c4:	691b      	ldr	r3, [r3, #16]
 80025c6:	4798      	blx	r3
    newTransition->invalidate();
 80025c8:	6823      	ldr	r3, [r4, #0]
 80025ca:	4620      	mov	r0, r4
 80025cc:	695b      	ldr	r3, [r3, #20]
}
 80025ce:	b001      	add	sp, #4
 80025d0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025d4:	4718      	bx	r3
 80025d6:	bf00      	nop
 80025d8:	08020020 	.word	0x08020020
 80025dc:	080200ae 	.word	0x080200ae
 80025e0:	0802017e 	.word	0x0802017e
 80025e4:	080201c5 	.word	0x080201c5
 80025e8:	08020268 	.word	0x08020268
 80025ec:	080205ec 	.word	0x080205ec
 80025f0:	200150ec 	.word	0x200150ec
 80025f4:	200150e8 	.word	0x200150e8

080025f8 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv>:
{
 80025f8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<motorView, motorPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80025fc:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002600:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002602:	68b0      	ldr	r0, [r6, #8]
 8002604:	6803      	ldr	r3, [r0, #0]
 8002606:	6a1b      	ldr	r3, [r3, #32]
 8002608:	4798      	blx	r3
 800260a:	28db      	cmp	r0, #219	@ 0xdb
 800260c:	d805      	bhi.n	800261a <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x22>
 800260e:	4b44      	ldr	r3, [pc, #272]	@ (8002720 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x128>)
 8002610:	21a3      	movs	r1, #163	@ 0xa3
 8002612:	4a44      	ldr	r2, [pc, #272]	@ (8002724 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002614:	4844      	ldr	r0, [pc, #272]	@ (8002728 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x130>)
 8002616:	f01c f88d 	bl	801e734 <__assert_func>
 800261a:	6870      	ldr	r0, [r6, #4]
 800261c:	6803      	ldr	r3, [r0, #0]
 800261e:	6a1b      	ldr	r3, [r3, #32]
 8002620:	4798      	blx	r3
 8002622:	280f      	cmp	r0, #15
 8002624:	d803      	bhi.n	800262e <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x36>
 8002626:	4b41      	ldr	r3, [pc, #260]	@ (800272c <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x134>)
 8002628:	21a4      	movs	r1, #164	@ 0xa4
 800262a:	4a3e      	ldr	r2, [pc, #248]	@ (8002724 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x12c>)
 800262c:	e7f2      	b.n	8002614 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800262e:	68f0      	ldr	r0, [r6, #12]
 8002630:	6803      	ldr	r3, [r0, #0]
 8002632:	6a1b      	ldr	r3, [r3, #32]
 8002634:	4798      	blx	r3
 8002636:	280b      	cmp	r0, #11
 8002638:	d803      	bhi.n	8002642 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x4a>
 800263a:	4b3d      	ldr	r3, [pc, #244]	@ (8002730 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x138>)
 800263c:	21a5      	movs	r1, #165	@ 0xa5
 800263e:	4a39      	ldr	r2, [pc, #228]	@ (8002724 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x12c>)
 8002640:	e7e8      	b.n	8002614 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x1c>
    if (*currentTrans)
 8002642:	f8df 90f4 	ldr.w	r9, [pc, #244]	@ 8002738 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x140>
    Application::getInstance()->clearAllTimerWidgets();
 8002646:	f00b fb67 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
 800264a:	3004      	adds	r0, #4
 800264c:	f00b fb89 	bl	800dd62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 8002650:	f8d9 0000 	ldr.w	r0, [r9]
 8002654:	b110      	cbz	r0, 800265c <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002656:	6803      	ldr	r3, [r0, #0]
 8002658:	68db      	ldr	r3, [r3, #12]
 800265a:	4798      	blx	r3
    if (*currentTrans)
 800265c:	f8d9 0000 	ldr.w	r0, [r9]
 8002660:	b110      	cbz	r0, 8002668 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002662:	6803      	ldr	r3, [r0, #0]
 8002664:	681b      	ldr	r3, [r3, #0]
 8002666:	4798      	blx	r3
    if (*currentScreen)
 8002668:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 800273c <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x144>
 800266c:	f8d8 0000 	ldr.w	r0, [r8]
 8002670:	b110      	cbz	r0, 8002678 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002672:	6803      	ldr	r3, [r0, #0]
 8002674:	695b      	ldr	r3, [r3, #20]
 8002676:	4798      	blx	r3
    if (*currentPresenter)
 8002678:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800267c:	b110      	cbz	r0, 8002684 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800267e:	6803      	ldr	r3, [r0, #0]
 8002680:	685b      	ldr	r3, [r3, #4]
 8002682:	4798      	blx	r3
    if (*currentScreen)
 8002684:	f8d8 0000 	ldr.w	r0, [r8]
 8002688:	b110      	cbz	r0, 8002690 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800268a:	6803      	ldr	r3, [r0, #0]
 800268c:	681b      	ldr	r3, [r3, #0]
 800268e:	4798      	blx	r3
    if (*currentPresenter)
 8002690:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002694:	b110      	cbz	r0, 800269c <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002696:	6803      	ldr	r3, [r0, #0]
 8002698:	689b      	ldr	r3, [r3, #8]
 800269a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800269c:	2100      	movs	r1, #0
 800269e:	68f0      	ldr	r0, [r6, #12]
 80026a0:	f7ff ff02 	bl	80024a8 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80026a4:	f04f 0b00 	mov.w	fp, #0
 80026a8:	4b22      	ldr	r3, [pc, #136]	@ (8002734 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x13c>)
 80026aa:	4604      	mov	r4, r0
 80026ac:	f8c0 b004 	str.w	fp, [r0, #4]
 80026b0:	4659      	mov	r1, fp
 80026b2:	f880 b008 	strb.w	fp, [r0, #8]
 80026b6:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80026b8:	68b0      	ldr	r0, [r6, #8]
 80026ba:	6803      	ldr	r3, [r0, #0]
 80026bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80026be:	4798      	blx	r3
 80026c0:	4605      	mov	r5, r0
 80026c2:	f001 fcf9 	bl	80040b8 <_ZN9motorViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80026c6:	6870      	ldr	r0, [r6, #4]
 80026c8:	4659      	mov	r1, fp
 80026ca:	6803      	ldr	r3, [r0, #0]
 80026cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80026ce:	4798      	blx	r3
 80026d0:	4606      	mov	r6, r0
 80026d2:	4629      	mov	r1, r5
 80026d4:	f001 fcd0 	bl	8004078 <_ZN14motorPresenterC1ER9motorView>
    model->bind(newPresenter);
 80026d8:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80026da:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 80026de:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 80026e0:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80026e4:	f8c8 5000 	str.w	r5, [r8]
 80026e8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80026ec:	682b      	ldr	r3, [r5, #0]
 80026ee:	f8c6 a008 	str.w	sl, [r6, #8]
 80026f2:	68db      	ldr	r3, [r3, #12]
 80026f4:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80026f6:	4798      	blx	r3
    newPresenter->activate();
 80026f8:	6833      	ldr	r3, [r6, #0]
 80026fa:	4630      	mov	r0, r6
 80026fc:	681b      	ldr	r3, [r3, #0]
 80026fe:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002700:	4621      	mov	r1, r4
 8002702:	4628      	mov	r0, r5
 8002704:	f00c ffd4 	bl	800f6b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002708:	6823      	ldr	r3, [r4, #0]
 800270a:	4620      	mov	r0, r4
 800270c:	691b      	ldr	r3, [r3, #16]
 800270e:	4798      	blx	r3
    newTransition->invalidate();
 8002710:	6823      	ldr	r3, [r4, #0]
 8002712:	4620      	mov	r0, r4
 8002714:	695b      	ldr	r3, [r3, #20]
}
 8002716:	b001      	add	sp, #4
 8002718:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800271c:	4718      	bx	r3
 800271e:	bf00      	nop
 8002720:	08020020 	.word	0x08020020
 8002724:	0802030b 	.word	0x0802030b
 8002728:	0802017e 	.word	0x0802017e
 800272c:	080201c5 	.word	0x080201c5
 8002730:	08020268 	.word	0x08020268
 8002734:	080205ec 	.word	0x080205ec
 8002738:	200150ec 	.word	0x200150ec
 800273c:	200150e8 	.word	0x200150e8

08002740 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv>:
{
 8002740:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<sensorView, sensorPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002744:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002748:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800274a:	68b0      	ldr	r0, [r6, #8]
 800274c:	6803      	ldr	r3, [r0, #0]
 800274e:	6a1b      	ldr	r3, [r3, #32]
 8002750:	4798      	blx	r3
 8002752:	f5b0 6fd5 	cmp.w	r0, #1704	@ 0x6a8
 8002756:	d205      	bcs.n	8002764 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x24>
 8002758:	4b43      	ldr	r3, [pc, #268]	@ (8002868 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x128>)
 800275a:	21a3      	movs	r1, #163	@ 0xa3
 800275c:	4a43      	ldr	r2, [pc, #268]	@ (800286c <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800275e:	4844      	ldr	r0, [pc, #272]	@ (8002870 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x130>)
 8002760:	f01b ffe8 	bl	801e734 <__assert_func>
 8002764:	6870      	ldr	r0, [r6, #4]
 8002766:	6803      	ldr	r3, [r0, #0]
 8002768:	6a1b      	ldr	r3, [r3, #32]
 800276a:	4798      	blx	r3
 800276c:	280f      	cmp	r0, #15
 800276e:	d803      	bhi.n	8002778 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x38>
 8002770:	4b40      	ldr	r3, [pc, #256]	@ (8002874 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x134>)
 8002772:	21a4      	movs	r1, #164	@ 0xa4
 8002774:	4a3d      	ldr	r2, [pc, #244]	@ (800286c <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x12c>)
 8002776:	e7f2      	b.n	800275e <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002778:	68f0      	ldr	r0, [r6, #12]
 800277a:	6803      	ldr	r3, [r0, #0]
 800277c:	6a1b      	ldr	r3, [r3, #32]
 800277e:	4798      	blx	r3
 8002780:	280b      	cmp	r0, #11
 8002782:	d803      	bhi.n	800278c <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x4c>
 8002784:	4b3c      	ldr	r3, [pc, #240]	@ (8002878 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x138>)
 8002786:	21a5      	movs	r1, #165	@ 0xa5
 8002788:	4a38      	ldr	r2, [pc, #224]	@ (800286c <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x12c>)
 800278a:	e7e8      	b.n	800275e <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 800278c:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002880 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x140>
    Application::getInstance()->clearAllTimerWidgets();
 8002790:	f00b fac2 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
 8002794:	3004      	adds	r0, #4
 8002796:	f00b fae4 	bl	800dd62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 800279a:	f8d9 0000 	ldr.w	r0, [r9]
 800279e:	b110      	cbz	r0, 80027a6 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80027a0:	6803      	ldr	r3, [r0, #0]
 80027a2:	68db      	ldr	r3, [r3, #12]
 80027a4:	4798      	blx	r3
    if (*currentTrans)
 80027a6:	f8d9 0000 	ldr.w	r0, [r9]
 80027aa:	b110      	cbz	r0, 80027b2 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80027ac:	6803      	ldr	r3, [r0, #0]
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	4798      	blx	r3
    if (*currentScreen)
 80027b2:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002884 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x144>
 80027b6:	f8d8 0000 	ldr.w	r0, [r8]
 80027ba:	b110      	cbz	r0, 80027c2 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80027bc:	6803      	ldr	r3, [r0, #0]
 80027be:	695b      	ldr	r3, [r3, #20]
 80027c0:	4798      	blx	r3
    if (*currentPresenter)
 80027c2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80027c6:	b110      	cbz	r0, 80027ce <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80027c8:	6803      	ldr	r3, [r0, #0]
 80027ca:	685b      	ldr	r3, [r3, #4]
 80027cc:	4798      	blx	r3
    if (*currentScreen)
 80027ce:	f8d8 0000 	ldr.w	r0, [r8]
 80027d2:	b110      	cbz	r0, 80027da <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80027d4:	6803      	ldr	r3, [r0, #0]
 80027d6:	681b      	ldr	r3, [r3, #0]
 80027d8:	4798      	blx	r3
    if (*currentPresenter)
 80027da:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80027de:	b110      	cbz	r0, 80027e6 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80027e0:	6803      	ldr	r3, [r0, #0]
 80027e2:	689b      	ldr	r3, [r3, #8]
 80027e4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80027e6:	2100      	movs	r1, #0
 80027e8:	68f0      	ldr	r0, [r6, #12]
 80027ea:	f7ff fe5d 	bl	80024a8 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80027ee:	f04f 0b00 	mov.w	fp, #0
 80027f2:	4b22      	ldr	r3, [pc, #136]	@ (800287c <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x13c>)
 80027f4:	4604      	mov	r4, r0
 80027f6:	f8c0 b004 	str.w	fp, [r0, #4]
 80027fa:	4659      	mov	r1, fp
 80027fc:	f880 b008 	strb.w	fp, [r0, #8]
 8002800:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002802:	68b0      	ldr	r0, [r6, #8]
 8002804:	6803      	ldr	r3, [r0, #0]
 8002806:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002808:	4798      	blx	r3
 800280a:	4605      	mov	r5, r0
 800280c:	f001 fd26 	bl	800425c <_ZN10sensorViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002810:	6870      	ldr	r0, [r6, #4]
 8002812:	4659      	mov	r1, fp
 8002814:	6803      	ldr	r3, [r0, #0]
 8002816:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002818:	4798      	blx	r3
 800281a:	4606      	mov	r6, r0
 800281c:	4629      	mov	r1, r5
 800281e:	f001 fcf3 	bl	8004208 <_ZN15sensorPresenterC1ER10sensorView>
    model->bind(newPresenter);
 8002822:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002824:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 8002828:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 800282a:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800282e:	f8c8 5000 	str.w	r5, [r8]
 8002832:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002836:	682b      	ldr	r3, [r5, #0]
 8002838:	f8c6 a008 	str.w	sl, [r6, #8]
 800283c:	68db      	ldr	r3, [r3, #12]
 800283e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002840:	4798      	blx	r3
    newPresenter->activate();
 8002842:	6833      	ldr	r3, [r6, #0]
 8002844:	4630      	mov	r0, r6
 8002846:	681b      	ldr	r3, [r3, #0]
 8002848:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800284a:	4621      	mov	r1, r4
 800284c:	4628      	mov	r0, r5
 800284e:	f00c ff2f 	bl	800f6b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002852:	6823      	ldr	r3, [r4, #0]
 8002854:	4620      	mov	r0, r4
 8002856:	691b      	ldr	r3, [r3, #16]
 8002858:	4798      	blx	r3
    newTransition->invalidate();
 800285a:	6823      	ldr	r3, [r4, #0]
 800285c:	4620      	mov	r0, r4
 800285e:	695b      	ldr	r3, [r3, #20]
}
 8002860:	b001      	add	sp, #4
 8002862:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002866:	4718      	bx	r3
 8002868:	08020020 	.word	0x08020020
 800286c:	080203d9 	.word	0x080203d9
 8002870:	0802017e 	.word	0x0802017e
 8002874:	080201c5 	.word	0x080201c5
 8002878:	08020268 	.word	0x08020268
 800287c:	080205ec 	.word	0x080205ec
 8002880:	200150ec 	.word	0x200150ec
 8002884:	200150e8 	.word	0x200150e8

08002888 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:
{
 8002888:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800288c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002890:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002892:	68b0      	ldr	r0, [r6, #8]
 8002894:	6803      	ldr	r3, [r0, #0]
 8002896:	6a1b      	ldr	r3, [r3, #32]
 8002898:	4798      	blx	r3
 800289a:	f5b0 7fdc 	cmp.w	r0, #440	@ 0x1b8
 800289e:	d205      	bcs.n	80028ac <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x24>
 80028a0:	4b43      	ldr	r3, [pc, #268]	@ (80029b0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x128>)
 80028a2:	21a3      	movs	r1, #163	@ 0xa3
 80028a4:	4a43      	ldr	r2, [pc, #268]	@ (80029b4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80028a6:	4844      	ldr	r0, [pc, #272]	@ (80029b8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
 80028a8:	f01b ff44 	bl	801e734 <__assert_func>
 80028ac:	6870      	ldr	r0, [r6, #4]
 80028ae:	6803      	ldr	r3, [r0, #0]
 80028b0:	6a1b      	ldr	r3, [r3, #32]
 80028b2:	4798      	blx	r3
 80028b4:	280f      	cmp	r0, #15
 80028b6:	d803      	bhi.n	80028c0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x38>
 80028b8:	4b40      	ldr	r3, [pc, #256]	@ (80029bc <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x134>)
 80028ba:	21a4      	movs	r1, #164	@ 0xa4
 80028bc:	4a3d      	ldr	r2, [pc, #244]	@ (80029b4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
 80028be:	e7f2      	b.n	80028a6 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80028c0:	68f0      	ldr	r0, [r6, #12]
 80028c2:	6803      	ldr	r3, [r0, #0]
 80028c4:	6a1b      	ldr	r3, [r3, #32]
 80028c6:	4798      	blx	r3
 80028c8:	280b      	cmp	r0, #11
 80028ca:	d803      	bhi.n	80028d4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x4c>
 80028cc:	4b3c      	ldr	r3, [pc, #240]	@ (80029c0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>)
 80028ce:	21a5      	movs	r1, #165	@ 0xa5
 80028d0:	4a38      	ldr	r2, [pc, #224]	@ (80029b4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
 80028d2:	e7e8      	b.n	80028a6 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80028d4:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 80029c8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x140>
    Application::getInstance()->clearAllTimerWidgets();
 80028d8:	f00b fa1e 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
 80028dc:	3004      	adds	r0, #4
 80028de:	f00b fa40 	bl	800dd62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 80028e2:	f8d9 0000 	ldr.w	r0, [r9]
 80028e6:	b110      	cbz	r0, 80028ee <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80028e8:	6803      	ldr	r3, [r0, #0]
 80028ea:	68db      	ldr	r3, [r3, #12]
 80028ec:	4798      	blx	r3
    if (*currentTrans)
 80028ee:	f8d9 0000 	ldr.w	r0, [r9]
 80028f2:	b110      	cbz	r0, 80028fa <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80028f4:	6803      	ldr	r3, [r0, #0]
 80028f6:	681b      	ldr	r3, [r3, #0]
 80028f8:	4798      	blx	r3
    if (*currentScreen)
 80028fa:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80029cc <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x144>
 80028fe:	f8d8 0000 	ldr.w	r0, [r8]
 8002902:	b110      	cbz	r0, 800290a <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002904:	6803      	ldr	r3, [r0, #0]
 8002906:	695b      	ldr	r3, [r3, #20]
 8002908:	4798      	blx	r3
    if (*currentPresenter)
 800290a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800290e:	b110      	cbz	r0, 8002916 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002910:	6803      	ldr	r3, [r0, #0]
 8002912:	685b      	ldr	r3, [r3, #4]
 8002914:	4798      	blx	r3
    if (*currentScreen)
 8002916:	f8d8 0000 	ldr.w	r0, [r8]
 800291a:	b110      	cbz	r0, 8002922 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 800291c:	6803      	ldr	r3, [r0, #0]
 800291e:	681b      	ldr	r3, [r3, #0]
 8002920:	4798      	blx	r3
    if (*currentPresenter)
 8002922:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002926:	b110      	cbz	r0, 800292e <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002928:	6803      	ldr	r3, [r0, #0]
 800292a:	689b      	ldr	r3, [r3, #8]
 800292c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800292e:	2100      	movs	r1, #0
 8002930:	68f0      	ldr	r0, [r6, #12]
 8002932:	f7ff fdb9 	bl	80024a8 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8002936:	f04f 0b00 	mov.w	fp, #0
 800293a:	4b22      	ldr	r3, [pc, #136]	@ (80029c4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x13c>)
 800293c:	4604      	mov	r4, r0
 800293e:	f8c0 b004 	str.w	fp, [r0, #4]
 8002942:	4659      	mov	r1, fp
 8002944:	f880 b008 	strb.w	fp, [r0, #8]
 8002948:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800294a:	68b0      	ldr	r0, [r6, #8]
 800294c:	6803      	ldr	r3, [r0, #0]
 800294e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002950:	4798      	blx	r3
 8002952:	4605      	mov	r5, r0
 8002954:	f001 fb32 	bl	8003fbc <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002958:	6870      	ldr	r0, [r6, #4]
 800295a:	4659      	mov	r1, fp
 800295c:	6803      	ldr	r3, [r0, #0]
 800295e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002960:	4798      	blx	r3
 8002962:	4606      	mov	r6, r0
 8002964:	4629      	mov	r1, r5
 8002966:	f001 faf9 	bl	8003f5c <_ZN13MainPresenterC1ER8MainView>
    model->bind(newPresenter);
 800296a:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800296c:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 8002970:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 8002972:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002976:	f8c8 5000 	str.w	r5, [r8]
 800297a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800297e:	682b      	ldr	r3, [r5, #0]
 8002980:	f8c6 a008 	str.w	sl, [r6, #8]
 8002984:	68db      	ldr	r3, [r3, #12]
 8002986:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002988:	4798      	blx	r3
    newPresenter->activate();
 800298a:	6833      	ldr	r3, [r6, #0]
 800298c:	4630      	mov	r0, r6
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002992:	4621      	mov	r1, r4
 8002994:	4628      	mov	r0, r5
 8002996:	f00c fe8b 	bl	800f6b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800299a:	6823      	ldr	r3, [r4, #0]
 800299c:	4620      	mov	r0, r4
 800299e:	691b      	ldr	r3, [r3, #16]
 80029a0:	4798      	blx	r3
    newTransition->invalidate();
 80029a2:	6823      	ldr	r3, [r4, #0]
 80029a4:	4620      	mov	r0, r4
 80029a6:	695b      	ldr	r3, [r3, #20]
}
 80029a8:	b001      	add	sp, #4
 80029aa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80029ae:	4718      	bx	r3
 80029b0:	08020020 	.word	0x08020020
 80029b4:	080204a9 	.word	0x080204a9
 80029b8:	0802017e 	.word	0x0802017e
 80029bc:	080201c5 	.word	0x080201c5
 80029c0:	08020268 	.word	0x08020268
 80029c4:	080205ec 	.word	0x080205ec
 80029c8:	200150ec 	.word	0x200150ec
 80029cc:	200150e8 	.word	0x200150e8

080029d0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80029d0:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 80029d2:	4770      	bx	lr

080029d4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80029d4:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80029d6:	4770      	bx	lr

080029d8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80029d8:	4770      	bx	lr

080029da <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80029da:	888b      	ldrh	r3, [r1, #4]
 80029dc:	69c0      	ldr	r0, [r0, #28]
 80029de:	0adb      	lsrs	r3, r3, #11
 80029e0:	680a      	ldr	r2, [r1, #0]
 80029e2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80029e6:	4410      	add	r0, r2
 80029e8:	4770      	bx	lr

080029ea <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80029ea:	b510      	push	{r4, lr}
 80029ec:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 80029ee:	b1ba      	cbz	r2, 8002a20 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80029f0:	7b10      	ldrb	r0, [r2, #12]
 80029f2:	b168      	cbz	r0, 8002a10 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80029f4:	7b53      	ldrb	r3, [r2, #13]
 80029f6:	7ad2      	ldrb	r2, [r2, #11]
 80029f8:	021b      	lsls	r3, r3, #8
 80029fa:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80029fe:	431a      	orrs	r2, r3
 8002a00:	6a23      	ldr	r3, [r4, #32]
 8002a02:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002a06:	881a      	ldrh	r2, [r3, #0]
 8002a08:	428a      	cmp	r2, r1
 8002a0a:	d102      	bne.n	8002a12 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002a0c:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8002a10:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002a12:	d805      	bhi.n	8002a20 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002a14:	3801      	subs	r0, #1
 8002a16:	3304      	adds	r3, #4
 8002a18:	b280      	uxth	r0, r0
 8002a1a:	2800      	cmp	r0, #0
 8002a1c:	d1f3      	bne.n	8002a06 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002a1e:	e7f7      	b.n	8002a10 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002a20:	2000      	movs	r0, #0
 8002a22:	e7f5      	b.n	8002a10 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002a24 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002a24:	b510      	push	{r4, lr}
 8002a26:	4604      	mov	r4, r0
 8002a28:	212c      	movs	r1, #44	@ 0x2c
 8002a2a:	f01b fe55 	bl	801e6d8 <_ZdlPvj>
 8002a2e:	4620      	mov	r0, r4
 8002a30:	bd10      	pop	{r4, pc}
	...

08002a34 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002a34:	b530      	push	{r4, r5, lr}
 8002a36:	b08b      	sub	sp, #44	@ 0x2c
 8002a38:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002a3a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8002a3e:	9508      	str	r5, [sp, #32]
 8002a40:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8002a44:	9507      	str	r5, [sp, #28]
 8002a46:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8002a4a:	9506      	str	r5, [sp, #24]
 8002a4c:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8002a50:	9505      	str	r5, [sp, #20]
 8002a52:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8002a56:	9504      	str	r5, [sp, #16]
 8002a58:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8002a5c:	9503      	str	r5, [sp, #12]
 8002a5e:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8002a62:	9502      	str	r5, [sp, #8]
 8002a64:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8002a68:	9501      	str	r5, [sp, #4]
 8002a6a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8002a6e:	9500      	str	r5, [sp, #0]
 8002a70:	f00c fa78 	bl	800ef64 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8002a74:	4b06      	ldr	r3, [pc, #24]	@ (8002a90 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
}
 8002a76:	4620      	mov	r0, r4
      arabicTable(formsTable)
 8002a78:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002a7a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002a7c:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002a7e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002a80:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8002a82:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002a84:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8002a86:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8002a88:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8002a8a:	b00b      	add	sp, #44	@ 0x2c
 8002a8c:	bd30      	pop	{r4, r5, pc}
 8002a8e:	bf00      	nop
 8002a90:	08020610 	.word	0x08020610

08002a94 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002a94:	4770      	bx	lr

08002a96 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002a96:	4770      	bx	lr

08002a98 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002a98:	4770      	bx	lr

08002a9a <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002a9a:	4770      	bx	lr

08002a9c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002a9c:	4770      	bx	lr

08002a9e <_ZN12MainViewBaseD1Ev>:
}

MainViewBase::~MainViewBase()
{

}
 8002a9e:	4770      	bx	lr

08002aa0 <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{

}
 8002aa0:	4770      	bx	lr

08002aa2 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002aa2:	4770      	bx	lr

08002aa4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002aa4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002aa6:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 8002aa8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002aaa:	68c2      	ldr	r2, [r0, #12]
 8002aac:	689b      	ldr	r3, [r3, #8]
 8002aae:	1055      	asrs	r5, r2, #1
 8002ab0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002ab4:	07d2      	lsls	r2, r2, #31
 8002ab6:	bf48      	it	mi
 8002ab8:	5962      	ldrmi	r2, [r4, r5]
    }
 8002aba:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002abc:	bf48      	it	mi
 8002abe:	58d3      	ldrmi	r3, [r2, r3]
 8002ac0:	4718      	bx	r3

08002ac2 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8002ac2:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8002ac4:	6840      	ldr	r0, [r0, #4]
 8002ac6:	b130      	cbz	r0, 8002ad6 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002ac8:	689a      	ldr	r2, [r3, #8]
 8002aca:	b91a      	cbnz	r2, 8002ad4 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8002acc:	68d8      	ldr	r0, [r3, #12]
 8002ace:	f000 0001 	and.w	r0, r0, #1
 8002ad2:	4770      	bx	lr
 8002ad4:	2001      	movs	r0, #1
    }
 8002ad6:	4770      	bx	lr

08002ad8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ad8:	b510      	push	{r4, lr}
 8002ada:	4604      	mov	r4, r0
 8002adc:	2110      	movs	r1, #16
 8002ade:	f01b fdfb 	bl	801e6d8 <_ZdlPvj>
 8002ae2:	4620      	mov	r0, r4
 8002ae4:	bd10      	pop	{r4, pc}

08002ae6 <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 8002ae6:	b510      	push	{r4, lr}
 8002ae8:	4604      	mov	r4, r0
}
 8002aea:	f44f 71da 	mov.w	r1, #436	@ 0x1b4
 8002aee:	f01b fdf3 	bl	801e6d8 <_ZdlPvj>
 8002af2:	4620      	mov	r0, r4
 8002af4:	bd10      	pop	{r4, pc}

08002af6 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002af6:	b538      	push	{r3, r4, r5, lr}
    if (&src == &changescreen_motor_btn)
 8002af8:	f500 7394 	add.w	r3, r0, #296	@ 0x128
{
 8002afc:	4604      	mov	r4, r0
 8002afe:	460d      	mov	r5, r1
    if (&src == &changescreen_motor_btn)
 8002b00:	4299      	cmp	r1, r3
 8002b02:	d103      	bne.n	8002b0c <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MainViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002b04:	f00b f908 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //changescreen_motor
        //When changescreen_motor_btn clicked change screen to motor
        //Go to motor with no screen transition
        application().gotomotorScreenNoTransition();
 8002b08:	f7ff fcae 	bl	8002468 <_ZN23FrontendApplicationBase27gotomotorScreenNoTransitionEv>
    }
    if (&src == &changescreen_sensor_btn)
 8002b0c:	f104 03e0 	add.w	r3, r4, #224	@ 0xe0
 8002b10:	429d      	cmp	r5, r3
 8002b12:	d103      	bne.n	8002b1c <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8002b14:	f00b f900 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //changescreen_sensor
        //When changescreen_sensor_btn clicked change screen to sensor
        //Go to sensor with no screen transition
        application().gotosensorScreenNoTransition();
 8002b18:	f7ff fc96 	bl	8002448 <_ZN23FrontendApplicationBase28gotosensorScreenNoTransitionEv>
    }
    if (&src == &config_btn)
 8002b1c:	f504 74b8 	add.w	r4, r4, #368	@ 0x170
 8002b20:	42a5      	cmp	r5, r4
 8002b22:	d105      	bne.n	8002b30 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8002b24:	f00b f8f8 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
        //changescreen_config
        //When config_btn clicked change screen to config
        //Go to config with no screen transition
        application().gotoconfigScreenNoTransition();
    }
}
 8002b28:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoconfigScreenNoTransition();
 8002b2c:	f7ff bcac 	b.w	8002488 <_ZN23FrontendApplicationBase28gotoconfigScreenNoTransitionEv>
}
 8002b30:	bd38      	pop	{r3, r4, r5, pc}
	...

08002b34 <_ZN8touchgfx6WidgetC1Ev>:
 8002b34:	2200      	movs	r2, #0
 8002b36:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002b3a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002b3e:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002b42:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002b46:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002b4a:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8002b4c:	4a01      	ldr	r2, [pc, #4]	@ (8002b54 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002b4e:	6002      	str	r2, [r0, #0]
 8002b50:	4770      	bx	lr
 8002b52:	bf00      	nop
 8002b54:	0802073c 	.word	0x0802073c

08002b58 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002b58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        return typedTextId < numberOfTypedTexts;
 8002b5a:	4b19      	ldr	r3, [pc, #100]	@ (8002bc0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x68>)
 8002b5c:	4606      	mov	r6, r0
 8002b5e:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
    {
        if (typedText.hasValidId())
 8002b60:	881b      	ldrh	r3, [r3, #0]
 8002b62:	428b      	cmp	r3, r1
 8002b64:	d92a      	bls.n	8002bbc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b66:	4b17      	ldr	r3, [pc, #92]	@ (8002bc4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
 8002b68:	681b      	ldr	r3, [r3, #0]
 8002b6a:	b92b      	cbnz	r3, 8002b78 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002b6c:	4b16      	ldr	r3, [pc, #88]	@ (8002bc8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002b6e:	216c      	movs	r1, #108	@ 0x6c
 8002b70:	4a16      	ldr	r2, [pc, #88]	@ (8002bcc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002b72:	4817      	ldr	r0, [pc, #92]	@ (8002bd0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002b74:	f01b fdde 	bl	801e734 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002b78:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002b7c:	4b15      	ldr	r3, [pc, #84]	@ (8002bd4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002b7e:	681b      	ldr	r3, [r3, #0]
 8002b80:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002b84:	4b14      	ldr	r3, [pc, #80]	@ (8002bd8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002b86:	6818      	ldr	r0, [r3, #0]
 8002b88:	f000 fad4 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002b8c:	682b      	ldr	r3, [r5, #0]
 8002b8e:	4607      	mov	r7, r0
 8002b90:	4628      	mov	r0, r5
 8002b92:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002b94:	4798      	blx	r3
 8002b96:	682b      	ldr	r3, [r5, #0]
 8002b98:	4604      	mov	r4, r0
 8002b9a:	4639      	mov	r1, r7
 8002b9c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002b9e:	4628      	mov	r0, r5
 8002ba0:	4798      	blx	r3
 8002ba2:	fb14 f400 	smulbb	r4, r4, r0
 8002ba6:	682b      	ldr	r3, [r5, #0]
 8002ba8:	4639      	mov	r1, r7
 8002baa:	b2a4      	uxth	r4, r4
 8002bac:	4628      	mov	r0, r5
 8002bae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002bb0:	4798      	blx	r3
 8002bb2:	1823      	adds	r3, r4, r0
 8002bb4:	b21b      	sxth	r3, r3
 8002bb6:	f8a6 3046 	strh.w	r3, [r6, #70]	@ 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002bba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002bbc:	2300      	movs	r3, #0
 8002bbe:	e7fa      	b.n	8002bb6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002bc0:	20015100 	.word	0x20015100
 8002bc4:	200150fc 	.word	0x200150fc
 8002bc8:	08020670 	.word	0x08020670
 8002bcc:	080206b2 	.word	0x080206b2
 8002bd0:	080206ed 	.word	0x080206ed
 8002bd4:	20015104 	.word	0x20015104
 8002bd8:	20015108 	.word	0x20015108

08002bdc <_ZN12MainViewBaseC1Ev>:
MainViewBase::MainViewBase() :
 8002bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002be0:	4604      	mov	r4, r0
 8002be2:	b08b      	sub	sp, #44	@ 0x2c
        : presenter(0)
 8002be4:	2500      	movs	r5, #0
 8002be6:	f00c fbb7 	bl	800f358 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 8002bea:	4626      	mov	r6, r4
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002bec:	f04f 0826 	mov.w	r8, #38	@ 0x26
 8002bf0:	4b93      	ldr	r3, [pc, #588]	@ (8002e40 <_ZN12MainViewBaseC1Ev+0x264>)
 8002bf2:	4629      	mov	r1, r5
 8002bf4:	4642      	mov	r2, r8
 8002bf6:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002bf8:	f846 3b40 	str.w	r3, [r6], #64
 8002bfc:	4630      	mov	r0, r6
 8002bfe:	f01c f835 	bl	801ec6c <memset>
 8002c02:	4630      	mov	r0, r6
 8002c04:	f7ff ff96 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
 8002c08:	4b8e      	ldr	r3, [pc, #568]	@ (8002e44 <_ZN12MainViewBaseC1Ev+0x268>)
 8002c0a:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 8002c0e:	27ff      	movs	r7, #255	@ 0xff
 8002c10:	6423      	str	r3, [r4, #64]	@ 0x40
 8002c12:	f64f 73ff 	movw	r3, #65535	@ 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8002c16:	4642      	mov	r2, r8
 8002c18:	4629      	mov	r1, r5
 8002c1a:	f884 7066 	strb.w	r7, [r4, #102]	@ 0x66
 8002c1e:	4650      	mov	r0, sl
        : color(col)
 8002c20:	66a5      	str	r5, [r4, #104]	@ 0x68
 8002c22:	f104 0998 	add.w	r9, r4, #152	@ 0x98
 8002c26:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002c2a:	f01c f81f 	bl	801ec6c <memset>
 8002c2e:	4650      	mov	r0, sl
 8002c30:	f104 0be0 	add.w	fp, r4, #224	@ 0xe0
 8002c34:	f7ff ff7e 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
 8002c38:	4a83      	ldr	r2, [pc, #524]	@ (8002e48 <_ZN12MainViewBaseC1Ev+0x26c>)
        Image::setBitmap(bmp);
 8002c3a:	a908      	add	r1, sp, #32
 8002c3c:	4650      	mov	r0, sl
        : Widget(), bitmap(bmp), alpha(255)
 8002c3e:	66e2      	str	r2, [r4, #108]	@ 0x6c
 8002c40:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8002c44:	f884 7094 	strb.w	r7, [r4, #148]	@ 0x94
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002c48:	f04f 37ff 	mov.w	r7, #4294967295
 8002c4c:	f8a4 2092 	strh.w	r2, [r4, #146]	@ 0x92
        Image::setBitmap(bmp);
 8002c50:	f009 fa11 	bl	800c076 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002c54:	4629      	mov	r1, r5
 8002c56:	4642      	mov	r2, r8
 8002c58:	4648      	mov	r0, r9
 8002c5a:	f01c f807 	bl	801ec6c <memset>
 8002c5e:	4648      	mov	r0, r9
 8002c60:	f7ff ff68 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
 8002c64:	4a79      	ldr	r2, [pc, #484]	@ (8002e4c <_ZN12MainViewBaseC1Ev+0x270>)
        : typedTextId(id)
 8002c66:	4b7a      	ldr	r3, [pc, #488]	@ (8002e50 <_ZN12MainViewBaseC1Ev+0x274>)
 8002c68:	4658      	mov	r0, fp
 8002c6a:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
 8002c6e:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
 8002c72:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8002c76:	f64f 73ff 	movw	r3, #65535	@ 0xffff
        : color(col)
 8002c7a:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
 8002c7e:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
 8002c82:	f8c4 20cc 	str.w	r2, [r4, #204]	@ 0xcc
 8002c86:	f8a4 50d0 	strh.w	r5, [r4, #208]	@ 0xd0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002c8a:	f8c4 50d4 	str.w	r5, [r4, #212]	@ 0xd4
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8002c8e:	e9c4 7536 	strd	r7, r5, [r4, #216]	@ 0xd8
 8002c92:	f009 fb31 	bl	800c2f8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002c96:	f504 7294 	add.w	r2, r4, #296	@ 0x128
 8002c9a:	4610      	mov	r0, r2
 8002c9c:	9200      	str	r2, [sp, #0]
 8002c9e:	f009 fb2b 	bl	800c2f8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002ca2:	f504 72b8 	add.w	r2, r4, #368	@ 0x170
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8002ca6:	4629      	mov	r1, r5
 8002ca8:	9201      	str	r2, [sp, #4]
 8002caa:	4642      	mov	r2, r8
 8002cac:	9801      	ldr	r0, [sp, #4]
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002cae:	f104 0804 	add.w	r8, r4, #4
 8002cb2:	f01b ffdb 	bl	801ec6c <memset>
 8002cb6:	9801      	ldr	r0, [sp, #4]
 8002cb8:	f7ff ff3c 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
 8002cbc:	f64f 73ff 	movw	r3, #65535	@ 0xffff
        touchable = touch;
 8002cc0:	f04f 0201 	mov.w	r2, #1
        setXY(x, y);
 8002cc4:	4629      	mov	r1, r5
 8002cc6:	f8a4 31a0 	strh.w	r3, [r4, #416]	@ 0x1a0
 8002cca:	4630      	mov	r0, r6
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8002ccc:	f884 31a2 	strb.w	r3, [r4, #418]	@ 0x1a2
        : pobject(pObject), pmemfun(pmemfun_1)
 8002cd0:	4b60      	ldr	r3, [pc, #384]	@ (8002e54 <_ZN12MainViewBaseC1Ev+0x278>)
        touchable = touch;
 8002cd2:	f884 2194 	strb.w	r2, [r4, #404]	@ 0x194
 8002cd6:	4a60      	ldr	r2, [pc, #384]	@ (8002e58 <_ZN12MainViewBaseC1Ev+0x27c>)
 8002cd8:	f8c4 5198 	str.w	r5, [r4, #408]	@ 0x198
 8002cdc:	f884 519c 	strb.w	r5, [r4, #412]	@ 0x19c
 8002ce0:	f8c4 2170 	str.w	r2, [r4, #368]	@ 0x170
        setXY(x, y);
 8002ce4:	462a      	mov	r2, r5
 8002ce6:	f8a4 719e 	strh.w	r7, [r4, #414]	@ 0x19e
 8002cea:	e9c4 3469 	strd	r3, r4, [r4, #420]	@ 0x1a4
 8002cee:	4b5b      	ldr	r3, [pc, #364]	@ (8002e5c <_ZN12MainViewBaseC1Ev+0x280>)
 8002cf0:	e9c4 356b 	strd	r3, r5, [r4, #428]	@ 0x1ac
 8002cf4:	f7ff fa67 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002cf8:	4630      	mov	r0, r6
 8002cfa:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8002cfe:	f7ff fa29 	bl	8002154 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002d02:	4630      	mov	r0, r6
 8002d04:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8002d08:	f7ff fa26 	bl	8002158 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002d0c:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002d10:	4631      	mov	r1, r6
 8002d12:	4640      	mov	r0, r8
 8002d14:	66a3      	str	r3, [r4, #104]	@ 0x68
        boundingArea = calculateBoundingArea();
 8002d16:	ae02      	add	r6, sp, #8
 8002d18:	f007 faee 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 8002d1c:	462a      	mov	r2, r5
 8002d1e:	4629      	mov	r1, r5
 8002d20:	4650      	mov	r0, sl
 8002d22:	f7ff fa50 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_DARK_ID));
 8002d26:	a908      	add	r1, sp, #32
 8002d28:	4650      	mov	r0, sl
 8002d2a:	f8ad 5020 	strh.w	r5, [sp, #32]
 8002d2e:	f009 f9a2 	bl	800c076 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002d32:	4651      	mov	r1, sl
 8002d34:	4640      	mov	r0, r8
 8002d36:	f04f 0a07 	mov.w	sl, #7
 8002d3a:	f007 fadd 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    title.setXY(84, 87);
 8002d3e:	2257      	movs	r2, #87	@ 0x57
 8002d40:	4648      	mov	r0, r9
 8002d42:	2154      	movs	r1, #84	@ 0x54
 8002d44:	f7ff fa3f 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
 8002d48:	4649      	mov	r1, r9
 8002d4a:	4630      	mov	r0, r6
        linespace = space;
 8002d4c:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        color = newColor;
 8002d50:	f8c4 70c8 	str.w	r7, [r4, #200]	@ 0xc8
        boundingArea = calculateBoundingArea();
 8002d54:	f008 fd50 	bl	800b7f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002d58:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
 8002d5c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8002d60:	f8ad 5024 	strh.w	r5, [sp, #36]	@ 0x24
        alpha = newAlpha;
 8002d64:	2596      	movs	r5, #150	@ 0x96
    changescreen_sensor_btn.setAction(buttonCallback);
 8002d66:	f504 76d2 	add.w	r6, r4, #420	@ 0x1a4
        boundingArea = calculateBoundingArea();
 8002d6a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d6e:	4b38      	ldr	r3, [pc, #224]	@ (8002e50 <_ZN12MainViewBaseC1Ev+0x274>)
    title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5Q27));
 8002d70:	a908      	add	r1, sp, #32
 8002d72:	4648      	mov	r0, r9
 8002d74:	9308      	str	r3, [sp, #32]
 8002d76:	f008 ffe7 	bl	800bd48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d7a:	4649      	mov	r1, r9
 8002d7c:	4640      	mov	r0, r8
        alpha = newAlpha;
 8002d7e:	f884 50ce 	strb.w	r5, [r4, #206]	@ 0xce
 8002d82:	f04f 0906 	mov.w	r9, #6
 8002d86:	f007 fab7 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    changescreen_sensor_btn.setXY(90, 175);
 8002d8a:	4658      	mov	r0, fp
 8002d8c:	22af      	movs	r2, #175	@ 0xaf
 8002d8e:	215a      	movs	r1, #90	@ 0x5a
 8002d90:	f7ff fa19 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
    changescreen_sensor_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_ID));
 8002d94:	aa08      	add	r2, sp, #32
 8002d96:	a907      	add	r1, sp, #28
 8002d98:	4658      	mov	r0, fp
 8002d9a:	f8ad a01c 	strh.w	sl, [sp, #28]
 8002d9e:	f8ad 9020 	strh.w	r9, [sp, #32]
 8002da2:	f009 f82f 	bl	800be04 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002da6:	2317      	movs	r3, #23
        updateTextPosition();
 8002da8:	4658      	mov	r0, fp
 8002daa:	f8a4 3118 	strh.w	r3, [r4, #280]	@ 0x118
 8002dae:	f7ff fed3 	bl	8002b58 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002db2:	4659      	mov	r1, fp
 8002db4:	4640      	mov	r0, r8
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002db6:	f884 5112 	strb.w	r5, [r4, #274]	@ 0x112
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002dba:	f8c4 6108 	str.w	r6, [r4, #264]	@ 0x108
        colorPressed = col;
 8002dbe:	e9c4 7747 	strd	r7, r7, [r4, #284]	@ 0x11c
 8002dc2:	f007 fa99 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    changescreen_motor_btn.setXY(270, 175);
 8002dc6:	9800      	ldr	r0, [sp, #0]
 8002dc8:	22af      	movs	r2, #175	@ 0xaf
 8002dca:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 8002dce:	f7ff f9fa 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
    changescreen_motor_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_ID));
 8002dd2:	aa08      	add	r2, sp, #32
 8002dd4:	a907      	add	r1, sp, #28
 8002dd6:	9800      	ldr	r0, [sp, #0]
 8002dd8:	f8ad a01c 	strh.w	sl, [sp, #28]
 8002ddc:	f8ad 9020 	strh.w	r9, [sp, #32]
 8002de0:	f009 f810 	bl	800be04 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002de4:	f04f 0301 	mov.w	r3, #1
        updateTextPosition();
 8002de8:	9800      	ldr	r0, [sp, #0]
 8002dea:	f8a4 3160 	strh.w	r3, [r4, #352]	@ 0x160
 8002dee:	f7ff feb3 	bl	8002b58 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002df2:	9900      	ldr	r1, [sp, #0]
 8002df4:	4640      	mov	r0, r8
 8002df6:	f884 515a 	strb.w	r5, [r4, #346]	@ 0x15a
 8002dfa:	f8c4 6150 	str.w	r6, [r4, #336]	@ 0x150
        colorPressed = col;
 8002dfe:	e9c4 7759 	strd	r7, r7, [r4, #356]	@ 0x164
 8002e02:	f007 fa79 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    config_btn.setXY(425, 5);
 8002e06:	9801      	ldr	r0, [sp, #4]
 8002e08:	2205      	movs	r2, #5
 8002e0a:	f240 11a9 	movw	r1, #425	@ 0x1a9
 8002e0e:	f7ff f9da 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
 8002e12:	2308      	movs	r3, #8
    config_btn.setBitmaps(touchgfx::Bitmap(BITMAP_CONFIGURATION_ID), touchgfx::Bitmap(BITMAP_CONFIGURATION_ID));
 8002e14:	aa08      	add	r2, sp, #32
 8002e16:	a907      	add	r1, sp, #28
 8002e18:	9801      	ldr	r0, [sp, #4]
 8002e1a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002e1e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002e22:	f008 ffef 	bl	800be04 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002e26:	4640      	mov	r0, r8
 8002e28:	9901      	ldr	r1, [sp, #4]
 8002e2a:	f884 51a2 	strb.w	r5, [r4, #418]	@ 0x1a2
 8002e2e:	f8c4 6198 	str.w	r6, [r4, #408]	@ 0x198
 8002e32:	f007 fa61 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002e36:	4620      	mov	r0, r4
 8002e38:	b00b      	add	sp, #44	@ 0x2c
 8002e3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002e3e:	bf00      	nop
 8002e40:	080207bc 	.word	0x080207bc
 8002e44:	08020ffc 	.word	0x08020ffc
 8002e48:	080210d8 	.word	0x080210d8
 8002e4c:	08020f6c 	.word	0x08020f6c
 8002e50:	08020018 	.word	0x08020018
 8002e54:	080207a4 	.word	0x080207a4
 8002e58:	08021064 	.word	0x08021064
 8002e5c:	08002af7 	.word	0x08002af7

08002e60 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_NotoSans_Regular_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_NotoSans_Regular_12_4bpp();

touchgfx::GeneratedFont& getFont_NotoSans_Regular_12_4bpp()
{
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 1, 12, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 8002e60:	4770      	bx	lr
	...

08002e64 <_Z32getFont_NotoSans_Regular_12_4bppv>:
{
 8002e64:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 1, 12, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 8002e66:	4d16      	ldr	r5, [pc, #88]	@ (8002ec0 <_Z32getFont_NotoSans_Regular_12_4bppv+0x5c>)
{
 8002e68:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 1, 12, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 8002e6a:	682c      	ldr	r4, [r5, #0]
 8002e6c:	f3bf 8f5b 	dmb	ish
 8002e70:	f014 0401 	ands.w	r4, r4, #1
 8002e74:	d120      	bne.n	8002eb8 <_Z32getFont_NotoSans_Regular_12_4bppv+0x54>
 8002e76:	4628      	mov	r0, r5
 8002e78:	f01b fc30 	bl	801e6dc <__cxa_guard_acquire>
 8002e7c:	b1e0      	cbz	r0, 8002eb8 <_Z32getFont_NotoSans_Regular_12_4bppv+0x54>
 8002e7e:	233f      	movs	r3, #63	@ 0x3f
 8002e80:	2201      	movs	r2, #1
 8002e82:	4910      	ldr	r1, [pc, #64]	@ (8002ec4 <_Z32getFont_NotoSans_Regular_12_4bppv+0x60>)
 8002e84:	9309      	str	r3, [sp, #36]	@ 0x24
 8002e86:	4b10      	ldr	r3, [pc, #64]	@ (8002ec8 <_Z32getFont_NotoSans_Regular_12_4bppv+0x64>)
 8002e88:	4810      	ldr	r0, [pc, #64]	@ (8002ecc <_Z32getFont_NotoSans_Regular_12_4bppv+0x68>)
 8002e8a:	9308      	str	r3, [sp, #32]
 8002e8c:	4b10      	ldr	r3, [pc, #64]	@ (8002ed0 <_Z32getFont_NotoSans_Regular_12_4bppv+0x6c>)
 8002e8e:	940a      	str	r4, [sp, #40]	@ 0x28
 8002e90:	9405      	str	r4, [sp, #20]
 8002e92:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002e96:	2304      	movs	r3, #4
 8002e98:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002e9c:	230c      	movs	r3, #12
 8002e9e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002ea2:	9300      	str	r3, [sp, #0]
 8002ea4:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002ea8:	f7ff fdc4 	bl	8002a34 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002eac:	4809      	ldr	r0, [pc, #36]	@ (8002ed4 <_Z32getFont_NotoSans_Regular_12_4bppv+0x70>)
 8002eae:	f01b fc5f 	bl	801e770 <atexit>
 8002eb2:	4628      	mov	r0, r5
 8002eb4:	f01b fc1e 	bl	801e6f4 <__cxa_guard_release>
    return NotoSans_Regular_12_4bpp;
}
 8002eb8:	4804      	ldr	r0, [pc, #16]	@ (8002ecc <_Z32getFont_NotoSans_Regular_12_4bppv+0x68>)
 8002eba:	b00f      	add	sp, #60	@ 0x3c
 8002ebc:	bd30      	pop	{r4, r5, pc}
 8002ebe:	bf00      	nop
 8002ec0:	20001c48 	.word	0x20001c48
 8002ec4:	90094e98 	.word	0x90094e98
 8002ec8:	0802162c 	.word	0x0802162c
 8002ecc:	20001c4c 	.word	0x20001c4c
 8002ed0:	08021678 	.word	0x08021678
 8002ed4:	08002e61 	.word	0x08002e61

08002ed8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_18_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_18_4bpp();

touchgfx::GeneratedFont& getFont_verdana_18_4bpp()
{
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 33, 22, 18, 0, 0, 4, 1, 0, 1, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 8002ed8:	4770      	bx	lr
	...

08002edc <_Z23getFont_verdana_18_4bppv>:
{
 8002edc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 33, 22, 18, 0, 0, 4, 1, 0, 1, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 8002ede:	4d17      	ldr	r5, [pc, #92]	@ (8002f3c <_Z23getFont_verdana_18_4bppv+0x60>)
{
 8002ee0:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 33, 22, 18, 0, 0, 4, 1, 0, 1, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 8002ee2:	682c      	ldr	r4, [r5, #0]
 8002ee4:	f3bf 8f5b 	dmb	ish
 8002ee8:	f014 0401 	ands.w	r4, r4, #1
 8002eec:	d122      	bne.n	8002f34 <_Z23getFont_verdana_18_4bppv+0x58>
 8002eee:	4628      	mov	r0, r5
 8002ef0:	f01b fbf4 	bl	801e6dc <__cxa_guard_acquire>
 8002ef4:	b1f0      	cbz	r0, 8002f34 <_Z23getFont_verdana_18_4bppv+0x58>
 8002ef6:	233f      	movs	r3, #63	@ 0x3f
 8002ef8:	2221      	movs	r2, #33	@ 0x21
 8002efa:	4911      	ldr	r1, [pc, #68]	@ (8002f40 <_Z23getFont_verdana_18_4bppv+0x64>)
 8002efc:	9309      	str	r3, [sp, #36]	@ 0x24
 8002efe:	4b11      	ldr	r3, [pc, #68]	@ (8002f44 <_Z23getFont_verdana_18_4bppv+0x68>)
 8002f00:	4811      	ldr	r0, [pc, #68]	@ (8002f48 <_Z23getFont_verdana_18_4bppv+0x6c>)
 8002f02:	9308      	str	r3, [sp, #32]
 8002f04:	4b11      	ldr	r3, [pc, #68]	@ (8002f4c <_Z23getFont_verdana_18_4bppv+0x70>)
 8002f06:	940a      	str	r4, [sp, #40]	@ 0x28
 8002f08:	9307      	str	r3, [sp, #28]
 8002f0a:	2301      	movs	r3, #1
 8002f0c:	9401      	str	r4, [sp, #4]
 8002f0e:	9304      	str	r3, [sp, #16]
 8002f10:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8002f14:	2304      	movs	r3, #4
 8002f16:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8002f1a:	2312      	movs	r3, #18
 8002f1c:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002f20:	9300      	str	r3, [sp, #0]
 8002f22:	2316      	movs	r3, #22
 8002f24:	f7ff fd86 	bl	8002a34 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002f28:	4809      	ldr	r0, [pc, #36]	@ (8002f50 <_Z23getFont_verdana_18_4bppv+0x74>)
 8002f2a:	f01b fc21 	bl	801e770 <atexit>
 8002f2e:	4628      	mov	r0, r5
 8002f30:	f01b fbe0 	bl	801e6f4 <__cxa_guard_release>
    return verdana_18_4bpp;
}
 8002f34:	4804      	ldr	r0, [pc, #16]	@ (8002f48 <_Z23getFont_verdana_18_4bppv+0x6c>)
 8002f36:	b00f      	add	sp, #60	@ 0x3c
 8002f38:	bd30      	pop	{r4, r5, pc}
 8002f3a:	bf00      	nop
 8002f3c:	20001c78 	.word	0x20001c78
 8002f40:	90094ea8 	.word	0x90094ea8
 8002f44:	08021630 	.word	0x08021630
 8002f48:	20001c7c 	.word	0x20001c7c
 8002f4c:	0802167c 	.word	0x0802167c
 8002f50:	08002ed9 	.word	0x08002ed9

08002f54 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 46, 40, 0, 0, 4, 1, 1, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002f54:	4770      	bx	lr
	...

08002f58 <_Z23getFont_verdana_40_4bppv>:
{
 8002f58:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 46, 40, 0, 0, 4, 1, 1, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002f5a:	4d17      	ldr	r5, [pc, #92]	@ (8002fb8 <_Z23getFont_verdana_40_4bppv+0x60>)
{
 8002f5c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 46, 40, 0, 0, 4, 1, 1, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002f5e:	682c      	ldr	r4, [r5, #0]
 8002f60:	f3bf 8f5b 	dmb	ish
 8002f64:	f014 0401 	ands.w	r4, r4, #1
 8002f68:	d122      	bne.n	8002fb0 <_Z23getFont_verdana_40_4bppv+0x58>
 8002f6a:	4628      	mov	r0, r5
 8002f6c:	f01b fbb6 	bl	801e6dc <__cxa_guard_acquire>
 8002f70:	b1f0      	cbz	r0, 8002fb0 <_Z23getFont_verdana_40_4bppv+0x58>
 8002f72:	233f      	movs	r3, #63	@ 0x3f
 8002f74:	220b      	movs	r2, #11
 8002f76:	4911      	ldr	r1, [pc, #68]	@ (8002fbc <_Z23getFont_verdana_40_4bppv+0x64>)
 8002f78:	9309      	str	r3, [sp, #36]	@ 0x24
 8002f7a:	4b11      	ldr	r3, [pc, #68]	@ (8002fc0 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002f7c:	4811      	ldr	r0, [pc, #68]	@ (8002fc4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002f7e:	9308      	str	r3, [sp, #32]
 8002f80:	4b11      	ldr	r3, [pc, #68]	@ (8002fc8 <_Z23getFont_verdana_40_4bppv+0x70>)
 8002f82:	940a      	str	r4, [sp, #40]	@ 0x28
 8002f84:	9307      	str	r3, [sp, #28]
 8002f86:	2301      	movs	r3, #1
 8002f88:	9401      	str	r4, [sp, #4]
 8002f8a:	9304      	str	r3, [sp, #16]
 8002f8c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8002f90:	2304      	movs	r3, #4
 8002f92:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8002f96:	2328      	movs	r3, #40	@ 0x28
 8002f98:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002f9c:	9300      	str	r3, [sp, #0]
 8002f9e:	232e      	movs	r3, #46	@ 0x2e
 8002fa0:	f7ff fd48 	bl	8002a34 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002fa4:	4809      	ldr	r0, [pc, #36]	@ (8002fcc <_Z23getFont_verdana_40_4bppv+0x74>)
 8002fa6:	f01b fbe3 	bl	801e770 <atexit>
 8002faa:	4628      	mov	r0, r5
 8002fac:	f01b fba2 	bl	801e6f4 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8002fb0:	4804      	ldr	r0, [pc, #16]	@ (8002fc4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002fb2:	b00f      	add	sp, #60	@ 0x3c
 8002fb4:	bd30      	pop	{r4, r5, pc}
 8002fb6:	bf00      	nop
 8002fb8:	20001ca8 	.word	0x20001ca8
 8002fbc:	90095078 	.word	0x90095078
 8002fc0:	08021668 	.word	0x08021668
 8002fc4:	20001cac 	.word	0x20001cac
 8002fc8:	08021680 	.word	0x08021680
 8002fcc:	08002f55 	.word	0x08002f55

08002fd0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8002fd0:	2000      	movs	r0, #0
 8002fd2:	4770      	bx	lr

08002fd4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8002fd4:	2000      	movs	r0, #0
 8002fd6:	4770      	bx	lr

08002fd8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002fd8:	b40e      	push	{r1, r2, r3}
 8002fda:	b503      	push	{r0, r1, lr}
 8002fdc:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002fde:	2100      	movs	r1, #0
{
 8002fe0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002fe4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002fe6:	f00b fde5 	bl	800ebb4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002fea:	b002      	add	sp, #8
 8002fec:	f85d eb04 	ldr.w	lr, [sp], #4
 8002ff0:	b003      	add	sp, #12
 8002ff2:	4770      	bx	lr

08002ff4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002ff4:	b40c      	push	{r2, r3}
 8002ff6:	b507      	push	{r0, r1, r2, lr}
 8002ff8:	ab04      	add	r3, sp, #16
 8002ffa:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002ffe:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003000:	f00b fdd8 	bl	800ebb4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003004:	b003      	add	sp, #12
 8003006:	f85d eb04 	ldr.w	lr, [sp], #4
 800300a:	b002      	add	sp, #8
 800300c:	4770      	bx	lr
	...

08003010 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003010:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8003012:	b510      	push	{r4, lr}
 8003014:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8003016:	b373      	cbz	r3, 8003076 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8003018:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 800301a:	b92b      	cbnz	r3, 8003028 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800301c:	4b18      	ldr	r3, [pc, #96]	@ (8003080 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800301e:	21c5      	movs	r1, #197	@ 0xc5
 8003020:	4a18      	ldr	r2, [pc, #96]	@ (8003084 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8003022:	4819      	ldr	r0, [pc, #100]	@ (8003088 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8003024:	f01b fb86 	bl	801e734 <__assert_func>
            return buffer[pos];
 8003028:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800302a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800302e:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8003030:	b30b      	cbz	r3, 8003076 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8003032:	f00d f86d 	bl	8010110 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8003036:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8003038:	2b01      	cmp	r3, #1
 800303a:	d803      	bhi.n	8003044 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800303c:	4b13      	ldr	r3, [pc, #76]	@ (800308c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800303e:	21cb      	movs	r1, #203	@ 0xcb
 8003040:	4a13      	ldr	r2, [pc, #76]	@ (8003090 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8003042:	e7ee      	b.n	8003022 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8003044:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8003046:	f640 103f 	movw	r0, #2367	@ 0x93f
 800304a:	1c53      	adds	r3, r2, #1
 800304c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800304e:	2b09      	cmp	r3, #9
 8003050:	4619      	mov	r1, r3
 8003052:	bf88      	it	hi
 8003054:	f1a3 010a 	subhi.w	r1, r3, #10
 8003058:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800305c:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 800305e:	4281      	cmp	r1, r0
 8003060:	d109      	bne.n	8003076 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8003062:	2b0a      	cmp	r3, #10
 8003064:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003068:	bf28      	it	cs
 800306a:	2300      	movcs	r3, #0
            return buffer[pos];
 800306c:	8c50      	ldrh	r0, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800306e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8003072:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8003074:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8003076:	4620      	mov	r0, r4
}
 8003078:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800307c:	f00c bf4a 	b.w	800ff14 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003080:	080207e8 	.word	0x080207e8
 8003084:	080207f1 	.word	0x080207f1
 8003088:	0802089c 	.word	0x0802089c
 800308c:	080208e6 	.word	0x080208e6
 8003090:	080208f4 	.word	0x080208f4

08003094 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003094:	f00c bf07 	b.w	800fea6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003098 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003098:	b510      	push	{r4, lr}
 800309a:	b086      	sub	sp, #24
 800309c:	ac02      	add	r4, sp, #8
 800309e:	e884 0006 	stmia.w	r4, {r1, r2}
 80030a2:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80030a4:	ab0a      	add	r3, sp, #40	@ 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80030a6:	4621      	mov	r1, r4
    va_start(pArg, format);
 80030a8:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80030aa:	9301      	str	r3, [sp, #4]
 80030ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80030ae:	9300      	str	r3, [sp, #0]
 80030b0:	9b08      	ldr	r3, [sp, #32]
 80030b2:	f00a f9cf 	bl	800d454 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80030b6:	b006      	add	sp, #24
 80030b8:	bd10      	pop	{r4, pc}
	...

080030bc <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80030bc:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80030be:	bb18      	cbnz	r0, 8003108 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80030c0:	4b12      	ldr	r3, [pc, #72]	@ (800310c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80030c2:	4813      	ldr	r0, [pc, #76]	@ (8003110 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80030c4:	681c      	ldr	r4, [r3, #0]
 80030c6:	4913      	ldr	r1, [pc, #76]	@ (8003114 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80030c8:	b1b4      	cbz	r4, 80030f8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80030ca:	6822      	ldr	r2, [r4, #0]
 80030cc:	4422      	add	r2, r4
 80030ce:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80030d0:	6862      	ldr	r2, [r4, #4]
 80030d2:	4422      	add	r2, r4
 80030d4:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80030d6:	68a2      	ldr	r2, [r4, #8]
 80030d8:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80030da:	4b0f      	ldr	r3, [pc, #60]	@ (8003118 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80030dc:	2200      	movs	r2, #0
 80030de:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80030e0:	f000 f838 	bl	8003154 <_ZN17TypedTextDatabase8getFontsEv>
 80030e4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80030e6:	f000 f833 	bl	8003150 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80030ea:	4b0c      	ldr	r3, [pc, #48]	@ (800311c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80030ec:	601c      	str	r4, [r3, #0]
        fonts = f;
 80030ee:	4b0c      	ldr	r3, [pc, #48]	@ (8003120 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80030f0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80030f2:	4b0c      	ldr	r3, [pc, #48]	@ (8003124 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80030f4:	8018      	strh	r0, [r3, #0]
    }
}
 80030f6:	e007      	b.n	8003108 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80030f8:	4b0b      	ldr	r3, [pc, #44]	@ (8003128 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80030fa:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80030fc:	4b0b      	ldr	r3, [pc, #44]	@ (800312c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80030fe:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003100:	4b0b      	ldr	r3, [pc, #44]	@ (8003130 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003102:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003104:	2c00      	cmp	r4, #0
 8003106:	d1e8      	bne.n	80030da <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003108:	bd38      	pop	{r3, r4, r5, pc}
 800310a:	bf00      	nop
 800310c:	20001ce4 	.word	0x20001ce4
 8003110:	20001cdc 	.word	0x20001cdc
 8003114:	20001cd8 	.word	0x20001cd8
 8003118:	20001ce0 	.word	0x20001ce0
 800311c:	200150fc 	.word	0x200150fc
 8003120:	20015104 	.word	0x20015104
 8003124:	20015100 	.word	0x20015100
 8003128:	90095174 	.word	0x90095174
 800312c:	90095114 	.word	0x90095114
 8003130:	90095260 	.word	0x90095260

08003134 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8003134:	4b04      	ldr	r3, [pc, #16]	@ (8003148 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8003136:	681b      	ldr	r3, [r3, #0]
 8003138:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800313c:	4b03      	ldr	r3, [pc, #12]	@ (800314c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800313e:	681b      	ldr	r3, [r3, #0]
}
 8003140:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003144:	4770      	bx	lr
 8003146:	bf00      	nop
 8003148:	20001cd8 	.word	0x20001cd8
 800314c:	20001cdc 	.word	0x20001cdc

08003150 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003150:	2018      	movs	r0, #24
 8003152:	4770      	bx	lr

08003154 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003154:	4800      	ldr	r0, [pc, #0]	@ (8003158 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8003156:	4770      	bx	lr
 8003158:	20001ce8 	.word	0x20001ce8

0800315c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_40_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800315c:	b510      	push	{r4, lr}
};
 800315e:	4c05      	ldr	r4, [pc, #20]	@ (8003174 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_NotoSans_Regular_12_4bpp()),
 8003160:	f7ff fe80 	bl	8002e64 <_Z32getFont_NotoSans_Regular_12_4bppv>
};
 8003164:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_18_4bpp()),
 8003166:	f7ff feb9 	bl	8002edc <_Z23getFont_verdana_18_4bppv>
};
 800316a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_40_4bpp())
 800316c:	f7ff fef4 	bl	8002f58 <_Z23getFont_verdana_40_4bppv>
};
 8003170:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8003172:	bd10      	pop	{r4, pc}
 8003174:	20001ce8 	.word	0x20001ce8

08003178 <_ZN14configViewBaseD1Ev>:
}

configViewBase::~configViewBase()
{

}
 8003178:	4770      	bx	lr

0800317a <_ZN14configViewBase11setupScreenEv>:

void configViewBase::setupScreen()
{

}
 800317a:	4770      	bx	lr

0800317c <_ZN8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800317c:	4770      	bx	lr

0800317e <_ZN8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800317e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003180:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 8003182:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003184:	68c2      	ldr	r2, [r0, #12]
 8003186:	689b      	ldr	r3, [r3, #8]
 8003188:	1055      	asrs	r5, r2, #1
 800318a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800318e:	07d2      	lsls	r2, r2, #31
 8003190:	bf48      	it	mi
 8003192:	5962      	ldrmi	r2, [r4, r5]
    }
 8003194:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003196:	bf48      	it	mi
 8003198:	58d3      	ldrmi	r3, [r2, r3]
 800319a:	4718      	bx	r3

0800319c <_ZNK8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800319c:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 800319e:	6840      	ldr	r0, [r0, #4]
 80031a0:	b130      	cbz	r0, 80031b0 <_ZNK8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80031a2:	689a      	ldr	r2, [r3, #8]
 80031a4:	b91a      	cbnz	r2, 80031ae <_ZNK8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 80031a6:	68d8      	ldr	r0, [r3, #12]
 80031a8:	f000 0001 	and.w	r0, r0, #1
 80031ac:	4770      	bx	lr
 80031ae:	2001      	movs	r0, #1
    }
 80031b0:	4770      	bx	lr

080031b2 <_ZN8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80031b2:	b510      	push	{r4, lr}
 80031b4:	4604      	mov	r4, r0
 80031b6:	2110      	movs	r1, #16
 80031b8:	f01b fa8e 	bl	801e6d8 <_ZdlPvj>
 80031bc:	4620      	mov	r0, r4
 80031be:	bd10      	pop	{r4, pc}

080031c0 <_ZN14configViewBaseD0Ev>:
configViewBase::~configViewBase()
 80031c0:	b510      	push	{r4, lr}
 80031c2:	4604      	mov	r4, r0
}
 80031c4:	21dc      	movs	r1, #220	@ 0xdc
 80031c6:	f01b fa87 	bl	801e6d8 <_ZdlPvj>
 80031ca:	4620      	mov	r0, r4
 80031cc:	bd10      	pop	{r4, pc}

080031ce <_ZN14configViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void configViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back_main_btn)
 80031ce:	3098      	adds	r0, #152	@ 0x98
 80031d0:	4288      	cmp	r0, r1
{
 80031d2:	b508      	push	{r3, lr}
    if (&src == &back_main_btn)
 80031d4:	d105      	bne.n	80031e2 <_ZN14configViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~configViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80031d6:	f00a fd9f 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
        //back_main
        //When back_main_btn clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    }
}
 80031da:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMainScreenNoTransition();
 80031de:	f7ff b923 	b.w	8002428 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
}
 80031e2:	bd08      	pop	{r3, pc}

080031e4 <_ZN14configViewBaseC1Ev>:
configViewBase::configViewBase() :
 80031e4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80031e8:	4604      	mov	r4, r0
 80031ea:	2500      	movs	r5, #0
 80031ec:	f00c f8b4 	bl	800f358 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
 80031f0:	f04f 0a26 	mov.w	sl, #38	@ 0x26
    buttonCallback(this, &configViewBase::buttonCallbackHandler)
 80031f4:	4626      	mov	r6, r4
 80031f6:	4b49      	ldr	r3, [pc, #292]	@ (800331c <_ZN14configViewBaseC1Ev+0x138>)
 80031f8:	4652      	mov	r2, sl
 80031fa:	4629      	mov	r1, r5
 80031fc:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80031fe:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 8003202:	f846 3b40 	str.w	r3, [r6], #64
 8003206:	4630      	mov	r0, r6
 8003208:	f01b fd30 	bl	801ec6c <memset>
 800320c:	4630      	mov	r0, r6
 800320e:	f7ff fc91 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
 8003212:	f04f 08ff 	mov.w	r8, #255	@ 0xff
 8003216:	4b42      	ldr	r3, [pc, #264]	@ (8003320 <_ZN14configViewBaseC1Ev+0x13c>)
 8003218:	f64f 79ff 	movw	r9, #65535	@ 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800321c:	4652      	mov	r2, sl
 800321e:	4629      	mov	r1, r5
 8003220:	6423      	str	r3, [r4, #64]	@ 0x40
 8003222:	4638      	mov	r0, r7
 8003224:	f884 8066 	strb.w	r8, [r4, #102]	@ 0x66
        : color(col)
 8003228:	66a5      	str	r5, [r4, #104]	@ 0x68
 800322a:	f8ad 9004 	strh.w	r9, [sp, #4]
 800322e:	f01b fd1d 	bl	801ec6c <memset>
 8003232:	4638      	mov	r0, r7
 8003234:	f7ff fc7e 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
 8003238:	4b3a      	ldr	r3, [pc, #232]	@ (8003324 <_ZN14configViewBaseC1Ev+0x140>)
 800323a:	f884 8094 	strb.w	r8, [r4, #148]	@ 0x94
 800323e:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8003242:	66e3      	str	r3, [r4, #108]	@ 0x6c
        Image::setBitmap(bmp);
 8003244:	a901      	add	r1, sp, #4
        : Widget(), bitmap(bmp), alpha(255)
 8003246:	f8bd 3004 	ldrh.w	r3, [sp, #4]
        Image::setBitmap(bmp);
 800324a:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 800324c:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
        Image::setBitmap(bmp);
 8003250:	f008 ff11 	bl	800c076 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), action(), pressed(false)
 8003254:	4652      	mov	r2, sl
 8003256:	4629      	mov	r1, r5
 8003258:	4640      	mov	r0, r8
 800325a:	f01b fd07 	bl	801ec6c <memset>
 800325e:	4640      	mov	r0, r8
 8003260:	f7ff fc68 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
        : AbstractButton(), up(), down(), alpha(255)
 8003264:	4b30      	ldr	r3, [pc, #192]	@ (8003328 <_ZN14configViewBaseC1Ev+0x144>)
        touchable = touch;
 8003266:	f04f 0a01 	mov.w	sl, #1
        setXY(x, y);
 800326a:	462a      	mov	r2, r5
 800326c:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 8003270:	4629      	mov	r1, r5
        : pobject(pObject), pmemfun(pmemfun_1)
 8003272:	4b2e      	ldr	r3, [pc, #184]	@ (800332c <_ZN14configViewBaseC1Ev+0x148>)
 8003274:	4630      	mov	r0, r6
 8003276:	f8a4 90c6 	strh.w	r9, [r4, #198]	@ 0xc6
 800327a:	f8a4 90c8 	strh.w	r9, [r4, #200]	@ 0xc8
 800327e:	f884 90ca 	strb.w	r9, [r4, #202]	@ 0xca
 8003282:	f104 0904 	add.w	r9, r4, #4
 8003286:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
 800328a:	f884 50c4 	strb.w	r5, [r4, #196]	@ 0xc4
        touchable = touch;
 800328e:	f884 a0bc 	strb.w	sl, [r4, #188]	@ 0xbc
 8003292:	e9c4 3433 	strd	r3, r4, [r4, #204]	@ 0xcc
 8003296:	4b26      	ldr	r3, [pc, #152]	@ (8003330 <_ZN14configViewBaseC1Ev+0x14c>)
 8003298:	e9c4 3535 	strd	r3, r5, [r4, #212]	@ 0xd4
        setXY(x, y);
 800329c:	f7fe ff93 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80032a0:	4630      	mov	r0, r6
 80032a2:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 80032a6:	f7fe ff55 	bl	8002154 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80032aa:	4630      	mov	r0, r6
 80032ac:	f44f 7188 	mov.w	r1, #272	@ 0x110
 80032b0:	f7fe ff52 	bl	8002158 <_ZN8touchgfx8Drawable9setHeightEs>
        color = newColor;
 80032b4:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80032b8:	4631      	mov	r1, r6
 80032ba:	4648      	mov	r0, r9
 80032bc:	66a3      	str	r3, [r4, #104]	@ 0x68
 80032be:	f007 f81b 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 80032c2:	462a      	mov	r2, r5
 80032c4:	4629      	mov	r1, r5
 80032c6:	4638      	mov	r0, r7
 80032c8:	f7fe ff7d 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_DARK_ID));
 80032cc:	a901      	add	r1, sp, #4
 80032ce:	4638      	mov	r0, r7
 80032d0:	f8ad 5004 	strh.w	r5, [sp, #4]
 80032d4:	f008 fecf 	bl	800c076 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80032d8:	4639      	mov	r1, r7
 80032da:	4648      	mov	r0, r9
 80032dc:	f007 f80c 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    back_main_btn.setXY(425, 5);
 80032e0:	4640      	mov	r0, r8
 80032e2:	2205      	movs	r2, #5
 80032e4:	f240 11a9 	movw	r1, #425	@ 0x1a9
 80032e8:	f7fe ff6d 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
    back_main_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BACK50_ID), touchgfx::Bitmap(BITMAP_BACK50_ID));
 80032ec:	aa01      	add	r2, sp, #4
 80032ee:	4669      	mov	r1, sp
 80032f0:	4640      	mov	r0, r8
 80032f2:	f8ad a000 	strh.w	sl, [sp]
 80032f6:	f8ad a004 	strh.w	sl, [sp, #4]
 80032fa:	f008 fd83 	bl	800be04 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        alpha = newAlpha;
 80032fe:	2396      	movs	r3, #150	@ 0x96
 8003300:	4648      	mov	r0, r9
 8003302:	4641      	mov	r1, r8
 8003304:	f884 30ca 	strb.w	r3, [r4, #202]	@ 0xca
    back_main_btn.setAction(buttonCallback);
 8003308:	f104 03cc 	add.w	r3, r4, #204	@ 0xcc
        action = &callback;
 800330c:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8003310:	f006 fff2 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003314:	4620      	mov	r0, r4
 8003316:	b002      	add	sp, #8
 8003318:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800331c:	080209e8 	.word	0x080209e8
 8003320:	08020ffc 	.word	0x08020ffc
 8003324:	080210d8 	.word	0x080210d8
 8003328:	08021064 	.word	0x08021064
 800332c:	080209d0 	.word	0x080209d0
 8003330:	080031cf 	.word	0x080031cf

08003334 <_ZN13motorViewBaseD1Ev>:
}

motorViewBase::~motorViewBase()
{

}
 8003334:	4770      	bx	lr

08003336 <_ZN13motorViewBase11setupScreenEv>:

void motorViewBase::setupScreen()
{

}
 8003336:	4770      	bx	lr

08003338 <_ZN8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003338:	4770      	bx	lr

0800333a <_ZN8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800333a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800333c:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 800333e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003340:	68c2      	ldr	r2, [r0, #12]
 8003342:	689b      	ldr	r3, [r3, #8]
 8003344:	1055      	asrs	r5, r2, #1
 8003346:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800334a:	07d2      	lsls	r2, r2, #31
 800334c:	bf48      	it	mi
 800334e:	5962      	ldrmi	r2, [r4, r5]
    }
 8003350:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003352:	bf48      	it	mi
 8003354:	58d3      	ldrmi	r3, [r2, r3]
 8003356:	4718      	bx	r3

08003358 <_ZNK8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8003358:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 800335a:	6840      	ldr	r0, [r0, #4]
 800335c:	b130      	cbz	r0, 800336c <_ZNK8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800335e:	689a      	ldr	r2, [r3, #8]
 8003360:	b91a      	cbnz	r2, 800336a <_ZNK8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8003362:	68d8      	ldr	r0, [r3, #12]
 8003364:	f000 0001 	and.w	r0, r0, #1
 8003368:	4770      	bx	lr
 800336a:	2001      	movs	r0, #1
    }
 800336c:	4770      	bx	lr

0800336e <_ZN8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800336e:	b510      	push	{r4, lr}
 8003370:	4604      	mov	r4, r0
 8003372:	2110      	movs	r1, #16
 8003374:	f01b f9b0 	bl	801e6d8 <_ZdlPvj>
 8003378:	4620      	mov	r0, r4
 800337a:	bd10      	pop	{r4, pc}

0800337c <_ZN13motorViewBaseD0Ev>:
motorViewBase::~motorViewBase()
 800337c:	b510      	push	{r4, lr}
 800337e:	4604      	mov	r4, r0
}
 8003380:	21dc      	movs	r1, #220	@ 0xdc
 8003382:	f01b f9a9 	bl	801e6d8 <_ZdlPvj>
 8003386:	4620      	mov	r0, r4
 8003388:	bd10      	pop	{r4, pc}

0800338a <_ZN13motorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void motorViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back_main_btn)
 800338a:	3098      	adds	r0, #152	@ 0x98
 800338c:	4288      	cmp	r0, r1
{
 800338e:	b508      	push	{r3, lr}
    if (&src == &back_main_btn)
 8003390:	d105      	bne.n	800339e <_ZN13motorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~motorViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003392:	f00a fcc1 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
        //back_main
        //When back_main_btn clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    }
}
 8003396:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMainScreenNoTransition();
 800339a:	f7ff b845 	b.w	8002428 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
}
 800339e:	bd08      	pop	{r3, pc}

080033a0 <_ZN13motorViewBaseC1Ev>:
motorViewBase::motorViewBase() :
 80033a0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80033a4:	4604      	mov	r4, r0
 80033a6:	2500      	movs	r5, #0
 80033a8:	f00b ffd6 	bl	800f358 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
 80033ac:	f04f 0a26 	mov.w	sl, #38	@ 0x26
    buttonCallback(this, &motorViewBase::buttonCallbackHandler)
 80033b0:	4626      	mov	r6, r4
 80033b2:	4b49      	ldr	r3, [pc, #292]	@ (80034d8 <_ZN13motorViewBaseC1Ev+0x138>)
 80033b4:	4652      	mov	r2, sl
 80033b6:	4629      	mov	r1, r5
 80033b8:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80033ba:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 80033be:	f846 3b40 	str.w	r3, [r6], #64
 80033c2:	4630      	mov	r0, r6
 80033c4:	f01b fc52 	bl	801ec6c <memset>
 80033c8:	4630      	mov	r0, r6
 80033ca:	f7ff fbb3 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
 80033ce:	f04f 08ff 	mov.w	r8, #255	@ 0xff
 80033d2:	4b42      	ldr	r3, [pc, #264]	@ (80034dc <_ZN13motorViewBaseC1Ev+0x13c>)
 80033d4:	f64f 79ff 	movw	r9, #65535	@ 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 80033d8:	4652      	mov	r2, sl
 80033da:	4629      	mov	r1, r5
 80033dc:	6423      	str	r3, [r4, #64]	@ 0x40
 80033de:	4638      	mov	r0, r7
 80033e0:	f884 8066 	strb.w	r8, [r4, #102]	@ 0x66
 80033e4:	66a5      	str	r5, [r4, #104]	@ 0x68
 80033e6:	f8ad 9004 	strh.w	r9, [sp, #4]
 80033ea:	f01b fc3f 	bl	801ec6c <memset>
 80033ee:	4638      	mov	r0, r7
 80033f0:	f7ff fba0 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
 80033f4:	4b3a      	ldr	r3, [pc, #232]	@ (80034e0 <_ZN13motorViewBaseC1Ev+0x140>)
 80033f6:	f884 8094 	strb.w	r8, [r4, #148]	@ 0x94
 80033fa:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 80033fe:	66e3      	str	r3, [r4, #108]	@ 0x6c
        Image::setBitmap(bmp);
 8003400:	a901      	add	r1, sp, #4
        : Widget(), bitmap(bmp), alpha(255)
 8003402:	f8bd 3004 	ldrh.w	r3, [sp, #4]
        Image::setBitmap(bmp);
 8003406:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8003408:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
        Image::setBitmap(bmp);
 800340c:	f008 fe33 	bl	800c076 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), action(), pressed(false)
 8003410:	4652      	mov	r2, sl
 8003412:	4629      	mov	r1, r5
 8003414:	4640      	mov	r0, r8
 8003416:	f01b fc29 	bl	801ec6c <memset>
 800341a:	4640      	mov	r0, r8
 800341c:	f7ff fb8a 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
        : AbstractButton(), up(), down(), alpha(255)
 8003420:	4b30      	ldr	r3, [pc, #192]	@ (80034e4 <_ZN13motorViewBaseC1Ev+0x144>)
        touchable = touch;
 8003422:	f04f 0a01 	mov.w	sl, #1
        setXY(x, y);
 8003426:	462a      	mov	r2, r5
 8003428:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 800342c:	4629      	mov	r1, r5
        : pobject(pObject), pmemfun(pmemfun_1)
 800342e:	4b2e      	ldr	r3, [pc, #184]	@ (80034e8 <_ZN13motorViewBaseC1Ev+0x148>)
 8003430:	4630      	mov	r0, r6
 8003432:	f8a4 90c6 	strh.w	r9, [r4, #198]	@ 0xc6
 8003436:	f8a4 90c8 	strh.w	r9, [r4, #200]	@ 0xc8
 800343a:	f884 90ca 	strb.w	r9, [r4, #202]	@ 0xca
 800343e:	f104 0904 	add.w	r9, r4, #4
 8003442:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
 8003446:	f884 50c4 	strb.w	r5, [r4, #196]	@ 0xc4
        touchable = touch;
 800344a:	f884 a0bc 	strb.w	sl, [r4, #188]	@ 0xbc
 800344e:	e9c4 3433 	strd	r3, r4, [r4, #204]	@ 0xcc
 8003452:	4b26      	ldr	r3, [pc, #152]	@ (80034ec <_ZN13motorViewBaseC1Ev+0x14c>)
 8003454:	e9c4 3535 	strd	r3, r5, [r4, #212]	@ 0xd4
        setXY(x, y);
 8003458:	f7fe feb5 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800345c:	4630      	mov	r0, r6
 800345e:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8003462:	f7fe fe77 	bl	8002154 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003466:	4630      	mov	r0, r6
 8003468:	f44f 7188 	mov.w	r1, #272	@ 0x110
 800346c:	f7fe fe74 	bl	8002158 <_ZN8touchgfx8Drawable9setHeightEs>
        color = newColor;
 8003470:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003474:	4631      	mov	r1, r6
 8003476:	4648      	mov	r0, r9
 8003478:	66a3      	str	r3, [r4, #104]	@ 0x68
 800347a:	f006 ff3d 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 800347e:	462a      	mov	r2, r5
 8003480:	4629      	mov	r1, r5
 8003482:	4638      	mov	r0, r7
 8003484:	f7fe fe9f 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_DARK_ID));
 8003488:	a901      	add	r1, sp, #4
 800348a:	4638      	mov	r0, r7
 800348c:	f8ad 5004 	strh.w	r5, [sp, #4]
 8003490:	f008 fdf1 	bl	800c076 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003494:	4639      	mov	r1, r7
 8003496:	4648      	mov	r0, r9
 8003498:	f006 ff2e 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    back_main_btn.setXY(425, 5);
 800349c:	4640      	mov	r0, r8
 800349e:	2205      	movs	r2, #5
 80034a0:	f240 11a9 	movw	r1, #425	@ 0x1a9
 80034a4:	f7fe fe8f 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
    back_main_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BACK50_ID), touchgfx::Bitmap(BITMAP_BACK50_ID));
 80034a8:	aa01      	add	r2, sp, #4
 80034aa:	4669      	mov	r1, sp
 80034ac:	4640      	mov	r0, r8
 80034ae:	f8ad a000 	strh.w	sl, [sp]
 80034b2:	f8ad a004 	strh.w	sl, [sp, #4]
 80034b6:	f008 fca5 	bl	800be04 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        alpha = newAlpha;
 80034ba:	2396      	movs	r3, #150	@ 0x96
 80034bc:	4648      	mov	r0, r9
 80034be:	4641      	mov	r1, r8
 80034c0:	f884 30ca 	strb.w	r3, [r4, #202]	@ 0xca
    back_main_btn.setAction(buttonCallback);
 80034c4:	f104 03cc 	add.w	r3, r4, #204	@ 0xcc
        action = &callback;
 80034c8:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80034cc:	f006 ff14 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80034d0:	4620      	mov	r0, r4
 80034d2:	b002      	add	sp, #8
 80034d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80034d8:	08020a34 	.word	0x08020a34
 80034dc:	08020ffc 	.word	0x08020ffc
 80034e0:	080210d8 	.word	0x080210d8
 80034e4:	08021064 	.word	0x08021064
 80034e8:	08020a1c 	.word	0x08020a1c
 80034ec:	0800338b 	.word	0x0800338b

080034f0 <_ZN8touchgfx8TextArea8setWidthEs>:
    virtual void setWidth(int16_t width)
 80034f0:	b530      	push	{r4, r5, lr}
 80034f2:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80034f4:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 80034f6:	4604      	mov	r4, r0
        rect.width = width;
 80034f8:	8101      	strh	r1, [r0, #8]
        boundingArea = calculateBoundingArea();
 80034fa:	466d      	mov	r5, sp
 80034fc:	4601      	mov	r1, r0
 80034fe:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003502:	343c      	adds	r4, #60	@ 0x3c
 8003504:	4628      	mov	r0, r5
 8003506:	4798      	blx	r3
 8003508:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800350c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003510:	b005      	add	sp, #20
 8003512:	bd30      	pop	{r4, r5, pc}

08003514 <_ZN8touchgfx8TextArea9setHeightEs>:
    virtual void setHeight(int16_t height)
 8003514:	b530      	push	{r4, r5, lr}
 8003516:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8003518:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 800351a:	4604      	mov	r4, r0
        rect.height = height;
 800351c:	8141      	strh	r1, [r0, #10]
        boundingArea = calculateBoundingArea();
 800351e:	466d      	mov	r5, sp
 8003520:	4601      	mov	r1, r0
 8003522:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003526:	343c      	adds	r4, #60	@ 0x3c
 8003528:	4628      	mov	r0, r5
 800352a:	4798      	blx	r3
 800352c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003530:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003534:	b005      	add	sp, #20
 8003536:	bd30      	pop	{r4, r5, pc}

08003538 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003538:	2200      	movs	r2, #0
 800353a:	8002      	strh	r2, [r0, #0]
 800353c:	8042      	strh	r2, [r0, #2]
 800353e:	8082      	strh	r2, [r0, #4]
 8003540:	80c2      	strh	r2, [r0, #6]
    }
 8003542:	4770      	bx	lr

08003544 <_ZN8touchgfx8TextArea8setAlphaEh>:
        alpha = newAlpha;
 8003544:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 8003548:	4770      	bx	lr

0800354a <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
 800354a:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800354c:	b570      	push	{r4, r5, r6, lr}
 800354e:	4604      	mov	r4, r0
        setX(x);
 8003550:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003552:	4615      	mov	r5, r2
        setX(x);
 8003554:	4798      	blx	r3
        setBaselineY(baselineY);
 8003556:	6823      	ldr	r3, [r4, #0]
 8003558:	4620      	mov	r0, r4
 800355a:	4629      	mov	r1, r5
 800355c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 800355e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8003562:	4718      	bx	r3

08003564 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8003564:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8003566:	4770      	bx	lr

08003568 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard2Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return wc2;
    }
 8003568:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800356a:	4770      	bx	lr

0800356c <_ZN8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800356c:	4770      	bx	lr

0800356e <_ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev>:
class TextAreaWithTwoWildcards : public TextAreaWithWildcardBase
 800356e:	4770      	bx	lr

08003570 <_ZN8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003570:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003572:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 8003574:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003576:	68c2      	ldr	r2, [r0, #12]
 8003578:	689b      	ldr	r3, [r3, #8]
 800357a:	1055      	asrs	r5, r2, #1
 800357c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003580:	07d2      	lsls	r2, r2, #31
 8003582:	bf48      	it	mi
 8003584:	5962      	ldrmi	r2, [r4, r5]
    }
 8003586:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003588:	bf48      	it	mi
 800358a:	58d3      	ldrmi	r3, [r2, r3]
 800358c:	4718      	bx	r3

0800358e <_ZNK8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800358e:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003590:	6840      	ldr	r0, [r0, #4]
 8003592:	b130      	cbz	r0, 80035a2 <_ZNK8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003594:	689a      	ldr	r2, [r3, #8]
 8003596:	b91a      	cbnz	r2, 80035a0 <_ZNK8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8003598:	68d8      	ldr	r0, [r3, #12]
 800359a:	f000 0001 	and.w	r0, r0, #1
 800359e:	4770      	bx	lr
 80035a0:	2001      	movs	r0, #1
    }
 80035a2:	4770      	bx	lr

080035a4 <_ZN8touchgfx24TextAreaWithTwoWildcardsD0Ev>:
 80035a4:	b510      	push	{r4, lr}
 80035a6:	4604      	mov	r4, r0
 80035a8:	2150      	movs	r1, #80	@ 0x50
 80035aa:	f01b f895 	bl	801e6d8 <_ZdlPvj>
 80035ae:	4620      	mov	r0, r4
 80035b0:	bd10      	pop	{r4, pc}

080035b2 <_ZN8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80035b2:	b510      	push	{r4, lr}
 80035b4:	4604      	mov	r4, r0
 80035b6:	2110      	movs	r1, #16
 80035b8:	f01b f88e 	bl	801e6d8 <_ZdlPvj>
 80035bc:	4620      	mov	r0, r4
 80035be:	bd10      	pop	{r4, pc}

080035c0 <_ZN14sensorViewBase11setupScreenEv>:
{

}

void sensorViewBase::setupScreen()
{
 80035c0:	b510      	push	{r4, lr}
 80035c2:	4604      	mov	r4, r0
    ex1.initialize();
 80035c4:	3098      	adds	r0, #152	@ 0x98
 80035c6:	f000 fc97 	bl	8003ef8 <_ZN16CustomContainer110initializeEv>
    ex2.initialize();
 80035ca:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 80035ce:	f000 fc93 	bl	8003ef8 <_ZN16CustomContainer110initializeEv>
    ex3.initialize();
 80035d2:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 80035d6:	f000 fc8f 	bl	8003ef8 <_ZN16CustomContainer110initializeEv>
    ex4.initialize();
 80035da:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 80035de:	f000 fc8b 	bl	8003ef8 <_ZN16CustomContainer110initializeEv>
    ex5.initialize();
 80035e2:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
}
 80035e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ex5.initialize();
 80035ea:	f000 bc85 	b.w	8003ef8 <_ZN16CustomContainer110initializeEv>

080035ee <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80035ee:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80035f0:	f7fe fdda 	bl	80021a8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80035f4:	bd08      	pop	{r3, pc}
	...

080035f8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80035f8:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80035fa:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80035fc:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
    virtual void setBaselineY(int16_t baselineY)
 80035fe:	4604      	mov	r4, r0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003600:	4b11      	ldr	r3, [pc, #68]	@ (8003648 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003602:	b28d      	uxth	r5, r1
 8003604:	681b      	ldr	r3, [r3, #0]
 8003606:	b92b      	cbnz	r3, 8003614 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003608:	4b10      	ldr	r3, [pc, #64]	@ (800364c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800360a:	216c      	movs	r1, #108	@ 0x6c
 800360c:	4a10      	ldr	r2, [pc, #64]	@ (8003650 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800360e:	4811      	ldr	r0, [pc, #68]	@ (8003654 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003610:	f01b f890 	bl	801e734 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003614:	4910      	ldr	r1, [pc, #64]	@ (8003658 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8003616:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003618:	8809      	ldrh	r1, [r1, #0]
 800361a:	4291      	cmp	r1, r2
 800361c:	d803      	bhi.n	8003626 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800361e:	4b0f      	ldr	r3, [pc, #60]	@ (800365c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003620:	216d      	movs	r1, #109	@ 0x6d
 8003622:	4a0b      	ldr	r2, [pc, #44]	@ (8003650 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003624:	e7f3      	b.n	800360e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003626:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800362a:	4b0d      	ldr	r3, [pc, #52]	@ (8003660 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800362c:	681b      	ldr	r3, [r3, #0]
 800362e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8003632:	6803      	ldr	r3, [r0, #0]
 8003634:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003636:	4798      	blx	r3
 8003638:	1a29      	subs	r1, r5, r0
 800363a:	4633      	mov	r3, r6
 800363c:	4620      	mov	r0, r4
 800363e:	b209      	sxth	r1, r1
    }
 8003640:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003644:	4718      	bx	r3
 8003646:	bf00      	nop
 8003648:	200150fc 	.word	0x200150fc
 800364c:	08020670 	.word	0x08020670
 8003650:	080206b2 	.word	0x080206b2
 8003654:	080206ed 	.word	0x080206ed
 8003658:	20015100 	.word	0x20015100
 800365c:	08020a60 	.word	0x08020a60
 8003660:	20015104 	.word	0x20015104

08003664 <_ZN14sensorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void sensorViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back_main_btn)
 8003664:	f200 6024 	addw	r0, r0, #1572	@ 0x624
 8003668:	4288      	cmp	r0, r1
{
 800366a:	b508      	push	{r3, lr}
    if (&src == &back_main_btn)
 800366c:	d105      	bne.n	800367a <_ZN14sensorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~sensorViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800366e:	f00a fb53 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
        //back_main
        //When back_main_btn clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    }
}
 8003672:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMainScreenNoTransition();
 8003676:	f7fe bed7 	b.w	8002428 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
}
 800367a:	bd08      	pop	{r3, pc}

0800367c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800367c:	2200      	movs	r2, #0
 800367e:	f04f 31ff 	mov.w	r1, #4294967295
              text(0)
 8003682:	6082      	str	r2, [r0, #8]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003684:	e9c0 2100 	strd	r2, r1, [r0]
    }
 8003688:	4770      	bx	lr

0800368a <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800368a:	b570      	push	{r4, r5, r6, lr}
 800368c:	4604      	mov	r4, r0
 800368e:	461d      	mov	r5, r3
 8003690:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003694:	f7fe fd97 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003698:	6823      	ldr	r3, [r4, #0]
 800369a:	4629      	mov	r1, r5
 800369c:	4620      	mov	r0, r4
 800369e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80036a0:	4798      	blx	r3
        setHeight(height);
 80036a2:	6823      	ldr	r3, [r4, #0]
 80036a4:	4631      	mov	r1, r6
 80036a6:	4620      	mov	r0, r4
 80036a8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 80036aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80036ae:	4718      	bx	r3

080036b0 <_ZN16CustomContainer1D1Ev>:

class CustomContainer1 : public CustomContainer1Base
{
public:
    CustomContainer1();
    virtual ~CustomContainer1() {}
 80036b0:	4b03      	ldr	r3, [pc, #12]	@ (80036c0 <_ZN16CustomContainer1D1Ev+0x10>)
 80036b2:	b510      	push	{r4, lr}
 80036b4:	4604      	mov	r4, r0
 80036b6:	6003      	str	r3, [r0, #0]
 80036b8:	f7fe fd6d 	bl	8002196 <_ZN20CustomContainer1BaseD1Ev>
 80036bc:	4620      	mov	r0, r4
 80036be:	bd10      	pop	{r4, pc}
 80036c0:	08020bd0 	.word	0x08020bd0

080036c4 <_ZN14sensorViewBaseD1Ev>:
sensorViewBase::~sensorViewBase()
 80036c4:	4b0c      	ldr	r3, [pc, #48]	@ (80036f8 <_ZN14sensorViewBaseD1Ev+0x34>)
 80036c6:	b510      	push	{r4, lr}
 80036c8:	4604      	mov	r4, r0
 80036ca:	6003      	str	r3, [r0, #0]
}
 80036cc:	f500 702a 	add.w	r0, r0, #680	@ 0x2a8
 80036d0:	f7ff ffee 	bl	80036b0 <_ZN16CustomContainer1D1Ev>
 80036d4:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 80036d8:	f7ff ffea 	bl	80036b0 <_ZN16CustomContainer1D1Ev>
 80036dc:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 80036e0:	f7ff ffe6 	bl	80036b0 <_ZN16CustomContainer1D1Ev>
 80036e4:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 80036e8:	f7ff ffe2 	bl	80036b0 <_ZN16CustomContainer1D1Ev>
 80036ec:	f104 0098 	add.w	r0, r4, #152	@ 0x98
 80036f0:	f7ff ffde 	bl	80036b0 <_ZN16CustomContainer1D1Ev>
 80036f4:	4620      	mov	r0, r4
 80036f6:	bd10      	pop	{r4, pc}
 80036f8:	08020b9c 	.word	0x08020b9c

080036fc <_ZN14sensorViewBaseD0Ev>:
sensorViewBase::~sensorViewBase()
 80036fc:	b510      	push	{r4, lr}
 80036fe:	4604      	mov	r4, r0
}
 8003700:	f7ff ffe0 	bl	80036c4 <_ZN14sensorViewBaseD1Ev>
 8003704:	f240 61a4 	movw	r1, #1700	@ 0x6a4
 8003708:	4620      	mov	r0, r4
 800370a:	f01a ffe5 	bl	801e6d8 <_ZdlPvj>
 800370e:	4620      	mov	r0, r4
 8003710:	bd10      	pop	{r4, pc}

08003712 <_ZN16CustomContainer1D0Ev>:
 8003712:	b510      	push	{r4, lr}
 8003714:	4604      	mov	r4, r0
 8003716:	f7ff ffcb 	bl	80036b0 <_ZN16CustomContainer1D1Ev>
 800371a:	2184      	movs	r1, #132	@ 0x84
 800371c:	4620      	mov	r0, r4
 800371e:	f01a ffdb 	bl	801e6d8 <_ZdlPvj>
 8003722:	4620      	mov	r0, r4
 8003724:	bd10      	pop	{r4, pc}
	...

08003728 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8003728:	b510      	push	{r4, lr}
 800372a:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800372c:	2226      	movs	r2, #38	@ 0x26
 800372e:	2100      	movs	r1, #0
 8003730:	f01b fa9c 	bl	801ec6c <memset>
 8003734:	4620      	mov	r0, r4
 8003736:	f7ff f9fd 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
 800373a:	4b0a      	ldr	r3, [pc, #40]	@ (8003764 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 800373c:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
    }
 8003740:	4620      	mov	r0, r4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003742:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8003744:	4b08      	ldr	r3, [pc, #32]	@ (8003768 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8003746:	62a3      	str	r3, [r4, #40]	@ 0x28
 8003748:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800374c:	85a3      	strh	r3, [r4, #44]	@ 0x2c
 800374e:	2300      	movs	r3, #0
 8003750:	e9c4 320c 	strd	r3, r2, [r4, #48]	@ 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003754:	f04f 32ff 	mov.w	r2, #4294967295
 8003758:	8723      	strh	r3, [r4, #56]	@ 0x38
 800375a:	63e3      	str	r3, [r4, #60]	@ 0x3c
              text(0)
 800375c:	e9c4 2310 	strd	r2, r3, [r4, #64]	@ 0x40
    }
 8003760:	bd10      	pop	{r4, pc}
 8003762:	bf00      	nop
 8003764:	08020f6c 	.word	0x08020f6c
 8003768:	08020018 	.word	0x08020018

0800376c <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>:
    TextAreaWithTwoWildcards()
 800376c:	b510      	push	{r4, lr}
 800376e:	4604      	mov	r4, r0
        : TextArea()
 8003770:	f7ff ffda 	bl	8003728 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0), wc2(0)
 8003774:	4b03      	ldr	r3, [pc, #12]	@ (8003784 <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev+0x18>)
    }
 8003776:	4620      	mov	r0, r4
        : TextAreaWithWildcardBase(), wc1(0), wc2(0)
 8003778:	6023      	str	r3, [r4, #0]
 800377a:	2300      	movs	r3, #0
 800377c:	e9c4 3312 	strd	r3, r3, [r4, #72]	@ 0x48
    }
 8003780:	bd10      	pop	{r4, pc}
 8003782:	bf00      	nop
 8003784:	08020af4 	.word	0x08020af4

08003788 <_ZN14sensorViewBaseC1Ev>:
sensorViewBase::sensorViewBase() :
 8003788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800378c:	4604      	mov	r4, r0
 800378e:	b099      	sub	sp, #100	@ 0x64
 8003790:	2600      	movs	r6, #0
 8003792:	f00b fde1 	bl	800f358 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &sensorViewBase::buttonCallbackHandler)
 8003796:	4627      	mov	r7, r4
 8003798:	4be0      	ldr	r3, [pc, #896]	@ (8003b1c <_ZN14sensorViewBaseC1Ev+0x394>)
        : Widget(), alpha(255), color(0)
 800379a:	2226      	movs	r2, #38	@ 0x26
 800379c:	4631      	mov	r1, r6
 800379e:	63e6      	str	r6, [r4, #60]	@ 0x3c
 80037a0:	f104 056c 	add.w	r5, r4, #108	@ 0x6c
 80037a4:	f847 3b40 	str.w	r3, [r7], #64
 80037a8:	4638      	mov	r0, r7
 80037aa:	f01b fa5f 	bl	801ec6c <memset>
 80037ae:	4638      	mov	r0, r7
 80037b0:	f7ff f9c0 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
 80037b4:	f04f 08ff 	mov.w	r8, #255	@ 0xff
 80037b8:	4bd9      	ldr	r3, [pc, #868]	@ (8003b20 <_ZN14sensorViewBaseC1Ev+0x398>)
 80037ba:	f64f 7aff 	movw	sl, #65535	@ 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 80037be:	2226      	movs	r2, #38	@ 0x26
 80037c0:	4631      	mov	r1, r6
 80037c2:	6423      	str	r3, [r4, #64]	@ 0x40
 80037c4:	4628      	mov	r0, r5
 80037c6:	f884 8066 	strb.w	r8, [r4, #102]	@ 0x66
 80037ca:	f504 798e 	add.w	r9, r4, #284	@ 0x11c
        : color(col)
 80037ce:	66a6      	str	r6, [r4, #104]	@ 0x68
 80037d0:	f504 7b09 	add.w	fp, r4, #548	@ 0x224
 80037d4:	f8ad a058 	strh.w	sl, [sp, #88]	@ 0x58
 80037d8:	f01b fa48 	bl	801ec6c <memset>
 80037dc:	4628      	mov	r0, r5
 80037de:	f7ff f9a9 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
 80037e2:	4ad0      	ldr	r2, [pc, #832]	@ (8003b24 <_ZN14sensorViewBaseC1Ev+0x39c>)
        Image::setBitmap(bmp);
 80037e4:	a916      	add	r1, sp, #88	@ 0x58
 80037e6:	4628      	mov	r0, r5
        : Widget(), bitmap(bmp), alpha(255)
 80037e8:	66e2      	str	r2, [r4, #108]	@ 0x6c
 80037ea:	f8bd 2058 	ldrh.w	r2, [sp, #88]	@ 0x58
 80037ee:	f884 8094 	strb.w	r8, [r4, #148]	@ 0x94
 80037f2:	f504 78d0 	add.w	r8, r4, #416	@ 0x1a0
 80037f6:	f8a4 2092 	strh.w	r2, [r4, #146]	@ 0x92
        Image::setBitmap(bmp);
 80037fa:	f008 fc3c 	bl	800c076 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80037fe:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 8003802:	4618      	mov	r0, r3
 8003804:	930e      	str	r3, [sp, #56]	@ 0x38
 8003806:	f000 fb6d 	bl	8003ee4 <_ZN16CustomContainer1C1Ev>
 800380a:	4648      	mov	r0, r9
 800380c:	f000 fb6a 	bl	8003ee4 <_ZN16CustomContainer1C1Ev>
 8003810:	4640      	mov	r0, r8
 8003812:	f000 fb67 	bl	8003ee4 <_ZN16CustomContainer1C1Ev>
 8003816:	4658      	mov	r0, fp
 8003818:	f000 fb64 	bl	8003ee4 <_ZN16CustomContainer1C1Ev>
 800381c:	f504 732a 	add.w	r3, r4, #680	@ 0x2a8
 8003820:	4618      	mov	r0, r3
 8003822:	930f      	str	r3, [sp, #60]	@ 0x3c
 8003824:	f000 fb5e 	bl	8003ee4 <_ZN16CustomContainer1C1Ev>
 8003828:	f504 734b 	add.w	r3, r4, #812	@ 0x32c
 800382c:	4618      	mov	r0, r3
 800382e:	9303      	str	r3, [sp, #12]
 8003830:	f7ff ff7a 	bl	8003728 <_ZN8touchgfx8TextAreaC1Ev>
 8003834:	f504 735d 	add.w	r3, r4, #884	@ 0x374
 8003838:	4618      	mov	r0, r3
 800383a:	9304      	str	r3, [sp, #16]
 800383c:	f7ff ff74 	bl	8003728 <_ZN8touchgfx8TextAreaC1Ev>
 8003840:	f504 736f 	add.w	r3, r4, #956	@ 0x3bc
 8003844:	4618      	mov	r0, r3
 8003846:	9305      	str	r3, [sp, #20]
 8003848:	f7ff ff6e 	bl	8003728 <_ZN8touchgfx8TextAreaC1Ev>
 800384c:	f204 4304 	addw	r3, r4, #1028	@ 0x404
 8003850:	4618      	mov	r0, r3
 8003852:	9306      	str	r3, [sp, #24]
 8003854:	f7ff ff68 	bl	8003728 <_ZN8touchgfx8TextAreaC1Ev>
 8003858:	f204 434c 	addw	r3, r4, #1100	@ 0x44c
 800385c:	4618      	mov	r0, r3
 800385e:	9307      	str	r3, [sp, #28]
 8003860:	f7ff ff62 	bl	8003728 <_ZN8touchgfx8TextAreaC1Ev>
 8003864:	f204 4394 	addw	r3, r4, #1172	@ 0x494
 8003868:	4618      	mov	r0, r3
 800386a:	9308      	str	r3, [sp, #32]
 800386c:	f7ff ff7e 	bl	800376c <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>
 8003870:	f204 43e4 	addw	r3, r4, #1252	@ 0x4e4
 8003874:	4618      	mov	r0, r3
 8003876:	9309      	str	r3, [sp, #36]	@ 0x24
 8003878:	f7ff ff78 	bl	800376c <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>
 800387c:	f204 5334 	addw	r3, r4, #1332	@ 0x534
 8003880:	4618      	mov	r0, r3
 8003882:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003884:	f7ff ff72 	bl	800376c <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>
 8003888:	f204 5384 	addw	r3, r4, #1412	@ 0x584
 800388c:	4618      	mov	r0, r3
 800388e:	930c      	str	r3, [sp, #48]	@ 0x30
 8003890:	f7ff ff6c 	bl	800376c <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>
 8003894:	f204 53d4 	addw	r3, r4, #1492	@ 0x5d4
 8003898:	4618      	mov	r0, r3
 800389a:	930d      	str	r3, [sp, #52]	@ 0x34
 800389c:	f7ff ff66 	bl	800376c <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>
 80038a0:	f204 6324 	addw	r3, r4, #1572	@ 0x624
        : Widget(), action(), pressed(false)
 80038a4:	2226      	movs	r2, #38	@ 0x26
 80038a6:	4631      	mov	r1, r6
 80038a8:	4618      	mov	r0, r3
 80038aa:	930a      	str	r3, [sp, #40]	@ 0x28
 80038ac:	f01b f9de 	bl	801ec6c <memset>
 80038b0:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80038b2:	f7ff f93f 	bl	8002b34 <_ZN8touchgfx6WidgetC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80038b6:	4b9c      	ldr	r3, [pc, #624]	@ (8003b28 <_ZN14sensorViewBaseC1Ev+0x3a0>)
        touchable = touch;
 80038b8:	2201      	movs	r2, #1
    __background.setPosition(0, 0, 480, 272);
 80038ba:	4638      	mov	r0, r7
 80038bc:	f8c4 3694 	str.w	r3, [r4, #1684]	@ 0x694
 80038c0:	4631      	mov	r1, r6
 80038c2:	4b9a      	ldr	r3, [pc, #616]	@ (8003b2c <_ZN14sensorViewBaseC1Ev+0x3a4>)
 80038c4:	f884 2648 	strb.w	r2, [r4, #1608]	@ 0x648
 80038c8:	f8c4 369c 	str.w	r3, [r4, #1692]	@ 0x69c
 80038cc:	f44f 7388 	mov.w	r3, #272	@ 0x110
        : AbstractButton(), up(), down(), alpha(255)
 80038d0:	4a97      	ldr	r2, [pc, #604]	@ (8003b30 <_ZN14sensorViewBaseC1Ev+0x3a8>)
 80038d2:	f8a4 a652 	strh.w	sl, [r4, #1618]	@ 0x652
 80038d6:	f8c4 2624 	str.w	r2, [r4, #1572]	@ 0x624
 80038da:	4632      	mov	r2, r6
 80038dc:	f8a4 a654 	strh.w	sl, [r4, #1620]	@ 0x654
 80038e0:	f884 a656 	strb.w	sl, [r4, #1622]	@ 0x656
 80038e4:	f104 0a04 	add.w	sl, r4, #4
 80038e8:	f8c4 664c 	str.w	r6, [r4, #1612]	@ 0x64c
 80038ec:	f884 6650 	strb.w	r6, [r4, #1616]	@ 0x650
 80038f0:	f8c4 4698 	str.w	r4, [r4, #1688]	@ 0x698
 80038f4:	f8c4 66a0 	str.w	r6, [r4, #1696]	@ 0x6a0
 80038f8:	9300      	str	r3, [sp, #0]
 80038fa:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 80038fe:	f7ff fec4 	bl	800368a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003902:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003906:	4639      	mov	r1, r7
 8003908:	4650      	mov	r0, sl
 800390a:	66a3      	str	r3, [r4, #104]	@ 0x68
        alpha = newAlpha;
 800390c:	2796      	movs	r7, #150	@ 0x96
 800390e:	f006 fcf3 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 8003912:	4632      	mov	r2, r6
 8003914:	4628      	mov	r0, r5
 8003916:	4631      	mov	r1, r6
 8003918:	f7fe fc55 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_DARK_ID));
 800391c:	4628      	mov	r0, r5
 800391e:	a916      	add	r1, sp, #88	@ 0x58
 8003920:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
 8003924:	f008 fba7 	bl	800c076 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003928:	4629      	mov	r1, r5
 800392a:	4650      	mov	r0, sl
        boundingArea = calculateBoundingArea();
 800392c:	ad10      	add	r5, sp, #64	@ 0x40
 800392e:	f006 fce3 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex1.setXY(100, 15);
 8003932:	220f      	movs	r2, #15
 8003934:	2164      	movs	r1, #100	@ 0x64
 8003936:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8003938:	f7fe fc45 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
 800393c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800393e:	4650      	mov	r0, sl
 8003940:	f006 fcda 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex2.setXY(250, 15);
 8003944:	220f      	movs	r2, #15
 8003946:	4648      	mov	r0, r9
 8003948:	21fa      	movs	r1, #250	@ 0xfa
 800394a:	f7fe fc3c 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
 800394e:	4649      	mov	r1, r9
 8003950:	4650      	mov	r0, sl
 8003952:	f8df 91e0 	ldr.w	r9, [pc, #480]	@ 8003b34 <_ZN14sensorViewBaseC1Ev+0x3ac>
 8003956:	f006 fccf 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex3.setXY(25, 145);
 800395a:	2291      	movs	r2, #145	@ 0x91
 800395c:	4640      	mov	r0, r8
 800395e:	2119      	movs	r1, #25
 8003960:	f7fe fc31 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
 8003964:	4641      	mov	r1, r8
 8003966:	4650      	mov	r0, sl
    temperature.setPosition(106, 19, 120, 40);
 8003968:	f04f 0828 	mov.w	r8, #40	@ 0x28
 800396c:	f006 fcc4 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex4.setXY(175, 145);
 8003970:	2291      	movs	r2, #145	@ 0x91
 8003972:	4658      	mov	r0, fp
 8003974:	21af      	movs	r1, #175	@ 0xaf
 8003976:	f7fe fc26 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
 800397a:	4659      	mov	r1, fp
 800397c:	4650      	mov	r0, sl
        color = newColor;
 800397e:	f04f 3bff 	mov.w	fp, #4294967295
 8003982:	f006 fcb9 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex5.setXY(325, 145);
 8003986:	2291      	movs	r2, #145	@ 0x91
 8003988:	f240 1145 	movw	r1, #325	@ 0x145
 800398c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800398e:	f7fe fc1a 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
 8003992:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8003994:	4650      	mov	r0, sl
 8003996:	f006 fcaf 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temperature.setPosition(106, 19, 120, 40);
 800399a:	2378      	movs	r3, #120	@ 0x78
 800399c:	2213      	movs	r2, #19
 800399e:	216a      	movs	r1, #106	@ 0x6a
 80039a0:	9803      	ldr	r0, [sp, #12]
 80039a2:	f8cd 8000 	str.w	r8, [sp]
 80039a6:	f7ff fe70 	bl	800368a <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 80039aa:	9903      	ldr	r1, [sp, #12]
 80039ac:	4628      	mov	r0, r5
        color = newColor;
 80039ae:	f8c4 b35c 	str.w	fp, [r4, #860]	@ 0x35c
        linespace = space;
 80039b2:	f8a4 6360 	strh.w	r6, [r4, #864]	@ 0x360
        boundingArea = calculateBoundingArea();
 80039b6:	f007 ff1f 	bl	800b7f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80039ba:	f504 735a 	add.w	r3, r4, #872	@ 0x368
 80039be:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80039c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80039c6:	2314      	movs	r3, #20
    temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NNZ2));
 80039c8:	a916      	add	r1, sp, #88	@ 0x58
 80039ca:	9803      	ldr	r0, [sp, #12]
 80039cc:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 80039d0:	f8cd 9058 	str.w	r9, [sp, #88]	@ 0x58
 80039d4:	f008 f9b8 	bl	800bd48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80039d8:	9903      	ldr	r1, [sp, #12]
 80039da:	4650      	mov	r0, sl
        alpha = newAlpha;
 80039dc:	f884 7362 	strb.w	r7, [r4, #866]	@ 0x362
 80039e0:	f006 fc8a 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    humidity.setPosition(256, 19, 120, 40);
 80039e4:	2378      	movs	r3, #120	@ 0x78
 80039e6:	2213      	movs	r2, #19
 80039e8:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80039ec:	9804      	ldr	r0, [sp, #16]
 80039ee:	f8cd 8000 	str.w	r8, [sp]
 80039f2:	f7ff fe4a 	bl	800368a <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 80039f6:	9904      	ldr	r1, [sp, #16]
 80039f8:	4628      	mov	r0, r5
        color = newColor;
 80039fa:	f8c4 b3a4 	str.w	fp, [r4, #932]	@ 0x3a4
        linespace = space;
 80039fe:	f8a4 63a8 	strh.w	r6, [r4, #936]	@ 0x3a8
        boundingArea = calculateBoundingArea();
 8003a02:	f007 fef9 	bl	800b7f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a06:	f504 736c 	add.w	r3, r4, #944	@ 0x3b0
 8003a0a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003a0e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003a12:	2313      	movs	r3, #19
    humidity.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JSNQ));
 8003a14:	a916      	add	r1, sp, #88	@ 0x58
 8003a16:	9804      	ldr	r0, [sp, #16]
 8003a18:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003a1c:	f8cd 9058 	str.w	r9, [sp, #88]	@ 0x58
 8003a20:	f008 f992 	bl	800bd48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a24:	9904      	ldr	r1, [sp, #16]
 8003a26:	4650      	mov	r0, sl
        alpha = newAlpha;
 8003a28:	f884 73aa 	strb.w	r7, [r4, #938]	@ 0x3aa
 8003a2c:	f006 fc64 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ph.setPosition(29, 149, 120, 40);
 8003a30:	2378      	movs	r3, #120	@ 0x78
 8003a32:	2295      	movs	r2, #149	@ 0x95
 8003a34:	211d      	movs	r1, #29
 8003a36:	9805      	ldr	r0, [sp, #20]
 8003a38:	f8cd 8000 	str.w	r8, [sp]
 8003a3c:	f7ff fe25 	bl	800368a <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003a40:	9905      	ldr	r1, [sp, #20]
 8003a42:	4628      	mov	r0, r5
        color = newColor;
 8003a44:	f8c4 b3ec 	str.w	fp, [r4, #1004]	@ 0x3ec
        linespace = space;
 8003a48:	f8a4 63f0 	strh.w	r6, [r4, #1008]	@ 0x3f0
        boundingArea = calculateBoundingArea();
 8003a4c:	f007 fed4 	bl	800b7f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a50:	f504 737e 	add.w	r3, r4, #1016	@ 0x3f8
 8003a54:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003a58:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003a5c:	2312      	movs	r3, #18
    ph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HHCR));
 8003a5e:	a916      	add	r1, sp, #88	@ 0x58
 8003a60:	9805      	ldr	r0, [sp, #20]
 8003a62:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003a66:	f8cd 9058 	str.w	r9, [sp, #88]	@ 0x58
 8003a6a:	f008 f96d 	bl	800bd48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a6e:	9905      	ldr	r1, [sp, #20]
 8003a70:	4650      	mov	r0, sl
        alpha = newAlpha;
 8003a72:	f884 73f2 	strb.w	r7, [r4, #1010]	@ 0x3f2
 8003a76:	f006 fc3f 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tds.setPosition(181, 149, 120, 40);
 8003a7a:	2378      	movs	r3, #120	@ 0x78
 8003a7c:	2295      	movs	r2, #149	@ 0x95
 8003a7e:	21b5      	movs	r1, #181	@ 0xb5
 8003a80:	9806      	ldr	r0, [sp, #24]
 8003a82:	f8cd 8000 	str.w	r8, [sp]
 8003a86:	f7ff fe00 	bl	800368a <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003a8a:	9906      	ldr	r1, [sp, #24]
 8003a8c:	4628      	mov	r0, r5
        color = newColor;
 8003a8e:	f8c4 b434 	str.w	fp, [r4, #1076]	@ 0x434
        linespace = space;
 8003a92:	f8a4 6438 	strh.w	r6, [r4, #1080]	@ 0x438
        boundingArea = calculateBoundingArea();
 8003a96:	f007 feaf 	bl	800b7f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a9a:	f504 6388 	add.w	r3, r4, #1088	@ 0x440
 8003a9e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003aa2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003aa6:	2311      	movs	r3, #17
    tds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_44AS));
 8003aa8:	a916      	add	r1, sp, #88	@ 0x58
 8003aaa:	9806      	ldr	r0, [sp, #24]
 8003aac:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003ab0:	f8cd 9058 	str.w	r9, [sp, #88]	@ 0x58
 8003ab4:	f008 f948 	bl	800bd48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003ab8:	9906      	ldr	r1, [sp, #24]
 8003aba:	4650      	mov	r0, sl
        alpha = newAlpha;
 8003abc:	f884 743a 	strb.w	r7, [r4, #1082]	@ 0x43a
 8003ac0:	f006 fc1a 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    level.setPosition(331, 149, 120, 40);
 8003ac4:	2378      	movs	r3, #120	@ 0x78
 8003ac6:	2295      	movs	r2, #149	@ 0x95
 8003ac8:	f240 114b 	movw	r1, #331	@ 0x14b
 8003acc:	9807      	ldr	r0, [sp, #28]
 8003ace:	f8cd 8000 	str.w	r8, [sp]
 8003ad2:	f7ff fdda 	bl	800368a <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003ad6:	9907      	ldr	r1, [sp, #28]
 8003ad8:	4628      	mov	r0, r5
        color = newColor;
 8003ada:	f8c4 b47c 	str.w	fp, [r4, #1148]	@ 0x47c
        linespace = space;
 8003ade:	f8a4 6480 	strh.w	r6, [r4, #1152]	@ 0x480
        boundingArea = calculateBoundingArea();
 8003ae2:	f007 fe89 	bl	800b7f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003ae6:	f504 6391 	add.w	r3, r4, #1160	@ 0x488
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003aea:	f8df 804c 	ldr.w	r8, [pc, #76]	@ 8003b38 <_ZN14sensorViewBaseC1Ev+0x3b0>
 8003aee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003af2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003af6:	2310      	movs	r3, #16
    level.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1AZS));
 8003af8:	a916      	add	r1, sp, #88	@ 0x58
 8003afa:	9807      	ldr	r0, [sp, #28]
 8003afc:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003b00:	f8cd 9058 	str.w	r9, [sp, #88]	@ 0x58
 8003b04:	f008 f920 	bl	800bd48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003b08:	9907      	ldr	r1, [sp, #28]
 8003b0a:	4650      	mov	r0, sl
        alpha = newAlpha;
 8003b0c:	f884 7482 	strb.w	r7, [r4, #1154]	@ 0x482
 8003b10:	f006 fbf2 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_temperature.setPosition(140, 85, 50, 25);
 8003b14:	2319      	movs	r3, #25
 8003b16:	2255      	movs	r2, #85	@ 0x55
 8003b18:	218c      	movs	r1, #140	@ 0x8c
 8003b1a:	e00f      	b.n	8003b3c <_ZN14sensorViewBaseC1Ev+0x3b4>
 8003b1c:	08020b9c 	.word	0x08020b9c
 8003b20:	08020ffc 	.word	0x08020ffc
 8003b24:	080210d8 	.word	0x080210d8
 8003b28:	08020b84 	.word	0x08020b84
 8003b2c:	08003665 	.word	0x08003665
 8003b30:	08021064 	.word	0x08021064
 8003b34:	08020018 	.word	0x08020018
 8003b38:	200150fc 	.word	0x200150fc
 8003b3c:	9808      	ldr	r0, [sp, #32]
 8003b3e:	9300      	str	r3, [sp, #0]
 8003b40:	2332      	movs	r3, #50	@ 0x32
 8003b42:	f7ff fda2 	bl	800368a <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003b46:	f8d4 3494 	ldr.w	r3, [r4, #1172]	@ 0x494
 8003b4a:	9908      	ldr	r1, [sp, #32]
 8003b4c:	4628      	mov	r0, r5
 8003b4e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8003b52:	f8c4 b4c4 	str.w	fp, [r4, #1220]	@ 0x4c4
        linespace = space;
 8003b56:	f8a4 64c8 	strh.w	r6, [r4, #1224]	@ 0x4c8
        boundingArea = calculateBoundingArea();
 8003b5a:	4798      	blx	r3
 8003b5c:	f504 639a 	add.w	r3, r4, #1232	@ 0x4d0
 8003b60:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003b64:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    touchgfx::Unicode::snprintf(text_temperatureBuffer1, TEXT_TEMPERATUREBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7798).getText());
 8003b68:	f504 63cb 	add.w	r3, r4, #1624	@ 0x658
 8003b6c:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003b6e:	f8d8 3000 	ldr.w	r3, [r8]
 8003b72:	b92b      	cbnz	r3, 8003b80 <_ZN14sensorViewBaseC1Ev+0x3f8>
 8003b74:	4b06      	ldr	r3, [pc, #24]	@ (8003b90 <_ZN14sensorViewBaseC1Ev+0x408>)
 8003b76:	2160      	movs	r1, #96	@ 0x60
 8003b78:	4a06      	ldr	r2, [pc, #24]	@ (8003b94 <_ZN14sensorViewBaseC1Ev+0x40c>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003b7a:	4807      	ldr	r0, [pc, #28]	@ (8003b98 <_ZN14sensorViewBaseC1Ev+0x410>)
 8003b7c:	f01a fdda 	bl	801e734 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003b80:	4f06      	ldr	r7, [pc, #24]	@ (8003b9c <_ZN14sensorViewBaseC1Ev+0x414>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003b82:	883b      	ldrh	r3, [r7, #0]
 8003b84:	2b06      	cmp	r3, #6
 8003b86:	d80d      	bhi.n	8003ba4 <_ZN14sensorViewBaseC1Ev+0x41c>
 8003b88:	4b05      	ldr	r3, [pc, #20]	@ (8003ba0 <_ZN14sensorViewBaseC1Ev+0x418>)
 8003b8a:	2161      	movs	r1, #97	@ 0x61
 8003b8c:	4a01      	ldr	r2, [pc, #4]	@ (8003b94 <_ZN14sensorViewBaseC1Ev+0x40c>)
 8003b8e:	e7f4      	b.n	8003b7a <_ZN14sensorViewBaseC1Ev+0x3f2>
 8003b90:	08020670 	.word	0x08020670
 8003b94:	08020a9e 	.word	0x08020a9e
 8003b98:	080206ed 	.word	0x080206ed
 8003b9c:	20015100 	.word	0x20015100
 8003ba0:	08020a60 	.word	0x08020a60
        return texts->getText(typedTextId);
 8003ba4:	4bca      	ldr	r3, [pc, #808]	@ (8003ed0 <_ZN14sensorViewBaseC1Ev+0x748>)
 8003ba6:	2106      	movs	r1, #6
 8003ba8:	6818      	ldr	r0, [r3, #0]
 8003baa:	f7ff fac3 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 8003bae:	4ac9      	ldr	r2, [pc, #804]	@ (8003ed4 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003bb0:	4603      	mov	r3, r0
 8003bb2:	2103      	movs	r1, #3
 8003bb4:	9803      	ldr	r0, [sp, #12]
 8003bb6:	f00d f865 	bl	8010c84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003bba:	9a03      	ldr	r2, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003bbc:	f8d8 3000 	ldr.w	r3, [r8]
 8003bc0:	f8c4 24dc 	str.w	r2, [r4, #1244]	@ 0x4dc
    touchgfx::Unicode::snprintf(text_temperatureBuffer2, TEXT_TEMPERATUREBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IQT9).getText());
 8003bc4:	f204 625e 	addw	r2, r4, #1630	@ 0x65e
 8003bc8:	9203      	str	r2, [sp, #12]
 8003bca:	2b00      	cmp	r3, #0
 8003bcc:	d0d2      	beq.n	8003b74 <_ZN14sensorViewBaseC1Ev+0x3ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003bce:	883b      	ldrh	r3, [r7, #0]
 8003bd0:	2b07      	cmp	r3, #7
 8003bd2:	d9d9      	bls.n	8003b88 <_ZN14sensorViewBaseC1Ev+0x400>
        return texts->getText(typedTextId);
 8003bd4:	4bbe      	ldr	r3, [pc, #760]	@ (8003ed0 <_ZN14sensorViewBaseC1Ev+0x748>)
 8003bd6:	2107      	movs	r1, #7
 8003bd8:	6818      	ldr	r0, [r3, #0]
 8003bda:	f7ff faab 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 8003bde:	4abd      	ldr	r2, [pc, #756]	@ (8003ed4 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003be0:	4603      	mov	r3, r0
 8003be2:	2103      	movs	r1, #3
 8003be4:	9803      	ldr	r0, [sp, #12]
 8003be6:	f00d f84d 	bl	8010c84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc2 = value;
 8003bea:	9a03      	ldr	r2, [sp, #12]
        : typedTextId(id)
 8003bec:	2316      	movs	r3, #22
    text_temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MTPN));
 8003bee:	a916      	add	r1, sp, #88	@ 0x58
 8003bf0:	f8c4 24e0 	str.w	r2, [r4, #1248]	@ 0x4e0
 8003bf4:	9808      	ldr	r0, [sp, #32]
 8003bf6:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003bfa:	f8cd 9058 	str.w	r9, [sp, #88]	@ 0x58
 8003bfe:	f008 f8a3 	bl	800bd48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003c02:	9908      	ldr	r1, [sp, #32]
 8003c04:	4650      	mov	r0, sl
 8003c06:	f006 fb77 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_humidity.setPosition(290, 85, 50, 25);
 8003c0a:	2219      	movs	r2, #25
 8003c0c:	2332      	movs	r3, #50	@ 0x32
 8003c0e:	f44f 7191 	mov.w	r1, #290	@ 0x122
 8003c12:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003c14:	9200      	str	r2, [sp, #0]
 8003c16:	2255      	movs	r2, #85	@ 0x55
 8003c18:	f7ff fd37 	bl	800368a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003c1c:	f8d4 34e4 	ldr.w	r3, [r4, #1252]	@ 0x4e4
 8003c20:	4628      	mov	r0, r5
 8003c22:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003c24:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8003c28:	f8c4 b514 	str.w	fp, [r4, #1300]	@ 0x514
        linespace = space;
 8003c2c:	f8a4 6518 	strh.w	r6, [r4, #1304]	@ 0x518
        boundingArea = calculateBoundingArea();
 8003c30:	4798      	blx	r3
 8003c32:	f504 63a4 	add.w	r3, r4, #1312	@ 0x520
 8003c36:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003c3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c3e:	f8d8 3000 	ldr.w	r3, [r8]
    touchgfx::Unicode::snprintf(text_humidityBuffer1, TEXT_HUMIDITYBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_F69V).getText());
 8003c42:	f204 6564 	addw	r5, r4, #1636	@ 0x664
 8003c46:	2b00      	cmp	r3, #0
 8003c48:	d094      	beq.n	8003b74 <_ZN14sensorViewBaseC1Ev+0x3ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003c4a:	883b      	ldrh	r3, [r7, #0]
 8003c4c:	2b05      	cmp	r3, #5
 8003c4e:	d99b      	bls.n	8003b88 <_ZN14sensorViewBaseC1Ev+0x400>
        return texts->getText(typedTextId);
 8003c50:	4b9f      	ldr	r3, [pc, #636]	@ (8003ed0 <_ZN14sensorViewBaseC1Ev+0x748>)
 8003c52:	2105      	movs	r1, #5
 8003c54:	6818      	ldr	r0, [r3, #0]
 8003c56:	f7ff fa6d 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 8003c5a:	4a9e      	ldr	r2, [pc, #632]	@ (8003ed4 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003c5c:	4603      	mov	r3, r0
 8003c5e:	2103      	movs	r1, #3
 8003c60:	4628      	mov	r0, r5
 8003c62:	f00d f80f 	bl	8010c84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c66:	f8d8 3000 	ldr.w	r3, [r8]
        wc1 = value;
 8003c6a:	f8c4 552c 	str.w	r5, [r4, #1324]	@ 0x52c
    touchgfx::Unicode::snprintf(text_humidityBuffer2, TEXT_HUMIDITYBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_W9Z7).getText());
 8003c6e:	f204 656a 	addw	r5, r4, #1642	@ 0x66a
 8003c72:	2b00      	cmp	r3, #0
 8003c74:	f43f af7e 	beq.w	8003b74 <_ZN14sensorViewBaseC1Ev+0x3ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003c78:	883b      	ldrh	r3, [r7, #0]
 8003c7a:	2b0e      	cmp	r3, #14
 8003c7c:	d984      	bls.n	8003b88 <_ZN14sensorViewBaseC1Ev+0x400>
        return texts->getText(typedTextId);
 8003c7e:	4b94      	ldr	r3, [pc, #592]	@ (8003ed0 <_ZN14sensorViewBaseC1Ev+0x748>)
 8003c80:	210e      	movs	r1, #14
 8003c82:	6818      	ldr	r0, [r3, #0]
 8003c84:	f7ff fa56 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 8003c88:	4a92      	ldr	r2, [pc, #584]	@ (8003ed4 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003c8a:	4603      	mov	r3, r0
 8003c8c:	2103      	movs	r1, #3
 8003c8e:	4628      	mov	r0, r5
 8003c90:	f00c fff8 	bl	8010c84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003c94:	230f      	movs	r3, #15
    text_humidity.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D9RX));
 8003c96:	a916      	add	r1, sp, #88	@ 0x58
 8003c98:	9809      	ldr	r0, [sp, #36]	@ 0x24
        wc2 = value;
 8003c9a:	f8c4 5530 	str.w	r5, [r4, #1328]	@ 0x530
    touchgfx::Unicode::snprintf(text_phBuffer1, TEXT_PHBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LXQ5).getText());
 8003c9e:	f504 65ce 	add.w	r5, r4, #1648	@ 0x670
 8003ca2:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003ca6:	f8cd 9058 	str.w	r9, [sp, #88]	@ 0x58
    text_humidity.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D9RX));
 8003caa:	f008 f84d 	bl	800bd48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003cae:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003cb0:	4650      	mov	r0, sl
 8003cb2:	f006 fb21 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_ph.setPosition(65, 215, 50, 25);
 8003cb6:	2319      	movs	r3, #25
 8003cb8:	22d7      	movs	r2, #215	@ 0xd7
 8003cba:	2141      	movs	r1, #65	@ 0x41
 8003cbc:	9300      	str	r3, [sp, #0]
 8003cbe:	2332      	movs	r3, #50	@ 0x32
 8003cc0:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8003cc2:	f7ff fce2 	bl	800368a <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003cc6:	f8d8 3000 	ldr.w	r3, [r8]
        color = newColor;
 8003cca:	f8c4 b564 	str.w	fp, [r4, #1380]	@ 0x564
        linespace = space;
 8003cce:	f8a4 6568 	strh.w	r6, [r4, #1384]	@ 0x568
        boundingArea = calculateBoundingArea();
 8003cd2:	f8c4 6570 	str.w	r6, [r4, #1392]	@ 0x570
 8003cd6:	f8c4 b574 	str.w	fp, [r4, #1396]	@ 0x574
 8003cda:	f8c4 6578 	str.w	r6, [r4, #1400]	@ 0x578
 8003cde:	2b00      	cmp	r3, #0
 8003ce0:	f43f af48 	beq.w	8003b74 <_ZN14sensorViewBaseC1Ev+0x3ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ce4:	883b      	ldrh	r3, [r7, #0]
 8003ce6:	2b04      	cmp	r3, #4
 8003ce8:	f67f af4e 	bls.w	8003b88 <_ZN14sensorViewBaseC1Ev+0x400>
        return texts->getText(typedTextId);
 8003cec:	f8df 81e0 	ldr.w	r8, [pc, #480]	@ 8003ed0 <_ZN14sensorViewBaseC1Ev+0x748>
 8003cf0:	2104      	movs	r1, #4
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003cf2:	4f79      	ldr	r7, [pc, #484]	@ (8003ed8 <_ZN14sensorViewBaseC1Ev+0x750>)
        return texts->getText(typedTextId);
 8003cf4:	f8d8 0000 	ldr.w	r0, [r8]
 8003cf8:	f7ff fa1c 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
    touchgfx::Unicode::snprintf(text_phBuffer1, TEXT_PHBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LXQ5).getText());
 8003cfc:	4a75      	ldr	r2, [pc, #468]	@ (8003ed4 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003cfe:	4603      	mov	r3, r0
 8003d00:	2103      	movs	r1, #3
 8003d02:	4628      	mov	r0, r5
 8003d04:	f00c ffbe 	bl	8010c84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d08:	683b      	ldr	r3, [r7, #0]
        wc1 = value;
 8003d0a:	f8c4 557c 	str.w	r5, [r4, #1404]	@ 0x57c
    touchgfx::Unicode::snprintf(text_phBuffer2, TEXT_PHBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0F5D).getText());
 8003d0e:	f204 6576 	addw	r5, r4, #1654	@ 0x676
 8003d12:	2b00      	cmp	r3, #0
 8003d14:	f43f af2e 	beq.w	8003b74 <_ZN14sensorViewBaseC1Ev+0x3ec>
        return typedTextId < numberOfTypedTexts;
 8003d18:	4e70      	ldr	r6, [pc, #448]	@ (8003edc <_ZN14sensorViewBaseC1Ev+0x754>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d1a:	8833      	ldrh	r3, [r6, #0]
 8003d1c:	2b0c      	cmp	r3, #12
 8003d1e:	f67f af33 	bls.w	8003b88 <_ZN14sensorViewBaseC1Ev+0x400>
        return texts->getText(typedTextId);
 8003d22:	210c      	movs	r1, #12
 8003d24:	f8d8 0000 	ldr.w	r0, [r8]
 8003d28:	f7ff fa04 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 8003d2c:	4a69      	ldr	r2, [pc, #420]	@ (8003ed4 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003d2e:	4603      	mov	r3, r0
 8003d30:	2103      	movs	r1, #3
 8003d32:	4628      	mov	r0, r5
        color = newColor;
 8003d34:	f04f 39ff 	mov.w	r9, #4294967295
 8003d38:	f00c ffa4 	bl	8010c84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003d3c:	4b68      	ldr	r3, [pc, #416]	@ (8003ee0 <_ZN14sensorViewBaseC1Ev+0x758>)
    text_ph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WQQ5));
 8003d3e:	a916      	add	r1, sp, #88	@ 0x58
 8003d40:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8003d42:	9316      	str	r3, [sp, #88]	@ 0x58
 8003d44:	230d      	movs	r3, #13
        wc2 = value;
 8003d46:	f8c4 5580 	str.w	r5, [r4, #1408]	@ 0x580
        linespace = space;
 8003d4a:	2500      	movs	r5, #0
 8003d4c:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003d50:	f007 fffa 	bl	800bd48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003d54:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003d56:	4650      	mov	r0, sl
 8003d58:	f006 face 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_tds.setPosition(215, 215, 50, 25);
 8003d5c:	2219      	movs	r2, #25
 8003d5e:	2332      	movs	r3, #50	@ 0x32
 8003d60:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8003d62:	9200      	str	r2, [sp, #0]
 8003d64:	22d7      	movs	r2, #215	@ 0xd7
    touchgfx::Unicode::snprintf(text_tdsBuffer1, TEXT_TDSBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PYMH).getText());
 8003d66:	f204 6b7c 	addw	fp, r4, #1660	@ 0x67c
    text_tds.setPosition(215, 215, 50, 25);
 8003d6a:	4611      	mov	r1, r2
 8003d6c:	f7ff fc8d 	bl	800368a <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d70:	683b      	ldr	r3, [r7, #0]
        color = newColor;
 8003d72:	f8c4 95b4 	str.w	r9, [r4, #1460]	@ 0x5b4
        linespace = space;
 8003d76:	f8a4 55b8 	strh.w	r5, [r4, #1464]	@ 0x5b8
        boundingArea = calculateBoundingArea();
 8003d7a:	f8c4 55c0 	str.w	r5, [r4, #1472]	@ 0x5c0
 8003d7e:	f8c4 95c4 	str.w	r9, [r4, #1476]	@ 0x5c4
 8003d82:	f8c4 55c8 	str.w	r5, [r4, #1480]	@ 0x5c8
 8003d86:	2b00      	cmp	r3, #0
 8003d88:	f43f aef4 	beq.w	8003b74 <_ZN14sensorViewBaseC1Ev+0x3ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d8c:	8833      	ldrh	r3, [r6, #0]
 8003d8e:	2b03      	cmp	r3, #3
 8003d90:	f67f aefa 	bls.w	8003b88 <_ZN14sensorViewBaseC1Ev+0x400>
        return texts->getText(typedTextId);
 8003d94:	2103      	movs	r1, #3
 8003d96:	f8d8 0000 	ldr.w	r0, [r8]
 8003d9a:	f7ff f9cb 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
    touchgfx::Unicode::snprintf(text_tdsBuffer1, TEXT_TDSBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PYMH).getText());
 8003d9e:	4a4d      	ldr	r2, [pc, #308]	@ (8003ed4 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003da0:	4603      	mov	r3, r0
 8003da2:	2103      	movs	r1, #3
 8003da4:	4658      	mov	r0, fp
 8003da6:	f00c ff6d 	bl	8010c84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003daa:	683b      	ldr	r3, [r7, #0]
        wc1 = value;
 8003dac:	f8c4 b5cc 	str.w	fp, [r4, #1484]	@ 0x5cc
    touchgfx::Unicode::snprintf(text_tdsBuffer2, TEXT_TDSBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_K2TB).getText());
 8003db0:	f204 6b82 	addw	fp, r4, #1666	@ 0x682
 8003db4:	2b00      	cmp	r3, #0
 8003db6:	f43f aedd 	beq.w	8003b74 <_ZN14sensorViewBaseC1Ev+0x3ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003dba:	8833      	ldrh	r3, [r6, #0]
 8003dbc:	2b0a      	cmp	r3, #10
 8003dbe:	f67f aee3 	bls.w	8003b88 <_ZN14sensorViewBaseC1Ev+0x400>
        return texts->getText(typedTextId);
 8003dc2:	210a      	movs	r1, #10
 8003dc4:	f8d8 0000 	ldr.w	r0, [r8]
 8003dc8:	f7ff f9b4 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 8003dcc:	4a41      	ldr	r2, [pc, #260]	@ (8003ed4 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003dce:	4603      	mov	r3, r0
 8003dd0:	2103      	movs	r1, #3
 8003dd2:	4658      	mov	r0, fp
 8003dd4:	f00c ff56 	bl	8010c84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003dd8:	4b41      	ldr	r3, [pc, #260]	@ (8003ee0 <_ZN14sensorViewBaseC1Ev+0x758>)
    text_tds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EHW8));
 8003dda:	a916      	add	r1, sp, #88	@ 0x58
 8003ddc:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8003dde:	9316      	str	r3, [sp, #88]	@ 0x58
 8003de0:	230b      	movs	r3, #11
        wc2 = value;
 8003de2:	f8c4 b5d0 	str.w	fp, [r4, #1488]	@ 0x5d0
 8003de6:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003dea:	f007 ffad 	bl	800bd48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003dee:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8003df0:	4650      	mov	r0, sl
 8003df2:	f006 fa81 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_level.setPosition(366, 215, 50, 25);
 8003df6:	2319      	movs	r3, #25
 8003df8:	22d7      	movs	r2, #215	@ 0xd7
 8003dfa:	f44f 71b7 	mov.w	r1, #366	@ 0x16e
 8003dfe:	9300      	str	r3, [sp, #0]
 8003e00:	2332      	movs	r3, #50	@ 0x32
 8003e02:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8003e04:	f7ff fc41 	bl	800368a <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e08:	683b      	ldr	r3, [r7, #0]
        linespace = space;
 8003e0a:	f8a4 5608 	strh.w	r5, [r4, #1544]	@ 0x608
        boundingArea = calculateBoundingArea();
 8003e0e:	f8c4 5610 	str.w	r5, [r4, #1552]	@ 0x610
 8003e12:	f8c4 5618 	str.w	r5, [r4, #1560]	@ 0x618
    touchgfx::Unicode::snprintf(text_levelBuffer1, TEXT_LEVELBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Z25Q).getText());
 8003e16:	f504 65d1 	add.w	r5, r4, #1672	@ 0x688
        color = newColor;
 8003e1a:	f8c4 9604 	str.w	r9, [r4, #1540]	@ 0x604
        boundingArea = calculateBoundingArea();
 8003e1e:	f8c4 9614 	str.w	r9, [r4, #1556]	@ 0x614
 8003e22:	2b00      	cmp	r3, #0
 8003e24:	f43f aea6 	beq.w	8003b74 <_ZN14sensorViewBaseC1Ev+0x3ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e28:	8833      	ldrh	r3, [r6, #0]
 8003e2a:	2b02      	cmp	r3, #2
 8003e2c:	f67f aeac 	bls.w	8003b88 <_ZN14sensorViewBaseC1Ev+0x400>
        return texts->getText(typedTextId);
 8003e30:	2102      	movs	r1, #2
 8003e32:	f8d8 0000 	ldr.w	r0, [r8]
 8003e36:	f7ff f97d 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 8003e3a:	4a26      	ldr	r2, [pc, #152]	@ (8003ed4 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003e3c:	4603      	mov	r3, r0
 8003e3e:	2103      	movs	r1, #3
 8003e40:	4628      	mov	r0, r5
 8003e42:	f00c ff1f 	bl	8010c84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e46:	683b      	ldr	r3, [r7, #0]
        wc1 = value;
 8003e48:	f8c4 561c 	str.w	r5, [r4, #1564]	@ 0x61c
    touchgfx::Unicode::snprintf(text_levelBuffer2, TEXT_LEVELBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7RKY).getText());
 8003e4c:	f204 658e 	addw	r5, r4, #1678	@ 0x68e
 8003e50:	2b00      	cmp	r3, #0
 8003e52:	f43f ae8f 	beq.w	8003b74 <_ZN14sensorViewBaseC1Ev+0x3ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e56:	8833      	ldrh	r3, [r6, #0]
 8003e58:	2b08      	cmp	r3, #8
 8003e5a:	f67f ae95 	bls.w	8003b88 <_ZN14sensorViewBaseC1Ev+0x400>
        return texts->getText(typedTextId);
 8003e5e:	2108      	movs	r1, #8
 8003e60:	f8d8 0000 	ldr.w	r0, [r8]
 8003e64:	f7ff f966 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 8003e68:	4a1a      	ldr	r2, [pc, #104]	@ (8003ed4 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003e6a:	4603      	mov	r3, r0
 8003e6c:	2103      	movs	r1, #3
 8003e6e:	4628      	mov	r0, r5
 8003e70:	f00c ff08 	bl	8010c84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003e74:	4b1a      	ldr	r3, [pc, #104]	@ (8003ee0 <_ZN14sensorViewBaseC1Ev+0x758>)
    text_level.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I690));
 8003e76:	a916      	add	r1, sp, #88	@ 0x58
 8003e78:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8003e7a:	9316      	str	r3, [sp, #88]	@ 0x58
 8003e7c:	2309      	movs	r3, #9
        wc2 = value;
 8003e7e:	f8c4 5620 	str.w	r5, [r4, #1568]	@ 0x620
 8003e82:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003e86:	f007 ff5f 	bl	800bd48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e8a:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8003e8c:	4650      	mov	r0, sl
 8003e8e:	f006 fa33 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    back_main_btn.setXY(425, 5);
 8003e92:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003e94:	2205      	movs	r2, #5
 8003e96:	f240 11a9 	movw	r1, #425	@ 0x1a9
 8003e9a:	f7fe f994 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
 8003e9e:	2301      	movs	r3, #1
    back_main_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BACK50_ID), touchgfx::Bitmap(BITMAP_BACK50_ID));
 8003ea0:	aa16      	add	r2, sp, #88	@ 0x58
 8003ea2:	a915      	add	r1, sp, #84	@ 0x54
 8003ea4:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003ea6:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8003eaa:	f8ad 3058 	strh.w	r3, [sp, #88]	@ 0x58
 8003eae:	f007 ffa9 	bl	800be04 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        alpha = newAlpha;
 8003eb2:	2396      	movs	r3, #150	@ 0x96
 8003eb4:	4650      	mov	r0, sl
 8003eb6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003eb8:	f884 3656 	strb.w	r3, [r4, #1622]	@ 0x656
    back_main_btn.setAction(buttonCallback);
 8003ebc:	f204 6394 	addw	r3, r4, #1684	@ 0x694
        action = &callback;
 8003ec0:	f8c4 364c 	str.w	r3, [r4, #1612]	@ 0x64c
 8003ec4:	f006 fa18 	bl	800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003ec8:	4620      	mov	r0, r4
 8003eca:	b019      	add	sp, #100	@ 0x64
 8003ecc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ed0:	20015108 	.word	0x20015108
 8003ed4:	08020ae9 	.word	0x08020ae9
 8003ed8:	200150fc 	.word	0x200150fc
 8003edc:	20015100 	.word	0x20015100
 8003ee0:	08020018 	.word	0x08020018

08003ee4 <_ZN16CustomContainer1C1Ev>:
#include <gui/containers/CustomContainer1.hpp>

CustomContainer1::CustomContainer1()
 8003ee4:	b510      	push	{r4, lr}
 8003ee6:	4604      	mov	r4, r0
 8003ee8:	f7fe f996 	bl	8002218 <_ZN20CustomContainer1BaseC1Ev>
 8003eec:	4b01      	ldr	r3, [pc, #4]	@ (8003ef4 <_ZN16CustomContainer1C1Ev+0x10>)
{

}
 8003eee:	4620      	mov	r0, r4
CustomContainer1::CustomContainer1()
 8003ef0:	6023      	str	r3, [r4, #0]
}
 8003ef2:	bd10      	pop	{r4, pc}
 8003ef4:	08020bd0 	.word	0x08020bd0

08003ef8 <_ZN16CustomContainer110initializeEv>:

void CustomContainer1::initialize()
{
    CustomContainer1Base::initialize();
 8003ef8:	f7fe b94e 	b.w	8002198 <_ZN20CustomContainer1Base10initializeEv>

08003efc <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003efc:	4770      	bx	lr

08003efe <_ZN19FrontendApplicationD0Ev>:
 8003efe:	b510      	push	{r4, lr}
 8003f00:	4604      	mov	r4, r0
 8003f02:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003f06:	f01a fbe7 	bl	801e6d8 <_ZdlPvj>
 8003f0a:	4620      	mov	r0, r4
 8003f0c:	bd10      	pop	{r4, pc}

08003f0e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003f0e:	b510      	push	{r4, lr}
 8003f10:	4604      	mov	r4, r0
    {
        model.tick();
 8003f12:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8003f16:	f000 f864 	bl	8003fe2 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003f1a:	4620      	mov	r0, r4
    }
 8003f1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003f20:	f009 bf7c 	b.w	800de1c <_ZN8touchgfx11Application15handleTickEventEv>

08003f24 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003f24:	b510      	push	{r4, lr}
 8003f26:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003f28:	f7fe fa4e 	bl	80023c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003f2c:	4b01      	ldr	r3, [pc, #4]	@ (8003f34 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8003f2e:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 8003f30:	6023      	str	r3, [r4, #0]
}
 8003f32:	bd10      	pop	{r4, pc}
 8003f34:	08020c64 	.word	0x08020c64

08003f38 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 8003f38:	4770      	bx	lr

08003f3a <_ZThn4_N13MainPresenterD1Ev>:
 8003f3a:	3804      	subs	r0, #4
 8003f3c:	4770      	bx	lr

08003f3e <_ZN13MainPresenter10deactivateEv>:
}

void MainPresenter::activate()
{

}
 8003f3e:	4770      	bx	lr

08003f40 <_ZN13MainPresenterD0Ev>:
 8003f40:	b510      	push	{r4, lr}
 8003f42:	4604      	mov	r4, r0
 8003f44:	2110      	movs	r1, #16
 8003f46:	f01a fbc7 	bl	801e6d8 <_ZdlPvj>
 8003f4a:	4620      	mov	r0, r4
 8003f4c:	bd10      	pop	{r4, pc}

08003f4e <_ZThn4_N13MainPresenterD0Ev>:
 8003f4e:	f1a0 0004 	sub.w	r0, r0, #4
 8003f52:	e7f5      	b.n	8003f40 <_ZN13MainPresenterD0Ev>

08003f54 <_ZN13MainPresenter9con_sh_bcEv>:

}

void MainPresenter::con_sh_bc()
{
	model->push_button();
 8003f54:	6880      	ldr	r0, [r0, #8]
 8003f56:	f000 b845 	b.w	8003fe4 <_ZN5Model11push_buttonEv>
	...

08003f5c <_ZN13MainPresenterC1ER8MainView>:
    ModelListener() : model(0) {}
 8003f5c:	2200      	movs	r2, #0
    : view(v)
 8003f5e:	60c1      	str	r1, [r0, #12]
 8003f60:	6082      	str	r2, [r0, #8]
 8003f62:	4a02      	ldr	r2, [pc, #8]	@ (8003f6c <_ZN13MainPresenterC1ER8MainView+0x10>)
 8003f64:	6002      	str	r2, [r0, #0]
 8003f66:	3220      	adds	r2, #32
 8003f68:	6042      	str	r2, [r0, #4]
}
 8003f6a:	4770      	bx	lr
 8003f6c:	08020cb8 	.word	0x08020cb8

08003f70 <_ZN8MainView14tearDownScreenEv>:
}

void MainView::tearDownScreen()
{
    MainViewBase::tearDownScreen();
}
 8003f70:	4770      	bx	lr

08003f72 <_ZN8MainView15handleTickEventEv>:

void MainView::handleTickEvent()
{
    tickCounter++;
 8003f72:	f8d0 31b4 	ldr.w	r3, [r0, #436]	@ 0x1b4
 8003f76:	3301      	adds	r3, #1
 8003f78:	f8c0 31b4 	str.w	r3, [r0, #436]	@ 0x1b4
    presenter->tick();
 8003f7c:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8003f7e:	6803      	ldr	r3, [r0, #0]
 8003f80:	691b      	ldr	r3, [r3, #16]
 8003f82:	4718      	bx	r3

08003f84 <_ZN8MainView18sliderValueChangedEi>:
}

void MainView::sliderValueChanged(int value)
{

}
 8003f84:	4770      	bx	lr

08003f86 <_ZN8MainView10send_helloEv>:

void MainView::send_hello()
{
	presenter->con_sh_bc();
 8003f86:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8003f88:	6803      	ldr	r3, [r0, #0]
 8003f8a:	695b      	ldr	r3, [r3, #20]
 8003f8c:	4718      	bx	r3
	...

08003f90 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    virtual ~MainView() {}
 8003f90:	4b03      	ldr	r3, [pc, #12]	@ (8003fa0 <_ZN8MainViewD1Ev+0x10>)
 8003f92:	b510      	push	{r4, lr}
 8003f94:	4604      	mov	r4, r0
 8003f96:	6003      	str	r3, [r0, #0]
 8003f98:	f7fe fd81 	bl	8002a9e <_ZN12MainViewBaseD1Ev>
 8003f9c:	4620      	mov	r0, r4
 8003f9e:	bd10      	pop	{r4, pc}
 8003fa0:	08020ce8 	.word	0x08020ce8

08003fa4 <_ZN8MainViewD0Ev>:
 8003fa4:	b510      	push	{r4, lr}
 8003fa6:	4604      	mov	r4, r0
 8003fa8:	f7ff fff2 	bl	8003f90 <_ZN8MainViewD1Ev>
 8003fac:	f44f 71dc 	mov.w	r1, #440	@ 0x1b8
 8003fb0:	4620      	mov	r0, r4
 8003fb2:	f01a fb91 	bl	801e6d8 <_ZdlPvj>
 8003fb6:	4620      	mov	r0, r4
 8003fb8:	bd10      	pop	{r4, pc}
	...

08003fbc <_ZN8MainViewC1Ev>:
MainView::MainView()
 8003fbc:	b510      	push	{r4, lr}
 8003fbe:	4604      	mov	r4, r0
 8003fc0:	f7fe fe0c 	bl	8002bdc <_ZN12MainViewBaseC1Ev>
 8003fc4:	4b03      	ldr	r3, [pc, #12]	@ (8003fd4 <_ZN8MainViewC1Ev+0x18>)
}
 8003fc6:	4620      	mov	r0, r4
MainView::MainView()
 8003fc8:	6023      	str	r3, [r4, #0]
    tickCounter = 0;
 8003fca:	2300      	movs	r3, #0
 8003fcc:	f8c4 31b4 	str.w	r3, [r4, #436]	@ 0x1b4
}
 8003fd0:	bd10      	pop	{r4, pc}
 8003fd2:	bf00      	nop
 8003fd4:	08020ce8 	.word	0x08020ce8

08003fd8 <_ZN8MainView11setupScreenEv>:
    MainViewBase::setupScreen();
 8003fd8:	f7fe bd62 	b.w	8002aa0 <_ZN12MainViewBase11setupScreenEv>

08003fdc <_ZN5ModelC1Ev>:
#include <gui/model/ModelListener.hpp>
#include "bluetoothinterface.h"

extern void push_bt_button(void);

Model::Model() : modelListener(0)
 8003fdc:	2200      	movs	r2, #0
 8003fde:	6002      	str	r2, [r0, #0]
{

}
 8003fe0:	4770      	bx	lr

08003fe2 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003fe2:	4770      	bx	lr

08003fe4 <_ZN5Model11push_buttonEv>:

void Model::push_button()
{
	push_bt_button();
 8003fe4:	f7fc be12 	b.w	8000c0c <_Z14push_bt_buttonv>

08003fe8 <_ZN15configPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~configPresenter() {}
 8003fe8:	4770      	bx	lr

08003fea <_ZThn4_N15configPresenterD1Ev>:
 8003fea:	3804      	subs	r0, #4
 8003fec:	4770      	bx	lr

08003fee <_ZN15configPresenter10deactivateEv>:
}

void configPresenter::activate()
{

}
 8003fee:	4770      	bx	lr

08003ff0 <_ZN15configPresenterD0Ev>:
 8003ff0:	b510      	push	{r4, lr}
 8003ff2:	4604      	mov	r4, r0
 8003ff4:	2110      	movs	r1, #16
 8003ff6:	f01a fb6f 	bl	801e6d8 <_ZdlPvj>
 8003ffa:	4620      	mov	r0, r4
 8003ffc:	bd10      	pop	{r4, pc}

08003ffe <_ZThn4_N15configPresenterD0Ev>:
 8003ffe:	f1a0 0004 	sub.w	r0, r0, #4
 8004002:	e7f5      	b.n	8003ff0 <_ZN15configPresenterD0Ev>

08004004 <_ZN15configPresenterC1ER10configView>:
 8004004:	2200      	movs	r2, #0
    : view(v)
 8004006:	60c1      	str	r1, [r0, #12]
 8004008:	6082      	str	r2, [r0, #8]
 800400a:	4a02      	ldr	r2, [pc, #8]	@ (8004014 <_ZN15configPresenterC1ER10configView+0x10>)
 800400c:	6002      	str	r2, [r0, #0]
 800400e:	3218      	adds	r2, #24
 8004010:	6042      	str	r2, [r0, #4]
}
 8004012:	4770      	bx	lr
 8004014:	08020d24 	.word	0x08020d24

08004018 <_ZN10configView14tearDownScreenEv>:
}

void configView::tearDownScreen()
{
    configViewBase::tearDownScreen();
}
 8004018:	4770      	bx	lr
	...

0800401c <_ZN10configViewD1Ev>:

class configView : public configViewBase
{
public:
    configView();
    virtual ~configView() {}
 800401c:	4b03      	ldr	r3, [pc, #12]	@ (800402c <_ZN10configViewD1Ev+0x10>)
 800401e:	b510      	push	{r4, lr}
 8004020:	4604      	mov	r4, r0
 8004022:	6003      	str	r3, [r0, #0]
 8004024:	f7ff f8a8 	bl	8003178 <_ZN14configViewBaseD1Ev>
 8004028:	4620      	mov	r0, r4
 800402a:	bd10      	pop	{r4, pc}
 800402c:	08020d4c 	.word	0x08020d4c

08004030 <_ZN10configViewD0Ev>:
 8004030:	b510      	push	{r4, lr}
 8004032:	4604      	mov	r4, r0
 8004034:	f7ff fff2 	bl	800401c <_ZN10configViewD1Ev>
 8004038:	21dc      	movs	r1, #220	@ 0xdc
 800403a:	4620      	mov	r0, r4
 800403c:	f01a fb4c 	bl	801e6d8 <_ZdlPvj>
 8004040:	4620      	mov	r0, r4
 8004042:	bd10      	pop	{r4, pc}

08004044 <_ZN10configViewC1Ev>:
configView::configView()
 8004044:	b510      	push	{r4, lr}
 8004046:	4604      	mov	r4, r0
 8004048:	f7ff f8cc 	bl	80031e4 <_ZN14configViewBaseC1Ev>
 800404c:	4b01      	ldr	r3, [pc, #4]	@ (8004054 <_ZN10configViewC1Ev+0x10>)
}
 800404e:	4620      	mov	r0, r4
configView::configView()
 8004050:	6023      	str	r3, [r4, #0]
}
 8004052:	bd10      	pop	{r4, pc}
 8004054:	08020d4c 	.word	0x08020d4c

08004058 <_ZN10configView11setupScreenEv>:
    configViewBase::setupScreen();
 8004058:	f7ff b88f 	b.w	800317a <_ZN14configViewBase11setupScreenEv>

0800405c <_ZN14motorPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~motorPresenter() {}
 800405c:	4770      	bx	lr

0800405e <_ZThn4_N14motorPresenterD1Ev>:
 800405e:	3804      	subs	r0, #4
 8004060:	4770      	bx	lr

08004062 <_ZN14motorPresenter10deactivateEv>:
}

void motorPresenter::activate()
{

}
 8004062:	4770      	bx	lr

08004064 <_ZN14motorPresenterD0Ev>:
 8004064:	b510      	push	{r4, lr}
 8004066:	4604      	mov	r4, r0
 8004068:	2110      	movs	r1, #16
 800406a:	f01a fb35 	bl	801e6d8 <_ZdlPvj>
 800406e:	4620      	mov	r0, r4
 8004070:	bd10      	pop	{r4, pc}

08004072 <_ZThn4_N14motorPresenterD0Ev>:
 8004072:	f1a0 0004 	sub.w	r0, r0, #4
 8004076:	e7f5      	b.n	8004064 <_ZN14motorPresenterD0Ev>

08004078 <_ZN14motorPresenterC1ER9motorView>:
 8004078:	2200      	movs	r2, #0
    : view(v)
 800407a:	60c1      	str	r1, [r0, #12]
 800407c:	6082      	str	r2, [r0, #8]
 800407e:	4a02      	ldr	r2, [pc, #8]	@ (8004088 <_ZN14motorPresenterC1ER9motorView+0x10>)
 8004080:	6002      	str	r2, [r0, #0]
 8004082:	3218      	adds	r2, #24
 8004084:	6042      	str	r2, [r0, #4]
}
 8004086:	4770      	bx	lr
 8004088:	08020d80 	.word	0x08020d80

0800408c <_ZN9motorView14tearDownScreenEv>:
}

void motorView::tearDownScreen()
{
    motorViewBase::tearDownScreen();
}
 800408c:	4770      	bx	lr
	...

08004090 <_ZN9motorViewD1Ev>:

class motorView : public motorViewBase
{
public:
    motorView();
    virtual ~motorView() {}
 8004090:	4b03      	ldr	r3, [pc, #12]	@ (80040a0 <_ZN9motorViewD1Ev+0x10>)
 8004092:	b510      	push	{r4, lr}
 8004094:	4604      	mov	r4, r0
 8004096:	6003      	str	r3, [r0, #0]
 8004098:	f7ff f94c 	bl	8003334 <_ZN13motorViewBaseD1Ev>
 800409c:	4620      	mov	r0, r4
 800409e:	bd10      	pop	{r4, pc}
 80040a0:	08020da8 	.word	0x08020da8

080040a4 <_ZN9motorViewD0Ev>:
 80040a4:	b510      	push	{r4, lr}
 80040a6:	4604      	mov	r4, r0
 80040a8:	f7ff fff2 	bl	8004090 <_ZN9motorViewD1Ev>
 80040ac:	21dc      	movs	r1, #220	@ 0xdc
 80040ae:	4620      	mov	r0, r4
 80040b0:	f01a fb12 	bl	801e6d8 <_ZdlPvj>
 80040b4:	4620      	mov	r0, r4
 80040b6:	bd10      	pop	{r4, pc}

080040b8 <_ZN9motorViewC1Ev>:
motorView::motorView()
 80040b8:	b510      	push	{r4, lr}
 80040ba:	4604      	mov	r4, r0
 80040bc:	f7ff f970 	bl	80033a0 <_ZN13motorViewBaseC1Ev>
 80040c0:	4b01      	ldr	r3, [pc, #4]	@ (80040c8 <_ZN9motorViewC1Ev+0x10>)
}
 80040c2:	4620      	mov	r0, r4
motorView::motorView()
 80040c4:	6023      	str	r3, [r4, #0]
}
 80040c6:	bd10      	pop	{r4, pc}
 80040c8:	08020da8 	.word	0x08020da8

080040cc <_ZN9motorView11setupScreenEv>:
    motorViewBase::setupScreen();
 80040cc:	f7ff b933 	b.w	8003336 <_ZN13motorViewBase11setupScreenEv>

080040d0 <_ZN15sensorPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();
    virtual void tick();
    virtual ~sensorPresenter() {}
 80040d0:	4770      	bx	lr

080040d2 <_ZThn4_N15sensorPresenterD1Ev>:
 80040d2:	3804      	subs	r0, #4
 80040d4:	4770      	bx	lr

080040d6 <_ZN15sensorPresenter10deactivateEv>:
}

void sensorPresenter::activate()
{

}
 80040d6:	4770      	bx	lr

080040d8 <_ZN15sensorPresenterD0Ev>:
 80040d8:	b510      	push	{r4, lr}
 80040da:	4604      	mov	r4, r0
 80040dc:	2110      	movs	r1, #16
 80040de:	f01a fafb 	bl	801e6d8 <_ZdlPvj>
 80040e2:	4620      	mov	r0, r4
 80040e4:	bd10      	pop	{r4, pc}

080040e6 <_ZThn4_N15sensorPresenterD0Ev>:
 80040e6:	f1a0 0004 	sub.w	r0, r0, #4
 80040ea:	e7f5      	b.n	80040d8 <_ZN15sensorPresenterD0Ev>

080040ec <_ZN15sensorPresenter4tickEv>:
{

}

void sensorPresenter::tick()
{
 80040ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
	if(strncmp(rx_data,"S1",2)==0){
 80040ee:	4c40      	ldr	r4, [pc, #256]	@ (80041f0 <_ZN15sensorPresenter4tickEv+0x104>)
{
 80040f0:	4605      	mov	r5, r0
	if(strncmp(rx_data,"S1",2)==0){
 80040f2:	2202      	movs	r2, #2
 80040f4:	493f      	ldr	r1, [pc, #252]	@ (80041f4 <_ZN15sensorPresenter4tickEv+0x108>)
 80040f6:	4620      	mov	r0, r4
 80040f8:	f01a fdc0 	bl	801ec7c <strncmp>
 80040fc:	b998      	cbnz	r0, 8004126 <_ZN15sensorPresenter4tickEv+0x3a>
		char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 80040fe:	78a3      	ldrb	r3, [r4, #2]
		view.s1_update_text(change_data, 4);
 8004100:	2204      	movs	r2, #4
 8004102:	68e8      	ldr	r0, [r5, #12]
		char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004104:	f88d 3004 	strb.w	r3, [sp, #4]
		view.s1_update_text(change_data, 4);
 8004108:	eb0d 0102 	add.w	r1, sp, r2
		char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 800410c:	78e3      	ldrb	r3, [r4, #3]
 800410e:	f88d 3005 	strb.w	r3, [sp, #5]
 8004112:	7923      	ldrb	r3, [r4, #4]
 8004114:	f88d 3006 	strb.w	r3, [sp, #6]
 8004118:	7963      	ldrb	r3, [r4, #5]
 800411a:	f88d 3007 	strb.w	r3, [sp, #7]
		view.s1_update_text(change_data, 4);
 800411e:	f000 f8ad 	bl	800427c <_ZN10sensorView14s1_update_textEPKct>
		}
	else if(strncmp(rx_data,"S5",2)==0){
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
			view.s5_update_text(change_data, 4);
		}
}
 8004122:	b003      	add	sp, #12
 8004124:	bd30      	pop	{r4, r5, pc}
	else if(strncmp(rx_data,"S2",2)==0){
 8004126:	2202      	movs	r2, #2
 8004128:	4933      	ldr	r1, [pc, #204]	@ (80041f8 <_ZN15sensorPresenter4tickEv+0x10c>)
 800412a:	4620      	mov	r0, r4
 800412c:	f01a fda6 	bl	801ec7c <strncmp>
 8004130:	b990      	cbnz	r0, 8004158 <_ZN15sensorPresenter4tickEv+0x6c>
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004132:	78a3      	ldrb	r3, [r4, #2]
			view.s2_update_text(change_data, 4);
 8004134:	2204      	movs	r2, #4
 8004136:	68e8      	ldr	r0, [r5, #12]
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004138:	f88d 3004 	strb.w	r3, [sp, #4]
			view.s2_update_text(change_data, 4);
 800413c:	eb0d 0102 	add.w	r1, sp, r2
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004140:	78e3      	ldrb	r3, [r4, #3]
 8004142:	f88d 3005 	strb.w	r3, [sp, #5]
 8004146:	7923      	ldrb	r3, [r4, #4]
 8004148:	f88d 3006 	strb.w	r3, [sp, #6]
 800414c:	7963      	ldrb	r3, [r4, #5]
 800414e:	f88d 3007 	strb.w	r3, [sp, #7]
			view.s2_update_text(change_data, 4);
 8004152:	f000 f8b8 	bl	80042c6 <_ZN10sensorView14s2_update_textEPKct>
 8004156:	e7e4      	b.n	8004122 <_ZN15sensorPresenter4tickEv+0x36>
	else if(strncmp(rx_data,"S3",2)==0){
 8004158:	2202      	movs	r2, #2
 800415a:	4928      	ldr	r1, [pc, #160]	@ (80041fc <_ZN15sensorPresenter4tickEv+0x110>)
 800415c:	4620      	mov	r0, r4
 800415e:	f01a fd8d 	bl	801ec7c <strncmp>
 8004162:	b990      	cbnz	r0, 800418a <_ZN15sensorPresenter4tickEv+0x9e>
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004164:	78a3      	ldrb	r3, [r4, #2]
			view.s3_update_text(change_data, 4);
 8004166:	2204      	movs	r2, #4
 8004168:	68e8      	ldr	r0, [r5, #12]
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 800416a:	f88d 3004 	strb.w	r3, [sp, #4]
			view.s3_update_text(change_data, 4);
 800416e:	eb0d 0102 	add.w	r1, sp, r2
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004172:	78e3      	ldrb	r3, [r4, #3]
 8004174:	f88d 3005 	strb.w	r3, [sp, #5]
 8004178:	7923      	ldrb	r3, [r4, #4]
 800417a:	f88d 3006 	strb.w	r3, [sp, #6]
 800417e:	7963      	ldrb	r3, [r4, #5]
 8004180:	f88d 3007 	strb.w	r3, [sp, #7]
			view.s3_update_text(change_data, 4);
 8004184:	f000 f8c4 	bl	8004310 <_ZN10sensorView14s3_update_textEPKct>
 8004188:	e7cb      	b.n	8004122 <_ZN15sensorPresenter4tickEv+0x36>
	else if(strncmp(rx_data,"S4",2)==0){
 800418a:	2202      	movs	r2, #2
 800418c:	491c      	ldr	r1, [pc, #112]	@ (8004200 <_ZN15sensorPresenter4tickEv+0x114>)
 800418e:	4620      	mov	r0, r4
 8004190:	f01a fd74 	bl	801ec7c <strncmp>
 8004194:	b990      	cbnz	r0, 80041bc <_ZN15sensorPresenter4tickEv+0xd0>
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004196:	78a3      	ldrb	r3, [r4, #2]
			view.s4_update_text(change_data, 4);
 8004198:	2204      	movs	r2, #4
 800419a:	68e8      	ldr	r0, [r5, #12]
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 800419c:	f88d 3004 	strb.w	r3, [sp, #4]
			view.s4_update_text(change_data, 4);
 80041a0:	eb0d 0102 	add.w	r1, sp, r2
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 80041a4:	78e3      	ldrb	r3, [r4, #3]
 80041a6:	f88d 3005 	strb.w	r3, [sp, #5]
 80041aa:	7923      	ldrb	r3, [r4, #4]
 80041ac:	f88d 3006 	strb.w	r3, [sp, #6]
 80041b0:	7963      	ldrb	r3, [r4, #5]
 80041b2:	f88d 3007 	strb.w	r3, [sp, #7]
			view.s4_update_text(change_data, 4);
 80041b6:	f000 f8d0 	bl	800435a <_ZN10sensorView14s4_update_textEPKct>
 80041ba:	e7b2      	b.n	8004122 <_ZN15sensorPresenter4tickEv+0x36>
	else if(strncmp(rx_data,"S5",2)==0){
 80041bc:	2202      	movs	r2, #2
 80041be:	4911      	ldr	r1, [pc, #68]	@ (8004204 <_ZN15sensorPresenter4tickEv+0x118>)
 80041c0:	4620      	mov	r0, r4
 80041c2:	f01a fd5b 	bl	801ec7c <strncmp>
 80041c6:	2800      	cmp	r0, #0
 80041c8:	d1ab      	bne.n	8004122 <_ZN15sensorPresenter4tickEv+0x36>
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 80041ca:	78a3      	ldrb	r3, [r4, #2]
			view.s5_update_text(change_data, 4);
 80041cc:	2204      	movs	r2, #4
 80041ce:	68e8      	ldr	r0, [r5, #12]
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 80041d0:	f88d 3004 	strb.w	r3, [sp, #4]
			view.s5_update_text(change_data, 4);
 80041d4:	eb0d 0102 	add.w	r1, sp, r2
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 80041d8:	78e3      	ldrb	r3, [r4, #3]
 80041da:	f88d 3005 	strb.w	r3, [sp, #5]
 80041de:	7923      	ldrb	r3, [r4, #4]
 80041e0:	f88d 3006 	strb.w	r3, [sp, #6]
 80041e4:	7963      	ldrb	r3, [r4, #5]
 80041e6:	f88d 3007 	strb.w	r3, [sp, #7]
			view.s5_update_text(change_data, 4);
 80041ea:	f000 f8db 	bl	80043a4 <_ZN10sensorView14s5_update_textEPKct>
}
 80041ee:	e798      	b.n	8004122 <_ZN15sensorPresenter4tickEv+0x36>
 80041f0:	20000140 	.word	0x20000140
 80041f4:	08020dd4 	.word	0x08020dd4
 80041f8:	08020dd7 	.word	0x08020dd7
 80041fc:	08020dda 	.word	0x08020dda
 8004200:	08020ddd 	.word	0x08020ddd
 8004204:	08020de0 	.word	0x08020de0

08004208 <_ZN15sensorPresenterC1ER10sensorView>:
 8004208:	2200      	movs	r2, #0
    : view(v)
 800420a:	60c1      	str	r1, [r0, #12]
 800420c:	6082      	str	r2, [r0, #8]
 800420e:	4a02      	ldr	r2, [pc, #8]	@ (8004218 <_ZN15sensorPresenterC1ER10sensorView+0x10>)
 8004210:	6002      	str	r2, [r0, #0]
 8004212:	321c      	adds	r2, #28
 8004214:	6042      	str	r2, [r0, #4]
}
 8004216:	4770      	bx	lr
 8004218:	08020dec 	.word	0x08020dec

0800421c <_ZN10sensorView15handleTickEventEv>:
    sensorViewBase::setupScreen();
}

void sensorView::handleTickEvent()
{
    tickCounter++;
 800421c:	f8d0 36a4 	ldr.w	r3, [r0, #1700]	@ 0x6a4
 8004220:	3301      	adds	r3, #1
 8004222:	f8c0 36a4 	str.w	r3, [r0, #1700]	@ 0x6a4
    presenter->tick();
 8004226:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8004228:	6803      	ldr	r3, [r0, #0]
 800422a:	691b      	ldr	r3, [r3, #16]
 800422c:	4718      	bx	r3

0800422e <_ZN10sensorView14tearDownScreenEv>:
}
void sensorView::tearDownScreen()
{
    sensorViewBase::tearDownScreen();
}
 800422e:	4770      	bx	lr

08004230 <_ZN10sensorViewD1Ev>:

class sensorView : public sensorViewBase
{
public:
    sensorView();
    virtual ~sensorView() {}
 8004230:	4b03      	ldr	r3, [pc, #12]	@ (8004240 <_ZN10sensorViewD1Ev+0x10>)
 8004232:	b510      	push	{r4, lr}
 8004234:	4604      	mov	r4, r0
 8004236:	6003      	str	r3, [r0, #0]
 8004238:	f7ff fa44 	bl	80036c4 <_ZN14sensorViewBaseD1Ev>
 800423c:	4620      	mov	r0, r4
 800423e:	bd10      	pop	{r4, pc}
 8004240:	08020e18 	.word	0x08020e18

08004244 <_ZN10sensorViewD0Ev>:
 8004244:	b510      	push	{r4, lr}
 8004246:	4604      	mov	r4, r0
 8004248:	f7ff fff2 	bl	8004230 <_ZN10sensorViewD1Ev>
 800424c:	f44f 61d5 	mov.w	r1, #1704	@ 0x6a8
 8004250:	4620      	mov	r0, r4
 8004252:	f01a fa41 	bl	801e6d8 <_ZdlPvj>
 8004256:	4620      	mov	r0, r4
 8004258:	bd10      	pop	{r4, pc}
	...

0800425c <_ZN10sensorViewC1Ev>:
sensorView::sensorView()
 800425c:	b510      	push	{r4, lr}
 800425e:	4604      	mov	r4, r0
 8004260:	f7ff fa92 	bl	8003788 <_ZN14sensorViewBaseC1Ev>
 8004264:	4b03      	ldr	r3, [pc, #12]	@ (8004274 <_ZN10sensorViewC1Ev+0x18>)
}
 8004266:	4620      	mov	r0, r4
sensorView::sensorView()
 8004268:	6023      	str	r3, [r4, #0]
	tickCounter = 0;
 800426a:	2300      	movs	r3, #0
 800426c:	f8c4 36a4 	str.w	r3, [r4, #1700]	@ 0x6a4
}
 8004270:	bd10      	pop	{r4, pc}
 8004272:	bf00      	nop
 8004274:	08020e18 	.word	0x08020e18

08004278 <_ZN10sensorView11setupScreenEv>:
    sensorViewBase::setupScreen();
 8004278:	f7ff b9a2 	b.w	80035c0 <_ZN14sensorViewBase11setupScreenEv>

0800427c <_ZN10sensorView14s1_update_textEPKct>:

void sensorView::s1_update_text(const char* data, uint16_t size)
{
 800427c:	b513      	push	{r0, r1, r4, lr}
	Unicode::UnicodeChar ch_data1[2];
	Unicode::UnicodeChar ch_data2[2];
	ch_data1[0]= (uint16_t)data[0];
 800427e:	780b      	ldrb	r3, [r1, #0]
{
 8004280:	4604      	mov	r4, r0
	ch_data1[1]= (uint16_t)data[1];
	ch_data2[0]= (uint16_t)data[2];
	ch_data2[1]= (uint16_t)data[3];
    Unicode::strncpy(text_temperatureBuffer1, ch_data1, 3);
 8004282:	2203      	movs	r2, #3
 8004284:	f500 60cb 	add.w	r0, r0, #1624	@ 0x658
	ch_data1[0]= (uint16_t)data[0];
 8004288:	f8ad 3000 	strh.w	r3, [sp]
	ch_data1[1]= (uint16_t)data[1];
 800428c:	784b      	ldrb	r3, [r1, #1]
 800428e:	f8ad 3002 	strh.w	r3, [sp, #2]
	ch_data2[0]= (uint16_t)data[2];
 8004292:	788b      	ldrb	r3, [r1, #2]
 8004294:	f8ad 3004 	strh.w	r3, [sp, #4]
	ch_data2[1]= (uint16_t)data[3];
 8004298:	78cb      	ldrb	r3, [r1, #3]
    Unicode::strncpy(text_temperatureBuffer1, ch_data1, 3);
 800429a:	4669      	mov	r1, sp
	ch_data2[1]= (uint16_t)data[3];
 800429c:	f8ad 3006 	strh.w	r3, [sp, #6]
    Unicode::strncpy(text_temperatureBuffer1, ch_data1, 3);
 80042a0:	f00c f97f 	bl	80105a2 <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    Unicode::strncpy(text_temperatureBuffer2, ch_data2, 3);
 80042a4:	2203      	movs	r2, #3
 80042a6:	a901      	add	r1, sp, #4
 80042a8:	f204 605e 	addw	r0, r4, #1630	@ 0x65e
 80042ac:	f00c f979 	bl	80105a2 <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    text_temperatureBuffer1[2]= '\0';
 80042b0:	2300      	movs	r3, #0
    text_temperatureBuffer2[2]= '\0';
    text_temperature.invalidate(); // 화면 갱신
 80042b2:	f204 4094 	addw	r0, r4, #1172	@ 0x494
    text_temperatureBuffer1[2]= '\0';
 80042b6:	f8a4 365c 	strh.w	r3, [r4, #1628]	@ 0x65c
    text_temperatureBuffer2[2]= '\0';
 80042ba:	f8a4 3662 	strh.w	r3, [r4, #1634]	@ 0x662
    text_temperature.invalidate(); // 화면 갱신
 80042be:	f00a fda4 	bl	800ee0a <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80042c2:	b002      	add	sp, #8
 80042c4:	bd10      	pop	{r4, pc}

080042c6 <_ZN10sensorView14s2_update_textEPKct>:

void sensorView::s2_update_text(const char* data, uint16_t size)
{
 80042c6:	b513      	push	{r0, r1, r4, lr}
	Unicode::UnicodeChar ch_data1[2];
	Unicode::UnicodeChar ch_data2[2];
	ch_data1[0]= (uint16_t)data[0];
 80042c8:	780b      	ldrb	r3, [r1, #0]
{
 80042ca:	4604      	mov	r4, r0
	ch_data1[1]= (uint16_t)data[1];
	ch_data2[0]= (uint16_t)data[2];
	ch_data2[1]= (uint16_t)data[3];
    Unicode::strncpy(text_humidityBuffer1, ch_data1, 3);
 80042cc:	2203      	movs	r2, #3
 80042ce:	f200 6064 	addw	r0, r0, #1636	@ 0x664
	ch_data1[0]= (uint16_t)data[0];
 80042d2:	f8ad 3000 	strh.w	r3, [sp]
	ch_data1[1]= (uint16_t)data[1];
 80042d6:	784b      	ldrb	r3, [r1, #1]
 80042d8:	f8ad 3002 	strh.w	r3, [sp, #2]
	ch_data2[0]= (uint16_t)data[2];
 80042dc:	788b      	ldrb	r3, [r1, #2]
 80042de:	f8ad 3004 	strh.w	r3, [sp, #4]
	ch_data2[1]= (uint16_t)data[3];
 80042e2:	78cb      	ldrb	r3, [r1, #3]
    Unicode::strncpy(text_humidityBuffer1, ch_data1, 3);
 80042e4:	4669      	mov	r1, sp
	ch_data2[1]= (uint16_t)data[3];
 80042e6:	f8ad 3006 	strh.w	r3, [sp, #6]
    Unicode::strncpy(text_humidityBuffer1, ch_data1, 3);
 80042ea:	f00c f95a 	bl	80105a2 <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    Unicode::strncpy(text_humidityBuffer2, ch_data2, 3);
 80042ee:	2203      	movs	r2, #3
 80042f0:	a901      	add	r1, sp, #4
 80042f2:	f204 606a 	addw	r0, r4, #1642	@ 0x66a
 80042f6:	f00c f954 	bl	80105a2 <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    text_humidityBuffer1[2]= '\0';
 80042fa:	2300      	movs	r3, #0
    text_humidityBuffer2[2]= '\0';
    text_humidity.invalidate(); // 화면 갱신
 80042fc:	f204 40e4 	addw	r0, r4, #1252	@ 0x4e4
    text_humidityBuffer1[2]= '\0';
 8004300:	f8a4 3668 	strh.w	r3, [r4, #1640]	@ 0x668
    text_humidityBuffer2[2]= '\0';
 8004304:	f8a4 366e 	strh.w	r3, [r4, #1646]	@ 0x66e
    text_humidity.invalidate(); // 화면 갱신
 8004308:	f00a fd7f 	bl	800ee0a <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800430c:	b002      	add	sp, #8
 800430e:	bd10      	pop	{r4, pc}

08004310 <_ZN10sensorView14s3_update_textEPKct>:

void sensorView::s3_update_text(const char* data, uint16_t size)
{
 8004310:	b513      	push	{r0, r1, r4, lr}
	Unicode::UnicodeChar ch_data1[2];
	Unicode::UnicodeChar ch_data2[2];
	ch_data1[0]= (uint16_t)data[0];
 8004312:	780b      	ldrb	r3, [r1, #0]
{
 8004314:	4604      	mov	r4, r0
	ch_data1[1]= (uint16_t)data[1];
	ch_data2[0]= (uint16_t)data[2];
	ch_data2[1]= (uint16_t)data[3];
    Unicode::strncpy(text_phBuffer1, ch_data1, 3);
 8004316:	2203      	movs	r2, #3
 8004318:	f500 60ce 	add.w	r0, r0, #1648	@ 0x670
	ch_data1[0]= (uint16_t)data[0];
 800431c:	f8ad 3000 	strh.w	r3, [sp]
	ch_data1[1]= (uint16_t)data[1];
 8004320:	784b      	ldrb	r3, [r1, #1]
 8004322:	f8ad 3002 	strh.w	r3, [sp, #2]
	ch_data2[0]= (uint16_t)data[2];
 8004326:	788b      	ldrb	r3, [r1, #2]
 8004328:	f8ad 3004 	strh.w	r3, [sp, #4]
	ch_data2[1]= (uint16_t)data[3];
 800432c:	78cb      	ldrb	r3, [r1, #3]
    Unicode::strncpy(text_phBuffer1, ch_data1, 3);
 800432e:	4669      	mov	r1, sp
	ch_data2[1]= (uint16_t)data[3];
 8004330:	f8ad 3006 	strh.w	r3, [sp, #6]
    Unicode::strncpy(text_phBuffer1, ch_data1, 3);
 8004334:	f00c f935 	bl	80105a2 <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    Unicode::strncpy(text_phBuffer2, ch_data2, 3);
 8004338:	2203      	movs	r2, #3
 800433a:	a901      	add	r1, sp, #4
 800433c:	f204 6076 	addw	r0, r4, #1654	@ 0x676
 8004340:	f00c f92f 	bl	80105a2 <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    text_phBuffer1[2]= '\0';
 8004344:	2300      	movs	r3, #0
    text_phBuffer2[2]= '\0';
    text_ph.invalidate(); // 화면 갱신
 8004346:	f204 5034 	addw	r0, r4, #1332	@ 0x534
    text_phBuffer1[2]= '\0';
 800434a:	f8a4 3674 	strh.w	r3, [r4, #1652]	@ 0x674
    text_phBuffer2[2]= '\0';
 800434e:	f8a4 367a 	strh.w	r3, [r4, #1658]	@ 0x67a
    text_ph.invalidate(); // 화면 갱신
 8004352:	f00a fd5a 	bl	800ee0a <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8004356:	b002      	add	sp, #8
 8004358:	bd10      	pop	{r4, pc}

0800435a <_ZN10sensorView14s4_update_textEPKct>:

void sensorView::s4_update_text(const char* data, uint16_t size)
{
 800435a:	b513      	push	{r0, r1, r4, lr}
	Unicode::UnicodeChar ch_data1[2];
	Unicode::UnicodeChar ch_data2[2];
	ch_data1[0]= (uint16_t)data[0];
 800435c:	780b      	ldrb	r3, [r1, #0]
{
 800435e:	4604      	mov	r4, r0
	ch_data1[1]= (uint16_t)data[1];
	ch_data2[0]= (uint16_t)data[2];
	ch_data2[1]= (uint16_t)data[3];
    Unicode::strncpy(text_tdsBuffer1, ch_data1, 3);
 8004360:	2203      	movs	r2, #3
 8004362:	f200 607c 	addw	r0, r0, #1660	@ 0x67c
	ch_data1[0]= (uint16_t)data[0];
 8004366:	f8ad 3000 	strh.w	r3, [sp]
	ch_data1[1]= (uint16_t)data[1];
 800436a:	784b      	ldrb	r3, [r1, #1]
 800436c:	f8ad 3002 	strh.w	r3, [sp, #2]
	ch_data2[0]= (uint16_t)data[2];
 8004370:	788b      	ldrb	r3, [r1, #2]
 8004372:	f8ad 3004 	strh.w	r3, [sp, #4]
	ch_data2[1]= (uint16_t)data[3];
 8004376:	78cb      	ldrb	r3, [r1, #3]
    Unicode::strncpy(text_tdsBuffer1, ch_data1, 3);
 8004378:	4669      	mov	r1, sp
	ch_data2[1]= (uint16_t)data[3];
 800437a:	f8ad 3006 	strh.w	r3, [sp, #6]
    Unicode::strncpy(text_tdsBuffer1, ch_data1, 3);
 800437e:	f00c f910 	bl	80105a2 <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    Unicode::strncpy(text_tdsBuffer2, ch_data2, 3);
 8004382:	2203      	movs	r2, #3
 8004384:	a901      	add	r1, sp, #4
 8004386:	f204 6082 	addw	r0, r4, #1666	@ 0x682
 800438a:	f00c f90a 	bl	80105a2 <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    text_tdsBuffer1[2]= '\0';
 800438e:	2300      	movs	r3, #0
    text_tdsBuffer2[2]= '\0';
    text_tds.invalidate(); // 화면 갱신
 8004390:	f204 5084 	addw	r0, r4, #1412	@ 0x584
    text_tdsBuffer1[2]= '\0';
 8004394:	f8a4 3680 	strh.w	r3, [r4, #1664]	@ 0x680
    text_tdsBuffer2[2]= '\0';
 8004398:	f8a4 3686 	strh.w	r3, [r4, #1670]	@ 0x686
    text_tds.invalidate(); // 화면 갱신
 800439c:	f00a fd35 	bl	800ee0a <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80043a0:	b002      	add	sp, #8
 80043a2:	bd10      	pop	{r4, pc}

080043a4 <_ZN10sensorView14s5_update_textEPKct>:

void sensorView::s5_update_text(const char* data, uint16_t size)
{
 80043a4:	b513      	push	{r0, r1, r4, lr}
	Unicode::UnicodeChar ch_data1[2];
	Unicode::UnicodeChar ch_data2[2];
	ch_data1[0]= (uint16_t)data[0];
 80043a6:	780b      	ldrb	r3, [r1, #0]
{
 80043a8:	4604      	mov	r4, r0
	ch_data1[1]= (uint16_t)data[1];
	ch_data2[0]= (uint16_t)data[2];
	ch_data2[1]= (uint16_t)data[3];
    Unicode::strncpy(text_levelBuffer1, ch_data1, 3);
 80043aa:	2203      	movs	r2, #3
 80043ac:	f500 60d1 	add.w	r0, r0, #1672	@ 0x688
	ch_data1[0]= (uint16_t)data[0];
 80043b0:	f8ad 3000 	strh.w	r3, [sp]
	ch_data1[1]= (uint16_t)data[1];
 80043b4:	784b      	ldrb	r3, [r1, #1]
 80043b6:	f8ad 3002 	strh.w	r3, [sp, #2]
	ch_data2[0]= (uint16_t)data[2];
 80043ba:	788b      	ldrb	r3, [r1, #2]
 80043bc:	f8ad 3004 	strh.w	r3, [sp, #4]
	ch_data2[1]= (uint16_t)data[3];
 80043c0:	78cb      	ldrb	r3, [r1, #3]
    Unicode::strncpy(text_levelBuffer1, ch_data1, 3);
 80043c2:	4669      	mov	r1, sp
	ch_data2[1]= (uint16_t)data[3];
 80043c4:	f8ad 3006 	strh.w	r3, [sp, #6]
    Unicode::strncpy(text_levelBuffer1, ch_data1, 3);
 80043c8:	f00c f8eb 	bl	80105a2 <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    Unicode::strncpy(text_levelBuffer2, ch_data2, 3);
 80043cc:	2203      	movs	r2, #3
 80043ce:	a901      	add	r1, sp, #4
 80043d0:	f204 608e 	addw	r0, r4, #1678	@ 0x68e
 80043d4:	f00c f8e5 	bl	80105a2 <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    text_levelBuffer1[2]= '\0';
 80043d8:	2300      	movs	r3, #0
    text_levelBuffer2[2]= '\0';
    text_level.invalidate(); // 화면 갱신
 80043da:	f204 50d4 	addw	r0, r4, #1492	@ 0x5d4
    text_levelBuffer1[2]= '\0';
 80043de:	f8a4 368c 	strh.w	r3, [r4, #1676]	@ 0x68c
    text_levelBuffer2[2]= '\0';
 80043e2:	f8a4 3692 	strh.w	r3, [r4, #1682]	@ 0x692
    text_level.invalidate(); // 화면 갱신
 80043e6:	f00a fd10 	bl	800ee0a <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80043ea:	b002      	add	sp, #8
 80043ec:	bd10      	pop	{r4, pc}
	...

080043f0 <Bluetooth_init>:
#include "cmsis_os.h"
#include <stdlib.h> // malloc과 free를 사용하기 위한 헤더 파일

Bluetooth bt;

void Bluetooth_init(Bluetooth* bt, UART_HandleTypeDef* huart, void (*rx_callback)(uint8_t* data, uint16_t size), void (*tx_callback)(void)) {
 80043f0:	b570      	push	{r4, r5, r6, lr}
 80043f2:	4605      	mov	r5, r0
    bt->rx_index = 0;
 80043f4:	2400      	movs	r4, #0
    bt->huart = huart;
    bt->bluetooth_rx_callback = rx_callback;
    bt->bluetooth_tx_callback = tx_callback;
    bt->tx_complete = 1; // 전송 완료 플래그 초기화
 80043f6:	2601      	movs	r6, #1
void Bluetooth_init(Bluetooth* bt, UART_HandleTypeDef* huart, void (*rx_callback)(uint8_t* data, uint16_t size), void (*tx_callback)(void)) {
 80043f8:	4608      	mov	r0, r1
    bt->huart = huart;
 80043fa:	6029      	str	r1, [r5, #0]
    bt->rx_index = 0;
 80043fc:	f8a5 4104 	strh.w	r4, [r5, #260]	@ 0x104
    bt->tx_complete = 1; // 전송 완료 플래그 초기화
 8004400:	f885 6106 	strb.w	r6, [r5, #262]	@ 0x106
    bt->bluetooth_tx_callback = tx_callback;
 8004404:	e9c5 2342 	strd	r2, r3, [r5, #264]	@ 0x108

    // UART 초기화 코드
    huart->Instance = UART7;
    huart->Init.BaudRate = 9600;
 8004408:	4a0b      	ldr	r2, [pc, #44]	@ (8004438 <Bluetooth_init+0x48>)
 800440a:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
    huart->Init.WordLength = UART_WORDLENGTH_8B;
    huart->Init.StopBits = UART_STOPBITS_1;
    huart->Init.Parity = UART_PARITY_NONE;
 800440e:	610c      	str	r4, [r1, #16]
    huart->Init.Mode = UART_MODE_TX_RX;
    huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
    huart->Init.OverSampling = UART_OVERSAMPLING_16;
 8004410:	61cc      	str	r4, [r1, #28]
    huart->Init.BaudRate = 9600;
 8004412:	e9c1 2300 	strd	r2, r3, [r1]
    huart->Init.Mode = UART_MODE_TX_RX;
 8004416:	230c      	movs	r3, #12
    huart->Init.StopBits = UART_STOPBITS_1;
 8004418:	e9c1 4402 	strd	r4, r4, [r1, #8]
    huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800441c:	e9c1 3405 	strd	r3, r4, [r1, #20]
    if (HAL_UART_Init(huart) != HAL_OK) {
 8004420:	f003 fb18 	bl	8007a54 <HAL_UART_Init>
        // 초기화 오류 처리
        // 오류 처리 코드 추가
    }

    // UART 인터럽트 활성화
    HAL_NVIC_SetPriority(UART7_IRQn, 0, 1);
 8004424:	4632      	mov	r2, r6
 8004426:	4621      	mov	r1, r4
 8004428:	2052      	movs	r0, #82	@ 0x52
 800442a:	f000 fb23 	bl	8004a74 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART7_IRQn);
 800442e:	2052      	movs	r0, #82	@ 0x52

    // 첫 수신 인터럽트 시작
    //HAL_UART_Receive_IT(huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
}
 8004430:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(UART7_IRQn);
 8004434:	f000 bb50 	b.w	8004ad8 <HAL_NVIC_EnableIRQ>
 8004438:	40007800 	.word	0x40007800

0800443c <Bluetooth_write_data>:


void Bluetooth_write_data(Bluetooth* bt, uint8_t* data, uint16_t size) {
 800443c:	b508      	push	{r3, lr}
    bt->tx_complete = 0; // 전송 완료 플래그 초기화
 800443e:	2300      	movs	r3, #0
 8004440:	f880 3106 	strb.w	r3, [r0, #262]	@ 0x106
#if 0
    if (HAL_UART_Transmit_IT(bt->huart, data, size) != HAL_OK) {
#else
    if (HAL_UART_Transmit(bt->huart, data, size, -1) != HAL_OK) {
 8004444:	f04f 33ff 	mov.w	r3, #4294967295
 8004448:	6800      	ldr	r0, [r0, #0]
 800444a:	f003 fa90 	bl	800796e <HAL_UART_Transmit>
 800444e:	b100      	cbz	r0, 8004452 <Bluetooth_write_data+0x16>
#endif
        // 전송 오류 처리
        	while(1){
 8004450:	e7fe      	b.n	8004450 <Bluetooth_write_data+0x14>
            // 오류 처리 루프
        	}
    }

}
 8004452:	bd08      	pop	{r3, pc}

08004454 <Bluetooth_handle_rx_interrupt>:
// 전송 완료 콜백 함수


void Bluetooth_handle_rx_interrupt(Bluetooth* bt) {
    // 버퍼 오버플로 방지
    if (bt->rx_index >= sizeof(bt->rx_buffer)) {
 8004454:	f8b0 3104 	ldrh.w	r3, [r0, #260]	@ 0x104
        bt->rx_index = 0;
    }
    bt->rx_index++;
    // 다음 수신을 위한 인터럽트 설정
    HAL_UART_Receive_IT(bt->huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
 8004458:	2201      	movs	r2, #1
    if (bt->rx_index >= sizeof(bt->rx_buffer)) {
 800445a:	2bff      	cmp	r3, #255	@ 0xff
        bt->rx_index = 0;
 800445c:	bf88      	it	hi
 800445e:	2300      	movhi	r3, #0
void Bluetooth_handle_rx_interrupt(Bluetooth* bt) {
 8004460:	b510      	push	{r4, lr}
        bt->rx_index = 0;
 8004462:	bf88      	it	hi
 8004464:	f8a0 3104 	strhhi.w	r3, [r0, #260]	@ 0x104
void Bluetooth_handle_rx_interrupt(Bluetooth* bt) {
 8004468:	4604      	mov	r4, r0
    bt->rx_index++;
 800446a:	f8b0 1104 	ldrh.w	r1, [r0, #260]	@ 0x104
 800446e:	3101      	adds	r1, #1
 8004470:	b289      	uxth	r1, r1
 8004472:	f8a0 1104 	strh.w	r1, [r0, #260]	@ 0x104
    HAL_UART_Receive_IT(bt->huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
 8004476:	3104      	adds	r1, #4
 8004478:	4401      	add	r1, r0
 800447a:	6800      	ldr	r0, [r0, #0]
 800447c:	f003 fb72 	bl	8007b64 <HAL_UART_Receive_IT>


    // 수신된 문자가 '\n'일 경우, 이전 문자가 '\r'인지 확인
    if (bt->rx_buffer[bt->rx_index - 1] == '\n' && bt->rx_buffer[bt->rx_index - 2] == '\r') {
 8004480:	f8b4 1104 	ldrh.w	r1, [r4, #260]	@ 0x104
 8004484:	1863      	adds	r3, r4, r1
 8004486:	78da      	ldrb	r2, [r3, #3]
 8004488:	2a0a      	cmp	r2, #10
 800448a:	d10a      	bne.n	80044a2 <Bluetooth_handle_rx_interrupt+0x4e>
 800448c:	789b      	ldrb	r3, [r3, #2]
 800448e:	2b0d      	cmp	r3, #13
 8004490:	d107      	bne.n	80044a2 <Bluetooth_handle_rx_interrupt+0x4e>
        // 수신된 데이터를 콜백으로 전달
        if (bt->bluetooth_rx_callback) {
 8004492:	f8d4 3108 	ldr.w	r3, [r4, #264]	@ 0x108
 8004496:	b10b      	cbz	r3, 800449c <Bluetooth_handle_rx_interrupt+0x48>
            bt->bluetooth_rx_callback(bt->rx_buffer, bt->rx_index);
 8004498:	1d20      	adds	r0, r4, #4
 800449a:	4798      	blx	r3
        }
        bt->rx_index = 0;
 800449c:	2300      	movs	r3, #0
 800449e:	f8a4 3104 	strh.w	r3, [r4, #260]	@ 0x104
    }
}
 80044a2:	bd10      	pop	{r4, pc}

080044a4 <UART7_IRQHandler>:

void UART7_IRQHandler(void) {
    HAL_UART_IRQHandler(bt.huart);
 80044a4:	4b01      	ldr	r3, [pc, #4]	@ (80044ac <UART7_IRQHandler+0x8>)
 80044a6:	6818      	ldr	r0, [r3, #0]
 80044a8:	f002 beaa 	b.w	8007200 <HAL_UART_IRQHandler>
 80044ac:	20001cf4 	.word	0x20001cf4

080044b0 <QSPI_AutoPollingMemReady.constprop.0>:
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout
  * @retval None
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80044b0:	b500      	push	{lr}
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80044b2:	f44f 7280 	mov.w	r2, #256	@ 0x100
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80044b6:	b095      	sub	sp, #84	@ 0x54
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80044b8:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80044bc:	4603      	mov	r3, r0
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80044be:	920c      	str	r2, [sp, #48]	@ 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80044c0:	2205      	movs	r2, #5
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80044c2:	910f      	str	r1, [sp, #60]	@ 0x3c
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 80044c4:	2101      	movs	r1, #1
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80044c6:	9206      	str	r2, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80044c8:	2200      	movs	r2, #0
  s_config.Mask            = N25Q128A_SR_WIP;
 80044ca:	9101      	str	r1, [sp, #4]
  s_command.DummyCycles       = 0;
 80044cc:	920b      	str	r2, [sp, #44]	@ 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80044ce:	9213      	str	r2, [sp, #76]	@ 0x4c
  s_config.Match           = 0;
 80044d0:	9200      	str	r2, [sp, #0]
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
  s_config.Interval        = 0x10;
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 80044d2:	480b      	ldr	r0, [pc, #44]	@ (8004500 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
  s_config.StatusBytesSize = 1;
 80044d4:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80044d8:	e9cd 220d 	strd	r2, r2, [sp, #52]	@ 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80044dc:	e9cd 2211 	strd	r2, r2, [sp, #68]	@ 0x44
  s_config.Interval        = 0x10;
 80044e0:	2210      	movs	r2, #16
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 80044e2:	a906      	add	r1, sp, #24
  s_config.Interval        = 0x10;
 80044e4:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80044e6:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 80044ea:	9205      	str	r2, [sp, #20]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 80044ec:	466a      	mov	r2, sp
 80044ee:	f001 fd83 	bl	8005ff8 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 80044f2:	3800      	subs	r0, #0
 80044f4:	bf18      	it	ne
 80044f6:	2001      	movne	r0, #1
 80044f8:	b015      	add	sp, #84	@ 0x54
 80044fa:	f85d fb04 	ldr.w	pc, [sp], #4
 80044fe:	bf00      	nop
 8004500:	20001e04 	.word	0x20001e04

08004504 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8004504:	b500      	push	{lr}
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004506:	f44f 7380 	mov.w	r3, #256	@ 0x100
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 800450a:	b095      	sub	sp, #84	@ 0x54
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800450c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004510:	4817      	ldr	r0, [pc, #92]	@ (8004570 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004512:	930c      	str	r3, [sp, #48]	@ 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8004514:	2306      	movs	r3, #6
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004516:	a906      	add	r1, sp, #24
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8004518:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800451a:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800451c:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
  s_command.DataMode          = QSPI_DATA_NONE;
 8004520:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.DummyCycles       = 0;
 8004522:	930b      	str	r3, [sp, #44]	@ 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004524:	9313      	str	r3, [sp, #76]	@ 0x4c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004526:	e9cd 3311 	strd	r3, r3, [sp, #68]	@ 0x44
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800452a:	f001 fd20 	bl	8005f6e <HAL_QSPI_Command>
 800452e:	b9e0      	cbnz	r0, 800456a <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8004530:	2302      	movs	r3, #2
  s_config.Interval        = 0x10;
 8004532:	2201      	movs	r2, #1
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8004534:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8004538:	9004      	str	r0, [sp, #16]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800453a:	480d      	ldr	r0, [pc, #52]	@ (8004570 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_config.Mask            = N25Q128A_SR_WREN;
 800453c:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8004540:	2310      	movs	r3, #16
 8004542:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8004546:	2305      	movs	r3, #5
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004548:	466a      	mov	r2, sp
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800454a:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800454e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004552:	a906      	add	r1, sp, #24
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8004554:	930f      	str	r3, [sp, #60]	@ 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004556:	f241 3388 	movw	r3, #5000	@ 0x1388
 800455a:	f001 fd4d 	bl	8005ff8 <HAL_QSPI_AutoPolling>
 800455e:	3800      	subs	r0, #0
 8004560:	bf18      	it	ne
 8004562:	2001      	movne	r0, #1
}
 8004564:	b015      	add	sp, #84	@ 0x54
 8004566:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 800456a:	2001      	movs	r0, #1
 800456c:	e7fa      	b.n	8004564 <QSPI_WriteEnable.constprop.0+0x60>
 800456e:	bf00      	nop
 8004570:	20001e04 	.word	0x20001e04

08004574 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8004574:	b500      	push	{lr}
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004576:	f44f 7380 	mov.w	r3, #256	@ 0x100
{
 800457a:	b091      	sub	sp, #68	@ 0x44
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800457c:	f04f 7240 	mov.w	r2, #50331648	@ 0x3000000
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004580:	480e      	ldr	r0, [pc, #56]	@ (80045bc <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004582:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8004584:	23eb      	movs	r3, #235	@ 0xeb
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004586:	a902      	add	r1, sp, #8
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8004588:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 800458a:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 800458e:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8004590:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8004594:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8004596:	2300      	movs	r3, #0
 8004598:	e9cd 320a 	strd	r3, r2, [sp, #40]	@ 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 800459c:	220a      	movs	r2, #10
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800459e:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 80045a0:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80045a2:	466a      	mov	r2, sp
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80045a4:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 80045a8:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80045ac:	f001 fd75 	bl	800609a <HAL_QSPI_MemoryMapped>
}
 80045b0:	3800      	subs	r0, #0
 80045b2:	bf18      	it	ne
 80045b4:	2001      	movne	r0, #1
 80045b6:	b011      	add	sp, #68	@ 0x44
 80045b8:	f85d fb04 	ldr.w	pc, [sp], #4
 80045bc:	20001e04 	.word	0x20001e04

080045c0 <BSP_QSPI_MspInit>:
  QSPI_CLK_ENABLE();
 80045c0:	4b45      	ldr	r3, [pc, #276]	@ (80046d8 <BSP_QSPI_MspInit+0x118>)
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 80045c2:	2101      	movs	r1, #1
  QSPI_CLK_ENABLE();
 80045c4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80045c6:	f042 0202 	orr.w	r2, r2, #2
{
 80045ca:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPI_CLK_ENABLE();
 80045cc:	639a      	str	r2, [r3, #56]	@ 0x38
{
 80045ce:	b08d      	sub	sp, #52	@ 0x34
  QSPI_CLK_ENABLE();
 80045d0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80045d2:	2409      	movs	r4, #9
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80045d4:	4d41      	ldr	r5, [pc, #260]	@ (80046dc <BSP_QSPI_MspInit+0x11c>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80045d6:	2704      	movs	r7, #4
  QSPI_CLK_ENABLE();
 80045d8:	f002 0202 	and.w	r2, r2, #2
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80045dc:	2600      	movs	r6, #0
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80045de:	4628      	mov	r0, r5
  QSPI_CLK_ENABLE();
 80045e0:	9200      	str	r2, [sp, #0]
 80045e2:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 80045e4:	699a      	ldr	r2, [r3, #24]
 80045e6:	f042 0202 	orr.w	r2, r2, #2
 80045ea:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 80045ec:	699a      	ldr	r2, [r3, #24]
 80045ee:	f022 0202 	bic.w	r2, r2, #2
 80045f2:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 80045f4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80045f6:	f042 0202 	orr.w	r2, r2, #2
 80045fa:	631a      	str	r2, [r3, #48]	@ 0x30
 80045fc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80045fe:	f002 0202 	and.w	r2, r2, #2
 8004602:	9201      	str	r2, [sp, #4]
 8004604:	9a01      	ldr	r2, [sp, #4]
  QSPI_CLK_GPIO_CLK_ENABLE();
 8004606:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004608:	f042 0202 	orr.w	r2, r2, #2
 800460c:	631a      	str	r2, [r3, #48]	@ 0x30
 800460e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004610:	f002 0202 	and.w	r2, r2, #2
 8004614:	9202      	str	r2, [sp, #8]
 8004616:	9a02      	ldr	r2, [sp, #8]
  QSPI_D0_GPIO_CLK_ENABLE();
 8004618:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800461a:	f042 0208 	orr.w	r2, r2, #8
 800461e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004620:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004622:	f002 0208 	and.w	r2, r2, #8
 8004626:	9203      	str	r2, [sp, #12]
 8004628:	9a03      	ldr	r2, [sp, #12]
  QSPI_D1_GPIO_CLK_ENABLE();
 800462a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800462c:	f042 0208 	orr.w	r2, r2, #8
 8004630:	631a      	str	r2, [r3, #48]	@ 0x30
 8004632:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004634:	f002 0208 	and.w	r2, r2, #8
 8004638:	9204      	str	r2, [sp, #16]
 800463a:	9a04      	ldr	r2, [sp, #16]
  QSPI_D2_GPIO_CLK_ENABLE();
 800463c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800463e:	f042 0210 	orr.w	r2, r2, #16
 8004642:	631a      	str	r2, [r3, #48]	@ 0x30
 8004644:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004646:	f002 0210 	and.w	r2, r2, #16
 800464a:	9205      	str	r2, [sp, #20]
 800464c:	9a05      	ldr	r2, [sp, #20]
  QSPI_D3_GPIO_CLK_ENABLE();
 800464e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004650:	f042 0208 	orr.w	r2, r2, #8
 8004654:	631a      	str	r2, [r3, #48]	@ 0x30
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8004656:	2240      	movs	r2, #64	@ 0x40
  QSPI_D3_GPIO_CLK_ENABLE();
 8004658:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800465a:	f003 0308 	and.w	r3, r3, #8
 800465e:	9306      	str	r3, [sp, #24]
 8004660:	9b06      	ldr	r3, [sp, #24]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8004662:	2302      	movs	r3, #2
 8004664:	e9cd 2307 	strd	r2, r3, [sp, #28]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8004668:	2303      	movs	r3, #3
 800466a:	e9cd 1309 	strd	r1, r3, [sp, #36]	@ 0x24
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 800466e:	230a      	movs	r3, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004670:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 8004672:	930b      	str	r3, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004674:	f000 fc48 	bl	8004f08 <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004678:	a907      	add	r1, sp, #28
 800467a:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800467c:	9707      	str	r7, [sp, #28]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 800467e:	9609      	str	r6, [sp, #36]	@ 0x24
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004680:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004682:	f000 fc41 	bl	8004f08 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D0_PIN;
 8004686:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 800468a:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 800468c:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 800468e:	441d      	add	r5, r3
  gpio_init_structure.Pin       = QSPI_D0_PIN;
 8004690:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 8004692:	4628      	mov	r0, r5
 8004694:	f000 fc38 	bl	8004f08 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D1_PIN;
 8004698:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  HAL_GPIO_Init(QSPI_D1_GPIO_PORT, &gpio_init_structure);
 800469c:	a907      	add	r1, sp, #28
 800469e:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = QSPI_D1_PIN;
 80046a0:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80046a2:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D1_GPIO_PORT, &gpio_init_structure);
 80046a4:	f000 fc30 	bl	8004f08 <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_D2_GPIO_PORT, &gpio_init_structure);
 80046a8:	a907      	add	r1, sp, #28
 80046aa:	480d      	ldr	r0, [pc, #52]	@ (80046e0 <BSP_QSPI_MspInit+0x120>)
  gpio_init_structure.Pin       = QSPI_D2_PIN;
 80046ac:	9707      	str	r7, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80046ae:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D2_GPIO_PORT, &gpio_init_structure);
 80046b0:	f000 fc2a 	bl	8004f08 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D3_PIN;
 80046b4:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(QSPI_D3_GPIO_PORT, &gpio_init_structure);
 80046b8:	a907      	add	r1, sp, #28
 80046ba:	4628      	mov	r0, r5
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80046bc:	940b      	str	r4, [sp, #44]	@ 0x2c
  gpio_init_structure.Pin       = QSPI_D3_PIN;
 80046be:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(QSPI_D3_GPIO_PORT, &gpio_init_structure);
 80046c0:	f000 fc22 	bl	8004f08 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 80046c4:	4632      	mov	r2, r6
 80046c6:	210f      	movs	r1, #15
 80046c8:	205c      	movs	r0, #92	@ 0x5c
 80046ca:	f000 f9d3 	bl	8004a74 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 80046ce:	205c      	movs	r0, #92	@ 0x5c
 80046d0:	f000 fa02 	bl	8004ad8 <HAL_NVIC_EnableIRQ>
}
 80046d4:	b00d      	add	sp, #52	@ 0x34
 80046d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80046d8:	40023800 	.word	0x40023800
 80046dc:	40020400 	.word	0x40020400
 80046e0:	40021000 	.word	0x40021000

080046e4 <BSP_QSPI_Init>:
{ 
 80046e4:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 80046e6:	4c49      	ldr	r4, [pc, #292]	@ (800480c <BSP_QSPI_Init+0x128>)
{ 
 80046e8:	b091      	sub	sp, #68	@ 0x44
  QSPIHandle.Instance = QUADSPI;
 80046ea:	4b49      	ldr	r3, [pc, #292]	@ (8004810 <BSP_QSPI_Init+0x12c>)
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80046ec:	4620      	mov	r0, r4
  QSPIHandle.Instance = QUADSPI;
 80046ee:	6023      	str	r3, [r4, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80046f0:	f001 fc2a 	bl	8005f48 <HAL_QSPI_DeInit>
 80046f4:	4605      	mov	r5, r0
 80046f6:	b110      	cbz	r0, 80046fe <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 80046f8:	2001      	movs	r0, #1
}
 80046fa:	b011      	add	sp, #68	@ 0x44
 80046fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 80046fe:	4601      	mov	r1, r0
 8004700:	4620      	mov	r0, r4
 8004702:	f7ff ff5d 	bl	80045c0 <BSP_QSPI_MspInit>
  QSPIHandle.Init.FifoThreshold      = 4;
 8004706:	2601      	movs	r6, #1
 8004708:	2304      	movs	r3, #4
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800470a:	f04f 7780 	mov.w	r7, #16777216	@ 0x1000000
 800470e:	e9c4 6301 	strd	r6, r3, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8004712:	2310      	movs	r3, #16
 8004714:	60e3      	str	r3, [r4, #12]
 8004716:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 800471a:	fab3 f383 	clz	r3, r3
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800471e:	4620      	mov	r0, r4
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8004720:	3b01      	subs	r3, #1
 8004722:	6123      	str	r3, [r4, #16]
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE; /* Min 50ns for nonRead */
 8004724:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8004728:	e9c4 5507 	strd	r5, r5, [r4, #28]
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 800472c:	e9c4 3505 	strd	r3, r5, [r4, #20]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8004730:	f001 fbb8 	bl	8005ea4 <HAL_QSPI_Init>
 8004734:	2800      	cmp	r0, #0
 8004736:	d1df      	bne.n	80046f8 <BSP_QSPI_Init+0x14>
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004738:	f44f 7580 	mov.w	r5, #256	@ 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 800473c:	2366      	movs	r3, #102	@ 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 800473e:	900b      	str	r0, [sp, #44]	@ 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004740:	f241 3288 	movw	r2, #5000	@ 0x1388
  s_command.DummyCycles       = 0;
 8004744:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004746:	a902      	add	r1, sp, #8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004748:	900f      	str	r0, [sp, #60]	@ 0x3c
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800474a:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 800474c:	9302      	str	r3, [sp, #8]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800474e:	e9cd 0009 	strd	r0, r0, [sp, #36]	@ 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004752:	e9cd 000d 	strd	r0, r0, [sp, #52]	@ 0x34
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004756:	4620      	mov	r0, r4
 8004758:	f001 fc09 	bl	8005f6e <HAL_QSPI_Command>
 800475c:	b108      	cbz	r0, 8004762 <BSP_QSPI_Init+0x7e>
    return QSPI_NOT_SUPPORTED;
 800475e:	2004      	movs	r0, #4
 8004760:	e7cb      	b.n	80046fa <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8004762:	2399      	movs	r3, #153	@ 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004764:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004768:	a902      	add	r1, sp, #8
 800476a:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 800476c:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800476e:	f001 fbfe 	bl	8005f6e <HAL_QSPI_Command>
 8004772:	2800      	cmp	r0, #0
 8004774:	d1f3      	bne.n	800475e <BSP_QSPI_Init+0x7a>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8004776:	f241 3088 	movw	r0, #5000	@ 0x1388
 800477a:	f7ff fe99 	bl	80044b0 <QSPI_AutoPollingMemReady.constprop.0>
 800477e:	2800      	cmp	r0, #0
 8004780:	d1ed      	bne.n	800475e <BSP_QSPI_Init+0x7a>
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8004782:	2385      	movs	r3, #133	@ 0x85
  s_command.DummyCycles       = 0;
 8004784:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004786:	f241 3288 	movw	r2, #5000	@ 0x1388
 800478a:	a902      	add	r1, sp, #8
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800478c:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800478e:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8004790:	970b      	str	r7, [sp, #44]	@ 0x2c
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004792:	e9cd 0009 	strd	r0, r0, [sp, #36]	@ 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8004796:	e9cd 600c 	strd	r6, r0, [sp, #48]	@ 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800479a:	e9cd 000e 	strd	r0, r0, [sp, #56]	@ 0x38
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800479e:	4620      	mov	r0, r4
 80047a0:	f001 fbe5 	bl	8005f6e <HAL_QSPI_Command>
 80047a4:	2800      	cmp	r0, #0
 80047a6:	d1da      	bne.n	800475e <BSP_QSPI_Init+0x7a>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047a8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80047ac:	f10d 0107 	add.w	r1, sp, #7
 80047b0:	4620      	mov	r0, r4
 80047b2:	f001 fd5c 	bl	800626e <HAL_QSPI_Receive>
 80047b6:	2800      	cmp	r0, #0
 80047b8:	d1d1      	bne.n	800475e <BSP_QSPI_Init+0x7a>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 80047ba:	f7ff fea3 	bl	8004504 <QSPI_WriteEnable.constprop.0>
 80047be:	2800      	cmp	r0, #0
 80047c0:	d1cd      	bne.n	800475e <BSP_QSPI_Init+0x7a>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 80047c2:	2381      	movs	r3, #129	@ 0x81
 80047c4:	22f0      	movs	r2, #240	@ 0xf0
 80047c6:	9302      	str	r3, [sp, #8]
 80047c8:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80047cc:	210a      	movs	r1, #10
 80047ce:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80047d2:	fab2 f282 	clz	r2, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047d6:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80047d8:	f003 030f 	and.w	r3, r3, #15
 80047dc:	fa01 f202 	lsl.w	r2, r1, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047e0:	a902      	add	r1, sp, #8
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80047e2:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047e4:	f241 3288 	movw	r2, #5000	@ 0x1388
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80047e8:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047ec:	f001 fbbf 	bl	8005f6e <HAL_QSPI_Command>
 80047f0:	2800      	cmp	r0, #0
 80047f2:	d1b4      	bne.n	800475e <BSP_QSPI_Init+0x7a>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047f4:	f241 3288 	movw	r2, #5000	@ 0x1388
 80047f8:	f10d 0107 	add.w	r1, sp, #7
 80047fc:	4620      	mov	r0, r4
 80047fe:	f001 fcd7 	bl	80061b0 <HAL_QSPI_Transmit>
 8004802:	2800      	cmp	r0, #0
 8004804:	f43f af79 	beq.w	80046fa <BSP_QSPI_Init+0x16>
 8004808:	e7a9      	b.n	800475e <BSP_QSPI_Init+0x7a>
 800480a:	bf00      	nop
 800480c:	20001e04 	.word	0x20001e04
 8004810:	a0001000 	.word	0xa0001000

08004814 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004814:	490f      	ldr	r1, [pc, #60]	@ (8004854 <SystemInit+0x40>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8004816:	2000      	movs	r0, #0
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004818:	f8d1 3088 	ldr.w	r3, [r1, #136]	@ 0x88
 800481c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8004820:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
  RCC->CR |= (uint32_t)0x00000001;
 8004824:	4b0c      	ldr	r3, [pc, #48]	@ (8004858 <SystemInit+0x44>)
 8004826:	681a      	ldr	r2, [r3, #0]
 8004828:	f042 0201 	orr.w	r2, r2, #1
 800482c:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000;
 800482e:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8004830:	681a      	ldr	r2, [r3, #0]
 8004832:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 8004836:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800483a:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 800483c:	4a07      	ldr	r2, [pc, #28]	@ (800485c <SystemInit+0x48>)
 800483e:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8004840:	681a      	ldr	r2, [r3, #0]
 8004842:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8004846:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8004848:	60d8      	str	r0, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = RAMDTCM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800484a:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 800484e:	608b      	str	r3, [r1, #8]
#endif
}
 8004850:	4770      	bx	lr
 8004852:	bf00      	nop
 8004854:	e000ed00 	.word	0xe000ed00
 8004858:	40023800 	.word	0x40023800
 800485c:	24003010 	.word	0x24003010

08004860 <ft5336_Reset>:
  */
void ft5336_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT5336 IC */
}
 8004860:	4770      	bx	lr

08004862 <ft5336_TS_ITStatus>:
  */
uint8_t ft5336_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT5336 */
  return 0;
}
 8004862:	2000      	movs	r0, #0
 8004864:	4770      	bx	lr
	...

08004868 <ft5336_ReadID>:
  volatile uint8_t ucReadId = 0;
 8004868:	2300      	movs	r3, #0
{
 800486a:	b537      	push	{r0, r1, r2, r4, r5, lr}
  volatile uint8_t ucReadId = 0;
 800486c:	f88d 3007 	strb.w	r3, [sp, #7]
  * @param  None.
  * @retval : I2C initialization status.
  */
static uint8_t ft5336_Get_I2C_InitializedStatus(void)
{
  return(ft5336_handle.i2cInitialized);
 8004870:	4b0c      	ldr	r3, [pc, #48]	@ (80048a4 <ft5336_ReadID+0x3c>)
  * @param  None.
  * @retval : None.
  */
static void ft5336_I2C_InitializeIfRequired(void)
{
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8004872:	781a      	ldrb	r2, [r3, #0]
 8004874:	b90a      	cbnz	r2, 800487a <ft5336_ReadID+0x12>
  {
    /* Initialize TS IO BUS layer (I2C) */
    //TS_IO_Init();

    /* Set state to initialized */
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8004876:	2201      	movs	r2, #1
 8004878:	701a      	strb	r2, [r3, #0]
{
 800487a:	2403      	movs	r4, #3
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 800487c:	b2c5      	uxtb	r5, r0
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 800487e:	3c01      	subs	r4, #1
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8004880:	21a8      	movs	r1, #168	@ 0xa8
 8004882:	4628      	mov	r0, r5
 8004884:	f7fc fe0e 	bl	80014a4 <TS_IO_Read>
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8004888:	f014 04ff 	ands.w	r4, r4, #255	@ 0xff
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 800488c:	f88d 0007 	strb.w	r0, [sp, #7]
    if(ucReadId == FT5336_ID_VALUE)
 8004890:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004894:	b2db      	uxtb	r3, r3
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8004896:	d001      	beq.n	800489c <ft5336_ReadID+0x34>
 8004898:	2b51      	cmp	r3, #81	@ 0x51
 800489a:	d1f0      	bne.n	800487e <ft5336_ReadID+0x16>
  return (ucReadId);
 800489c:	f89d 0007 	ldrb.w	r0, [sp, #7]
}
 80048a0:	b003      	add	sp, #12
 80048a2:	bd30      	pop	{r4, r5, pc}
 80048a4:	20001e52 	.word	0x20001e52

080048a8 <ft5336_TS_DetectTouch>:
{
 80048a8:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 80048aa:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 80048ac:	2102      	movs	r1, #2
 80048ae:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 80048b0:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 80048b4:	f7fc fdf6 	bl	80014a4 <TS_IO_Read>
 80048b8:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT5336_TD_STAT_MASK;
 80048bc:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80048c0:	f003 030f 	and.w	r3, r3, #15
 80048c4:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT5336_MAX_DETECTABLE_TOUCH)
 80048c8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80048cc:	2b05      	cmp	r3, #5
 80048ce:	d901      	bls.n	80048d4 <ft5336_TS_DetectTouch+0x2c>
    nbTouch = 0;
 80048d0:	f88d 4007 	strb.w	r4, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
 80048d4:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80048d8:	4b03      	ldr	r3, [pc, #12]	@ (80048e8 <ft5336_TS_DetectTouch+0x40>)
  return(nbTouch);
 80048da:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
 80048de:	705a      	strb	r2, [r3, #1]
  ft5336_handle.currActiveTouchIdx = 0;
 80048e0:	2200      	movs	r2, #0
 80048e2:	709a      	strb	r2, [r3, #2]
}
 80048e4:	b002      	add	sp, #8
 80048e6:	bd10      	pop	{r4, pc}
 80048e8:	20001e52 	.word	0x20001e52

080048ec <ft5336_TS_GetXY>:
{
 80048ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 80048f0:	4c2f      	ldr	r4, [pc, #188]	@ (80049b0 <ft5336_TS_GetXY+0xc4>)
{
 80048f2:	4615      	mov	r5, r2
  volatile uint8_t ucReadData = 0;
 80048f4:	f04f 0800 	mov.w	r8, #0
{
 80048f8:	460f      	mov	r7, r1
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 80048fa:	78a3      	ldrb	r3, [r4, #2]
 80048fc:	7862      	ldrb	r2, [r4, #1]
  volatile uint8_t ucReadData = 0;
 80048fe:	f88d 8007 	strb.w	r8, [sp, #7]
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8004902:	429a      	cmp	r2, r3
 8004904:	d94d      	bls.n	80049a2 <ft5336_TS_GetXY+0xb6>
    switch(ft5336_handle.currActiveTouchIdx)
 8004906:	2b09      	cmp	r3, #9
 8004908:	d84e      	bhi.n	80049a8 <ft5336_TS_GetXY+0xbc>
 800490a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800490e:	005b      	lsls	r3, r3, #1
 8004910:	b2db      	uxtb	r3, r3
 8004912:	1d19      	adds	r1, r3, #4
 8004914:	f103 0b03 	add.w	fp, r3, #3
 8004918:	f103 0a06 	add.w	sl, r3, #6
 800491c:	3305      	adds	r3, #5
 800491e:	b2c9      	uxtb	r1, r1
 8004920:	fa5f fb8b 	uxtb.w	fp, fp
 8004924:	fa5f fa8a 	uxtb.w	sl, sl
 8004928:	fa5f f883 	uxtb.w	r8, r3
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 800492c:	b2c6      	uxtb	r6, r0
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 800492e:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 80049b4 <ft5336_TS_GetXY+0xc8>
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 8004932:	4630      	mov	r0, r6
 8004934:	f7fc fdb6 	bl	80014a4 <TS_IO_Read>
 8004938:	f88d 0007 	strb.w	r0, [sp, #7]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 800493c:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8004940:	4659      	mov	r1, fp
 8004942:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004944:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8004948:	f7fc fdac 	bl	80014a4 <TS_IO_Read>
 800494c:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8004950:	4651      	mov	r1, sl
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004952:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8004956:	4630      	mov	r0, r6
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004958:	f8b9 2000 	ldrh.w	r2, [r9]
 800495c:	021b      	lsls	r3, r3, #8
 800495e:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8004962:	4313      	orrs	r3, r2
    *X = coord;
 8004964:	803b      	strh	r3, [r7, #0]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004966:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 800496a:	f7fc fd9b 	bl	80014a4 <TS_IO_Read>
 800496e:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8004972:	4641      	mov	r1, r8
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004974:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8004978:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 800497a:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 800497e:	f7fc fd91 	bl	80014a4 <TS_IO_Read>
 8004982:	f88d 0007 	strb.w	r0, [sp, #7]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004986:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800498a:	f8b9 2000 	ldrh.w	r2, [r9]
 800498e:	021b      	lsls	r3, r3, #8
 8004990:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8004994:	4313      	orrs	r3, r2
 8004996:	f8a9 3000 	strh.w	r3, [r9]
    *Y = coord;
 800499a:	802b      	strh	r3, [r5, #0]
    ft5336_handle.currActiveTouchIdx++; /* next call will work on next touch */
 800499c:	78a3      	ldrb	r3, [r4, #2]
 800499e:	3301      	adds	r3, #1
 80049a0:	70a3      	strb	r3, [r4, #2]
}
 80049a2:	b003      	add	sp, #12
 80049a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 80049a8:	46c2      	mov	sl, r8
 80049aa:	46c3      	mov	fp, r8
 80049ac:	4641      	mov	r1, r8
 80049ae:	e7bd      	b.n	800492c <ft5336_TS_GetXY+0x40>
 80049b0:	20001e52 	.word	0x20001e52
 80049b4:	20001e50 	.word	0x20001e50

080049b8 <ft5336_TS_EnableIT>:
   TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 80049b8:	2201      	movs	r2, #1
 80049ba:	21a4      	movs	r1, #164	@ 0xa4
 80049bc:	b2c0      	uxtb	r0, r0
 80049be:	f7fc bd57 	b.w	8001470 <TS_IO_Write>

080049c2 <ft5336_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 80049c2:	2200      	movs	r2, #0
 80049c4:	21a4      	movs	r1, #164	@ 0xa4
 80049c6:	b2c0      	uxtb	r0, r0
 80049c8:	f7fc bd52 	b.w	8001470 <TS_IO_Write>

080049cc <ft5336_TS_Start>:
  ft5336_TS_DisableIT(DeviceAddr);
 80049cc:	f7ff bff9 	b.w	80049c2 <ft5336_TS_DisableIT>

080049d0 <ft5336_TS_ClearIT>:
void ft5336_TS_ClearIT(uint16_t DeviceAddr)
 80049d0:	4770      	bx	lr
	...

080049d4 <ft5336_Init>:
  return(ft5336_handle.i2cInitialized);
 80049d4:	4b02      	ldr	r3, [pc, #8]	@ (80049e0 <ft5336_Init+0xc>)
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 80049d6:	781a      	ldrb	r2, [r3, #0]
 80049d8:	b90a      	cbnz	r2, 80049de <ft5336_Init+0xa>
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 80049da:	2201      	movs	r2, #1
 80049dc:	701a      	strb	r2, [r3, #0]
}
 80049de:	4770      	bx	lr
 80049e0:	20001e52 	.word	0x20001e52

080049e4 <HAL_Init>:
  __HAL_FLASH_ART_ENABLE();
#endif /* ART_ACCELERATOR_ENABLE */

  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80049e4:	4a07      	ldr	r2, [pc, #28]	@ (8004a04 <HAL_Init+0x20>)
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80049e6:	2003      	movs	r0, #3
{
 80049e8:	b508      	push	{r3, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80049ea:	6813      	ldr	r3, [r2, #0]
 80049ec:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80049f0:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80049f2:	f000 f82d 	bl	8004a50 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80049f6:	2000      	movs	r0, #0
 80049f8:	f7fc fbd4 	bl	80011a4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80049fc:	f7fc f932 	bl	8000c64 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004a00:	2000      	movs	r0, #0
 8004a02:	bd08      	pop	{r3, pc}
 8004a04:	40023c00 	.word	0x40023c00

08004a08 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004a08:	4a03      	ldr	r2, [pc, #12]	@ (8004a18 <HAL_IncTick+0x10>)
 8004a0a:	4b04      	ldr	r3, [pc, #16]	@ (8004a1c <HAL_IncTick+0x14>)
 8004a0c:	6811      	ldr	r1, [r2, #0]
 8004a0e:	781b      	ldrb	r3, [r3, #0]
 8004a10:	440b      	add	r3, r1
 8004a12:	6013      	str	r3, [r2, #0]
}
 8004a14:	4770      	bx	lr
 8004a16:	bf00      	nop
 8004a18:	20001e58 	.word	0x20001e58
 8004a1c:	20000038 	.word	0x20000038

08004a20 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004a20:	4b01      	ldr	r3, [pc, #4]	@ (8004a28 <HAL_GetTick+0x8>)
 8004a22:	6818      	ldr	r0, [r3, #0]
}
 8004a24:	4770      	bx	lr
 8004a26:	bf00      	nop
 8004a28:	20001e58 	.word	0x20001e58

08004a2c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004a2c:	b538      	push	{r3, r4, r5, lr}
 8004a2e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004a30:	f7ff fff6 	bl	8004a20 <HAL_GetTick>
 8004a34:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004a36:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004a38:	bf1e      	ittt	ne
 8004a3a:	4b04      	ldrne	r3, [pc, #16]	@ (8004a4c <HAL_Delay+0x20>)
 8004a3c:	781b      	ldrbne	r3, [r3, #0]
 8004a3e:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8004a40:	f7ff ffee 	bl	8004a20 <HAL_GetTick>
 8004a44:	1b43      	subs	r3, r0, r5
 8004a46:	42a3      	cmp	r3, r4
 8004a48:	d3fa      	bcc.n	8004a40 <HAL_Delay+0x14>
  {
  }
}
 8004a4a:	bd38      	pop	{r3, r4, r5, pc}
 8004a4c:	20000038 	.word	0x20000038

08004a50 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004a50:	4907      	ldr	r1, [pc, #28]	@ (8004a70 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004a52:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004a54:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004a56:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004a5a:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8004a5e:	0412      	lsls	r2, r2, #16
 8004a60:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004a62:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004a64:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004a68:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8004a6c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004a6e:	4770      	bx	lr
 8004a70:	e000ed00 	.word	0xe000ed00

08004a74 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004a74:	4b16      	ldr	r3, [pc, #88]	@ (8004ad0 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004a76:	b530      	push	{r4, r5, lr}
 8004a78:	68dc      	ldr	r4, [r3, #12]
 8004a7a:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004a7e:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004a82:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004a84:	2b04      	cmp	r3, #4
 8004a86:	bf28      	it	cs
 8004a88:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004a8a:	2d06      	cmp	r5, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004a8c:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004a90:	bf8c      	ite	hi
 8004a92:	3c03      	subhi	r4, #3
 8004a94:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004a96:	fa05 f303 	lsl.w	r3, r5, r3
  if ((int32_t)(IRQn) >= 0)
 8004a9a:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004a9c:	fa05 f504 	lsl.w	r5, r5, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004aa0:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004aa4:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004aa8:	fa03 f304 	lsl.w	r3, r3, r4
 8004aac:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004ab0:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8004ab4:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 8004ab6:	db06      	blt.n	8004ac6 <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004ab8:	f100 4060 	add.w	r0, r0, #3758096384	@ 0xe0000000
 8004abc:	f500 4061 	add.w	r0, r0, #57600	@ 0xe100
 8004ac0:	f880 3300 	strb.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004ac4:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004ac6:	f000 000f 	and.w	r0, r0, #15
 8004aca:	4a02      	ldr	r2, [pc, #8]	@ (8004ad4 <HAL_NVIC_SetPriority+0x60>)
 8004acc:	5413      	strb	r3, [r2, r0]
 8004ace:	e7f9      	b.n	8004ac4 <HAL_NVIC_SetPriority+0x50>
 8004ad0:	e000ed00 	.word	0xe000ed00
 8004ad4:	e000ed14 	.word	0xe000ed14

08004ad8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004ad8:	2800      	cmp	r0, #0
 8004ada:	db07      	blt.n	8004aec <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004adc:	0941      	lsrs	r1, r0, #5
 8004ade:	2301      	movs	r3, #1
 8004ae0:	f000 001f 	and.w	r0, r0, #31
 8004ae4:	4a02      	ldr	r2, [pc, #8]	@ (8004af0 <HAL_NVIC_EnableIRQ+0x18>)
 8004ae6:	4083      	lsls	r3, r0
 8004ae8:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004aec:	4770      	bx	lr
 8004aee:	bf00      	nop
 8004af0:	e000e100 	.word	0xe000e100

08004af4 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004af4:	2800      	cmp	r0, #0
 8004af6:	db0c      	blt.n	8004b12 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004af8:	0943      	lsrs	r3, r0, #5
 8004afa:	2201      	movs	r2, #1
 8004afc:	f000 001f 	and.w	r0, r0, #31
 8004b00:	4904      	ldr	r1, [pc, #16]	@ (8004b14 <HAL_NVIC_DisableIRQ+0x20>)
 8004b02:	3320      	adds	r3, #32
 8004b04:	4082      	lsls	r2, r0
 8004b06:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8004b0a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004b0e:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8004b12:	4770      	bx	lr
 8004b14:	e000e100 	.word	0xe000e100

08004b18 <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 8004b18:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 8004b1c:	4b04      	ldr	r3, [pc, #16]	@ (8004b30 <HAL_MPU_Disable+0x18>)
 8004b1e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004b20:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8004b24:	625a      	str	r2, [r3, #36]	@ 0x24
  
  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 8004b26:	2200      	movs	r2, #0
 8004b28:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
}
 8004b2c:	4770      	bx	lr
 8004b2e:	bf00      	nop
 8004b30:	e000ed00 	.word	0xe000ed00

08004b34 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 8004b34:	4b06      	ldr	r3, [pc, #24]	@ (8004b50 <HAL_MPU_Enable+0x1c>)
 8004b36:	f040 0001 	orr.w	r0, r0, #1
 8004b3a:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94
  
  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 8004b3e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004b40:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8004b44:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 8004b46:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004b4a:	f3bf 8f6f 	isb	sy
  
  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 8004b4e:	4770      	bx	lr
 8004b50:	e000ed00 	.word	0xe000ed00

08004b54 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8004b54:	7843      	ldrb	r3, [r0, #1]
 8004b56:	4a14      	ldr	r2, [pc, #80]	@ (8004ba8 <HAL_MPU_ConfigRegion+0x54>)
{
 8004b58:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 8004b5a:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  if ((MPU_Init->Enable) != RESET)
 8004b5e:	7801      	ldrb	r1, [r0, #0]
 8004b60:	b1e9      	cbz	r1, 8004b9e <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
    
    MPU->RBAR = MPU_Init->BaseAddress;
 8004b62:	6843      	ldr	r3, [r0, #4]
 8004b64:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8004b68:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004b6a:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8004b6c:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004b6e:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004b72:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8004b74:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004b76:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 8004b7a:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004b7c:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8004b80:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004b82:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 8004b86:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004b88:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8004b8c:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004b8e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8004b92:	7a01      	ldrb	r1, [r0, #8]
 8004b94:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004b98:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 8004b9c:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 8004b9e:	f8c2 109c 	str.w	r1, [r2, #156]	@ 0x9c
    MPU->RASR = 0x00;
 8004ba2:	f8c2 10a0 	str.w	r1, [r2, #160]	@ 0xa0
}
 8004ba6:	e7f9      	b.n	8004b9c <HAL_MPU_ConfigRegion+0x48>
 8004ba8:	e000ed00 	.word	0xe000ed00

08004bac <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004bac:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004bae:	4604      	mov	r4, r0
 8004bb0:	b908      	cbnz	r0, 8004bb6 <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8004bb2:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8004bb4:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004bb6:	7f43      	ldrb	r3, [r0, #29]
 8004bb8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004bbc:	b913      	cbnz	r3, 8004bc4 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8004bbe:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8004bc0:	f7fc f86e 	bl	8000ca0 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8004bc4:	2302      	movs	r3, #2
 8004bc6:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8004bc8:	7923      	ldrb	r3, [r4, #4]
 8004bca:	b9e3      	cbnz	r3, 8004c06 <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8004bcc:	6823      	ldr	r3, [r4, #0]
 8004bce:	4a13      	ldr	r2, [pc, #76]	@ (8004c1c <HAL_CRC_Init+0x70>)
 8004bd0:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8004bd2:	689a      	ldr	r2, [r3, #8]
 8004bd4:	f022 0218 	bic.w	r2, r2, #24
 8004bd8:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004bda:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004bdc:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004bde:	b9d2      	cbnz	r2, 8004c16 <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004be0:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004be4:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 8004be6:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004be8:	689a      	ldr	r2, [r3, #8]
 8004bea:	6961      	ldr	r1, [r4, #20]
 8004bec:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8004bf0:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8004bf2:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004bf4:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8004bf6:	689a      	ldr	r2, [r3, #8]
 8004bf8:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004bfc:	430a      	orrs	r2, r1
 8004bfe:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8004c00:	2301      	movs	r3, #1
 8004c02:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8004c04:	e7d6      	b.n	8004bb4 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8004c06:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8004c0a:	4620      	mov	r0, r4
 8004c0c:	f000 f808 	bl	8004c20 <HAL_CRCEx_Polynomial_Set>
 8004c10:	2800      	cmp	r0, #0
 8004c12:	d0e2      	beq.n	8004bda <HAL_CRC_Init+0x2e>
 8004c14:	e7cd      	b.n	8004bb2 <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004c16:	6922      	ldr	r2, [r4, #16]
 8004c18:	e7e4      	b.n	8004be4 <HAL_CRC_Init+0x38>
 8004c1a:	bf00      	nop
 8004c1c:	04c11db7 	.word	0x04c11db7

08004c20 <HAL_CRCEx_Polynomial_Set>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8004c20:	231f      	movs	r3, #31
{
 8004c22:	b510      	push	{r4, lr}
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8004c24:	3b01      	subs	r3, #1
 8004c26:	d31d      	bcc.n	8004c64 <HAL_CRCEx_Polynomial_Set+0x44>
 8004c28:	fa21 f403 	lsr.w	r4, r1, r3
 8004c2c:	07e4      	lsls	r4, r4, #31
 8004c2e:	d5f9      	bpl.n	8004c24 <HAL_CRCEx_Polynomial_Set+0x4>
  {
  }

  switch (PolyLength)
 8004c30:	2a10      	cmp	r2, #16
 8004c32:	d013      	beq.n	8004c5c <HAL_CRCEx_Polynomial_Set+0x3c>
 8004c34:	2a10      	cmp	r2, #16
 8004c36:	d804      	bhi.n	8004c42 <HAL_CRCEx_Polynomial_Set+0x22>
 8004c38:	b13a      	cbz	r2, 8004c4a <HAL_CRCEx_Polynomial_Set+0x2a>
 8004c3a:	2a08      	cmp	r2, #8
 8004c3c:	d010      	beq.n	8004c60 <HAL_CRCEx_Polynomial_Set+0x40>
 8004c3e:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8004c40:	e00b      	b.n	8004c5a <HAL_CRCEx_Polynomial_Set+0x3a>
  switch (PolyLength)
 8004c42:	2a18      	cmp	r2, #24
 8004c44:	d1fb      	bne.n	8004c3e <HAL_CRCEx_Polynomial_Set+0x1e>
      if (msb >= HAL_CRC_LENGTH_7B)
 8004c46:	2b06      	cmp	r3, #6
      if (msb >= HAL_CRC_LENGTH_16B)
 8004c48:	d8f9      	bhi.n	8004c3e <HAL_CRCEx_Polynomial_Set+0x1e>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8004c4a:	6800      	ldr	r0, [r0, #0]
 8004c4c:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8004c4e:	6883      	ldr	r3, [r0, #8]
 8004c50:	f023 0318 	bic.w	r3, r3, #24
 8004c54:	4313      	orrs	r3, r2
 8004c56:	6083      	str	r3, [r0, #8]
 8004c58:	2000      	movs	r0, #0
}
 8004c5a:	bd10      	pop	{r4, pc}
      if (msb >= HAL_CRC_LENGTH_8B)
 8004c5c:	2b07      	cmp	r3, #7
 8004c5e:	e7f3      	b.n	8004c48 <HAL_CRCEx_Polynomial_Set+0x28>
      if (msb >= HAL_CRC_LENGTH_16B)
 8004c60:	2b0f      	cmp	r3, #15
 8004c62:	e7f1      	b.n	8004c48 <HAL_CRCEx_Polynomial_Set+0x28>
  switch (PolyLength)
 8004c64:	2a10      	cmp	r2, #16
 8004c66:	d1e5      	bne.n	8004c34 <HAL_CRCEx_Polynomial_Set+0x14>
 8004c68:	e7e9      	b.n	8004c3e <HAL_CRCEx_Polynomial_Set+0x1e>

08004c6a <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8004c6a:	b570      	push	{r4, r5, r6, lr}
 8004c6c:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004c6e:	6d86      	ldr	r6, [r0, #88]	@ 0x58
  
  uint32_t tickstart = HAL_GetTick();
 8004c70:	f7ff fed6 	bl	8004a20 <HAL_GetTick>
 8004c74:	4605      	mov	r5, r0
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004c76:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
 8004c7a:	2b02      	cmp	r3, #2
 8004c7c:	d006      	beq.n	8004c8c <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004c7e:	2380      	movs	r3, #128	@ 0x80
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
    
    return HAL_ERROR;
 8004c80:	2001      	movs	r0, #1
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004c82:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
 8004c84:	2300      	movs	r3, #0
 8004c86:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
    
  }
  return HAL_OK;
}
 8004c8a:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004c8c:	6823      	ldr	r3, [r4, #0]
 8004c8e:	681a      	ldr	r2, [r3, #0]
 8004c90:	f022 0216 	bic.w	r2, r2, #22
 8004c94:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8004c96:	695a      	ldr	r2, [r3, #20]
 8004c98:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004c9c:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8004c9e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8004ca0:	b90a      	cbnz	r2, 8004ca6 <HAL_DMA_Abort+0x3c>
 8004ca2:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 8004ca4:	b11a      	cbz	r2, 8004cae <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8004ca6:	681a      	ldr	r2, [r3, #0]
 8004ca8:	f022 0208 	bic.w	r2, r2, #8
 8004cac:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8004cae:	681a      	ldr	r2, [r3, #0]
 8004cb0:	f022 0201 	bic.w	r2, r2, #1
 8004cb4:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8004cb6:	6823      	ldr	r3, [r4, #0]
 8004cb8:	6818      	ldr	r0, [r3, #0]
 8004cba:	f010 0001 	ands.w	r0, r0, #1
 8004cbe:	d107      	bne.n	8004cd0 <HAL_DMA_Abort+0x66>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004cc0:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8004cc2:	233f      	movs	r3, #63	@ 0x3f
 8004cc4:	4093      	lsls	r3, r2
 8004cc6:	60b3      	str	r3, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8004cc8:	2301      	movs	r3, #1
 8004cca:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
  return HAL_OK;
 8004cce:	e7d9      	b.n	8004c84 <HAL_DMA_Abort+0x1a>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8004cd0:	f7ff fea6 	bl	8004a20 <HAL_GetTick>
 8004cd4:	1b40      	subs	r0, r0, r5
 8004cd6:	2805      	cmp	r0, #5
 8004cd8:	d9ed      	bls.n	8004cb6 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004cda:	2320      	movs	r3, #32
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004cdc:	2003      	movs	r0, #3
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004cde:	6563      	str	r3, [r4, #84]	@ 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004ce0:	f884 0035 	strb.w	r0, [r4, #53]	@ 0x35
        return HAL_TIMEOUT;
 8004ce4:	e7ce      	b.n	8004c84 <HAL_DMA_Abort+0x1a>

08004ce6 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004ce6:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 8004cea:	2b02      	cmp	r3, #2
 8004cec:	d003      	beq.n	8004cf6 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004cee:	2380      	movs	r3, #128	@ 0x80
 8004cf0:	6543      	str	r3, [r0, #84]	@ 0x54
    return HAL_ERROR;
 8004cf2:	2001      	movs	r0, #1
 8004cf4:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8004cf6:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8004cf8:	2305      	movs	r3, #5
 8004cfa:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
  }

  return HAL_OK;
 8004cfe:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8004d00:	6813      	ldr	r3, [r2, #0]
 8004d02:	f023 0301 	bic.w	r3, r3, #1
 8004d06:	6013      	str	r3, [r2, #0]
}
 8004d08:	4770      	bx	lr

08004d0a <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004d0a:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004d0c:	4604      	mov	r4, r0
 8004d0e:	b330      	cbz	r0, 8004d5e <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004d10:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8004d14:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004d18:	b91b      	cbnz	r3, 8004d22 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004d1a:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004d1e:	f7fb ffd5 	bl	8000ccc <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004d22:	6822      	ldr	r2, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004d24:	2302      	movs	r3, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004d26:	6861      	ldr	r1, [r4, #4]
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004d28:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004d2a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004d2e:	6813      	ldr	r3, [r2, #0]
 8004d30:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8004d34:	430b      	orrs	r3, r1
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004d36:	68a1      	ldr	r1, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004d38:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004d3a:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8004d3c:	f023 0307 	bic.w	r3, r3, #7
 8004d40:	430b      	orrs	r3, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004d42:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004d44:	6353      	str	r3, [r2, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004d46:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8004d48:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8004d4c:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8004d50:	430b      	orrs	r3, r1
 8004d52:	6413      	str	r3, [r2, #64]	@ 0x40

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004d54:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004d56:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004d58:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8004d5c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004d5e:	2001      	movs	r0, #1
 8004d60:	e7fc      	b.n	8004d5c <HAL_DMA2D_Init+0x52>

08004d62 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8004d62:	4770      	bx	lr

08004d64 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8004d64:	4770      	bx	lr

08004d66 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004d66:	6803      	ldr	r3, [r0, #0]
{
 8004d68:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004d6a:	685e      	ldr	r6, [r3, #4]
{
 8004d6c:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004d6e:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004d70:	07f2      	lsls	r2, r6, #31
 8004d72:	d514      	bpl.n	8004d9e <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004d74:	05e9      	lsls	r1, r5, #23
 8004d76:	d512      	bpl.n	8004d9e <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004d78:	681a      	ldr	r2, [r3, #0]
 8004d7a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004d7e:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004d80:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004d82:	f042 0201 	orr.w	r2, r2, #1
 8004d86:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004d88:	2201      	movs	r2, #1
 8004d8a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004d8c:	2304      	movs	r3, #4
 8004d8e:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004d92:	2300      	movs	r3, #0
 8004d94:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004d98:	6943      	ldr	r3, [r0, #20]
 8004d9a:	b103      	cbz	r3, 8004d9e <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8004d9c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004d9e:	06b2      	lsls	r2, r6, #26
 8004da0:	d516      	bpl.n	8004dd0 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004da2:	04ab      	lsls	r3, r5, #18
 8004da4:	d514      	bpl.n	8004dd0 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004da6:	6823      	ldr	r3, [r4, #0]
 8004da8:	681a      	ldr	r2, [r3, #0]
 8004daa:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004dae:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004db0:	2220      	movs	r2, #32
 8004db2:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004db4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004db6:	f043 0302 	orr.w	r3, r3, #2
 8004dba:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004dbc:	2304      	movs	r3, #4
 8004dbe:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004dc2:	2300      	movs	r3, #0
 8004dc4:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004dc8:	6963      	ldr	r3, [r4, #20]
 8004dca:	b10b      	cbz	r3, 8004dd0 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004dcc:	4620      	mov	r0, r4
 8004dce:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004dd0:	0730      	lsls	r0, r6, #28
 8004dd2:	d516      	bpl.n	8004e02 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004dd4:	0529      	lsls	r1, r5, #20
 8004dd6:	d514      	bpl.n	8004e02 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004dd8:	6823      	ldr	r3, [r4, #0]
 8004dda:	681a      	ldr	r2, [r3, #0]
 8004ddc:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004de0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004de2:	2208      	movs	r2, #8
 8004de4:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004de6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004de8:	f043 0304 	orr.w	r3, r3, #4
 8004dec:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004dee:	2304      	movs	r3, #4
 8004df0:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004df4:	2300      	movs	r3, #0
 8004df6:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004dfa:	6963      	ldr	r3, [r4, #20]
 8004dfc:	b10b      	cbz	r3, 8004e02 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004dfe:	4620      	mov	r0, r4
 8004e00:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004e02:	0772      	lsls	r2, r6, #29
 8004e04:	d50b      	bpl.n	8004e1e <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004e06:	056b      	lsls	r3, r5, #21
 8004e08:	d509      	bpl.n	8004e1e <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004e0a:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004e0c:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004e0e:	681a      	ldr	r2, [r3, #0]
 8004e10:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004e14:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004e16:	2204      	movs	r2, #4
 8004e18:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004e1a:	f7ff ffa2 	bl	8004d62 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004e1e:	07b0      	lsls	r0, r6, #30
 8004e20:	d514      	bpl.n	8004e4c <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004e22:	05a9      	lsls	r1, r5, #22
 8004e24:	d512      	bpl.n	8004e4c <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004e26:	6823      	ldr	r3, [r4, #0]
 8004e28:	681a      	ldr	r2, [r3, #0]
 8004e2a:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004e2e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004e30:	2202      	movs	r2, #2
 8004e32:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004e34:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004e36:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004e38:	2301      	movs	r3, #1
 8004e3a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004e3e:	2300      	movs	r3, #0
 8004e40:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8004e44:	6923      	ldr	r3, [r4, #16]
 8004e46:	b10b      	cbz	r3, 8004e4c <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004e48:	4620      	mov	r0, r4
 8004e4a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004e4c:	06f2      	lsls	r2, r6, #27
 8004e4e:	d513      	bpl.n	8004e78 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004e50:	04eb      	lsls	r3, r5, #19
 8004e52:	d511      	bpl.n	8004e78 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004e54:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004e56:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004e58:	681a      	ldr	r2, [r3, #0]
 8004e5a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004e5e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004e60:	2210      	movs	r2, #16
 8004e62:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004e64:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004e66:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004e68:	2301      	movs	r3, #1
 8004e6a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004e6e:	2300      	movs	r3, #0
 8004e70:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004e74:	f7ff ff76 	bl	8004d64 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004e78:	bd70      	pop	{r4, r5, r6, pc}
	...

08004e7c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004e7c:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004e7e:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
{
 8004e82:	4603      	mov	r3, r0
 8004e84:	2002      	movs	r0, #2
  __HAL_LOCK(hdma2d);
 8004e86:	2a01      	cmp	r2, #1
 8004e88:	d02b      	beq.n	8004ee2 <HAL_DMA2D_ConfigLayer+0x66>
 8004e8a:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004e8c:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39
#if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
#else
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004e90:	010e      	lsls	r6, r1, #4
 8004e92:	4f1c      	ldr	r7, [pc, #112]	@ (8004f04 <HAL_DMA2D_ConfigLayer+0x88>)
  __HAL_LOCK(hdma2d);
 8004e94:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004e98:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8004e9c:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8004ea0:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8004ea2:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004ea6:	3c09      	subs	r4, #9
 8004ea8:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004eaa:	bf96      	itet	ls
 8004eac:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004eb0:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004eb4:	4310      	orrls	r0, r2

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004eb6:	681a      	ldr	r2, [r3, #0]
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004eb8:	b9a1      	cbnz	r1, 8004ee4 <HAL_DMA2D_ConfigLayer+0x68>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004eba:	6a51      	ldr	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004ebc:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004ebe:	ea01 0107 	and.w	r1, r1, r7
 8004ec2:	ea41 0100 	orr.w	r1, r1, r0
 8004ec6:	6251      	str	r1, [r2, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004ec8:	6999      	ldr	r1, [r3, #24]
 8004eca:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004ecc:	d803      	bhi.n	8004ed6 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8004ece:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8004ed0:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8004ed4:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004ed6:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004ed8:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004eda:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8004ede:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8004ee2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004ee4:	69d1      	ldr	r1, [r2, #28]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004ee6:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004ee8:	ea01 0107 	and.w	r1, r1, r7
 8004eec:	ea41 0100 	orr.w	r1, r1, r0
 8004ef0:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004ef2:	eb03 0106 	add.w	r1, r3, r6
 8004ef6:	6989      	ldr	r1, [r1, #24]
 8004ef8:	6111      	str	r1, [r2, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004efa:	d8ec      	bhi.n	8004ed6 <HAL_DMA2D_ConfigLayer+0x5a>
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004efc:	f025 457f 	bic.w	r5, r5, #4278190080	@ 0xff000000
 8004f00:	6215      	str	r5, [r2, #32]
 8004f02:	e7e8      	b.n	8004ed6 <HAL_DMA2D_ConfigLayer+0x5a>
 8004f04:	00fcfff0 	.word	0x00fcfff0

08004f08 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004f08:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8004f0c:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004f0e:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 80050cc <HAL_GPIO_Init+0x1c4>
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004f12:	4a6c      	ldr	r2, [pc, #432]	@ (80050c4 <HAL_GPIO_Init+0x1bc>)
    ioposition = ((uint32_t)0x01) << position;
 8004f14:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004f16:	680d      	ldr	r5, [r1, #0]
    ioposition = ((uint32_t)0x01) << position;
 8004f18:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004f1a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8004f1e:	43ac      	bics	r4, r5
 8004f20:	f040 80b7 	bne.w	8005092 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004f24:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004f26:	2703      	movs	r7, #3
 8004f28:	ea4f 0e43 	mov.w	lr, r3, lsl #1
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004f2c:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004f30:	fa07 fc0e 	lsl.w	ip, r7, lr
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004f34:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004f36:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004f3a:	2f01      	cmp	r7, #1
 8004f3c:	d834      	bhi.n	8004fa8 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8004f3e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004f40:	ea07 080c 	and.w	r8, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2));
 8004f44:	68cf      	ldr	r7, [r1, #12]
 8004f46:	fa07 f70e 	lsl.w	r7, r7, lr
 8004f4a:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OSPEEDR = temp;
 8004f4e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004f50:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004f52:	ea27 0806 	bic.w	r8, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004f56:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8004f5a:	409f      	lsls	r7, r3
 8004f5c:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OTYPER = temp;
 8004f60:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8004f62:	68c7      	ldr	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004f64:	2c02      	cmp	r4, #2
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8004f66:	ea07 080c 	and.w	r8, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2));
 8004f6a:	688f      	ldr	r7, [r1, #8]
 8004f6c:	fa07 f70e 	lsl.w	r7, r7, lr
 8004f70:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->PUPDR = temp;
 8004f74:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004f76:	d119      	bne.n	8004fac <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3];
 8004f78:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8004f7c:	f003 0a07 	and.w	sl, r3, #7
 8004f80:	f04f 0b0f 	mov.w	fp, #15
 8004f84:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 8004f88:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
        temp = GPIOx->AFR[position >> 3];
 8004f8c:	f8d8 7020 	ldr.w	r7, [r8, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8004f90:	fa0b fb0a 	lsl.w	fp, fp, sl
 8004f94:	ea27 0b0b 	bic.w	fp, r7, fp
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8004f98:	690f      	ldr	r7, [r1, #16]
 8004f9a:	fa07 f70a 	lsl.w	r7, r7, sl
 8004f9e:	ea47 070b 	orr.w	r7, r7, fp
        GPIOx->AFR[position >> 3] = temp;
 8004fa2:	f8c8 7020 	str.w	r7, [r8, #32]
 8004fa6:	e001      	b.n	8004fac <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004fa8:	2c03      	cmp	r4, #3
 8004faa:	d1da      	bne.n	8004f62 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8004fac:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8004fae:	fa04 f40e 	lsl.w	r4, r4, lr
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8004fb2:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8004fb6:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8004fba:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
 8004fbe:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8004fc0:	d067      	beq.n	8005092 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004fc2:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8004fc6:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004fca:	f003 0c03 	and.w	ip, r3, #3
 8004fce:	f04f 0e0f 	mov.w	lr, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004fd2:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8004fd6:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004fda:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004fde:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8004fe2:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8004fe6:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004fea:	fa0e fe0c 	lsl.w	lr, lr, ip
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004fee:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8004ff2:	9401      	str	r4, [sp, #4]
 8004ff4:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2];
 8004ff6:	68bc      	ldr	r4, [r7, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004ff8:	ea24 0e0e 	bic.w	lr, r4, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8004ffc:	4c32      	ldr	r4, [pc, #200]	@ (80050c8 <HAL_GPIO_Init+0x1c0>)
 8004ffe:	42a0      	cmp	r0, r4
 8005000:	d04e      	beq.n	80050a0 <HAL_GPIO_Init+0x198>
 8005002:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005006:	42a0      	cmp	r0, r4
 8005008:	d04c      	beq.n	80050a4 <HAL_GPIO_Init+0x19c>
 800500a:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800500e:	42a0      	cmp	r0, r4
 8005010:	d04a      	beq.n	80050a8 <HAL_GPIO_Init+0x1a0>
 8005012:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005016:	42a0      	cmp	r0, r4
 8005018:	d048      	beq.n	80050ac <HAL_GPIO_Init+0x1a4>
 800501a:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800501e:	42a0      	cmp	r0, r4
 8005020:	d046      	beq.n	80050b0 <HAL_GPIO_Init+0x1a8>
 8005022:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005026:	42a0      	cmp	r0, r4
 8005028:	d044      	beq.n	80050b4 <HAL_GPIO_Init+0x1ac>
 800502a:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800502e:	42a0      	cmp	r0, r4
 8005030:	d042      	beq.n	80050b8 <HAL_GPIO_Init+0x1b0>
 8005032:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005036:	42a0      	cmp	r0, r4
 8005038:	d040      	beq.n	80050bc <HAL_GPIO_Init+0x1b4>
 800503a:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800503e:	42a0      	cmp	r0, r4
 8005040:	d03e      	beq.n	80050c0 <HAL_GPIO_Init+0x1b8>
 8005042:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005046:	42a0      	cmp	r0, r4
 8005048:	bf14      	ite	ne
 800504a:	240a      	movne	r4, #10
 800504c:	2409      	moveq	r4, #9
 800504e:	fa04 f40c 	lsl.w	r4, r4, ip
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8005052:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8005056:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2] = temp;
 800505a:	60bc      	str	r4, [r7, #8]
        temp &= ~((uint32_t)iocurrent);
 800505c:	ea6f 0706 	mvn.w	r7, r6
        temp = EXTI->RTSR;
 8005060:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8005062:	bf0c      	ite	eq
 8005064:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005066:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8005068:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        EXTI->RTSR = temp;
 800506c:	6094      	str	r4, [r2, #8]
        temp = EXTI->FTSR;
 800506e:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 8005070:	bf0c      	ite	eq
 8005072:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005074:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8005076:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        EXTI->FTSR = temp;
 800507a:	60d4      	str	r4, [r2, #12]
        temp = EXTI->EMR;
 800507c:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 800507e:	bf0c      	ite	eq
 8005080:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005082:	4334      	orrne	r4, r6
        EXTI->EMR = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8005084:	03ed      	lsls	r5, r5, #15
        EXTI->EMR = temp;
 8005086:	6054      	str	r4, [r2, #4]
        temp = EXTI->IMR;
 8005088:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800508a:	bf54      	ite	pl
 800508c:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 800508e:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 8005090:	6014      	str	r4, [r2, #0]
  for(position = 0; position < GPIO_NUMBER; position++)
 8005092:	3301      	adds	r3, #1
 8005094:	2b10      	cmp	r3, #16
 8005096:	f47f af3d 	bne.w	8004f14 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800509a:	b003      	add	sp, #12
 800509c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80050a0:	2400      	movs	r4, #0
 80050a2:	e7d4      	b.n	800504e <HAL_GPIO_Init+0x146>
 80050a4:	2401      	movs	r4, #1
 80050a6:	e7d2      	b.n	800504e <HAL_GPIO_Init+0x146>
 80050a8:	2402      	movs	r4, #2
 80050aa:	e7d0      	b.n	800504e <HAL_GPIO_Init+0x146>
 80050ac:	2403      	movs	r4, #3
 80050ae:	e7ce      	b.n	800504e <HAL_GPIO_Init+0x146>
 80050b0:	2404      	movs	r4, #4
 80050b2:	e7cc      	b.n	800504e <HAL_GPIO_Init+0x146>
 80050b4:	2405      	movs	r4, #5
 80050b6:	e7ca      	b.n	800504e <HAL_GPIO_Init+0x146>
 80050b8:	2406      	movs	r4, #6
 80050ba:	e7c8      	b.n	800504e <HAL_GPIO_Init+0x146>
 80050bc:	2407      	movs	r4, #7
 80050be:	e7c6      	b.n	800504e <HAL_GPIO_Init+0x146>
 80050c0:	2408      	movs	r4, #8
 80050c2:	e7c4      	b.n	800504e <HAL_GPIO_Init+0x146>
 80050c4:	40013c00 	.word	0x40013c00
 80050c8:	40020000 	.word	0x40020000
 80050cc:	40023800 	.word	0x40023800

080050d0 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 80050d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 80050d4:	2200      	movs	r2, #0
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 80050d6:	f04f 0a01 	mov.w	sl, #1

    if(iocurrent == ioposition)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2];
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 80050da:	f04f 080f 	mov.w	r8, #15
        tmp = ((uint32_t)0x0F) << (4 * (position & 0x03));
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
      }
      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 80050de:	f04f 0b03 	mov.w	fp, #3
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80050e2:	4c46      	ldr	r4, [pc, #280]	@ (80051fc <HAL_GPIO_DeInit+0x12c>)
    ioposition = ((uint32_t)0x01) << position;
 80050e4:	fa0a fc02 	lsl.w	ip, sl, r2
    if(iocurrent == ioposition)
 80050e8:	ea3c 0301 	bics.w	r3, ip, r1
    iocurrent = (GPIO_Pin) & ioposition;
 80050ec:	ea0c 0601 	and.w	r6, ip, r1
    if(iocurrent == ioposition)
 80050f0:	d16c      	bne.n	80051cc <HAL_GPIO_DeInit+0xfc>
      tmp = SYSCFG->EXTICR[position >> 2];
 80050f2:	f022 0503 	bic.w	r5, r2, #3
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 80050f6:	f002 0703 	and.w	r7, r2, #3
 80050fa:	f105 4580 	add.w	r5, r5, #1073741824	@ 0x40000000
 80050fe:	00bf      	lsls	r7, r7, #2
 8005100:	f505 359c 	add.w	r5, r5, #79872	@ 0x13800
 8005104:	fa08 f907 	lsl.w	r9, r8, r7
      tmp = SYSCFG->EXTICR[position >> 2];
 8005108:	68ab      	ldr	r3, [r5, #8]
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 800510a:	ea09 0e03 	and.w	lr, r9, r3
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 800510e:	4b3c      	ldr	r3, [pc, #240]	@ (8005200 <HAL_GPIO_DeInit+0x130>)
 8005110:	4298      	cmp	r0, r3
 8005112:	d060      	beq.n	80051d6 <HAL_GPIO_DeInit+0x106>
 8005114:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005118:	4298      	cmp	r0, r3
 800511a:	d05e      	beq.n	80051da <HAL_GPIO_DeInit+0x10a>
 800511c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005120:	4298      	cmp	r0, r3
 8005122:	d05c      	beq.n	80051de <HAL_GPIO_DeInit+0x10e>
 8005124:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005128:	4298      	cmp	r0, r3
 800512a:	d05a      	beq.n	80051e2 <HAL_GPIO_DeInit+0x112>
 800512c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005130:	4298      	cmp	r0, r3
 8005132:	d058      	beq.n	80051e6 <HAL_GPIO_DeInit+0x116>
 8005134:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005138:	4298      	cmp	r0, r3
 800513a:	d056      	beq.n	80051ea <HAL_GPIO_DeInit+0x11a>
 800513c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005140:	4298      	cmp	r0, r3
 8005142:	d054      	beq.n	80051ee <HAL_GPIO_DeInit+0x11e>
 8005144:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005148:	4298      	cmp	r0, r3
 800514a:	d052      	beq.n	80051f2 <HAL_GPIO_DeInit+0x122>
 800514c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005150:	4298      	cmp	r0, r3
 8005152:	d050      	beq.n	80051f6 <HAL_GPIO_DeInit+0x126>
 8005154:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005158:	4298      	cmp	r0, r3
 800515a:	bf0c      	ite	eq
 800515c:	2309      	moveq	r3, #9
 800515e:	230a      	movne	r3, #10
 8005160:	40bb      	lsls	r3, r7
 8005162:	4573      	cmp	r3, lr
 8005164:	d113      	bne.n	800518e <HAL_GPIO_DeInit+0xbe>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8005166:	6823      	ldr	r3, [r4, #0]
 8005168:	ea23 0306 	bic.w	r3, r3, r6
 800516c:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 800516e:	6863      	ldr	r3, [r4, #4]
 8005170:	ea23 0306 	bic.w	r3, r3, r6
 8005174:	6063      	str	r3, [r4, #4]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8005176:	68e3      	ldr	r3, [r4, #12]
 8005178:	ea23 0306 	bic.w	r3, r3, r6
 800517c:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 800517e:	68a3      	ldr	r3, [r4, #8]
 8005180:	ea23 0306 	bic.w	r3, r3, r6
 8005184:	60a3      	str	r3, [r4, #8]
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
 8005186:	68ab      	ldr	r3, [r5, #8]
 8005188:	ea23 0309 	bic.w	r3, r3, r9
 800518c:	60ab      	str	r3, [r5, #8]
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 800518e:	0053      	lsls	r3, r2, #1
 8005190:	6805      	ldr	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8005192:	08d6      	lsrs	r6, r2, #3
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 8005194:	fa0b f303 	lsl.w	r3, fp, r3
 8005198:	eb00 0686 	add.w	r6, r0, r6, lsl #2
 800519c:	ea25 0503 	bic.w	r5, r5, r3
 80051a0:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80051a2:	f002 0507 	and.w	r5, r2, #7
 80051a6:	6a37      	ldr	r7, [r6, #32]
 80051a8:	00ad      	lsls	r5, r5, #2
 80051aa:	fa08 f505 	lsl.w	r5, r8, r5
 80051ae:	ea27 0705 	bic.w	r7, r7, r5
 80051b2:	6237      	str	r7, [r6, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 80051b4:	68c5      	ldr	r5, [r0, #12]
 80051b6:	ea25 0503 	bic.w	r5, r5, r3
 80051ba:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 80051bc:	6845      	ldr	r5, [r0, #4]
 80051be:	ea25 050c 	bic.w	r5, r5, ip
 80051c2:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80051c4:	6885      	ldr	r5, [r0, #8]
 80051c6:	ea25 0303 	bic.w	r3, r5, r3
 80051ca:	6083      	str	r3, [r0, #8]
  for(position = 0; position < GPIO_NUMBER; position++)
 80051cc:	3201      	adds	r2, #1
 80051ce:	2a10      	cmp	r2, #16
 80051d0:	d188      	bne.n	80050e4 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 80051d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 80051d6:	2300      	movs	r3, #0
 80051d8:	e7c2      	b.n	8005160 <HAL_GPIO_DeInit+0x90>
 80051da:	2301      	movs	r3, #1
 80051dc:	e7c0      	b.n	8005160 <HAL_GPIO_DeInit+0x90>
 80051de:	2302      	movs	r3, #2
 80051e0:	e7be      	b.n	8005160 <HAL_GPIO_DeInit+0x90>
 80051e2:	2303      	movs	r3, #3
 80051e4:	e7bc      	b.n	8005160 <HAL_GPIO_DeInit+0x90>
 80051e6:	2304      	movs	r3, #4
 80051e8:	e7ba      	b.n	8005160 <HAL_GPIO_DeInit+0x90>
 80051ea:	2305      	movs	r3, #5
 80051ec:	e7b8      	b.n	8005160 <HAL_GPIO_DeInit+0x90>
 80051ee:	2306      	movs	r3, #6
 80051f0:	e7b6      	b.n	8005160 <HAL_GPIO_DeInit+0x90>
 80051f2:	2307      	movs	r3, #7
 80051f4:	e7b4      	b.n	8005160 <HAL_GPIO_DeInit+0x90>
 80051f6:	2308      	movs	r3, #8
 80051f8:	e7b2      	b.n	8005160 <HAL_GPIO_DeInit+0x90>
 80051fa:	bf00      	nop
 80051fc:	40013c00 	.word	0x40013c00
 8005200:	40020000 	.word	0x40020000

08005204 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8005204:	6903      	ldr	r3, [r0, #16]
 8005206:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8005208:	bf14      	ite	ne
 800520a:	2001      	movne	r0, #1
 800520c:	2000      	moveq	r0, #0
 800520e:	4770      	bx	lr

08005210 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8005210:	b10a      	cbz	r2, 8005216 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8005212:	6181      	str	r1, [r0, #24]
  }
}
 8005214:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8005216:	0409      	lsls	r1, r1, #16
 8005218:	e7fb      	b.n	8005212 <HAL_GPIO_WritePin+0x2>

0800521a <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800521a:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800521c:	ea01 0203 	and.w	r2, r1, r3
 8005220:	ea21 0103 	bic.w	r1, r1, r3
 8005224:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005228:	6181      	str	r1, [r0, #24]
}
 800522a:	4770      	bx	lr

0800522c <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 800522c:	6803      	ldr	r3, [r0, #0]
 800522e:	699a      	ldr	r2, [r3, #24]
 8005230:	0791      	lsls	r1, r2, #30
 8005232:	d501      	bpl.n	8005238 <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8005234:	2200      	movs	r2, #0
 8005236:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005238:	699a      	ldr	r2, [r3, #24]
 800523a:	07d2      	lsls	r2, r2, #31
 800523c:	d403      	bmi.n	8005246 <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 800523e:	699a      	ldr	r2, [r3, #24]
 8005240:	f042 0201 	orr.w	r2, r2, #1
 8005244:	619a      	str	r2, [r3, #24]
  }
}
 8005246:	4770      	bx	lr

08005248 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8005248:	b530      	push	{r4, r5, lr}
 800524a:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800524c:	f3c1 0109 	ubfx	r1, r1, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8005250:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005252:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
 8005254:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005256:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 800525a:	4a05      	ldr	r2, [pc, #20]	@ (8005270 <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800525c:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 800525e:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005262:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 8005266:	ea20 0002 	bic.w	r0, r0, r2
 800526a:	4303      	orrs	r3, r0
 800526c:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 800526e:	bd30      	pop	{r4, r5, pc}
 8005270:	03ff63ff 	.word	0x03ff63ff

08005274 <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 8005274:	6803      	ldr	r3, [r0, #0]
{
 8005276:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 800527a:	699c      	ldr	r4, [r3, #24]
{
 800527c:	4605      	mov	r5, r0
 800527e:	460f      	mov	r7, r1
 8005280:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8005282:	f014 0410 	ands.w	r4, r4, #16
 8005286:	d06f      	beq.n	8005368 <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 8005288:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800528a:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 800528c:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800528e:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8005290:	682b      	ldr	r3, [r5, #0]
 8005292:	699a      	ldr	r2, [r3, #24]
 8005294:	0690      	lsls	r0, r2, #26
 8005296:	d461      	bmi.n	800535c <I2C_IsErrorOccurred+0xe8>
 8005298:	f1b8 0f00 	cmp.w	r8, #0
 800529c:	d035      	beq.n	800530a <I2C_IsErrorOccurred+0x96>
    error_code |= HAL_I2C_ERROR_AF;
 800529e:	f044 0404 	orr.w	r4, r4, #4
    status = HAL_ERROR;
 80052a2:	2001      	movs	r0, #1
  itflag = hi2c->Instance->ISR;
 80052a4:	682e      	ldr	r6, [r5, #0]
 80052a6:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 80052a8:	05d9      	lsls	r1, r3, #23
 80052aa:	d505      	bpl.n	80052b8 <I2C_IsErrorOccurred+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80052ac:	f44f 7280 	mov.w	r2, #256	@ 0x100
    error_code |= HAL_I2C_ERROR_BERR;
 80052b0:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
 80052b4:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80052b6:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 80052b8:	055a      	lsls	r2, r3, #21
 80052ba:	d505      	bpl.n	80052c8 <I2C_IsErrorOccurred+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 80052bc:	f44f 6280 	mov.w	r2, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
 80052c0:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
 80052c4:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 80052c6:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 80052c8:	059b      	lsls	r3, r3, #22
 80052ca:	d54f      	bpl.n	800536c <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 80052cc:	f44f 7300 	mov.w	r3, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 80052d0:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 80052d4:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 80052d6:	4628      	mov	r0, r5
 80052d8:	f7ff ffa8 	bl	800522c <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 80052dc:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 80052de:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 80052e0:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
 80052e4:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
 80052e8:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
 80052ec:	f023 0301 	bic.w	r3, r3, #1
 80052f0:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 80052f2:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 80052f4:	4323      	orrs	r3, r4
 80052f6:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 80052f8:	2320      	movs	r3, #32
 80052fa:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80052fe:	2300      	movs	r3, #0
 8005300:	f885 3042 	strb.w	r3, [r5, #66]	@ 0x42
    __HAL_UNLOCK(hi2c);
 8005304:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
 8005308:	e032      	b.n	8005370 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 800530a:	1c7a      	adds	r2, r7, #1
 800530c:	d0c1      	beq.n	8005292 <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 800530e:	f7ff fb87 	bl	8004a20 <HAL_GetTick>
 8005312:	1b80      	subs	r0, r0, r6
 8005314:	42b8      	cmp	r0, r7
 8005316:	d801      	bhi.n	800531c <I2C_IsErrorOccurred+0xa8>
 8005318:	2f00      	cmp	r7, #0
 800531a:	d1b9      	bne.n	8005290 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 800531c:	682b      	ldr	r3, [r5, #0]
 800531e:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8005320:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8005324:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8005326:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8005328:	0400      	lsls	r0, r0, #16
 800532a:	d50a      	bpl.n	8005342 <I2C_IsErrorOccurred+0xce>
 800532c:	0449      	lsls	r1, r1, #17
 800532e:	d408      	bmi.n	8005342 <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 8005330:	2a20      	cmp	r2, #32
 8005332:	d006      	beq.n	8005342 <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8005334:	685a      	ldr	r2, [r3, #4]
 8005336:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800533a:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 800533c:	f7ff fb70 	bl	8004a20 <HAL_GetTick>
 8005340:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8005342:	682b      	ldr	r3, [r5, #0]
 8005344:	699b      	ldr	r3, [r3, #24]
 8005346:	069b      	lsls	r3, r3, #26
 8005348:	d4a2      	bmi.n	8005290 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 800534a:	f7ff fb69 	bl	8004a20 <HAL_GetTick>
 800534e:	1b80      	subs	r0, r0, r6
 8005350:	2819      	cmp	r0, #25
 8005352:	d9f6      	bls.n	8005342 <I2C_IsErrorOccurred+0xce>
              error_code |=HAL_I2C_ERROR_TIMEOUT;
 8005354:	2420      	movs	r4, #32
              status = HAL_ERROR;
 8005356:	f04f 0801 	mov.w	r8, #1
 800535a:	e799      	b.n	8005290 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 800535c:	f1b8 0f00 	cmp.w	r8, #0
 8005360:	d19d      	bne.n	800529e <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005362:	2220      	movs	r2, #32
 8005364:	61da      	str	r2, [r3, #28]
 8005366:	e79a      	b.n	800529e <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 8005368:	4620      	mov	r0, r4
 800536a:	e79b      	b.n	80052a4 <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 800536c:	2800      	cmp	r0, #0
 800536e:	d1b2      	bne.n	80052d6 <I2C_IsErrorOccurred+0x62>
}
 8005370:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005374 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8005374:	b570      	push	{r4, r5, r6, lr}
 8005376:	4604      	mov	r4, r0
 8005378:	460d      	mov	r5, r1
 800537a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 800537c:	6823      	ldr	r3, [r4, #0]
 800537e:	699b      	ldr	r3, [r3, #24]
 8005380:	079b      	lsls	r3, r3, #30
 8005382:	d501      	bpl.n	8005388 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8005384:	2000      	movs	r0, #0
 8005386:	e01b      	b.n	80053c0 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8005388:	4632      	mov	r2, r6
 800538a:	4629      	mov	r1, r5
 800538c:	4620      	mov	r0, r4
 800538e:	f7ff ff71 	bl	8005274 <I2C_IsErrorOccurred>
 8005392:	b9a0      	cbnz	r0, 80053be <I2C_WaitOnTXISFlagUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005394:	1c6a      	adds	r2, r5, #1
 8005396:	d0f1      	beq.n	800537c <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005398:	f7ff fb42 	bl	8004a20 <HAL_GetTick>
 800539c:	1b80      	subs	r0, r0, r6
 800539e:	42a8      	cmp	r0, r5
 80053a0:	d801      	bhi.n	80053a6 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 80053a2:	2d00      	cmp	r5, #0
 80053a4:	d1ea      	bne.n	800537c <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80053a6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80053a8:	f043 0320 	orr.w	r3, r3, #32
 80053ac:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80053ae:	2320      	movs	r3, #32
 80053b0:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80053b4:	2300      	movs	r3, #0
 80053b6:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
 80053ba:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80053be:	2001      	movs	r0, #1
}
 80053c0:	bd70      	pop	{r4, r5, r6, pc}

080053c2 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 80053c2:	b570      	push	{r4, r5, r6, lr}
 80053c4:	4604      	mov	r4, r0
 80053c6:	460d      	mov	r5, r1
 80053c8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80053ca:	6823      	ldr	r3, [r4, #0]
 80053cc:	699b      	ldr	r3, [r3, #24]
 80053ce:	069b      	lsls	r3, r3, #26
 80053d0:	d501      	bpl.n	80053d6 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 80053d2:	2000      	movs	r0, #0
 80053d4:	e019      	b.n	800540a <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80053d6:	4632      	mov	r2, r6
 80053d8:	4629      	mov	r1, r5
 80053da:	4620      	mov	r0, r4
 80053dc:	f7ff ff4a 	bl	8005274 <I2C_IsErrorOccurred>
 80053e0:	b990      	cbnz	r0, 8005408 <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80053e2:	f7ff fb1d 	bl	8004a20 <HAL_GetTick>
 80053e6:	1b80      	subs	r0, r0, r6
 80053e8:	42a8      	cmp	r0, r5
 80053ea:	d801      	bhi.n	80053f0 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 80053ec:	2d00      	cmp	r5, #0
 80053ee:	d1ec      	bne.n	80053ca <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80053f0:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80053f2:	f043 0320 	orr.w	r3, r3, #32
 80053f6:	6463      	str	r3, [r4, #68]	@ 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 80053f8:	2320      	movs	r3, #32
 80053fa:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80053fe:	2300      	movs	r3, #0
 8005400:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      __HAL_UNLOCK(hi2c);
 8005404:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005408:	2001      	movs	r0, #1
}
 800540a:	bd70      	pop	{r4, r5, r6, pc}

0800540c <I2C_WaitOnFlagUntilTimeout>:
{
 800540c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005410:	9f06      	ldr	r7, [sp, #24]
 8005412:	4604      	mov	r4, r0
 8005414:	4688      	mov	r8, r1
 8005416:	4616      	mov	r6, r2
 8005418:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800541a:	6822      	ldr	r2, [r4, #0]
 800541c:	6993      	ldr	r3, [r2, #24]
 800541e:	ea38 0303 	bics.w	r3, r8, r3
 8005422:	bf0c      	ite	eq
 8005424:	2301      	moveq	r3, #1
 8005426:	2300      	movne	r3, #0
 8005428:	42b3      	cmp	r3, r6
 800542a:	d001      	beq.n	8005430 <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 800542c:	2000      	movs	r0, #0
 800542e:	e015      	b.n	800545c <I2C_WaitOnFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8005430:	1c6b      	adds	r3, r5, #1
 8005432:	d0f3      	beq.n	800541c <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005434:	f7ff faf4 	bl	8004a20 <HAL_GetTick>
 8005438:	1bc0      	subs	r0, r0, r7
 800543a:	42a8      	cmp	r0, r5
 800543c:	d801      	bhi.n	8005442 <I2C_WaitOnFlagUntilTimeout+0x36>
 800543e:	2d00      	cmp	r5, #0
 8005440:	d1eb      	bne.n	800541a <I2C_WaitOnFlagUntilTimeout+0xe>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005442:	6c63      	ldr	r3, [r4, #68]	@ 0x44
        __HAL_UNLOCK(hi2c);
 8005444:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005446:	f043 0320 	orr.w	r3, r3, #32
 800544a:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 800544c:	2320      	movs	r3, #32
 800544e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8005452:	2300      	movs	r3, #0
 8005454:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
 8005458:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 800545c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005460 <HAL_I2C_Init>:
{
 8005460:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005462:	4604      	mov	r4, r0
 8005464:	2800      	cmp	r0, #0
 8005466:	d04a      	beq.n	80054fe <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005468:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 800546c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005470:	b91b      	cbnz	r3, 800547a <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8005472:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
 8005476:	f7fb fc49 	bl	8000d0c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800547a:	2324      	movs	r3, #36	@ 0x24
 800547c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005480:	6823      	ldr	r3, [r4, #0]
 8005482:	681a      	ldr	r2, [r3, #0]
 8005484:	f022 0201 	bic.w	r2, r2, #1
 8005488:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 800548a:	6862      	ldr	r2, [r4, #4]
 800548c:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8005490:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8005492:	689a      	ldr	r2, [r3, #8]
 8005494:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005498:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 800549a:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800549e:	2901      	cmp	r1, #1
 80054a0:	d124      	bne.n	80054ec <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80054a2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80054a6:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80054a8:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80054aa:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80054ac:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 80054b0:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80054b4:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80054b6:	68da      	ldr	r2, [r3, #12]
 80054b8:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80054bc:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80054be:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 80054c2:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 80054c4:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80054c6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80054ca:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 80054cc:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 80054d0:	430a      	orrs	r2, r1
 80054d2:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 80054d4:	681a      	ldr	r2, [r3, #0]
 80054d6:	f042 0201 	orr.w	r2, r2, #1
 80054da:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 80054dc:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80054de:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 80054e0:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 80054e4:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80054e6:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 80054ea:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 80054ec:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 80054f0:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 80054f2:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 80054f4:	d1d8      	bne.n	80054a8 <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 80054f6:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80054fa:	605a      	str	r2, [r3, #4]
 80054fc:	e7d4      	b.n	80054a8 <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 80054fe:	2001      	movs	r0, #1
 8005500:	e7f3      	b.n	80054ea <HAL_I2C_Init+0x8a>

08005502 <HAL_I2C_DeInit>:
{
 8005502:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005504:	4604      	mov	r4, r0
 8005506:	b198      	cbz	r0, 8005530 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8005508:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800550a:	2324      	movs	r3, #36	@ 0x24
 800550c:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005510:	6813      	ldr	r3, [r2, #0]
 8005512:	f023 0301 	bic.w	r3, r3, #1
 8005516:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8005518:	f7fb fc3c 	bl	8000d94 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800551c:	2000      	movs	r0, #0
 800551e:	6460      	str	r0, [r4, #68]	@ 0x44
  __HAL_UNLOCK(hi2c);
 8005520:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 8005524:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8005528:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800552a:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 800552e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005530:	2001      	movs	r0, #1
 8005532:	e7fc      	b.n	800552e <HAL_I2C_DeInit+0x2c>

08005534 <HAL_I2C_Mem_Write>:
{
 8005534:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005538:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 800553a:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 800553e:	4604      	mov	r4, r0
 8005540:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005542:	2b20      	cmp	r3, #32
{
 8005544:	4616      	mov	r6, r2
 8005546:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 800554a:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 800554e:	f040 80c6 	bne.w	80056de <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 8005552:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005554:	b113      	cbz	r3, 800555c <HAL_I2C_Mem_Write+0x28>
 8005556:	f1ba 0f00 	cmp.w	sl, #0
 800555a:	d106      	bne.n	800556a <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 800555c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8005560:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8005562:	2001      	movs	r0, #1
}
 8005564:	b003      	add	sp, #12
 8005566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 800556a:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 800556e:	2b01      	cmp	r3, #1
 8005570:	f000 80b5 	beq.w	80056de <HAL_I2C_Mem_Write+0x1aa>
 8005574:	f04f 0b01 	mov.w	fp, #1
 8005578:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 800557c:	f7ff fa50 	bl	8004a20 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005580:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 8005582:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005584:	9000      	str	r0, [sp, #0]
 8005586:	465a      	mov	r2, fp
 8005588:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800558c:	4620      	mov	r0, r4
 800558e:	f7ff ff3d 	bl	800540c <I2C_WaitOnFlagUntilTimeout>
 8005592:	2800      	cmp	r0, #0
 8005594:	d1e5      	bne.n	8005562 <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005596:	2321      	movs	r3, #33	@ 0x21
    hi2c->XferISR   = NULL;
 8005598:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 800559a:	fa5f f289 	uxtb.w	r2, r9
 800559e:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80055a0:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80055a4:	2340      	movs	r3, #64	@ 0x40
 80055a6:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 80055aa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80055ac:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80055ae:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 80055b0:	6263      	str	r3, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80055b2:	4b4c      	ldr	r3, [pc, #304]	@ (80056e4 <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferCount = Size;
 80055b4:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80055b8:	9300      	str	r3, [sp, #0]
 80055ba:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80055be:	f7ff fe43 	bl	8005248 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80055c2:	462a      	mov	r2, r5
 80055c4:	4641      	mov	r1, r8
 80055c6:	4620      	mov	r0, r4
 80055c8:	f7ff fed4 	bl	8005374 <I2C_WaitOnTXISFlagUntilTimeout>
 80055cc:	bb18      	cbnz	r0, 8005616 <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80055ce:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80055d2:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80055d4:	d115      	bne.n	8005602 <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80055d6:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 80055d8:	2200      	movs	r2, #0
 80055da:	2180      	movs	r1, #128	@ 0x80
 80055dc:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80055de:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 80055e0:	4643      	mov	r3, r8
 80055e2:	9500      	str	r5, [sp, #0]
 80055e4:	f7ff ff12 	bl	800540c <I2C_WaitOnFlagUntilTimeout>
 80055e8:	b9a8      	cbnz	r0, 8005616 <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80055ea:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80055ec:	b29b      	uxth	r3, r3
 80055ee:	2bff      	cmp	r3, #255	@ 0xff
 80055f0:	d815      	bhi.n	800561e <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 80055f2:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80055f4:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 80055f8:	b292      	uxth	r2, r2
 80055fa:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80055fc:	b2d2      	uxtb	r2, r2
 80055fe:	9000      	str	r0, [sp, #0]
 8005600:	e012      	b.n	8005628 <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005602:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005604:	4641      	mov	r1, r8
 8005606:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005608:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800560a:	462a      	mov	r2, r5
 800560c:	f7ff feb2 	bl	8005374 <I2C_WaitOnTXISFlagUntilTimeout>
 8005610:	b908      	cbnz	r0, 8005616 <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005612:	6823      	ldr	r3, [r4, #0]
 8005614:	e7df      	b.n	80055d6 <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 8005616:	2300      	movs	r3, #0
 8005618:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800561c:	e7a1      	b.n	8005562 <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 800561e:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8005620:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005624:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8005626:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005628:	4639      	mov	r1, r7
 800562a:	4620      	mov	r0, r4
 800562c:	f7ff fe0c 	bl	8005248 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005630:	462a      	mov	r2, r5
 8005632:	4641      	mov	r1, r8
 8005634:	4620      	mov	r0, r4
 8005636:	f7ff fe9d 	bl	8005374 <I2C_WaitOnTXISFlagUntilTimeout>
 800563a:	2800      	cmp	r0, #0
 800563c:	d191      	bne.n	8005562 <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 800563e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005640:	6822      	ldr	r2, [r4, #0]
 8005642:	f813 1b01 	ldrb.w	r1, [r3], #1
 8005646:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8005648:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 800564a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800564c:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 800564e:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8005650:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 8005652:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8005654:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8005656:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005658:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800565a:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800565c:	b29b      	uxth	r3, r3
 800565e:	b1b3      	cbz	r3, 800568e <HAL_I2C_Mem_Write+0x15a>
 8005660:	b9aa      	cbnz	r2, 800568e <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005662:	4643      	mov	r3, r8
 8005664:	2180      	movs	r1, #128	@ 0x80
 8005666:	4620      	mov	r0, r4
 8005668:	9500      	str	r5, [sp, #0]
 800566a:	f7ff fecf 	bl	800540c <I2C_WaitOnFlagUntilTimeout>
 800566e:	2800      	cmp	r0, #0
 8005670:	f47f af77 	bne.w	8005562 <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005674:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005676:	b29b      	uxth	r3, r3
 8005678:	2bff      	cmp	r3, #255	@ 0xff
 800567a:	d928      	bls.n	80056ce <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800567c:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800567e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005682:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005684:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005686:	4639      	mov	r1, r7
 8005688:	4620      	mov	r0, r4
 800568a:	f7ff fddd 	bl	8005248 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 800568e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005690:	b29b      	uxth	r3, r3
 8005692:	2b00      	cmp	r3, #0
 8005694:	d1cc      	bne.n	8005630 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005696:	462a      	mov	r2, r5
 8005698:	4641      	mov	r1, r8
 800569a:	4620      	mov	r0, r4
 800569c:	f7ff fe91 	bl	80053c2 <I2C_WaitOnSTOPFlagUntilTimeout>
 80056a0:	2800      	cmp	r0, #0
 80056a2:	f47f af5e 	bne.w	8005562 <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80056a6:	6823      	ldr	r3, [r4, #0]
 80056a8:	2120      	movs	r1, #32
 80056aa:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80056ac:	685a      	ldr	r2, [r3, #4]
 80056ae:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 80056b2:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 80056b6:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 80056ba:	f022 0201 	bic.w	r2, r2, #1
 80056be:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80056c0:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 80056c4:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80056c8:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 80056cc:	e74a      	b.n	8005564 <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 80056ce:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80056d0:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 80056d4:	b292      	uxth	r2, r2
 80056d6:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80056d8:	b2d2      	uxtb	r2, r2
 80056da:	9000      	str	r0, [sp, #0]
 80056dc:	e7d3      	b.n	8005686 <HAL_I2C_Mem_Write+0x152>
    __HAL_LOCK(hi2c);
 80056de:	2002      	movs	r0, #2
 80056e0:	e740      	b.n	8005564 <HAL_I2C_Mem_Write+0x30>
 80056e2:	bf00      	nop
 80056e4:	80002000 	.word	0x80002000

080056e8 <HAL_I2C_Mem_Read>:
{
 80056e8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80056ec:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 80056ee:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 80056f2:	4604      	mov	r4, r0
 80056f4:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 80056f6:	2b20      	cmp	r3, #32
{
 80056f8:	4616      	mov	r6, r2
 80056fa:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 80056fe:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005702:	f040 80c9 	bne.w	8005898 <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 8005706:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005708:	b113      	cbz	r3, 8005710 <HAL_I2C_Mem_Read+0x28>
 800570a:	f1ba 0f00 	cmp.w	sl, #0
 800570e:	d106      	bne.n	800571e <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005710:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8005714:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8005716:	2001      	movs	r0, #1
}
 8005718:	b003      	add	sp, #12
 800571a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 800571e:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8005722:	2b01      	cmp	r3, #1
 8005724:	f000 80b8 	beq.w	8005898 <HAL_I2C_Mem_Read+0x1b0>
 8005728:	f04f 0b01 	mov.w	fp, #1
 800572c:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8005730:	f7ff f976 	bl	8004a20 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005734:	2319      	movs	r3, #25
 8005736:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8005738:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800573a:	465a      	mov	r2, fp
 800573c:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005740:	4620      	mov	r0, r4
 8005742:	f7ff fe63 	bl	800540c <I2C_WaitOnFlagUntilTimeout>
 8005746:	4603      	mov	r3, r0
 8005748:	2800      	cmp	r0, #0
 800574a:	d1e4      	bne.n	8005716 <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800574c:	2222      	movs	r2, #34	@ 0x22
    hi2c->XferISR   = NULL;
 800574e:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005750:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005752:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005756:	2240      	movs	r2, #64	@ 0x40
 8005758:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 800575c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800575e:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005760:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8005762:	6262      	str	r2, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005764:	4a4d      	ldr	r2, [pc, #308]	@ (800589c <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferCount = Size;
 8005766:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800576a:	9200      	str	r2, [sp, #0]
 800576c:	fa5f f289 	uxtb.w	r2, r9
 8005770:	f7ff fd6a 	bl	8005248 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005774:	462a      	mov	r2, r5
 8005776:	4641      	mov	r1, r8
 8005778:	4620      	mov	r0, r4
 800577a:	f7ff fdfb 	bl	8005374 <I2C_WaitOnTXISFlagUntilTimeout>
 800577e:	bb20      	cbnz	r0, 80057ca <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005780:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005784:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005786:	d116      	bne.n	80057b6 <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005788:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 800578a:	2200      	movs	r2, #0
 800578c:	2140      	movs	r1, #64	@ 0x40
 800578e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005790:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8005792:	4643      	mov	r3, r8
 8005794:	9500      	str	r5, [sp, #0]
 8005796:	f7ff fe39 	bl	800540c <I2C_WaitOnFlagUntilTimeout>
 800579a:	b9b0      	cbnz	r0, 80057ca <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800579c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800579e:	b29b      	uxth	r3, r3
 80057a0:	2bff      	cmp	r3, #255	@ 0xff
 80057a2:	4b3f      	ldr	r3, [pc, #252]	@ (80058a0 <HAL_I2C_Mem_Read+0x1b8>)
 80057a4:	d815      	bhi.n	80057d2 <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 80057a6:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 80057a8:	b292      	uxth	r2, r2
 80057aa:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80057ac:	b2d2      	uxtb	r2, r2
 80057ae:	9300      	str	r3, [sp, #0]
 80057b0:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80057b4:	e012      	b.n	80057dc <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80057b6:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80057b8:	4641      	mov	r1, r8
 80057ba:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80057bc:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80057be:	462a      	mov	r2, r5
 80057c0:	f7ff fdd8 	bl	8005374 <I2C_WaitOnTXISFlagUntilTimeout>
 80057c4:	b908      	cbnz	r0, 80057ca <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80057c6:	6823      	ldr	r3, [r4, #0]
 80057c8:	e7de      	b.n	8005788 <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 80057ca:	2300      	movs	r3, #0
 80057cc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80057d0:	e7a1      	b.n	8005716 <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80057d2:	22ff      	movs	r2, #255	@ 0xff
 80057d4:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80057d6:	9300      	str	r3, [sp, #0]
 80057d8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80057dc:	4639      	mov	r1, r7
 80057de:	4620      	mov	r0, r4
 80057e0:	f7ff fd32 	bl	8005248 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 80057e4:	4643      	mov	r3, r8
 80057e6:	2200      	movs	r2, #0
 80057e8:	2104      	movs	r1, #4
 80057ea:	4620      	mov	r0, r4
 80057ec:	9500      	str	r5, [sp, #0]
 80057ee:	f7ff fe0d 	bl	800540c <I2C_WaitOnFlagUntilTimeout>
 80057f2:	2800      	cmp	r0, #0
 80057f4:	d18f      	bne.n	8005716 <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 80057f6:	6823      	ldr	r3, [r4, #0]
 80057f8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80057fa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80057fc:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 80057fe:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 8005800:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8005802:	3301      	adds	r3, #1
      hi2c->XferSize--;
 8005804:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 8005806:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8005808:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800580a:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 800580c:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 800580e:	8522      	strh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8005810:	b29b      	uxth	r3, r3
 8005812:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005814:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005816:	b29b      	uxth	r3, r3
 8005818:	b1b3      	cbz	r3, 8005848 <HAL_I2C_Mem_Read+0x160>
 800581a:	b9aa      	cbnz	r2, 8005848 <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 800581c:	4643      	mov	r3, r8
 800581e:	2180      	movs	r1, #128	@ 0x80
 8005820:	4620      	mov	r0, r4
 8005822:	9500      	str	r5, [sp, #0]
 8005824:	f7ff fdf2 	bl	800540c <I2C_WaitOnFlagUntilTimeout>
 8005828:	2800      	cmp	r0, #0
 800582a:	f47f af74 	bne.w	8005716 <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800582e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005830:	b29b      	uxth	r3, r3
 8005832:	2bff      	cmp	r3, #255	@ 0xff
 8005834:	d928      	bls.n	8005888 <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005836:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005838:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800583c:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 800583e:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005840:	4639      	mov	r1, r7
 8005842:	4620      	mov	r0, r4
 8005844:	f7ff fd00 	bl	8005248 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005848:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800584a:	b29b      	uxth	r3, r3
 800584c:	2b00      	cmp	r3, #0
 800584e:	d1c9      	bne.n	80057e4 <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005850:	462a      	mov	r2, r5
 8005852:	4641      	mov	r1, r8
 8005854:	4620      	mov	r0, r4
 8005856:	f7ff fdb4 	bl	80053c2 <I2C_WaitOnSTOPFlagUntilTimeout>
 800585a:	2800      	cmp	r0, #0
 800585c:	f47f af5b 	bne.w	8005716 <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005860:	6823      	ldr	r3, [r4, #0]
 8005862:	2120      	movs	r1, #32
 8005864:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005866:	685a      	ldr	r2, [r3, #4]
 8005868:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 800586c:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8005870:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8005874:	f022 0201 	bic.w	r2, r2, #1
 8005878:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800587a:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 800587e:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005882:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8005886:	e747      	b.n	8005718 <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005888:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800588a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 800588e:	b292      	uxth	r2, r2
 8005890:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005892:	b2d2      	uxtb	r2, r2
 8005894:	9000      	str	r0, [sp, #0]
 8005896:	e7d3      	b.n	8005840 <HAL_I2C_Mem_Read+0x158>
    __HAL_LOCK(hi2c);
 8005898:	2002      	movs	r0, #2
 800589a:	e73d      	b.n	8005718 <HAL_I2C_Mem_Read+0x30>
 800589c:	80002000 	.word	0x80002000
 80058a0:	80002400 	.word	0x80002400

080058a4 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80058a4:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80058a6:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 80058aa:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80058ac:	2a20      	cmp	r2, #32
 80058ae:	b2d4      	uxtb	r4, r2
 80058b0:	d11c      	bne.n	80058ec <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80058b2:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 80058b6:	2a01      	cmp	r2, #1
 80058b8:	d018      	beq.n	80058ec <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80058ba:	2224      	movs	r2, #36	@ 0x24
 80058bc:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80058c0:	6802      	ldr	r2, [r0, #0]
 80058c2:	6810      	ldr	r0, [r2, #0]
 80058c4:	f020 0001 	bic.w	r0, r0, #1
 80058c8:	6010      	str	r0, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80058ca:	6810      	ldr	r0, [r2, #0]
 80058cc:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 80058d0:	6010      	str	r0, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 80058d2:	6810      	ldr	r0, [r2, #0]
 80058d4:	4301      	orrs	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80058d6:	2000      	movs	r0, #0
    hi2c->Instance->CR1 |= AnalogFilter;
 80058d8:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 80058da:	6811      	ldr	r1, [r2, #0]
 80058dc:	f041 0101 	orr.w	r1, r1, #1
 80058e0:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80058e2:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 80058e6:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 80058ea:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 80058ec:	2002      	movs	r0, #2
 80058ee:	e7fc      	b.n	80058ea <HAL_I2CEx_ConfigAnalogFilter+0x46>

080058f0 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80058f0:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80058f2:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 80058f6:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80058f8:	2a20      	cmp	r2, #32
 80058fa:	b2d4      	uxtb	r4, r2
 80058fc:	d11b      	bne.n	8005936 <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80058fe:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8005902:	2a01      	cmp	r2, #1
 8005904:	d017      	beq.n	8005936 <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005906:	2224      	movs	r2, #36	@ 0x24
 8005908:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800590c:	6802      	ldr	r2, [r0, #0]
 800590e:	6810      	ldr	r0, [r2, #0]
 8005910:	f020 0001 	bic.w	r0, r0, #1
 8005914:	6010      	str	r0, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8005916:	6810      	ldr	r0, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8005918:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 800591c:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005920:	2000      	movs	r0, #0
    hi2c->Instance->CR1 = tmpreg;
 8005922:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8005924:	6811      	ldr	r1, [r2, #0]
 8005926:	f041 0101 	orr.w	r1, r1, #1
 800592a:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800592c:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005930:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005934:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 8005936:	2002      	movs	r0, #2
 8005938:	e7fc      	b.n	8005934 <HAL_I2CEx_ConfigDigitalFilter+0x44>

0800593a <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800593a:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800593c:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800593e:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005942:	3284      	adds	r2, #132	@ 0x84
 8005944:	1883      	adds	r3, r0, r2
{
 8005946:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800594a:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800594c:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005950:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005952:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005956:	684c      	ldr	r4, [r1, #4]
 8005958:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800595c:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005960:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005964:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005966:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005968:	68c5      	ldr	r5, [r0, #12]
 800596a:	f3c5 450b 	ubfx	r5, r5, #16, #12
 800596e:	443d      	add	r5, r7
 8005970:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005974:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005976:	68c6      	ldr	r6, [r0, #12]
 8005978:	68cd      	ldr	r5, [r1, #12]
 800597a:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800597e:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005980:	689d      	ldr	r5, [r3, #8]
 8005982:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8005986:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005988:	688d      	ldr	r5, [r1, #8]
 800598a:	68c7      	ldr	r7, [r0, #12]
 800598c:	3501      	adds	r5, #1
 800598e:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005992:	443d      	add	r5, r7
 8005994:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005998:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800599a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800599c:	691d      	ldr	r5, [r3, #16]
 800599e:	f025 0507 	bic.w	r5, r5, #7
 80059a2:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80059a4:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80059a6:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80059a8:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80059ac:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80059b0:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80059b4:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 80059b8:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80059bc:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80059c0:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80059c4:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80059c6:	695d      	ldr	r5, [r3, #20]
 80059c8:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 80059cc:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80059ce:	694d      	ldr	r5, [r1, #20]
 80059d0:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80059d2:	69dd      	ldr	r5, [r3, #28]
 80059d4:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 80059d8:	f025 0507 	bic.w	r5, r5, #7
 80059dc:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80059de:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80059e2:	433d      	orrs	r5, r7
 80059e4:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80059e6:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80059e8:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80059ea:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80059ee:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80059f0:	b31e      	cbz	r6, 8005a3a <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80059f2:	2e01      	cmp	r6, #1
 80059f4:	d023      	beq.n	8005a3e <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80059f6:	1eb5      	subs	r5, r6, #2
 80059f8:	2d02      	cmp	r5, #2
 80059fa:	d922      	bls.n	8005a42 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 80059fc:	2e07      	cmp	r6, #7
 80059fe:	bf14      	ite	ne
 8005a00:	2501      	movne	r5, #1
 8005a02:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005a04:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005a06:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005a0a:	f006 26e0 	and.w	r6, r6, #3758153728	@ 0xe000e000
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005a0e:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005a10:	62de      	str	r6, [r3, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005a12:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005a14:	6a8e      	ldr	r6, [r1, #40]	@ 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005a16:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005a18:	436e      	muls	r6, r5
 8005a1a:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005a1e:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005a20:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8005a22:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 8005a26:	f024 0407 	bic.w	r4, r4, #7
 8005a2a:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005a2c:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005a2e:	5883      	ldr	r3, [r0, r2]
 8005a30:	f043 0301 	orr.w	r3, r3, #1
 8005a34:	5083      	str	r3, [r0, r2]
}
 8005a36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005a3a:	2504      	movs	r5, #4
 8005a3c:	e7e2      	b.n	8005a04 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005a3e:	2503      	movs	r5, #3
 8005a40:	e7e0      	b.n	8005a04 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005a42:	2502      	movs	r5, #2
 8005a44:	e7de      	b.n	8005a04 <LTDC_SetConfig+0xca>
	...

08005a48 <HAL_LTDC_Init>:
{
 8005a48:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005a4a:	4604      	mov	r4, r0
 8005a4c:	2800      	cmp	r0, #0
 8005a4e:	d063      	beq.n	8005b18 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005a50:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8005a54:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005a58:	b91b      	cbnz	r3, 8005a62 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005a5a:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005a5e:	f7fb f9b5 	bl	8000dcc <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005a62:	2302      	movs	r3, #2
 8005a64:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005a68:	6823      	ldr	r3, [r4, #0]
 8005a6a:	699a      	ldr	r2, [r3, #24]
 8005a6c:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8005a70:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005a72:	6999      	ldr	r1, [r3, #24]
 8005a74:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005a78:	4302      	orrs	r2, r0
 8005a7a:	68e0      	ldr	r0, [r4, #12]
 8005a7c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005a7e:	6920      	ldr	r0, [r4, #16]
 8005a80:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005a82:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005a84:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005a86:	4925      	ldr	r1, [pc, #148]	@ (8005b1c <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005a88:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005a8a:	689a      	ldr	r2, [r3, #8]
 8005a8c:	400a      	ands	r2, r1
 8005a8e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005a90:	689a      	ldr	r2, [r3, #8]
 8005a92:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005a96:	69a0      	ldr	r0, [r4, #24]
 8005a98:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005a9a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005a9c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005a9e:	68da      	ldr	r2, [r3, #12]
 8005aa0:	400a      	ands	r2, r1
 8005aa2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005aa4:	68da      	ldr	r2, [r3, #12]
 8005aa6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005aaa:	6a20      	ldr	r0, [r4, #32]
 8005aac:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005aae:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005ab0:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005ab2:	691a      	ldr	r2, [r3, #16]
 8005ab4:	400a      	ands	r2, r1
 8005ab6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005ab8:	691a      	ldr	r2, [r3, #16]
 8005aba:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005abe:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005ac0:	4302      	orrs	r2, r0
 8005ac2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005ac4:	695a      	ldr	r2, [r3, #20]
 8005ac6:	400a      	ands	r2, r1
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005ac8:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005aca:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005acc:	695a      	ldr	r2, [r3, #20]
 8005ace:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005ad2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8005ad4:	430a      	orrs	r2, r1
 8005ad6:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005ad8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005ada:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005ade:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005ae2:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005ae6:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005ae8:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8005aea:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8005aee:	432a      	orrs	r2, r5
 8005af0:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005af4:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005af6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005afa:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005afc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005afe:	f042 0206 	orr.w	r2, r2, #6
 8005b02:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005b04:	699a      	ldr	r2, [r3, #24]
 8005b06:	f042 0201 	orr.w	r2, r2, #1
 8005b0a:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8005b0c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005b0e:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005b12:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8005b16:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005b18:	2001      	movs	r0, #1
 8005b1a:	e7fc      	b.n	8005b16 <HAL_LTDC_Init+0xce>
 8005b1c:	f000f800 	.word	0xf000f800

08005b20 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8005b20:	4770      	bx	lr

08005b22 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8005b22:	4770      	bx	lr

08005b24 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005b24:	6803      	ldr	r3, [r0, #0]
{
 8005b26:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005b28:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
{
 8005b2a:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005b2c:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005b2e:	0772      	lsls	r2, r6, #29
 8005b30:	d514      	bpl.n	8005b5c <HAL_LTDC_IRQHandler+0x38>
 8005b32:	0769      	lsls	r1, r5, #29
 8005b34:	d512      	bpl.n	8005b5c <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005b36:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005b38:	f022 0204 	bic.w	r2, r2, #4
 8005b3c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005b3e:	2204      	movs	r2, #4
 8005b40:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005b42:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8005b46:	f043 0301 	orr.w	r3, r3, #1
 8005b4a:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8005b4e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005b50:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005b54:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005b58:	f7ff ffe2 	bl	8005b20 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005b5c:	07b2      	lsls	r2, r6, #30
 8005b5e:	d516      	bpl.n	8005b8e <HAL_LTDC_IRQHandler+0x6a>
 8005b60:	07ab      	lsls	r3, r5, #30
 8005b62:	d514      	bpl.n	8005b8e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005b64:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 8005b66:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005b68:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005b6a:	f022 0202 	bic.w	r2, r2, #2
 8005b6e:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005b70:	2202      	movs	r2, #2
 8005b72:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005b74:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8005b78:	4313      	orrs	r3, r2
 8005b7a:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005b7e:	2304      	movs	r3, #4
 8005b80:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005b84:	2300      	movs	r3, #0
 8005b86:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005b8a:	f7ff ffc9 	bl	8005b20 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005b8e:	07f0      	lsls	r0, r6, #31
 8005b90:	d510      	bpl.n	8005bb4 <HAL_LTDC_IRQHandler+0x90>
 8005b92:	07e9      	lsls	r1, r5, #31
 8005b94:	d50e      	bpl.n	8005bb4 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005b96:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 8005b98:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005b9a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005b9c:	f022 0201 	bic.w	r2, r2, #1
 8005ba0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005ba2:	2201      	movs	r2, #1
 8005ba4:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8005ba6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005ba8:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005bac:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005bb0:	f7fc fa4e 	bl	8002050 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005bb4:	0732      	lsls	r2, r6, #28
 8005bb6:	d511      	bpl.n	8005bdc <HAL_LTDC_IRQHandler+0xb8>
 8005bb8:	072b      	lsls	r3, r5, #28
 8005bba:	d50f      	bpl.n	8005bdc <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005bbc:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005bbe:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005bc0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005bc2:	f022 0208 	bic.w	r2, r2, #8
 8005bc6:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005bc8:	2208      	movs	r2, #8
 8005bca:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005bcc:	2301      	movs	r3, #1
 8005bce:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005bd2:	2300      	movs	r3, #0
 8005bd4:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005bd8:	f7ff ffa3 	bl	8005b22 <HAL_LTDC_ReloadEventCallback>
}
 8005bdc:	bd70      	pop	{r4, r5, r6, pc}

08005bde <HAL_LTDC_ConfigLayer>:
{
 8005bde:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005be2:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
 8005be6:	4606      	mov	r6, r0
 8005be8:	460f      	mov	r7, r1
 8005bea:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
 8005bec:	2b01      	cmp	r3, #1
 8005bee:	f04f 0002 	mov.w	r0, #2
 8005bf2:	d01f      	beq.n	8005c34 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005bf4:	2434      	movs	r4, #52	@ 0x34
  __HAL_LOCK(hltdc);
 8005bf6:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005bfa:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005bfc:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005c00:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 8005c04:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005c08:	3438      	adds	r4, #56	@ 0x38
 8005c0a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005c0c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005c0e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005c10:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005c12:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005c14:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005c16:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005c18:	4630      	mov	r0, r6
 8005c1a:	4662      	mov	r2, ip
 8005c1c:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005c1e:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005c20:	f7ff fe8b 	bl	800593a <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005c24:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005c26:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005c28:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005c2c:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8005c30:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8005c34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005c38 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005c38:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
{
 8005c3c:	4603      	mov	r3, r0
 8005c3e:	2002      	movs	r0, #2
  __HAL_LOCK(hltdc);
 8005c40:	2a01      	cmp	r2, #1
 8005c42:	d012      	beq.n	8005c6a <HAL_LTDC_ProgramLineEvent+0x32>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005c44:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005c46:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005c4a:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8005c4c:	f020 0001 	bic.w	r0, r0, #1
 8005c50:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005c52:	4806      	ldr	r0, [pc, #24]	@ (8005c6c <HAL_LTDC_ProgramLineEvent+0x34>)
 8005c54:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_UNLOCK(hltdc);
 8005c56:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005c58:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8005c5a:	f041 0101 	orr.w	r1, r1, #1
 8005c5e:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8005c60:	2201      	movs	r2, #1
  __HAL_UNLOCK(hltdc);
 8005c62:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005c66:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
}
 8005c6a:	4770      	bx	lr
 8005c6c:	40016800 	.word	0x40016800

08005c70 <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 8005c70:	4b19      	ldr	r3, [pc, #100]	@ (8005cd8 <HAL_PWREx_EnableOverDrive+0x68>)
{
 8005c72:	b537      	push	{r0, r1, r2, r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 8005c74:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005c76:	4c19      	ldr	r4, [pc, #100]	@ (8005cdc <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8005c78:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005c7c:	641a      	str	r2, [r3, #64]	@ 0x40
 8005c7e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005c80:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005c84:	9301      	str	r3, [sp, #4]
 8005c86:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005c88:	6823      	ldr	r3, [r4, #0]
 8005c8a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005c8e:	6023      	str	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8005c90:	f7fe fec6 	bl	8004a20 <HAL_GetTick>
 8005c94:	4605      	mov	r5, r0

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005c96:	6863      	ldr	r3, [r4, #4]
 8005c98:	03da      	lsls	r2, r3, #15
 8005c9a:	d50c      	bpl.n	8005cb6 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005c9c:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005c9e:	4d0f      	ldr	r5, [pc, #60]	@ (8005cdc <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005ca0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005ca4:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8005ca6:	f7fe febb 	bl	8004a20 <HAL_GetTick>
 8005caa:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005cac:	686b      	ldr	r3, [r5, #4]
 8005cae:	039b      	lsls	r3, r3, #14
 8005cb0:	d50a      	bpl.n	8005cc8 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8005cb2:	2000      	movs	r0, #0
 8005cb4:	e006      	b.n	8005cc4 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005cb6:	f7fe feb3 	bl	8004a20 <HAL_GetTick>
 8005cba:	1b40      	subs	r0, r0, r5
 8005cbc:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8005cc0:	d9e9      	bls.n	8005c96 <HAL_PWREx_EnableOverDrive+0x26>
      return HAL_TIMEOUT;
 8005cc2:	2003      	movs	r0, #3
}
 8005cc4:	b003      	add	sp, #12
 8005cc6:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005cc8:	f7fe feaa 	bl	8004a20 <HAL_GetTick>
 8005ccc:	1b00      	subs	r0, r0, r4
 8005cce:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8005cd2:	d9eb      	bls.n	8005cac <HAL_PWREx_EnableOverDrive+0x3c>
 8005cd4:	e7f5      	b.n	8005cc2 <HAL_PWREx_EnableOverDrive+0x52>
 8005cd6:	bf00      	nop
 8005cd8:	40023800 	.word	0x40023800
 8005cdc:	40007000 	.word	0x40007000

08005ce0 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8005ce0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8005ce4:	6a4e      	ldr	r6, [r1, #36]	@ 0x24
 8005ce6:	b136      	cbz	r6, 8005cf6 <QSPI_Config+0x16>
 8005ce8:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
 8005cec:	d003      	beq.n	8005cf6 <QSPI_Config+0x16>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005cee:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8005cf0:	6804      	ldr	r4, [r0, #0]
 8005cf2:	3b01      	subs	r3, #1
 8005cf4:	6123      	str	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005cf6:	f8d1 a018 	ldr.w	sl, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005cfa:	e9d1 7e07 	ldrd	r7, lr, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005cfe:	f1ba 0f00 	cmp.w	sl, #0
 8005d02:	d04c      	beq.n	8005d9e <QSPI_Config+0xbe>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d04:	694c      	ldr	r4, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005d06:	6805      	ldr	r5, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d08:	ea4f 4c84 	mov.w	ip, r4, lsl #18
 8005d0c:	ea4a 0406 	orr.w	r4, sl, r6
 8005d10:	680b      	ldr	r3, [r1, #0]
 8005d12:	f8d1 8034 	ldr.w	r8, [r1, #52]	@ 0x34
 8005d16:	ea44 0a02 	orr.w	sl, r4, r2
 8005d1a:	e9d1 090b 	ldrd	r0, r9, [r1, #44]	@ 0x2c
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005d1e:	f1be 0f00 	cmp.w	lr, #0
 8005d22:	d024      	beq.n	8005d6e <QSPI_Config+0x8e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005d24:	688e      	ldr	r6, [r1, #8]
 8005d26:	ea4a 040e 	orr.w	r4, sl, lr
 8005d2a:	61ee      	str	r6, [r5, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d2c:	690e      	ldr	r6, [r1, #16]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005d2e:	b19f      	cbz	r7, 8005d58 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d30:	433b      	orrs	r3, r7
 8005d32:	4303      	orrs	r3, r0
 8005d34:	68c8      	ldr	r0, [r1, #12]
 8005d36:	ea43 0309 	orr.w	r3, r3, r9
 8005d3a:	ea43 0308 	orr.w	r3, r3, r8
 8005d3e:	4333      	orrs	r3, r6
 8005d40:	4303      	orrs	r3, r0
 8005d42:	ea43 030c 	orr.w	r3, r3, ip
 8005d46:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005d48:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d4c:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005d4e:	d001      	beq.n	8005d54 <QSPI_Config+0x74>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005d50:	684b      	ldr	r3, [r1, #4]
 8005d52:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8005d54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d58:	4303      	orrs	r3, r0
 8005d5a:	ea43 0309 	orr.w	r3, r3, r9
 8005d5e:	ea43 0308 	orr.w	r3, r3, r8
 8005d62:	4333      	orrs	r3, r6
 8005d64:	ea43 030c 	orr.w	r3, r3, ip
 8005d68:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d6a:	616b      	str	r3, [r5, #20]
 8005d6c:	e7f2      	b.n	8005d54 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005d6e:	b167      	cbz	r7, 8005d8a <QSPI_Config+0xaa>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d70:	433b      	orrs	r3, r7
 8005d72:	4303      	orrs	r3, r0
 8005d74:	68c8      	ldr	r0, [r1, #12]
 8005d76:	ea43 0309 	orr.w	r3, r3, r9
 8005d7a:	ea43 0308 	orr.w	r3, r3, r8
 8005d7e:	4303      	orrs	r3, r0
 8005d80:	ea43 030c 	orr.w	r3, r3, ip
 8005d84:	ea43 030a 	orr.w	r3, r3, sl
 8005d88:	e7de      	b.n	8005d48 <QSPI_Config+0x68>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d8a:	4303      	orrs	r3, r0
 8005d8c:	ea43 0309 	orr.w	r3, r3, r9
 8005d90:	ea43 0408 	orr.w	r4, r3, r8
 8005d94:	ea44 030c 	orr.w	r3, r4, ip
 8005d98:	ea43 030a 	orr.w	r3, r3, sl
 8005d9c:	e7e5      	b.n	8005d6a <QSPI_Config+0x8a>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005d9e:	f1be 0f00 	cmp.w	lr, #0
 8005da2:	d02c      	beq.n	8005dfe <QSPI_Config+0x11e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005da4:	ea46 050e 	orr.w	r5, r6, lr
 8005da8:	688b      	ldr	r3, [r1, #8]
 8005daa:	6804      	ldr	r4, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005dac:	694e      	ldr	r6, [r1, #20]
 8005dae:	4315      	orrs	r5, r2
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005db0:	61e3      	str	r3, [r4, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005db2:	f8d1 c034 	ldr.w	ip, [r1, #52]	@ 0x34
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005db6:	04b6      	lsls	r6, r6, #18
 8005db8:	690b      	ldr	r3, [r1, #16]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005dba:	e9d1 8e0b 	ldrd	r8, lr, [r1, #44]	@ 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005dbe:	b1a7      	cbz	r7, 8005dea <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005dc0:	433b      	orrs	r3, r7
 8005dc2:	68c8      	ldr	r0, [r1, #12]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005dc4:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005dc8:	ea43 0308 	orr.w	r3, r3, r8
 8005dcc:	ea43 030e 	orr.w	r3, r3, lr
 8005dd0:	ea43 030c 	orr.w	r3, r3, ip
 8005dd4:	ea43 0300 	orr.w	r3, r3, r0
 8005dd8:	ea43 0306 	orr.w	r3, r3, r6
 8005ddc:	ea43 0305 	orr.w	r3, r3, r5
 8005de0:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005de2:	d0b7      	beq.n	8005d54 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005de4:	684b      	ldr	r3, [r1, #4]
 8005de6:	61a3      	str	r3, [r4, #24]
 8005de8:	e7b4      	b.n	8005d54 <QSPI_Config+0x74>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005dea:	ea43 0308 	orr.w	r3, r3, r8
 8005dee:	ea43 030e 	orr.w	r3, r3, lr
 8005df2:	ea43 030c 	orr.w	r3, r3, ip
 8005df6:	4333      	orrs	r3, r6
 8005df8:	432b      	orrs	r3, r5
 8005dfa:	6163      	str	r3, [r4, #20]
 8005dfc:	e7aa      	b.n	8005d54 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005dfe:	b1d7      	cbz	r7, 8005e36 <QSPI_Config+0x156>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005e00:	ea46 0307 	orr.w	r3, r6, r7
 8005e04:	6acc      	ldr	r4, [r1, #44]	@ 0x2c
 8005e06:	6800      	ldr	r0, [r0, #0]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005e08:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005e0c:	ea43 0302 	orr.w	r3, r3, r2
 8005e10:	ea43 0304 	orr.w	r3, r3, r4
 8005e14:	6b0c      	ldr	r4, [r1, #48]	@ 0x30
 8005e16:	ea43 0304 	orr.w	r3, r3, r4
 8005e1a:	6b4c      	ldr	r4, [r1, #52]	@ 0x34
 8005e1c:	ea43 0304 	orr.w	r3, r3, r4
 8005e20:	68cc      	ldr	r4, [r1, #12]
 8005e22:	ea43 0304 	orr.w	r3, r3, r4
 8005e26:	694c      	ldr	r4, [r1, #20]
 8005e28:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8005e2c:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005e2e:	d091      	beq.n	8005d54 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005e30:	684b      	ldr	r3, [r1, #4]
 8005e32:	6183      	str	r3, [r0, #24]
 8005e34:	e78e      	b.n	8005d54 <QSPI_Config+0x74>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8005e36:	2e00      	cmp	r6, #0
 8005e38:	d08c      	beq.n	8005d54 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005e3a:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 8005e3c:	6800      	ldr	r0, [r0, #0]
 8005e3e:	4333      	orrs	r3, r6
 8005e40:	4313      	orrs	r3, r2
 8005e42:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 8005e44:	4313      	orrs	r3, r2
 8005e46:	6b4a      	ldr	r2, [r1, #52]	@ 0x34
 8005e48:	4313      	orrs	r3, r2
 8005e4a:	694a      	ldr	r2, [r1, #20]
 8005e4c:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8005e50:	6143      	str	r3, [r0, #20]
}
 8005e52:	e77f      	b.n	8005d54 <QSPI_Config+0x74>

08005e54 <QSPI_WaitFlagStateUntilTimeout>:
{
 8005e54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005e58:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005e5c:	4604      	mov	r4, r0
 8005e5e:	460e      	mov	r6, r1
 8005e60:	4615      	mov	r5, r2
 8005e62:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8005e64:	6822      	ldr	r2, [r4, #0]
 8005e66:	6893      	ldr	r3, [r2, #8]
 8005e68:	4233      	tst	r3, r6
 8005e6a:	bf14      	ite	ne
 8005e6c:	2301      	movne	r3, #1
 8005e6e:	2300      	moveq	r3, #0
 8005e70:	42ab      	cmp	r3, r5
 8005e72:	d101      	bne.n	8005e78 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8005e74:	2000      	movs	r0, #0
 8005e76:	e012      	b.n	8005e9e <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005e78:	f1b8 3fff 	cmp.w	r8, #4294967295
 8005e7c:	d0f3      	beq.n	8005e66 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005e7e:	f7fe fdcf 	bl	8004a20 <HAL_GetTick>
 8005e82:	1bc0      	subs	r0, r0, r7
 8005e84:	4540      	cmp	r0, r8
 8005e86:	d802      	bhi.n	8005e8e <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8005e88:	f1b8 0f00 	cmp.w	r8, #0
 8005e8c:	d1ea      	bne.n	8005e64 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8005e8e:	2304      	movs	r3, #4
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8005e90:	2001      	movs	r0, #1
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8005e92:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8005e96:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8005e98:	f043 0301 	orr.w	r3, r3, #1
 8005e9c:	6463      	str	r3, [r4, #68]	@ 0x44
}
 8005e9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005ea4 <HAL_QSPI_Init>:
{
 8005ea4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005ea6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005ea8:	f7fe fdba 	bl	8004a20 <HAL_GetTick>
 8005eac:	4605      	mov	r5, r0
  if(hqspi == NULL)
 8005eae:	2c00      	cmp	r4, #0
 8005eb0:	d046      	beq.n	8005f40 <HAL_QSPI_Init+0x9c>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8005eb2:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8005eb6:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005eba:	b93b      	cbnz	r3, 8005ecc <HAL_QSPI_Init+0x28>
    HAL_QSPI_MspInit(hqspi);
 8005ebc:	4620      	mov	r0, r4
    hqspi->Lock = HAL_UNLOCKED;
 8005ebe:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    HAL_QSPI_MspInit(hqspi);
 8005ec2:	f7fb f831 	bl	8000f28 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8005ec6:	f241 3388 	movw	r3, #5000	@ 0x1388
 8005eca:	64a3      	str	r3, [r4, #72]	@ 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005ecc:	6821      	ldr	r1, [r4, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005ece:	4620      	mov	r0, r4
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005ed0:	68a3      	ldr	r3, [r4, #8]
 8005ed2:	680a      	ldr	r2, [r1, #0]
 8005ed4:	3b01      	subs	r3, #1
 8005ed6:	f422 52f8 	bic.w	r2, r2, #7936	@ 0x1f00
 8005eda:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005ede:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005ee0:	600a      	str	r2, [r1, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005ee2:	2200      	movs	r2, #0
 8005ee4:	9300      	str	r3, [sp, #0]
 8005ee6:	2120      	movs	r1, #32
 8005ee8:	462b      	mov	r3, r5
 8005eea:	f7ff ffb3 	bl	8005e54 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8005eee:	bb10      	cbnz	r0, 8005f36 <HAL_QSPI_Init+0x92>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8005ef0:	6822      	ldr	r2, [r4, #0]
 8005ef2:	69e5      	ldr	r5, [r4, #28]
 8005ef4:	68e3      	ldr	r3, [r4, #12]
 8005ef6:	6811      	ldr	r1, [r2, #0]
 8005ef8:	432b      	orrs	r3, r5
 8005efa:	6a25      	ldr	r5, [r4, #32]
 8005efc:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8005f00:	432b      	orrs	r3, r5
 8005f02:	6865      	ldr	r5, [r4, #4]
 8005f04:	f021 01d0 	bic.w	r1, r1, #208	@ 0xd0
 8005f08:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8005f0c:	430b      	orrs	r3, r1
 8005f0e:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8005f10:	6855      	ldr	r5, [r2, #4]
 8005f12:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005f16:	430b      	orrs	r3, r1
 8005f18:	6921      	ldr	r1, [r4, #16]
 8005f1a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005f1e:	4909      	ldr	r1, [pc, #36]	@ (8005f44 <HAL_QSPI_Init+0xa0>)
 8005f20:	4029      	ands	r1, r5
 8005f22:	430b      	orrs	r3, r1
 8005f24:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8005f26:	6813      	ldr	r3, [r2, #0]
 8005f28:	f043 0301 	orr.w	r3, r3, #1
 8005f2c:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8005f2e:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005f30:	6460      	str	r0, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8005f32:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005f36:	2300      	movs	r3, #0
 8005f38:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005f3c:	b003      	add	sp, #12
 8005f3e:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8005f40:	2001      	movs	r0, #1
 8005f42:	e7fb      	b.n	8005f3c <HAL_QSPI_Init+0x98>
 8005f44:	ffe0f8fe 	.word	0xffe0f8fe

08005f48 <HAL_QSPI_DeInit>:
{
 8005f48:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8005f4a:	4604      	mov	r4, r0
 8005f4c:	b168      	cbz	r0, 8005f6a <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8005f4e:	6802      	ldr	r2, [r0, #0]
 8005f50:	6813      	ldr	r3, [r2, #0]
 8005f52:	f023 0301 	bic.w	r3, r3, #1
 8005f56:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8005f58:	f7fb f854 	bl	8001004 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005f5c:	2000      	movs	r0, #0
 8005f5e:	6460      	str	r0, [r4, #68]	@ 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8005f60:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005f64:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
}
 8005f68:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005f6a:	2001      	movs	r0, #1
 8005f6c:	e7fc      	b.n	8005f68 <HAL_QSPI_DeInit+0x20>

08005f6e <HAL_QSPI_Command>:
{
 8005f6e:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005f72:	4604      	mov	r4, r0
 8005f74:	468a      	mov	sl, r1
 8005f76:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005f78:	f7fe fd52 	bl	8004a20 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005f7c:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 8005f80:	4607      	mov	r7, r0
  __HAL_LOCK(hqspi);
 8005f82:	2b01      	cmp	r3, #1
 8005f84:	d036      	beq.n	8005ff4 <HAL_QSPI_Command+0x86>
 8005f86:	2301      	movs	r3, #1
 8005f88:	2602      	movs	r6, #2
 8005f8a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005f8e:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8005f92:	2b01      	cmp	r3, #1
 8005f94:	fa5f f983 	uxtb.w	r9, r3
 8005f98:	d128      	bne.n	8005fec <HAL_QSPI_Command+0x7e>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005f9a:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005f9c:	4603      	mov	r3, r0
 8005f9e:	2120      	movs	r1, #32
 8005fa0:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005fa2:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8005fa4:	f884 6041 	strb.w	r6, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005fa8:	f8cd 8000 	str.w	r8, [sp]
 8005fac:	f7ff ff52 	bl	8005e54 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005fb0:	4605      	mov	r5, r0
 8005fb2:	b9a0      	cbnz	r0, 8005fde <HAL_QSPI_Command+0x70>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005fb4:	4602      	mov	r2, r0
 8005fb6:	4651      	mov	r1, sl
 8005fb8:	4620      	mov	r0, r4
 8005fba:	f7ff fe91 	bl	8005ce0 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8005fbe:	f8da 3024 	ldr.w	r3, [sl, #36]	@ 0x24
 8005fc2:	b953      	cbnz	r3, 8005fda <HAL_QSPI_Command+0x6c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005fc4:	463b      	mov	r3, r7
 8005fc6:	464a      	mov	r2, r9
 8005fc8:	4631      	mov	r1, r6
 8005fca:	4620      	mov	r0, r4
 8005fcc:	f8cd 8000 	str.w	r8, [sp]
 8005fd0:	f7ff ff40 	bl	8005e54 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005fd4:	b960      	cbnz	r0, 8005ff0 <HAL_QSPI_Command+0x82>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005fd6:	6823      	ldr	r3, [r4, #0]
 8005fd8:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005fda:	f884 9041 	strb.w	r9, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005fde:	2300      	movs	r3, #0
 8005fe0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005fe4:	4628      	mov	r0, r5
 8005fe6:	b002      	add	sp, #8
 8005fe8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    status = HAL_BUSY;
 8005fec:	4635      	mov	r5, r6
 8005fee:	e7f6      	b.n	8005fde <HAL_QSPI_Command+0x70>
 8005ff0:	4605      	mov	r5, r0
 8005ff2:	e7f4      	b.n	8005fde <HAL_QSPI_Command+0x70>
  __HAL_LOCK(hqspi);
 8005ff4:	2502      	movs	r5, #2
 8005ff6:	e7f5      	b.n	8005fe4 <HAL_QSPI_Command+0x76>

08005ff8 <HAL_QSPI_AutoPolling>:
{
 8005ff8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005ffc:	4604      	mov	r4, r0
 8005ffe:	461f      	mov	r7, r3
 8006000:	4689      	mov	r9, r1
 8006002:	4615      	mov	r5, r2
  uint32_t tickstart = HAL_GetTick();
 8006004:	f7fe fd0c 	bl	8004a20 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006008:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 800600c:	4606      	mov	r6, r0
  __HAL_LOCK(hqspi);
 800600e:	2b01      	cmp	r3, #1
 8006010:	d041      	beq.n	8006096 <HAL_QSPI_AutoPolling+0x9e>
 8006012:	2301      	movs	r3, #1
 8006014:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006018:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 800601c:	2b01      	cmp	r3, #1
 800601e:	fa5f f883 	uxtb.w	r8, r3
 8006022:	d136      	bne.n	8006092 <HAL_QSPI_AutoPolling+0x9a>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8006024:	2342      	movs	r3, #66	@ 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006026:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006028:	2120      	movs	r1, #32
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800602a:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800602c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006030:	4603      	mov	r3, r0
 8006032:	9700      	str	r7, [sp, #0]
 8006034:	4620      	mov	r0, r4
 8006036:	f7ff ff0d 	bl	8005e54 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800603a:	bb20      	cbnz	r0, 8006086 <HAL_QSPI_AutoPolling+0x8e>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800603c:	6822      	ldr	r2, [r4, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800603e:	4620      	mov	r0, r4
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8006040:	682b      	ldr	r3, [r5, #0]
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8006042:	6929      	ldr	r1, [r5, #16]
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8006044:	6293      	str	r3, [r2, #40]	@ 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8006046:	686b      	ldr	r3, [r5, #4]
 8006048:	6253      	str	r3, [r2, #36]	@ 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800604a:	68ab      	ldr	r3, [r5, #8]
 800604c:	62d3      	str	r3, [r2, #44]	@ 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800604e:	6813      	ldr	r3, [r2, #0]
 8006050:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8006054:	430b      	orrs	r3, r1
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8006056:	4649      	mov	r1, r9
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8006058:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800605c:	6013      	str	r3, [r2, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800605e:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
      cmd->NbData = cfg->StatusBytesSize;
 8006062:	68eb      	ldr	r3, [r5, #12]
 8006064:	f8c9 3028 	str.w	r3, [r9, #40]	@ 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8006068:	f7ff fe3a 	bl	8005ce0 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800606c:	4633      	mov	r3, r6
 800606e:	4642      	mov	r2, r8
 8006070:	2108      	movs	r1, #8
 8006072:	4620      	mov	r0, r4
 8006074:	9700      	str	r7, [sp, #0]
 8006076:	f7ff feed 	bl	8005e54 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800607a:	b920      	cbnz	r0, 8006086 <HAL_QSPI_AutoPolling+0x8e>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800607c:	6823      	ldr	r3, [r4, #0]
 800607e:	2208      	movs	r2, #8
 8006080:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8006082:	f884 8041 	strb.w	r8, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8006086:	2300      	movs	r3, #0
 8006088:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 800608c:	b003      	add	sp, #12
 800608e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8006092:	2002      	movs	r0, #2
 8006094:	e7f7      	b.n	8006086 <HAL_QSPI_AutoPolling+0x8e>
  __HAL_LOCK(hqspi);
 8006096:	2002      	movs	r0, #2
 8006098:	e7f8      	b.n	800608c <HAL_QSPI_AutoPolling+0x94>

0800609a <HAL_QSPI_MemoryMapped>:
{
 800609a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800609c:	4604      	mov	r4, r0
 800609e:	4616      	mov	r6, r2
 80060a0:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80060a2:	f7fe fcbd 	bl	8004a20 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80060a6:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 80060aa:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80060ac:	2a01      	cmp	r2, #1
 80060ae:	d033      	beq.n	8006118 <HAL_QSPI_MemoryMapped+0x7e>
 80060b0:	2201      	movs	r2, #1
 80060b2:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80060b6:	f894 2041 	ldrb.w	r2, [r4, #65]	@ 0x41
 80060ba:	2a01      	cmp	r2, #1
 80060bc:	d12a      	bne.n	8006114 <HAL_QSPI_MemoryMapped+0x7a>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80060be:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80060c0:	2182      	movs	r1, #130	@ 0x82
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80060c2:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80060c4:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80060c6:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80060ca:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 80060cc:	9100      	str	r1, [sp, #0]
 80060ce:	2120      	movs	r1, #32
 80060d0:	f7ff fec0 	bl	8005e54 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80060d4:	4605      	mov	r5, r0
 80060d6:	b9b8      	cbnz	r0, 8006108 <HAL_QSPI_MemoryMapped+0x6e>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80060d8:	6823      	ldr	r3, [r4, #0]
 80060da:	6872      	ldr	r2, [r6, #4]
 80060dc:	6818      	ldr	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80060de:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80060e0:	f020 0008 	bic.w	r0, r0, #8
 80060e4:	ea40 0002 	orr.w	r0, r0, r2
 80060e8:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80060ea:	d107      	bne.n	80060fc <HAL_QSPI_MemoryMapped+0x62>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 80060ec:	6832      	ldr	r2, [r6, #0]
 80060ee:	631a      	str	r2, [r3, #48]	@ 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 80060f0:	2210      	movs	r2, #16
 80060f2:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 80060f4:	681a      	ldr	r2, [r3, #0]
 80060f6:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 80060fa:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 80060fc:	f04f 6240 	mov.w	r2, #201326592	@ 0xc000000
 8006100:	4639      	mov	r1, r7
 8006102:	4620      	mov	r0, r4
 8006104:	f7ff fdec 	bl	8005ce0 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8006108:	2300      	movs	r3, #0
 800610a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 800610e:	4628      	mov	r0, r5
 8006110:	b003      	add	sp, #12
 8006112:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8006114:	2502      	movs	r5, #2
 8006116:	e7f7      	b.n	8006108 <HAL_QSPI_MemoryMapped+0x6e>
  __HAL_LOCK(hqspi);
 8006118:	2502      	movs	r5, #2
 800611a:	e7f8      	b.n	800610e <HAL_QSPI_MemoryMapped+0x74>

0800611c <HAL_QSPI_Abort>:
{
 800611c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800611e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006120:	f7fe fc7e 	bl	8004a20 <HAL_GetTick>
 8006124:	4605      	mov	r5, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8006126:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 800612a:	0798      	lsls	r0, r3, #30
 800612c:	d534      	bpl.n	8006198 <HAL_QSPI_Abort+0x7c>
    __HAL_UNLOCK(hqspi);
 800612e:	2300      	movs	r3, #0
 8006130:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8006134:	6823      	ldr	r3, [r4, #0]
 8006136:	681a      	ldr	r2, [r3, #0]
 8006138:	0751      	lsls	r1, r2, #29
 800613a:	d507      	bpl.n	800614c <HAL_QSPI_Abort+0x30>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800613c:	681a      	ldr	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800613e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8006140:	f022 0204 	bic.w	r2, r2, #4
 8006144:	601a      	str	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8006146:	f7fe fd90 	bl	8004c6a <HAL_DMA_Abort>
      if(status != HAL_OK)
 800614a:	bb40      	cbnz	r0, 800619e <HAL_QSPI_Abort+0x82>
  HAL_StatusTypeDef status = HAL_OK;
 800614c:	2000      	movs	r0, #0
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 800614e:	6823      	ldr	r3, [r4, #0]
 8006150:	689a      	ldr	r2, [r3, #8]
 8006152:	0692      	lsls	r2, r2, #26
 8006154:	d528      	bpl.n	80061a8 <HAL_QSPI_Abort+0x8c>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8006156:	681a      	ldr	r2, [r3, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8006158:	2102      	movs	r1, #2
 800615a:	4620      	mov	r0, r4
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800615c:	f042 0202 	orr.w	r2, r2, #2
 8006160:	601a      	str	r2, [r3, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8006162:	2201      	movs	r2, #1
 8006164:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8006166:	9300      	str	r3, [sp, #0]
 8006168:	462b      	mov	r3, r5
 800616a:	f7ff fe73 	bl	8005e54 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800616e:	b9a0      	cbnz	r0, 800619a <HAL_QSPI_Abort+0x7e>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006170:	6823      	ldr	r3, [r4, #0]
 8006172:	2202      	movs	r2, #2
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006174:	2120      	movs	r1, #32
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006176:	60da      	str	r2, [r3, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006178:	4602      	mov	r2, r0
 800617a:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800617c:	4620      	mov	r0, r4
 800617e:	9300      	str	r3, [sp, #0]
 8006180:	462b      	mov	r3, r5
 8006182:	f7ff fe67 	bl	8005e54 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006186:	b940      	cbnz	r0, 800619a <HAL_QSPI_Abort+0x7e>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8006188:	6822      	ldr	r2, [r4, #0]
 800618a:	6953      	ldr	r3, [r2, #20]
 800618c:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8006190:	6153      	str	r3, [r2, #20]
        hqspi->State = HAL_QSPI_STATE_READY;
 8006192:	2301      	movs	r3, #1
 8006194:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  HAL_StatusTypeDef status = HAL_OK;
 8006198:	2000      	movs	r0, #0
}
 800619a:	b003      	add	sp, #12
 800619c:	bd30      	pop	{r4, r5, pc}
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 800619e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80061a0:	f043 0304 	orr.w	r3, r3, #4
 80061a4:	6463      	str	r3, [r4, #68]	@ 0x44
 80061a6:	e7d2      	b.n	800614e <HAL_QSPI_Abort+0x32>
      hqspi->State = HAL_QSPI_STATE_READY;
 80061a8:	2301      	movs	r3, #1
 80061aa:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 80061ae:	e7f4      	b.n	800619a <HAL_QSPI_Abort+0x7e>

080061b0 <HAL_QSPI_Transmit>:
{
 80061b0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80061b4:	4604      	mov	r4, r0
 80061b6:	4688      	mov	r8, r1
 80061b8:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 80061ba:	f7fe fc31 	bl	8004a20 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80061be:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 80061c2:	4606      	mov	r6, r0
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 80061c4:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 80061c6:	2b01      	cmp	r3, #1
 80061c8:	d04f      	beq.n	800626a <HAL_QSPI_Transmit+0xba>
 80061ca:	2301      	movs	r3, #1
 80061cc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80061d0:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 80061d4:	2b01      	cmp	r3, #1
 80061d6:	b2d8      	uxtb	r0, r3
 80061d8:	d145      	bne.n	8006266 <HAL_QSPI_Transmit+0xb6>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80061da:	2300      	movs	r3, #0
 80061dc:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 80061de:	f1b8 0f00 	cmp.w	r8, #0
 80061e2:	d03b      	beq.n	800625c <HAL_QSPI_Transmit+0xac>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 80061e4:	2312      	movs	r3, #18
 80061e6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80061ea:	692b      	ldr	r3, [r5, #16]
 80061ec:	3301      	adds	r3, #1
 80061ee:	62e3      	str	r3, [r4, #44]	@ 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80061f0:	692b      	ldr	r3, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 80061f2:	f8c4 8024 	str.w	r8, [r4, #36]	@ 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80061f6:	3301      	adds	r3, #1
 80061f8:	62a3      	str	r3, [r4, #40]	@ 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80061fa:	696b      	ldr	r3, [r5, #20]
 80061fc:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8006200:	616b      	str	r3, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8006202:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8006204:	b9b3      	cbnz	r3, 8006234 <HAL_QSPI_Transmit+0x84>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006206:	4633      	mov	r3, r6
 8006208:	2201      	movs	r2, #1
 800620a:	2102      	movs	r1, #2
 800620c:	4620      	mov	r0, r4
 800620e:	9700      	str	r7, [sp, #0]
 8006210:	f7ff fe20 	bl	8005e54 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006214:	b928      	cbnz	r0, 8006222 <HAL_QSPI_Transmit+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006216:	6823      	ldr	r3, [r4, #0]
 8006218:	2202      	movs	r2, #2
          status = HAL_QSPI_Abort(hqspi);
 800621a:	4620      	mov	r0, r4
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800621c:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800621e:	f7ff ff7d 	bl	800611c <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8006222:	2301      	movs	r3, #1
 8006224:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8006228:	2300      	movs	r3, #0
 800622a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 800622e:	b002      	add	sp, #8
 8006230:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8006234:	4633      	mov	r3, r6
 8006236:	2201      	movs	r2, #1
 8006238:	2104      	movs	r1, #4
 800623a:	4620      	mov	r0, r4
 800623c:	9700      	str	r7, [sp, #0]
 800623e:	f7ff fe09 	bl	8005e54 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8006242:	2800      	cmp	r0, #0
 8006244:	d1ed      	bne.n	8006222 <HAL_QSPI_Transmit+0x72>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8006246:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006248:	781b      	ldrb	r3, [r3, #0]
 800624a:	f885 3020 	strb.w	r3, [r5, #32]
        hqspi->pTxBuffPtr++;
 800624e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006250:	3301      	adds	r3, #1
 8006252:	6263      	str	r3, [r4, #36]	@ 0x24
        hqspi->TxXferCount--;
 8006254:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8006256:	3b01      	subs	r3, #1
 8006258:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800625a:	e7d2      	b.n	8006202 <HAL_QSPI_Transmit+0x52>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800625c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800625e:	f043 0308 	orr.w	r3, r3, #8
 8006262:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 8006264:	e7e0      	b.n	8006228 <HAL_QSPI_Transmit+0x78>
    status = HAL_BUSY;
 8006266:	2002      	movs	r0, #2
 8006268:	e7de      	b.n	8006228 <HAL_QSPI_Transmit+0x78>
  __HAL_LOCK(hqspi);
 800626a:	2002      	movs	r0, #2
 800626c:	e7df      	b.n	800622e <HAL_QSPI_Transmit+0x7e>

0800626e <HAL_QSPI_Receive>:
{
 800626e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006272:	4604      	mov	r4, r0
 8006274:	4616      	mov	r6, r2
 8006276:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8006278:	f7fe fbd2 	bl	8004a20 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800627c:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 800627e:	4607      	mov	r7, r0
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8006280:	69aa      	ldr	r2, [r5, #24]
  __HAL_LOCK(hqspi);
 8006282:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8006286:	2b01      	cmp	r3, #1
 8006288:	d052      	beq.n	8006330 <HAL_QSPI_Receive+0xc2>
 800628a:	2301      	movs	r3, #1
 800628c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006290:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8006294:	2b01      	cmp	r3, #1
 8006296:	b2d8      	uxtb	r0, r3
 8006298:	d148      	bne.n	800632c <HAL_QSPI_Receive+0xbe>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800629a:	2300      	movs	r3, #0
 800629c:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 800629e:	f1b8 0f00 	cmp.w	r8, #0
 80062a2:	d03e      	beq.n	8006322 <HAL_QSPI_Receive+0xb4>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 80062a4:	2322      	movs	r3, #34	@ 0x22
 80062a6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80062aa:	692b      	ldr	r3, [r5, #16]
 80062ac:	3301      	adds	r3, #1
 80062ae:	63a3      	str	r3, [r4, #56]	@ 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80062b0:	692b      	ldr	r3, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 80062b2:	f8c4 8030 	str.w	r8, [r4, #48]	@ 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80062b6:	3301      	adds	r3, #1
 80062b8:	6363      	str	r3, [r4, #52]	@ 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80062ba:	6969      	ldr	r1, [r5, #20]
 80062bc:	f021 6140 	bic.w	r1, r1, #201326592	@ 0xc000000
 80062c0:	f041 6180 	orr.w	r1, r1, #67108864	@ 0x4000000
 80062c4:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 80062c6:	61aa      	str	r2, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 80062c8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80062ca:	b9b3      	cbnz	r3, 80062fa <HAL_QSPI_Receive+0x8c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80062cc:	463b      	mov	r3, r7
 80062ce:	2201      	movs	r2, #1
 80062d0:	2102      	movs	r1, #2
 80062d2:	4620      	mov	r0, r4
 80062d4:	9600      	str	r6, [sp, #0]
 80062d6:	f7ff fdbd 	bl	8005e54 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 80062da:	b928      	cbnz	r0, 80062e8 <HAL_QSPI_Receive+0x7a>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80062dc:	6823      	ldr	r3, [r4, #0]
 80062de:	2202      	movs	r2, #2
          status = HAL_QSPI_Abort(hqspi);
 80062e0:	4620      	mov	r0, r4
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80062e2:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 80062e4:	f7ff ff1a 	bl	800611c <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 80062e8:	2301      	movs	r3, #1
 80062ea:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 80062ee:	2300      	movs	r3, #0
 80062f0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 80062f4:	b002      	add	sp, #8
 80062f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 80062fa:	463b      	mov	r3, r7
 80062fc:	2201      	movs	r2, #1
 80062fe:	2106      	movs	r1, #6
 8006300:	4620      	mov	r0, r4
 8006302:	9600      	str	r6, [sp, #0]
 8006304:	f7ff fda6 	bl	8005e54 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8006308:	2800      	cmp	r0, #0
 800630a:	d1ed      	bne.n	80062e8 <HAL_QSPI_Receive+0x7a>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 800630c:	f895 2020 	ldrb.w	r2, [r5, #32]
 8006310:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006312:	701a      	strb	r2, [r3, #0]
        hqspi->pRxBuffPtr++;
 8006314:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006316:	3301      	adds	r3, #1
 8006318:	6323      	str	r3, [r4, #48]	@ 0x30
        hqspi->RxXferCount--;
 800631a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800631c:	3b01      	subs	r3, #1
 800631e:	63a3      	str	r3, [r4, #56]	@ 0x38
 8006320:	e7d2      	b.n	80062c8 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006322:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006324:	f043 0308 	orr.w	r3, r3, #8
 8006328:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 800632a:	e7e0      	b.n	80062ee <HAL_QSPI_Receive+0x80>
    status = HAL_BUSY;
 800632c:	2002      	movs	r0, #2
 800632e:	e7de      	b.n	80062ee <HAL_QSPI_Receive+0x80>
  __HAL_LOCK(hqspi);
 8006330:	2002      	movs	r0, #2
 8006332:	e7df      	b.n	80062f4 <HAL_QSPI_Receive+0x86>

08006334 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006334:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8006338:	4604      	mov	r4, r0
 800633a:	b340      	cbz	r0, 800638e <HAL_RCC_OscConfig+0x5a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800633c:	6803      	ldr	r3, [r0, #0]
 800633e:	07de      	lsls	r6, r3, #31
 8006340:	d410      	bmi.n	8006364 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006342:	6823      	ldr	r3, [r4, #0]
 8006344:	079d      	lsls	r5, r3, #30
 8006346:	d461      	bmi.n	800640c <HAL_RCC_OscConfig+0xd8>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006348:	6823      	ldr	r3, [r4, #0]
 800634a:	0719      	lsls	r1, r3, #28
 800634c:	f100 80a6 	bmi.w	800649c <HAL_RCC_OscConfig+0x168>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006350:	6823      	ldr	r3, [r4, #0]
 8006352:	075a      	lsls	r2, r3, #29
 8006354:	f100 80c7 	bmi.w	80064e6 <HAL_RCC_OscConfig+0x1b2>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006358:	69a2      	ldr	r2, [r4, #24]
 800635a:	2a00      	cmp	r2, #0
 800635c:	f040 8130 	bne.w	80065c0 <HAL_RCC_OscConfig+0x28c>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
 8006360:	2000      	movs	r0, #0
 8006362:	e02c      	b.n	80063be <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8006364:	4b94      	ldr	r3, [pc, #592]	@ (80065b8 <HAL_RCC_OscConfig+0x284>)
 8006366:	689a      	ldr	r2, [r3, #8]
 8006368:	f002 020c 	and.w	r2, r2, #12
 800636c:	2a04      	cmp	r2, #4
 800636e:	d007      	beq.n	8006380 <HAL_RCC_OscConfig+0x4c>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006370:	689a      	ldr	r2, [r3, #8]
 8006372:	f002 020c 	and.w	r2, r2, #12
 8006376:	2a08      	cmp	r2, #8
 8006378:	d10b      	bne.n	8006392 <HAL_RCC_OscConfig+0x5e>
 800637a:	685b      	ldr	r3, [r3, #4]
 800637c:	0259      	lsls	r1, r3, #9
 800637e:	d508      	bpl.n	8006392 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006380:	4b8d      	ldr	r3, [pc, #564]	@ (80065b8 <HAL_RCC_OscConfig+0x284>)
 8006382:	681b      	ldr	r3, [r3, #0]
 8006384:	039a      	lsls	r2, r3, #14
 8006386:	d5dc      	bpl.n	8006342 <HAL_RCC_OscConfig+0xe>
 8006388:	6863      	ldr	r3, [r4, #4]
 800638a:	2b00      	cmp	r3, #0
 800638c:	d1d9      	bne.n	8006342 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 800638e:	2001      	movs	r0, #1
 8006390:	e015      	b.n	80063be <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006392:	6863      	ldr	r3, [r4, #4]
 8006394:	4d88      	ldr	r5, [pc, #544]	@ (80065b8 <HAL_RCC_OscConfig+0x284>)
 8006396:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800639a:	d113      	bne.n	80063c4 <HAL_RCC_OscConfig+0x90>
 800639c:	682b      	ldr	r3, [r5, #0]
 800639e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80063a2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80063a4:	f7fe fb3c 	bl	8004a20 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80063a8:	4e83      	ldr	r6, [pc, #524]	@ (80065b8 <HAL_RCC_OscConfig+0x284>)
        tickstart = HAL_GetTick();
 80063aa:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80063ac:	6833      	ldr	r3, [r6, #0]
 80063ae:	039b      	lsls	r3, r3, #14
 80063b0:	d4c7      	bmi.n	8006342 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80063b2:	f7fe fb35 	bl	8004a20 <HAL_GetTick>
 80063b6:	1b40      	subs	r0, r0, r5
 80063b8:	2864      	cmp	r0, #100	@ 0x64
 80063ba:	d9f7      	bls.n	80063ac <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 80063bc:	2003      	movs	r0, #3
}
 80063be:	b002      	add	sp, #8
 80063c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80063c4:	b99b      	cbnz	r3, 80063ee <HAL_RCC_OscConfig+0xba>
 80063c6:	682b      	ldr	r3, [r5, #0]
 80063c8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80063cc:	602b      	str	r3, [r5, #0]
 80063ce:	682b      	ldr	r3, [r5, #0]
 80063d0:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80063d4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80063d6:	f7fe fb23 	bl	8004a20 <HAL_GetTick>
 80063da:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80063dc:	682b      	ldr	r3, [r5, #0]
 80063de:	039f      	lsls	r7, r3, #14
 80063e0:	d5af      	bpl.n	8006342 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80063e2:	f7fe fb1d 	bl	8004a20 <HAL_GetTick>
 80063e6:	1b80      	subs	r0, r0, r6
 80063e8:	2864      	cmp	r0, #100	@ 0x64
 80063ea:	d9f7      	bls.n	80063dc <HAL_RCC_OscConfig+0xa8>
 80063ec:	e7e6      	b.n	80063bc <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80063ee:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80063f2:	682b      	ldr	r3, [r5, #0]
 80063f4:	d103      	bne.n	80063fe <HAL_RCC_OscConfig+0xca>
 80063f6:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80063fa:	602b      	str	r3, [r5, #0]
 80063fc:	e7ce      	b.n	800639c <HAL_RCC_OscConfig+0x68>
 80063fe:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006402:	602b      	str	r3, [r5, #0]
 8006404:	682b      	ldr	r3, [r5, #0]
 8006406:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800640a:	e7ca      	b.n	80063a2 <HAL_RCC_OscConfig+0x6e>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 800640c:	4b6a      	ldr	r3, [pc, #424]	@ (80065b8 <HAL_RCC_OscConfig+0x284>)
 800640e:	689a      	ldr	r2, [r3, #8]
 8006410:	f012 0f0c 	tst.w	r2, #12
 8006414:	d007      	beq.n	8006426 <HAL_RCC_OscConfig+0xf2>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006416:	689a      	ldr	r2, [r3, #8]
 8006418:	f002 020c 	and.w	r2, r2, #12
 800641c:	2a08      	cmp	r2, #8
 800641e:	d111      	bne.n	8006444 <HAL_RCC_OscConfig+0x110>
 8006420:	685b      	ldr	r3, [r3, #4]
 8006422:	025d      	lsls	r5, r3, #9
 8006424:	d40e      	bmi.n	8006444 <HAL_RCC_OscConfig+0x110>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006426:	4a64      	ldr	r2, [pc, #400]	@ (80065b8 <HAL_RCC_OscConfig+0x284>)
 8006428:	6813      	ldr	r3, [r2, #0]
 800642a:	0799      	lsls	r1, r3, #30
 800642c:	d502      	bpl.n	8006434 <HAL_RCC_OscConfig+0x100>
 800642e:	68e3      	ldr	r3, [r4, #12]
 8006430:	2b01      	cmp	r3, #1
 8006432:	d1ac      	bne.n	800638e <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006434:	6813      	ldr	r3, [r2, #0]
 8006436:	6921      	ldr	r1, [r4, #16]
 8006438:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800643c:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006440:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006442:	e781      	b.n	8006348 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8006444:	68e3      	ldr	r3, [r4, #12]
 8006446:	4d5c      	ldr	r5, [pc, #368]	@ (80065b8 <HAL_RCC_OscConfig+0x284>)
 8006448:	b1bb      	cbz	r3, 800647a <HAL_RCC_OscConfig+0x146>
        __HAL_RCC_HSI_ENABLE();
 800644a:	682b      	ldr	r3, [r5, #0]
 800644c:	f043 0301 	orr.w	r3, r3, #1
 8006450:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006452:	f7fe fae5 	bl	8004a20 <HAL_GetTick>
 8006456:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006458:	682b      	ldr	r3, [r5, #0]
 800645a:	079b      	lsls	r3, r3, #30
 800645c:	d507      	bpl.n	800646e <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800645e:	682b      	ldr	r3, [r5, #0]
 8006460:	6922      	ldr	r2, [r4, #16]
 8006462:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8006466:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800646a:	602b      	str	r3, [r5, #0]
 800646c:	e76c      	b.n	8006348 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800646e:	f7fe fad7 	bl	8004a20 <HAL_GetTick>
 8006472:	1b80      	subs	r0, r0, r6
 8006474:	2802      	cmp	r0, #2
 8006476:	d9ef      	bls.n	8006458 <HAL_RCC_OscConfig+0x124>
 8006478:	e7a0      	b.n	80063bc <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 800647a:	682b      	ldr	r3, [r5, #0]
 800647c:	f023 0301 	bic.w	r3, r3, #1
 8006480:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006482:	f7fe facd 	bl	8004a20 <HAL_GetTick>
 8006486:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006488:	682b      	ldr	r3, [r5, #0]
 800648a:	079f      	lsls	r7, r3, #30
 800648c:	f57f af5c 	bpl.w	8006348 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006490:	f7fe fac6 	bl	8004a20 <HAL_GetTick>
 8006494:	1b80      	subs	r0, r0, r6
 8006496:	2802      	cmp	r0, #2
 8006498:	d9f6      	bls.n	8006488 <HAL_RCC_OscConfig+0x154>
 800649a:	e78f      	b.n	80063bc <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 800649c:	6963      	ldr	r3, [r4, #20]
 800649e:	4d46      	ldr	r5, [pc, #280]	@ (80065b8 <HAL_RCC_OscConfig+0x284>)
 80064a0:	b183      	cbz	r3, 80064c4 <HAL_RCC_OscConfig+0x190>
      __HAL_RCC_LSI_ENABLE();
 80064a2:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80064a4:	f043 0301 	orr.w	r3, r3, #1
 80064a8:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
 80064aa:	f7fe fab9 	bl	8004a20 <HAL_GetTick>
 80064ae:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80064b0:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80064b2:	079b      	lsls	r3, r3, #30
 80064b4:	f53f af4c 	bmi.w	8006350 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80064b8:	f7fe fab2 	bl	8004a20 <HAL_GetTick>
 80064bc:	1b80      	subs	r0, r0, r6
 80064be:	2802      	cmp	r0, #2
 80064c0:	d9f6      	bls.n	80064b0 <HAL_RCC_OscConfig+0x17c>
 80064c2:	e77b      	b.n	80063bc <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 80064c4:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80064c6:	f023 0301 	bic.w	r3, r3, #1
 80064ca:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
 80064cc:	f7fe faa8 	bl	8004a20 <HAL_GetTick>
 80064d0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80064d2:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80064d4:	079f      	lsls	r7, r3, #30
 80064d6:	f57f af3b 	bpl.w	8006350 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80064da:	f7fe faa1 	bl	8004a20 <HAL_GetTick>
 80064de:	1b80      	subs	r0, r0, r6
 80064e0:	2802      	cmp	r0, #2
 80064e2:	d9f6      	bls.n	80064d2 <HAL_RCC_OscConfig+0x19e>
 80064e4:	e76a      	b.n	80063bc <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80064e6:	4b34      	ldr	r3, [pc, #208]	@ (80065b8 <HAL_RCC_OscConfig+0x284>)
 80064e8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80064ea:	00d5      	lsls	r5, r2, #3
 80064ec:	d427      	bmi.n	800653e <HAL_RCC_OscConfig+0x20a>
      __HAL_RCC_PWR_CLK_ENABLE();
 80064ee:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
      pwrclkchanged = SET;
 80064f0:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 80064f2:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80064f6:	641a      	str	r2, [r3, #64]	@ 0x40
 80064f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80064fa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80064fe:	9301      	str	r3, [sp, #4]
 8006500:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8006502:	4d2e      	ldr	r5, [pc, #184]	@ (80065bc <HAL_RCC_OscConfig+0x288>)
 8006504:	682b      	ldr	r3, [r5, #0]
 8006506:	05d8      	lsls	r0, r3, #23
 8006508:	d51b      	bpl.n	8006542 <HAL_RCC_OscConfig+0x20e>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800650a:	68a3      	ldr	r3, [r4, #8]
 800650c:	4d2a      	ldr	r5, [pc, #168]	@ (80065b8 <HAL_RCC_OscConfig+0x284>)
 800650e:	2b01      	cmp	r3, #1
 8006510:	d127      	bne.n	8006562 <HAL_RCC_OscConfig+0x22e>
 8006512:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006514:	f043 0301 	orr.w	r3, r3, #1
 8006518:	672b      	str	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800651a:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 800651e:	f7fe fa7f 	bl	8004a20 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006522:	4e25      	ldr	r6, [pc, #148]	@ (80065b8 <HAL_RCC_OscConfig+0x284>)
      tickstart = HAL_GetTick();
 8006524:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006526:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8006528:	079a      	lsls	r2, r3, #30
 800652a:	d53f      	bpl.n	80065ac <HAL_RCC_OscConfig+0x278>
    if (pwrclkchanged == SET)
 800652c:	2f00      	cmp	r7, #0
 800652e:	f43f af13 	beq.w	8006358 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006532:	4a21      	ldr	r2, [pc, #132]	@ (80065b8 <HAL_RCC_OscConfig+0x284>)
 8006534:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8006536:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800653a:	6413      	str	r3, [r2, #64]	@ 0x40
 800653c:	e70c      	b.n	8006358 <HAL_RCC_OscConfig+0x24>
  FlagStatus pwrclkchanged = RESET;
 800653e:	2700      	movs	r7, #0
 8006540:	e7df      	b.n	8006502 <HAL_RCC_OscConfig+0x1ce>
      PWR->CR1 |= PWR_CR1_DBP;
 8006542:	682b      	ldr	r3, [r5, #0]
 8006544:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006548:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800654a:	f7fe fa69 	bl	8004a20 <HAL_GetTick>
 800654e:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8006550:	682b      	ldr	r3, [r5, #0]
 8006552:	05d9      	lsls	r1, r3, #23
 8006554:	d4d9      	bmi.n	800650a <HAL_RCC_OscConfig+0x1d6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006556:	f7fe fa63 	bl	8004a20 <HAL_GetTick>
 800655a:	1b80      	subs	r0, r0, r6
 800655c:	2864      	cmp	r0, #100	@ 0x64
 800655e:	d9f7      	bls.n	8006550 <HAL_RCC_OscConfig+0x21c>
 8006560:	e72c      	b.n	80063bc <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006562:	b9ab      	cbnz	r3, 8006590 <HAL_RCC_OscConfig+0x25c>
 8006564:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006566:	f241 3888 	movw	r8, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800656a:	f023 0301 	bic.w	r3, r3, #1
 800656e:	672b      	str	r3, [r5, #112]	@ 0x70
 8006570:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006572:	f023 0304 	bic.w	r3, r3, #4
 8006576:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8006578:	f7fe fa52 	bl	8004a20 <HAL_GetTick>
 800657c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800657e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006580:	079b      	lsls	r3, r3, #30
 8006582:	d5d3      	bpl.n	800652c <HAL_RCC_OscConfig+0x1f8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006584:	f7fe fa4c 	bl	8004a20 <HAL_GetTick>
 8006588:	1b80      	subs	r0, r0, r6
 800658a:	4540      	cmp	r0, r8
 800658c:	d9f7      	bls.n	800657e <HAL_RCC_OscConfig+0x24a>
 800658e:	e715      	b.n	80063bc <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006590:	2b05      	cmp	r3, #5
 8006592:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006594:	d103      	bne.n	800659e <HAL_RCC_OscConfig+0x26a>
 8006596:	f043 0304 	orr.w	r3, r3, #4
 800659a:	672b      	str	r3, [r5, #112]	@ 0x70
 800659c:	e7b9      	b.n	8006512 <HAL_RCC_OscConfig+0x1de>
 800659e:	f023 0301 	bic.w	r3, r3, #1
 80065a2:	672b      	str	r3, [r5, #112]	@ 0x70
 80065a4:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80065a6:	f023 0304 	bic.w	r3, r3, #4
 80065aa:	e7b5      	b.n	8006518 <HAL_RCC_OscConfig+0x1e4>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80065ac:	f7fe fa38 	bl	8004a20 <HAL_GetTick>
 80065b0:	1b40      	subs	r0, r0, r5
 80065b2:	4540      	cmp	r0, r8
 80065b4:	d9b7      	bls.n	8006526 <HAL_RCC_OscConfig+0x1f2>
 80065b6:	e701      	b.n	80063bc <HAL_RCC_OscConfig+0x88>
 80065b8:	40023800 	.word	0x40023800
 80065bc:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80065c0:	4d38      	ldr	r5, [pc, #224]	@ (80066a4 <HAL_RCC_OscConfig+0x370>)
 80065c2:	68ab      	ldr	r3, [r5, #8]
 80065c4:	f003 030c 	and.w	r3, r3, #12
 80065c8:	2b08      	cmp	r3, #8
 80065ca:	d041      	beq.n	8006650 <HAL_RCC_OscConfig+0x31c>
        __HAL_RCC_PLL_DISABLE();
 80065cc:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80065ce:	2a02      	cmp	r2, #2
        __HAL_RCC_PLL_DISABLE();
 80065d0:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80065d4:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80065d6:	d12e      	bne.n	8006636 <HAL_RCC_OscConfig+0x302>
        tickstart = HAL_GetTick();
 80065d8:	f7fe fa22 	bl	8004a20 <HAL_GetTick>
 80065dc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80065de:	682b      	ldr	r3, [r5, #0]
 80065e0:	0199      	lsls	r1, r3, #6
 80065e2:	d422      	bmi.n	800662a <HAL_RCC_OscConfig+0x2f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80065e4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80065e6:	085b      	lsrs	r3, r3, #1
 80065e8:	1e5a      	subs	r2, r3, #1
 80065ea:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 80065ee:	430b      	orrs	r3, r1
 80065f0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80065f4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80065f6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80065fa:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80065fc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006600:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8006604:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006606:	682b      	ldr	r3, [r5, #0]
 8006608:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800660c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800660e:	f7fe fa07 	bl	8004a20 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006612:	4d24      	ldr	r5, [pc, #144]	@ (80066a4 <HAL_RCC_OscConfig+0x370>)
        tickstart = HAL_GetTick();
 8006614:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006616:	682b      	ldr	r3, [r5, #0]
 8006618:	019a      	lsls	r2, r3, #6
 800661a:	f53f aea1 	bmi.w	8006360 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800661e:	f7fe f9ff 	bl	8004a20 <HAL_GetTick>
 8006622:	1b00      	subs	r0, r0, r4
 8006624:	2802      	cmp	r0, #2
 8006626:	d9f6      	bls.n	8006616 <HAL_RCC_OscConfig+0x2e2>
 8006628:	e6c8      	b.n	80063bc <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800662a:	f7fe f9f9 	bl	8004a20 <HAL_GetTick>
 800662e:	1b80      	subs	r0, r0, r6
 8006630:	2802      	cmp	r0, #2
 8006632:	d9d4      	bls.n	80065de <HAL_RCC_OscConfig+0x2aa>
 8006634:	e6c2      	b.n	80063bc <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8006636:	f7fe f9f3 	bl	8004a20 <HAL_GetTick>
 800663a:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800663c:	682b      	ldr	r3, [r5, #0]
 800663e:	019b      	lsls	r3, r3, #6
 8006640:	f57f ae8e 	bpl.w	8006360 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006644:	f7fe f9ec 	bl	8004a20 <HAL_GetTick>
 8006648:	1b00      	subs	r0, r0, r4
 800664a:	2802      	cmp	r0, #2
 800664c:	d9f6      	bls.n	800663c <HAL_RCC_OscConfig+0x308>
 800664e:	e6b5      	b.n	80063bc <HAL_RCC_OscConfig+0x88>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006650:	2a01      	cmp	r2, #1
      pll_config = RCC->PLLCFGR;
 8006652:	686b      	ldr	r3, [r5, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006654:	f43f ae9b 	beq.w	800638e <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006658:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800665c:	69e1      	ldr	r1, [r4, #28]
 800665e:	428a      	cmp	r2, r1
 8006660:	f47f ae95 	bne.w	800638e <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006664:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006668:	6a21      	ldr	r1, [r4, #32]
 800666a:	428a      	cmp	r2, r1
 800666c:	f47f ae8f 	bne.w	800638e <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006670:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8006674:	6a61      	ldr	r1, [r4, #36]	@ 0x24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006676:	401a      	ands	r2, r3
 8006678:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800667c:	f47f ae87 	bne.w	800638e <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8006680:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8006682:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8006686:	0852      	lsrs	r2, r2, #1
 8006688:	3a01      	subs	r2, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 800668a:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800668e:	f47f ae7e 	bne.w	800638e <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8006692:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8006694:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8006698:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 800669c:	bf14      	ite	ne
 800669e:	2001      	movne	r0, #1
 80066a0:	2000      	moveq	r0, #0
 80066a2:	e68c      	b.n	80063be <HAL_RCC_OscConfig+0x8a>
 80066a4:	40023800 	.word	0x40023800

080066a8 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80066a8:	4913      	ldr	r1, [pc, #76]	@ (80066f8 <HAL_RCC_GetSysClockFreq+0x50>)
{
 80066aa:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80066ac:	688b      	ldr	r3, [r1, #8]
 80066ae:	f003 030c 	and.w	r3, r3, #12
 80066b2:	2b04      	cmp	r3, #4
 80066b4:	d01b      	beq.n	80066ee <HAL_RCC_GetSysClockFreq+0x46>
 80066b6:	2b08      	cmp	r3, #8
 80066b8:	d11b      	bne.n	80066f2 <HAL_RCC_GetSysClockFreq+0x4a>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80066ba:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80066bc:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80066be:	6849      	ldr	r1, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80066c0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80066c4:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80066c8:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80066cc:	bf1a      	itte	ne
 80066ce:	480b      	ldrne	r0, [pc, #44]	@ (80066fc <HAL_RCC_GetSysClockFreq+0x54>)
 80066d0:	2300      	movne	r3, #0
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80066d2:	480b      	ldreq	r0, [pc, #44]	@ (8006700 <HAL_RCC_GetSysClockFreq+0x58>)
 80066d4:	fba1 0100 	umull	r0, r1, r1, r0
 80066d8:	f7f9 fdea 	bl	80002b0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 80066dc:	4b06      	ldr	r3, [pc, #24]	@ (80066f8 <HAL_RCC_GetSysClockFreq+0x50>)
 80066de:	685b      	ldr	r3, [r3, #4]
 80066e0:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80066e4:	3301      	adds	r3, #1
 80066e6:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 80066e8:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80066ec:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80066ee:	4803      	ldr	r0, [pc, #12]	@ (80066fc <HAL_RCC_GetSysClockFreq+0x54>)
 80066f0:	e7fc      	b.n	80066ec <HAL_RCC_GetSysClockFreq+0x44>
      sysclockfreq = HSI_VALUE;
 80066f2:	4803      	ldr	r0, [pc, #12]	@ (8006700 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80066f4:	e7fa      	b.n	80066ec <HAL_RCC_GetSysClockFreq+0x44>
 80066f6:	bf00      	nop
 80066f8:	40023800 	.word	0x40023800
 80066fc:	017d7840 	.word	0x017d7840
 8006700:	00f42400 	.word	0x00f42400

08006704 <HAL_RCC_ClockConfig>:
{
 8006704:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006708:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800670a:	4604      	mov	r4, r0
 800670c:	b910      	cbnz	r0, 8006714 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800670e:	2001      	movs	r0, #1
}
 8006710:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8006714:	4a45      	ldr	r2, [pc, #276]	@ (800682c <HAL_RCC_ClockConfig+0x128>)
 8006716:	6813      	ldr	r3, [r2, #0]
 8006718:	f003 030f 	and.w	r3, r3, #15
 800671c:	428b      	cmp	r3, r1
 800671e:	d328      	bcc.n	8006772 <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006720:	6821      	ldr	r1, [r4, #0]
 8006722:	078f      	lsls	r7, r1, #30
 8006724:	d430      	bmi.n	8006788 <HAL_RCC_ClockConfig+0x84>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006726:	07c8      	lsls	r0, r1, #31
 8006728:	d443      	bmi.n	80067b2 <HAL_RCC_ClockConfig+0xae>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800672a:	4a40      	ldr	r2, [pc, #256]	@ (800682c <HAL_RCC_ClockConfig+0x128>)
 800672c:	6813      	ldr	r3, [r2, #0]
 800672e:	f003 030f 	and.w	r3, r3, #15
 8006732:	42ab      	cmp	r3, r5
 8006734:	d866      	bhi.n	8006804 <HAL_RCC_ClockConfig+0x100>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006736:	6822      	ldr	r2, [r4, #0]
 8006738:	0751      	lsls	r1, r2, #29
 800673a:	d46f      	bmi.n	800681c <HAL_RCC_ClockConfig+0x118>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800673c:	0713      	lsls	r3, r2, #28
 800673e:	d507      	bpl.n	8006750 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8006740:	4a3b      	ldr	r2, [pc, #236]	@ (8006830 <HAL_RCC_ClockConfig+0x12c>)
 8006742:	6921      	ldr	r1, [r4, #16]
 8006744:	6893      	ldr	r3, [r2, #8]
 8006746:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 800674a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800674e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8006750:	f7ff ffaa 	bl	80066a8 <HAL_RCC_GetSysClockFreq>
 8006754:	4b36      	ldr	r3, [pc, #216]	@ (8006830 <HAL_RCC_ClockConfig+0x12c>)
 8006756:	4a37      	ldr	r2, [pc, #220]	@ (8006834 <HAL_RCC_ClockConfig+0x130>)
 8006758:	689b      	ldr	r3, [r3, #8]
 800675a:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800675e:	5cd3      	ldrb	r3, [r2, r3]
 8006760:	40d8      	lsrs	r0, r3
 8006762:	4b35      	ldr	r3, [pc, #212]	@ (8006838 <HAL_RCC_ClockConfig+0x134>)
 8006764:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8006766:	4b35      	ldr	r3, [pc, #212]	@ (800683c <HAL_RCC_ClockConfig+0x138>)
 8006768:	6818      	ldr	r0, [r3, #0]
 800676a:	f7fa fd1b 	bl	80011a4 <HAL_InitTick>
  return HAL_OK;
 800676e:	2000      	movs	r0, #0
 8006770:	e7ce      	b.n	8006710 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006772:	6813      	ldr	r3, [r2, #0]
 8006774:	f023 030f 	bic.w	r3, r3, #15
 8006778:	430b      	orrs	r3, r1
 800677a:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800677c:	6813      	ldr	r3, [r2, #0]
 800677e:	f003 030f 	and.w	r3, r3, #15
 8006782:	428b      	cmp	r3, r1
 8006784:	d1c3      	bne.n	800670e <HAL_RCC_ClockConfig+0xa>
 8006786:	e7cb      	b.n	8006720 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006788:	f011 0f04 	tst.w	r1, #4
 800678c:	4b28      	ldr	r3, [pc, #160]	@ (8006830 <HAL_RCC_ClockConfig+0x12c>)
 800678e:	d003      	beq.n	8006798 <HAL_RCC_ClockConfig+0x94>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006790:	689a      	ldr	r2, [r3, #8]
 8006792:	f442 52e0 	orr.w	r2, r2, #7168	@ 0x1c00
 8006796:	609a      	str	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006798:	070e      	lsls	r6, r1, #28
 800679a:	d503      	bpl.n	80067a4 <HAL_RCC_ClockConfig+0xa0>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800679c:	689a      	ldr	r2, [r3, #8]
 800679e:	f442 4260 	orr.w	r2, r2, #57344	@ 0xe000
 80067a2:	609a      	str	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80067a4:	689a      	ldr	r2, [r3, #8]
 80067a6:	68a0      	ldr	r0, [r4, #8]
 80067a8:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 80067ac:	4302      	orrs	r2, r0
 80067ae:	609a      	str	r2, [r3, #8]
 80067b0:	e7b9      	b.n	8006726 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80067b2:	6861      	ldr	r1, [r4, #4]
 80067b4:	4b1e      	ldr	r3, [pc, #120]	@ (8006830 <HAL_RCC_ClockConfig+0x12c>)
 80067b6:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80067b8:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80067ba:	d11b      	bne.n	80067f4 <HAL_RCC_ClockConfig+0xf0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80067bc:	f412 3f00 	tst.w	r2, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80067c0:	d0a5      	beq.n	800670e <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80067c2:	689a      	ldr	r2, [r3, #8]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80067c4:	f241 3888 	movw	r8, #5000	@ 0x1388
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80067c8:	4f19      	ldr	r7, [pc, #100]	@ (8006830 <HAL_RCC_ClockConfig+0x12c>)
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80067ca:	f022 0203 	bic.w	r2, r2, #3
 80067ce:	430a      	orrs	r2, r1
 80067d0:	609a      	str	r2, [r3, #8]
    tickstart = HAL_GetTick();
 80067d2:	f7fe f925 	bl	8004a20 <HAL_GetTick>
 80067d6:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80067d8:	68bb      	ldr	r3, [r7, #8]
 80067da:	6862      	ldr	r2, [r4, #4]
 80067dc:	f003 030c 	and.w	r3, r3, #12
 80067e0:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80067e4:	d0a1      	beq.n	800672a <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80067e6:	f7fe f91b 	bl	8004a20 <HAL_GetTick>
 80067ea:	1b80      	subs	r0, r0, r6
 80067ec:	4540      	cmp	r0, r8
 80067ee:	d9f3      	bls.n	80067d8 <HAL_RCC_ClockConfig+0xd4>
        return HAL_TIMEOUT;
 80067f0:	2003      	movs	r0, #3
 80067f2:	e78d      	b.n	8006710 <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80067f4:	2902      	cmp	r1, #2
 80067f6:	d102      	bne.n	80067fe <HAL_RCC_ClockConfig+0xfa>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80067f8:	f012 7f00 	tst.w	r2, #33554432	@ 0x2000000
 80067fc:	e7e0      	b.n	80067c0 <HAL_RCC_ClockConfig+0xbc>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80067fe:	f012 0f02 	tst.w	r2, #2
 8006802:	e7dd      	b.n	80067c0 <HAL_RCC_ClockConfig+0xbc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006804:	6813      	ldr	r3, [r2, #0]
 8006806:	f023 030f 	bic.w	r3, r3, #15
 800680a:	432b      	orrs	r3, r5
 800680c:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800680e:	6813      	ldr	r3, [r2, #0]
 8006810:	f003 030f 	and.w	r3, r3, #15
 8006814:	42ab      	cmp	r3, r5
 8006816:	f47f af7a 	bne.w	800670e <HAL_RCC_ClockConfig+0xa>
 800681a:	e78c      	b.n	8006736 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800681c:	4904      	ldr	r1, [pc, #16]	@ (8006830 <HAL_RCC_ClockConfig+0x12c>)
 800681e:	68e0      	ldr	r0, [r4, #12]
 8006820:	688b      	ldr	r3, [r1, #8]
 8006822:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8006826:	4303      	orrs	r3, r0
 8006828:	608b      	str	r3, [r1, #8]
 800682a:	e787      	b.n	800673c <HAL_RCC_ClockConfig+0x38>
 800682c:	40023c00 	.word	0x40023c00
 8006830:	40023800 	.word	0x40023800
 8006834:	08020e4c 	.word	0x08020e4c
 8006838:	2000000c 	.word	0x2000000c
 800683c:	2000003c 	.word	0x2000003c

08006840 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8006840:	4b04      	ldr	r3, [pc, #16]	@ (8006854 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006842:	4a05      	ldr	r2, [pc, #20]	@ (8006858 <HAL_RCC_GetPCLK1Freq+0x18>)
 8006844:	689b      	ldr	r3, [r3, #8]
 8006846:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800684a:	5cd3      	ldrb	r3, [r2, r3]
 800684c:	4a03      	ldr	r2, [pc, #12]	@ (800685c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800684e:	6810      	ldr	r0, [r2, #0]
}
 8006850:	40d8      	lsrs	r0, r3
 8006852:	4770      	bx	lr
 8006854:	40023800 	.word	0x40023800
 8006858:	08020e44 	.word	0x08020e44
 800685c:	2000000c 	.word	0x2000000c

08006860 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8006860:	4b04      	ldr	r3, [pc, #16]	@ (8006874 <HAL_RCC_GetPCLK2Freq+0x14>)
 8006862:	4a05      	ldr	r2, [pc, #20]	@ (8006878 <HAL_RCC_GetPCLK2Freq+0x18>)
 8006864:	689b      	ldr	r3, [r3, #8]
 8006866:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800686a:	5cd3      	ldrb	r3, [r2, r3]
 800686c:	4a03      	ldr	r2, [pc, #12]	@ (800687c <HAL_RCC_GetPCLK2Freq+0x1c>)
 800686e:	6810      	ldr	r0, [r2, #0]
}
 8006870:	40d8      	lsrs	r0, r3
 8006872:	4770      	bx	lr
 8006874:	40023800 	.word	0x40023800
 8006878:	08020e44 	.word	0x08020e44
 800687c:	2000000c 	.word	0x2000000c

08006880 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006880:	230f      	movs	r3, #15
 8006882:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006884:	4b0b      	ldr	r3, [pc, #44]	@ (80068b4 <HAL_RCC_GetClockConfig+0x34>)
 8006886:	689a      	ldr	r2, [r3, #8]
 8006888:	f002 0203 	and.w	r2, r2, #3
 800688c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800688e:	689a      	ldr	r2, [r3, #8]
 8006890:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8006894:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8006896:	689a      	ldr	r2, [r3, #8]
 8006898:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 800689c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 800689e:	689b      	ldr	r3, [r3, #8]
 80068a0:	08db      	lsrs	r3, r3, #3
 80068a2:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 80068a6:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80068a8:	4b03      	ldr	r3, [pc, #12]	@ (80068b8 <HAL_RCC_GetClockConfig+0x38>)
 80068aa:	681b      	ldr	r3, [r3, #0]
 80068ac:	f003 030f 	and.w	r3, r3, #15
 80068b0:	600b      	str	r3, [r1, #0]
}
 80068b2:	4770      	bx	lr
 80068b4:	40023800 	.word	0x40023800
 80068b8:	40023c00 	.word	0x40023c00

080068bc <HAL_RCCEx_PeriphCLKConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80068bc:	6803      	ldr	r3, [r0, #0]
{
 80068be:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80068c2:	f013 0601 	ands.w	r6, r3, #1
{
 80068c6:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80068c8:	d00b      	beq.n	80068e2 <HAL_RCCEx_PeriphCLKConfig+0x26>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 80068ca:	4aad      	ldr	r2, [pc, #692]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80068cc:	6891      	ldr	r1, [r2, #8]
 80068ce:	f421 0100 	bic.w	r1, r1, #8388608	@ 0x800000
 80068d2:	6091      	str	r1, [r2, #8]
 80068d4:	6b46      	ldr	r6, [r0, #52]	@ 0x34
 80068d6:	6891      	ldr	r1, [r2, #8]
 80068d8:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 80068da:	fab6 f686 	clz	r6, r6
 80068de:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 80068e0:	6091      	str	r1, [r2, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 80068e2:	f413 2500 	ands.w	r5, r3, #524288	@ 0x80000
 80068e6:	d012      	beq.n	800690e <HAL_RCCEx_PeriphCLKConfig+0x52>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80068e8:	49a5      	ldr	r1, [pc, #660]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80068ea:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 80068ec:	f8d1 208c 	ldr.w	r2, [r1, #140]	@ 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 80068f0:	f5b5 1f80 	cmp.w	r5, #1048576	@ 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80068f4:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
    {
      plli2sused = 1;
 80068f8:	bf08      	it	eq
 80068fa:	2601      	moveq	r6, #1
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80068fc:	ea42 0205 	orr.w	r2, r2, r5
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8006900:	bf16      	itet	ne
 8006902:	fab5 f585 	clzne	r5, r5
  uint32_t pllsaiused = 0;
 8006906:	2500      	moveq	r5, #0
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8006908:	096d      	lsrne	r5, r5, #5
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 800690a:	f8c1 208c 	str.w	r2, [r1, #140]	@ 0x8c
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 800690e:	02d8      	lsls	r0, r3, #11
 8006910:	d510      	bpl.n	8006934 <HAL_RCCEx_PeriphCLKConfig+0x78>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8006912:	489b      	ldr	r0, [pc, #620]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006914:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8006916:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 800691a:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 800691e:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8006922:	ea42 0201 	orr.w	r2, r2, r1
 8006926:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 800692a:	f000 8186 	beq.w	8006c3a <HAL_RCCEx_PeriphCLKConfig+0x37e>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
 800692e:	2900      	cmp	r1, #0
 8006930:	bf08      	it	eq
 8006932:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
 8006934:	f013 7f80 	tst.w	r3, #16777216	@ 0x1000000
 8006938:	bf18      	it	ne
 800693a:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800693c:	0699      	lsls	r1, r3, #26
 800693e:	d532      	bpl.n	80069a6 <HAL_RCCEx_PeriphCLKConfig+0xea>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006940:	4b8f      	ldr	r3, [pc, #572]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8006942:	4f90      	ldr	r7, [pc, #576]	@ (8006b84 <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006944:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006946:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800694a:	641a      	str	r2, [r3, #64]	@ 0x40
 800694c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800694e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006952:	9301      	str	r3, [sp, #4]
 8006954:	9b01      	ldr	r3, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 8006956:	683b      	ldr	r3, [r7, #0]
 8006958:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800695c:	603b      	str	r3, [r7, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800695e:	f7fe f85f 	bl	8004a20 <HAL_GetTick>
 8006962:	4680      	mov	r8, r0

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8006964:	683b      	ldr	r3, [r7, #0]
 8006966:	05da      	lsls	r2, r3, #23
 8006968:	f140 8169 	bpl.w	8006c3e <HAL_RCCEx_PeriphCLKConfig+0x382>
        return HAL_TIMEOUT;
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800696c:	4f84      	ldr	r7, [pc, #528]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800696e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006970:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006972:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8006976:	f040 816d 	bne.w	8006c54 <HAL_RCCEx_PeriphCLKConfig+0x398>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800697a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800697c:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8006980:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8006984:	4a7e      	ldr	r2, [pc, #504]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006986:	f040 818a 	bne.w	8006c9e <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 800698a:	6891      	ldr	r1, [r2, #8]
 800698c:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8006990:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8006994:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8006998:	4301      	orrs	r1, r0
 800699a:	6091      	str	r1, [r2, #8]
 800699c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80069a0:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 80069a2:	430b      	orrs	r3, r1
 80069a4:	6713      	str	r3, [r2, #112]	@ 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80069a6:	6823      	ldr	r3, [r4, #0]
 80069a8:	06d9      	lsls	r1, r3, #27
 80069aa:	d50c      	bpl.n	80069c6 <HAL_RCCEx_PeriphCLKConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80069ac:	4a74      	ldr	r2, [pc, #464]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80069ae:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
 80069b2:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
 80069b6:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
 80069ba:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
 80069be:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 80069c0:	4301      	orrs	r1, r0
 80069c2:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 80069c6:	045a      	lsls	r2, r3, #17
 80069c8:	d508      	bpl.n	80069dc <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 80069ca:	496d      	ldr	r1, [pc, #436]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80069cc:	6e60      	ldr	r0, [r4, #100]	@ 0x64
 80069ce:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 80069d2:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 80069d6:	4302      	orrs	r2, r0
 80069d8:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 80069dc:	041f      	lsls	r7, r3, #16
 80069de:	d508      	bpl.n	80069f2 <HAL_RCCEx_PeriphCLKConfig+0x136>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 80069e0:	4967      	ldr	r1, [pc, #412]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80069e2:	6ea0      	ldr	r0, [r4, #104]	@ 0x68
 80069e4:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 80069e8:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 80069ec:	4302      	orrs	r2, r0
 80069ee:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 80069f2:	03d8      	lsls	r0, r3, #15
 80069f4:	d508      	bpl.n	8006a08 <HAL_RCCEx_PeriphCLKConfig+0x14c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 80069f6:	4962      	ldr	r1, [pc, #392]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80069f8:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
 80069fa:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 80069fe:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 8006a02:	4302      	orrs	r2, r0
 8006a04:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8006a08:	0399      	lsls	r1, r3, #14
 8006a0a:	d508      	bpl.n	8006a1e <HAL_RCCEx_PeriphCLKConfig+0x162>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8006a0c:	495c      	ldr	r1, [pc, #368]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006a0e:	6f20      	ldr	r0, [r4, #112]	@ 0x70
 8006a10:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006a14:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8006a18:	4302      	orrs	r2, r0
 8006a1a:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8006a1e:	065a      	lsls	r2, r3, #25
 8006a20:	d508      	bpl.n	8006a34 <HAL_RCCEx_PeriphCLKConfig+0x178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8006a22:	4957      	ldr	r1, [pc, #348]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006a24:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8006a26:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006a2a:	f022 0203 	bic.w	r2, r2, #3
 8006a2e:	4302      	orrs	r2, r0
 8006a30:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8006a34:	061f      	lsls	r7, r3, #24
 8006a36:	d508      	bpl.n	8006a4a <HAL_RCCEx_PeriphCLKConfig+0x18e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8006a38:	4951      	ldr	r1, [pc, #324]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006a3a:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 8006a3c:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006a40:	f022 020c 	bic.w	r2, r2, #12
 8006a44:	4302      	orrs	r2, r0
 8006a46:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8006a4a:	05d8      	lsls	r0, r3, #23
 8006a4c:	d508      	bpl.n	8006a60 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8006a4e:	494c      	ldr	r1, [pc, #304]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006a50:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8006a52:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006a56:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 8006a5a:	4302      	orrs	r2, r0
 8006a5c:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8006a60:	0599      	lsls	r1, r3, #22
 8006a62:	d508      	bpl.n	8006a76 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8006a64:	4946      	ldr	r1, [pc, #280]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006a66:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 8006a68:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006a6c:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 8006a70:	4302      	orrs	r2, r0
 8006a72:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8006a76:	055a      	lsls	r2, r3, #21
 8006a78:	d508      	bpl.n	8006a8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8006a7a:	4941      	ldr	r1, [pc, #260]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006a7c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8006a7e:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006a82:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8006a86:	4302      	orrs	r2, r0
 8006a88:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8006a8c:	051f      	lsls	r7, r3, #20
 8006a8e:	d508      	bpl.n	8006aa2 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 8006a90:	493b      	ldr	r1, [pc, #236]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006a92:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006a94:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006a98:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 8006a9c:	4302      	orrs	r2, r0
 8006a9e:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8006aa2:	04d8      	lsls	r0, r3, #19
 8006aa4:	d508      	bpl.n	8006ab8 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8006aa6:	4936      	ldr	r1, [pc, #216]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006aa8:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8006aaa:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006aae:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8006ab2:	4302      	orrs	r2, r0
 8006ab4:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8006ab8:	0499      	lsls	r1, r3, #18
 8006aba:	d508      	bpl.n	8006ace <HAL_RCCEx_PeriphCLKConfig+0x212>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8006abc:	4930      	ldr	r1, [pc, #192]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006abe:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8006ac0:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006ac4:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8006ac8:	4302      	orrs	r2, r0
 8006aca:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8006ace:	025a      	lsls	r2, r3, #9
 8006ad0:	d508      	bpl.n	8006ae4 <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8006ad2:	492b      	ldr	r1, [pc, #172]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006ad4:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
 8006ad6:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006ada:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
 8006ade:	4302      	orrs	r2, r0
 8006ae0:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006ae4:	029f      	lsls	r7, r3, #10
 8006ae6:	d50c      	bpl.n	8006b02 <HAL_RCCEx_PeriphCLKConfig+0x246>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006ae8:	4825      	ldr	r0, [pc, #148]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006aea:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
 8006aec:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
 8006af0:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006af4:	f022 6200 	bic.w	r2, r2, #134217728	@ 0x8000000
      pllsaiused = 1;
 8006af8:	bf08      	it	eq
 8006afa:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006afc:	430a      	orrs	r2, r1
 8006afe:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
 8006b02:	f013 0f08 	tst.w	r3, #8
 8006b06:	bf18      	it	ne
 8006b08:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8006b0a:	0358      	lsls	r0, r3, #13
 8006b0c:	d508      	bpl.n	8006b20 <HAL_RCCEx_PeriphCLKConfig+0x264>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8006b0e:	491c      	ldr	r1, [pc, #112]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006b10:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8006b12:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006b16:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8006b1a:	4302      	orrs	r2, r0
 8006b1c:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8006b20:	0219      	lsls	r1, r3, #8
 8006b22:	d509      	bpl.n	8006b38 <HAL_RCCEx_PeriphCLKConfig+0x27c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8006b24:	4916      	ldr	r1, [pc, #88]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006b26:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 8006b2a:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006b2e:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
 8006b32:	4302      	orrs	r2, r0
 8006b34:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8006b38:	2e01      	cmp	r6, #1
 8006b3a:	f000 80b4 	beq.w	8006ca6 <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8006b3e:	019a      	lsls	r2, r3, #6
 8006b40:	f100 80b1 	bmi.w	8006ca6 <HAL_RCCEx_PeriphCLKConfig+0x3ea>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8006b44:	2d01      	cmp	r5, #1
 8006b46:	d176      	bne.n	8006c36 <HAL_RCCEx_PeriphCLKConfig+0x37a>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006b48:	4d0d      	ldr	r5, [pc, #52]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006b4a:	682b      	ldr	r3, [r5, #0]
 8006b4c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006b50:	602b      	str	r3, [r5, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006b52:	f7fd ff65 	bl	8004a20 <HAL_GetTick>
 8006b56:	4606      	mov	r6, r0

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006b58:	682b      	ldr	r3, [r5, #0]
 8006b5a:	009f      	lsls	r7, r3, #2
 8006b5c:	f100 8127 	bmi.w	8006dae <HAL_RCCEx_PeriphCLKConfig+0x4f2>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8006b60:	6821      	ldr	r1, [r4, #0]
 8006b62:	030e      	lsls	r6, r1, #12
 8006b64:	d501      	bpl.n	8006b6a <HAL_RCCEx_PeriphCLKConfig+0x2ae>
 8006b66:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8006b68:	b11b      	cbz	r3, 8006b72 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8006b6a:	02cd      	lsls	r5, r1, #11
 8006b6c:	d523      	bpl.n	8006bb6 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8006b6e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8006b70:	bb0b      	cbnz	r3, 8006bb6 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8006b72:	4a03      	ldr	r2, [pc, #12]	@ (8006b80 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006b74:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006b78:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88
 8006b7c:	e004      	b.n	8006b88 <HAL_RCCEx_PeriphCLKConfig+0x2cc>
 8006b7e:	bf00      	nop
 8006b80:	40023800 	.word	0x40023800
 8006b84:	40007000 	.word	0x40007000
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006b88:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006b8c:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006b90:	4303      	orrs	r3, r0
 8006b92:	6960      	ldr	r0, [r4, #20]
 8006b94:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006b98:	69a0      	ldr	r0, [r4, #24]
 8006b9a:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8006b9e:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006ba2:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8006ba6:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8006ba8:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8006bac:	3801      	subs	r0, #1
 8006bae:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8006bb2:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8006bb6:	0288      	lsls	r0, r1, #10
 8006bb8:	d515      	bpl.n	8006be6 <HAL_RCCEx_PeriphCLKConfig+0x32a>
 8006bba:	6fe3      	ldr	r3, [r4, #124]	@ 0x7c
 8006bbc:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006bc0:	d111      	bne.n	8006be6 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006bc2:	4a82      	ldr	r2, [pc, #520]	@ (8006dcc <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006bc4:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006bc8:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8006bcc:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
 8006bd0:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006bd4:	4303      	orrs	r3, r0
 8006bd6:	6960      	ldr	r0, [r4, #20]
 8006bd8:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006bdc:	6a20      	ldr	r0, [r4, #32]
 8006bde:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8006be2:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006be6:	070a      	lsls	r2, r1, #28
 8006be8:	d519      	bpl.n	8006c1e <HAL_RCCEx_PeriphCLKConfig+0x362>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006bea:	4a78      	ldr	r2, [pc, #480]	@ (8006dcc <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006bec:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8006bf0:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8006bf4:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8006bf8:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006bfc:	430b      	orrs	r3, r1
 8006bfe:	6961      	ldr	r1, [r4, #20]
 8006c00:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8006c04:	69e1      	ldr	r1, [r4, #28]
 8006c06:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8006c0a:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006c0e:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8006c12:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8006c14:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8006c18:	430b      	orrs	r3, r1
 8006c1a:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006c1e:	4c6b      	ldr	r4, [pc, #428]	@ (8006dcc <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006c20:	6823      	ldr	r3, [r4, #0]
 8006c22:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006c26:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006c28:	f7fd fefa 	bl	8004a20 <HAL_GetTick>
 8006c2c:	4605      	mov	r5, r0

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006c2e:	6823      	ldr	r3, [r4, #0]
 8006c30:	009b      	lsls	r3, r3, #2
 8006c32:	f140 80c3 	bpl.w	8006dbc <HAL_RCCEx_PeriphCLKConfig+0x500>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8006c36:	2000      	movs	r0, #0
 8006c38:	e009      	b.n	8006c4e <HAL_RCCEx_PeriphCLKConfig+0x392>
      plli2sused = 1;
 8006c3a:	2601      	movs	r6, #1
 8006c3c:	e67a      	b.n	8006934 <HAL_RCCEx_PeriphCLKConfig+0x78>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006c3e:	f7fd feef 	bl	8004a20 <HAL_GetTick>
 8006c42:	eba0 0008 	sub.w	r0, r0, r8
 8006c46:	2864      	cmp	r0, #100	@ 0x64
 8006c48:	f67f ae8c 	bls.w	8006964 <HAL_RCCEx_PeriphCLKConfig+0xa8>
        return HAL_TIMEOUT;
 8006c4c:	2003      	movs	r0, #3
}
 8006c4e:	b003      	add	sp, #12
 8006c50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006c54:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8006c58:	4293      	cmp	r3, r2
 8006c5a:	f43f ae8e 	beq.w	800697a <HAL_RCCEx_PeriphCLKConfig+0xbe>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006c5e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006c60:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006c62:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 8006c66:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8006c6a:	673a      	str	r2, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006c6c:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 8006c6e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8006c72:	673a      	str	r2, [r7, #112]	@ 0x70
      RCC->BDCR = tmpreg0;
 8006c74:	673b      	str	r3, [r7, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006c76:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8006c78:	07db      	lsls	r3, r3, #31
 8006c7a:	f57f ae7e 	bpl.w	800697a <HAL_RCCEx_PeriphCLKConfig+0xbe>
        tickstart = HAL_GetTick();
 8006c7e:	f7fd fecf 	bl	8004a20 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006c82:	f241 3988 	movw	r9, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8006c86:	4680      	mov	r8, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006c88:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8006c8a:	0798      	lsls	r0, r3, #30
 8006c8c:	f53f ae75 	bmi.w	800697a <HAL_RCCEx_PeriphCLKConfig+0xbe>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006c90:	f7fd fec6 	bl	8004a20 <HAL_GetTick>
 8006c94:	eba0 0008 	sub.w	r0, r0, r8
 8006c98:	4548      	cmp	r0, r9
 8006c9a:	d9f5      	bls.n	8006c88 <HAL_RCCEx_PeriphCLKConfig+0x3cc>
 8006c9c:	e7d6      	b.n	8006c4c <HAL_RCCEx_PeriphCLKConfig+0x390>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006c9e:	6891      	ldr	r1, [r2, #8]
 8006ca0:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8006ca4:	e679      	b.n	800699a <HAL_RCCEx_PeriphCLKConfig+0xde>
    __HAL_RCC_PLLI2S_DISABLE();
 8006ca6:	4e49      	ldr	r6, [pc, #292]	@ (8006dcc <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006ca8:	6833      	ldr	r3, [r6, #0]
 8006caa:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8006cae:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 8006cb0:	f7fd feb6 	bl	8004a20 <HAL_GetTick>
 8006cb4:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006cb6:	6833      	ldr	r3, [r6, #0]
 8006cb8:	011b      	lsls	r3, r3, #4
 8006cba:	d472      	bmi.n	8006da2 <HAL_RCCEx_PeriphCLKConfig+0x4e6>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8006cbc:	6822      	ldr	r2, [r4, #0]
 8006cbe:	07d7      	lsls	r7, r2, #31
 8006cc0:	d512      	bpl.n	8006ce8 <HAL_RCCEx_PeriphCLKConfig+0x42c>
 8006cc2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8006cc4:	b983      	cbnz	r3, 8006ce8 <HAL_RCCEx_PeriphCLKConfig+0x42c>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8006cc6:	f8d6 3084 	ldr.w	r3, [r6, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8006cca:	f8d6 1084 	ldr.w	r1, [r6, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8006cce:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006cd2:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8006cd6:	430b      	orrs	r3, r1
 8006cd8:	6861      	ldr	r1, [r4, #4]
 8006cda:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8006cde:	68a1      	ldr	r1, [r4, #8]
 8006ce0:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8006ce4:	f8c6 3084 	str.w	r3, [r6, #132]	@ 0x84
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8006ce8:	0316      	lsls	r6, r2, #12
 8006cea:	d503      	bpl.n	8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x438>
 8006cec:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8006cee:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8006cf2:	d005      	beq.n	8006d00 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8006cf4:	02d0      	lsls	r0, r2, #11
 8006cf6:	d51e      	bpl.n	8006d36 <HAL_RCCEx_PeriphCLKConfig+0x47a>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8006cf8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8006cfa:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006cfe:	d11a      	bne.n	8006d36 <HAL_RCCEx_PeriphCLKConfig+0x47a>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8006d00:	4932      	ldr	r1, [pc, #200]	@ (8006dcc <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006d02:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006d06:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8006d0a:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006d0e:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006d12:	4303      	orrs	r3, r0
 8006d14:	6860      	ldr	r0, [r4, #4]
 8006d16:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006d1a:	68e0      	ldr	r0, [r4, #12]
 8006d1c:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8006d20:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006d24:	f8d1 008c 	ldr.w	r0, [r1, #140]	@ 0x8c
 8006d28:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006d2a:	f020 001f 	bic.w	r0, r0, #31
 8006d2e:	3b01      	subs	r3, #1
 8006d30:	4303      	orrs	r3, r0
 8006d32:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8006d36:	01d1      	lsls	r1, r2, #7
 8006d38:	d511      	bpl.n	8006d5e <HAL_RCCEx_PeriphCLKConfig+0x4a2>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8006d3a:	4924      	ldr	r1, [pc, #144]	@ (8006dcc <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006d3c:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006d40:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8006d44:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
 8006d48:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006d4c:	4303      	orrs	r3, r0
 8006d4e:	6860      	ldr	r0, [r4, #4]
 8006d50:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006d54:	6920      	ldr	r0, [r4, #16]
 8006d56:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8006d5a:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006d5e:	0192      	lsls	r2, r2, #6
 8006d60:	d50d      	bpl.n	8006d7e <HAL_RCCEx_PeriphCLKConfig+0x4c2>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006d62:	6923      	ldr	r3, [r4, #16]
 8006d64:	6862      	ldr	r2, [r4, #4]
 8006d66:	041b      	lsls	r3, r3, #16
 8006d68:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006d6c:	68e2      	ldr	r2, [r4, #12]
 8006d6e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006d72:	68a2      	ldr	r2, [r4, #8]
 8006d74:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006d78:	4a14      	ldr	r2, [pc, #80]	@ (8006dcc <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006d7a:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006d7e:	4e13      	ldr	r6, [pc, #76]	@ (8006dcc <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006d80:	6833      	ldr	r3, [r6, #0]
 8006d82:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8006d86:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 8006d88:	f7fd fe4a 	bl	8004a20 <HAL_GetTick>
 8006d8c:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006d8e:	6833      	ldr	r3, [r6, #0]
 8006d90:	011b      	lsls	r3, r3, #4
 8006d92:	f53f aed7 	bmi.w	8006b44 <HAL_RCCEx_PeriphCLKConfig+0x288>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8006d96:	f7fd fe43 	bl	8004a20 <HAL_GetTick>
 8006d9a:	1bc0      	subs	r0, r0, r7
 8006d9c:	2864      	cmp	r0, #100	@ 0x64
 8006d9e:	d9f6      	bls.n	8006d8e <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8006da0:	e754      	b.n	8006c4c <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8006da2:	f7fd fe3d 	bl	8004a20 <HAL_GetTick>
 8006da6:	1bc0      	subs	r0, r0, r7
 8006da8:	2864      	cmp	r0, #100	@ 0x64
 8006daa:	d984      	bls.n	8006cb6 <HAL_RCCEx_PeriphCLKConfig+0x3fa>
 8006dac:	e74e      	b.n	8006c4c <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8006dae:	f7fd fe37 	bl	8004a20 <HAL_GetTick>
 8006db2:	1b80      	subs	r0, r0, r6
 8006db4:	2864      	cmp	r0, #100	@ 0x64
 8006db6:	f67f aecf 	bls.w	8006b58 <HAL_RCCEx_PeriphCLKConfig+0x29c>
 8006dba:	e747      	b.n	8006c4c <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8006dbc:	f7fd fe30 	bl	8004a20 <HAL_GetTick>
 8006dc0:	1b40      	subs	r0, r0, r5
 8006dc2:	2864      	cmp	r0, #100	@ 0x64
 8006dc4:	f67f af33 	bls.w	8006c2e <HAL_RCCEx_PeriphCLKConfig+0x372>
 8006dc8:	e740      	b.n	8006c4c <HAL_RCCEx_PeriphCLKConfig+0x390>
 8006dca:	bf00      	nop
 8006dcc:	40023800 	.word	0x40023800

08006dd0 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8006dd0:	b538      	push	{r3, r4, r5, lr}
 8006dd2:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8006dd4:	4604      	mov	r4, r0
 8006dd6:	b1c8      	cbz	r0, 8006e0c <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006dd8:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8006ddc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006de0:	b91b      	cbnz	r3, 8006dea <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006de2:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006de6:	f7fa f975 	bl	80010d4 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006dea:	2302      	movs	r3, #2

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006dec:	1d21      	adds	r1, r4, #4
 8006dee:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006df0:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006df4:	f000 fed3 	bl	8007b9e <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006df8:	6862      	ldr	r2, [r4, #4]
 8006dfa:	4629      	mov	r1, r5
 8006dfc:	6820      	ldr	r0, [r4, #0]
 8006dfe:	f000 ff06 	bl	8007c0e <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006e02:	2301      	movs	r3, #1

  return HAL_OK;
 8006e04:	2000      	movs	r0, #0
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006e06:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
}
 8006e0a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006e0c:	2001      	movs	r0, #1
 8006e0e:	e7fc      	b.n	8006e0a <HAL_SDRAM_Init+0x3a>

08006e10 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8006e10:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006e12:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
 8006e16:	4605      	mov	r5, r0
 8006e18:	460e      	mov	r6, r1

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8006e1a:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006e1c:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8006e1e:	d010      	beq.n	8006e42 <HAL_SDRAM_SendCommand+0x32>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8006e20:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8006e24:	2c01      	cmp	r4, #1
 8006e26:	d110      	bne.n	8006e4a <HAL_SDRAM_SendCommand+0x3a>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006e28:	2302      	movs	r3, #2

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006e2a:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006e2c:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006e30:	f000 ff23 	bl	8007c7a <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006e34:	6833      	ldr	r3, [r6, #0]
 8006e36:	2b02      	cmp	r3, #2
 8006e38:	d104      	bne.n	8006e44 <HAL_SDRAM_SendCommand+0x34>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006e3a:	2305      	movs	r3, #5
 8006e3c:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006e40:	2000      	movs	r0, #0
}
 8006e42:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006e44:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
 8006e48:	e7fa      	b.n	8006e40 <HAL_SDRAM_SendCommand+0x30>
    return HAL_ERROR;
 8006e4a:	2001      	movs	r0, #1
 8006e4c:	e7f9      	b.n	8006e42 <HAL_SDRAM_SendCommand+0x32>

08006e4e <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006e4e:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006e50:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
 8006e54:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006e56:	2b02      	cmp	r3, #2
 8006e58:	b2d8      	uxtb	r0, r3
 8006e5a:	d00d      	beq.n	8006e78 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8006e5c:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8006e60:	2b01      	cmp	r3, #1
 8006e62:	b2dd      	uxtb	r5, r3
 8006e64:	d109      	bne.n	8006e7a <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006e66:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006e68:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006e6a:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006e6e:	f000 ff16 	bl	8007c9e <FMC_SDRAM_ProgramRefreshRate>
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006e72:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006e74:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
 8006e78:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006e7a:	2001      	movs	r0, #1
 8006e7c:	e7fc      	b.n	8006e78 <HAL_SDRAM_ProgramRefreshRate+0x2a>

08006e7e <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006e7e:	4770      	bx	lr

08006e80 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006e80:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006e84:	2b01      	cmp	r3, #1
 8006e86:	d133      	bne.n	8006ef0 <HAL_TIM_Base_Start_IT+0x70>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006e88:	2302      	movs	r3, #2
 8006e8a:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006e8e:	6803      	ldr	r3, [r0, #0]
 8006e90:	68da      	ldr	r2, [r3, #12]
 8006e92:	f042 0201 	orr.w	r2, r2, #1
 8006e96:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006e98:	4a16      	ldr	r2, [pc, #88]	@ (8006ef4 <HAL_TIM_Base_Start_IT+0x74>)
 8006e9a:	4293      	cmp	r3, r2
 8006e9c:	d01a      	beq.n	8006ed4 <HAL_TIM_Base_Start_IT+0x54>
 8006e9e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006ea2:	d017      	beq.n	8006ed4 <HAL_TIM_Base_Start_IT+0x54>
 8006ea4:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006ea8:	4293      	cmp	r3, r2
 8006eaa:	d013      	beq.n	8006ed4 <HAL_TIM_Base_Start_IT+0x54>
 8006eac:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006eb0:	4293      	cmp	r3, r2
 8006eb2:	d00f      	beq.n	8006ed4 <HAL_TIM_Base_Start_IT+0x54>
 8006eb4:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006eb8:	4293      	cmp	r3, r2
 8006eba:	d00b      	beq.n	8006ed4 <HAL_TIM_Base_Start_IT+0x54>
 8006ebc:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006ec0:	4293      	cmp	r3, r2
 8006ec2:	d007      	beq.n	8006ed4 <HAL_TIM_Base_Start_IT+0x54>
 8006ec4:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8006ec8:	4293      	cmp	r3, r2
 8006eca:	d003      	beq.n	8006ed4 <HAL_TIM_Base_Start_IT+0x54>
 8006ecc:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8006ed0:	4293      	cmp	r3, r2
 8006ed2:	d107      	bne.n	8006ee4 <HAL_TIM_Base_Start_IT+0x64>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006ed4:	6899      	ldr	r1, [r3, #8]
 8006ed6:	4a08      	ldr	r2, [pc, #32]	@ (8006ef8 <HAL_TIM_Base_Start_IT+0x78>)
 8006ed8:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006eda:	2a06      	cmp	r2, #6
 8006edc:	d006      	beq.n	8006eec <HAL_TIM_Base_Start_IT+0x6c>
 8006ede:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8006ee2:	d003      	beq.n	8006eec <HAL_TIM_Base_Start_IT+0x6c>
    {
      __HAL_TIM_ENABLE(htim);
 8006ee4:	681a      	ldr	r2, [r3, #0]
 8006ee6:	f042 0201 	orr.w	r2, r2, #1
 8006eea:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8006eec:	2000      	movs	r0, #0
 8006eee:	4770      	bx	lr
    return HAL_ERROR;
 8006ef0:	2001      	movs	r0, #1
}
 8006ef2:	4770      	bx	lr
 8006ef4:	40010000 	.word	0x40010000
 8006ef8:	00010007 	.word	0x00010007

08006efc <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8006efc:	4770      	bx	lr

08006efe <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8006efe:	4770      	bx	lr

08006f00 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8006f00:	4770      	bx	lr

08006f02 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8006f02:	4770      	bx	lr

08006f04 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006f04:	6803      	ldr	r3, [r0, #0]
 8006f06:	691a      	ldr	r2, [r3, #16]
 8006f08:	0791      	lsls	r1, r2, #30
{
 8006f0a:	b510      	push	{r4, lr}
 8006f0c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006f0e:	d50f      	bpl.n	8006f30 <HAL_TIM_IRQHandler+0x2c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006f10:	68da      	ldr	r2, [r3, #12]
 8006f12:	0792      	lsls	r2, r2, #30
 8006f14:	d50c      	bpl.n	8006f30 <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006f16:	f06f 0202 	mvn.w	r2, #2
 8006f1a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006f1c:	2201      	movs	r2, #1
 8006f1e:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006f20:	699b      	ldr	r3, [r3, #24]
 8006f22:	0799      	lsls	r1, r3, #30
 8006f24:	f000 8085 	beq.w	8007032 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 8006f28:	f7ff ffe9 	bl	8006efe <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006f2c:	2300      	movs	r3, #0
 8006f2e:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006f30:	6823      	ldr	r3, [r4, #0]
 8006f32:	691a      	ldr	r2, [r3, #16]
 8006f34:	0752      	lsls	r2, r2, #29
 8006f36:	d510      	bpl.n	8006f5a <HAL_TIM_IRQHandler+0x56>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006f38:	68da      	ldr	r2, [r3, #12]
 8006f3a:	0750      	lsls	r0, r2, #29
 8006f3c:	d50d      	bpl.n	8006f5a <HAL_TIM_IRQHandler+0x56>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006f3e:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
 8006f42:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006f44:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006f46:	2202      	movs	r2, #2
 8006f48:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006f4a:	699b      	ldr	r3, [r3, #24]
 8006f4c:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8006f50:	d075      	beq.n	800703e <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006f52:	f7ff ffd4 	bl	8006efe <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006f56:	2300      	movs	r3, #0
 8006f58:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006f5a:	6823      	ldr	r3, [r4, #0]
 8006f5c:	691a      	ldr	r2, [r3, #16]
 8006f5e:	0711      	lsls	r1, r2, #28
 8006f60:	d50f      	bpl.n	8006f82 <HAL_TIM_IRQHandler+0x7e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8006f62:	68da      	ldr	r2, [r3, #12]
 8006f64:	0712      	lsls	r2, r2, #28
 8006f66:	d50c      	bpl.n	8006f82 <HAL_TIM_IRQHandler+0x7e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006f68:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
 8006f6c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006f6e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006f70:	2204      	movs	r2, #4
 8006f72:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006f74:	69db      	ldr	r3, [r3, #28]
 8006f76:	079b      	lsls	r3, r3, #30
 8006f78:	d067      	beq.n	800704a <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 8006f7a:	f7ff ffc0 	bl	8006efe <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006f7e:	2300      	movs	r3, #0
 8006f80:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006f82:	6823      	ldr	r3, [r4, #0]
 8006f84:	691a      	ldr	r2, [r3, #16]
 8006f86:	06d0      	lsls	r0, r2, #27
 8006f88:	d510      	bpl.n	8006fac <HAL_TIM_IRQHandler+0xa8>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006f8a:	68da      	ldr	r2, [r3, #12]
 8006f8c:	06d1      	lsls	r1, r2, #27
 8006f8e:	d50d      	bpl.n	8006fac <HAL_TIM_IRQHandler+0xa8>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006f90:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
 8006f94:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006f96:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006f98:	2208      	movs	r2, #8
 8006f9a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006f9c:	69db      	ldr	r3, [r3, #28]
 8006f9e:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8006fa2:	d058      	beq.n	8007056 <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 8006fa4:	f7ff ffab 	bl	8006efe <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006fa8:	2300      	movs	r3, #0
 8006faa:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006fac:	6823      	ldr	r3, [r4, #0]
 8006fae:	691a      	ldr	r2, [r3, #16]
 8006fb0:	07d2      	lsls	r2, r2, #31
 8006fb2:	d508      	bpl.n	8006fc6 <HAL_TIM_IRQHandler+0xc2>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006fb4:	68da      	ldr	r2, [r3, #12]
 8006fb6:	07d0      	lsls	r0, r2, #31
 8006fb8:	d505      	bpl.n	8006fc6 <HAL_TIM_IRQHandler+0xc2>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006fba:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
 8006fbe:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006fc0:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8006fc2:	f7f9 fe43 	bl	8000c4c <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006fc6:	6823      	ldr	r3, [r4, #0]
 8006fc8:	691a      	ldr	r2, [r3, #16]
 8006fca:	0611      	lsls	r1, r2, #24
 8006fcc:	d508      	bpl.n	8006fe0 <HAL_TIM_IRQHandler+0xdc>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006fce:	68da      	ldr	r2, [r3, #12]
 8006fd0:	0612      	lsls	r2, r2, #24
 8006fd2:	d505      	bpl.n	8006fe0 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006fd4:	f06f 0280 	mvn.w	r2, #128	@ 0x80
      HAL_TIMEx_BreakCallback(htim);
 8006fd8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006fda:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006fdc:	f000 f8d9 	bl	8007192 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 8006fe0:	6823      	ldr	r3, [r4, #0]
 8006fe2:	691a      	ldr	r2, [r3, #16]
 8006fe4:	05d0      	lsls	r0, r2, #23
 8006fe6:	d508      	bpl.n	8006ffa <HAL_TIM_IRQHandler+0xf6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006fe8:	68da      	ldr	r2, [r3, #12]
 8006fea:	0611      	lsls	r1, r2, #24
 8006fec:	d505      	bpl.n	8006ffa <HAL_TIM_IRQHandler+0xf6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8006fee:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
 8006ff2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8006ff4:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 8006ff6:	f000 f8cd 	bl	8007194 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006ffa:	6823      	ldr	r3, [r4, #0]
 8006ffc:	691a      	ldr	r2, [r3, #16]
 8006ffe:	0652      	lsls	r2, r2, #25
 8007000:	d508      	bpl.n	8007014 <HAL_TIM_IRQHandler+0x110>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8007002:	68da      	ldr	r2, [r3, #12]
 8007004:	0650      	lsls	r0, r2, #25
 8007006:	d505      	bpl.n	8007014 <HAL_TIM_IRQHandler+0x110>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8007008:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
 800700c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800700e:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8007010:	f7ff ff77 	bl	8006f02 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8007014:	6823      	ldr	r3, [r4, #0]
 8007016:	691a      	ldr	r2, [r3, #16]
 8007018:	0691      	lsls	r1, r2, #26
 800701a:	d522      	bpl.n	8007062 <HAL_TIM_IRQHandler+0x15e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800701c:	68da      	ldr	r2, [r3, #12]
 800701e:	0692      	lsls	r2, r2, #26
 8007020:	d51f      	bpl.n	8007062 <HAL_TIM_IRQHandler+0x15e>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007022:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8007026:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007028:	611a      	str	r2, [r3, #16]
}
 800702a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800702e:	f000 b8af 	b.w	8007190 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007032:	f7ff ff63 	bl	8006efc <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007036:	4620      	mov	r0, r4
 8007038:	f7ff ff62 	bl	8006f00 <HAL_TIM_PWM_PulseFinishedCallback>
 800703c:	e776      	b.n	8006f2c <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800703e:	f7ff ff5d 	bl	8006efc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007042:	4620      	mov	r0, r4
 8007044:	f7ff ff5c 	bl	8006f00 <HAL_TIM_PWM_PulseFinishedCallback>
 8007048:	e785      	b.n	8006f56 <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800704a:	f7ff ff57 	bl	8006efc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800704e:	4620      	mov	r0, r4
 8007050:	f7ff ff56 	bl	8006f00 <HAL_TIM_PWM_PulseFinishedCallback>
 8007054:	e793      	b.n	8006f7e <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007056:	f7ff ff51 	bl	8006efc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800705a:	4620      	mov	r0, r4
 800705c:	f7ff ff50 	bl	8006f00 <HAL_TIM_PWM_PulseFinishedCallback>
 8007060:	e7a2      	b.n	8006fa8 <HAL_TIM_IRQHandler+0xa4>
}
 8007062:	bd10      	pop	{r4, pc}

08007064 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007064:	4a30      	ldr	r2, [pc, #192]	@ (8007128 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8007066:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007068:	4290      	cmp	r0, r2
 800706a:	d012      	beq.n	8007092 <TIM_Base_SetConfig+0x2e>
 800706c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007070:	d00f      	beq.n	8007092 <TIM_Base_SetConfig+0x2e>
 8007072:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8007076:	4290      	cmp	r0, r2
 8007078:	d00b      	beq.n	8007092 <TIM_Base_SetConfig+0x2e>
 800707a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800707e:	4290      	cmp	r0, r2
 8007080:	d007      	beq.n	8007092 <TIM_Base_SetConfig+0x2e>
 8007082:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007086:	4290      	cmp	r0, r2
 8007088:	d003      	beq.n	8007092 <TIM_Base_SetConfig+0x2e>
 800708a:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800708e:	4290      	cmp	r0, r2
 8007090:	d119      	bne.n	80070c6 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007092:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007094:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8007098:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800709a:	4a23      	ldr	r2, [pc, #140]	@ (8007128 <TIM_Base_SetConfig+0xc4>)
 800709c:	4290      	cmp	r0, r2
 800709e:	d029      	beq.n	80070f4 <TIM_Base_SetConfig+0x90>
 80070a0:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 80070a4:	d026      	beq.n	80070f4 <TIM_Base_SetConfig+0x90>
 80070a6:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80070aa:	4290      	cmp	r0, r2
 80070ac:	d022      	beq.n	80070f4 <TIM_Base_SetConfig+0x90>
 80070ae:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80070b2:	4290      	cmp	r0, r2
 80070b4:	d01e      	beq.n	80070f4 <TIM_Base_SetConfig+0x90>
 80070b6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80070ba:	4290      	cmp	r0, r2
 80070bc:	d01a      	beq.n	80070f4 <TIM_Base_SetConfig+0x90>
 80070be:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80070c2:	4290      	cmp	r0, r2
 80070c4:	d016      	beq.n	80070f4 <TIM_Base_SetConfig+0x90>
 80070c6:	4a19      	ldr	r2, [pc, #100]	@ (800712c <TIM_Base_SetConfig+0xc8>)
 80070c8:	4290      	cmp	r0, r2
 80070ca:	d013      	beq.n	80070f4 <TIM_Base_SetConfig+0x90>
 80070cc:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80070d0:	4290      	cmp	r0, r2
 80070d2:	d00f      	beq.n	80070f4 <TIM_Base_SetConfig+0x90>
 80070d4:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80070d8:	4290      	cmp	r0, r2
 80070da:	d00b      	beq.n	80070f4 <TIM_Base_SetConfig+0x90>
 80070dc:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 80070e0:	4290      	cmp	r0, r2
 80070e2:	d007      	beq.n	80070f4 <TIM_Base_SetConfig+0x90>
 80070e4:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80070e8:	4290      	cmp	r0, r2
 80070ea:	d003      	beq.n	80070f4 <TIM_Base_SetConfig+0x90>
 80070ec:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80070f0:	4290      	cmp	r0, r2
 80070f2:	d103      	bne.n	80070fc <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 80070f4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80070f8:	68ca      	ldr	r2, [r1, #12]
 80070fa:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80070fc:	694a      	ldr	r2, [r1, #20]
 80070fe:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007102:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8007104:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007106:	688b      	ldr	r3, [r1, #8]
 8007108:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800710a:	680b      	ldr	r3, [r1, #0]
 800710c:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800710e:	4b06      	ldr	r3, [pc, #24]	@ (8007128 <TIM_Base_SetConfig+0xc4>)
 8007110:	4298      	cmp	r0, r3
 8007112:	d003      	beq.n	800711c <TIM_Base_SetConfig+0xb8>
 8007114:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8007118:	4298      	cmp	r0, r3
 800711a:	d101      	bne.n	8007120 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800711c:	690b      	ldr	r3, [r1, #16]
 800711e:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007120:	2301      	movs	r3, #1
 8007122:	6143      	str	r3, [r0, #20]
}
 8007124:	4770      	bx	lr
 8007126:	bf00      	nop
 8007128:	40010000 	.word	0x40010000
 800712c:	40014000 	.word	0x40014000

08007130 <HAL_TIM_Base_Init>:
{
 8007130:	b510      	push	{r4, lr}
  if (htim == NULL)
 8007132:	4604      	mov	r4, r0
 8007134:	b350      	cbz	r0, 800718c <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 8007136:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800713a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800713e:	b91b      	cbnz	r3, 8007148 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007140:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8007144:	f7ff fe9b 	bl	8006e7e <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007148:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800714a:	6820      	ldr	r0, [r4, #0]
 800714c:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 800714e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007152:	f7ff ff87 	bl	8007064 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007156:	2301      	movs	r3, #1
  return HAL_OK;
 8007158:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800715a:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800715e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8007162:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8007166:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800716a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 800716e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8007172:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007176:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800717a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800717e:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 8007182:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 8007186:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800718a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800718c:	2001      	movs	r0, #1
 800718e:	e7fc      	b.n	800718a <HAL_TIM_Base_Init+0x5a>

08007190 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8007190:	4770      	bx	lr

08007192 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8007192:	4770      	bx	lr

08007194 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 8007194:	4770      	bx	lr

08007196 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8007196:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007198:	e852 3f00 	ldrex	r3, [r2]
 800719c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80071a0:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 80071a4:	6802      	ldr	r2, [r0, #0]
 80071a6:	2900      	cmp	r1, #0
 80071a8:	d1f5      	bne.n	8007196 <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80071aa:	f102 0308 	add.w	r3, r2, #8
 80071ae:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80071b2:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80071b6:	f102 0c08 	add.w	ip, r2, #8
 80071ba:	e84c 3100 	strex	r1, r3, [ip]
 80071be:	2900      	cmp	r1, #0
 80071c0:	d1f3      	bne.n	80071aa <UART_EndRxTransfer+0x14>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80071c2:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 80071c4:	2b01      	cmp	r3, #1
 80071c6:	d107      	bne.n	80071d8 <UART_EndRxTransfer+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80071c8:	e852 3f00 	ldrex	r3, [r2]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80071cc:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80071d0:	e842 3100 	strex	r1, r3, [r2]
 80071d4:	2900      	cmp	r1, #0
 80071d6:	d1f7      	bne.n	80071c8 <UART_EndRxTransfer+0x32>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80071d8:	2320      	movs	r3, #32
 80071da:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80071de:	2300      	movs	r3, #0
 80071e0:	6603      	str	r3, [r0, #96]	@ 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 80071e2:	6683      	str	r3, [r0, #104]	@ 0x68
}
 80071e4:	4770      	bx	lr

080071e6 <HAL_UART_ErrorCallback>:
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
 80071e6:	4770      	bx	lr

080071e8 <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 80071e8:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 80071ea:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->RxXferCount = 0U;
 80071ec:	2300      	movs	r3, #0
 80071ee:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
  huart->TxXferCount = 0U;
 80071f2:	f8a0 3052 	strh.w	r3, [r0, #82]	@ 0x52
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 80071f6:	f7ff fff6 	bl	80071e6 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80071fa:	bd08      	pop	{r3, pc}

080071fc <HAL_UARTEx_RxEventCallback>:
}
 80071fc:	4770      	bx	lr
	...

08007200 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8007200:	6803      	ldr	r3, [r0, #0]
{
 8007202:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8007204:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
 8007206:	f640 060f 	movw	r6, #2063	@ 0x80f
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 800720a:	6819      	ldr	r1, [r3, #0]
{
 800720c:	4604      	mov	r4, r0
  if (errorflags == 0U)
 800720e:	4232      	tst	r2, r6
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8007210:	689d      	ldr	r5, [r3, #8]
  if (errorflags == 0U)
 8007212:	d10b      	bne.n	800722c <HAL_UART_IRQHandler+0x2c>
    if (((isrflags & USART_ISR_RXNE) != 0U)
 8007214:	0696      	lsls	r6, r2, #26
 8007216:	f140 8088 	bpl.w	800732a <HAL_UART_IRQHandler+0x12a>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 800721a:	068d      	lsls	r5, r1, #26
 800721c:	f140 8085 	bpl.w	800732a <HAL_UART_IRQHandler+0x12a>
      if (huart->RxISR != NULL)
 8007220:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8007222:	2b00      	cmp	r3, #0
 8007224:	d07b      	beq.n	800731e <HAL_UART_IRQHandler+0x11e>
}
 8007226:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
 800722a:	4718      	bx	r3
      && (((cr3its & USART_CR3_EIE) != 0U)
 800722c:	f005 0001 	and.w	r0, r5, #1
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 8007230:	4d93      	ldr	r5, [pc, #588]	@ (8007480 <HAL_UART_IRQHandler+0x280>)
 8007232:	400d      	ands	r5, r1
 8007234:	4305      	orrs	r5, r0
 8007236:	d078      	beq.n	800732a <HAL_UART_IRQHandler+0x12a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8007238:	07d6      	lsls	r6, r2, #31
 800723a:	d509      	bpl.n	8007250 <HAL_UART_IRQHandler+0x50>
 800723c:	05cd      	lsls	r5, r1, #23
 800723e:	d507      	bpl.n	8007250 <HAL_UART_IRQHandler+0x50>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8007240:	2501      	movs	r5, #1
 8007242:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8007244:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 8007248:	f045 0501 	orr.w	r5, r5, #1
 800724c:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8007250:	0796      	lsls	r6, r2, #30
 8007252:	d508      	bpl.n	8007266 <HAL_UART_IRQHandler+0x66>
 8007254:	b138      	cbz	r0, 8007266 <HAL_UART_IRQHandler+0x66>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 8007256:	2502      	movs	r5, #2
 8007258:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 800725a:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 800725e:	f045 0504 	orr.w	r5, r5, #4
 8007262:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8007266:	0755      	lsls	r5, r2, #29
 8007268:	d508      	bpl.n	800727c <HAL_UART_IRQHandler+0x7c>
 800726a:	b138      	cbz	r0, 800727c <HAL_UART_IRQHandler+0x7c>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 800726c:	2504      	movs	r5, #4
 800726e:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8007270:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 8007274:	f045 0502 	orr.w	r5, r5, #2
 8007278:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_ORE) != 0U)
 800727c:	0716      	lsls	r6, r2, #28
 800727e:	d50b      	bpl.n	8007298 <HAL_UART_IRQHandler+0x98>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8007280:	f001 0520 	and.w	r5, r1, #32
 8007284:	4305      	orrs	r5, r0
 8007286:	d007      	beq.n	8007298 <HAL_UART_IRQHandler+0x98>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8007288:	2008      	movs	r0, #8
 800728a:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 800728c:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
 8007290:	f040 0008 	orr.w	r0, r0, #8
 8007294:	f8c4 0084 	str.w	r0, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 8007298:	0515      	lsls	r5, r2, #20
 800729a:	d50a      	bpl.n	80072b2 <HAL_UART_IRQHandler+0xb2>
 800729c:	0148      	lsls	r0, r1, #5
 800729e:	d508      	bpl.n	80072b2 <HAL_UART_IRQHandler+0xb2>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80072a0:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80072a4:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 80072a6:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 80072aa:	f043 0320 	orr.w	r3, r3, #32
 80072ae:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80072b2:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 80072b6:	2b00      	cmp	r3, #0
 80072b8:	d031      	beq.n	800731e <HAL_UART_IRQHandler+0x11e>
      if (((isrflags & USART_ISR_RXNE) != 0U)
 80072ba:	0692      	lsls	r2, r2, #26
 80072bc:	d505      	bpl.n	80072ca <HAL_UART_IRQHandler+0xca>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 80072be:	068b      	lsls	r3, r1, #26
 80072c0:	d503      	bpl.n	80072ca <HAL_UART_IRQHandler+0xca>
        if (huart->RxISR != NULL)
 80072c2:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 80072c4:	b10b      	cbz	r3, 80072ca <HAL_UART_IRQHandler+0xca>
          huart->RxISR(huart);
 80072c6:	4620      	mov	r0, r4
 80072c8:	4798      	blx	r3
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80072ca:	6826      	ldr	r6, [r4, #0]
        UART_EndRxTransfer(huart);
 80072cc:	4620      	mov	r0, r4
      errorcode = huart->ErrorCode;
 80072ce:	f8d4 2084 	ldr.w	r2, [r4, #132]	@ 0x84
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80072d2:	68b3      	ldr	r3, [r6, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 80072d4:	f002 0228 	and.w	r2, r2, #40	@ 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80072d8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80072dc:	ea53 0502 	orrs.w	r5, r3, r2
 80072e0:	d01e      	beq.n	8007320 <HAL_UART_IRQHandler+0x120>
        UART_EndRxTransfer(huart);
 80072e2:	f7ff ff58 	bl	8007196 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80072e6:	68b3      	ldr	r3, [r6, #8]
 80072e8:	065e      	lsls	r6, r3, #25
 80072ea:	d515      	bpl.n	8007318 <HAL_UART_IRQHandler+0x118>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80072ec:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80072ee:	f102 0308 	add.w	r3, r2, #8
 80072f2:	e853 3f00 	ldrex	r3, [r3]
 80072f6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80072fa:	3208      	adds	r2, #8
 80072fc:	e842 3100 	strex	r1, r3, [r2]
 8007300:	2900      	cmp	r1, #0
 8007302:	d1f3      	bne.n	80072ec <HAL_UART_IRQHandler+0xec>
          if (huart->hdmarx != NULL)
 8007304:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8007306:	b138      	cbz	r0, 8007318 <HAL_UART_IRQHandler+0x118>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8007308:	4b5e      	ldr	r3, [pc, #376]	@ (8007484 <HAL_UART_IRQHandler+0x284>)
 800730a:	6503      	str	r3, [r0, #80]	@ 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 800730c:	f7fd fceb 	bl	8004ce6 <HAL_DMA_Abort_IT>
 8007310:	b128      	cbz	r0, 800731e <HAL_UART_IRQHandler+0x11e>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8007312:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8007314:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8007316:	e786      	b.n	8007226 <HAL_UART_IRQHandler+0x26>
            HAL_UART_ErrorCallback(huart);
 8007318:	4620      	mov	r0, r4
 800731a:	f7ff ff64 	bl	80071e6 <HAL_UART_ErrorCallback>
}
 800731e:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_ErrorCallback(huart);
 8007320:	f7ff ff61 	bl	80071e6 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007324:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
 8007328:	e7f9      	b.n	800731e <HAL_UART_IRQHandler+0x11e>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800732a:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 800732c:	2801      	cmp	r0, #1
 800732e:	f040 8088 	bne.w	8007442 <HAL_UART_IRQHandler+0x242>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 8007332:	06d5      	lsls	r5, r2, #27
 8007334:	f140 8085 	bpl.w	8007442 <HAL_UART_IRQHandler+0x242>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 8007338:	06c8      	lsls	r0, r1, #27
 800733a:	f140 8082 	bpl.w	8007442 <HAL_UART_IRQHandler+0x242>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 800733e:	2210      	movs	r2, #16
 8007340:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007342:	689a      	ldr	r2, [r3, #8]
 8007344:	0652      	lsls	r2, r2, #25
 8007346:	d54a      	bpl.n	80073de <HAL_UART_IRQHandler+0x1de>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8007348:	6f61      	ldr	r1, [r4, #116]	@ 0x74
 800734a:	680a      	ldr	r2, [r1, #0]
 800734c:	6852      	ldr	r2, [r2, #4]
 800734e:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
 8007350:	2a00      	cmp	r2, #0
 8007352:	d0e4      	beq.n	800731e <HAL_UART_IRQHandler+0x11e>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8007354:	f8b4 0058 	ldrh.w	r0, [r4, #88]	@ 0x58
 8007358:	4290      	cmp	r0, r2
 800735a:	d9e0      	bls.n	800731e <HAL_UART_IRQHandler+0x11e>
        huart->RxXferCount = nb_remaining_rx_data;
 800735c:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8007360:	69ca      	ldr	r2, [r1, #28]
 8007362:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 8007366:	d02e      	beq.n	80073c6 <HAL_UART_IRQHandler+0x1c6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007368:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800736c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007370:	e843 2100 	strex	r1, r2, [r3]
 8007374:	2900      	cmp	r1, #0
 8007376:	d1f7      	bne.n	8007368 <HAL_UART_IRQHandler+0x168>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007378:	f103 0208 	add.w	r2, r3, #8
 800737c:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007380:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007384:	f103 0008 	add.w	r0, r3, #8
 8007388:	e840 2100 	strex	r1, r2, [r0]
 800738c:	2900      	cmp	r1, #0
 800738e:	d1f3      	bne.n	8007378 <HAL_UART_IRQHandler+0x178>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007390:	f103 0208 	add.w	r2, r3, #8
 8007394:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8007398:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800739c:	f103 0008 	add.w	r0, r3, #8
 80073a0:	e840 2100 	strex	r1, r2, [r0]
 80073a4:	2900      	cmp	r1, #0
 80073a6:	d1f3      	bne.n	8007390 <HAL_UART_IRQHandler+0x190>
          huart->RxState = HAL_UART_STATE_READY;
 80073a8:	2220      	movs	r2, #32
 80073aa:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80073ae:	6621      	str	r1, [r4, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80073b0:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80073b4:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80073b8:	e843 2100 	strex	r1, r2, [r3]
 80073bc:	2900      	cmp	r1, #0
 80073be:	d1f7      	bne.n	80073b0 <HAL_UART_IRQHandler+0x1b0>
          (void)HAL_DMA_Abort(huart->hdmarx);
 80073c0:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 80073c2:	f7fd fc52 	bl	8004c6a <HAL_DMA_Abort>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 80073c6:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 80073c8:	f8b4 1058 	ldrh.w	r1, [r4, #88]	@ 0x58
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 80073cc:	6663      	str	r3, [r4, #100]	@ 0x64
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 80073ce:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 80073d2:	1ac9      	subs	r1, r1, r3
 80073d4:	b289      	uxth	r1, r1
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 80073d6:	4620      	mov	r0, r4
 80073d8:	f7ff ff10 	bl	80071fc <HAL_UARTEx_RxEventCallback>
 80073dc:	e79f      	b.n	800731e <HAL_UART_IRQHandler+0x11e>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 80073de:	f8b4 205a 	ldrh.w	r2, [r4, #90]	@ 0x5a
      if ((huart->RxXferCount > 0U)
 80073e2:	f8b4 005a 	ldrh.w	r0, [r4, #90]	@ 0x5a
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 80073e6:	f8b4 1058 	ldrh.w	r1, [r4, #88]	@ 0x58
 80073ea:	b292      	uxth	r2, r2
      if ((huart->RxXferCount > 0U)
 80073ec:	b280      	uxth	r0, r0
 80073ee:	2800      	cmp	r0, #0
 80073f0:	d095      	beq.n	800731e <HAL_UART_IRQHandler+0x11e>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 80073f2:	1a89      	subs	r1, r1, r2
 80073f4:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
 80073f6:	2900      	cmp	r1, #0
 80073f8:	d091      	beq.n	800731e <HAL_UART_IRQHandler+0x11e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80073fa:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80073fe:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007402:	e843 2000 	strex	r0, r2, [r3]
 8007406:	2800      	cmp	r0, #0
 8007408:	d1f7      	bne.n	80073fa <HAL_UART_IRQHandler+0x1fa>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800740a:	f103 0208 	add.w	r2, r3, #8
 800740e:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007412:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007416:	f103 0508 	add.w	r5, r3, #8
 800741a:	e845 2000 	strex	r0, r2, [r5]
 800741e:	2800      	cmp	r0, #0
 8007420:	d1f3      	bne.n	800740a <HAL_UART_IRQHandler+0x20a>
        huart->RxState = HAL_UART_STATE_READY;
 8007422:	2220      	movs	r2, #32
        huart->RxISR = NULL;
 8007424:	66a0      	str	r0, [r4, #104]	@ 0x68
        huart->RxState = HAL_UART_STATE_READY;
 8007426:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800742a:	6620      	str	r0, [r4, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800742c:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8007430:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007434:	e843 2000 	strex	r0, r2, [r3]
 8007438:	2800      	cmp	r0, #0
 800743a:	d1f7      	bne.n	800742c <HAL_UART_IRQHandler+0x22c>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 800743c:	2302      	movs	r3, #2
 800743e:	6663      	str	r3, [r4, #100]	@ 0x64
 8007440:	e7c9      	b.n	80073d6 <HAL_UART_IRQHandler+0x1d6>
  if (((isrflags & USART_ISR_TXE) != 0U)
 8007442:	0616      	lsls	r6, r2, #24
 8007444:	d507      	bpl.n	8007456 <HAL_UART_IRQHandler+0x256>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 8007446:	060d      	lsls	r5, r1, #24
 8007448:	d505      	bpl.n	8007456 <HAL_UART_IRQHandler+0x256>
    if (huart->TxISR != NULL)
 800744a:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 800744c:	2b00      	cmp	r3, #0
 800744e:	f43f af66 	beq.w	800731e <HAL_UART_IRQHandler+0x11e>
      huart->TxISR(huart);
 8007452:	4620      	mov	r0, r4
 8007454:	e6e7      	b.n	8007226 <HAL_UART_IRQHandler+0x26>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 8007456:	0650      	lsls	r0, r2, #25
 8007458:	f57f af61 	bpl.w	800731e <HAL_UART_IRQHandler+0x11e>
 800745c:	064a      	lsls	r2, r1, #25
 800745e:	f57f af5e 	bpl.w	800731e <HAL_UART_IRQHandler+0x11e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007462:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8007466:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800746a:	e843 2100 	strex	r1, r2, [r3]
 800746e:	2900      	cmp	r1, #0
 8007470:	d1f7      	bne.n	8007462 <HAL_UART_IRQHandler+0x262>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8007472:	2320      	movs	r3, #32
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 8007474:	4620      	mov	r0, r4
  huart->TxISR = NULL;
 8007476:	66e1      	str	r1, [r4, #108]	@ 0x6c
  huart->gState = HAL_UART_STATE_READY;
 8007478:	67e3      	str	r3, [r4, #124]	@ 0x7c
  HAL_UART_TxCpltCallback(huart);
 800747a:	f7f9 fba9 	bl	8000bd0 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 800747e:	e74e      	b.n	800731e <HAL_UART_IRQHandler+0x11e>
 8007480:	04000120 	.word	0x04000120
 8007484:	080071e9 	.word	0x080071e9

08007488 <UART_RxISR_8BIT>:
{
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8007488:	f8d0 2080 	ldr.w	r2, [r0, #128]	@ 0x80
  uint16_t uhMask = huart->Mask;
 800748c:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8007490:	2a22      	cmp	r2, #34	@ 0x22
{
 8007492:	b508      	push	{r3, lr}
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8007494:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8007496:	d143      	bne.n	8007520 <UART_RxISR_8BIT+0x98>
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8007498:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 800749a:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 800749c:	400b      	ands	r3, r1
 800749e:	7013      	strb	r3, [r2, #0]
    huart->pRxBuffPtr++;
 80074a0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80074a2:	3301      	adds	r3, #1
 80074a4:	6543      	str	r3, [r0, #84]	@ 0x54
    huart->RxXferCount--;
 80074a6:	f8b0 305a 	ldrh.w	r3, [r0, #90]	@ 0x5a
 80074aa:	3b01      	subs	r3, #1
 80074ac:	b29b      	uxth	r3, r3
 80074ae:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a

    if (huart->RxXferCount == 0U)
 80074b2:	f8b0 305a 	ldrh.w	r3, [r0, #90]	@ 0x5a
 80074b6:	b29b      	uxth	r3, r3
 80074b8:	bb73      	cbnz	r3, 8007518 <UART_RxISR_8BIT+0x90>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80074ba:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80074bc:	e852 3f00 	ldrex	r3, [r2]
 80074c0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80074c4:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 80074c8:	6803      	ldr	r3, [r0, #0]
 80074ca:	2900      	cmp	r1, #0
 80074cc:	d1f5      	bne.n	80074ba <UART_RxISR_8BIT+0x32>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80074ce:	f103 0208 	add.w	r2, r3, #8
 80074d2:	e852 1f00 	ldrex	r1, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80074d6:	f021 0101 	bic.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80074da:	4694      	mov	ip, r2
 80074dc:	e84c 1200 	strex	r2, r1, [ip]
 80074e0:	2a00      	cmp	r2, #0
 80074e2:	d1f4      	bne.n	80074ce <UART_RxISR_8BIT+0x46>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 80074e4:	2120      	movs	r1, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 80074e6:	6682      	str	r2, [r0, #104]	@ 0x68
      huart->RxState = HAL_UART_STATE_READY;
 80074e8:	f8c0 1080 	str.w	r1, [r0, #128]	@ 0x80

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 80074ec:	6642      	str	r2, [r0, #100]	@ 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80074ee:	6e01      	ldr	r1, [r0, #96]	@ 0x60
 80074f0:	2901      	cmp	r1, #1
 80074f2:	d112      	bne.n	800751a <UART_RxISR_8BIT+0x92>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80074f4:	6602      	str	r2, [r0, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80074f6:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80074fa:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80074fe:	e843 2100 	strex	r1, r2, [r3]
 8007502:	2900      	cmp	r1, #0
 8007504:	d1f7      	bne.n	80074f6 <UART_RxISR_8BIT+0x6e>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 8007506:	69da      	ldr	r2, [r3, #28]
 8007508:	06d2      	lsls	r2, r2, #27
 800750a:	d501      	bpl.n	8007510 <UART_RxISR_8BIT+0x88>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 800750c:	2210      	movs	r2, #16
 800750e:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8007510:	f8b0 1058 	ldrh.w	r1, [r0, #88]	@ 0x58
 8007514:	f7ff fe72 	bl	80071fc <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 8007518:	bd08      	pop	{r3, pc}
        HAL_UART_RxCpltCallback(huart);
 800751a:	f7f9 fb6b 	bl	8000bf4 <HAL_UART_RxCpltCallback>
 800751e:	e7fb      	b.n	8007518 <UART_RxISR_8BIT+0x90>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8007520:	699a      	ldr	r2, [r3, #24]
 8007522:	f042 0208 	orr.w	r2, r2, #8
 8007526:	619a      	str	r2, [r3, #24]
}
 8007528:	e7f6      	b.n	8007518 <UART_RxISR_8BIT+0x90>

0800752a <UART_RxISR_16BIT>:
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800752a:	f8d0 2080 	ldr.w	r2, [r0, #128]	@ 0x80
  uint16_t uhMask = huart->Mask;
 800752e:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8007532:	2a22      	cmp	r2, #34	@ 0x22
{
 8007534:	b508      	push	{r3, lr}
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8007536:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8007538:	d140      	bne.n	80075bc <UART_RxISR_16BIT+0x92>
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 800753a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
    tmp = (uint16_t *) huart->pRxBuffPtr ;
    *tmp = (uint16_t)(uhdata & uhMask);
 800753c:	4011      	ands	r1, r2
 800753e:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 8007540:	f822 1b02 	strh.w	r1, [r2], #2
    huart->pRxBuffPtr += 2U;
 8007544:	6542      	str	r2, [r0, #84]	@ 0x54
    huart->RxXferCount--;
 8007546:	f8b0 205a 	ldrh.w	r2, [r0, #90]	@ 0x5a
 800754a:	3a01      	subs	r2, #1
 800754c:	b292      	uxth	r2, r2
 800754e:	f8a0 205a 	strh.w	r2, [r0, #90]	@ 0x5a

    if (huart->RxXferCount == 0U)
 8007552:	f8b0 205a 	ldrh.w	r2, [r0, #90]	@ 0x5a
 8007556:	b292      	uxth	r2, r2
 8007558:	bb62      	cbnz	r2, 80075b4 <UART_RxISR_16BIT+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800755a:	e853 2f00 	ldrex	r2, [r3]
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800755e:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007562:	e843 2100 	strex	r1, r2, [r3]
 8007566:	2900      	cmp	r1, #0
 8007568:	d1f7      	bne.n	800755a <UART_RxISR_16BIT+0x30>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800756a:	f103 0208 	add.w	r2, r3, #8
 800756e:	e852 1f00 	ldrex	r1, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007572:	f021 0101 	bic.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007576:	4694      	mov	ip, r2
 8007578:	e84c 1200 	strex	r2, r1, [ip]
 800757c:	2a00      	cmp	r2, #0
 800757e:	d1f4      	bne.n	800756a <UART_RxISR_16BIT+0x40>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8007580:	2120      	movs	r1, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 8007582:	6682      	str	r2, [r0, #104]	@ 0x68
      huart->RxState = HAL_UART_STATE_READY;
 8007584:	f8c0 1080 	str.w	r1, [r0, #128]	@ 0x80

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8007588:	6642      	str	r2, [r0, #100]	@ 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800758a:	6e01      	ldr	r1, [r0, #96]	@ 0x60
 800758c:	2901      	cmp	r1, #1
 800758e:	d112      	bne.n	80075b6 <UART_RxISR_16BIT+0x8c>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007590:	6602      	str	r2, [r0, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007592:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8007596:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800759a:	e843 2100 	strex	r1, r2, [r3]
 800759e:	2900      	cmp	r1, #0
 80075a0:	d1f7      	bne.n	8007592 <UART_RxISR_16BIT+0x68>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 80075a2:	69da      	ldr	r2, [r3, #28]
 80075a4:	06d2      	lsls	r2, r2, #27
 80075a6:	d501      	bpl.n	80075ac <UART_RxISR_16BIT+0x82>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 80075a8:	2210      	movs	r2, #16
 80075aa:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 80075ac:	f8b0 1058 	ldrh.w	r1, [r0, #88]	@ 0x58
 80075b0:	f7ff fe24 	bl	80071fc <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 80075b4:	bd08      	pop	{r3, pc}
        HAL_UART_RxCpltCallback(huart);
 80075b6:	f7f9 fb1d 	bl	8000bf4 <HAL_UART_RxCpltCallback>
 80075ba:	e7fb      	b.n	80075b4 <UART_RxISR_16BIT+0x8a>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 80075bc:	699a      	ldr	r2, [r3, #24]
 80075be:	f042 0208 	orr.w	r2, r2, #8
 80075c2:	619a      	str	r2, [r3, #24]
}
 80075c4:	e7f6      	b.n	80075b4 <UART_RxISR_16BIT+0x8a>
	...

080075c8 <UART_SetConfig>:
{
 80075c8:	b538      	push	{r3, r4, r5, lr}
 80075ca:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80075cc:	69c0      	ldr	r0, [r0, #28]
 80075ce:	6921      	ldr	r1, [r4, #16]
 80075d0:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80075d2:	6823      	ldr	r3, [r4, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80075d4:	430a      	orrs	r2, r1
 80075d6:	6961      	ldr	r1, [r4, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80075d8:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80075da:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80075dc:	497d      	ldr	r1, [pc, #500]	@ (80077d4 <UART_SetConfig+0x20c>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80075de:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80075e0:	4029      	ands	r1, r5
  tmpreg |= huart->Init.OneBitSampling;
 80075e2:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80075e4:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80075e6:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80075e8:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80075ea:	685a      	ldr	r2, [r3, #4]
 80075ec:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 80075f0:	430a      	orrs	r2, r1
 80075f2:	605a      	str	r2, [r3, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 80075f4:	69a2      	ldr	r2, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80075f6:	6899      	ldr	r1, [r3, #8]
  tmpreg |= huart->Init.OneBitSampling;
 80075f8:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80075fa:	f421 6130 	bic.w	r1, r1, #2816	@ 0xb00
 80075fe:	430a      	orrs	r2, r1
 8007600:	609a      	str	r2, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8007602:	4a75      	ldr	r2, [pc, #468]	@ (80077d8 <UART_SetConfig+0x210>)
 8007604:	4293      	cmp	r3, r2
 8007606:	d113      	bne.n	8007630 <UART_SetConfig+0x68>
 8007608:	4b74      	ldr	r3, [pc, #464]	@ (80077dc <UART_SetConfig+0x214>)
 800760a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800760e:	f003 0303 	and.w	r3, r3, #3
 8007612:	2b02      	cmp	r3, #2
 8007614:	f000 80a8 	beq.w	8007768 <UART_SetConfig+0x1a0>
 8007618:	2b03      	cmp	r3, #3
 800761a:	d021      	beq.n	8007660 <UART_SetConfig+0x98>
 800761c:	2b01      	cmp	r3, #1
 800761e:	f040 80bd 	bne.w	800779c <UART_SetConfig+0x1d4>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007622:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8007626:	f040 809c 	bne.w	8007762 <UART_SetConfig+0x19a>
        pclk = HAL_RCC_GetSysClockFreq();
 800762a:	f7ff f83d 	bl	80066a8 <HAL_RCC_GetSysClockFreq>
        break;
 800762e:	e092      	b.n	8007756 <UART_SetConfig+0x18e>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8007630:	4a6b      	ldr	r2, [pc, #428]	@ (80077e0 <UART_SetConfig+0x218>)
 8007632:	4293      	cmp	r3, r2
 8007634:	d11b      	bne.n	800766e <UART_SetConfig+0xa6>
 8007636:	4b69      	ldr	r3, [pc, #420]	@ (80077dc <UART_SetConfig+0x214>)
 8007638:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800763c:	f003 030c 	and.w	r3, r3, #12
 8007640:	2b08      	cmp	r3, #8
 8007642:	f000 8091 	beq.w	8007768 <UART_SetConfig+0x1a0>
 8007646:	d809      	bhi.n	800765c <UART_SetConfig+0x94>
 8007648:	2b00      	cmp	r3, #0
 800764a:	f000 80ad 	beq.w	80077a8 <UART_SetConfig+0x1e0>
 800764e:	2b04      	cmp	r3, #4
 8007650:	d0e7      	beq.n	8007622 <UART_SetConfig+0x5a>
        ret = HAL_ERROR;
 8007652:	2001      	movs	r0, #1
  huart->RxISR = NULL;
 8007654:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 8007656:	e9c4 331a 	strd	r3, r3, [r4, #104]	@ 0x68
}
 800765a:	bd38      	pop	{r3, r4, r5, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 800765c:	2b0c      	cmp	r3, #12
 800765e:	d1f8      	bne.n	8007652 <UART_SetConfig+0x8a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007660:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8007664:	f000 8084 	beq.w	8007770 <UART_SetConfig+0x1a8>
        pclk = (uint32_t) LSE_VALUE;
 8007668:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 800766c:	e0a3      	b.n	80077b6 <UART_SetConfig+0x1ee>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800766e:	4a5d      	ldr	r2, [pc, #372]	@ (80077e4 <UART_SetConfig+0x21c>)
 8007670:	4293      	cmp	r3, r2
 8007672:	d10e      	bne.n	8007692 <UART_SetConfig+0xca>
 8007674:	4b59      	ldr	r3, [pc, #356]	@ (80077dc <UART_SetConfig+0x214>)
 8007676:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800767a:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 800767e:	2b20      	cmp	r3, #32
 8007680:	d072      	beq.n	8007768 <UART_SetConfig+0x1a0>
 8007682:	d804      	bhi.n	800768e <UART_SetConfig+0xc6>
 8007684:	2b00      	cmp	r3, #0
 8007686:	f000 808f 	beq.w	80077a8 <UART_SetConfig+0x1e0>
 800768a:	2b10      	cmp	r3, #16
 800768c:	e7e0      	b.n	8007650 <UART_SetConfig+0x88>
 800768e:	2b30      	cmp	r3, #48	@ 0x30
 8007690:	e7e5      	b.n	800765e <UART_SetConfig+0x96>
 8007692:	4a55      	ldr	r2, [pc, #340]	@ (80077e8 <UART_SetConfig+0x220>)
 8007694:	4293      	cmp	r3, r2
 8007696:	d10d      	bne.n	80076b4 <UART_SetConfig+0xec>
 8007698:	4b50      	ldr	r3, [pc, #320]	@ (80077dc <UART_SetConfig+0x214>)
 800769a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800769e:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 80076a2:	2b80      	cmp	r3, #128	@ 0x80
 80076a4:	d060      	beq.n	8007768 <UART_SetConfig+0x1a0>
 80076a6:	d803      	bhi.n	80076b0 <UART_SetConfig+0xe8>
 80076a8:	2b00      	cmp	r3, #0
 80076aa:	d07d      	beq.n	80077a8 <UART_SetConfig+0x1e0>
 80076ac:	2b40      	cmp	r3, #64	@ 0x40
 80076ae:	e7cf      	b.n	8007650 <UART_SetConfig+0x88>
 80076b0:	2bc0      	cmp	r3, #192	@ 0xc0
 80076b2:	e7d4      	b.n	800765e <UART_SetConfig+0x96>
 80076b4:	4a4d      	ldr	r2, [pc, #308]	@ (80077ec <UART_SetConfig+0x224>)
 80076b6:	4293      	cmp	r3, r2
 80076b8:	d110      	bne.n	80076dc <UART_SetConfig+0x114>
 80076ba:	4b48      	ldr	r3, [pc, #288]	@ (80077dc <UART_SetConfig+0x214>)
 80076bc:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80076c0:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80076c4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80076c8:	d04e      	beq.n	8007768 <UART_SetConfig+0x1a0>
 80076ca:	d804      	bhi.n	80076d6 <UART_SetConfig+0x10e>
 80076cc:	2b00      	cmp	r3, #0
 80076ce:	d06b      	beq.n	80077a8 <UART_SetConfig+0x1e0>
 80076d0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80076d4:	e7bc      	b.n	8007650 <UART_SetConfig+0x88>
 80076d6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80076da:	e7c0      	b.n	800765e <UART_SetConfig+0x96>
 80076dc:	4a44      	ldr	r2, [pc, #272]	@ (80077f0 <UART_SetConfig+0x228>)
 80076de:	4293      	cmp	r3, r2
 80076e0:	d110      	bne.n	8007704 <UART_SetConfig+0x13c>
 80076e2:	4b3e      	ldr	r3, [pc, #248]	@ (80077dc <UART_SetConfig+0x214>)
 80076e4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80076e8:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 80076ec:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80076f0:	d03a      	beq.n	8007768 <UART_SetConfig+0x1a0>
 80076f2:	d804      	bhi.n	80076fe <UART_SetConfig+0x136>
 80076f4:	2b00      	cmp	r3, #0
 80076f6:	d051      	beq.n	800779c <UART_SetConfig+0x1d4>
 80076f8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80076fc:	e7a8      	b.n	8007650 <UART_SetConfig+0x88>
 80076fe:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8007702:	e7ac      	b.n	800765e <UART_SetConfig+0x96>
 8007704:	4a3b      	ldr	r2, [pc, #236]	@ (80077f4 <UART_SetConfig+0x22c>)
 8007706:	4293      	cmp	r3, r2
 8007708:	d110      	bne.n	800772c <UART_SetConfig+0x164>
 800770a:	4b34      	ldr	r3, [pc, #208]	@ (80077dc <UART_SetConfig+0x214>)
 800770c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007710:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 8007714:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007718:	d026      	beq.n	8007768 <UART_SetConfig+0x1a0>
 800771a:	d804      	bhi.n	8007726 <UART_SetConfig+0x15e>
 800771c:	2b00      	cmp	r3, #0
 800771e:	d043      	beq.n	80077a8 <UART_SetConfig+0x1e0>
 8007720:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007724:	e794      	b.n	8007650 <UART_SetConfig+0x88>
 8007726:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800772a:	e798      	b.n	800765e <UART_SetConfig+0x96>
 800772c:	4a32      	ldr	r2, [pc, #200]	@ (80077f8 <UART_SetConfig+0x230>)
 800772e:	4293      	cmp	r3, r2
 8007730:	d18f      	bne.n	8007652 <UART_SetConfig+0x8a>
 8007732:	4b2a      	ldr	r3, [pc, #168]	@ (80077dc <UART_SetConfig+0x214>)
 8007734:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007738:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800773c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007740:	d012      	beq.n	8007768 <UART_SetConfig+0x1a0>
 8007742:	d803      	bhi.n	800774c <UART_SetConfig+0x184>
 8007744:	b383      	cbz	r3, 80077a8 <UART_SetConfig+0x1e0>
 8007746:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800774a:	e781      	b.n	8007650 <UART_SetConfig+0x88>
 800774c:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 8007750:	e785      	b.n	800765e <UART_SetConfig+0x96>
        pclk = HAL_RCC_GetPCLK1Freq();
 8007752:	f7ff f875 	bl	8006840 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 8007756:	b958      	cbnz	r0, 8007770 <UART_SetConfig+0x1a8>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007758:	2000      	movs	r0, #0
 800775a:	e77b      	b.n	8007654 <UART_SetConfig+0x8c>
        pclk = HAL_RCC_GetPCLK2Freq();
 800775c:	f7ff f880 	bl	8006860 <HAL_RCC_GetPCLK2Freq>
        break;
 8007760:	e027      	b.n	80077b2 <UART_SetConfig+0x1ea>
        pclk = HAL_RCC_GetSysClockFreq();
 8007762:	f7fe ffa1 	bl	80066a8 <HAL_RCC_GetSysClockFreq>
        break;
 8007766:	e024      	b.n	80077b2 <UART_SetConfig+0x1ea>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007768:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) HSI_VALUE;
 800776c:	4823      	ldr	r0, [pc, #140]	@ (80077fc <UART_SetConfig+0x234>)
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800776e:	d122      	bne.n	80077b6 <UART_SetConfig+0x1ee>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8007770:	6862      	ldr	r2, [r4, #4]
 8007772:	0853      	lsrs	r3, r2, #1
 8007774:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8007778:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800777c:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 8007780:	f1a3 0110 	sub.w	r1, r3, #16
 8007784:	4291      	cmp	r1, r2
 8007786:	f63f af64 	bhi.w	8007652 <UART_SetConfig+0x8a>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 800778a:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 800778e:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
 8007792:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8007794:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
 8007796:	4313      	orrs	r3, r2
 8007798:	60cb      	str	r3, [r1, #12]
 800779a:	e7dd      	b.n	8007758 <UART_SetConfig+0x190>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800779c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 80077a0:	d1dc      	bne.n	800775c <UART_SetConfig+0x194>
        pclk = HAL_RCC_GetPCLK2Freq();
 80077a2:	f7ff f85d 	bl	8006860 <HAL_RCC_GetPCLK2Freq>
        break;
 80077a6:	e7d6      	b.n	8007756 <UART_SetConfig+0x18e>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80077a8:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 80077ac:	d0d1      	beq.n	8007752 <UART_SetConfig+0x18a>
        pclk = HAL_RCC_GetPCLK1Freq();
 80077ae:	f7ff f847 	bl	8006840 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 80077b2:	2800      	cmp	r0, #0
 80077b4:	d0d0      	beq.n	8007758 <UART_SetConfig+0x190>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 80077b6:	6862      	ldr	r2, [r4, #4]
 80077b8:	eb00 0352 	add.w	r3, r0, r2, lsr #1
 80077bc:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80077c0:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 80077c4:	f1a3 0110 	sub.w	r1, r3, #16
 80077c8:	4291      	cmp	r1, r2
 80077ca:	f63f af42 	bhi.w	8007652 <UART_SetConfig+0x8a>
        huart->Instance->BRR = (uint16_t)usartdiv;
 80077ce:	6822      	ldr	r2, [r4, #0]
 80077d0:	60d3      	str	r3, [r2, #12]
 80077d2:	e7c1      	b.n	8007758 <UART_SetConfig+0x190>
 80077d4:	efff69f3 	.word	0xefff69f3
 80077d8:	40011000 	.word	0x40011000
 80077dc:	40023800 	.word	0x40023800
 80077e0:	40004400 	.word	0x40004400
 80077e4:	40004800 	.word	0x40004800
 80077e8:	40004c00 	.word	0x40004c00
 80077ec:	40005000 	.word	0x40005000
 80077f0:	40011400 	.word	0x40011400
 80077f4:	40007800 	.word	0x40007800
 80077f8:	40007c00 	.word	0x40007c00
 80077fc:	00f42400 	.word	0x00f42400

08007800 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8007800:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8007802:	07da      	lsls	r2, r3, #31
{
 8007804:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8007806:	d506      	bpl.n	8007816 <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8007808:	6801      	ldr	r1, [r0, #0]
 800780a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800780c:	684a      	ldr	r2, [r1, #4]
 800780e:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
 8007812:	4322      	orrs	r2, r4
 8007814:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8007816:	079c      	lsls	r4, r3, #30
 8007818:	d506      	bpl.n	8007828 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 800781a:	6801      	ldr	r1, [r0, #0]
 800781c:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 800781e:	684a      	ldr	r2, [r1, #4]
 8007820:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8007824:	4322      	orrs	r2, r4
 8007826:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8007828:	0759      	lsls	r1, r3, #29
 800782a:	d506      	bpl.n	800783a <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 800782c:	6801      	ldr	r1, [r0, #0]
 800782e:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 8007830:	684a      	ldr	r2, [r1, #4]
 8007832:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8007836:	4322      	orrs	r2, r4
 8007838:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 800783a:	071a      	lsls	r2, r3, #28
 800783c:	d506      	bpl.n	800784c <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800783e:	6801      	ldr	r1, [r0, #0]
 8007840:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 8007842:	684a      	ldr	r2, [r1, #4]
 8007844:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8007848:	4322      	orrs	r2, r4
 800784a:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 800784c:	06dc      	lsls	r4, r3, #27
 800784e:	d506      	bpl.n	800785e <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8007850:	6801      	ldr	r1, [r0, #0]
 8007852:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8007854:	688a      	ldr	r2, [r1, #8]
 8007856:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800785a:	4322      	orrs	r2, r4
 800785c:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 800785e:	0699      	lsls	r1, r3, #26
 8007860:	d506      	bpl.n	8007870 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8007862:	6801      	ldr	r1, [r0, #0]
 8007864:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8007866:	688a      	ldr	r2, [r1, #8]
 8007868:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800786c:	4322      	orrs	r2, r4
 800786e:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8007870:	065a      	lsls	r2, r3, #25
 8007872:	d510      	bpl.n	8007896 <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8007874:	6801      	ldr	r1, [r0, #0]
 8007876:	6c04      	ldr	r4, [r0, #64]	@ 0x40
 8007878:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800787a:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 800787e:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 8007882:	ea42 0204 	orr.w	r2, r2, r4
 8007886:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8007888:	d105      	bne.n	8007896 <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 800788a:	684a      	ldr	r2, [r1, #4]
 800788c:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 800788e:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
 8007892:	4322      	orrs	r2, r4
 8007894:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8007896:	061b      	lsls	r3, r3, #24
 8007898:	d506      	bpl.n	80078a8 <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 800789a:	6802      	ldr	r2, [r0, #0]
 800789c:	6c81      	ldr	r1, [r0, #72]	@ 0x48
 800789e:	6853      	ldr	r3, [r2, #4]
 80078a0:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 80078a4:	430b      	orrs	r3, r1
 80078a6:	6053      	str	r3, [r2, #4]
}
 80078a8:	bd10      	pop	{r4, pc}

080078aa <UART_WaitOnFlagUntilTimeout>:
{
 80078aa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80078ae:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80078b2:	4605      	mov	r5, r0
 80078b4:	460f      	mov	r7, r1
 80078b6:	4616      	mov	r6, r2
 80078b8:	4698      	mov	r8, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80078ba:	682a      	ldr	r2, [r5, #0]
 80078bc:	69d3      	ldr	r3, [r2, #28]
 80078be:	ea37 0303 	bics.w	r3, r7, r3
 80078c2:	bf0c      	ite	eq
 80078c4:	2301      	moveq	r3, #1
 80078c6:	2300      	movne	r3, #0
 80078c8:	42b3      	cmp	r3, r6
 80078ca:	d001      	beq.n	80078d0 <UART_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
 80078cc:	2000      	movs	r0, #0
 80078ce:	e028      	b.n	8007922 <UART_WaitOnFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
 80078d0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80078d4:	d0f2      	beq.n	80078bc <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80078d6:	f7fd f8a3 	bl	8004a20 <HAL_GetTick>
 80078da:	eba0 0008 	sub.w	r0, r0, r8
 80078de:	682c      	ldr	r4, [r5, #0]
 80078e0:	4548      	cmp	r0, r9
 80078e2:	d802      	bhi.n	80078ea <UART_WaitOnFlagUntilTimeout+0x40>
 80078e4:	f1b9 0f00 	cmp.w	r9, #0
 80078e8:	d11d      	bne.n	8007926 <UART_WaitOnFlagUntilTimeout+0x7c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80078ea:	e854 3f00 	ldrex	r3, [r4]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80078ee:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80078f2:	e844 3200 	strex	r2, r3, [r4]
 80078f6:	2a00      	cmp	r2, #0
 80078f8:	d1f7      	bne.n	80078ea <UART_WaitOnFlagUntilTimeout+0x40>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80078fa:	f104 0308 	add.w	r3, r4, #8
 80078fe:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007902:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007906:	f104 0108 	add.w	r1, r4, #8
 800790a:	e841 3200 	strex	r2, r3, [r1]
 800790e:	2a00      	cmp	r2, #0
 8007910:	d1f3      	bne.n	80078fa <UART_WaitOnFlagUntilTimeout+0x50>
        huart->gState = HAL_UART_STATE_READY;
 8007912:	2320      	movs	r3, #32
 8007914:	67eb      	str	r3, [r5, #124]	@ 0x7c
        huart->RxState = HAL_UART_STATE_READY;
 8007916:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
          __HAL_UNLOCK(huart);
 800791a:	2300      	movs	r3, #0
        return HAL_TIMEOUT;
 800791c:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 800791e:	f885 3078 	strb.w	r3, [r5, #120]	@ 0x78
}
 8007922:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8007926:	6823      	ldr	r3, [r4, #0]
 8007928:	075a      	lsls	r2, r3, #29
 800792a:	d5c6      	bpl.n	80078ba <UART_WaitOnFlagUntilTimeout+0x10>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 800792c:	69e3      	ldr	r3, [r4, #28]
 800792e:	051b      	lsls	r3, r3, #20
 8007930:	d5c3      	bpl.n	80078ba <UART_WaitOnFlagUntilTimeout+0x10>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8007932:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8007936:	6223      	str	r3, [r4, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007938:	e854 3f00 	ldrex	r3, [r4]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800793c:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007940:	e844 3200 	strex	r2, r3, [r4]
 8007944:	2a00      	cmp	r2, #0
 8007946:	d1f7      	bne.n	8007938 <UART_WaitOnFlagUntilTimeout+0x8e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007948:	f104 0308 	add.w	r3, r4, #8
 800794c:	e853 3f00 	ldrex	r3, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007950:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007954:	f104 0108 	add.w	r1, r4, #8
 8007958:	e841 3200 	strex	r2, r3, [r1]
 800795c:	2a00      	cmp	r2, #0
 800795e:	d1f3      	bne.n	8007948 <UART_WaitOnFlagUntilTimeout+0x9e>
          huart->gState = HAL_UART_STATE_READY;
 8007960:	2320      	movs	r3, #32
 8007962:	67eb      	str	r3, [r5, #124]	@ 0x7c
          huart->RxState = HAL_UART_STATE_READY;
 8007964:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8007968:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
          return HAL_TIMEOUT;
 800796c:	e7d5      	b.n	800791a <UART_WaitOnFlagUntilTimeout+0x70>

0800796e <HAL_UART_Transmit>:
{
 800796e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007972:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8007974:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
{
 8007976:	4604      	mov	r4, r0
 8007978:	460e      	mov	r6, r1
  if (huart->gState == HAL_UART_STATE_READY)
 800797a:	2b20      	cmp	r3, #32
{
 800797c:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 800797e:	d141      	bne.n	8007a04 <HAL_UART_Transmit+0x96>
    if ((pData == NULL) || (Size == 0U))
 8007980:	2900      	cmp	r1, #0
 8007982:	d041      	beq.n	8007a08 <HAL_UART_Transmit+0x9a>
 8007984:	2a00      	cmp	r2, #0
 8007986:	d03f      	beq.n	8007a08 <HAL_UART_Transmit+0x9a>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007988:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800798a:	2500      	movs	r5, #0
 800798c:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007990:	67c3      	str	r3, [r0, #124]	@ 0x7c
    tickstart = HAL_GetTick();
 8007992:	f7fd f845 	bl	8004a20 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007996:	68a3      	ldr	r3, [r4, #8]
    tickstart = HAL_GetTick();
 8007998:	4681      	mov	r9, r0
    huart->TxXferSize  = Size;
 800799a:	f8a4 7050 	strh.w	r7, [r4, #80]	@ 0x50
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800799e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->TxXferCount = Size;
 80079a2:	f8a4 7052 	strh.w	r7, [r4, #82]	@ 0x52
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80079a6:	d103      	bne.n	80079b0 <HAL_UART_Transmit+0x42>
 80079a8:	6923      	ldr	r3, [r4, #16]
 80079aa:	b90b      	cbnz	r3, 80079b0 <HAL_UART_Transmit+0x42>
 80079ac:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 80079ae:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 80079b0:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80079b4:	464b      	mov	r3, r9
 80079b6:	f8cd 8000 	str.w	r8, [sp]
    while (huart->TxXferCount > 0U)
 80079ba:	b292      	uxth	r2, r2
 80079bc:	b93a      	cbnz	r2, 80079ce <HAL_UART_Transmit+0x60>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80079be:	2140      	movs	r1, #64	@ 0x40
 80079c0:	4620      	mov	r0, r4
 80079c2:	f7ff ff72 	bl	80078aa <UART_WaitOnFlagUntilTimeout>
 80079c6:	b940      	cbnz	r0, 80079da <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 80079c8:	2320      	movs	r3, #32
 80079ca:	67e3      	str	r3, [r4, #124]	@ 0x7c
    return HAL_OK;
 80079cc:	e006      	b.n	80079dc <HAL_UART_Transmit+0x6e>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80079ce:	2200      	movs	r2, #0
 80079d0:	2180      	movs	r1, #128	@ 0x80
 80079d2:	4620      	mov	r0, r4
 80079d4:	f7ff ff69 	bl	80078aa <UART_WaitOnFlagUntilTimeout>
 80079d8:	b118      	cbz	r0, 80079e2 <HAL_UART_Transmit+0x74>
        return HAL_TIMEOUT;
 80079da:	2003      	movs	r0, #3
}
 80079dc:	b003      	add	sp, #12
 80079de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80079e2:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 80079e4:	b95e      	cbnz	r6, 80079fe <HAL_UART_Transmit+0x90>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80079e6:	f835 3b02 	ldrh.w	r3, [r5], #2
 80079ea:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 80079ee:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
 80079f0:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
 80079f4:	3a01      	subs	r2, #1
 80079f6:	b292      	uxth	r2, r2
 80079f8:	f8a4 2052 	strh.w	r2, [r4, #82]	@ 0x52
 80079fc:	e7d8      	b.n	80079b0 <HAL_UART_Transmit+0x42>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 80079fe:	f816 3b01 	ldrb.w	r3, [r6], #1
 8007a02:	e7f4      	b.n	80079ee <HAL_UART_Transmit+0x80>
    return HAL_BUSY;
 8007a04:	2002      	movs	r0, #2
 8007a06:	e7e9      	b.n	80079dc <HAL_UART_Transmit+0x6e>
      return  HAL_ERROR;
 8007a08:	2001      	movs	r0, #1
 8007a0a:	e7e7      	b.n	80079dc <HAL_UART_Transmit+0x6e>

08007a0c <UART_CheckIdleState>:
{
 8007a0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007a0e:	2500      	movs	r5, #0
{
 8007a10:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007a12:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
  tickstart = HAL_GetTick();
 8007a16:	f7fd f803 	bl	8004a20 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8007a1a:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
 8007a1c:	4603      	mov	r3, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8007a1e:	6812      	ldr	r2, [r2, #0]
 8007a20:	0712      	lsls	r2, r2, #28
 8007a22:	d40a      	bmi.n	8007a3a <UART_CheckIdleState+0x2e>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007a24:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8007a26:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 8007a28:	f884 0078 	strb.w	r0, [r4, #120]	@ 0x78
  huart->gState = HAL_UART_STATE_READY;
 8007a2c:	67e3      	str	r3, [r4, #124]	@ 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 8007a2e:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007a32:	6620      	str	r0, [r4, #96]	@ 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8007a34:	6660      	str	r0, [r4, #100]	@ 0x64
}
 8007a36:	b003      	add	sp, #12
 8007a38:	bd30      	pop	{r4, r5, pc}
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8007a3a:	f06f 427e 	mvn.w	r2, #4261412864	@ 0xfe000000
 8007a3e:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8007a42:	4620      	mov	r0, r4
 8007a44:	9200      	str	r2, [sp, #0]
 8007a46:	462a      	mov	r2, r5
 8007a48:	f7ff ff2f 	bl	80078aa <UART_WaitOnFlagUntilTimeout>
 8007a4c:	2800      	cmp	r0, #0
 8007a4e:	d0e9      	beq.n	8007a24 <UART_CheckIdleState+0x18>
      return HAL_TIMEOUT;
 8007a50:	2003      	movs	r0, #3
 8007a52:	e7f0      	b.n	8007a36 <UART_CheckIdleState+0x2a>

08007a54 <HAL_UART_Init>:
{
 8007a54:	b510      	push	{r4, lr}
  if (huart == NULL)
 8007a56:	4604      	mov	r4, r0
 8007a58:	b340      	cbz	r0, 8007aac <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8007a5a:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
 8007a5c:	b91b      	cbnz	r3, 8007a66 <HAL_UART_Init+0x12>
    huart->Lock = HAL_UNLOCKED;
 8007a5e:	f880 3078 	strb.w	r3, [r0, #120]	@ 0x78
    HAL_UART_MspInit(huart);
 8007a62:	f7f9 faf3 	bl	800104c <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8007a66:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8007a68:	2324      	movs	r3, #36	@ 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
 8007a6a:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
 8007a6c:	67e3      	str	r3, [r4, #124]	@ 0x7c
  __HAL_UART_DISABLE(huart);
 8007a6e:	6813      	ldr	r3, [r2, #0]
 8007a70:	f023 0301 	bic.w	r3, r3, #1
 8007a74:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8007a76:	f7ff fda7 	bl	80075c8 <UART_SetConfig>
 8007a7a:	2801      	cmp	r0, #1
 8007a7c:	d016      	beq.n	8007aac <HAL_UART_Init+0x58>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8007a7e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007a80:	b113      	cbz	r3, 8007a88 <HAL_UART_Init+0x34>
    UART_AdvFeatureConfig(huart);
 8007a82:	4620      	mov	r0, r4
 8007a84:	f7ff febc 	bl	8007800 <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8007a88:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
 8007a8a:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8007a8c:	685a      	ldr	r2, [r3, #4]
 8007a8e:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8007a92:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8007a94:	689a      	ldr	r2, [r3, #8]
 8007a96:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8007a9a:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8007a9c:	681a      	ldr	r2, [r3, #0]
 8007a9e:	f042 0201 	orr.w	r2, r2, #1
}
 8007aa2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
 8007aa6:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 8007aa8:	f7ff bfb0 	b.w	8007a0c <UART_CheckIdleState>
}
 8007aac:	2001      	movs	r0, #1
 8007aae:	bd10      	pop	{r4, pc}

08007ab0 <UART_Start_Receive_IT>:
{
 8007ab0:	b510      	push	{r4, lr}
  huart->RxXferSize  = Size;
 8007ab2:	f8a0 2058 	strh.w	r2, [r0, #88]	@ 0x58
  huart->RxISR       = NULL;
 8007ab6:	2300      	movs	r3, #0
  huart->RxXferCount = Size;
 8007ab8:	f8a0 205a 	strh.w	r2, [r0, #90]	@ 0x5a
  UART_MASK_COMPUTATION(huart);
 8007abc:	6882      	ldr	r2, [r0, #8]
  huart->pRxBuffPtr  = pData;
 8007abe:	6541      	str	r1, [r0, #84]	@ 0x54
  UART_MASK_COMPUTATION(huart);
 8007ac0:	f5b2 5f80 	cmp.w	r2, #4096	@ 0x1000
  huart->RxISR       = NULL;
 8007ac4:	6683      	str	r3, [r0, #104]	@ 0x68
  UART_MASK_COMPUTATION(huart);
 8007ac6:	d130      	bne.n	8007b2a <UART_Start_Receive_IT+0x7a>
 8007ac8:	6903      	ldr	r3, [r0, #16]
 8007aca:	2b00      	cmp	r3, #0
 8007acc:	f240 13ff 	movw	r3, #511	@ 0x1ff
 8007ad0:	bf18      	it	ne
 8007ad2:	23ff      	movne	r3, #255	@ 0xff
 8007ad4:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007ad8:	2300      	movs	r3, #0
 8007ada:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 8007ade:	2322      	movs	r3, #34	@ 0x22
 8007ae0:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007ae4:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007ae6:	f102 0308 	add.w	r3, r2, #8
 8007aea:	e853 3f00 	ldrex	r3, [r3]
 8007aee:	f043 0301 	orr.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007af2:	3208      	adds	r2, #8
 8007af4:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8007af8:	6802      	ldr	r2, [r0, #0]
 8007afa:	2900      	cmp	r1, #0
 8007afc:	d1f2      	bne.n	8007ae4 <UART_Start_Receive_IT+0x34>
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007afe:	6883      	ldr	r3, [r0, #8]
 8007b00:	6901      	ldr	r1, [r0, #16]
 8007b02:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->RxISR = UART_RxISR_16BIT;
 8007b06:	4b15      	ldr	r3, [pc, #84]	@ (8007b5c <UART_Start_Receive_IT+0xac>)
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007b08:	d103      	bne.n	8007b12 <UART_Start_Receive_IT+0x62>
    huart->RxISR = UART_RxISR_16BIT;
 8007b0a:	4c15      	ldr	r4, [pc, #84]	@ (8007b60 <UART_Start_Receive_IT+0xb0>)
 8007b0c:	2900      	cmp	r1, #0
 8007b0e:	bf08      	it	eq
 8007b10:	4623      	moveq	r3, r4
 8007b12:	6683      	str	r3, [r0, #104]	@ 0x68
  if (huart->Init.Parity != UART_PARITY_NONE)
 8007b14:	b1c9      	cbz	r1, 8007b4a <UART_Start_Receive_IT+0x9a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007b16:	e852 3f00 	ldrex	r3, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 8007b1a:	f443 7390 	orr.w	r3, r3, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007b1e:	e842 3100 	strex	r1, r3, [r2]
 8007b22:	2900      	cmp	r1, #0
 8007b24:	d1f7      	bne.n	8007b16 <UART_Start_Receive_IT+0x66>
}
 8007b26:	2000      	movs	r0, #0
 8007b28:	bd10      	pop	{r4, pc}
  UART_MASK_COMPUTATION(huart);
 8007b2a:	b92a      	cbnz	r2, 8007b38 <UART_Start_Receive_IT+0x88>
 8007b2c:	6903      	ldr	r3, [r0, #16]
 8007b2e:	2b00      	cmp	r3, #0
 8007b30:	bf14      	ite	ne
 8007b32:	237f      	movne	r3, #127	@ 0x7f
 8007b34:	23ff      	moveq	r3, #255	@ 0xff
 8007b36:	e7cd      	b.n	8007ad4 <UART_Start_Receive_IT+0x24>
 8007b38:	f1b2 5f80 	cmp.w	r2, #268435456	@ 0x10000000
 8007b3c:	d1ca      	bne.n	8007ad4 <UART_Start_Receive_IT+0x24>
 8007b3e:	6903      	ldr	r3, [r0, #16]
 8007b40:	2b00      	cmp	r3, #0
 8007b42:	bf14      	ite	ne
 8007b44:	233f      	movne	r3, #63	@ 0x3f
 8007b46:	237f      	moveq	r3, #127	@ 0x7f
 8007b48:	e7c4      	b.n	8007ad4 <UART_Start_Receive_IT+0x24>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007b4a:	e852 3f00 	ldrex	r3, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE);
 8007b4e:	f043 0320 	orr.w	r3, r3, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007b52:	e842 3100 	strex	r1, r3, [r2]
 8007b56:	2900      	cmp	r1, #0
 8007b58:	d1f7      	bne.n	8007b4a <UART_Start_Receive_IT+0x9a>
 8007b5a:	e7e4      	b.n	8007b26 <UART_Start_Receive_IT+0x76>
 8007b5c:	08007489 	.word	0x08007489
 8007b60:	0800752b 	.word	0x0800752b

08007b64 <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
 8007b64:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
 8007b68:	2b20      	cmp	r3, #32
{
 8007b6a:	b430      	push	{r4, r5}
  if (huart->RxState == HAL_UART_STATE_READY)
 8007b6c:	d112      	bne.n	8007b94 <HAL_UART_Receive_IT+0x30>
    if ((pData == NULL) || (Size == 0U))
 8007b6e:	b1a1      	cbz	r1, 8007b9a <HAL_UART_Receive_IT+0x36>
 8007b70:	b19a      	cbz	r2, 8007b9a <HAL_UART_Receive_IT+0x36>
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007b72:	2300      	movs	r3, #0
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 8007b74:	6804      	ldr	r4, [r0, #0]
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007b76:	6603      	str	r3, [r0, #96]	@ 0x60
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 8007b78:	6863      	ldr	r3, [r4, #4]
 8007b7a:	021b      	lsls	r3, r3, #8
 8007b7c:	d507      	bpl.n	8007b8e <HAL_UART_Receive_IT+0x2a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007b7e:	e854 3f00 	ldrex	r3, [r4]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 8007b82:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007b86:	e844 3500 	strex	r5, r3, [r4]
 8007b8a:	2d00      	cmp	r5, #0
 8007b8c:	d1f7      	bne.n	8007b7e <HAL_UART_Receive_IT+0x1a>
}
 8007b8e:	bc30      	pop	{r4, r5}
    return (UART_Start_Receive_IT(huart, pData, Size));
 8007b90:	f7ff bf8e 	b.w	8007ab0 <UART_Start_Receive_IT>
    return HAL_BUSY;
 8007b94:	2002      	movs	r0, #2
}
 8007b96:	bc30      	pop	{r4, r5}
 8007b98:	4770      	bx	lr
      return HAL_ERROR;
 8007b9a:	2001      	movs	r0, #1
 8007b9c:	e7fb      	b.n	8007b96 <HAL_UART_Receive_IT+0x32>

08007b9e <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007b9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007ba2:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8007ba6:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8007baa:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
 8007bae:	ea43 0308 	orr.w	r3, r3, r8
 8007bb2:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8007bb6:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8007bba:	6809      	ldr	r1, [r1, #0]
 8007bbc:	b991      	cbnz	r1, 8007be4 <FMC_SDRAM_Init+0x46>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007bbe:	ea43 030e 	orr.w	r3, r3, lr
 8007bc2:	6801      	ldr	r1, [r0, #0]
 8007bc4:	4313      	orrs	r3, r2
 8007bc6:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8007bca:	ea43 030c 	orr.w	r3, r3, ip
 8007bce:	f021 017f 	bic.w	r1, r1, #127	@ 0x7f
 8007bd2:	433b      	orrs	r3, r7
 8007bd4:	4333      	orrs	r3, r6
 8007bd6:	432b      	orrs	r3, r5
 8007bd8:	4323      	orrs	r3, r4
 8007bda:	430b      	orrs	r3, r1
 8007bdc:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8007bde:	2000      	movs	r0, #0
 8007be0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007be4:	6801      	ldr	r1, [r0, #0]
 8007be6:	ea43 030e 	orr.w	r3, r3, lr
 8007bea:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8007bee:	430b      	orrs	r3, r1
 8007bf0:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8007bf2:	ea42 030c 	orr.w	r3, r2, ip
 8007bf6:	6841      	ldr	r1, [r0, #4]
 8007bf8:	433b      	orrs	r3, r7
 8007bfa:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8007bfe:	4333      	orrs	r3, r6
 8007c00:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8007c04:	432b      	orrs	r3, r5
 8007c06:	4323      	orrs	r3, r4
 8007c08:	4313      	orrs	r3, r2
 8007c0a:	6043      	str	r3, [r0, #4]
 8007c0c:	e7e7      	b.n	8007bde <FMC_SDRAM_Init+0x40>

08007c0e <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007c0e:	68cb      	ldr	r3, [r1, #12]
 8007c10:	f103 3cff 	add.w	ip, r3, #4294967295
 8007c14:	694b      	ldr	r3, [r1, #20]
{
 8007c16:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007c18:	3b01      	subs	r3, #1
 8007c1a:	680f      	ldr	r7, [r1, #0]
 8007c1c:	684c      	ldr	r4, [r1, #4]
 8007c1e:	688e      	ldr	r6, [r1, #8]
 8007c20:	051b      	lsls	r3, r3, #20
 8007c22:	690d      	ldr	r5, [r1, #16]
 8007c24:	3c01      	subs	r4, #1
 8007c26:	6989      	ldr	r1, [r1, #24]
 8007c28:	3e01      	subs	r6, #1
 8007c2a:	3d01      	subs	r5, #1
 8007c2c:	3f01      	subs	r7, #1
 8007c2e:	3901      	subs	r1, #1
 8007c30:	0124      	lsls	r4, r4, #4
 8007c32:	0236      	lsls	r6, r6, #8
 8007c34:	042d      	lsls	r5, r5, #16
 8007c36:	0609      	lsls	r1, r1, #24
 8007c38:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8007c3c:	b95a      	cbnz	r2, 8007c56 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007c3e:	433b      	orrs	r3, r7
 8007c40:	6882      	ldr	r2, [r0, #8]
 8007c42:	4323      	orrs	r3, r4
 8007c44:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007c48:	4333      	orrs	r3, r6
 8007c4a:	432b      	orrs	r3, r5
 8007c4c:	430b      	orrs	r3, r1
 8007c4e:	4313      	orrs	r3, r2
 8007c50:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8007c52:	2000      	movs	r0, #0
 8007c54:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007c56:	6882      	ldr	r2, [r0, #8]
 8007c58:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8007c5c:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8007c60:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007c62:	ea44 0306 	orr.w	r3, r4, r6
 8007c66:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007c68:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007c6a:	68c2      	ldr	r2, [r0, #12]
 8007c6c:	432b      	orrs	r3, r5
 8007c6e:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007c72:	430b      	orrs	r3, r1
 8007c74:	4313      	orrs	r3, r2
 8007c76:	60c3      	str	r3, [r0, #12]
 8007c78:	e7eb      	b.n	8007c52 <FMC_SDRAM_Timing_Init+0x44>

08007c7a <FMC_SDRAM_SendCommand>:
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8007c7a:	6902      	ldr	r2, [r0, #16]
{
 8007c7c:	b510      	push	{r4, lr}
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8007c7e:	e9d1 3400 	ldrd	r3, r4, [r1]
 8007c82:	0d92      	lsrs	r2, r2, #22
 8007c84:	4323      	orrs	r3, r4
 8007c86:	68cc      	ldr	r4, [r1, #12]
 8007c88:	0592      	lsls	r2, r2, #22
 8007c8a:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
 8007c8e:	4313      	orrs	r3, r2
 8007c90:	688a      	ldr	r2, [r1, #8]
 8007c92:	3a01      	subs	r2, #1
 8007c94:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007c98:	6103      	str	r3, [r0, #16]
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
 8007c9a:	2000      	movs	r0, #0
 8007c9c:	bd10      	pop	{r4, pc}

08007c9e <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8007c9e:	6943      	ldr	r3, [r0, #20]
 8007ca0:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8007ca4:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
 8007ca8:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8007cac:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8007cae:	2000      	movs	r0, #0
 8007cb0:	4770      	bx	lr
	...

08007cb4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007cb4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007cb8:	b113      	cbz	r3, 8007cc0 <osKernelInitialize+0xc>
    stat = osErrorISR;
 8007cba:	f06f 0005 	mvn.w	r0, #5
 8007cbe:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007cc0:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007cc4:	4b07      	ldr	r3, [pc, #28]	@ (8007ce4 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8007cc6:	b912      	cbnz	r2, 8007cce <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007cc8:	f3ef 8211 	mrs	r2, BASEPRI
 8007ccc:	b112      	cbz	r2, 8007cd4 <osKernelInitialize+0x20>
 8007cce:	681a      	ldr	r2, [r3, #0]
 8007cd0:	2a02      	cmp	r2, #2
 8007cd2:	d0f2      	beq.n	8007cba <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8007cd4:	6818      	ldr	r0, [r3, #0]
 8007cd6:	b910      	cbnz	r0, 8007cde <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007cd8:	2201      	movs	r2, #1
 8007cda:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007cdc:	4770      	bx	lr
    } else {
      stat = osError;
 8007cde:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8007ce2:	4770      	bx	lr
 8007ce4:	2000251c 	.word	0x2000251c

08007ce8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007ce8:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007cea:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007cee:	b113      	cbz	r3, 8007cf6 <osKernelStart+0xe>
    stat = osErrorISR;
 8007cf0:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8007cf4:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007cf6:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007cfa:	4b0a      	ldr	r3, [pc, #40]	@ (8007d24 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8007cfc:	b912      	cbnz	r2, 8007d04 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007cfe:	f3ef 8211 	mrs	r2, BASEPRI
 8007d02:	b112      	cbz	r2, 8007d0a <osKernelStart+0x22>
 8007d04:	681a      	ldr	r2, [r3, #0]
 8007d06:	2a02      	cmp	r2, #2
 8007d08:	d0f2      	beq.n	8007cf0 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8007d0a:	681a      	ldr	r2, [r3, #0]
 8007d0c:	2a01      	cmp	r2, #1
 8007d0e:	d105      	bne.n	8007d1c <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8007d10:	2202      	movs	r2, #2
 8007d12:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8007d14:	f001 fe66 	bl	80099e4 <vTaskStartScheduler>
      stat = osOK;
 8007d18:	2000      	movs	r0, #0
 8007d1a:	e7eb      	b.n	8007cf4 <osKernelStart+0xc>
      stat = osError;
 8007d1c:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8007d20:	e7e8      	b.n	8007cf4 <osKernelStart+0xc>
 8007d22:	bf00      	nop
 8007d24:	2000251c 	.word	0x2000251c

08007d28 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007d28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d2a:	4614      	mov	r4, r2
 8007d2c:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007d2e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007d30:	460b      	mov	r3, r1
  hTask = NULL;
 8007d32:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007d34:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007d38:	bb1a      	cbnz	r2, 8007d82 <osThreadNew+0x5a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007d3a:	f3ef 8210 	mrs	r2, PRIMASK
 8007d3e:	b912      	cbnz	r2, 8007d46 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007d40:	f3ef 8211 	mrs	r2, BASEPRI
 8007d44:	b11a      	cbz	r2, 8007d4e <osThreadNew+0x26>
 8007d46:	4a21      	ldr	r2, [pc, #132]	@ (8007dcc <osThreadNew+0xa4>)
 8007d48:	6812      	ldr	r2, [r2, #0]
 8007d4a:	2a02      	cmp	r2, #2
 8007d4c:	d019      	beq.n	8007d82 <osThreadNew+0x5a>
 8007d4e:	b1c0      	cbz	r0, 8007d82 <osThreadNew+0x5a>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007d50:	b36c      	cbz	r4, 8007dae <osThreadNew+0x86>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007d52:	69a5      	ldr	r5, [r4, #24]
 8007d54:	2d00      	cmp	r5, #0
 8007d56:	bf08      	it	eq
 8007d58:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007d5a:	1e6a      	subs	r2, r5, #1
 8007d5c:	46ac      	mov	ip, r5
 8007d5e:	2a37      	cmp	r2, #55	@ 0x37
 8007d60:	d82a      	bhi.n	8007db8 <osThreadNew+0x90>
 8007d62:	6862      	ldr	r2, [r4, #4]
 8007d64:	07d2      	lsls	r2, r2, #31
 8007d66:	d427      	bmi.n	8007db8 <osThreadNew+0x90>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8007d68:	6966      	ldr	r6, [r4, #20]
 8007d6a:	b16e      	cbz	r6, 8007d88 <osThreadNew+0x60>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007d6c:	08b2      	lsrs	r2, r6, #2
      if (attr->name != NULL) {
 8007d6e:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007d70:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
 8007d74:	b157      	cbz	r7, 8007d8c <osThreadNew+0x64>
 8007d76:	f1be 0f5f 	cmp.w	lr, #95	@ 0x5f
 8007d7a:	d902      	bls.n	8007d82 <osThreadNew+0x5a>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007d7c:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007d7e:	b104      	cbz	r4, 8007d82 <osThreadNew+0x5a>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007d80:	b9e6      	cbnz	r6, 8007dbc <osThreadNew+0x94>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007d82:	9805      	ldr	r0, [sp, #20]
}
 8007d84:	b007      	add	sp, #28
 8007d86:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007d88:	2280      	movs	r2, #128	@ 0x80
 8007d8a:	e7f0      	b.n	8007d6e <osThreadNew+0x46>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007d8c:	f1be 0f00 	cmp.w	lr, #0
 8007d90:	d1f7      	bne.n	8007d82 <osThreadNew+0x5a>
      if (mem == 0) {
 8007d92:	6924      	ldr	r4, [r4, #16]
 8007d94:	2c00      	cmp	r4, #0
 8007d96:	d1f4      	bne.n	8007d82 <osThreadNew+0x5a>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007d98:	ac05      	add	r4, sp, #20
 8007d9a:	b292      	uxth	r2, r2
 8007d9c:	e9cd c400 	strd	ip, r4, [sp]
 8007da0:	f001 fc93 	bl	80096ca <xTaskCreate>
 8007da4:	2801      	cmp	r0, #1
          hTask = NULL;
 8007da6:	bf1c      	itt	ne
 8007da8:	2300      	movne	r3, #0
 8007daa:	9305      	strne	r3, [sp, #20]
 8007dac:	e7e9      	b.n	8007d82 <osThreadNew+0x5a>
    name = NULL;
 8007dae:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 8007db0:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8007db4:	2280      	movs	r2, #128	@ 0x80
 8007db6:	e7ef      	b.n	8007d98 <osThreadNew+0x70>
        return (NULL);
 8007db8:	2000      	movs	r0, #0
 8007dba:	e7e3      	b.n	8007d84 <osThreadNew+0x5c>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8007dbc:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8007dc0:	9500      	str	r5, [sp, #0]
 8007dc2:	f001 fc44 	bl	800964e <xTaskCreateStatic>
 8007dc6:	9005      	str	r0, [sp, #20]
 8007dc8:	e7db      	b.n	8007d82 <osThreadNew+0x5a>
 8007dca:	bf00      	nop
 8007dcc:	2000251c 	.word	0x2000251c

08007dd0 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8007dd0:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007dd2:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007dd6:	b113      	cbz	r3, 8007dde <osDelay+0xe>
    stat = osErrorISR;
 8007dd8:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8007ddc:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007dde:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007de2:	b913      	cbnz	r3, 8007dea <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007de4:	f3ef 8311 	mrs	r3, BASEPRI
 8007de8:	b11b      	cbz	r3, 8007df2 <osDelay+0x22>
 8007dea:	4b04      	ldr	r3, [pc, #16]	@ (8007dfc <osDelay+0x2c>)
 8007dec:	681b      	ldr	r3, [r3, #0]
 8007dee:	2b02      	cmp	r3, #2
 8007df0:	d0f2      	beq.n	8007dd8 <osDelay+0x8>
    if (ticks != 0U) {
 8007df2:	b108      	cbz	r0, 8007df8 <osDelay+0x28>
      vTaskDelay(ticks);
 8007df4:	f001 fdb4 	bl	8009960 <vTaskDelay>
    stat = osOK;
 8007df8:	2000      	movs	r0, #0
  return (stat);
 8007dfa:	e7ef      	b.n	8007ddc <osDelay+0xc>
 8007dfc:	2000251c 	.word	0x2000251c

08007e00 <osMutexNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
 8007e00:	b570      	push	{r4, r5, r6, lr}
 8007e02:	4605      	mov	r5, r0
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007e04:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
 8007e08:	b116      	cbz	r6, 8007e10 <osMutexNew+0x10>
  hMutex = NULL;
 8007e0a:	2400      	movs	r4, #0
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
 8007e0c:	4620      	mov	r0, r4
 8007e0e:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007e10:	f3ef 8210 	mrs	r2, PRIMASK
  if (!IS_IRQ()) {
 8007e14:	b912      	cbnz	r2, 8007e1c <osMutexNew+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007e16:	f3ef 8211 	mrs	r2, BASEPRI
 8007e1a:	b11a      	cbz	r2, 8007e24 <osMutexNew+0x24>
 8007e1c:	4a18      	ldr	r2, [pc, #96]	@ (8007e80 <osMutexNew+0x80>)
 8007e1e:	6812      	ldr	r2, [r2, #0]
 8007e20:	2a02      	cmp	r2, #2
 8007e22:	d0f2      	beq.n	8007e0a <osMutexNew+0xa>
    if (attr != NULL) {
 8007e24:	b115      	cbz	r5, 8007e2c <osMutexNew+0x2c>
      type = attr->attr_bits;
 8007e26:	686e      	ldr	r6, [r5, #4]
    if ((type & osMutexRobust) != osMutexRobust) {
 8007e28:	0733      	lsls	r3, r6, #28
 8007e2a:	d4ee      	bmi.n	8007e0a <osMutexNew+0xa>
    if ((type & osMutexRecursive) == osMutexRecursive) {
 8007e2c:	f006 0601 	and.w	r6, r6, #1
      if (attr != NULL) {
 8007e30:	b17d      	cbz	r5, 8007e52 <osMutexNew+0x52>
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007e32:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
 8007e36:	b151      	cbz	r1, 8007e4e <osMutexNew+0x4e>
 8007e38:	2b4f      	cmp	r3, #79	@ 0x4f
 8007e3a:	d9e6      	bls.n	8007e0a <osMutexNew+0xa>
        if (rmtx != 0U) {
 8007e3c:	b1de      	cbz	r6, 8007e76 <osMutexNew+0x76>
          hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
 8007e3e:	2004      	movs	r0, #4
          hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
 8007e40:	f000 ff4d 	bl	8008cde <xQueueCreateMutexStatic>
 8007e44:	4604      	mov	r4, r0
      if (hMutex != NULL) {
 8007e46:	2800      	cmp	r0, #0
 8007e48:	d0df      	beq.n	8007e0a <osMutexNew+0xa>
          name = attr->name;
 8007e4a:	682d      	ldr	r5, [r5, #0]
 8007e4c:	e00a      	b.n	8007e64 <osMutexNew+0x64>
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007e4e:	2b00      	cmp	r3, #0
 8007e50:	d1db      	bne.n	8007e0a <osMutexNew+0xa>
          if (rmtx != 0U) {
 8007e52:	b196      	cbz	r6, 8007e7a <osMutexNew+0x7a>
            hMutex = xSemaphoreCreateRecursiveMutex ();
 8007e54:	2004      	movs	r0, #4
            hMutex = xSemaphoreCreateMutex ();
 8007e56:	f000 ff78 	bl	8008d4a <xQueueCreateMutex>
 8007e5a:	4604      	mov	r4, r0
      if (hMutex != NULL) {
 8007e5c:	2800      	cmp	r0, #0
 8007e5e:	d0d4      	beq.n	8007e0a <osMutexNew+0xa>
        if (attr != NULL) {
 8007e60:	2d00      	cmp	r5, #0
 8007e62:	d1f2      	bne.n	8007e4a <osMutexNew+0x4a>
        vQueueAddToRegistry (hMutex, name);
 8007e64:	4629      	mov	r1, r5
 8007e66:	4620      	mov	r0, r4
 8007e68:	f001 fa28 	bl	80092bc <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
 8007e6c:	2e00      	cmp	r6, #0
 8007e6e:	d0cd      	beq.n	8007e0c <osMutexNew+0xc>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
 8007e70:	f044 0401 	orr.w	r4, r4, #1
  return ((osMutexId_t)hMutex);
 8007e74:	e7ca      	b.n	8007e0c <osMutexNew+0xc>
          hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
 8007e76:	2001      	movs	r0, #1
 8007e78:	e7e2      	b.n	8007e40 <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutex ();
 8007e7a:	2001      	movs	r0, #1
 8007e7c:	e7eb      	b.n	8007e56 <osMutexNew+0x56>
 8007e7e:	bf00      	nop
 8007e80:	2000251c 	.word	0x2000251c

08007e84 <osMutexAcquire>:

osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
 8007e84:	4603      	mov	r3, r0
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
 8007e86:	f020 0001 	bic.w	r0, r0, #1
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
 8007e8a:	b510      	push	{r4, lr}

  rmtx = (uint32_t)mutex_id & 1U;
 8007e8c:	f003 0201 	and.w	r2, r3, #1
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
 8007e90:	460c      	mov	r4, r1
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007e92:	f3ef 8105 	mrs	r1, IPSR

  stat = osOK;

  if (IS_IRQ()) {
 8007e96:	b111      	cbz	r1, 8007e9e <osMutexAcquire+0x1a>
    stat = osErrorISR;
 8007e98:	f06f 0005 	mvn.w	r0, #5
      }
    }
  }

  return (stat);
}
 8007e9c:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007e9e:	f3ef 8110 	mrs	r1, PRIMASK
  if (IS_IRQ()) {
 8007ea2:	b911      	cbnz	r1, 8007eaa <osMutexAcquire+0x26>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007ea4:	f3ef 8111 	mrs	r1, BASEPRI
 8007ea8:	b119      	cbz	r1, 8007eb2 <osMutexAcquire+0x2e>
 8007eaa:	490d      	ldr	r1, [pc, #52]	@ (8007ee0 <osMutexAcquire+0x5c>)
 8007eac:	6809      	ldr	r1, [r1, #0]
 8007eae:	2902      	cmp	r1, #2
 8007eb0:	d0f2      	beq.n	8007e98 <osMutexAcquire+0x14>
  else if (hMutex == NULL) {
 8007eb2:	2b01      	cmp	r3, #1
 8007eb4:	d911      	bls.n	8007eda <osMutexAcquire+0x56>
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
 8007eb6:	4621      	mov	r1, r4
    if (rmtx != 0U) {
 8007eb8:	b162      	cbz	r2, 8007ed4 <osMutexAcquire+0x50>
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
 8007eba:	f001 f989 	bl	80091d0 <xQueueTakeMutexRecursive>
 8007ebe:	2801      	cmp	r0, #1
 8007ec0:	d101      	bne.n	8007ec6 <osMutexAcquire+0x42>
  stat = osOK;
 8007ec2:	2000      	movs	r0, #0
 8007ec4:	e7ea      	b.n	8007e9c <osMutexAcquire+0x18>
          stat = osErrorResource;
 8007ec6:	2c00      	cmp	r4, #0
 8007ec8:	bf14      	ite	ne
 8007eca:	f06f 0001 	mvnne.w	r0, #1
 8007ece:	f06f 0002 	mvneq.w	r0, #2
 8007ed2:	e7e3      	b.n	8007e9c <osMutexAcquire+0x18>
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
 8007ed4:	f001 f8b7 	bl	8009046 <xQueueSemaphoreTake>
 8007ed8:	e7f1      	b.n	8007ebe <osMutexAcquire+0x3a>
    stat = osErrorParameter;
 8007eda:	f06f 0003 	mvn.w	r0, #3
 8007ede:	e7dd      	b.n	8007e9c <osMutexAcquire+0x18>
 8007ee0:	2000251c 	.word	0x2000251c

08007ee4 <osMutexRelease>:

osStatus_t osMutexRelease (osMutexId_t mutex_id) {
 8007ee4:	4602      	mov	r2, r0
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
 8007ee6:	f020 0001 	bic.w	r0, r0, #1
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
 8007eea:	b508      	push	{r3, lr}

  rmtx = (uint32_t)mutex_id & 1U;
 8007eec:	f002 0301 	and.w	r3, r2, #1
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007ef0:	f3ef 8105 	mrs	r1, IPSR

  stat = osOK;

  if (IS_IRQ()) {
 8007ef4:	b111      	cbz	r1, 8007efc <osMutexRelease+0x18>
    stat = osErrorISR;
 8007ef6:	f06f 0005 	mvn.w	r0, #5
      }
    }
  }

  return (stat);
}
 8007efa:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007efc:	f3ef 8110 	mrs	r1, PRIMASK
  if (IS_IRQ()) {
 8007f00:	b911      	cbnz	r1, 8007f08 <osMutexRelease+0x24>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007f02:	f3ef 8111 	mrs	r1, BASEPRI
 8007f06:	b119      	cbz	r1, 8007f10 <osMutexRelease+0x2c>
 8007f08:	490b      	ldr	r1, [pc, #44]	@ (8007f38 <osMutexRelease+0x54>)
 8007f0a:	6809      	ldr	r1, [r1, #0]
 8007f0c:	2902      	cmp	r1, #2
 8007f0e:	d0f2      	beq.n	8007ef6 <osMutexRelease+0x12>
  else if (hMutex == NULL) {
 8007f10:	2a01      	cmp	r2, #1
 8007f12:	d90d      	bls.n	8007f30 <osMutexRelease+0x4c>
    if (rmtx != 0U) {
 8007f14:	b13b      	cbz	r3, 8007f26 <osMutexRelease+0x42>
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
 8007f16:	f000 fef7 	bl	8008d08 <xQueueGiveMutexRecursive>
 8007f1a:	2801      	cmp	r0, #1
  stat = osOK;
 8007f1c:	bf0c      	ite	eq
 8007f1e:	2000      	moveq	r0, #0
        stat = osErrorResource;
 8007f20:	f06f 0002 	mvnne.w	r0, #2
 8007f24:	e7e9      	b.n	8007efa <osMutexRelease+0x16>
      if (xSemaphoreGive (hMutex) != pdPASS) {
 8007f26:	461a      	mov	r2, r3
 8007f28:	4619      	mov	r1, r3
 8007f2a:	f000 fe1e 	bl	8008b6a <xQueueGenericSend>
 8007f2e:	e7f4      	b.n	8007f1a <osMutexRelease+0x36>
    stat = osErrorParameter;
 8007f30:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007f34:	e7e1      	b.n	8007efa <osMutexRelease+0x16>
 8007f36:	bf00      	nop
 8007f38:	2000251c 	.word	0x2000251c

08007f3c <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007f3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007f3e:	460e      	mov	r6, r1
 8007f40:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007f42:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007f46:	b993      	cbnz	r3, 8007f6e <osSemaphoreNew+0x32>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007f48:	f3ef 8310 	mrs	r3, PRIMASK
 8007f4c:	b913      	cbnz	r3, 8007f54 <osSemaphoreNew+0x18>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007f4e:	f3ef 8311 	mrs	r3, BASEPRI
 8007f52:	b11b      	cbz	r3, 8007f5c <osSemaphoreNew+0x20>
 8007f54:	4b24      	ldr	r3, [pc, #144]	@ (8007fe8 <osSemaphoreNew+0xac>)
 8007f56:	681b      	ldr	r3, [r3, #0]
 8007f58:	2b02      	cmp	r3, #2
 8007f5a:	d008      	beq.n	8007f6e <osSemaphoreNew+0x32>
 8007f5c:	b138      	cbz	r0, 8007f6e <osSemaphoreNew+0x32>
 8007f5e:	42b0      	cmp	r0, r6
 8007f60:	d305      	bcc.n	8007f6e <osSemaphoreNew+0x32>
    mem = -1;

    if (attr != NULL) {
 8007f62:	b155      	cbz	r5, 8007f7a <osSemaphoreNew+0x3e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007f64:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8007f68:	b12b      	cbz	r3, 8007f76 <osSemaphoreNew+0x3a>
 8007f6a:	2a4f      	cmp	r2, #79	@ 0x4f
 8007f6c:	d823      	bhi.n	8007fb6 <osSemaphoreNew+0x7a>
  hSemaphore = NULL;
 8007f6e:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8007f70:	4620      	mov	r0, r4
 8007f72:	b002      	add	sp, #8
 8007f74:	bd70      	pop	{r4, r5, r6, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007f76:	2a00      	cmp	r2, #0
 8007f78:	d1f9      	bne.n	8007f6e <osSemaphoreNew+0x32>
      if (max_count == 1U) {
 8007f7a:	2801      	cmp	r0, #1
 8007f7c:	d10e      	bne.n	8007f9c <osSemaphoreNew+0x60>
          hSemaphore = xSemaphoreCreateBinary();
 8007f7e:	2203      	movs	r2, #3
 8007f80:	2100      	movs	r1, #0
 8007f82:	2001      	movs	r0, #1
 8007f84:	f000 fd80 	bl	8008a88 <xQueueGenericCreate>
 8007f88:	e01d      	b.n	8007fc6 <osSemaphoreNew+0x8a>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8007f8a:	461a      	mov	r2, r3
 8007f8c:	4631      	mov	r1, r6
 8007f8e:	f000 fda4 	bl	8008ada <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8007f92:	4604      	mov	r4, r0
 8007f94:	2800      	cmp	r0, #0
 8007f96:	d0ea      	beq.n	8007f6e <osSemaphoreNew+0x32>
          name = attr->name;
 8007f98:	682d      	ldr	r5, [r5, #0]
 8007f9a:	e007      	b.n	8007fac <osSemaphoreNew+0x70>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007f9c:	4631      	mov	r1, r6
 8007f9e:	f000 fdc2 	bl	8008b26 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007fa2:	4604      	mov	r4, r0
 8007fa4:	2800      	cmp	r0, #0
 8007fa6:	d0e2      	beq.n	8007f6e <osSemaphoreNew+0x32>
        if (attr != NULL) {
 8007fa8:	2d00      	cmp	r5, #0
 8007faa:	d1f5      	bne.n	8007f98 <osSemaphoreNew+0x5c>
        vQueueAddToRegistry (hSemaphore, name);
 8007fac:	4629      	mov	r1, r5
 8007fae:	4620      	mov	r0, r4
 8007fb0:	f001 f984 	bl	80092bc <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8007fb4:	e7dc      	b.n	8007f70 <osSemaphoreNew+0x34>
      if (max_count == 1U) {
 8007fb6:	2801      	cmp	r0, #1
 8007fb8:	d1e7      	bne.n	8007f8a <osSemaphoreNew+0x4e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007fba:	2203      	movs	r2, #3
 8007fbc:	9200      	str	r2, [sp, #0]
 8007fbe:	2200      	movs	r2, #0
 8007fc0:	4611      	mov	r1, r2
 8007fc2:	f000 fd4d 	bl	8008a60 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8007fc6:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007fc8:	2800      	cmp	r0, #0
 8007fca:	d0d0      	beq.n	8007f6e <osSemaphoreNew+0x32>
 8007fcc:	2e00      	cmp	r6, #0
 8007fce:	d0eb      	beq.n	8007fa8 <osSemaphoreNew+0x6c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007fd0:	2300      	movs	r3, #0
 8007fd2:	461a      	mov	r2, r3
 8007fd4:	4619      	mov	r1, r3
 8007fd6:	f000 fdc8 	bl	8008b6a <xQueueGenericSend>
 8007fda:	2801      	cmp	r0, #1
 8007fdc:	d0e4      	beq.n	8007fa8 <osSemaphoreNew+0x6c>
            vSemaphoreDelete (hSemaphore);
 8007fde:	4620      	mov	r0, r4
 8007fe0:	f001 f996 	bl	8009310 <vQueueDelete>
      if (hSemaphore != NULL) {
 8007fe4:	e7c3      	b.n	8007f6e <osSemaphoreNew+0x32>
 8007fe6:	bf00      	nop
 8007fe8:	2000251c 	.word	0x2000251c

08007fec <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007fec:	b513      	push	{r0, r1, r4, lr}
 8007fee:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007ff0:	b918      	cbnz	r0, 8007ffa <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8007ff2:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007ff6:	b002      	add	sp, #8
 8007ff8:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007ffa:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8007ffe:	b15b      	cbz	r3, 8008018 <osSemaphoreAcquire+0x2c>
    if (timeout != 0U) {
 8008000:	2c00      	cmp	r4, #0
 8008002:	d1f6      	bne.n	8007ff2 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008004:	aa01      	add	r2, sp, #4
 8008006:	4621      	mov	r1, r4
      yield = pdFALSE;
 8008008:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800800a:	f001 f904 	bl	8009216 <xQueueReceiveFromISR>
 800800e:	2801      	cmp	r0, #1
 8008010:	d016      	beq.n	8008040 <osSemaphoreAcquire+0x54>
        stat = osErrorResource;
 8008012:	f06f 0002 	mvn.w	r0, #2
 8008016:	e7ee      	b.n	8007ff6 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008018:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800801c:	b913      	cbnz	r3, 8008024 <osSemaphoreAcquire+0x38>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800801e:	f3ef 8311 	mrs	r3, BASEPRI
 8008022:	b11b      	cbz	r3, 800802c <osSemaphoreAcquire+0x40>
 8008024:	4b0e      	ldr	r3, [pc, #56]	@ (8008060 <osSemaphoreAcquire+0x74>)
 8008026:	681b      	ldr	r3, [r3, #0]
 8008028:	2b02      	cmp	r3, #2
 800802a:	d0e9      	beq.n	8008000 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800802c:	4621      	mov	r1, r4
 800802e:	f001 f80a 	bl	8009046 <xQueueSemaphoreTake>
 8008032:	2801      	cmp	r0, #1
 8008034:	d006      	beq.n	8008044 <osSemaphoreAcquire+0x58>
      if (timeout != 0U) {
 8008036:	2c00      	cmp	r4, #0
 8008038:	d0eb      	beq.n	8008012 <osSemaphoreAcquire+0x26>
        stat = osErrorTimeout;
 800803a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800803e:	e7da      	b.n	8007ff6 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8008040:	9b01      	ldr	r3, [sp, #4]
 8008042:	b90b      	cbnz	r3, 8008048 <osSemaphoreAcquire+0x5c>
  stat = osOK;
 8008044:	2000      	movs	r0, #0
 8008046:	e7d6      	b.n	8007ff6 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8008048:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800804c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008050:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008054:	f3bf 8f4f 	dsb	sy
 8008058:	f3bf 8f6f 	isb	sy
 800805c:	e7f2      	b.n	8008044 <osSemaphoreAcquire+0x58>
 800805e:	bf00      	nop
 8008060:	2000251c 	.word	0x2000251c

08008064 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008064:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008066:	b370      	cbz	r0, 80080c6 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008068:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800806c:	b15b      	cbz	r3, 8008086 <osSemaphoreRelease+0x22>
    yield = pdFALSE;
 800806e:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008070:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008072:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008074:	f000 feea 	bl	8008e4c <xQueueGiveFromISR>
 8008078:	2801      	cmp	r0, #1
 800807a:	d016      	beq.n	80080aa <osSemaphoreRelease+0x46>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800807c:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8008080:	b003      	add	sp, #12
 8008082:	f85d fb04 	ldr.w	pc, [sp], #4
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008086:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800808a:	b913      	cbnz	r3, 8008092 <osSemaphoreRelease+0x2e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800808c:	f3ef 8311 	mrs	r3, BASEPRI
 8008090:	b11b      	cbz	r3, 800809a <osSemaphoreRelease+0x36>
 8008092:	4b0e      	ldr	r3, [pc, #56]	@ (80080cc <osSemaphoreRelease+0x68>)
 8008094:	681b      	ldr	r3, [r3, #0]
 8008096:	2b02      	cmp	r3, #2
 8008098:	d0e9      	beq.n	800806e <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800809a:	2300      	movs	r3, #0
 800809c:	461a      	mov	r2, r3
 800809e:	4619      	mov	r1, r3
 80080a0:	f000 fd63 	bl	8008b6a <xQueueGenericSend>
 80080a4:	2801      	cmp	r0, #1
 80080a6:	d00c      	beq.n	80080c2 <osSemaphoreRelease+0x5e>
 80080a8:	e7e8      	b.n	800807c <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 80080aa:	9b01      	ldr	r3, [sp, #4]
 80080ac:	b14b      	cbz	r3, 80080c2 <osSemaphoreRelease+0x5e>
 80080ae:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80080b2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80080b6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80080ba:	f3bf 8f4f 	dsb	sy
 80080be:	f3bf 8f6f 	isb	sy
  stat = osOK;
 80080c2:	2000      	movs	r0, #0
 80080c4:	e7dc      	b.n	8008080 <osSemaphoreRelease+0x1c>
    stat = osErrorParameter;
 80080c6:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80080ca:	e7d9      	b.n	8008080 <osSemaphoreRelease+0x1c>
 80080cc:	2000251c 	.word	0x2000251c

080080d0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80080d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80080d2:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80080d4:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80080d8:	b11b      	cbz	r3, 80080e2 <osMessageQueueNew+0x12>
  hQueue = NULL;
 80080da:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80080dc:	4628      	mov	r0, r5
 80080de:	b002      	add	sp, #8
 80080e0:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80080e2:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80080e6:	b913      	cbnz	r3, 80080ee <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80080e8:	f3ef 8311 	mrs	r3, BASEPRI
 80080ec:	b11b      	cbz	r3, 80080f6 <osMessageQueueNew+0x26>
 80080ee:	4b1a      	ldr	r3, [pc, #104]	@ (8008158 <osMessageQueueNew+0x88>)
 80080f0:	681b      	ldr	r3, [r3, #0]
 80080f2:	2b02      	cmp	r3, #2
 80080f4:	d0f1      	beq.n	80080da <osMessageQueueNew+0xa>
 80080f6:	2800      	cmp	r0, #0
 80080f8:	d0ef      	beq.n	80080da <osMessageQueueNew+0xa>
 80080fa:	2900      	cmp	r1, #0
 80080fc:	d0ed      	beq.n	80080da <osMessageQueueNew+0xa>
    if (attr != NULL) {
 80080fe:	b1ec      	cbz	r4, 800813c <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008100:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008104:	b193      	cbz	r3, 800812c <osMessageQueueNew+0x5c>
 8008106:	2a4f      	cmp	r2, #79	@ 0x4f
 8008108:	d9e7      	bls.n	80080da <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800810a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800810c:	2a00      	cmp	r2, #0
 800810e:	d0e4      	beq.n	80080da <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008110:	fb01 f500 	mul.w	r5, r1, r0
 8008114:	6966      	ldr	r6, [r4, #20]
 8008116:	42ae      	cmp	r6, r5
 8008118:	d3df      	bcc.n	80080da <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800811a:	2500      	movs	r5, #0
 800811c:	9500      	str	r5, [sp, #0]
 800811e:	f000 fc9f 	bl	8008a60 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008122:	4605      	mov	r5, r0
 8008124:	2800      	cmp	r0, #0
 8008126:	d0d8      	beq.n	80080da <osMessageQueueNew+0xa>
        name = attr->name;
 8008128:	6824      	ldr	r4, [r4, #0]
 800812a:	e00f      	b.n	800814c <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800812c:	2a00      	cmp	r2, #0
 800812e:	d1d4      	bne.n	80080da <osMessageQueueNew+0xa>
 8008130:	6923      	ldr	r3, [r4, #16]
 8008132:	2b00      	cmp	r3, #0
 8008134:	d1d1      	bne.n	80080da <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008136:	6963      	ldr	r3, [r4, #20]
 8008138:	2b00      	cmp	r3, #0
 800813a:	d1ce      	bne.n	80080da <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 800813c:	2200      	movs	r2, #0
 800813e:	f000 fca3 	bl	8008a88 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008142:	4605      	mov	r5, r0
 8008144:	2800      	cmp	r0, #0
 8008146:	d0c8      	beq.n	80080da <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8008148:	2c00      	cmp	r4, #0
 800814a:	d1ed      	bne.n	8008128 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 800814c:	4621      	mov	r1, r4
 800814e:	4628      	mov	r0, r5
 8008150:	f001 f8b4 	bl	80092bc <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008154:	e7c2      	b.n	80080dc <osMessageQueueNew+0xc>
 8008156:	bf00      	nop
 8008158:	2000251c 	.word	0x2000251c

0800815c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800815c:	b513      	push	{r0, r1, r4, lr}
 800815e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008160:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008164:	b123      	cbz	r3, 8008170 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008166:	b9d8      	cbnz	r0, 80081a0 <osMessageQueuePut+0x44>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
 8008168:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800816c:	b002      	add	sp, #8
 800816e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008170:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008174:	b913      	cbnz	r3, 800817c <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008176:	f3ef 8311 	mrs	r3, BASEPRI
 800817a:	b11b      	cbz	r3, 8008184 <osMessageQueuePut+0x28>
 800817c:	4b17      	ldr	r3, [pc, #92]	@ (80081dc <osMessageQueuePut+0x80>)
 800817e:	681b      	ldr	r3, [r3, #0]
 8008180:	2b02      	cmp	r3, #2
 8008182:	d0f0      	beq.n	8008166 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008184:	2800      	cmp	r0, #0
 8008186:	d0ef      	beq.n	8008168 <osMessageQueuePut+0xc>
 8008188:	2900      	cmp	r1, #0
 800818a:	d0ed      	beq.n	8008168 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800818c:	2300      	movs	r3, #0
 800818e:	4622      	mov	r2, r4
 8008190:	f000 fceb 	bl	8008b6a <xQueueGenericSend>
 8008194:	2801      	cmp	r0, #1
 8008196:	d013      	beq.n	80081c0 <osMessageQueuePut+0x64>
        if (timeout != 0U) {
 8008198:	b16c      	cbz	r4, 80081b6 <osMessageQueuePut+0x5a>
          stat = osErrorTimeout;
 800819a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800819e:	e7e5      	b.n	800816c <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80081a0:	2900      	cmp	r1, #0
 80081a2:	d0e1      	beq.n	8008168 <osMessageQueuePut+0xc>
 80081a4:	2c00      	cmp	r4, #0
 80081a6:	d1df      	bne.n	8008168 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80081a8:	4623      	mov	r3, r4
 80081aa:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80081ac:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80081ae:	f000 fde9 	bl	8008d84 <xQueueGenericSendFromISR>
 80081b2:	2801      	cmp	r0, #1
 80081b4:	d002      	beq.n	80081bc <osMessageQueuePut+0x60>
        stat = osErrorResource;
 80081b6:	f06f 0002 	mvn.w	r0, #2
 80081ba:	e7d7      	b.n	800816c <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 80081bc:	9b01      	ldr	r3, [sp, #4]
 80081be:	b90b      	cbnz	r3, 80081c4 <osMessageQueuePut+0x68>
  stat = osOK;
 80081c0:	2000      	movs	r0, #0
 80081c2:	e7d3      	b.n	800816c <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 80081c4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80081c8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80081cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80081d0:	f3bf 8f4f 	dsb	sy
 80081d4:	f3bf 8f6f 	isb	sy
 80081d8:	e7f2      	b.n	80081c0 <osMessageQueuePut+0x64>
 80081da:	bf00      	nop
 80081dc:	2000251c 	.word	0x2000251c

080081e0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80081e0:	b513      	push	{r0, r1, r4, lr}
 80081e2:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80081e4:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80081e8:	b123      	cbz	r3, 80081f4 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80081ea:	b9d0      	cbnz	r0, 8008222 <osMessageQueueGet+0x42>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
 80081ec:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80081f0:	b002      	add	sp, #8
 80081f2:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80081f4:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80081f8:	b913      	cbnz	r3, 8008200 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80081fa:	f3ef 8311 	mrs	r3, BASEPRI
 80081fe:	b11b      	cbz	r3, 8008208 <osMessageQueueGet+0x28>
 8008200:	4b16      	ldr	r3, [pc, #88]	@ (800825c <osMessageQueueGet+0x7c>)
 8008202:	681b      	ldr	r3, [r3, #0]
 8008204:	2b02      	cmp	r3, #2
 8008206:	d0f0      	beq.n	80081ea <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008208:	2800      	cmp	r0, #0
 800820a:	d0ef      	beq.n	80081ec <osMessageQueueGet+0xc>
 800820c:	2900      	cmp	r1, #0
 800820e:	d0ed      	beq.n	80081ec <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008210:	4622      	mov	r2, r4
 8008212:	f000 fe74 	bl	8008efe <xQueueReceive>
 8008216:	2801      	cmp	r0, #1
 8008218:	d012      	beq.n	8008240 <osMessageQueueGet+0x60>
        if (timeout != 0U) {
 800821a:	b164      	cbz	r4, 8008236 <osMessageQueueGet+0x56>
          stat = osErrorTimeout;
 800821c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008220:	e7e6      	b.n	80081f0 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008222:	2900      	cmp	r1, #0
 8008224:	d0e2      	beq.n	80081ec <osMessageQueueGet+0xc>
 8008226:	2c00      	cmp	r4, #0
 8008228:	d1e0      	bne.n	80081ec <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800822a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800822c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800822e:	f000 fff2 	bl	8009216 <xQueueReceiveFromISR>
 8008232:	2801      	cmp	r0, #1
 8008234:	d002      	beq.n	800823c <osMessageQueueGet+0x5c>
        stat = osErrorResource;
 8008236:	f06f 0002 	mvn.w	r0, #2
 800823a:	e7d9      	b.n	80081f0 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 800823c:	9b01      	ldr	r3, [sp, #4]
 800823e:	b90b      	cbnz	r3, 8008244 <osMessageQueueGet+0x64>
  stat = osOK;
 8008240:	2000      	movs	r0, #0
 8008242:	e7d5      	b.n	80081f0 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8008244:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008248:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800824c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008250:	f3bf 8f4f 	dsb	sy
 8008254:	f3bf 8f6f 	isb	sy
 8008258:	e7f2      	b.n	8008240 <osMessageQueueGet+0x60>
 800825a:	bf00      	nop
 800825c:	2000251c 	.word	0x2000251c

08008260 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008260:	4b03      	ldr	r3, [pc, #12]	@ (8008270 <vApplicationGetIdleTaskMemory+0x10>)
 8008262:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008264:	4b03      	ldr	r3, [pc, #12]	@ (8008274 <vApplicationGetIdleTaskMemory+0x14>)
 8008266:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008268:	2380      	movs	r3, #128	@ 0x80
 800826a:	6013      	str	r3, [r2, #0]
}
 800826c:	4770      	bx	lr
 800826e:	bf00      	nop
 8008270:	200024bc 	.word	0x200024bc
 8008274:	200022bc 	.word	0x200022bc

08008278 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008278:	4b03      	ldr	r3, [pc, #12]	@ (8008288 <vApplicationGetTimerTaskMemory+0x10>)
 800827a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800827c:	4b03      	ldr	r3, [pc, #12]	@ (800828c <vApplicationGetTimerTaskMemory+0x14>)
 800827e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008280:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8008284:	6013      	str	r3, [r2, #0]
}
 8008286:	4770      	bx	lr
 8008288:	2000225c 	.word	0x2000225c
 800828c:	20001e5c 	.word	0x20001e5c

08008290 <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008290:	4b10      	ldr	r3, [pc, #64]	@ (80082d4 <prvInsertBlockIntoFreeList+0x44>)
{
 8008292:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008294:	461a      	mov	r2, r3
 8008296:	681b      	ldr	r3, [r3, #0]
 8008298:	4283      	cmp	r3, r0
 800829a:	d3fb      	bcc.n	8008294 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800829c:	6854      	ldr	r4, [r2, #4]
 800829e:	1911      	adds	r1, r2, r4
 80082a0:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80082a2:	bf01      	itttt	eq
 80082a4:	6841      	ldreq	r1, [r0, #4]
 80082a6:	4610      	moveq	r0, r2
 80082a8:	1909      	addeq	r1, r1, r4
 80082aa:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80082ac:	6844      	ldr	r4, [r0, #4]
 80082ae:	1901      	adds	r1, r0, r4
 80082b0:	428b      	cmp	r3, r1
 80082b2:	d10c      	bne.n	80082ce <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80082b4:	4908      	ldr	r1, [pc, #32]	@ (80082d8 <prvInsertBlockIntoFreeList+0x48>)
 80082b6:	6809      	ldr	r1, [r1, #0]
 80082b8:	428b      	cmp	r3, r1
 80082ba:	d003      	beq.n	80082c4 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80082bc:	6859      	ldr	r1, [r3, #4]
 80082be:	4421      	add	r1, r4
 80082c0:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80082c2:	6819      	ldr	r1, [r3, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80082c4:	4290      	cmp	r0, r2
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 80082c6:	6001      	str	r1, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80082c8:	bf18      	it	ne
 80082ca:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80082cc:	bd10      	pop	{r4, pc}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80082ce:	4619      	mov	r1, r3
 80082d0:	e7f8      	b.n	80082c4 <prvInsertBlockIntoFreeList+0x34>
 80082d2:	bf00      	nop
 80082d4:	20002530 	.word	0x20002530
 80082d8:	2000252c 	.word	0x2000252c

080082dc <pvPortMalloc>:
{
 80082dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80082e0:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80082e2:	f001 fa21 	bl	8009728 <vTaskSuspendAll>
		if( pxEnd == NULL )
 80082e6:	4940      	ldr	r1, [pc, #256]	@ (80083e8 <pvPortMalloc+0x10c>)
 80082e8:	4d40      	ldr	r5, [pc, #256]	@ (80083ec <pvPortMalloc+0x110>)
 80082ea:	680b      	ldr	r3, [r1, #0]
 80082ec:	b9f3      	cbnz	r3, 800832c <pvPortMalloc+0x50>
	uxAddress = ( size_t ) ucHeap;
 80082ee:	4a40      	ldr	r2, [pc, #256]	@ (80083f0 <pvPortMalloc+0x114>)
	xStart.xBlockSize = ( size_t ) 0;
 80082f0:	2000      	movs	r0, #0
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80082f2:	0756      	lsls	r6, r2, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80082f4:	4e3f      	ldr	r6, [pc, #252]	@ (80083f4 <pvPortMalloc+0x118>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80082f6:	bf1b      	ittet	ne
 80082f8:	3207      	addne	r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80082fa:	4b3f      	ldrne	r3, [pc, #252]	@ (80083f8 <pvPortMalloc+0x11c>)
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80082fc:	4b3f      	ldreq	r3, [pc, #252]	@ (80083fc <pvPortMalloc+0x120>)
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80082fe:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008302:	6070      	str	r0, [r6, #4]
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008304:	bf18      	it	ne
 8008306:	1a9b      	subne	r3, r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008308:	6032      	str	r2, [r6, #0]
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800830a:	4413      	add	r3, r2
	uxAddress -= xHeapStructSize;
 800830c:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800830e:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8008312:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008316:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8008318:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800831a:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800831e:	4b38      	ldr	r3, [pc, #224]	@ (8008400 <pvPortMalloc+0x124>)
 8008320:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008322:	4b38      	ldr	r3, [pc, #224]	@ (8008404 <pvPortMalloc+0x128>)
 8008324:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008326:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800832a:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800832c:	682e      	ldr	r6, [r5, #0]
 800832e:	4226      	tst	r6, r4
 8008330:	d154      	bne.n	80083dc <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8008332:	2c00      	cmp	r4, #0
 8008334:	d043      	beq.n	80083be <pvPortMalloc+0xe2>
				xWantedSize += xHeapStructSize;
 8008336:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800833a:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800833c:	bf1c      	itt	ne
 800833e:	f023 0307 	bicne.w	r3, r3, #7
 8008342:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008344:	2b00      	cmp	r3, #0
 8008346:	d049      	beq.n	80083dc <pvPortMalloc+0x100>
 8008348:	4f2e      	ldr	r7, [pc, #184]	@ (8008404 <pvPortMalloc+0x128>)
 800834a:	683c      	ldr	r4, [r7, #0]
 800834c:	429c      	cmp	r4, r3
 800834e:	d345      	bcc.n	80083dc <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8008350:	4a28      	ldr	r2, [pc, #160]	@ (80083f4 <pvPortMalloc+0x118>)
 8008352:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008354:	6868      	ldr	r0, [r5, #4]
 8008356:	4298      	cmp	r0, r3
 8008358:	d204      	bcs.n	8008364 <pvPortMalloc+0x88>
 800835a:	f8d5 c000 	ldr.w	ip, [r5]
 800835e:	f1bc 0f00 	cmp.w	ip, #0
 8008362:	d117      	bne.n	8008394 <pvPortMalloc+0xb8>
				if( pxBlock != pxEnd )
 8008364:	6809      	ldr	r1, [r1, #0]
 8008366:	42a9      	cmp	r1, r5
 8008368:	d038      	beq.n	80083dc <pvPortMalloc+0x100>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800836a:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800836c:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008370:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008372:	1ac2      	subs	r2, r0, r3
 8008374:	2a10      	cmp	r2, #16
 8008376:	d914      	bls.n	80083a2 <pvPortMalloc+0xc6>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008378:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800837a:	0741      	lsls	r1, r0, #29
 800837c:	d00d      	beq.n	800839a <pvPortMalloc+0xbe>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800837e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008382:	b672      	cpsid	i
 8008384:	f383 8811 	msr	BASEPRI, r3
 8008388:	f3bf 8f6f 	isb	sy
 800838c:	f3bf 8f4f 	dsb	sy
 8008390:	b662      	cpsie	i
 8008392:	e7fe      	b.n	8008392 <pvPortMalloc+0xb6>
 8008394:	462a      	mov	r2, r5
 8008396:	4665      	mov	r5, ip
 8008398:	e7dc      	b.n	8008354 <pvPortMalloc+0x78>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800839a:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800839c:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800839e:	f7ff ff77 	bl	8008290 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80083a2:	686a      	ldr	r2, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 80083a4:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80083a6:	4916      	ldr	r1, [pc, #88]	@ (8008400 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80083a8:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80083aa:	4316      	orrs	r6, r2
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80083ac:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80083ae:	603c      	str	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80083b0:	4284      	cmp	r4, r0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80083b2:	606e      	str	r6, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 80083b4:	602b      	str	r3, [r5, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80083b6:	bf38      	it	cc
 80083b8:	600c      	strcc	r4, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80083ba:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 80083be:	f001 fa59 	bl	8009874 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80083c2:	0763      	lsls	r3, r4, #29
 80083c4:	d00c      	beq.n	80083e0 <pvPortMalloc+0x104>
 80083c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083ca:	b672      	cpsid	i
 80083cc:	f383 8811 	msr	BASEPRI, r3
 80083d0:	f3bf 8f6f 	isb	sy
 80083d4:	f3bf 8f4f 	dsb	sy
 80083d8:	b662      	cpsie	i
 80083da:	e7fe      	b.n	80083da <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 80083dc:	2400      	movs	r4, #0
 80083de:	e7ee      	b.n	80083be <pvPortMalloc+0xe2>
}
 80083e0:	4620      	mov	r0, r4
 80083e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80083e6:	bf00      	nop
 80083e8:	2000252c 	.word	0x2000252c
 80083ec:	20002520 	.word	0x20002520
 80083f0:	20002538 	.word	0x20002538
 80083f4:	20002530 	.word	0x20002530
 80083f8:	20014a30 	.word	0x20014a30
 80083fc:	000124f8 	.word	0x000124f8
 8008400:	20002524 	.word	0x20002524
 8008404:	20002528 	.word	0x20002528

08008408 <vPortFree>:
{
 8008408:	b510      	push	{r4, lr}
	if( pv != NULL )
 800840a:	4604      	mov	r4, r0
 800840c:	2800      	cmp	r0, #0
 800840e:	d032      	beq.n	8008476 <vPortFree+0x6e>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008410:	4a19      	ldr	r2, [pc, #100]	@ (8008478 <vPortFree+0x70>)
 8008412:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008416:	6812      	ldr	r2, [r2, #0]
 8008418:	4213      	tst	r3, r2
 800841a:	d10a      	bne.n	8008432 <vPortFree+0x2a>
 800841c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008420:	b672      	cpsid	i
 8008422:	f383 8811 	msr	BASEPRI, r3
 8008426:	f3bf 8f6f 	isb	sy
 800842a:	f3bf 8f4f 	dsb	sy
 800842e:	b662      	cpsie	i
 8008430:	e7fe      	b.n	8008430 <vPortFree+0x28>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008432:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008436:	b151      	cbz	r1, 800844e <vPortFree+0x46>
 8008438:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800843c:	b672      	cpsid	i
 800843e:	f383 8811 	msr	BASEPRI, r3
 8008442:	f3bf 8f6f 	isb	sy
 8008446:	f3bf 8f4f 	dsb	sy
 800844a:	b662      	cpsie	i
 800844c:	e7fe      	b.n	800844c <vPortFree+0x44>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800844e:	ea23 0302 	bic.w	r3, r3, r2
 8008452:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008456:	f001 f967 	bl	8009728 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800845a:	4a08      	ldr	r2, [pc, #32]	@ (800847c <vPortFree+0x74>)
 800845c:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008460:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008464:	6811      	ldr	r1, [r2, #0]
 8008466:	440b      	add	r3, r1
 8008468:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800846a:	f7ff ff11 	bl	8008290 <prvInsertBlockIntoFreeList>
}
 800846e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8008472:	f001 b9ff 	b.w	8009874 <xTaskResumeAll>
}
 8008476:	bd10      	pop	{r4, pc}
 8008478:	20002520 	.word	0x20002520
 800847c:	20002528 	.word	0x20002528

08008480 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008480:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008484:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008488:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800848a:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800848c:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008490:	2300      	movs	r3, #0
 8008492:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008494:	4770      	bx	lr

08008496 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008496:	2300      	movs	r3, #0
 8008498:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800849a:	4770      	bx	lr

0800849c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800849c:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800849e:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 80084a0:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80084a2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80084a4:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80084a6:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80084a8:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80084aa:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80084ac:	3301      	adds	r3, #1
 80084ae:	6003      	str	r3, [r0, #0]
}
 80084b0:	4770      	bx	lr

080084b2 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80084b2:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80084b4:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80084b6:	1c63      	adds	r3, r4, #1
 80084b8:	d10a      	bne.n	80084d0 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80084ba:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80084bc:	685a      	ldr	r2, [r3, #4]
 80084be:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80084c0:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80084c2:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80084c4:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80084c6:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80084c8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80084ca:	3301      	adds	r3, #1
 80084cc:	6003      	str	r3, [r0, #0]
}
 80084ce:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80084d0:	f100 0208 	add.w	r2, r0, #8
 80084d4:	4613      	mov	r3, r2
 80084d6:	6852      	ldr	r2, [r2, #4]
 80084d8:	6815      	ldr	r5, [r2, #0]
 80084da:	42a5      	cmp	r5, r4
 80084dc:	d9fa      	bls.n	80084d4 <vListInsert+0x22>
 80084de:	e7ed      	b.n	80084bc <vListInsert+0xa>

080084e0 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 80084e0:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80084e2:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 80084e6:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80084e8:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80084ea:	6859      	ldr	r1, [r3, #4]
 80084ec:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80084ee:	bf08      	it	eq
 80084f0:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 80084f2:	2200      	movs	r2, #0
 80084f4:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 80084f6:	681a      	ldr	r2, [r3, #0]
 80084f8:	3a01      	subs	r2, #1
 80084fa:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80084fc:	6818      	ldr	r0, [r3, #0]
}
 80084fe:	4770      	bx	lr

08008500 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008500:	4808      	ldr	r0, [pc, #32]	@ (8008524 <prvPortStartFirstTask+0x24>)
 8008502:	6800      	ldr	r0, [r0, #0]
 8008504:	6800      	ldr	r0, [r0, #0]
 8008506:	f380 8808 	msr	MSP, r0
 800850a:	f04f 0000 	mov.w	r0, #0
 800850e:	f380 8814 	msr	CONTROL, r0
 8008512:	b662      	cpsie	i
 8008514:	b661      	cpsie	f
 8008516:	f3bf 8f4f 	dsb	sy
 800851a:	f3bf 8f6f 	isb	sy
 800851e:	df00      	svc	0
 8008520:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008522:	0000      	.short	0x0000
 8008524:	e000ed08 	.word	0xe000ed08

08008528 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008528:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8008538 <vPortEnableVFP+0x10>
 800852c:	6801      	ldr	r1, [r0, #0]
 800852e:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8008532:	6001      	str	r1, [r0, #0]
 8008534:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008536:	0000      	.short	0x0000
 8008538:	e000ed88 	.word	0xe000ed88

0800853c <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
 800853c:	2300      	movs	r3, #0
{
 800853e:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008540:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008542:	4b0f      	ldr	r3, [pc, #60]	@ (8008580 <prvTaskExitError+0x44>)
 8008544:	681b      	ldr	r3, [r3, #0]
 8008546:	3301      	adds	r3, #1
 8008548:	d00a      	beq.n	8008560 <prvTaskExitError+0x24>
 800854a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800854e:	b672      	cpsid	i
 8008550:	f383 8811 	msr	BASEPRI, r3
 8008554:	f3bf 8f6f 	isb	sy
 8008558:	f3bf 8f4f 	dsb	sy
 800855c:	b662      	cpsie	i
 800855e:	e7fe      	b.n	800855e <prvTaskExitError+0x22>
 8008560:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008564:	b672      	cpsid	i
 8008566:	f383 8811 	msr	BASEPRI, r3
 800856a:	f3bf 8f6f 	isb	sy
 800856e:	f3bf 8f4f 	dsb	sy
 8008572:	b662      	cpsie	i
	while( ulDummy == 0 )
 8008574:	9b01      	ldr	r3, [sp, #4]
 8008576:	2b00      	cmp	r3, #0
 8008578:	d0fc      	beq.n	8008574 <prvTaskExitError+0x38>
}
 800857a:	b002      	add	sp, #8
 800857c:	4770      	bx	lr
 800857e:	bf00      	nop
 8008580:	20000040 	.word	0x20000040

08008584 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008584:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008588:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800858c:	f840 2c20 	str.w	r2, [r0, #-32]
}
 8008590:	3844      	subs	r0, #68	@ 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008592:	6403      	str	r3, [r0, #64]	@ 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008594:	4b03      	ldr	r3, [pc, #12]	@ (80085a4 <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008596:	63c1      	str	r1, [r0, #60]	@ 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008598:	6383      	str	r3, [r0, #56]	@ 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800859a:	f06f 0302 	mvn.w	r3, #2
 800859e:	6203      	str	r3, [r0, #32]
}
 80085a0:	4770      	bx	lr
 80085a2:	bf00      	nop
 80085a4:	0800853d 	.word	0x0800853d
	...

080085b0 <SVC_Handler>:
	__asm volatile (
 80085b0:	4b07      	ldr	r3, [pc, #28]	@ (80085d0 <pxCurrentTCBConst2>)
 80085b2:	6819      	ldr	r1, [r3, #0]
 80085b4:	6808      	ldr	r0, [r1, #0]
 80085b6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80085ba:	f380 8809 	msr	PSP, r0
 80085be:	f3bf 8f6f 	isb	sy
 80085c2:	f04f 0000 	mov.w	r0, #0
 80085c6:	f380 8811 	msr	BASEPRI, r0
 80085ca:	4770      	bx	lr
 80085cc:	f3af 8000 	nop.w

080085d0 <pxCurrentTCBConst2>:
 80085d0:	20014f70 	.word	0x20014f70

080085d4 <vPortEnterCritical>:
 80085d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80085d8:	b672      	cpsid	i
 80085da:	f383 8811 	msr	BASEPRI, r3
 80085de:	f3bf 8f6f 	isb	sy
 80085e2:	f3bf 8f4f 	dsb	sy
 80085e6:	b662      	cpsie	i
	uxCriticalNesting++;
 80085e8:	4a0b      	ldr	r2, [pc, #44]	@ (8008618 <vPortEnterCritical+0x44>)
 80085ea:	6813      	ldr	r3, [r2, #0]
 80085ec:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 80085ee:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 80085f0:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 80085f2:	d110      	bne.n	8008616 <vPortEnterCritical+0x42>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 80085f4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80085f8:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 80085fc:	b2db      	uxtb	r3, r3
 80085fe:	b153      	cbz	r3, 8008616 <vPortEnterCritical+0x42>
 8008600:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008604:	b672      	cpsid	i
 8008606:	f383 8811 	msr	BASEPRI, r3
 800860a:	f3bf 8f6f 	isb	sy
 800860e:	f3bf 8f4f 	dsb	sy
 8008612:	b662      	cpsie	i
 8008614:	e7fe      	b.n	8008614 <vPortEnterCritical+0x40>
}
 8008616:	4770      	bx	lr
 8008618:	20000040 	.word	0x20000040

0800861c <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800861c:	4a09      	ldr	r2, [pc, #36]	@ (8008644 <vPortExitCritical+0x28>)
 800861e:	6813      	ldr	r3, [r2, #0]
 8008620:	b953      	cbnz	r3, 8008638 <vPortExitCritical+0x1c>
 8008622:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008626:	b672      	cpsid	i
 8008628:	f383 8811 	msr	BASEPRI, r3
 800862c:	f3bf 8f6f 	isb	sy
 8008630:	f3bf 8f4f 	dsb	sy
 8008634:	b662      	cpsie	i
 8008636:	e7fe      	b.n	8008636 <vPortExitCritical+0x1a>
	uxCriticalNesting--;
 8008638:	3b01      	subs	r3, #1
 800863a:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800863c:	b90b      	cbnz	r3, 8008642 <vPortExitCritical+0x26>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800863e:	f383 8811 	msr	BASEPRI, r3
}
 8008642:	4770      	bx	lr
 8008644:	20000040 	.word	0x20000040
	...

08008650 <PendSV_Handler>:
	__asm volatile
 8008650:	f3ef 8009 	mrs	r0, PSP
 8008654:	f3bf 8f6f 	isb	sy
 8008658:	4b15      	ldr	r3, [pc, #84]	@ (80086b0 <pxCurrentTCBConst>)
 800865a:	681a      	ldr	r2, [r3, #0]
 800865c:	f01e 0f10 	tst.w	lr, #16
 8008660:	bf08      	it	eq
 8008662:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008666:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800866a:	6010      	str	r0, [r2, #0]
 800866c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008670:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8008674:	b672      	cpsid	i
 8008676:	f380 8811 	msr	BASEPRI, r0
 800867a:	f3bf 8f4f 	dsb	sy
 800867e:	f3bf 8f6f 	isb	sy
 8008682:	b662      	cpsie	i
 8008684:	f001 fa00 	bl	8009a88 <vTaskSwitchContext>
 8008688:	f04f 0000 	mov.w	r0, #0
 800868c:	f380 8811 	msr	BASEPRI, r0
 8008690:	bc09      	pop	{r0, r3}
 8008692:	6819      	ldr	r1, [r3, #0]
 8008694:	6808      	ldr	r0, [r1, #0]
 8008696:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800869a:	f01e 0f10 	tst.w	lr, #16
 800869e:	bf08      	it	eq
 80086a0:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80086a4:	f380 8809 	msr	PSP, r0
 80086a8:	f3bf 8f6f 	isb	sy
 80086ac:	4770      	bx	lr
 80086ae:	bf00      	nop

080086b0 <pxCurrentTCBConst>:
 80086b0:	20014f70 	.word	0x20014f70

080086b4 <SysTick_Handler>:
{
 80086b4:	b508      	push	{r3, lr}
	__asm volatile
 80086b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80086ba:	b672      	cpsid	i
 80086bc:	f383 8811 	msr	BASEPRI, r3
 80086c0:	f3bf 8f6f 	isb	sy
 80086c4:	f3bf 8f4f 	dsb	sy
 80086c8:	b662      	cpsie	i
		if( xTaskIncrementTick() != pdFALSE )
 80086ca:	f001 f83b 	bl	8009744 <xTaskIncrementTick>
 80086ce:	b128      	cbz	r0, 80086dc <SysTick_Handler+0x28>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80086d0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80086d4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80086d8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 80086dc:	2300      	movs	r3, #0
 80086de:	f383 8811 	msr	BASEPRI, r3
}
 80086e2:	bd08      	pop	{r3, pc}

080086e4 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80086e4:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 80086e8:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80086ea:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80086ee:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80086f0:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80086f2:	4b04      	ldr	r3, [pc, #16]	@ (8008704 <vPortSetupTimerInterrupt+0x20>)
 80086f4:	681b      	ldr	r3, [r3, #0]
 80086f6:	fbb3 f3f1 	udiv	r3, r3, r1
 80086fa:	3b01      	subs	r3, #1
 80086fc:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80086fe:	2307      	movs	r3, #7
 8008700:	6113      	str	r3, [r2, #16]
}
 8008702:	4770      	bx	lr
 8008704:	2000000c 	.word	0x2000000c

08008708 <xPortStartScheduler>:
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008708:	4b2c      	ldr	r3, [pc, #176]	@ (80087bc <xPortStartScheduler+0xb4>)
{
 800870a:	b537      	push	{r0, r1, r2, r4, r5, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800870c:	781a      	ldrb	r2, [r3, #0]
 800870e:	b2d2      	uxtb	r2, r2
 8008710:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008712:	22ff      	movs	r2, #255	@ 0xff
 8008714:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008716:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008718:	4a29      	ldr	r2, [pc, #164]	@ (80087c0 <xPortStartScheduler+0xb8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800871a:	b2db      	uxtb	r3, r3
 800871c:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008720:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008724:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8008728:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800872a:	2307      	movs	r3, #7
 800872c:	4a25      	ldr	r2, [pc, #148]	@ (80087c4 <xPortStartScheduler+0xbc>)
 800872e:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008730:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 8008734:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008736:	0609      	lsls	r1, r1, #24
 8008738:	d40c      	bmi.n	8008754 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800873a:	2b03      	cmp	r3, #3
 800873c:	d013      	beq.n	8008766 <xPortStartScheduler+0x5e>
	__asm volatile
 800873e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008742:	b672      	cpsid	i
 8008744:	f383 8811 	msr	BASEPRI, r3
 8008748:	f3bf 8f6f 	isb	sy
 800874c:	f3bf 8f4f 	dsb	sy
 8008750:	b662      	cpsie	i
 8008752:	e7fe      	b.n	8008752 <xPortStartScheduler+0x4a>
			ulMaxPRIGROUPValue--;
 8008754:	3b01      	subs	r3, #1
 8008756:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008758:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800875c:	005b      	lsls	r3, r3, #1
 800875e:	b2db      	uxtb	r3, r3
 8008760:	f88d 3003 	strb.w	r3, [sp, #3]
 8008764:	e7e4      	b.n	8008730 <xPortStartScheduler+0x28>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008766:	f44f 7340 	mov.w	r3, #768	@ 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800876a:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
	uxCriticalNesting = 0;
 800876e:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008770:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008772:	9b01      	ldr	r3, [sp, #4]
 8008774:	4a11      	ldr	r2, [pc, #68]	@ (80087bc <xPortStartScheduler+0xb4>)
 8008776:	b2db      	uxtb	r3, r3
 8008778:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800877a:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800877e:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8008782:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008786:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800878a:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800878e:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8008792:	f7ff ffa7 	bl	80086e4 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008796:	4b0c      	ldr	r3, [pc, #48]	@ (80087c8 <xPortStartScheduler+0xc0>)
 8008798:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800879a:	f7ff fec5 	bl	8008528 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800879e:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 80087a2:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 80087a6:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 80087aa:	f7ff fea9 	bl	8008500 <prvPortStartFirstTask>
	vTaskSwitchContext();
 80087ae:	f001 f96b 	bl	8009a88 <vTaskSwitchContext>
}
 80087b2:	4628      	mov	r0, r5
	prvTaskExitError();
 80087b4:	f7ff fec2 	bl	800853c <prvTaskExitError>
}
 80087b8:	b003      	add	sp, #12
 80087ba:	bd30      	pop	{r4, r5, pc}
 80087bc:	e000e400 	.word	0xe000e400
 80087c0:	20014a34 	.word	0x20014a34
 80087c4:	20014a30 	.word	0x20014a30
 80087c8:	20000040 	.word	0x20000040

080087cc <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80087cc:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80087d0:	2b0f      	cmp	r3, #15
 80087d2:	d910      	bls.n	80087f6 <vPortValidateInterruptPriority+0x2a>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80087d4:	4a13      	ldr	r2, [pc, #76]	@ (8008824 <vPortValidateInterruptPriority+0x58>)
 80087d6:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80087d8:	4a13      	ldr	r2, [pc, #76]	@ (8008828 <vPortValidateInterruptPriority+0x5c>)
 80087da:	7812      	ldrb	r2, [r2, #0]
 80087dc:	429a      	cmp	r2, r3
 80087de:	d90a      	bls.n	80087f6 <vPortValidateInterruptPriority+0x2a>
 80087e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087e4:	b672      	cpsid	i
 80087e6:	f383 8811 	msr	BASEPRI, r3
 80087ea:	f3bf 8f6f 	isb	sy
 80087ee:	f3bf 8f4f 	dsb	sy
 80087f2:	b662      	cpsie	i
 80087f4:	e7fe      	b.n	80087f4 <vPortValidateInterruptPriority+0x28>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80087f6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80087fa:	4a0c      	ldr	r2, [pc, #48]	@ (800882c <vPortValidateInterruptPriority+0x60>)
 80087fc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8008800:	6812      	ldr	r2, [r2, #0]
 8008802:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8008806:	4293      	cmp	r3, r2
 8008808:	d90a      	bls.n	8008820 <vPortValidateInterruptPriority+0x54>
 800880a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800880e:	b672      	cpsid	i
 8008810:	f383 8811 	msr	BASEPRI, r3
 8008814:	f3bf 8f6f 	isb	sy
 8008818:	f3bf 8f4f 	dsb	sy
 800881c:	b662      	cpsie	i
 800881e:	e7fe      	b.n	800881e <vPortValidateInterruptPriority+0x52>
	}
 8008820:	4770      	bx	lr
 8008822:	bf00      	nop
 8008824:	e000e3f0 	.word	0xe000e3f0
 8008828:	20014a34 	.word	0x20014a34
 800882c:	20014a30 	.word	0x20014a30

08008830 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008830:	b510      	push	{r4, lr}
 8008832:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008834:	f7ff fece 	bl	80085d4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008838:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800883a:	f7ff feef 	bl	800861c <vPortExitCritical>

	return xReturn;
}
 800883e:	fab4 f084 	clz	r0, r4
 8008842:	0940      	lsrs	r0, r0, #5
 8008844:	bd10      	pop	{r4, pc}

08008846 <prvCopyDataToQueue>:
{
 8008846:	b570      	push	{r4, r5, r6, lr}
 8008848:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800884a:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
 800884c:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800884e:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008850:	b942      	cbnz	r2, 8008864 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008852:	6806      	ldr	r6, [r0, #0]
 8008854:	b99e      	cbnz	r6, 800887e <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008856:	6880      	ldr	r0, [r0, #8]
 8008858:	f001 fa82 	bl	8009d60 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800885c:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800885e:	3501      	adds	r5, #1
 8008860:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8008862:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008864:	b96e      	cbnz	r6, 8008882 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008866:	6840      	ldr	r0, [r0, #4]
 8008868:	f016 faf5 	bl	801ee56 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800886c:	6863      	ldr	r3, [r4, #4]
 800886e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008870:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008872:	68a2      	ldr	r2, [r4, #8]
 8008874:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008876:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008878:	bf24      	itt	cs
 800887a:	6823      	ldrcs	r3, [r4, #0]
 800887c:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 800887e:	2000      	movs	r0, #0
 8008880:	e7ed      	b.n	800885e <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008882:	68c0      	ldr	r0, [r0, #12]
 8008884:	f016 fae7 	bl	801ee56 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008888:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800888a:	68e3      	ldr	r3, [r4, #12]
 800888c:	4251      	negs	r1, r2
 800888e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008890:	6822      	ldr	r2, [r4, #0]
 8008892:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008894:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008896:	bf3e      	ittt	cc
 8008898:	68a3      	ldrcc	r3, [r4, #8]
 800889a:	185b      	addcc	r3, r3, r1
 800889c:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800889e:	2e02      	cmp	r6, #2
 80088a0:	d1ed      	bne.n	800887e <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80088a2:	b10d      	cbz	r5, 80088a8 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 80088a4:	3d01      	subs	r5, #1
 80088a6:	e7ea      	b.n	800887e <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 80088a8:	4628      	mov	r0, r5
 80088aa:	e7d8      	b.n	800885e <prvCopyDataToQueue+0x18>

080088ac <prvCopyDataFromQueue>:
{
 80088ac:	4603      	mov	r3, r0
 80088ae:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80088b0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 80088b2:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80088b4:	b162      	cbz	r2, 80088d0 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80088b6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80088b8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80088ba:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80088bc:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80088be:	60dc      	str	r4, [r3, #12]
}
 80088c0:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80088c4:	bf24      	itt	cs
 80088c6:	6819      	ldrcs	r1, [r3, #0]
 80088c8:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80088ca:	68d9      	ldr	r1, [r3, #12]
 80088cc:	f016 bac3 	b.w	801ee56 <memcpy>
}
 80088d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80088d4:	4770      	bx	lr

080088d6 <prvUnlockQueue>:
{
 80088d6:	b570      	push	{r4, r5, r6, lr}
 80088d8:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80088da:	f7ff fe7b 	bl	80085d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80088de:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80088e2:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80088e6:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80088e8:	2d00      	cmp	r5, #0
 80088ea:	dc14      	bgt.n	8008916 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80088ec:	23ff      	movs	r3, #255	@ 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80088ee:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 80088f2:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 80088f6:	f7ff fe91 	bl	800861c <vPortExitCritical>
	taskENTER_CRITICAL();
 80088fa:	f7ff fe6b 	bl	80085d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80088fe:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
 8008902:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008904:	2d00      	cmp	r5, #0
 8008906:	dc12      	bgt.n	800892e <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008908:	23ff      	movs	r3, #255	@ 0xff
 800890a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800890e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008912:	f7ff be83 	b.w	800861c <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008916:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008918:	2b00      	cmp	r3, #0
 800891a:	d0e7      	beq.n	80088ec <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800891c:	4630      	mov	r0, r6
 800891e:	f001 f935 	bl	8009b8c <xTaskRemoveFromEventList>
 8008922:	b108      	cbz	r0, 8008928 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008924:	f001 f9c2 	bl	8009cac <vTaskMissedYield>
			--cTxLock;
 8008928:	3d01      	subs	r5, #1
 800892a:	b26d      	sxtb	r5, r5
 800892c:	e7dc      	b.n	80088e8 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800892e:	6923      	ldr	r3, [r4, #16]
 8008930:	2b00      	cmp	r3, #0
 8008932:	d0e9      	beq.n	8008908 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008934:	4630      	mov	r0, r6
 8008936:	f001 f929 	bl	8009b8c <xTaskRemoveFromEventList>
 800893a:	b108      	cbz	r0, 8008940 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800893c:	f001 f9b6 	bl	8009cac <vTaskMissedYield>
				--cRxLock;
 8008940:	3d01      	subs	r5, #1
 8008942:	b26d      	sxtb	r5, r5
 8008944:	e7de      	b.n	8008904 <prvUnlockQueue+0x2e>

08008946 <xQueueGenericReset>:
{
 8008946:	b538      	push	{r3, r4, r5, lr}
 8008948:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800894a:	4604      	mov	r4, r0
 800894c:	b950      	cbnz	r0, 8008964 <xQueueGenericReset+0x1e>
 800894e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008952:	b672      	cpsid	i
 8008954:	f383 8811 	msr	BASEPRI, r3
 8008958:	f3bf 8f6f 	isb	sy
 800895c:	f3bf 8f4f 	dsb	sy
 8008960:	b662      	cpsie	i
 8008962:	e7fe      	b.n	8008962 <xQueueGenericReset+0x1c>
	taskENTER_CRITICAL();
 8008964:	f7ff fe36 	bl	80085d4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008968:	6822      	ldr	r2, [r4, #0]
 800896a:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800896e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008970:	434b      	muls	r3, r1
 8008972:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008974:	1a5b      	subs	r3, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008976:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008978:	441a      	add	r2, r3
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800897a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800897c:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800897e:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008980:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8008982:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008986:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 800898a:	b9a5      	cbnz	r5, 80089b6 <xQueueGenericReset+0x70>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800898c:	6923      	ldr	r3, [r4, #16]
 800898e:	b173      	cbz	r3, 80089ae <xQueueGenericReset+0x68>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008990:	f104 0010 	add.w	r0, r4, #16
 8008994:	f001 f8fa 	bl	8009b8c <xTaskRemoveFromEventList>
 8008998:	b148      	cbz	r0, 80089ae <xQueueGenericReset+0x68>
					queueYIELD_IF_USING_PREEMPTION();
 800899a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800899e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80089a2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80089a6:	f3bf 8f4f 	dsb	sy
 80089aa:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 80089ae:	f7ff fe35 	bl	800861c <vPortExitCritical>
}
 80089b2:	2001      	movs	r0, #1
 80089b4:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80089b6:	f104 0010 	add.w	r0, r4, #16
 80089ba:	f7ff fd61 	bl	8008480 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80089be:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80089c2:	f7ff fd5d 	bl	8008480 <vListInitialise>
 80089c6:	e7f2      	b.n	80089ae <xQueueGenericReset+0x68>

080089c8 <xQueueGenericCreateStatic.part.0>:
	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType )
 80089c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80089ca:	460d      	mov	r5, r1
		configASSERT( pxStaticQueue != NULL );
 80089cc:	461c      	mov	r4, r3
 80089ce:	b953      	cbnz	r3, 80089e6 <xQueueGenericCreateStatic.part.0+0x1e>
 80089d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089d4:	b672      	cpsid	i
 80089d6:	f383 8811 	msr	BASEPRI, r3
 80089da:	f3bf 8f6f 	isb	sy
 80089de:	f3bf 8f4f 	dsb	sy
 80089e2:	b662      	cpsie	i
 80089e4:	e7fe      	b.n	80089e4 <xQueueGenericCreateStatic.part.0+0x1c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80089e6:	b15a      	cbz	r2, 8008a00 <xQueueGenericCreateStatic.part.0+0x38>
 80089e8:	b9b1      	cbnz	r1, 8008a18 <xQueueGenericCreateStatic.part.0+0x50>
 80089ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089ee:	b672      	cpsid	i
 80089f0:	f383 8811 	msr	BASEPRI, r3
 80089f4:	f3bf 8f6f 	isb	sy
 80089f8:	f3bf 8f4f 	dsb	sy
 80089fc:	b662      	cpsie	i
 80089fe:	e7fe      	b.n	80089fe <xQueueGenericCreateStatic.part.0+0x36>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008a00:	b151      	cbz	r1, 8008a18 <xQueueGenericCreateStatic.part.0+0x50>
 8008a02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a06:	b672      	cpsid	i
 8008a08:	f383 8811 	msr	BASEPRI, r3
 8008a0c:	f3bf 8f6f 	isb	sy
 8008a10:	f3bf 8f4f 	dsb	sy
 8008a14:	b662      	cpsie	i
 8008a16:	e7fe      	b.n	8008a16 <xQueueGenericCreateStatic.part.0+0x4e>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008a18:	2350      	movs	r3, #80	@ 0x50
 8008a1a:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008a1c:	9b01      	ldr	r3, [sp, #4]
 8008a1e:	2b50      	cmp	r3, #80	@ 0x50
 8008a20:	d00a      	beq.n	8008a38 <xQueueGenericCreateStatic.part.0+0x70>
 8008a22:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a26:	b672      	cpsid	i
 8008a28:	f383 8811 	msr	BASEPRI, r3
 8008a2c:	f3bf 8f6f 	isb	sy
 8008a30:	f3bf 8f4f 	dsb	sy
 8008a34:	b662      	cpsie	i
 8008a36:	e7fe      	b.n	8008a36 <xQueueGenericCreateStatic.part.0+0x6e>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008a38:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008a3a:	2d00      	cmp	r5, #0
 8008a3c:	bf08      	it	eq
 8008a3e:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8008a40:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008a42:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008a46:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8008a48:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008a4c:	4620      	mov	r0, r4
 8008a4e:	f7ff ff7a 	bl	8008946 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008a52:	f89d 3018 	ldrb.w	r3, [sp, #24]
	}
 8008a56:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8008a58:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8008a5c:	b003      	add	sp, #12
 8008a5e:	bd30      	pop	{r4, r5, pc}

08008a60 <xQueueGenericCreateStatic>:
	{
 8008a60:	b410      	push	{r4}
 8008a62:	f89d 4004 	ldrb.w	r4, [sp, #4]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008a66:	b950      	cbnz	r0, 8008a7e <xQueueGenericCreateStatic+0x1e>
 8008a68:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a6c:	b672      	cpsid	i
 8008a6e:	f383 8811 	msr	BASEPRI, r3
 8008a72:	f3bf 8f6f 	isb	sy
 8008a76:	f3bf 8f4f 	dsb	sy
 8008a7a:	b662      	cpsie	i
 8008a7c:	e7fe      	b.n	8008a7c <xQueueGenericCreateStatic+0x1c>
 8008a7e:	9401      	str	r4, [sp, #4]
	}
 8008a80:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008a84:	f7ff bfa0 	b.w	80089c8 <xQueueGenericCreateStatic.part.0>

08008a88 <xQueueGenericCreate>:
	{
 8008a88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008a8a:	460d      	mov	r5, r1
 8008a8c:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008a8e:	4606      	mov	r6, r0
 8008a90:	b950      	cbnz	r0, 8008aa8 <xQueueGenericCreate+0x20>
 8008a92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a96:	b672      	cpsid	i
 8008a98:	f383 8811 	msr	BASEPRI, r3
 8008a9c:	f3bf 8f6f 	isb	sy
 8008aa0:	f3bf 8f4f 	dsb	sy
 8008aa4:	b662      	cpsie	i
 8008aa6:	e7fe      	b.n	8008aa6 <xQueueGenericCreate+0x1e>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008aa8:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008aaa:	3050      	adds	r0, #80	@ 0x50
 8008aac:	f7ff fc16 	bl	80082dc <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008ab0:	4604      	mov	r4, r0
 8008ab2:	b170      	cbz	r0, 8008ad2 <xQueueGenericCreate+0x4a>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008ab4:	2300      	movs	r3, #0
 8008ab6:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008aba:	b165      	cbz	r5, 8008ad6 <xQueueGenericCreate+0x4e>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008abc:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008ac0:	2101      	movs	r1, #1
 8008ac2:	4620      	mov	r0, r4
 8008ac4:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8008ac6:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008aca:	f7ff ff3c 	bl	8008946 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008ace:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8008ad2:	4620      	mov	r0, r4
 8008ad4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008ad6:	4603      	mov	r3, r0
 8008ad8:	e7f2      	b.n	8008ac0 <xQueueGenericCreate+0x38>

08008ada <xQueueCreateCountingSemaphoreStatic>:
	{
 8008ada:	b513      	push	{r0, r1, r4, lr}
 8008adc:	4613      	mov	r3, r2
 8008ade:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008ae0:	b950      	cbnz	r0, 8008af8 <xQueueCreateCountingSemaphoreStatic+0x1e>
 8008ae2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ae6:	b672      	cpsid	i
 8008ae8:	f383 8811 	msr	BASEPRI, r3
 8008aec:	f3bf 8f6f 	isb	sy
 8008af0:	f3bf 8f4f 	dsb	sy
 8008af4:	b662      	cpsie	i
 8008af6:	e7fe      	b.n	8008af6 <xQueueCreateCountingSemaphoreStatic+0x1c>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008af8:	4288      	cmp	r0, r1
 8008afa:	d20a      	bcs.n	8008b12 <xQueueCreateCountingSemaphoreStatic+0x38>
 8008afc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b00:	b672      	cpsid	i
 8008b02:	f383 8811 	msr	BASEPRI, r3
 8008b06:	f3bf 8f6f 	isb	sy
 8008b0a:	f3bf 8f4f 	dsb	sy
 8008b0e:	b662      	cpsie	i
 8008b10:	e7fe      	b.n	8008b10 <xQueueCreateCountingSemaphoreStatic+0x36>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008b12:	2202      	movs	r2, #2
 8008b14:	9200      	str	r2, [sp, #0]
 8008b16:	2200      	movs	r2, #0
 8008b18:	4611      	mov	r1, r2
 8008b1a:	f7ff ffa1 	bl	8008a60 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8008b1e:	b100      	cbz	r0, 8008b22 <xQueueCreateCountingSemaphoreStatic+0x48>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008b20:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008b22:	b002      	add	sp, #8
 8008b24:	bd10      	pop	{r4, pc}

08008b26 <xQueueCreateCountingSemaphore>:
	{
 8008b26:	b510      	push	{r4, lr}
 8008b28:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008b2a:	b950      	cbnz	r0, 8008b42 <xQueueCreateCountingSemaphore+0x1c>
 8008b2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b30:	b672      	cpsid	i
 8008b32:	f383 8811 	msr	BASEPRI, r3
 8008b36:	f3bf 8f6f 	isb	sy
 8008b3a:	f3bf 8f4f 	dsb	sy
 8008b3e:	b662      	cpsie	i
 8008b40:	e7fe      	b.n	8008b40 <xQueueCreateCountingSemaphore+0x1a>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008b42:	4288      	cmp	r0, r1
 8008b44:	d20a      	bcs.n	8008b5c <xQueueCreateCountingSemaphore+0x36>
 8008b46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b4a:	b672      	cpsid	i
 8008b4c:	f383 8811 	msr	BASEPRI, r3
 8008b50:	f3bf 8f6f 	isb	sy
 8008b54:	f3bf 8f4f 	dsb	sy
 8008b58:	b662      	cpsie	i
 8008b5a:	e7fe      	b.n	8008b5a <xQueueCreateCountingSemaphore+0x34>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008b5c:	2202      	movs	r2, #2
 8008b5e:	2100      	movs	r1, #0
 8008b60:	f7ff ff92 	bl	8008a88 <xQueueGenericCreate>
		if( xHandle != NULL )
 8008b64:	b100      	cbz	r0, 8008b68 <xQueueCreateCountingSemaphore+0x42>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008b66:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008b68:	bd10      	pop	{r4, pc}

08008b6a <xQueueGenericSend>:
{
 8008b6a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008b6e:	460f      	mov	r7, r1
 8008b70:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8008b72:	4604      	mov	r4, r0
{
 8008b74:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 8008b76:	b950      	cbnz	r0, 8008b8e <xQueueGenericSend+0x24>
 8008b78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b7c:	b672      	cpsid	i
 8008b7e:	f383 8811 	msr	BASEPRI, r3
 8008b82:	f3bf 8f6f 	isb	sy
 8008b86:	f3bf 8f4f 	dsb	sy
 8008b8a:	b662      	cpsie	i
 8008b8c:	e7fe      	b.n	8008b8c <xQueueGenericSend+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008b8e:	b961      	cbnz	r1, 8008baa <xQueueGenericSend+0x40>
 8008b90:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008b92:	b153      	cbz	r3, 8008baa <xQueueGenericSend+0x40>
 8008b94:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b98:	b672      	cpsid	i
 8008b9a:	f383 8811 	msr	BASEPRI, r3
 8008b9e:	f3bf 8f6f 	isb	sy
 8008ba2:	f3bf 8f4f 	dsb	sy
 8008ba6:	b662      	cpsie	i
 8008ba8:	e7fe      	b.n	8008ba8 <xQueueGenericSend+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008baa:	2e02      	cmp	r6, #2
 8008bac:	d10d      	bne.n	8008bca <xQueueGenericSend+0x60>
 8008bae:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008bb0:	2b01      	cmp	r3, #1
 8008bb2:	d00a      	beq.n	8008bca <xQueueGenericSend+0x60>
 8008bb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008bb8:	b672      	cpsid	i
 8008bba:	f383 8811 	msr	BASEPRI, r3
 8008bbe:	f3bf 8f6f 	isb	sy
 8008bc2:	f3bf 8f4f 	dsb	sy
 8008bc6:	b662      	cpsie	i
 8008bc8:	e7fe      	b.n	8008bc8 <xQueueGenericSend+0x5e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008bca:	f001 f87b 	bl	8009cc4 <xTaskGetSchedulerState>
 8008bce:	4605      	mov	r5, r0
 8008bd0:	b330      	cbz	r0, 8008c20 <xQueueGenericSend+0xb6>
 8008bd2:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008bd4:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008bd8:	f7ff fcfc 	bl	80085d4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008bdc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008bde:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008be0:	429a      	cmp	r2, r3
 8008be2:	d301      	bcc.n	8008be8 <xQueueGenericSend+0x7e>
 8008be4:	2e02      	cmp	r6, #2
 8008be6:	d129      	bne.n	8008c3c <xQueueGenericSend+0xd2>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008be8:	4632      	mov	r2, r6
 8008bea:	4639      	mov	r1, r7
 8008bec:	4620      	mov	r0, r4
 8008bee:	f7ff fe2a 	bl	8008846 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008bf2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008bf4:	b11b      	cbz	r3, 8008bfe <xQueueGenericSend+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008bf6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008bfa:	f000 ffc7 	bl	8009b8c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008bfe:	b148      	cbz	r0, 8008c14 <xQueueGenericSend+0xaa>
						queueYIELD_IF_USING_PREEMPTION();
 8008c00:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008c04:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008c08:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008c0c:	f3bf 8f4f 	dsb	sy
 8008c10:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008c14:	f7ff fd02 	bl	800861c <vPortExitCritical>
				return pdPASS;
 8008c18:	2001      	movs	r0, #1
}
 8008c1a:	b004      	add	sp, #16
 8008c1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008c20:	9b01      	ldr	r3, [sp, #4]
 8008c22:	2b00      	cmp	r3, #0
 8008c24:	d0d6      	beq.n	8008bd4 <xQueueGenericSend+0x6a>
 8008c26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c2a:	b672      	cpsid	i
 8008c2c:	f383 8811 	msr	BASEPRI, r3
 8008c30:	f3bf 8f6f 	isb	sy
 8008c34:	f3bf 8f4f 	dsb	sy
 8008c38:	b662      	cpsie	i
 8008c3a:	e7fe      	b.n	8008c3a <xQueueGenericSend+0xd0>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008c3c:	9b01      	ldr	r3, [sp, #4]
 8008c3e:	b91b      	cbnz	r3, 8008c48 <xQueueGenericSend+0xde>
					taskEXIT_CRITICAL();
 8008c40:	f7ff fcec 	bl	800861c <vPortExitCritical>
					return errQUEUE_FULL;
 8008c44:	2000      	movs	r0, #0
 8008c46:	e7e8      	b.n	8008c1a <xQueueGenericSend+0xb0>
				else if( xEntryTimeSet == pdFALSE )
 8008c48:	b915      	cbnz	r5, 8008c50 <xQueueGenericSend+0xe6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008c4a:	a802      	add	r0, sp, #8
 8008c4c:	f000 ffe2 	bl	8009c14 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008c50:	f7ff fce4 	bl	800861c <vPortExitCritical>
		vTaskSuspendAll();
 8008c54:	f000 fd68 	bl	8009728 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008c58:	f7ff fcbc 	bl	80085d4 <vPortEnterCritical>
 8008c5c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008c60:	2bff      	cmp	r3, #255	@ 0xff
 8008c62:	d101      	bne.n	8008c68 <xQueueGenericSend+0xfe>
 8008c64:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
 8008c68:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008c6c:	2bff      	cmp	r3, #255	@ 0xff
 8008c6e:	d101      	bne.n	8008c74 <xQueueGenericSend+0x10a>
 8008c70:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
 8008c74:	f7ff fcd2 	bl	800861c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008c78:	a901      	add	r1, sp, #4
 8008c7a:	a802      	add	r0, sp, #8
 8008c7c:	f000 ffd6 	bl	8009c2c <xTaskCheckForTimeOut>
 8008c80:	bb38      	cbnz	r0, 8008cd2 <xQueueGenericSend+0x168>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008c82:	f7ff fca7 	bl	80085d4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008c86:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008c88:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008c8a:	429a      	cmp	r2, r3
 8008c8c:	d10e      	bne.n	8008cac <xQueueGenericSend+0x142>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008c8e:	f7ff fcc5 	bl	800861c <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008c92:	9901      	ldr	r1, [sp, #4]
 8008c94:	f104 0010 	add.w	r0, r4, #16
 8008c98:	f000 ff3c 	bl	8009b14 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008c9c:	4620      	mov	r0, r4
 8008c9e:	f7ff fe1a 	bl	80088d6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008ca2:	f000 fde7 	bl	8009874 <xTaskResumeAll>
 8008ca6:	b148      	cbz	r0, 8008cbc <xQueueGenericSend+0x152>
 8008ca8:	2501      	movs	r5, #1
 8008caa:	e795      	b.n	8008bd8 <xQueueGenericSend+0x6e>
	taskEXIT_CRITICAL();
 8008cac:	f7ff fcb6 	bl	800861c <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008cb0:	4620      	mov	r0, r4
 8008cb2:	f7ff fe10 	bl	80088d6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008cb6:	f000 fddd 	bl	8009874 <xTaskResumeAll>
 8008cba:	e7f5      	b.n	8008ca8 <xQueueGenericSend+0x13e>
					portYIELD_WITHIN_API();
 8008cbc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008cc0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008cc4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008cc8:	f3bf 8f4f 	dsb	sy
 8008ccc:	f3bf 8f6f 	isb	sy
 8008cd0:	e7ea      	b.n	8008ca8 <xQueueGenericSend+0x13e>
			prvUnlockQueue( pxQueue );
 8008cd2:	4620      	mov	r0, r4
 8008cd4:	f7ff fdff 	bl	80088d6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008cd8:	f000 fdcc 	bl	8009874 <xTaskResumeAll>
			return errQUEUE_FULL;
 8008cdc:	e7b2      	b.n	8008c44 <xQueueGenericSend+0xda>

08008cde <xQueueCreateMutexStatic>:
		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueType );
 8008cde:	2200      	movs	r2, #0
	{
 8008ce0:	460b      	mov	r3, r1
 8008ce2:	b513      	push	{r0, r1, r4, lr}
 8008ce4:	4611      	mov	r1, r2
 8008ce6:	9000      	str	r0, [sp, #0]
 8008ce8:	2001      	movs	r0, #1
 8008cea:	f7ff fe6d 	bl	80089c8 <xQueueGenericCreateStatic.part.0>
		if( pxNewQueue != NULL )
 8008cee:	4604      	mov	r4, r0
 8008cf0:	b138      	cbz	r0, 8008d02 <xQueueCreateMutexStatic+0x24>
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 8008cf2:	2300      	movs	r3, #0
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 8008cf4:	461a      	mov	r2, r3
 8008cf6:	4619      	mov	r1, r3
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 8008cf8:	6083      	str	r3, [r0, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 8008cfa:	6003      	str	r3, [r0, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 8008cfc:	60c3      	str	r3, [r0, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 8008cfe:	f7ff ff34 	bl	8008b6a <xQueueGenericSend>
	}
 8008d02:	4620      	mov	r0, r4
 8008d04:	b002      	add	sp, #8
 8008d06:	bd10      	pop	{r4, pc}

08008d08 <xQueueGiveMutexRecursive>:
	{
 8008d08:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
 8008d0a:	4604      	mov	r4, r0
 8008d0c:	b950      	cbnz	r0, 8008d24 <xQueueGiveMutexRecursive+0x1c>
 8008d0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d12:	b672      	cpsid	i
 8008d14:	f383 8811 	msr	BASEPRI, r3
 8008d18:	f3bf 8f6f 	isb	sy
 8008d1c:	f3bf 8f4f 	dsb	sy
 8008d20:	b662      	cpsie	i
 8008d22:	e7fe      	b.n	8008d22 <xQueueGiveMutexRecursive+0x1a>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 8008d24:	6885      	ldr	r5, [r0, #8]
 8008d26:	f000 ffc7 	bl	8009cb8 <xTaskGetCurrentTaskHandle>
 8008d2a:	4285      	cmp	r5, r0
 8008d2c:	d10b      	bne.n	8008d46 <xQueueGiveMutexRecursive+0x3e>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 8008d2e:	68e3      	ldr	r3, [r4, #12]
 8008d30:	3b01      	subs	r3, #1
 8008d32:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 8008d34:	b10b      	cbz	r3, 8008d3a <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
 8008d36:	2001      	movs	r0, #1
	}
 8008d38:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 8008d3a:	461a      	mov	r2, r3
 8008d3c:	4619      	mov	r1, r3
 8008d3e:	4620      	mov	r0, r4
 8008d40:	f7ff ff13 	bl	8008b6a <xQueueGenericSend>
 8008d44:	e7f7      	b.n	8008d36 <xQueueGiveMutexRecursive+0x2e>
			xReturn = pdFAIL;
 8008d46:	2000      	movs	r0, #0
		return xReturn;
 8008d48:	e7f6      	b.n	8008d38 <xQueueGiveMutexRecursive+0x30>

08008d4a <xQueueCreateMutex>:
	{
 8008d4a:	b570      	push	{r4, r5, r6, lr}
 8008d4c:	4606      	mov	r6, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008d4e:	2050      	movs	r0, #80	@ 0x50
 8008d50:	f7ff fac4 	bl	80082dc <pvPortMalloc>
 8008d54:	4604      	mov	r4, r0
		if( pxNewQueue != NULL )
 8008d56:	b198      	cbz	r0, 8008d80 <xQueueCreateMutex+0x36>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008d58:	2500      	movs	r5, #0
	pxNewQueue->uxLength = uxQueueLength;
 8008d5a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008d5c:	6000      	str	r0, [r0, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008d5e:	f880 5046 	strb.w	r5, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
 8008d62:	e9c0 150f 	strd	r1, r5, [r0, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008d66:	f7ff fdee 	bl	8008946 <xQueueGenericReset>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 8008d6a:	462b      	mov	r3, r5
 8008d6c:	462a      	mov	r2, r5
 8008d6e:	4629      	mov	r1, r5
 8008d70:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8008d72:	f884 604c 	strb.w	r6, [r4, #76]	@ 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 8008d76:	60a5      	str	r5, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 8008d78:	6025      	str	r5, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 8008d7a:	60e5      	str	r5, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 8008d7c:	f7ff fef5 	bl	8008b6a <xQueueGenericSend>
	}
 8008d80:	4620      	mov	r0, r4
 8008d82:	bd70      	pop	{r4, r5, r6, pc}

08008d84 <xQueueGenericSendFromISR>:
{
 8008d84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008d88:	4689      	mov	r9, r1
 8008d8a:	4617      	mov	r7, r2
 8008d8c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8008d8e:	4604      	mov	r4, r0
 8008d90:	b950      	cbnz	r0, 8008da8 <xQueueGenericSendFromISR+0x24>
 8008d92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d96:	b672      	cpsid	i
 8008d98:	f383 8811 	msr	BASEPRI, r3
 8008d9c:	f3bf 8f6f 	isb	sy
 8008da0:	f3bf 8f4f 	dsb	sy
 8008da4:	b662      	cpsie	i
 8008da6:	e7fe      	b.n	8008da6 <xQueueGenericSendFromISR+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008da8:	b961      	cbnz	r1, 8008dc4 <xQueueGenericSendFromISR+0x40>
 8008daa:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008dac:	b153      	cbz	r3, 8008dc4 <xQueueGenericSendFromISR+0x40>
 8008dae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008db2:	b672      	cpsid	i
 8008db4:	f383 8811 	msr	BASEPRI, r3
 8008db8:	f3bf 8f6f 	isb	sy
 8008dbc:	f3bf 8f4f 	dsb	sy
 8008dc0:	b662      	cpsie	i
 8008dc2:	e7fe      	b.n	8008dc2 <xQueueGenericSendFromISR+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008dc4:	2e02      	cmp	r6, #2
 8008dc6:	d10d      	bne.n	8008de4 <xQueueGenericSendFromISR+0x60>
 8008dc8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008dca:	2b01      	cmp	r3, #1
 8008dcc:	d00a      	beq.n	8008de4 <xQueueGenericSendFromISR+0x60>
 8008dce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dd2:	b672      	cpsid	i
 8008dd4:	f383 8811 	msr	BASEPRI, r3
 8008dd8:	f3bf 8f6f 	isb	sy
 8008ddc:	f3bf 8f4f 	dsb	sy
 8008de0:	b662      	cpsie	i
 8008de2:	e7fe      	b.n	8008de2 <xQueueGenericSendFromISR+0x5e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008de4:	f7ff fcf2 	bl	80087cc <vPortValidateInterruptPriority>
	__asm volatile
 8008de8:	f3ef 8811 	mrs	r8, BASEPRI
 8008dec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008df0:	b672      	cpsid	i
 8008df2:	f383 8811 	msr	BASEPRI, r3
 8008df6:	f3bf 8f6f 	isb	sy
 8008dfa:	f3bf 8f4f 	dsb	sy
 8008dfe:	b662      	cpsie	i
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008e00:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008e02:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008e04:	429a      	cmp	r2, r3
 8008e06:	d301      	bcc.n	8008e0c <xQueueGenericSendFromISR+0x88>
 8008e08:	2e02      	cmp	r6, #2
 8008e0a:	d11d      	bne.n	8008e48 <xQueueGenericSendFromISR+0xc4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008e0c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008e10:	4632      	mov	r2, r6
 8008e12:	4649      	mov	r1, r9
 8008e14:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 8008e16:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008e18:	f7ff fd15 	bl	8008846 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008e1c:	1c6b      	adds	r3, r5, #1
 8008e1e:	d10e      	bne.n	8008e3e <xQueueGenericSendFromISR+0xba>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008e20:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008e22:	b13b      	cbz	r3, 8008e34 <xQueueGenericSendFromISR+0xb0>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008e24:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008e28:	f000 feb0 	bl	8009b8c <xTaskRemoveFromEventList>
 8008e2c:	b110      	cbz	r0, 8008e34 <xQueueGenericSendFromISR+0xb0>
							if( pxHigherPriorityTaskWoken != NULL )
 8008e2e:	b10f      	cbz	r7, 8008e34 <xQueueGenericSendFromISR+0xb0>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008e30:	2301      	movs	r3, #1
 8008e32:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8008e34:	2001      	movs	r0, #1
	__asm volatile
 8008e36:	f388 8811 	msr	BASEPRI, r8
}
 8008e3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008e3e:	3501      	adds	r5, #1
 8008e40:	b26d      	sxtb	r5, r5
 8008e42:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8008e46:	e7f5      	b.n	8008e34 <xQueueGenericSendFromISR+0xb0>
			xReturn = errQUEUE_FULL;
 8008e48:	2000      	movs	r0, #0
 8008e4a:	e7f4      	b.n	8008e36 <xQueueGenericSendFromISR+0xb2>

08008e4c <xQueueGiveFromISR>:
{
 8008e4c:	b570      	push	{r4, r5, r6, lr}
 8008e4e:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008e50:	4604      	mov	r4, r0
 8008e52:	b950      	cbnz	r0, 8008e6a <xQueueGiveFromISR+0x1e>
	__asm volatile
 8008e54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e58:	b672      	cpsid	i
 8008e5a:	f383 8811 	msr	BASEPRI, r3
 8008e5e:	f3bf 8f6f 	isb	sy
 8008e62:	f3bf 8f4f 	dsb	sy
 8008e66:	b662      	cpsie	i
 8008e68:	e7fe      	b.n	8008e68 <xQueueGiveFromISR+0x1c>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008e6a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008e6c:	b153      	cbz	r3, 8008e84 <xQueueGiveFromISR+0x38>
 8008e6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e72:	b672      	cpsid	i
 8008e74:	f383 8811 	msr	BASEPRI, r3
 8008e78:	f3bf 8f6f 	isb	sy
 8008e7c:	f3bf 8f4f 	dsb	sy
 8008e80:	b662      	cpsie	i
 8008e82:	e7fe      	b.n	8008e82 <xQueueGiveFromISR+0x36>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008e84:	6803      	ldr	r3, [r0, #0]
 8008e86:	b963      	cbnz	r3, 8008ea2 <xQueueGiveFromISR+0x56>
 8008e88:	6883      	ldr	r3, [r0, #8]
 8008e8a:	b153      	cbz	r3, 8008ea2 <xQueueGiveFromISR+0x56>
 8008e8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e90:	b672      	cpsid	i
 8008e92:	f383 8811 	msr	BASEPRI, r3
 8008e96:	f3bf 8f6f 	isb	sy
 8008e9a:	f3bf 8f4f 	dsb	sy
 8008e9e:	b662      	cpsie	i
 8008ea0:	e7fe      	b.n	8008ea0 <xQueueGiveFromISR+0x54>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008ea2:	f7ff fc93 	bl	80087cc <vPortValidateInterruptPriority>
	__asm volatile
 8008ea6:	f3ef 8611 	mrs	r6, BASEPRI
 8008eaa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008eae:	b672      	cpsid	i
 8008eb0:	f383 8811 	msr	BASEPRI, r3
 8008eb4:	f3bf 8f6f 	isb	sy
 8008eb8:	f3bf 8f4f 	dsb	sy
 8008ebc:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008ebe:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008ec0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008ec2:	4293      	cmp	r3, r2
 8008ec4:	d919      	bls.n	8008efa <xQueueGiveFromISR+0xae>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008ec6:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008eca:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008ecc:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008ece:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008ed0:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8008ed2:	d10d      	bne.n	8008ef0 <xQueueGiveFromISR+0xa4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008ed4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008ed6:	b13b      	cbz	r3, 8008ee8 <xQueueGiveFromISR+0x9c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008ed8:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008edc:	f000 fe56 	bl	8009b8c <xTaskRemoveFromEventList>
 8008ee0:	b110      	cbz	r0, 8008ee8 <xQueueGiveFromISR+0x9c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008ee2:	b10d      	cbz	r5, 8008ee8 <xQueueGiveFromISR+0x9c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008ee4:	2301      	movs	r3, #1
 8008ee6:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 8008ee8:	2001      	movs	r0, #1
	__asm volatile
 8008eea:	f386 8811 	msr	BASEPRI, r6
}
 8008eee:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008ef0:	3301      	adds	r3, #1
 8008ef2:	b25b      	sxtb	r3, r3
 8008ef4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8008ef8:	e7f6      	b.n	8008ee8 <xQueueGiveFromISR+0x9c>
			xReturn = errQUEUE_FULL;
 8008efa:	2000      	movs	r0, #0
 8008efc:	e7f5      	b.n	8008eea <xQueueGiveFromISR+0x9e>

08008efe <xQueueReceive>:
{
 8008efe:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008f02:	460e      	mov	r6, r1
	configASSERT( ( pxQueue ) );
 8008f04:	4604      	mov	r4, r0
{
 8008f06:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008f08:	b950      	cbnz	r0, 8008f20 <xQueueReceive+0x22>
	__asm volatile
 8008f0a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f0e:	b672      	cpsid	i
 8008f10:	f383 8811 	msr	BASEPRI, r3
 8008f14:	f3bf 8f6f 	isb	sy
 8008f18:	f3bf 8f4f 	dsb	sy
 8008f1c:	b662      	cpsie	i
 8008f1e:	e7fe      	b.n	8008f1e <xQueueReceive+0x20>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008f20:	b961      	cbnz	r1, 8008f3c <xQueueReceive+0x3e>
 8008f22:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008f24:	b153      	cbz	r3, 8008f3c <xQueueReceive+0x3e>
 8008f26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f2a:	b672      	cpsid	i
 8008f2c:	f383 8811 	msr	BASEPRI, r3
 8008f30:	f3bf 8f6f 	isb	sy
 8008f34:	f3bf 8f4f 	dsb	sy
 8008f38:	b662      	cpsie	i
 8008f3a:	e7fe      	b.n	8008f3a <xQueueReceive+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008f3c:	f000 fec2 	bl	8009cc4 <xTaskGetSchedulerState>
 8008f40:	4605      	mov	r5, r0
 8008f42:	b318      	cbz	r0, 8008f8c <xQueueReceive+0x8e>
 8008f44:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008f46:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008f4a:	f7ff fb43 	bl	80085d4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008f4e:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008f50:	b357      	cbz	r7, 8008fa8 <xQueueReceive+0xaa>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008f52:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008f54:	4631      	mov	r1, r6
 8008f56:	4620      	mov	r0, r4
 8008f58:	f7ff fca8 	bl	80088ac <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008f5c:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008f5e:	6923      	ldr	r3, [r4, #16]
 8008f60:	b173      	cbz	r3, 8008f80 <xQueueReceive+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008f62:	f104 0010 	add.w	r0, r4, #16
 8008f66:	f000 fe11 	bl	8009b8c <xTaskRemoveFromEventList>
 8008f6a:	b148      	cbz	r0, 8008f80 <xQueueReceive+0x82>
						queueYIELD_IF_USING_PREEMPTION();
 8008f6c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008f70:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008f74:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008f78:	f3bf 8f4f 	dsb	sy
 8008f7c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008f80:	f7ff fb4c 	bl	800861c <vPortExitCritical>
				return pdPASS;
 8008f84:	2001      	movs	r0, #1
}
 8008f86:	b004      	add	sp, #16
 8008f88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008f8c:	9b01      	ldr	r3, [sp, #4]
 8008f8e:	2b00      	cmp	r3, #0
 8008f90:	d0d9      	beq.n	8008f46 <xQueueReceive+0x48>
 8008f92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f96:	b672      	cpsid	i
 8008f98:	f383 8811 	msr	BASEPRI, r3
 8008f9c:	f3bf 8f6f 	isb	sy
 8008fa0:	f3bf 8f4f 	dsb	sy
 8008fa4:	b662      	cpsie	i
 8008fa6:	e7fe      	b.n	8008fa6 <xQueueReceive+0xa8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008fa8:	9b01      	ldr	r3, [sp, #4]
 8008faa:	b91b      	cbnz	r3, 8008fb4 <xQueueReceive+0xb6>
					taskEXIT_CRITICAL();
 8008fac:	f7ff fb36 	bl	800861c <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008fb0:	2000      	movs	r0, #0
 8008fb2:	e7e8      	b.n	8008f86 <xQueueReceive+0x88>
				else if( xEntryTimeSet == pdFALSE )
 8008fb4:	b915      	cbnz	r5, 8008fbc <xQueueReceive+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008fb6:	a802      	add	r0, sp, #8
 8008fb8:	f000 fe2c 	bl	8009c14 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008fbc:	f7ff fb2e 	bl	800861c <vPortExitCritical>
		vTaskSuspendAll();
 8008fc0:	f000 fbb2 	bl	8009728 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008fc4:	f7ff fb06 	bl	80085d4 <vPortEnterCritical>
 8008fc8:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008fcc:	2bff      	cmp	r3, #255	@ 0xff
 8008fce:	d101      	bne.n	8008fd4 <xQueueReceive+0xd6>
 8008fd0:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
 8008fd4:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008fd8:	2bff      	cmp	r3, #255	@ 0xff
 8008fda:	d101      	bne.n	8008fe0 <xQueueReceive+0xe2>
 8008fdc:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
 8008fe0:	f7ff fb1c 	bl	800861c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008fe4:	a901      	add	r1, sp, #4
 8008fe6:	a802      	add	r0, sp, #8
 8008fe8:	f000 fe20 	bl	8009c2c <xTaskCheckForTimeOut>
 8008fec:	bb00      	cbnz	r0, 8009030 <xQueueReceive+0x132>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008fee:	4620      	mov	r0, r4
 8008ff0:	f7ff fc1e 	bl	8008830 <prvIsQueueEmpty>
 8008ff4:	b1b0      	cbz	r0, 8009024 <xQueueReceive+0x126>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008ff6:	9901      	ldr	r1, [sp, #4]
 8008ff8:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008ffc:	f000 fd8a 	bl	8009b14 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009000:	4620      	mov	r0, r4
 8009002:	f7ff fc68 	bl	80088d6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009006:	f000 fc35 	bl	8009874 <xTaskResumeAll>
 800900a:	b948      	cbnz	r0, 8009020 <xQueueReceive+0x122>
					portYIELD_WITHIN_API();
 800900c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009010:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009014:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009018:	f3bf 8f4f 	dsb	sy
 800901c:	f3bf 8f6f 	isb	sy
 8009020:	2501      	movs	r5, #1
 8009022:	e792      	b.n	8008f4a <xQueueReceive+0x4c>
				prvUnlockQueue( pxQueue );
 8009024:	4620      	mov	r0, r4
 8009026:	f7ff fc56 	bl	80088d6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800902a:	f000 fc23 	bl	8009874 <xTaskResumeAll>
 800902e:	e7f7      	b.n	8009020 <xQueueReceive+0x122>
			prvUnlockQueue( pxQueue );
 8009030:	4620      	mov	r0, r4
 8009032:	f7ff fc50 	bl	80088d6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009036:	f000 fc1d 	bl	8009874 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800903a:	4620      	mov	r0, r4
 800903c:	f7ff fbf8 	bl	8008830 <prvIsQueueEmpty>
 8009040:	2800      	cmp	r0, #0
 8009042:	d0ed      	beq.n	8009020 <xQueueReceive+0x122>
 8009044:	e7b4      	b.n	8008fb0 <xQueueReceive+0xb2>

08009046 <xQueueSemaphoreTake>:
{
 8009046:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009048:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800904a:	4604      	mov	r4, r0
{
 800904c:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800904e:	b950      	cbnz	r0, 8009066 <xQueueSemaphoreTake+0x20>
 8009050:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009054:	b672      	cpsid	i
 8009056:	f383 8811 	msr	BASEPRI, r3
 800905a:	f3bf 8f6f 	isb	sy
 800905e:	f3bf 8f4f 	dsb	sy
 8009062:	b662      	cpsie	i
 8009064:	e7fe      	b.n	8009064 <xQueueSemaphoreTake+0x1e>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009066:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8009068:	b155      	cbz	r5, 8009080 <xQueueSemaphoreTake+0x3a>
 800906a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800906e:	b672      	cpsid	i
 8009070:	f383 8811 	msr	BASEPRI, r3
 8009074:	f3bf 8f6f 	isb	sy
 8009078:	f3bf 8f4f 	dsb	sy
 800907c:	b662      	cpsie	i
 800907e:	e7fe      	b.n	800907e <xQueueSemaphoreTake+0x38>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009080:	f000 fe20 	bl	8009cc4 <xTaskGetSchedulerState>
 8009084:	4606      	mov	r6, r0
 8009086:	b320      	cbz	r0, 80090d2 <xQueueSemaphoreTake+0x8c>
 8009088:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800908a:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800908c:	f7ff faa2 	bl	80085d4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009090:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009092:	b363      	cbz	r3, 80090ee <xQueueSemaphoreTake+0xa8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009094:	3b01      	subs	r3, #1
 8009096:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009098:	6823      	ldr	r3, [r4, #0]
 800909a:	b913      	cbnz	r3, 80090a2 <xQueueSemaphoreTake+0x5c>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800909c:	f000 fef8 	bl	8009e90 <pvTaskIncrementMutexHeldCount>
 80090a0:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80090a2:	6923      	ldr	r3, [r4, #16]
 80090a4:	b173      	cbz	r3, 80090c4 <xQueueSemaphoreTake+0x7e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80090a6:	f104 0010 	add.w	r0, r4, #16
 80090aa:	f000 fd6f 	bl	8009b8c <xTaskRemoveFromEventList>
 80090ae:	b148      	cbz	r0, 80090c4 <xQueueSemaphoreTake+0x7e>
						queueYIELD_IF_USING_PREEMPTION();
 80090b0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80090b4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80090b8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80090bc:	f3bf 8f4f 	dsb	sy
 80090c0:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80090c4:	f7ff faaa 	bl	800861c <vPortExitCritical>
				return pdPASS;
 80090c8:	2001      	movs	r0, #1
}
 80090ca:	b005      	add	sp, #20
 80090cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80090ce:	4635      	mov	r5, r6
 80090d0:	e7db      	b.n	800908a <xQueueSemaphoreTake+0x44>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80090d2:	9b01      	ldr	r3, [sp, #4]
 80090d4:	2b00      	cmp	r3, #0
 80090d6:	d0fa      	beq.n	80090ce <xQueueSemaphoreTake+0x88>
 80090d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090dc:	b672      	cpsid	i
 80090de:	f383 8811 	msr	BASEPRI, r3
 80090e2:	f3bf 8f6f 	isb	sy
 80090e6:	f3bf 8f4f 	dsb	sy
 80090ea:	b662      	cpsie	i
 80090ec:	e7fe      	b.n	80090ec <xQueueSemaphoreTake+0xa6>
				if( xTicksToWait == ( TickType_t ) 0 )
 80090ee:	9b01      	ldr	r3, [sp, #4]
 80090f0:	b963      	cbnz	r3, 800910c <xQueueSemaphoreTake+0xc6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80090f2:	2d00      	cmp	r5, #0
 80090f4:	d068      	beq.n	80091c8 <xQueueSemaphoreTake+0x182>
 80090f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090fa:	b672      	cpsid	i
 80090fc:	f383 8811 	msr	BASEPRI, r3
 8009100:	f3bf 8f6f 	isb	sy
 8009104:	f3bf 8f4f 	dsb	sy
 8009108:	b662      	cpsie	i
 800910a:	e7fe      	b.n	800910a <xQueueSemaphoreTake+0xc4>
				else if( xEntryTimeSet == pdFALSE )
 800910c:	b916      	cbnz	r6, 8009114 <xQueueSemaphoreTake+0xce>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800910e:	a802      	add	r0, sp, #8
 8009110:	f000 fd80 	bl	8009c14 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009114:	f7ff fa82 	bl	800861c <vPortExitCritical>
		vTaskSuspendAll();
 8009118:	f000 fb06 	bl	8009728 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800911c:	f7ff fa5a 	bl	80085d4 <vPortEnterCritical>
 8009120:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009124:	2bff      	cmp	r3, #255	@ 0xff
 8009126:	d101      	bne.n	800912c <xQueueSemaphoreTake+0xe6>
 8009128:	f884 7044 	strb.w	r7, [r4, #68]	@ 0x44
 800912c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8009130:	2bff      	cmp	r3, #255	@ 0xff
 8009132:	d101      	bne.n	8009138 <xQueueSemaphoreTake+0xf2>
 8009134:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8009138:	f7ff fa70 	bl	800861c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800913c:	a901      	add	r1, sp, #4
 800913e:	a802      	add	r0, sp, #8
 8009140:	f000 fd74 	bl	8009c2c <xTaskCheckForTimeOut>
 8009144:	bb50      	cbnz	r0, 800919c <xQueueSemaphoreTake+0x156>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009146:	4620      	mov	r0, r4
 8009148:	f7ff fb72 	bl	8008830 <prvIsQueueEmpty>
 800914c:	b300      	cbz	r0, 8009190 <xQueueSemaphoreTake+0x14a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800914e:	6823      	ldr	r3, [r4, #0]
 8009150:	b93b      	cbnz	r3, 8009162 <xQueueSemaphoreTake+0x11c>
						taskENTER_CRITICAL();
 8009152:	f7ff fa3f 	bl	80085d4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009156:	68a0      	ldr	r0, [r4, #8]
 8009158:	f000 fdc4 	bl	8009ce4 <xTaskPriorityInherit>
 800915c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800915e:	f7ff fa5d 	bl	800861c <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009162:	9901      	ldr	r1, [sp, #4]
 8009164:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009168:	f000 fcd4 	bl	8009b14 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800916c:	4620      	mov	r0, r4
 800916e:	f7ff fbb2 	bl	80088d6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009172:	f000 fb7f 	bl	8009874 <xTaskResumeAll>
 8009176:	b948      	cbnz	r0, 800918c <xQueueSemaphoreTake+0x146>
					portYIELD_WITHIN_API();
 8009178:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800917c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009180:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009184:	f3bf 8f4f 	dsb	sy
 8009188:	f3bf 8f6f 	isb	sy
 800918c:	2601      	movs	r6, #1
 800918e:	e77d      	b.n	800908c <xQueueSemaphoreTake+0x46>
				prvUnlockQueue( pxQueue );
 8009190:	4620      	mov	r0, r4
 8009192:	f7ff fba0 	bl	80088d6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009196:	f000 fb6d 	bl	8009874 <xTaskResumeAll>
 800919a:	e7f7      	b.n	800918c <xQueueSemaphoreTake+0x146>
			prvUnlockQueue( pxQueue );
 800919c:	4620      	mov	r0, r4
 800919e:	f7ff fb9a 	bl	80088d6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80091a2:	f000 fb67 	bl	8009874 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80091a6:	4620      	mov	r0, r4
 80091a8:	f7ff fb42 	bl	8008830 <prvIsQueueEmpty>
 80091ac:	2800      	cmp	r0, #0
 80091ae:	d0ed      	beq.n	800918c <xQueueSemaphoreTake+0x146>
					if( xInheritanceOccurred != pdFALSE )
 80091b0:	b165      	cbz	r5, 80091cc <xQueueSemaphoreTake+0x186>
						taskENTER_CRITICAL();
 80091b2:	f7ff fa0f 	bl	80085d4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80091b6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80091b8:	b119      	cbz	r1, 80091c2 <xQueueSemaphoreTake+0x17c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80091ba:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80091bc:	6819      	ldr	r1, [r3, #0]
 80091be:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80091c2:	68a0      	ldr	r0, [r4, #8]
 80091c4:	f000 fe12 	bl	8009dec <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 80091c8:	f7ff fa28 	bl	800861c <vPortExitCritical>
					return errQUEUE_EMPTY;
 80091cc:	2000      	movs	r0, #0
 80091ce:	e77c      	b.n	80090ca <xQueueSemaphoreTake+0x84>

080091d0 <xQueueTakeMutexRecursive>:
	{
 80091d0:	b570      	push	{r4, r5, r6, lr}
 80091d2:	460d      	mov	r5, r1
		configASSERT( pxMutex );
 80091d4:	4604      	mov	r4, r0
 80091d6:	b950      	cbnz	r0, 80091ee <xQueueTakeMutexRecursive+0x1e>
 80091d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80091dc:	b672      	cpsid	i
 80091de:	f383 8811 	msr	BASEPRI, r3
 80091e2:	f3bf 8f6f 	isb	sy
 80091e6:	f3bf 8f4f 	dsb	sy
 80091ea:	b662      	cpsie	i
 80091ec:	e7fe      	b.n	80091ec <xQueueTakeMutexRecursive+0x1c>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 80091ee:	6886      	ldr	r6, [r0, #8]
 80091f0:	f000 fd62 	bl	8009cb8 <xTaskGetCurrentTaskHandle>
 80091f4:	4286      	cmp	r6, r0
 80091f6:	d104      	bne.n	8009202 <xQueueTakeMutexRecursive+0x32>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 80091f8:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
 80091fa:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 80091fc:	3301      	adds	r3, #1
 80091fe:	60e3      	str	r3, [r4, #12]
	}
 8009200:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 8009202:	4629      	mov	r1, r5
 8009204:	4620      	mov	r0, r4
 8009206:	f7ff ff1e 	bl	8009046 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
 800920a:	2800      	cmp	r0, #0
 800920c:	d0f8      	beq.n	8009200 <xQueueTakeMutexRecursive+0x30>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 800920e:	68e3      	ldr	r3, [r4, #12]
 8009210:	3301      	adds	r3, #1
 8009212:	60e3      	str	r3, [r4, #12]
 8009214:	e7f4      	b.n	8009200 <xQueueTakeMutexRecursive+0x30>

08009216 <xQueueReceiveFromISR>:
{
 8009216:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800921a:	4689      	mov	r9, r1
 800921c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800921e:	4604      	mov	r4, r0
 8009220:	b950      	cbnz	r0, 8009238 <xQueueReceiveFromISR+0x22>
 8009222:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009226:	b672      	cpsid	i
 8009228:	f383 8811 	msr	BASEPRI, r3
 800922c:	f3bf 8f6f 	isb	sy
 8009230:	f3bf 8f4f 	dsb	sy
 8009234:	b662      	cpsie	i
 8009236:	e7fe      	b.n	8009236 <xQueueReceiveFromISR+0x20>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009238:	b961      	cbnz	r1, 8009254 <xQueueReceiveFromISR+0x3e>
 800923a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800923c:	b153      	cbz	r3, 8009254 <xQueueReceiveFromISR+0x3e>
 800923e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009242:	b672      	cpsid	i
 8009244:	f383 8811 	msr	BASEPRI, r3
 8009248:	f3bf 8f6f 	isb	sy
 800924c:	f3bf 8f4f 	dsb	sy
 8009250:	b662      	cpsie	i
 8009252:	e7fe      	b.n	8009252 <xQueueReceiveFromISR+0x3c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009254:	f7ff faba 	bl	80087cc <vPortValidateInterruptPriority>
	__asm volatile
 8009258:	f3ef 8711 	mrs	r7, BASEPRI
 800925c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009260:	b672      	cpsid	i
 8009262:	f383 8811 	msr	BASEPRI, r3
 8009266:	f3bf 8f6f 	isb	sy
 800926a:	f3bf 8f4f 	dsb	sy
 800926e:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009270:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009272:	b30d      	cbz	r5, 80092b8 <xQueueReceiveFromISR+0xa2>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009274:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009278:	4649      	mov	r1, r9
 800927a:	4620      	mov	r0, r4
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800927c:	3d01      	subs	r5, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 800927e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009280:	f7ff fb14 	bl	80088ac <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009284:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 8009286:	1c73      	adds	r3, r6, #1
 8009288:	d111      	bne.n	80092ae <xQueueReceiveFromISR+0x98>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800928a:	6923      	ldr	r3, [r4, #16]
 800928c:	b153      	cbz	r3, 80092a4 <xQueueReceiveFromISR+0x8e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800928e:	f104 0010 	add.w	r0, r4, #16
 8009292:	f000 fc7b 	bl	8009b8c <xTaskRemoveFromEventList>
 8009296:	b128      	cbz	r0, 80092a4 <xQueueReceiveFromISR+0x8e>
						if( pxHigherPriorityTaskWoken != NULL )
 8009298:	f1b8 0f00 	cmp.w	r8, #0
 800929c:	d002      	beq.n	80092a4 <xQueueReceiveFromISR+0x8e>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800929e:	2301      	movs	r3, #1
 80092a0:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 80092a4:	2001      	movs	r0, #1
	__asm volatile
 80092a6:	f387 8811 	msr	BASEPRI, r7
}
 80092aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80092ae:	3601      	adds	r6, #1
 80092b0:	b276      	sxtb	r6, r6
 80092b2:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 80092b6:	e7f5      	b.n	80092a4 <xQueueReceiveFromISR+0x8e>
			xReturn = pdFAIL;
 80092b8:	4628      	mov	r0, r5
 80092ba:	e7f4      	b.n	80092a6 <xQueueReceiveFromISR+0x90>

080092bc <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80092bc:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80092be:	4a07      	ldr	r2, [pc, #28]	@ (80092dc <vQueueAddToRegistry+0x20>)
	{
 80092c0:	b530      	push	{r4, r5, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80092c2:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80092c6:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80092ca:	b91d      	cbnz	r5, 80092d4 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80092cc:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80092d0:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80092d2:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80092d4:	3301      	adds	r3, #1
 80092d6:	2b08      	cmp	r3, #8
 80092d8:	d1f3      	bne.n	80092c2 <vQueueAddToRegistry+0x6>
 80092da:	e7fa      	b.n	80092d2 <vQueueAddToRegistry+0x16>
 80092dc:	20014a38 	.word	0x20014a38

080092e0 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80092e0:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80092e2:	4a09      	ldr	r2, [pc, #36]	@ (8009308 <vQueueUnregisterQueue+0x28>)
	{
 80092e4:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80092e6:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 80092ea:	00dc      	lsls	r4, r3, #3
 80092ec:	4281      	cmp	r1, r0
 80092ee:	d106      	bne.n	80092fe <vQueueUnregisterQueue+0x1e>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80092f0:	4a06      	ldr	r2, [pc, #24]	@ (800930c <vQueueUnregisterQueue+0x2c>)
 80092f2:	2100      	movs	r1, #0
 80092f4:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80092f8:	4422      	add	r2, r4
 80092fa:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80092fc:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80092fe:	3301      	adds	r3, #1
 8009300:	2b08      	cmp	r3, #8
 8009302:	d1f0      	bne.n	80092e6 <vQueueUnregisterQueue+0x6>
 8009304:	e7fa      	b.n	80092fc <vQueueUnregisterQueue+0x1c>
 8009306:	bf00      	nop
 8009308:	20014a3c 	.word	0x20014a3c
 800930c:	20014a38 	.word	0x20014a38

08009310 <vQueueDelete>:
{
 8009310:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009312:	b950      	cbnz	r0, 800932a <vQueueDelete+0x1a>
	__asm volatile
 8009314:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009318:	b672      	cpsid	i
 800931a:	f383 8811 	msr	BASEPRI, r3
 800931e:	f3bf 8f6f 	isb	sy
 8009322:	f3bf 8f4f 	dsb	sy
 8009326:	b662      	cpsie	i
 8009328:	e7fe      	b.n	8009328 <vQueueDelete+0x18>
		vQueueUnregisterQueue( pxQueue );
 800932a:	f7ff ffd9 	bl	80092e0 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800932e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8009332:	b91b      	cbnz	r3, 800933c <vQueueDelete+0x2c>
}
 8009334:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009338:	f7ff b866 	b.w	8008408 <vPortFree>
}
 800933c:	bd10      	pop	{r4, pc}

0800933e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800933e:	b570      	push	{r4, r5, r6, lr}
 8009340:	4604      	mov	r4, r0
 8009342:	460d      	mov	r5, r1
 8009344:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009346:	f7ff f945 	bl	80085d4 <vPortEnterCritical>
 800934a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800934e:	2bff      	cmp	r3, #255	@ 0xff
 8009350:	d102      	bne.n	8009358 <vQueueWaitForMessageRestricted+0x1a>
 8009352:	2300      	movs	r3, #0
 8009354:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8009358:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800935c:	2bff      	cmp	r3, #255	@ 0xff
 800935e:	d102      	bne.n	8009366 <vQueueWaitForMessageRestricted+0x28>
 8009360:	2300      	movs	r3, #0
 8009362:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8009366:	f7ff f959 	bl	800861c <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800936a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800936c:	b92b      	cbnz	r3, 800937a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800936e:	4632      	mov	r2, r6
 8009370:	4629      	mov	r1, r5
 8009372:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009376:	f000 fbe9 	bl	8009b4c <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800937a:	4620      	mov	r0, r4
	}
 800937c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009380:	f7ff baa9 	b.w	80088d6 <prvUnlockQueue>

08009384 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009384:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009388:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800938a:	f7ff f923 	bl	80085d4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800938e:	4b2f      	ldr	r3, [pc, #188]	@ (800944c <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8009390:	4e2f      	ldr	r6, [pc, #188]	@ (8009450 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8009392:	681a      	ldr	r2, [r3, #0]
 8009394:	4f2f      	ldr	r7, [pc, #188]	@ (8009454 <prvAddNewTaskToReadyList+0xd0>)
 8009396:	3201      	adds	r2, #1
 8009398:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800939a:	6835      	ldr	r5, [r6, #0]
 800939c:	2d00      	cmp	r5, #0
 800939e:	d14a      	bne.n	8009436 <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80093a0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80093a2:	681b      	ldr	r3, [r3, #0]
 80093a4:	2b01      	cmp	r3, #1
 80093a6:	d11f      	bne.n	80093e8 <prvAddNewTaskToReadyList+0x64>
 80093a8:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80093aa:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80093ac:	4640      	mov	r0, r8
 80093ae:	f7ff f867 	bl	8008480 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80093b2:	f108 0814 	add.w	r8, r8, #20
 80093b6:	2d38      	cmp	r5, #56	@ 0x38
 80093b8:	d1f7      	bne.n	80093aa <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80093ba:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 800947c <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 80093be:	4d26      	ldr	r5, [pc, #152]	@ (8009458 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 80093c0:	4640      	mov	r0, r8
 80093c2:	f7ff f85d 	bl	8008480 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80093c6:	4628      	mov	r0, r5
 80093c8:	f7ff f85a 	bl	8008480 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80093cc:	4823      	ldr	r0, [pc, #140]	@ (800945c <prvAddNewTaskToReadyList+0xd8>)
 80093ce:	f7ff f857 	bl	8008480 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80093d2:	4823      	ldr	r0, [pc, #140]	@ (8009460 <prvAddNewTaskToReadyList+0xdc>)
 80093d4:	f7ff f854 	bl	8008480 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80093d8:	4822      	ldr	r0, [pc, #136]	@ (8009464 <prvAddNewTaskToReadyList+0xe0>)
 80093da:	f7ff f851 	bl	8008480 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80093de:	4b22      	ldr	r3, [pc, #136]	@ (8009468 <prvAddNewTaskToReadyList+0xe4>)
 80093e0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80093e4:	4b21      	ldr	r3, [pc, #132]	@ (800946c <prvAddNewTaskToReadyList+0xe8>)
 80093e6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80093e8:	4a21      	ldr	r2, [pc, #132]	@ (8009470 <prvAddNewTaskToReadyList+0xec>)
 80093ea:	6813      	ldr	r3, [r2, #0]
 80093ec:	3301      	adds	r3, #1
 80093ee:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80093f0:	4a20      	ldr	r2, [pc, #128]	@ (8009474 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80093f2:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80093f4:	6811      	ldr	r1, [r2, #0]
 80093f6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80093f8:	428b      	cmp	r3, r1
 80093fa:	d900      	bls.n	80093fe <prvAddNewTaskToReadyList+0x7a>
 80093fc:	6013      	str	r3, [r2, #0]
 80093fe:	2014      	movs	r0, #20
 8009400:	1d21      	adds	r1, r4, #4
 8009402:	fb00 7003 	mla	r0, r0, r3, r7
 8009406:	f7ff f849 	bl	800849c <vListInsertEnd>
	taskEXIT_CRITICAL();
 800940a:	f7ff f907 	bl	800861c <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800940e:	4b1a      	ldr	r3, [pc, #104]	@ (8009478 <prvAddNewTaskToReadyList+0xf4>)
 8009410:	681b      	ldr	r3, [r3, #0]
 8009412:	b173      	cbz	r3, 8009432 <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009414:	6833      	ldr	r3, [r6, #0]
 8009416:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009418:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800941a:	429a      	cmp	r2, r3
 800941c:	d209      	bcs.n	8009432 <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
 800941e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009422:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009426:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800942a:	f3bf 8f4f 	dsb	sy
 800942e:	f3bf 8f6f 	isb	sy
}
 8009432:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009436:	4b10      	ldr	r3, [pc, #64]	@ (8009478 <prvAddNewTaskToReadyList+0xf4>)
 8009438:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800943a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800943c:	2a00      	cmp	r2, #0
 800943e:	d1d3      	bne.n	80093e8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009440:	6832      	ldr	r2, [r6, #0]
 8009442:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009444:	429a      	cmp	r2, r3
 8009446:	d8cf      	bhi.n	80093e8 <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 8009448:	6034      	str	r4, [r6, #0]
 800944a:	e7cd      	b.n	80093e8 <prvAddNewTaskToReadyList+0x64>
 800944c:	20014a9c 	.word	0x20014a9c
 8009450:	20014f70 	.word	0x20014f70
 8009454:	20014b10 	.word	0x20014b10
 8009458:	20014ae8 	.word	0x20014ae8
 800945c:	20014acc 	.word	0x20014acc
 8009460:	20014ab8 	.word	0x20014ab8
 8009464:	20014aa0 	.word	0x20014aa0
 8009468:	20014ae4 	.word	0x20014ae4
 800946c:	20014ae0 	.word	0x20014ae0
 8009470:	20014a80 	.word	0x20014a80
 8009474:	20014a94 	.word	0x20014a94
 8009478:	20014a90 	.word	0x20014a90
 800947c:	20014afc 	.word	0x20014afc

08009480 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009482:	4b15      	ldr	r3, [pc, #84]	@ (80094d8 <prvAddCurrentTaskToDelayedList+0x58>)
{
 8009484:	4606      	mov	r6, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009486:	4d15      	ldr	r5, [pc, #84]	@ (80094dc <prvAddCurrentTaskToDelayedList+0x5c>)
{
 8009488:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 800948a:	681c      	ldr	r4, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800948c:	6828      	ldr	r0, [r5, #0]
 800948e:	3004      	adds	r0, #4
 8009490:	f7ff f826 	bl	80084e0 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009494:	1c73      	adds	r3, r6, #1
 8009496:	d107      	bne.n	80094a8 <prvAddCurrentTaskToDelayedList+0x28>
 8009498:	b137      	cbz	r7, 80094a8 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800949a:	6829      	ldr	r1, [r5, #0]
 800949c:	4810      	ldr	r0, [pc, #64]	@ (80094e0 <prvAddCurrentTaskToDelayedList+0x60>)
 800949e:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80094a0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094a4:	f7fe bffa 	b.w	800849c <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
 80094a8:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80094aa:	682b      	ldr	r3, [r5, #0]
 80094ac:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80094ae:	d307      	bcc.n	80094c0 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094b0:	4b0c      	ldr	r3, [pc, #48]	@ (80094e4 <prvAddCurrentTaskToDelayedList+0x64>)
 80094b2:	6818      	ldr	r0, [r3, #0]
 80094b4:	6829      	ldr	r1, [r5, #0]
}
 80094b6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094ba:	3104      	adds	r1, #4
 80094bc:	f7fe bff9 	b.w	80084b2 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094c0:	4b09      	ldr	r3, [pc, #36]	@ (80094e8 <prvAddCurrentTaskToDelayedList+0x68>)
 80094c2:	6818      	ldr	r0, [r3, #0]
 80094c4:	6829      	ldr	r1, [r5, #0]
 80094c6:	3104      	adds	r1, #4
 80094c8:	f7fe fff3 	bl	80084b2 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80094cc:	4b07      	ldr	r3, [pc, #28]	@ (80094ec <prvAddCurrentTaskToDelayedList+0x6c>)
 80094ce:	681a      	ldr	r2, [r3, #0]
 80094d0:	42a2      	cmp	r2, r4
 80094d2:	d900      	bls.n	80094d6 <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
 80094d4:	601c      	str	r4, [r3, #0]
}
 80094d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80094d8:	20014a98 	.word	0x20014a98
 80094dc:	20014f70 	.word	0x20014f70
 80094e0:	20014aa0 	.word	0x20014aa0
 80094e4:	20014ae0 	.word	0x20014ae0
 80094e8:	20014ae4 	.word	0x20014ae4
 80094ec:	20014a7c 	.word	0x20014a7c

080094f0 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80094f0:	4a06      	ldr	r2, [pc, #24]	@ (800950c <prvResetNextTaskUnblockTime+0x1c>)
 80094f2:	6813      	ldr	r3, [r2, #0]
 80094f4:	6819      	ldr	r1, [r3, #0]
 80094f6:	4b06      	ldr	r3, [pc, #24]	@ (8009510 <prvResetNextTaskUnblockTime+0x20>)
 80094f8:	b919      	cbnz	r1, 8009502 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80094fa:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80094fe:	601a      	str	r2, [r3, #0]
}
 8009500:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009502:	6812      	ldr	r2, [r2, #0]
 8009504:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009506:	68d2      	ldr	r2, [r2, #12]
 8009508:	6852      	ldr	r2, [r2, #4]
 800950a:	e7f8      	b.n	80094fe <prvResetNextTaskUnblockTime+0xe>
 800950c:	20014ae4 	.word	0x20014ae4
 8009510:	20014a7c 	.word	0x20014a7c

08009514 <prvDeleteTCB>:
	{
 8009514:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009516:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 800951a:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800951c:	b93b      	cbnz	r3, 800952e <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800951e:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8009520:	f7fe ff72 	bl	8008408 <vPortFree>
				vPortFree( pxTCB );
 8009524:	4620      	mov	r0, r4
	}
 8009526:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800952a:	f7fe bf6d 	b.w	8008408 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800952e:	2b01      	cmp	r3, #1
 8009530:	d0f9      	beq.n	8009526 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009532:	2b02      	cmp	r3, #2
 8009534:	d00a      	beq.n	800954c <prvDeleteTCB+0x38>
 8009536:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800953a:	b672      	cpsid	i
 800953c:	f383 8811 	msr	BASEPRI, r3
 8009540:	f3bf 8f6f 	isb	sy
 8009544:	f3bf 8f4f 	dsb	sy
 8009548:	b662      	cpsie	i
 800954a:	e7fe      	b.n	800954a <prvDeleteTCB+0x36>
	}
 800954c:	bd10      	pop	{r4, pc}
	...

08009550 <prvIdleTask>:
{
 8009550:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009552:	4c14      	ldr	r4, [pc, #80]	@ (80095a4 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009554:	4f14      	ldr	r7, [pc, #80]	@ (80095a8 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8009556:	4d15      	ldr	r5, [pc, #84]	@ (80095ac <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009558:	6823      	ldr	r3, [r4, #0]
 800955a:	b983      	cbnz	r3, 800957e <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800955c:	4b14      	ldr	r3, [pc, #80]	@ (80095b0 <prvIdleTask+0x60>)
 800955e:	681b      	ldr	r3, [r3, #0]
 8009560:	2b01      	cmp	r3, #1
 8009562:	d909      	bls.n	8009578 <prvIdleTask+0x28>
				taskYIELD();
 8009564:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009568:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800956c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009570:	f3bf 8f4f 	dsb	sy
 8009574:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8009578:	f7f7 f812 	bl	80005a0 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800957c:	e7eb      	b.n	8009556 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800957e:	f7ff f829 	bl	80085d4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009582:	68fb      	ldr	r3, [r7, #12]
 8009584:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009586:	1d30      	adds	r0, r6, #4
 8009588:	f7fe ffaa 	bl	80084e0 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800958c:	682b      	ldr	r3, [r5, #0]
 800958e:	3b01      	subs	r3, #1
 8009590:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009592:	6823      	ldr	r3, [r4, #0]
 8009594:	3b01      	subs	r3, #1
 8009596:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009598:	f7ff f840 	bl	800861c <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800959c:	4630      	mov	r0, r6
 800959e:	f7ff ffb9 	bl	8009514 <prvDeleteTCB>
 80095a2:	e7d9      	b.n	8009558 <prvIdleTask+0x8>
 80095a4:	20014ab4 	.word	0x20014ab4
 80095a8:	20014ab8 	.word	0x20014ab8
 80095ac:	20014a9c 	.word	0x20014a9c
 80095b0:	20014b10 	.word	0x20014b10

080095b4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80095b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80095b8:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80095ba:	4607      	mov	r7, r0
 80095bc:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80095be:	21a5      	movs	r1, #165	@ 0xa5
 80095c0:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80095c2:	4698      	mov	r8, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80095c4:	3e04      	subs	r6, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80095c6:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80095ca:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80095cc:	f015 fb4e 	bl	801ec6c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80095d0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80095d2:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80095d4:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 80095d8:	b3b5      	cbz	r5, 8009648 <prvInitialiseNewTask.constprop.0+0x94>
 80095da:	1e6b      	subs	r3, r5, #1
 80095dc:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 80095e0:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80095e2:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80095e6:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 80095ea:	b109      	cbz	r1, 80095f0 <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80095ec:	42ab      	cmp	r3, r5
 80095ee:	d1f8      	bne.n	80095e2 <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80095f0:	2300      	movs	r3, #0
 80095f2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80095f6:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 80095f8:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80095fc:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80095fe:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009600:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009604:	bf28      	it	cs
 8009606:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
 8009608:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800960a:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800960c:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009610:	f7fe ff41 	bl	8008496 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009614:	f104 0018 	add.w	r0, r4, #24
 8009618:	f7fe ff3d 	bl	8008496 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800961c:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009620:	4642      	mov	r2, r8
 8009622:	4639      	mov	r1, r7
 8009624:	4630      	mov	r0, r6
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009626:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009628:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800962a:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 800962c:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009630:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009634:	f7fe ffa6 	bl	8008584 <pxPortInitialiseStack>
 8009638:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800963a:	f1b9 0f00 	cmp.w	r9, #0
 800963e:	d001      	beq.n	8009644 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009640:	f8c9 4000 	str.w	r4, [r9]
}
 8009644:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009648:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 800964c:	e7d3      	b.n	80095f6 <prvInitialiseNewTask.constprop.0+0x42>

0800964e <xTaskCreateStatic>:
	{
 800964e:	b570      	push	{r4, r5, r6, lr}
 8009650:	b086      	sub	sp, #24
 8009652:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009656:	b955      	cbnz	r5, 800966e <xTaskCreateStatic+0x20>
 8009658:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800965c:	b672      	cpsid	i
 800965e:	f383 8811 	msr	BASEPRI, r3
 8009662:	f3bf 8f6f 	isb	sy
 8009666:	f3bf 8f4f 	dsb	sy
 800966a:	b662      	cpsie	i
 800966c:	e7fe      	b.n	800966c <xTaskCreateStatic+0x1e>
		configASSERT( pxTaskBuffer != NULL );
 800966e:	b954      	cbnz	r4, 8009686 <xTaskCreateStatic+0x38>
 8009670:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009674:	b672      	cpsid	i
 8009676:	f383 8811 	msr	BASEPRI, r3
 800967a:	f3bf 8f6f 	isb	sy
 800967e:	f3bf 8f4f 	dsb	sy
 8009682:	b662      	cpsie	i
 8009684:	e7fe      	b.n	8009684 <xTaskCreateStatic+0x36>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009686:	2660      	movs	r6, #96	@ 0x60
 8009688:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800968a:	9e05      	ldr	r6, [sp, #20]
 800968c:	2e60      	cmp	r6, #96	@ 0x60
 800968e:	d00a      	beq.n	80096a6 <xTaskCreateStatic+0x58>
 8009690:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009694:	b672      	cpsid	i
 8009696:	f383 8811 	msr	BASEPRI, r3
 800969a:	f3bf 8f6f 	isb	sy
 800969e:	f3bf 8f4f 	dsb	sy
 80096a2:	b662      	cpsie	i
 80096a4:	e7fe      	b.n	80096a4 <xTaskCreateStatic+0x56>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80096a6:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80096a8:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80096aa:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80096ac:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80096b0:	ad04      	add	r5, sp, #16
 80096b2:	9402      	str	r4, [sp, #8]
 80096b4:	9501      	str	r5, [sp, #4]
 80096b6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80096b8:	9500      	str	r5, [sp, #0]
 80096ba:	f7ff ff7b 	bl	80095b4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80096be:	4620      	mov	r0, r4
 80096c0:	f7ff fe60 	bl	8009384 <prvAddNewTaskToReadyList>
	}
 80096c4:	9804      	ldr	r0, [sp, #16]
 80096c6:	b006      	add	sp, #24
 80096c8:	bd70      	pop	{r4, r5, r6, pc}

080096ca <xTaskCreate>:
	{
 80096ca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80096ce:	4607      	mov	r7, r0
 80096d0:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80096d2:	0090      	lsls	r0, r2, #2
	{
 80096d4:	4688      	mov	r8, r1
 80096d6:	4616      	mov	r6, r2
 80096d8:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80096da:	f7fe fdff 	bl	80082dc <pvPortMalloc>
			if( pxStack != NULL )
 80096de:	4605      	mov	r5, r0
 80096e0:	b920      	cbnz	r0, 80096ec <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80096e2:	f04f 30ff 	mov.w	r0, #4294967295
	}
 80096e6:	b005      	add	sp, #20
 80096e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80096ec:	2060      	movs	r0, #96	@ 0x60
 80096ee:	f7fe fdf5 	bl	80082dc <pvPortMalloc>
				if( pxNewTCB != NULL )
 80096f2:	4604      	mov	r4, r0
 80096f4:	b198      	cbz	r0, 800971e <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80096f6:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 80096f8:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80096fa:	4632      	mov	r2, r6
 80096fc:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80096fe:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009702:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009704:	9002      	str	r0, [sp, #8]
 8009706:	4638      	mov	r0, r7
 8009708:	9301      	str	r3, [sp, #4]
 800970a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800970c:	9300      	str	r3, [sp, #0]
 800970e:	464b      	mov	r3, r9
 8009710:	f7ff ff50 	bl	80095b4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009714:	4620      	mov	r0, r4
 8009716:	f7ff fe35 	bl	8009384 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800971a:	2001      	movs	r0, #1
 800971c:	e7e3      	b.n	80096e6 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 800971e:	4628      	mov	r0, r5
 8009720:	f7fe fe72 	bl	8008408 <vPortFree>
		if( pxNewTCB != NULL )
 8009724:	e7dd      	b.n	80096e2 <xTaskCreate+0x18>
	...

08009728 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009728:	4a02      	ldr	r2, [pc, #8]	@ (8009734 <vTaskSuspendAll+0xc>)
 800972a:	6813      	ldr	r3, [r2, #0]
 800972c:	3301      	adds	r3, #1
 800972e:	6013      	str	r3, [r2, #0]
}
 8009730:	4770      	bx	lr
 8009732:	bf00      	nop
 8009734:	20014a78 	.word	0x20014a78

08009738 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009738:	4b01      	ldr	r3, [pc, #4]	@ (8009740 <xTaskGetTickCount+0x8>)
 800973a:	6818      	ldr	r0, [r3, #0]
}
 800973c:	4770      	bx	lr
 800973e:	bf00      	nop
 8009740:	20014a98 	.word	0x20014a98

08009744 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009744:	4b40      	ldr	r3, [pc, #256]	@ (8009848 <xTaskIncrementTick+0x104>)
 8009746:	681b      	ldr	r3, [r3, #0]
{
 8009748:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800974c:	2b00      	cmp	r3, #0
 800974e:	d173      	bne.n	8009838 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009750:	4b3e      	ldr	r3, [pc, #248]	@ (800984c <xTaskIncrementTick+0x108>)
 8009752:	681c      	ldr	r4, [r3, #0]
 8009754:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8009756:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009758:	b9cc      	cbnz	r4, 800978e <xTaskIncrementTick+0x4a>
			taskSWITCH_DELAYED_LISTS();
 800975a:	4b3d      	ldr	r3, [pc, #244]	@ (8009850 <xTaskIncrementTick+0x10c>)
 800975c:	681a      	ldr	r2, [r3, #0]
 800975e:	6812      	ldr	r2, [r2, #0]
 8009760:	b152      	cbz	r2, 8009778 <xTaskIncrementTick+0x34>
 8009762:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009766:	b672      	cpsid	i
 8009768:	f383 8811 	msr	BASEPRI, r3
 800976c:	f3bf 8f6f 	isb	sy
 8009770:	f3bf 8f4f 	dsb	sy
 8009774:	b662      	cpsie	i
 8009776:	e7fe      	b.n	8009776 <xTaskIncrementTick+0x32>
 8009778:	4a36      	ldr	r2, [pc, #216]	@ (8009854 <xTaskIncrementTick+0x110>)
 800977a:	6819      	ldr	r1, [r3, #0]
 800977c:	6810      	ldr	r0, [r2, #0]
 800977e:	6018      	str	r0, [r3, #0]
 8009780:	6011      	str	r1, [r2, #0]
 8009782:	4a35      	ldr	r2, [pc, #212]	@ (8009858 <xTaskIncrementTick+0x114>)
 8009784:	6813      	ldr	r3, [r2, #0]
 8009786:	3301      	adds	r3, #1
 8009788:	6013      	str	r3, [r2, #0]
 800978a:	f7ff feb1 	bl	80094f0 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800978e:	4d33      	ldr	r5, [pc, #204]	@ (800985c <xTaskIncrementTick+0x118>)
BaseType_t xSwitchRequired = pdFALSE;
 8009790:	f04f 0b00 	mov.w	fp, #0
 8009794:	4e32      	ldr	r6, [pc, #200]	@ (8009860 <xTaskIncrementTick+0x11c>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009796:	682b      	ldr	r3, [r5, #0]
 8009798:	4f32      	ldr	r7, [pc, #200]	@ (8009864 <xTaskIncrementTick+0x120>)
 800979a:	42a3      	cmp	r3, r4
 800979c:	d911      	bls.n	80097c2 <xTaskIncrementTick+0x7e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800979e:	683a      	ldr	r2, [r7, #0]
 80097a0:	2114      	movs	r1, #20
 80097a2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80097a4:	434a      	muls	r2, r1
 80097a6:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 80097a8:	2a02      	cmp	r2, #2
 80097aa:	bf28      	it	cs
 80097ac:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 80097b0:	4a2d      	ldr	r2, [pc, #180]	@ (8009868 <xTaskIncrementTick+0x124>)
 80097b2:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 80097b4:	2a00      	cmp	r2, #0
}
 80097b6:	bf0c      	ite	eq
 80097b8:	4658      	moveq	r0, fp
 80097ba:	2001      	movne	r0, #1
 80097bc:	b003      	add	sp, #12
 80097be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80097c2:	f8df 908c 	ldr.w	r9, [pc, #140]	@ 8009850 <xTaskIncrementTick+0x10c>
					prvAddTaskToReadyList( pxTCB );
 80097c6:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 8009870 <xTaskIncrementTick+0x12c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80097ca:	f8d9 2000 	ldr.w	r2, [r9]
 80097ce:	6812      	ldr	r2, [r2, #0]
 80097d0:	b91a      	cbnz	r2, 80097da <xTaskIncrementTick+0x96>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80097d2:	f04f 32ff 	mov.w	r2, #4294967295
 80097d6:	602a      	str	r2, [r5, #0]
					break;
 80097d8:	e7e1      	b.n	800979e <xTaskIncrementTick+0x5a>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80097da:	f8d9 2000 	ldr.w	r2, [r9]
 80097de:	68d2      	ldr	r2, [r2, #12]
 80097e0:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80097e4:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 80097e8:	428c      	cmp	r4, r1
 80097ea:	d201      	bcs.n	80097f0 <xTaskIncrementTick+0xac>
						xNextTaskUnblockTime = xItemValue;
 80097ec:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80097ee:	e7d6      	b.n	800979e <xTaskIncrementTick+0x5a>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80097f0:	f108 0304 	add.w	r3, r8, #4
 80097f4:	4618      	mov	r0, r3
 80097f6:	9301      	str	r3, [sp, #4]
 80097f8:	f7fe fe72 	bl	80084e0 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80097fc:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8009800:	b119      	cbz	r1, 800980a <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009802:	f108 0018 	add.w	r0, r8, #24
 8009806:	f7fe fe6b 	bl	80084e0 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800980a:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 800980e:	f8da 1000 	ldr.w	r1, [sl]
 8009812:	4288      	cmp	r0, r1
 8009814:	d901      	bls.n	800981a <xTaskIncrementTick+0xd6>
 8009816:	f8ca 0000 	str.w	r0, [sl]
 800981a:	2314      	movs	r3, #20
 800981c:	9901      	ldr	r1, [sp, #4]
 800981e:	fb03 6000 	mla	r0, r3, r0, r6
 8009822:	f7fe fe3b 	bl	800849c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009826:	6838      	ldr	r0, [r7, #0]
 8009828:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800982c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 800982e:	4291      	cmp	r1, r2
 8009830:	bf28      	it	cs
 8009832:	f04f 0b01 	movcs.w	fp, #1
 8009836:	e7c8      	b.n	80097ca <xTaskIncrementTick+0x86>
		++uxPendedTicks;
 8009838:	4a0c      	ldr	r2, [pc, #48]	@ (800986c <xTaskIncrementTick+0x128>)
BaseType_t xSwitchRequired = pdFALSE;
 800983a:	f04f 0b00 	mov.w	fp, #0
		++uxPendedTicks;
 800983e:	6813      	ldr	r3, [r2, #0]
 8009840:	3301      	adds	r3, #1
 8009842:	6013      	str	r3, [r2, #0]
 8009844:	e7b4      	b.n	80097b0 <xTaskIncrementTick+0x6c>
 8009846:	bf00      	nop
 8009848:	20014a78 	.word	0x20014a78
 800984c:	20014a98 	.word	0x20014a98
 8009850:	20014ae4 	.word	0x20014ae4
 8009854:	20014ae0 	.word	0x20014ae0
 8009858:	20014a84 	.word	0x20014a84
 800985c:	20014a7c 	.word	0x20014a7c
 8009860:	20014b10 	.word	0x20014b10
 8009864:	20014f70 	.word	0x20014f70
 8009868:	20014a88 	.word	0x20014a88
 800986c:	20014a8c 	.word	0x20014a8c
 8009870:	20014a94 	.word	0x20014a94

08009874 <xTaskResumeAll>:
{
 8009874:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8009878:	4c31      	ldr	r4, [pc, #196]	@ (8009940 <xTaskResumeAll+0xcc>)
 800987a:	6823      	ldr	r3, [r4, #0]
 800987c:	b953      	cbnz	r3, 8009894 <xTaskResumeAll+0x20>
 800987e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009882:	b672      	cpsid	i
 8009884:	f383 8811 	msr	BASEPRI, r3
 8009888:	f3bf 8f6f 	isb	sy
 800988c:	f3bf 8f4f 	dsb	sy
 8009890:	b662      	cpsie	i
 8009892:	e7fe      	b.n	8009892 <xTaskResumeAll+0x1e>
	taskENTER_CRITICAL();
 8009894:	f7fe fe9e 	bl	80085d4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009898:	6823      	ldr	r3, [r4, #0]
 800989a:	3b01      	subs	r3, #1
 800989c:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800989e:	6824      	ldr	r4, [r4, #0]
 80098a0:	b12c      	cbz	r4, 80098ae <xTaskResumeAll+0x3a>
BaseType_t xAlreadyYielded = pdFALSE;
 80098a2:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80098a4:	f7fe feba 	bl	800861c <vPortExitCritical>
}
 80098a8:	4620      	mov	r0, r4
 80098aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80098ae:	4b25      	ldr	r3, [pc, #148]	@ (8009944 <xTaskResumeAll+0xd0>)
 80098b0:	681b      	ldr	r3, [r3, #0]
 80098b2:	2b00      	cmp	r3, #0
 80098b4:	d0f5      	beq.n	80098a2 <xTaskResumeAll+0x2e>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80098b6:	4d24      	ldr	r5, [pc, #144]	@ (8009948 <xTaskResumeAll+0xd4>)
					prvAddTaskToReadyList( pxTCB );
 80098b8:	4e24      	ldr	r6, [pc, #144]	@ (800994c <xTaskResumeAll+0xd8>)
 80098ba:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800995c <xTaskResumeAll+0xe8>
 80098be:	e01d      	b.n	80098fc <xTaskResumeAll+0x88>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80098c0:	68eb      	ldr	r3, [r5, #12]
 80098c2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80098c4:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80098c6:	f104 0018 	add.w	r0, r4, #24
 80098ca:	f7fe fe09 	bl	80084e0 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80098ce:	4638      	mov	r0, r7
 80098d0:	f7fe fe06 	bl	80084e0 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80098d4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80098d6:	6832      	ldr	r2, [r6, #0]
 80098d8:	4293      	cmp	r3, r2
 80098da:	d900      	bls.n	80098de <xTaskResumeAll+0x6a>
 80098dc:	6033      	str	r3, [r6, #0]
 80098de:	2014      	movs	r0, #20
 80098e0:	4639      	mov	r1, r7
 80098e2:	fb00 8003 	mla	r0, r0, r3, r8
 80098e6:	f7fe fdd9 	bl	800849c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80098ea:	4b19      	ldr	r3, [pc, #100]	@ (8009950 <xTaskResumeAll+0xdc>)
 80098ec:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80098ee:	681b      	ldr	r3, [r3, #0]
 80098f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80098f2:	429a      	cmp	r2, r3
 80098f4:	d302      	bcc.n	80098fc <xTaskResumeAll+0x88>
						xYieldPending = pdTRUE;
 80098f6:	4b17      	ldr	r3, [pc, #92]	@ (8009954 <xTaskResumeAll+0xe0>)
 80098f8:	2201      	movs	r2, #1
 80098fa:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80098fc:	682b      	ldr	r3, [r5, #0]
 80098fe:	2b00      	cmp	r3, #0
 8009900:	d1de      	bne.n	80098c0 <xTaskResumeAll+0x4c>
				if( pxTCB != NULL )
 8009902:	b10c      	cbz	r4, 8009908 <xTaskResumeAll+0x94>
					prvResetNextTaskUnblockTime();
 8009904:	f7ff fdf4 	bl	80094f0 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009908:	4d13      	ldr	r5, [pc, #76]	@ (8009958 <xTaskResumeAll+0xe4>)
 800990a:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800990c:	b144      	cbz	r4, 8009920 <xTaskResumeAll+0xac>
								xYieldPending = pdTRUE;
 800990e:	4e11      	ldr	r6, [pc, #68]	@ (8009954 <xTaskResumeAll+0xe0>)
 8009910:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009912:	f7ff ff17 	bl	8009744 <xTaskIncrementTick>
 8009916:	b100      	cbz	r0, 800991a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009918:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800991a:	3c01      	subs	r4, #1
 800991c:	d1f9      	bne.n	8009912 <xTaskResumeAll+0x9e>
						uxPendedTicks = 0;
 800991e:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009920:	4b0c      	ldr	r3, [pc, #48]	@ (8009954 <xTaskResumeAll+0xe0>)
 8009922:	681b      	ldr	r3, [r3, #0]
 8009924:	2b00      	cmp	r3, #0
 8009926:	d0bc      	beq.n	80098a2 <xTaskResumeAll+0x2e>
					taskYIELD_IF_USING_PREEMPTION();
 8009928:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800992c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009930:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009934:	f3bf 8f4f 	dsb	sy
 8009938:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800993c:	2401      	movs	r4, #1
 800993e:	e7b1      	b.n	80098a4 <xTaskResumeAll+0x30>
 8009940:	20014a78 	.word	0x20014a78
 8009944:	20014a9c 	.word	0x20014a9c
 8009948:	20014acc 	.word	0x20014acc
 800994c:	20014a94 	.word	0x20014a94
 8009950:	20014f70 	.word	0x20014f70
 8009954:	20014a88 	.word	0x20014a88
 8009958:	20014a8c 	.word	0x20014a8c
 800995c:	20014b10 	.word	0x20014b10

08009960 <vTaskDelay>:
	{
 8009960:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009962:	b950      	cbnz	r0, 800997a <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009964:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009968:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800996c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009970:	f3bf 8f4f 	dsb	sy
 8009974:	f3bf 8f6f 	isb	sy
	}
 8009978:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800997a:	4b0b      	ldr	r3, [pc, #44]	@ (80099a8 <vTaskDelay+0x48>)
 800997c:	6819      	ldr	r1, [r3, #0]
 800997e:	b151      	cbz	r1, 8009996 <vTaskDelay+0x36>
 8009980:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009984:	b672      	cpsid	i
 8009986:	f383 8811 	msr	BASEPRI, r3
 800998a:	f3bf 8f6f 	isb	sy
 800998e:	f3bf 8f4f 	dsb	sy
 8009992:	b662      	cpsie	i
 8009994:	e7fe      	b.n	8009994 <vTaskDelay+0x34>
			vTaskSuspendAll();
 8009996:	f7ff fec7 	bl	8009728 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800999a:	f7ff fd71 	bl	8009480 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800999e:	f7ff ff69 	bl	8009874 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 80099a2:	2800      	cmp	r0, #0
 80099a4:	d0de      	beq.n	8009964 <vTaskDelay+0x4>
 80099a6:	e7e7      	b.n	8009978 <vTaskDelay+0x18>
 80099a8:	20014a78 	.word	0x20014a78

080099ac <vTaskSetApplicationTaskTag>:
	{
 80099ac:	b538      	push	{r3, r4, r5, lr}
 80099ae:	460d      	mov	r5, r1
		if( xTask == NULL )
 80099b0:	4604      	mov	r4, r0
 80099b2:	b908      	cbnz	r0, 80099b8 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 80099b4:	4b04      	ldr	r3, [pc, #16]	@ (80099c8 <vTaskSetApplicationTaskTag+0x1c>)
 80099b6:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 80099b8:	f7fe fe0c 	bl	80085d4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 80099bc:	6565      	str	r5, [r4, #84]	@ 0x54
	}
 80099be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 80099c2:	f7fe be2b 	b.w	800861c <vPortExitCritical>
 80099c6:	bf00      	nop
 80099c8:	20014f70 	.word	0x20014f70

080099cc <xTaskCallApplicationTaskHook>:
	{
 80099cc:	4603      	mov	r3, r0
 80099ce:	4608      	mov	r0, r1
		if( xTask == NULL )
 80099d0:	b90b      	cbnz	r3, 80099d6 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 80099d2:	4b03      	ldr	r3, [pc, #12]	@ (80099e0 <xTaskCallApplicationTaskHook+0x14>)
 80099d4:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 80099d6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80099d8:	b103      	cbz	r3, 80099dc <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 80099da:	4718      	bx	r3
	}
 80099dc:	4618      	mov	r0, r3
 80099de:	4770      	bx	lr
 80099e0:	20014f70 	.word	0x20014f70

080099e4 <vTaskStartScheduler>:
{
 80099e4:	b510      	push	{r4, lr}
 80099e6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80099e8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80099ea:	aa07      	add	r2, sp, #28
 80099ec:	a906      	add	r1, sp, #24
 80099ee:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80099f0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80099f4:	f7fe fc34 	bl	8008260 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80099f8:	9b05      	ldr	r3, [sp, #20]
 80099fa:	9a07      	ldr	r2, [sp, #28]
 80099fc:	9302      	str	r3, [sp, #8]
 80099fe:	9b06      	ldr	r3, [sp, #24]
 8009a00:	491b      	ldr	r1, [pc, #108]	@ (8009a70 <vTaskStartScheduler+0x8c>)
 8009a02:	481c      	ldr	r0, [pc, #112]	@ (8009a74 <vTaskStartScheduler+0x90>)
 8009a04:	e9cd 4300 	strd	r4, r3, [sp]
 8009a08:	4623      	mov	r3, r4
 8009a0a:	f7ff fe20 	bl	800964e <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009a0e:	b360      	cbz	r0, 8009a6a <vTaskStartScheduler+0x86>
			xReturn = xTimerCreateTimerTask();
 8009a10:	f000 fa9c 	bl	8009f4c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009a14:	2801      	cmp	r0, #1
 8009a16:	d11b      	bne.n	8009a50 <vTaskStartScheduler+0x6c>
 8009a18:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a1c:	b672      	cpsid	i
 8009a1e:	f383 8811 	msr	BASEPRI, r3
 8009a22:	f3bf 8f6f 	isb	sy
 8009a26:	f3bf 8f4f 	dsb	sy
 8009a2a:	b662      	cpsie	i
		xNextTaskUnblockTime = portMAX_DELAY;
 8009a2c:	f04f 32ff 	mov.w	r2, #4294967295
 8009a30:	4b11      	ldr	r3, [pc, #68]	@ (8009a78 <vTaskStartScheduler+0x94>)
		traceTASK_SWITCHED_IN();
 8009a32:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
 8009a34:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009a36:	4b11      	ldr	r3, [pc, #68]	@ (8009a7c <vTaskStartScheduler+0x98>)
 8009a38:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009a3a:	4b11      	ldr	r3, [pc, #68]	@ (8009a80 <vTaskStartScheduler+0x9c>)
 8009a3c:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8009a3e:	4b11      	ldr	r3, [pc, #68]	@ (8009a84 <vTaskStartScheduler+0xa0>)
 8009a40:	6818      	ldr	r0, [r3, #0]
 8009a42:	f7ff ffc3 	bl	80099cc <xTaskCallApplicationTaskHook>
}
 8009a46:	b008      	add	sp, #32
 8009a48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009a4c:	f7fe be5c 	b.w	8008708 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009a50:	3001      	adds	r0, #1
 8009a52:	d10a      	bne.n	8009a6a <vTaskStartScheduler+0x86>
 8009a54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a58:	b672      	cpsid	i
 8009a5a:	f383 8811 	msr	BASEPRI, r3
 8009a5e:	f3bf 8f6f 	isb	sy
 8009a62:	f3bf 8f4f 	dsb	sy
 8009a66:	b662      	cpsie	i
 8009a68:	e7fe      	b.n	8009a68 <vTaskStartScheduler+0x84>
}
 8009a6a:	b008      	add	sp, #32
 8009a6c:	bd10      	pop	{r4, pc}
 8009a6e:	bf00      	nop
 8009a70:	08020e5c 	.word	0x08020e5c
 8009a74:	08009551 	.word	0x08009551
 8009a78:	20014a7c 	.word	0x20014a7c
 8009a7c:	20014a90 	.word	0x20014a90
 8009a80:	20014a98 	.word	0x20014a98
 8009a84:	20014f70 	.word	0x20014f70

08009a88 <vTaskSwitchContext>:
{
 8009a88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009a8a:	4b1d      	ldr	r3, [pc, #116]	@ (8009b00 <vTaskSwitchContext+0x78>)
 8009a8c:	681a      	ldr	r2, [r3, #0]
 8009a8e:	4b1d      	ldr	r3, [pc, #116]	@ (8009b04 <vTaskSwitchContext+0x7c>)
 8009a90:	b112      	cbz	r2, 8009a98 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009a92:	2201      	movs	r2, #1
 8009a94:	601a      	str	r2, [r3, #0]
}
 8009a96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8009a98:	4c1b      	ldr	r4, [pc, #108]	@ (8009b08 <vTaskSwitchContext+0x80>)
 8009a9a:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a9c:	4e1b      	ldr	r6, [pc, #108]	@ (8009b0c <vTaskSwitchContext+0x84>)
 8009a9e:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
 8009aa0:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 8009aa2:	6820      	ldr	r0, [r4, #0]
 8009aa4:	f7ff ff92 	bl	80099cc <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009aa8:	6832      	ldr	r2, [r6, #0]
 8009aaa:	4919      	ldr	r1, [pc, #100]	@ (8009b10 <vTaskSwitchContext+0x88>)
 8009aac:	fb07 f302 	mul.w	r3, r7, r2
 8009ab0:	58cd      	ldr	r5, [r1, r3]
 8009ab2:	18c8      	adds	r0, r1, r3
 8009ab4:	b1ad      	cbz	r5, 8009ae2 <vTaskSwitchContext+0x5a>
 8009ab6:	6845      	ldr	r5, [r0, #4]
 8009ab8:	3308      	adds	r3, #8
 8009aba:	686d      	ldr	r5, [r5, #4]
 8009abc:	440b      	add	r3, r1
 8009abe:	429d      	cmp	r5, r3
 8009ac0:	6045      	str	r5, [r0, #4]
 8009ac2:	bf04      	itt	eq
 8009ac4:	686b      	ldreq	r3, [r5, #4]
 8009ac6:	6043      	streq	r3, [r0, #4]
 8009ac8:	2314      	movs	r3, #20
 8009aca:	fb03 1102 	mla	r1, r3, r2, r1
 8009ace:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
 8009ad0:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ad2:	68db      	ldr	r3, [r3, #12]
 8009ad4:	6023      	str	r3, [r4, #0]
 8009ad6:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 8009ad8:	6820      	ldr	r0, [r4, #0]
}
 8009ada:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 8009ade:	f7ff bf75 	b.w	80099cc <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ae2:	b952      	cbnz	r2, 8009afa <vTaskSwitchContext+0x72>
 8009ae4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ae8:	b672      	cpsid	i
 8009aea:	f383 8811 	msr	BASEPRI, r3
 8009aee:	f3bf 8f6f 	isb	sy
 8009af2:	f3bf 8f4f 	dsb	sy
 8009af6:	b662      	cpsie	i
 8009af8:	e7fe      	b.n	8009af8 <vTaskSwitchContext+0x70>
 8009afa:	3a01      	subs	r2, #1
 8009afc:	e7d6      	b.n	8009aac <vTaskSwitchContext+0x24>
 8009afe:	bf00      	nop
 8009b00:	20014a78 	.word	0x20014a78
 8009b04:	20014a88 	.word	0x20014a88
 8009b08:	20014f70 	.word	0x20014f70
 8009b0c:	20014a94 	.word	0x20014a94
 8009b10:	20014b10 	.word	0x20014b10

08009b14 <vTaskPlaceOnEventList>:
{
 8009b14:	b510      	push	{r4, lr}
 8009b16:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009b18:	b950      	cbnz	r0, 8009b30 <vTaskPlaceOnEventList+0x1c>
 8009b1a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009b1e:	b672      	cpsid	i
 8009b20:	f383 8811 	msr	BASEPRI, r3
 8009b24:	f3bf 8f6f 	isb	sy
 8009b28:	f3bf 8f4f 	dsb	sy
 8009b2c:	b662      	cpsie	i
 8009b2e:	e7fe      	b.n	8009b2e <vTaskPlaceOnEventList+0x1a>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009b30:	4b05      	ldr	r3, [pc, #20]	@ (8009b48 <vTaskPlaceOnEventList+0x34>)
 8009b32:	6819      	ldr	r1, [r3, #0]
 8009b34:	3118      	adds	r1, #24
 8009b36:	f7fe fcbc 	bl	80084b2 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009b3a:	4620      	mov	r0, r4
 8009b3c:	2101      	movs	r1, #1
}
 8009b3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009b42:	f7ff bc9d 	b.w	8009480 <prvAddCurrentTaskToDelayedList>
 8009b46:	bf00      	nop
 8009b48:	20014f70 	.word	0x20014f70

08009b4c <vTaskPlaceOnEventListRestricted>:
	{
 8009b4c:	b538      	push	{r3, r4, r5, lr}
 8009b4e:	460d      	mov	r5, r1
 8009b50:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009b52:	b950      	cbnz	r0, 8009b6a <vTaskPlaceOnEventListRestricted+0x1e>
 8009b54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009b58:	b672      	cpsid	i
 8009b5a:	f383 8811 	msr	BASEPRI, r3
 8009b5e:	f3bf 8f6f 	isb	sy
 8009b62:	f3bf 8f4f 	dsb	sy
 8009b66:	b662      	cpsie	i
 8009b68:	e7fe      	b.n	8009b68 <vTaskPlaceOnEventListRestricted+0x1c>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009b6a:	4b07      	ldr	r3, [pc, #28]	@ (8009b88 <vTaskPlaceOnEventListRestricted+0x3c>)
 8009b6c:	6819      	ldr	r1, [r3, #0]
 8009b6e:	3118      	adds	r1, #24
 8009b70:	f7fe fc94 	bl	800849c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009b74:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009b76:	4621      	mov	r1, r4
 8009b78:	bf0c      	ite	eq
 8009b7a:	4628      	moveq	r0, r5
 8009b7c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8009b80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009b84:	f7ff bc7c 	b.w	8009480 <prvAddCurrentTaskToDelayedList>
 8009b88:	20014f70 	.word	0x20014f70

08009b8c <xTaskRemoveFromEventList>:
{
 8009b8c:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b8e:	68c3      	ldr	r3, [r0, #12]
 8009b90:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8009b92:	b954      	cbnz	r4, 8009baa <xTaskRemoveFromEventList+0x1e>
 8009b94:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009b98:	b672      	cpsid	i
 8009b9a:	f383 8811 	msr	BASEPRI, r3
 8009b9e:	f3bf 8f6f 	isb	sy
 8009ba2:	f3bf 8f4f 	dsb	sy
 8009ba6:	b662      	cpsie	i
 8009ba8:	e7fe      	b.n	8009ba8 <xTaskRemoveFromEventList+0x1c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009baa:	f104 0518 	add.w	r5, r4, #24
 8009bae:	4628      	mov	r0, r5
 8009bb0:	f7fe fc96 	bl	80084e0 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009bb4:	4b11      	ldr	r3, [pc, #68]	@ (8009bfc <xTaskRemoveFromEventList+0x70>)
 8009bb6:	681b      	ldr	r3, [r3, #0]
 8009bb8:	b9d3      	cbnz	r3, 8009bf0 <xTaskRemoveFromEventList+0x64>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8009bba:	1d25      	adds	r5, r4, #4
 8009bbc:	4628      	mov	r0, r5
 8009bbe:	f7fe fc8f 	bl	80084e0 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009bc2:	4a0f      	ldr	r2, [pc, #60]	@ (8009c00 <xTaskRemoveFromEventList+0x74>)
 8009bc4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009bc6:	6811      	ldr	r1, [r2, #0]
 8009bc8:	428b      	cmp	r3, r1
 8009bca:	d900      	bls.n	8009bce <xTaskRemoveFromEventList+0x42>
 8009bcc:	6013      	str	r3, [r2, #0]
 8009bce:	2014      	movs	r0, #20
 8009bd0:	4a0c      	ldr	r2, [pc, #48]	@ (8009c04 <xTaskRemoveFromEventList+0x78>)
 8009bd2:	4629      	mov	r1, r5
 8009bd4:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009bd8:	f7fe fc60 	bl	800849c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8009bdc:	4b0a      	ldr	r3, [pc, #40]	@ (8009c08 <xTaskRemoveFromEventList+0x7c>)
 8009bde:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8009be0:	681b      	ldr	r3, [r3, #0]
 8009be2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009be4:	429a      	cmp	r2, r3
 8009be6:	d906      	bls.n	8009bf6 <xTaskRemoveFromEventList+0x6a>
		xYieldPending = pdTRUE;
 8009be8:	2001      	movs	r0, #1
 8009bea:	4b08      	ldr	r3, [pc, #32]	@ (8009c0c <xTaskRemoveFromEventList+0x80>)
 8009bec:	6018      	str	r0, [r3, #0]
}
 8009bee:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009bf0:	4629      	mov	r1, r5
 8009bf2:	4807      	ldr	r0, [pc, #28]	@ (8009c10 <xTaskRemoveFromEventList+0x84>)
 8009bf4:	e7f0      	b.n	8009bd8 <xTaskRemoveFromEventList+0x4c>
		xReturn = pdFALSE;
 8009bf6:	2000      	movs	r0, #0
	return xReturn;
 8009bf8:	e7f9      	b.n	8009bee <xTaskRemoveFromEventList+0x62>
 8009bfa:	bf00      	nop
 8009bfc:	20014a78 	.word	0x20014a78
 8009c00:	20014a94 	.word	0x20014a94
 8009c04:	20014b10 	.word	0x20014b10
 8009c08:	20014f70 	.word	0x20014f70
 8009c0c:	20014a88 	.word	0x20014a88
 8009c10:	20014acc 	.word	0x20014acc

08009c14 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009c14:	4b03      	ldr	r3, [pc, #12]	@ (8009c24 <vTaskInternalSetTimeOutState+0x10>)
 8009c16:	681b      	ldr	r3, [r3, #0]
 8009c18:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8009c1a:	4b03      	ldr	r3, [pc, #12]	@ (8009c28 <vTaskInternalSetTimeOutState+0x14>)
 8009c1c:	681b      	ldr	r3, [r3, #0]
 8009c1e:	6043      	str	r3, [r0, #4]
}
 8009c20:	4770      	bx	lr
 8009c22:	bf00      	nop
 8009c24:	20014a84 	.word	0x20014a84
 8009c28:	20014a98 	.word	0x20014a98

08009c2c <xTaskCheckForTimeOut>:
{
 8009c2c:	b570      	push	{r4, r5, r6, lr}
 8009c2e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009c30:	4605      	mov	r5, r0
 8009c32:	b950      	cbnz	r0, 8009c4a <xTaskCheckForTimeOut+0x1e>
 8009c34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c38:	b672      	cpsid	i
 8009c3a:	f383 8811 	msr	BASEPRI, r3
 8009c3e:	f3bf 8f6f 	isb	sy
 8009c42:	f3bf 8f4f 	dsb	sy
 8009c46:	b662      	cpsie	i
 8009c48:	e7fe      	b.n	8009c48 <xTaskCheckForTimeOut+0x1c>
	configASSERT( pxTicksToWait );
 8009c4a:	b951      	cbnz	r1, 8009c62 <xTaskCheckForTimeOut+0x36>
 8009c4c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c50:	b672      	cpsid	i
 8009c52:	f383 8811 	msr	BASEPRI, r3
 8009c56:	f3bf 8f6f 	isb	sy
 8009c5a:	f3bf 8f4f 	dsb	sy
 8009c5e:	b662      	cpsie	i
 8009c60:	e7fe      	b.n	8009c60 <xTaskCheckForTimeOut+0x34>
	taskENTER_CRITICAL();
 8009c62:	f7fe fcb7 	bl	80085d4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8009c66:	4b0f      	ldr	r3, [pc, #60]	@ (8009ca4 <xTaskCheckForTimeOut+0x78>)
 8009c68:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009c6a:	6823      	ldr	r3, [r4, #0]
 8009c6c:	1c5a      	adds	r2, r3, #1
 8009c6e:	d010      	beq.n	8009c92 <xTaskCheckForTimeOut+0x66>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009c70:	480d      	ldr	r0, [pc, #52]	@ (8009ca8 <xTaskCheckForTimeOut+0x7c>)
 8009c72:	682e      	ldr	r6, [r5, #0]
 8009c74:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009c76:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009c78:	4286      	cmp	r6, r0
 8009c7a:	d001      	beq.n	8009c80 <xTaskCheckForTimeOut+0x54>
 8009c7c:	428a      	cmp	r2, r1
 8009c7e:	d90f      	bls.n	8009ca0 <xTaskCheckForTimeOut+0x74>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009c80:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8009c82:	4283      	cmp	r3, r0
 8009c84:	d90a      	bls.n	8009c9c <xTaskCheckForTimeOut+0x70>
			*pxTicksToWait -= xElapsedTime;
 8009c86:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009c88:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 8009c8a:	4413      	add	r3, r2
 8009c8c:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009c8e:	f7ff ffc1 	bl	8009c14 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8009c92:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009c94:	f7fe fcc2 	bl	800861c <vPortExitCritical>
}
 8009c98:	4620      	mov	r0, r4
 8009c9a:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009c9c:	2300      	movs	r3, #0
 8009c9e:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8009ca0:	2401      	movs	r4, #1
 8009ca2:	e7f7      	b.n	8009c94 <xTaskCheckForTimeOut+0x68>
 8009ca4:	20014a98 	.word	0x20014a98
 8009ca8:	20014a84 	.word	0x20014a84

08009cac <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009cac:	4b01      	ldr	r3, [pc, #4]	@ (8009cb4 <vTaskMissedYield+0x8>)
 8009cae:	2201      	movs	r2, #1
 8009cb0:	601a      	str	r2, [r3, #0]
}
 8009cb2:	4770      	bx	lr
 8009cb4:	20014a88 	.word	0x20014a88

08009cb8 <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
 8009cb8:	4b01      	ldr	r3, [pc, #4]	@ (8009cc0 <xTaskGetCurrentTaskHandle+0x8>)
 8009cba:	6818      	ldr	r0, [r3, #0]
	}
 8009cbc:	4770      	bx	lr
 8009cbe:	bf00      	nop
 8009cc0:	20014f70 	.word	0x20014f70

08009cc4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009cc4:	4b05      	ldr	r3, [pc, #20]	@ (8009cdc <xTaskGetSchedulerState+0x18>)
 8009cc6:	681b      	ldr	r3, [r3, #0]
 8009cc8:	b133      	cbz	r3, 8009cd8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009cca:	4b05      	ldr	r3, [pc, #20]	@ (8009ce0 <xTaskGetSchedulerState+0x1c>)
 8009ccc:	6818      	ldr	r0, [r3, #0]
 8009cce:	fab0 f080 	clz	r0, r0
 8009cd2:	0940      	lsrs	r0, r0, #5
 8009cd4:	0040      	lsls	r0, r0, #1
 8009cd6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009cd8:	2001      	movs	r0, #1
	}
 8009cda:	4770      	bx	lr
 8009cdc:	20014a90 	.word	0x20014a90
 8009ce0:	20014a78 	.word	0x20014a78

08009ce4 <xTaskPriorityInherit>:
	{
 8009ce4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8009ce6:	4604      	mov	r4, r0
 8009ce8:	b338      	cbz	r0, 8009d3a <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009cea:	4d1a      	ldr	r5, [pc, #104]	@ (8009d54 <xTaskPriorityInherit+0x70>)
 8009cec:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8009cee:	682a      	ldr	r2, [r5, #0]
 8009cf0:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009cf2:	4293      	cmp	r3, r2
 8009cf4:	d226      	bcs.n	8009d44 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009cf6:	6982      	ldr	r2, [r0, #24]
 8009cf8:	2a00      	cmp	r2, #0
 8009cfa:	db04      	blt.n	8009d06 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009cfc:	682a      	ldr	r2, [r5, #0]
 8009cfe:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009d00:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
 8009d04:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009d06:	2214      	movs	r2, #20
 8009d08:	4e13      	ldr	r6, [pc, #76]	@ (8009d58 <xTaskPriorityInherit+0x74>)
 8009d0a:	fb02 6303 	mla	r3, r2, r3, r6
 8009d0e:	6962      	ldr	r2, [r4, #20]
 8009d10:	429a      	cmp	r2, r3
 8009d12:	d113      	bne.n	8009d3c <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009d14:	1d27      	adds	r7, r4, #4
 8009d16:	4638      	mov	r0, r7
 8009d18:	f7fe fbe2 	bl	80084e0 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009d1c:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009d1e:	4a0f      	ldr	r2, [pc, #60]	@ (8009d5c <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009d20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009d22:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009d24:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009d26:	428b      	cmp	r3, r1
 8009d28:	d900      	bls.n	8009d2c <xTaskPriorityInherit+0x48>
 8009d2a:	6013      	str	r3, [r2, #0]
 8009d2c:	2014      	movs	r0, #20
 8009d2e:	4639      	mov	r1, r7
 8009d30:	fb00 6003 	mla	r0, r0, r3, r6
 8009d34:	f7fe fbb2 	bl	800849c <vListInsertEnd>
				xReturn = pdTRUE;
 8009d38:	2001      	movs	r0, #1
	}
 8009d3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009d3c:	682b      	ldr	r3, [r5, #0]
 8009d3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009d40:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8009d42:	e7f9      	b.n	8009d38 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009d44:	682b      	ldr	r3, [r5, #0]
 8009d46:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8009d48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009d4a:	4298      	cmp	r0, r3
 8009d4c:	bf2c      	ite	cs
 8009d4e:	2000      	movcs	r0, #0
 8009d50:	2001      	movcc	r0, #1
 8009d52:	e7f2      	b.n	8009d3a <xTaskPriorityInherit+0x56>
 8009d54:	20014f70 	.word	0x20014f70
 8009d58:	20014b10 	.word	0x20014b10
 8009d5c:	20014a94 	.word	0x20014a94

08009d60 <xTaskPriorityDisinherit>:
	{
 8009d60:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009d62:	b908      	cbnz	r0, 8009d68 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8009d64:	2000      	movs	r0, #0
	}
 8009d66:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009d68:	4b1d      	ldr	r3, [pc, #116]	@ (8009de0 <xTaskPriorityDisinherit+0x80>)
 8009d6a:	681c      	ldr	r4, [r3, #0]
 8009d6c:	4284      	cmp	r4, r0
 8009d6e:	d00a      	beq.n	8009d86 <xTaskPriorityDisinherit+0x26>
 8009d70:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d74:	b672      	cpsid	i
 8009d76:	f383 8811 	msr	BASEPRI, r3
 8009d7a:	f3bf 8f6f 	isb	sy
 8009d7e:	f3bf 8f4f 	dsb	sy
 8009d82:	b662      	cpsie	i
 8009d84:	e7fe      	b.n	8009d84 <xTaskPriorityDisinherit+0x24>
			configASSERT( pxTCB->uxMutexesHeld );
 8009d86:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8009d88:	b953      	cbnz	r3, 8009da0 <xTaskPriorityDisinherit+0x40>
 8009d8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d8e:	b672      	cpsid	i
 8009d90:	f383 8811 	msr	BASEPRI, r3
 8009d94:	f3bf 8f6f 	isb	sy
 8009d98:	f3bf 8f4f 	dsb	sy
 8009d9c:	b662      	cpsie	i
 8009d9e:	e7fe      	b.n	8009d9e <xTaskPriorityDisinherit+0x3e>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009da0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
 8009da2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009da4:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009da6:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009da8:	4291      	cmp	r1, r2
 8009daa:	d0db      	beq.n	8009d64 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009dac:	2b00      	cmp	r3, #0
 8009dae:	d1d9      	bne.n	8009d64 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009db0:	1d25      	adds	r5, r4, #4
 8009db2:	4628      	mov	r0, r5
 8009db4:	f7fe fb94 	bl	80084e0 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009db8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009dba:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009dbe:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009dc0:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009dc2:	4a08      	ldr	r2, [pc, #32]	@ (8009de4 <xTaskPriorityDisinherit+0x84>)
 8009dc4:	6811      	ldr	r1, [r2, #0]
 8009dc6:	428b      	cmp	r3, r1
 8009dc8:	d900      	bls.n	8009dcc <xTaskPriorityDisinherit+0x6c>
 8009dca:	6013      	str	r3, [r2, #0]
 8009dcc:	4a06      	ldr	r2, [pc, #24]	@ (8009de8 <xTaskPriorityDisinherit+0x88>)
 8009dce:	2014      	movs	r0, #20
 8009dd0:	4629      	mov	r1, r5
 8009dd2:	fb00 2003 	mla	r0, r0, r3, r2
 8009dd6:	f7fe fb61 	bl	800849c <vListInsertEnd>
					xReturn = pdTRUE;
 8009dda:	2001      	movs	r0, #1
		return xReturn;
 8009ddc:	e7c3      	b.n	8009d66 <xTaskPriorityDisinherit+0x6>
 8009dde:	bf00      	nop
 8009de0:	20014f70 	.word	0x20014f70
 8009de4:	20014a94 	.word	0x20014a94
 8009de8:	20014b10 	.word	0x20014b10

08009dec <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009dec:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009dee:	4604      	mov	r4, r0
 8009df0:	2800      	cmp	r0, #0
 8009df2:	d046      	beq.n	8009e82 <vTaskPriorityDisinheritAfterTimeout+0x96>
			configASSERT( pxTCB->uxMutexesHeld );
 8009df4:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8009df6:	b952      	cbnz	r2, 8009e0e <vTaskPriorityDisinheritAfterTimeout+0x22>
 8009df8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009dfc:	b672      	cpsid	i
 8009dfe:	f383 8811 	msr	BASEPRI, r3
 8009e02:	f3bf 8f6f 	isb	sy
 8009e06:	f3bf 8f4f 	dsb	sy
 8009e0a:	b662      	cpsie	i
 8009e0c:	e7fe      	b.n	8009e0c <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009e0e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8009e10:	4299      	cmp	r1, r3
 8009e12:	bf38      	it	cc
 8009e14:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009e16:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8009e18:	428b      	cmp	r3, r1
 8009e1a:	d032      	beq.n	8009e82 <vTaskPriorityDisinheritAfterTimeout+0x96>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009e1c:	2a01      	cmp	r2, #1
 8009e1e:	d130      	bne.n	8009e82 <vTaskPriorityDisinheritAfterTimeout+0x96>
					configASSERT( pxTCB != pxCurrentTCB );
 8009e20:	4a18      	ldr	r2, [pc, #96]	@ (8009e84 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009e22:	6812      	ldr	r2, [r2, #0]
 8009e24:	4282      	cmp	r2, r0
 8009e26:	d10a      	bne.n	8009e3e <vTaskPriorityDisinheritAfterTimeout+0x52>
 8009e28:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e2c:	b672      	cpsid	i
 8009e2e:	f383 8811 	msr	BASEPRI, r3
 8009e32:	f3bf 8f6f 	isb	sy
 8009e36:	f3bf 8f4f 	dsb	sy
 8009e3a:	b662      	cpsie	i
 8009e3c:	e7fe      	b.n	8009e3c <vTaskPriorityDisinheritAfterTimeout+0x50>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009e3e:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009e40:	4d11      	ldr	r5, [pc, #68]	@ (8009e88 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009e42:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009e44:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 8009e48:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009e4a:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009e4e:	bfa8      	it	ge
 8009e50:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009e54:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009e56:	bfa8      	it	ge
 8009e58:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009e5a:	429a      	cmp	r2, r3
 8009e5c:	d111      	bne.n	8009e82 <vTaskPriorityDisinheritAfterTimeout+0x96>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009e5e:	1d06      	adds	r6, r0, #4
 8009e60:	4630      	mov	r0, r6
 8009e62:	f7fe fb3d 	bl	80084e0 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009e66:	4a09      	ldr	r2, [pc, #36]	@ (8009e8c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8009e68:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009e6a:	6811      	ldr	r1, [r2, #0]
 8009e6c:	428b      	cmp	r3, r1
 8009e6e:	d900      	bls.n	8009e72 <vTaskPriorityDisinheritAfterTimeout+0x86>
 8009e70:	6013      	str	r3, [r2, #0]
 8009e72:	2014      	movs	r0, #20
 8009e74:	4631      	mov	r1, r6
 8009e76:	fb00 5003 	mla	r0, r0, r3, r5
	}
 8009e7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8009e7e:	f7fe bb0d 	b.w	800849c <vListInsertEnd>
	}
 8009e82:	bd70      	pop	{r4, r5, r6, pc}
 8009e84:	20014f70 	.word	0x20014f70
 8009e88:	20014b10 	.word	0x20014b10
 8009e8c:	20014a94 	.word	0x20014a94

08009e90 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009e90:	4b04      	ldr	r3, [pc, #16]	@ (8009ea4 <pvTaskIncrementMutexHeldCount+0x14>)
 8009e92:	681a      	ldr	r2, [r3, #0]
 8009e94:	b11a      	cbz	r2, 8009e9e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009e96:	6819      	ldr	r1, [r3, #0]
 8009e98:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8009e9a:	3201      	adds	r2, #1
 8009e9c:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 8009e9e:	6818      	ldr	r0, [r3, #0]
	}
 8009ea0:	4770      	bx	lr
 8009ea2:	bf00      	nop
 8009ea4:	20014f70 	.word	0x20014f70

08009ea8 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8009ea8:	4291      	cmp	r1, r2
{
 8009eaa:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009eac:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009eae:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009eb0:	d80a      	bhi.n	8009ec8 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009eb2:	1ad2      	subs	r2, r2, r3
 8009eb4:	6983      	ldr	r3, [r0, #24]
 8009eb6:	429a      	cmp	r2, r3
 8009eb8:	d20d      	bcs.n	8009ed6 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009eba:	1d01      	adds	r1, r0, #4
 8009ebc:	4b07      	ldr	r3, [pc, #28]	@ (8009edc <prvInsertTimerInActiveList+0x34>)
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009ebe:	6818      	ldr	r0, [r3, #0]
 8009ec0:	f7fe faf7 	bl	80084b2 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009ec4:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8009ec6:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009ec8:	429a      	cmp	r2, r3
 8009eca:	d201      	bcs.n	8009ed0 <prvInsertTimerInActiveList+0x28>
 8009ecc:	4299      	cmp	r1, r3
 8009ece:	d202      	bcs.n	8009ed6 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009ed0:	1d01      	adds	r1, r0, #4
 8009ed2:	4b03      	ldr	r3, [pc, #12]	@ (8009ee0 <prvInsertTimerInActiveList+0x38>)
 8009ed4:	e7f3      	b.n	8009ebe <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009ed6:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009ed8:	e7f5      	b.n	8009ec6 <prvInsertTimerInActiveList+0x1e>
 8009eda:	bf00      	nop
 8009edc:	20015070 	.word	0x20015070
 8009ee0:	20015074 	.word	0x20015074

08009ee4 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009ee4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009ee6:	4c11      	ldr	r4, [pc, #68]	@ (8009f2c <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009ee8:	f7fe fb74 	bl	80085d4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009eec:	6825      	ldr	r5, [r4, #0]
 8009eee:	b9bd      	cbnz	r5, 8009f20 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009ef0:	4f0f      	ldr	r7, [pc, #60]	@ (8009f30 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009ef2:	4e10      	ldr	r6, [pc, #64]	@ (8009f34 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009ef4:	4638      	mov	r0, r7
 8009ef6:	f7fe fac3 	bl	8008480 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009efa:	4630      	mov	r0, r6
 8009efc:	f7fe fac0 	bl	8008480 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009f00:	4b0d      	ldr	r3, [pc, #52]	@ (8009f38 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009f02:	4a0e      	ldr	r2, [pc, #56]	@ (8009f3c <prvCheckForValidListAndQueue+0x58>)
 8009f04:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 8009f06:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009f08:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 8009f0a:	4b0d      	ldr	r3, [pc, #52]	@ (8009f40 <prvCheckForValidListAndQueue+0x5c>)
 8009f0c:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009f0e:	4b0d      	ldr	r3, [pc, #52]	@ (8009f44 <prvCheckForValidListAndQueue+0x60>)
 8009f10:	9500      	str	r5, [sp, #0]
 8009f12:	f7fe fda5 	bl	8008a60 <xQueueGenericCreateStatic>
 8009f16:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009f18:	b110      	cbz	r0, 8009f20 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009f1a:	490b      	ldr	r1, [pc, #44]	@ (8009f48 <prvCheckForValidListAndQueue+0x64>)
 8009f1c:	f7ff f9ce 	bl	80092bc <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009f20:	b003      	add	sp, #12
 8009f22:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009f26:	f7fe bb79 	b.w	800861c <vPortExitCritical>
 8009f2a:	bf00      	nop
 8009f2c:	2001506c 	.word	0x2001506c
 8009f30:	2001508c 	.word	0x2001508c
 8009f34:	20015078 	.word	0x20015078
 8009f38:	20015074 	.word	0x20015074
 8009f3c:	20014fc4 	.word	0x20014fc4
 8009f40:	20015070 	.word	0x20015070
 8009f44:	20014f74 	.word	0x20014f74
 8009f48:	08020e61 	.word	0x08020e61

08009f4c <xTimerCreateTimerTask>:
{
 8009f4c:	b510      	push	{r4, lr}
 8009f4e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009f50:	f7ff ffc8 	bl	8009ee4 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009f54:	4b13      	ldr	r3, [pc, #76]	@ (8009fa4 <xTimerCreateTimerTask+0x58>)
 8009f56:	681b      	ldr	r3, [r3, #0]
 8009f58:	b1b3      	cbz	r3, 8009f88 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009f5a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009f5c:	aa07      	add	r2, sp, #28
 8009f5e:	a906      	add	r1, sp, #24
 8009f60:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009f62:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009f66:	f7fe f987 	bl	8008278 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009f6a:	9b05      	ldr	r3, [sp, #20]
 8009f6c:	9a07      	ldr	r2, [sp, #28]
 8009f6e:	9302      	str	r3, [sp, #8]
 8009f70:	9b06      	ldr	r3, [sp, #24]
 8009f72:	490d      	ldr	r1, [pc, #52]	@ (8009fa8 <xTimerCreateTimerTask+0x5c>)
 8009f74:	9301      	str	r3, [sp, #4]
 8009f76:	2302      	movs	r3, #2
 8009f78:	480c      	ldr	r0, [pc, #48]	@ (8009fac <xTimerCreateTimerTask+0x60>)
 8009f7a:	9300      	str	r3, [sp, #0]
 8009f7c:	4623      	mov	r3, r4
 8009f7e:	f7ff fb66 	bl	800964e <xTaskCreateStatic>
 8009f82:	4b0b      	ldr	r3, [pc, #44]	@ (8009fb0 <xTimerCreateTimerTask+0x64>)
 8009f84:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009f86:	b950      	cbnz	r0, 8009f9e <xTimerCreateTimerTask+0x52>
 8009f88:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009f8c:	b672      	cpsid	i
 8009f8e:	f383 8811 	msr	BASEPRI, r3
 8009f92:	f3bf 8f6f 	isb	sy
 8009f96:	f3bf 8f4f 	dsb	sy
 8009f9a:	b662      	cpsie	i
	configASSERT( xReturn );
 8009f9c:	e7fe      	b.n	8009f9c <xTimerCreateTimerTask+0x50>
}
 8009f9e:	2001      	movs	r0, #1
 8009fa0:	b008      	add	sp, #32
 8009fa2:	bd10      	pop	{r4, pc}
 8009fa4:	2001506c 	.word	0x2001506c
 8009fa8:	08020e66 	.word	0x08020e66
 8009fac:	0800a0b5 	.word	0x0800a0b5
 8009fb0:	20015068 	.word	0x20015068

08009fb4 <xTimerGenericCommand>:
{
 8009fb4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009fb6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009fb8:	4604      	mov	r4, r0
{
 8009fba:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009fbc:	b950      	cbnz	r0, 8009fd4 <xTimerGenericCommand+0x20>
 8009fbe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009fc2:	b672      	cpsid	i
 8009fc4:	f383 8811 	msr	BASEPRI, r3
 8009fc8:	f3bf 8f6f 	isb	sy
 8009fcc:	f3bf 8f4f 	dsb	sy
 8009fd0:	b662      	cpsie	i
 8009fd2:	e7fe      	b.n	8009fd2 <xTimerGenericCommand+0x1e>
	if( xTimerQueue != NULL )
 8009fd4:	4d0c      	ldr	r5, [pc, #48]	@ (800a008 <xTimerGenericCommand+0x54>)
 8009fd6:	6828      	ldr	r0, [r5, #0]
 8009fd8:	b178      	cbz	r0, 8009ffa <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009fda:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009fdc:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009fde:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009fe2:	dc0c      	bgt.n	8009ffe <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009fe4:	f7ff fe6e 	bl	8009cc4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009fe8:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009fea:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009fec:	4669      	mov	r1, sp
 8009fee:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009ff0:	bf0c      	ite	eq
 8009ff2:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009ff4:	461a      	movne	r2, r3
 8009ff6:	f7fe fdb8 	bl	8008b6a <xQueueGenericSend>
}
 8009ffa:	b004      	add	sp, #16
 8009ffc:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009ffe:	2300      	movs	r3, #0
 800a000:	4669      	mov	r1, sp
 800a002:	f7fe febf 	bl	8008d84 <xQueueGenericSendFromISR>
 800a006:	e7f8      	b.n	8009ffa <xTimerGenericCommand+0x46>
 800a008:	2001506c 	.word	0x2001506c

0800a00c <prvSampleTimeNow>:
{
 800a00c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a010:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 800a0b0 <prvSampleTimeNow+0xa4>
{
 800a014:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a016:	f7ff fb8f 	bl	8009738 <xTaskGetTickCount>
 800a01a:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a01c:	f8d8 3000 	ldr.w	r3, [r8]
 800a020:	4283      	cmp	r3, r0
 800a022:	d909      	bls.n	800a038 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a024:	4f20      	ldr	r7, [pc, #128]	@ (800a0a8 <prvSampleTimeNow+0x9c>)
 800a026:	683b      	ldr	r3, [r7, #0]
 800a028:	681a      	ldr	r2, [r3, #0]
 800a02a:	b96a      	cbnz	r2, 800a048 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a02c:	4a1f      	ldr	r2, [pc, #124]	@ (800a0ac <prvSampleTimeNow+0xa0>)
 800a02e:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 800a030:	6013      	str	r3, [r2, #0]
 800a032:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
 800a034:	6039      	str	r1, [r7, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a036:	e000      	b.n	800a03a <prvSampleTimeNow+0x2e>
 800a038:	2300      	movs	r3, #0
}
 800a03a:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800a03c:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a03e:	f8c8 5000 	str.w	r5, [r8]
}
 800a042:	b002      	add	sp, #8
 800a044:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a048:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a04a:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a04c:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a050:	f104 0a04 	add.w	sl, r4, #4
 800a054:	4650      	mov	r0, sl
 800a056:	f7fe fa43 	bl	80084e0 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a05a:	6a23      	ldr	r3, [r4, #32]
 800a05c:	4620      	mov	r0, r4
 800a05e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a060:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a064:	075b      	lsls	r3, r3, #29
 800a066:	d5de      	bpl.n	800a026 <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a068:	69a3      	ldr	r3, [r4, #24]
 800a06a:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 800a06c:	4599      	cmp	r9, r3
 800a06e:	d206      	bcs.n	800a07e <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a070:	4651      	mov	r1, sl
 800a072:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a074:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a076:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a078:	f7fe fa1b 	bl	80084b2 <vListInsert>
 800a07c:	e7d3      	b.n	800a026 <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a07e:	2300      	movs	r3, #0
 800a080:	464a      	mov	r2, r9
 800a082:	4620      	mov	r0, r4
 800a084:	4619      	mov	r1, r3
 800a086:	9300      	str	r3, [sp, #0]
 800a088:	f7ff ff94 	bl	8009fb4 <xTimerGenericCommand>
				configASSERT( xResult );
 800a08c:	2800      	cmp	r0, #0
 800a08e:	d1ca      	bne.n	800a026 <prvSampleTimeNow+0x1a>
 800a090:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a094:	b672      	cpsid	i
 800a096:	f383 8811 	msr	BASEPRI, r3
 800a09a:	f3bf 8f6f 	isb	sy
 800a09e:	f3bf 8f4f 	dsb	sy
 800a0a2:	b662      	cpsie	i
 800a0a4:	e7fe      	b.n	800a0a4 <prvSampleTimeNow+0x98>
 800a0a6:	bf00      	nop
 800a0a8:	20015074 	.word	0x20015074
 800a0ac:	20015070 	.word	0x20015070
 800a0b0:	20015064 	.word	0x20015064

0800a0b4 <prvTimerTask>:
{
 800a0b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a0b8:	4d71      	ldr	r5, [pc, #452]	@ (800a280 <prvTimerTask+0x1cc>)
{
 800a0ba:	b089      	sub	sp, #36	@ 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a0bc:	4e71      	ldr	r6, [pc, #452]	@ (800a284 <prvTimerTask+0x1d0>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a0be:	682b      	ldr	r3, [r5, #0]
 800a0c0:	f8d3 8000 	ldr.w	r8, [r3]
 800a0c4:	f1b8 0f00 	cmp.w	r8, #0
 800a0c8:	d037      	beq.n	800a13a <prvTimerTask+0x86>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a0ca:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a0cc:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a0ce:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
 800a0d2:	f7ff fb29 	bl	8009728 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a0d6:	a804      	add	r0, sp, #16
 800a0d8:	f7ff ff98 	bl	800a00c <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a0dc:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a0de:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a0e0:	2b00      	cmp	r3, #0
 800a0e2:	d16b      	bne.n	800a1bc <prvTimerTask+0x108>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a0e4:	2c00      	cmp	r4, #0
 800a0e6:	d14e      	bne.n	800a186 <prvTimerTask+0xd2>
 800a0e8:	4540      	cmp	r0, r8
 800a0ea:	d352      	bcc.n	800a192 <prvTimerTask+0xde>
				( void ) xTaskResumeAll();
 800a0ec:	f7ff fbc2 	bl	8009874 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0f0:	682b      	ldr	r3, [r5, #0]
 800a0f2:	68db      	ldr	r3, [r3, #12]
 800a0f4:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a0f6:	1d38      	adds	r0, r7, #4
 800a0f8:	f7fe f9f2 	bl	80084e0 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a0fc:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800a100:	0758      	lsls	r0, r3, #29
 800a102:	d51c      	bpl.n	800a13e <prvTimerTask+0x8a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a104:	69b9      	ldr	r1, [r7, #24]
 800a106:	4643      	mov	r3, r8
 800a108:	464a      	mov	r2, r9
 800a10a:	4638      	mov	r0, r7
 800a10c:	4441      	add	r1, r8
 800a10e:	f7ff fecb 	bl	8009ea8 <prvInsertTimerInActiveList>
 800a112:	b1c0      	cbz	r0, 800a146 <prvTimerTask+0x92>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a114:	4623      	mov	r3, r4
 800a116:	4642      	mov	r2, r8
 800a118:	4621      	mov	r1, r4
 800a11a:	4638      	mov	r0, r7
 800a11c:	9400      	str	r4, [sp, #0]
 800a11e:	f7ff ff49 	bl	8009fb4 <xTimerGenericCommand>
			configASSERT( xResult );
 800a122:	b980      	cbnz	r0, 800a146 <prvTimerTask+0x92>
 800a124:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a128:	b672      	cpsid	i
 800a12a:	f383 8811 	msr	BASEPRI, r3
 800a12e:	f3bf 8f6f 	isb	sy
 800a132:	f3bf 8f4f 	dsb	sy
 800a136:	b662      	cpsie	i
 800a138:	e7fe      	b.n	800a138 <prvTimerTask+0x84>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a13a:	2401      	movs	r4, #1
 800a13c:	e7c9      	b.n	800a0d2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a13e:	f023 0301 	bic.w	r3, r3, #1
 800a142:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a146:	6a3b      	ldr	r3, [r7, #32]
 800a148:	4638      	mov	r0, r7
 800a14a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a14c:	2200      	movs	r2, #0
 800a14e:	a904      	add	r1, sp, #16
 800a150:	6830      	ldr	r0, [r6, #0]
 800a152:	f7fe fed4 	bl	8008efe <xQueueReceive>
 800a156:	2800      	cmp	r0, #0
 800a158:	d0b1      	beq.n	800a0be <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a15a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a15c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a15e:	2b00      	cmp	r3, #0
 800a160:	db2f      	blt.n	800a1c2 <prvTimerTask+0x10e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a162:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a164:	6963      	ldr	r3, [r4, #20]
 800a166:	2b00      	cmp	r3, #0
 800a168:	d132      	bne.n	800a1d0 <prvTimerTask+0x11c>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a16a:	a803      	add	r0, sp, #12
 800a16c:	f7ff ff4e 	bl	800a00c <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a170:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a172:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a174:	2b09      	cmp	r3, #9
 800a176:	d8e9      	bhi.n	800a14c <prvTimerTask+0x98>
 800a178:	e8df f003 	tbb	[pc, r3]
 800a17c:	592e2e2e 	.word	0x592e2e2e
 800a180:	2e2e7a60 	.word	0x2e2e7a60
 800a184:	6059      	.short	0x6059
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a186:	4b40      	ldr	r3, [pc, #256]	@ (800a288 <prvTimerTask+0x1d4>)
 800a188:	681b      	ldr	r3, [r3, #0]
 800a18a:	681c      	ldr	r4, [r3, #0]
 800a18c:	fab4 f484 	clz	r4, r4
 800a190:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a192:	4622      	mov	r2, r4
 800a194:	eba8 0109 	sub.w	r1, r8, r9
 800a198:	6830      	ldr	r0, [r6, #0]
 800a19a:	f7ff f8d0 	bl	800933e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a19e:	f7ff fb69 	bl	8009874 <xTaskResumeAll>
 800a1a2:	2800      	cmp	r0, #0
 800a1a4:	d1d2      	bne.n	800a14c <prvTimerTask+0x98>
					portYIELD_WITHIN_API();
 800a1a6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a1aa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a1ae:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a1b2:	f3bf 8f4f 	dsb	sy
 800a1b6:	f3bf 8f6f 	isb	sy
 800a1ba:	e7c7      	b.n	800a14c <prvTimerTask+0x98>
			( void ) xTaskResumeAll();
 800a1bc:	f7ff fb5a 	bl	8009874 <xTaskResumeAll>
}
 800a1c0:	e7c4      	b.n	800a14c <prvTimerTask+0x98>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a1c2:	9b05      	ldr	r3, [sp, #20]
 800a1c4:	9907      	ldr	r1, [sp, #28]
 800a1c6:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a1c8:	9b04      	ldr	r3, [sp, #16]
 800a1ca:	2b00      	cmp	r3, #0
 800a1cc:	dbbe      	blt.n	800a14c <prvTimerTask+0x98>
 800a1ce:	e7c8      	b.n	800a162 <prvTimerTask+0xae>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a1d0:	1d20      	adds	r0, r4, #4
 800a1d2:	f7fe f985 	bl	80084e0 <uxListRemove>
 800a1d6:	e7c8      	b.n	800a16a <prvTimerTask+0xb6>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a1d8:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a1dc:	4620      	mov	r0, r4
 800a1de:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a1e0:	f043 0301 	orr.w	r3, r3, #1
 800a1e4:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a1e8:	9b05      	ldr	r3, [sp, #20]
 800a1ea:	4419      	add	r1, r3
 800a1ec:	f7ff fe5c 	bl	8009ea8 <prvInsertTimerInActiveList>
 800a1f0:	2800      	cmp	r0, #0
 800a1f2:	d0ab      	beq.n	800a14c <prvTimerTask+0x98>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a1f4:	6a23      	ldr	r3, [r4, #32]
 800a1f6:	4620      	mov	r0, r4
 800a1f8:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a1fa:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a1fe:	0759      	lsls	r1, r3, #29
 800a200:	d5a4      	bpl.n	800a14c <prvTimerTask+0x98>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a202:	69a2      	ldr	r2, [r4, #24]
 800a204:	2300      	movs	r3, #0
 800a206:	9905      	ldr	r1, [sp, #20]
 800a208:	4620      	mov	r0, r4
 800a20a:	9300      	str	r3, [sp, #0]
 800a20c:	440a      	add	r2, r1
 800a20e:	4619      	mov	r1, r3
 800a210:	f7ff fed0 	bl	8009fb4 <xTimerGenericCommand>
							configASSERT( xResult );
 800a214:	2800      	cmp	r0, #0
 800a216:	d199      	bne.n	800a14c <prvTimerTask+0x98>
 800a218:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a21c:	b672      	cpsid	i
 800a21e:	f383 8811 	msr	BASEPRI, r3
 800a222:	f3bf 8f6f 	isb	sy
 800a226:	f3bf 8f4f 	dsb	sy
 800a22a:	b662      	cpsie	i
 800a22c:	e7fe      	b.n	800a22c <prvTimerTask+0x178>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a22e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a232:	f023 0301 	bic.w	r3, r3, #1
 800a236:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a23a:	e787      	b.n	800a14c <prvTimerTask+0x98>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a23c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a240:	f043 0301 	orr.w	r3, r3, #1
 800a244:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a248:	9905      	ldr	r1, [sp, #20]
 800a24a:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a24c:	b951      	cbnz	r1, 800a264 <prvTimerTask+0x1b0>
 800a24e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a252:	b672      	cpsid	i
 800a254:	f383 8811 	msr	BASEPRI, r3
 800a258:	f3bf 8f6f 	isb	sy
 800a25c:	f3bf 8f4f 	dsb	sy
 800a260:	b662      	cpsie	i
 800a262:	e7fe      	b.n	800a262 <prvTimerTask+0x1ae>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a264:	4603      	mov	r3, r0
 800a266:	4401      	add	r1, r0
 800a268:	4620      	mov	r0, r4
 800a26a:	f7ff fe1d 	bl	8009ea8 <prvInsertTimerInActiveList>
					break;
 800a26e:	e76d      	b.n	800a14c <prvTimerTask+0x98>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a270:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a274:	079a      	lsls	r2, r3, #30
 800a276:	d4dc      	bmi.n	800a232 <prvTimerTask+0x17e>
							vPortFree( pxTimer );
 800a278:	4620      	mov	r0, r4
 800a27a:	f7fe f8c5 	bl	8008408 <vPortFree>
 800a27e:	e765      	b.n	800a14c <prvTimerTask+0x98>
 800a280:	20015074 	.word	0x20015074
 800a284:	2001506c 	.word	0x2001506c
 800a288:	20015070 	.word	0x20015070

0800a28c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a28c:	8880      	ldrh	r0, [r0, #4]
 800a28e:	4770      	bx	lr

0800a290 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a290:	b570      	push	{r4, r5, r6, lr}
 800a292:	6803      	ldr	r3, [r0, #0]
 800a294:	460c      	mov	r4, r1
 800a296:	2100      	movs	r1, #0
 800a298:	4605      	mov	r5, r0
 800a29a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a29c:	4798      	blx	r3
 800a29e:	4606      	mov	r6, r0
 800a2a0:	682b      	ldr	r3, [r5, #0]
 800a2a2:	4628      	mov	r0, r5
 800a2a4:	1ba4      	subs	r4, r4, r6
 800a2a6:	6a1b      	ldr	r3, [r3, #32]
 800a2a8:	b2a4      	uxth	r4, r4
 800a2aa:	4798      	blx	r3
 800a2ac:	fbb4 f0f0 	udiv	r0, r4, r0
 800a2b0:	bd70      	pop	{r4, r5, r6, pc}

0800a2b2 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a2b2:	2300      	movs	r3, #0
 800a2b4:	8083      	strh	r3, [r0, #4]
 800a2b6:	4770      	bx	lr

0800a2b8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a2b8:	b510      	push	{r4, lr}
 800a2ba:	6803      	ldr	r3, [r0, #0]
 800a2bc:	4604      	mov	r4, r0
 800a2be:	8881      	ldrh	r1, [r0, #4]
 800a2c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a2c2:	4798      	blx	r3
 800a2c4:	88a3      	ldrh	r3, [r4, #4]
 800a2c6:	3301      	adds	r3, #1
 800a2c8:	80a3      	strh	r3, [r4, #4]
 800a2ca:	bd10      	pop	{r4, pc}

0800a2cc <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a2cc:	6803      	ldr	r3, [r0, #0]
 800a2ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a2d0:	4718      	bx	r3

0800a2d2 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a2d2:	4770      	bx	lr

0800a2d4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a2d4:	4a02      	ldr	r2, [pc, #8]	@ (800a2e0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a2d6:	6002      	str	r2, [r0, #0]
 800a2d8:	2200      	movs	r2, #0
 800a2da:	8082      	strh	r2, [r0, #4]
 800a2dc:	4770      	bx	lr
 800a2de:	bf00      	nop
 800a2e0:	08020e78 	.word	0x08020e78

0800a2e4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a2e4:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a2e6:	2000      	movs	r0, #0
 800a2e8:	b12b      	cbz	r3, 800a2f6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a2ea:	b920      	cbnz	r0, 800a2f6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a2ec:	1a5a      	subs	r2, r3, r1
 800a2ee:	699b      	ldr	r3, [r3, #24]
 800a2f0:	4250      	negs	r0, r2
 800a2f2:	4150      	adcs	r0, r2
 800a2f4:	e7f8      	b.n	800a2e8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a2f6:	4770      	bx	lr

0800a2f8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a2f8:	2300      	movs	r3, #0
 800a2fa:	6148      	str	r0, [r1, #20]
 800a2fc:	618b      	str	r3, [r1, #24]
 800a2fe:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a300:	b913      	cbnz	r3, 800a308 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a302:	6281      	str	r1, [r0, #40]	@ 0x28
 800a304:	4770      	bx	lr
 800a306:	4613      	mov	r3, r2
 800a308:	699a      	ldr	r2, [r3, #24]
 800a30a:	2a00      	cmp	r2, #0
 800a30c:	d1fb      	bne.n	800a306 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a30e:	6199      	str	r1, [r3, #24]
 800a310:	4770      	bx	lr

0800a312 <_ZN8touchgfx9Container9removeAllEv>:
 800a312:	2200      	movs	r2, #0
 800a314:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a316:	b123      	cbz	r3, 800a322 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a318:	6999      	ldr	r1, [r3, #24]
 800a31a:	6281      	str	r1, [r0, #40]	@ 0x28
 800a31c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a320:	e7f8      	b.n	800a314 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a322:	4770      	bx	lr

0800a324 <_ZN8touchgfx9Container6unlinkEv>:
 800a324:	2300      	movs	r3, #0
 800a326:	6283      	str	r3, [r0, #40]	@ 0x28
 800a328:	4770      	bx	lr

0800a32a <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a32a:	2200      	movs	r2, #0
 800a32c:	8002      	strh	r2, [r0, #0]
 800a32e:	8042      	strh	r2, [r0, #2]
 800a330:	8082      	strh	r2, [r0, #4]
 800a332:	80c2      	strh	r2, [r0, #6]
 800a334:	4770      	bx	lr

0800a336 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a336:	b570      	push	{r4, r5, r6, lr}
 800a338:	460d      	mov	r5, r1
 800a33a:	4616      	mov	r6, r2
 800a33c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a33e:	b13c      	cbz	r4, 800a350 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a340:	6823      	ldr	r3, [r4, #0]
 800a342:	4620      	mov	r0, r4
 800a344:	4632      	mov	r2, r6
 800a346:	4629      	mov	r1, r5
 800a348:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a34a:	4798      	blx	r3
 800a34c:	69a4      	ldr	r4, [r4, #24]
 800a34e:	e7f6      	b.n	800a33e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a350:	bd70      	pop	{r4, r5, r6, pc}

0800a352 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a352:	b538      	push	{r3, r4, r5, lr}
 800a354:	460d      	mov	r5, r1
 800a356:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a358:	b134      	cbz	r4, 800a368 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a35a:	682b      	ldr	r3, [r5, #0]
 800a35c:	4621      	mov	r1, r4
 800a35e:	4628      	mov	r0, r5
 800a360:	689b      	ldr	r3, [r3, #8]
 800a362:	4798      	blx	r3
 800a364:	69a4      	ldr	r4, [r4, #24]
 800a366:	e7f7      	b.n	800a358 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a368:	bd38      	pop	{r3, r4, r5, pc}

0800a36a <_ZN8touchgfx9ContainerD1Ev>:
 800a36a:	4770      	bx	lr

0800a36c <_ZN8touchgfx9ContainerD0Ev>:
 800a36c:	b510      	push	{r4, lr}
 800a36e:	4604      	mov	r4, r0
 800a370:	212c      	movs	r1, #44	@ 0x2c
 800a372:	f014 f9b1 	bl	801e6d8 <_ZdlPvj>
 800a376:	4620      	mov	r0, r4
 800a378:	bd10      	pop	{r4, pc}

0800a37a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a37a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a37c:	b19b      	cbz	r3, 800a3a6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a37e:	428b      	cmp	r3, r1
 800a380:	d109      	bne.n	800a396 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a382:	699a      	ldr	r2, [r3, #24]
 800a384:	2100      	movs	r1, #0
 800a386:	6159      	str	r1, [r3, #20]
 800a388:	6282      	str	r2, [r0, #40]	@ 0x28
 800a38a:	b902      	cbnz	r2, 800a38e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a38c:	4770      	bx	lr
 800a38e:	6199      	str	r1, [r3, #24]
 800a390:	4770      	bx	lr
 800a392:	4613      	mov	r3, r2
 800a394:	b13a      	cbz	r2, 800a3a6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a396:	699a      	ldr	r2, [r3, #24]
 800a398:	428a      	cmp	r2, r1
 800a39a:	d1fa      	bne.n	800a392 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a39c:	698a      	ldr	r2, [r1, #24]
 800a39e:	619a      	str	r2, [r3, #24]
 800a3a0:	2300      	movs	r3, #0
 800a3a2:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a3a6:	4770      	bx	lr

0800a3a8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a3a8:	b410      	push	{r4}
 800a3aa:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a3ac:	4604      	mov	r4, r0
 800a3ae:	b92b      	cbnz	r3, 800a3bc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a3b0:	6803      	ldr	r3, [r0, #0]
 800a3b2:	4611      	mov	r1, r2
 800a3b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a3b8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a3ba:	4718      	bx	r3
 800a3bc:	b941      	cbnz	r1, 800a3d0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a3be:	6193      	str	r3, [r2, #24]
 800a3c0:	6282      	str	r2, [r0, #40]	@ 0x28
 800a3c2:	6154      	str	r4, [r2, #20]
 800a3c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a3c8:	4770      	bx	lr
 800a3ca:	4603      	mov	r3, r0
 800a3cc:	2800      	cmp	r0, #0
 800a3ce:	d0f9      	beq.n	800a3c4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a3d0:	4299      	cmp	r1, r3
 800a3d2:	6998      	ldr	r0, [r3, #24]
 800a3d4:	d1f9      	bne.n	800a3ca <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a3d6:	6190      	str	r0, [r2, #24]
 800a3d8:	618a      	str	r2, [r1, #24]
 800a3da:	e7f2      	b.n	800a3c2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a3dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a3dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3e0:	461f      	mov	r7, r3
 800a3e2:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800a3e6:	460d      	mov	r5, r1
 800a3e8:	4616      	mov	r6, r2
 800a3ea:	b103      	cbz	r3, 800a3ee <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a3ec:	6038      	str	r0, [r7, #0]
 800a3ee:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a3f0:	b314      	cbz	r4, 800a438 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a3f2:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a3f6:	b1eb      	cbz	r3, 800a434 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a3f8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a3fc:	428d      	cmp	r5, r1
 800a3fe:	db19      	blt.n	800a434 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a400:	b289      	uxth	r1, r1
 800a402:	8923      	ldrh	r3, [r4, #8]
 800a404:	440b      	add	r3, r1
 800a406:	b21b      	sxth	r3, r3
 800a408:	429d      	cmp	r5, r3
 800a40a:	da13      	bge.n	800a434 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a40c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a410:	4296      	cmp	r6, r2
 800a412:	db0f      	blt.n	800a434 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a414:	b292      	uxth	r2, r2
 800a416:	8963      	ldrh	r3, [r4, #10]
 800a418:	4413      	add	r3, r2
 800a41a:	b21b      	sxth	r3, r3
 800a41c:	429e      	cmp	r6, r3
 800a41e:	da09      	bge.n	800a434 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a420:	6823      	ldr	r3, [r4, #0]
 800a422:	1ab2      	subs	r2, r6, r2
 800a424:	1a69      	subs	r1, r5, r1
 800a426:	4620      	mov	r0, r4
 800a428:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800a42c:	b212      	sxth	r2, r2
 800a42e:	463b      	mov	r3, r7
 800a430:	b209      	sxth	r1, r1
 800a432:	47c0      	blx	r8
 800a434:	69a4      	ldr	r4, [r4, #24]
 800a436:	e7db      	b.n	800a3f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a438:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a43c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a43c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a440:	4c6d      	ldr	r4, [pc, #436]	@ (800a5f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800a442:	b0a1      	sub	sp, #132	@ 0x84
 800a444:	4606      	mov	r6, r0
 800a446:	6824      	ldr	r4, [r4, #0]
 800a448:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800a44a:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800a44e:	2400      	movs	r4, #0
 800a450:	9303      	str	r3, [sp, #12]
 800a452:	802c      	strh	r4, [r5, #0]
 800a454:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800a456:	802c      	strh	r4, [r5, #0]
 800a458:	601c      	str	r4, [r3, #0]
 800a45a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a45e:	f7ff ffbd 	bl	800a3dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a462:	f1b9 0f03 	cmp.w	r9, #3
 800a466:	f340 80c1 	ble.w	800a5ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800a46a:	4631      	mov	r1, r6
 800a46c:	a80c      	add	r0, sp, #48	@ 0x30
 800a46e:	f004 fd67 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a472:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800a476:	9306      	str	r3, [sp, #24]
 800a478:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800a47c:	9307      	str	r3, [sp, #28]
 800a47e:	9b03      	ldr	r3, [sp, #12]
 800a480:	f8d3 a000 	ldr.w	sl, [r3]
 800a484:	f1ba 0f00 	cmp.w	sl, #0
 800a488:	f000 80b3 	beq.w	800a5f2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800a48c:	4651      	mov	r1, sl
 800a48e:	a810      	add	r0, sp, #64	@ 0x40
 800a490:	f004 fd56 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a494:	2002      	movs	r0, #2
 800a496:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800a49a:	9b01      	ldr	r3, [sp, #4]
 800a49c:	9a06      	ldr	r2, [sp, #24]
 800a49e:	fb91 f1f0 	sdiv	r1, r1, r0
 800a4a2:	189d      	adds	r5, r3, r2
 800a4a4:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800a4a8:	9a07      	ldr	r2, [sp, #28]
 800a4aa:	4419      	add	r1, r3
 800a4ac:	9b02      	ldr	r3, [sp, #8]
 800a4ae:	4413      	add	r3, r2
 800a4b0:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800a4b4:	1a6d      	subs	r5, r5, r1
 800a4b6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800a4ba:	fb92 f2f0 	sdiv	r2, r2, r0
 800a4be:	440a      	add	r2, r1
 800a4c0:	1a9b      	subs	r3, r3, r2
 800a4c2:	435b      	muls	r3, r3
 800a4c4:	fb05 3505 	mla	r5, r5, r5, r3
 800a4c8:	4f4c      	ldr	r7, [pc, #304]	@ (800a5fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a4ca:	ac10      	add	r4, sp, #64	@ 0x40
 800a4cc:	f1b9 0f0c 	cmp.w	r9, #12
 800a4d0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a4d2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a4d4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a4d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a4d8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a4da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a4dc:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a4e0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a4e4:	f04f 0303 	mov.w	r3, #3
 800a4e8:	bfd8      	it	le
 800a4ea:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a4ee:	f04f 0400 	mov.w	r4, #0
 800a4f2:	f8cd 9000 	str.w	r9, [sp]
 800a4f6:	bfcc      	ite	gt
 800a4f8:	4698      	movgt	r8, r3
 800a4fa:	fb92 f8f3 	sdivle	r8, r2, r3
 800a4fe:	1c63      	adds	r3, r4, #1
 800a500:	aa10      	add	r2, sp, #64	@ 0x40
 800a502:	f004 0401 	and.w	r4, r4, #1
 800a506:	f04f 0b00 	mov.w	fp, #0
 800a50a:	9308      	str	r3, [sp, #32]
 800a50c:	9b00      	ldr	r3, [sp, #0]
 800a50e:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a512:	fb93 f3f8 	sdiv	r3, r3, r8
 800a516:	3404      	adds	r4, #4
 800a518:	b29b      	uxth	r3, r3
 800a51a:	9304      	str	r3, [sp, #16]
 800a51c:	9a04      	ldr	r2, [sp, #16]
 800a51e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a522:	fb13 f302 	smulbb	r3, r3, r2
 800a526:	9a01      	ldr	r2, [sp, #4]
 800a528:	b29b      	uxth	r3, r3
 800a52a:	1899      	adds	r1, r3, r2
 800a52c:	9305      	str	r3, [sp, #20]
 800a52e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a532:	b209      	sxth	r1, r1
 800a534:	4299      	cmp	r1, r3
 800a536:	db4d      	blt.n	800a5d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a538:	8932      	ldrh	r2, [r6, #8]
 800a53a:	4413      	add	r3, r2
 800a53c:	b21b      	sxth	r3, r3
 800a53e:	4299      	cmp	r1, r3
 800a540:	da48      	bge.n	800a5d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a542:	9b04      	ldr	r3, [sp, #16]
 800a544:	6827      	ldr	r7, [r4, #0]
 800a546:	fb17 f703 	smulbb	r7, r7, r3
 800a54a:	9b02      	ldr	r3, [sp, #8]
 800a54c:	b2bf      	uxth	r7, r7
 800a54e:	18fa      	adds	r2, r7, r3
 800a550:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a554:	b212      	sxth	r2, r2
 800a556:	429a      	cmp	r2, r3
 800a558:	db3c      	blt.n	800a5d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a55a:	8970      	ldrh	r0, [r6, #10]
 800a55c:	4403      	add	r3, r0
 800a55e:	b21b      	sxth	r3, r3
 800a560:	429a      	cmp	r2, r3
 800a562:	da37      	bge.n	800a5d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a564:	2300      	movs	r3, #0
 800a566:	4630      	mov	r0, r6
 800a568:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a56a:	ab0b      	add	r3, sp, #44	@ 0x2c
 800a56c:	f7ff ff36 	bl	800a3dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a570:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800a572:	b37a      	cbz	r2, 800a5d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a574:	4552      	cmp	r2, sl
 800a576:	d02d      	beq.n	800a5d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a578:	4611      	mov	r1, r2
 800a57a:	a80e      	add	r0, sp, #56	@ 0x38
 800a57c:	9209      	str	r2, [sp, #36]	@ 0x24
 800a57e:	f004 fcdf 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a582:	f04f 0e02 	mov.w	lr, #2
 800a586:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800a58a:	9a06      	ldr	r2, [sp, #24]
 800a58c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800a590:	9b01      	ldr	r3, [sp, #4]
 800a592:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800a596:	4413      	add	r3, r2
 800a598:	9a07      	ldr	r2, [sp, #28]
 800a59a:	fb91 f1fe 	sdiv	r1, r1, lr
 800a59e:	fb9c fcfe 	sdiv	ip, ip, lr
 800a5a2:	4401      	add	r1, r0
 800a5a4:	1a58      	subs	r0, r3, r1
 800a5a6:	9b02      	ldr	r3, [sp, #8]
 800a5a8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800a5ac:	4413      	add	r3, r2
 800a5ae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a5b0:	448c      	add	ip, r1
 800a5b2:	eba3 030c 	sub.w	r3, r3, ip
 800a5b6:	435b      	muls	r3, r3
 800a5b8:	fb00 3300 	mla	r3, r0, r0, r3
 800a5bc:	42ab      	cmp	r3, r5
 800a5be:	d208      	bcs.n	800a5d2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a5c0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800a5c2:	461d      	mov	r5, r3
 800a5c4:	9803      	ldr	r0, [sp, #12]
 800a5c6:	6001      	str	r1, [r0, #0]
 800a5c8:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800a5ca:	9805      	ldr	r0, [sp, #20]
 800a5cc:	8008      	strh	r0, [r1, #0]
 800a5ce:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800a5d0:	800f      	strh	r7, [r1, #0]
 800a5d2:	4692      	mov	sl, r2
 800a5d4:	f10b 0b01 	add.w	fp, fp, #1
 800a5d8:	3408      	adds	r4, #8
 800a5da:	f1bb 0f04 	cmp.w	fp, #4
 800a5de:	d19d      	bne.n	800a51c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a5e0:	9b00      	ldr	r3, [sp, #0]
 800a5e2:	9c08      	ldr	r4, [sp, #32]
 800a5e4:	444b      	add	r3, r9
 800a5e6:	4544      	cmp	r4, r8
 800a5e8:	9300      	str	r3, [sp, #0]
 800a5ea:	d188      	bne.n	800a4fe <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a5ec:	b021      	add	sp, #132	@ 0x84
 800a5ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a5f2:	f04f 35ff 	mov.w	r5, #4294967295
 800a5f6:	e767      	b.n	800a4c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a5f8:	200150ac 	.word	0x200150ac
 800a5fc:	0801f7d8 	.word	0x0801f7d8

0800a600 <_ZN8touchgfx4RectaNERKS0_>:
 800a600:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a604:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a608:	888c      	ldrh	r4, [r1, #4]
 800a60a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a60e:	443c      	add	r4, r7
 800a610:	b2a4      	uxth	r4, r4
 800a612:	fa0f f884 	sxth.w	r8, r4
 800a616:	45c1      	cmp	r9, r8
 800a618:	da2f      	bge.n	800a67a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a61a:	8882      	ldrh	r2, [r0, #4]
 800a61c:	444a      	add	r2, r9
 800a61e:	b292      	uxth	r2, r2
 800a620:	fa0f fe82 	sxth.w	lr, r2
 800a624:	4577      	cmp	r7, lr
 800a626:	da28      	bge.n	800a67a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a628:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a62c:	88cb      	ldrh	r3, [r1, #6]
 800a62e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a632:	442b      	add	r3, r5
 800a634:	b21b      	sxth	r3, r3
 800a636:	429e      	cmp	r6, r3
 800a638:	da1f      	bge.n	800a67a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a63a:	88c3      	ldrh	r3, [r0, #6]
 800a63c:	4433      	add	r3, r6
 800a63e:	b29b      	uxth	r3, r3
 800a640:	fa0f fc83 	sxth.w	ip, r3
 800a644:	4565      	cmp	r5, ip
 800a646:	da18      	bge.n	800a67a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a648:	454f      	cmp	r7, r9
 800a64a:	bfb8      	it	lt
 800a64c:	464f      	movlt	r7, r9
 800a64e:	42b5      	cmp	r5, r6
 800a650:	bfb8      	it	lt
 800a652:	4635      	movlt	r5, r6
 800a654:	45f0      	cmp	r8, lr
 800a656:	bfd8      	it	le
 800a658:	4622      	movle	r2, r4
 800a65a:	1bd2      	subs	r2, r2, r7
 800a65c:	8082      	strh	r2, [r0, #4]
 800a65e:	884a      	ldrh	r2, [r1, #2]
 800a660:	88c9      	ldrh	r1, [r1, #6]
 800a662:	8007      	strh	r7, [r0, #0]
 800a664:	440a      	add	r2, r1
 800a666:	8045      	strh	r5, [r0, #2]
 800a668:	b292      	uxth	r2, r2
 800a66a:	b211      	sxth	r1, r2
 800a66c:	458c      	cmp	ip, r1
 800a66e:	bfa8      	it	ge
 800a670:	4613      	movge	r3, r2
 800a672:	1b5b      	subs	r3, r3, r5
 800a674:	80c3      	strh	r3, [r0, #6]
 800a676:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a67a:	2300      	movs	r3, #0
 800a67c:	8003      	strh	r3, [r0, #0]
 800a67e:	8043      	strh	r3, [r0, #2]
 800a680:	8083      	strh	r3, [r0, #4]
 800a682:	80c3      	strh	r3, [r0, #6]
 800a684:	e7f7      	b.n	800a676 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a686 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a686:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a68a:	2b00      	cmp	r3, #0
 800a68c:	dd06      	ble.n	800a69c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a68e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a692:	2800      	cmp	r0, #0
 800a694:	bfcc      	ite	gt
 800a696:	2000      	movgt	r0, #0
 800a698:	2001      	movle	r0, #1
 800a69a:	4770      	bx	lr
 800a69c:	2001      	movs	r0, #1
 800a69e:	4770      	bx	lr

0800a6a0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a6a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6a4:	2300      	movs	r3, #0
 800a6a6:	4604      	mov	r4, r0
 800a6a8:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800a6aa:	8003      	strh	r3, [r0, #0]
 800a6ac:	8043      	strh	r3, [r0, #2]
 800a6ae:	8083      	strh	r3, [r0, #4]
 800a6b0:	80c3      	strh	r3, [r0, #6]
 800a6b2:	2d00      	cmp	r5, #0
 800a6b4:	d040      	beq.n	800a738 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a6b6:	1d28      	adds	r0, r5, #4
 800a6b8:	f7ff ffe5 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a6bc:	b988      	cbnz	r0, 800a6e2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a6be:	4620      	mov	r0, r4
 800a6c0:	f7ff ffe1 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a6c4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a6c8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a6cc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a6d0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a6d4:	b138      	cbz	r0, 800a6e6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a6d6:	8022      	strh	r2, [r4, #0]
 800a6d8:	8063      	strh	r3, [r4, #2]
 800a6da:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a6de:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a6e2:	69ad      	ldr	r5, [r5, #24]
 800a6e4:	e7e5      	b.n	800a6b2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a6e6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a6ea:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a6ee:	4290      	cmp	r0, r2
 800a6f0:	4607      	mov	r7, r0
 800a6f2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a6f6:	460e      	mov	r6, r1
 800a6f8:	bfa8      	it	ge
 800a6fa:	4617      	movge	r7, r2
 800a6fc:	4299      	cmp	r1, r3
 800a6fe:	4472      	add	r2, lr
 800a700:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a704:	bfa8      	it	ge
 800a706:	461e      	movge	r6, r3
 800a708:	4440      	add	r0, r8
 800a70a:	4471      	add	r1, lr
 800a70c:	4463      	add	r3, ip
 800a70e:	b200      	sxth	r0, r0
 800a710:	8027      	strh	r7, [r4, #0]
 800a712:	b212      	sxth	r2, r2
 800a714:	8066      	strh	r6, [r4, #2]
 800a716:	b209      	sxth	r1, r1
 800a718:	b21b      	sxth	r3, r3
 800a71a:	4290      	cmp	r0, r2
 800a71c:	bfac      	ite	ge
 800a71e:	ebc7 0200 	rsbge	r2, r7, r0
 800a722:	ebc7 0202 	rsblt	r2, r7, r2
 800a726:	4299      	cmp	r1, r3
 800a728:	bfac      	ite	ge
 800a72a:	ebc6 0301 	rsbge	r3, r6, r1
 800a72e:	ebc6 0303 	rsblt	r3, r6, r3
 800a732:	80a2      	strh	r2, [r4, #4]
 800a734:	80e3      	strh	r3, [r4, #6]
 800a736:	e7d4      	b.n	800a6e2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a738:	4620      	mov	r0, r4
 800a73a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a73e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a73e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a742:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800a746:	b383      	cbz	r3, 800a7aa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a748:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a74a:	b374      	cbz	r4, 800a7aa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a74c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a750:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a754:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a758:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a75c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a760:	b303      	cbz	r3, 800a7a4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a762:	4668      	mov	r0, sp
 800a764:	1d21      	adds	r1, r4, #4
 800a766:	f8ad 5000 	strh.w	r5, [sp]
 800a76a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a76e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a772:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a776:	f7ff ff43 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 800a77a:	4668      	mov	r0, sp
 800a77c:	f7ff ff83 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a780:	b980      	cbnz	r0, 800a7a4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a782:	f8bd 3000 	ldrh.w	r3, [sp]
 800a786:	4669      	mov	r1, sp
 800a788:	88a2      	ldrh	r2, [r4, #4]
 800a78a:	4620      	mov	r0, r4
 800a78c:	1a9b      	subs	r3, r3, r2
 800a78e:	88e2      	ldrh	r2, [r4, #6]
 800a790:	f8ad 3000 	strh.w	r3, [sp]
 800a794:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a798:	1a9b      	subs	r3, r3, r2
 800a79a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a79e:	6823      	ldr	r3, [r4, #0]
 800a7a0:	689b      	ldr	r3, [r3, #8]
 800a7a2:	4798      	blx	r3
 800a7a4:	69a4      	ldr	r4, [r4, #24]
 800a7a6:	2c00      	cmp	r4, #0
 800a7a8:	d1d8      	bne.n	800a75c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a7aa:	b002      	add	sp, #8
 800a7ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a7b0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a7b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a7b2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800a7b6:	460d      	mov	r5, r1
 800a7b8:	4616      	mov	r6, r2
 800a7ba:	b323      	cbz	r3, 800a806 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a7bc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a7be:	b314      	cbz	r4, 800a806 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a7c0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a7c4:	b1eb      	cbz	r3, 800a802 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a7c6:	6828      	ldr	r0, [r5, #0]
 800a7c8:	466b      	mov	r3, sp
 800a7ca:	6869      	ldr	r1, [r5, #4]
 800a7cc:	c303      	stmia	r3!, {r0, r1}
 800a7ce:	4668      	mov	r0, sp
 800a7d0:	1d21      	adds	r1, r4, #4
 800a7d2:	f7ff ff15 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 800a7d6:	4668      	mov	r0, sp
 800a7d8:	f7ff ff55 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a7dc:	b988      	cbnz	r0, 800a802 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a7de:	f8bd 3000 	ldrh.w	r3, [sp]
 800a7e2:	4669      	mov	r1, sp
 800a7e4:	88a2      	ldrh	r2, [r4, #4]
 800a7e6:	4620      	mov	r0, r4
 800a7e8:	1a9b      	subs	r3, r3, r2
 800a7ea:	88e2      	ldrh	r2, [r4, #6]
 800a7ec:	f8ad 3000 	strh.w	r3, [sp]
 800a7f0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a7f4:	1a9b      	subs	r3, r3, r2
 800a7f6:	4632      	mov	r2, r6
 800a7f8:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a7fc:	6823      	ldr	r3, [r4, #0]
 800a7fe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800a800:	4798      	blx	r3
 800a802:	69a4      	ldr	r4, [r4, #24]
 800a804:	e7db      	b.n	800a7be <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a806:	b002      	add	sp, #8
 800a808:	bd70      	pop	{r4, r5, r6, pc}

0800a80a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a80a:	6803      	ldr	r3, [r0, #0]
 800a80c:	b513      	push	{r0, r1, r4, lr}
 800a80e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800a812:	2300      	movs	r3, #0
 800a814:	e9cd 3300 	strd	r3, r3, [sp]
 800a818:	466b      	mov	r3, sp
 800a81a:	47a0      	blx	r4
 800a81c:	b002      	add	sp, #8
 800a81e:	bd10      	pop	{r4, pc}

0800a820 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a820:	2301      	movs	r3, #1
 800a822:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a826:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a82a:	4770      	bx	lr

0800a82c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a82c:	2301      	movs	r3, #1
 800a82e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a832:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a836:	4770      	bx	lr

0800a838 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a838:	6843      	ldr	r3, [r0, #4]
 800a83a:	2201      	movs	r2, #1
 800a83c:	725a      	strb	r2, [r3, #9]
 800a83e:	6840      	ldr	r0, [r0, #4]
 800a840:	6803      	ldr	r3, [r0, #0]
 800a842:	691b      	ldr	r3, [r3, #16]
 800a844:	4718      	bx	r3

0800a846 <_ZN8touchgfx3HAL8flushDMAEv>:
 800a846:	6840      	ldr	r0, [r0, #4]
 800a848:	6803      	ldr	r3, [r0, #0]
 800a84a:	689b      	ldr	r3, [r3, #8]
 800a84c:	4718      	bx	r3

0800a84e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800a84e:	b530      	push	{r4, r5, lr}
 800a850:	b08b      	sub	sp, #44	@ 0x2c
 800a852:	6804      	ldr	r4, [r0, #0]
 800a854:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800a858:	9509      	str	r5, [sp, #36]	@ 0x24
 800a85a:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800a85e:	9508      	str	r5, [sp, #32]
 800a860:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800a864:	9507      	str	r5, [sp, #28]
 800a866:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800a86a:	9506      	str	r5, [sp, #24]
 800a86c:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800a870:	9505      	str	r5, [sp, #20]
 800a872:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800a876:	9504      	str	r5, [sp, #16]
 800a878:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800a87c:	9503      	str	r5, [sp, #12]
 800a87e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800a882:	9502      	str	r5, [sp, #8]
 800a884:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800a888:	e9cd 3500 	strd	r3, r5, [sp]
 800a88c:	4613      	mov	r3, r2
 800a88e:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800a890:	2200      	movs	r2, #0
 800a892:	47a0      	blx	r4
 800a894:	b00b      	add	sp, #44	@ 0x2c
 800a896:	bd30      	pop	{r4, r5, pc}

0800a898 <_ZN8touchgfx3HAL10beginFrameEv>:
 800a898:	4b04      	ldr	r3, [pc, #16]	@ (800a8ac <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a89a:	781b      	ldrb	r3, [r3, #0]
 800a89c:	b123      	cbz	r3, 800a8a8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a89e:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800a8a2:	f080 0001 	eor.w	r0, r0, #1
 800a8a6:	4770      	bx	lr
 800a8a8:	2001      	movs	r0, #1
 800a8aa:	4770      	bx	lr
 800a8ac:	200150aa 	.word	0x200150aa

0800a8b0 <_ZN8touchgfx3HAL8endFrameEv>:
 800a8b0:	b510      	push	{r4, lr}
 800a8b2:	4604      	mov	r4, r0
 800a8b4:	6840      	ldr	r0, [r0, #4]
 800a8b6:	6803      	ldr	r3, [r0, #0]
 800a8b8:	689b      	ldr	r3, [r3, #8]
 800a8ba:	4798      	blx	r3
 800a8bc:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800a8c0:	b113      	cbz	r3, 800a8c8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a8c2:	2301      	movs	r3, #1
 800a8c4:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800a8c8:	bd10      	pop	{r4, pc}

0800a8ca <_ZN8touchgfx3HAL10initializeEv>:
 800a8ca:	b510      	push	{r4, lr}
 800a8cc:	4604      	mov	r4, r0
 800a8ce:	f7f6 ffbf 	bl	8001850 <_ZN8touchgfx10OSWrappers10initializeEv>
 800a8d2:	f7f6 fe9d 	bl	8001610 <_ZN8touchgfx4GPIO4initEv>
 800a8d6:	6860      	ldr	r0, [r4, #4]
 800a8d8:	6803      	ldr	r3, [r0, #0]
 800a8da:	68db      	ldr	r3, [r3, #12]
 800a8dc:	4798      	blx	r3
 800a8de:	68e0      	ldr	r0, [r4, #12]
 800a8e0:	6803      	ldr	r3, [r0, #0]
 800a8e2:	689b      	ldr	r3, [r3, #8]
 800a8e4:	4798      	blx	r3
 800a8e6:	6823      	ldr	r3, [r4, #0]
 800a8e8:	4620      	mov	r0, r4
 800a8ea:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800a8ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a8f0:	4718      	bx	r3

0800a8f2 <_ZN8touchgfx3HAL9taskEntryEv>:
 800a8f2:	b508      	push	{r3, lr}
 800a8f4:	6803      	ldr	r3, [r0, #0]
 800a8f6:	4604      	mov	r4, r0
 800a8f8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a8fc:	4798      	blx	r3
 800a8fe:	6823      	ldr	r3, [r4, #0]
 800a900:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a902:	4620      	mov	r0, r4
 800a904:	4798      	blx	r3
 800a906:	f7f6 ffef 	bl	80018e8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800a90a:	6823      	ldr	r3, [r4, #0]
 800a90c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800a90e:	e7f8      	b.n	800a902 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800a910 <_ZN8touchgfx3HAL4tickEv>:
 800a910:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a912:	6803      	ldr	r3, [r0, #0]
 800a914:	4604      	mov	r4, r0
 800a916:	4d5b      	ldr	r5, [pc, #364]	@ (800aa84 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800a918:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800a91c:	4798      	blx	r3
 800a91e:	2800      	cmp	r0, #0
 800a920:	f000 8095 	beq.w	800aa4e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800a924:	2001      	movs	r0, #1
 800a926:	2600      	movs	r6, #0
 800a928:	f7f6 fdd8 	bl	80014dc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a92c:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800a930:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800a934:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800a938:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800a93c:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800a940:	b133      	cbz	r3, 800a950 <_ZN8touchgfx3HAL4tickEv+0x40>
 800a942:	6823      	ldr	r3, [r4, #0]
 800a944:	4620      	mov	r0, r4
 800a946:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800a94a:	4798      	blx	r3
 800a94c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800a950:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800a954:	2601      	movs	r6, #1
 800a956:	6862      	ldr	r2, [r4, #4]
 800a958:	f083 0301 	eor.w	r3, r3, #1
 800a95c:	702e      	strb	r6, [r5, #0]
 800a95e:	7253      	strb	r3, [r2, #9]
 800a960:	f003 f9da 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
 800a964:	6803      	ldr	r3, [r0, #0]
 800a966:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a968:	4798      	blx	r3
 800a96a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800a96e:	b90b      	cbnz	r3, 800a974 <_ZN8touchgfx3HAL4tickEv+0x64>
 800a970:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800a974:	f003 f9d0 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
 800a978:	6803      	ldr	r3, [r0, #0]
 800a97a:	695b      	ldr	r3, [r3, #20]
 800a97c:	4798      	blx	r3
 800a97e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800a980:	6803      	ldr	r3, [r0, #0]
 800a982:	691b      	ldr	r3, [r3, #16]
 800a984:	4798      	blx	r3
 800a986:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800a98a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800a98e:	3b01      	subs	r3, #1
 800a990:	b2db      	uxtb	r3, r3
 800a992:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800a996:	b10a      	cbz	r2, 800a99c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800a998:	2b00      	cmp	r3, #0
 800a99a:	d1eb      	bne.n	800a974 <_ZN8touchgfx3HAL4tickEv+0x64>
 800a99c:	4a3a      	ldr	r2, [pc, #232]	@ (800aa88 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800a99e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800a9a2:	7813      	ldrb	r3, [r2, #0]
 800a9a4:	3301      	adds	r3, #1
 800a9a6:	b25b      	sxtb	r3, r3
 800a9a8:	4299      	cmp	r1, r3
 800a9aa:	7013      	strb	r3, [r2, #0]
 800a9ac:	dc10      	bgt.n	800a9d0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800a9ae:	2300      	movs	r3, #0
 800a9b0:	68e0      	ldr	r0, [r4, #12]
 800a9b2:	a902      	add	r1, sp, #8
 800a9b4:	7013      	strb	r3, [r2, #0]
 800a9b6:	aa03      	add	r2, sp, #12
 800a9b8:	6803      	ldr	r3, [r0, #0]
 800a9ba:	68db      	ldr	r3, [r3, #12]
 800a9bc:	4798      	blx	r3
 800a9be:	6823      	ldr	r3, [r4, #0]
 800a9c0:	2800      	cmp	r0, #0
 800a9c2:	d050      	beq.n	800aa66 <_ZN8touchgfx3HAL4tickEv+0x156>
 800a9c4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800a9c8:	4620      	mov	r0, r4
 800a9ca:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a9ce:	4798      	blx	r3
 800a9d0:	2300      	movs	r3, #0
 800a9d2:	6960      	ldr	r0, [r4, #20]
 800a9d4:	f88d 3007 	strb.w	r3, [sp, #7]
 800a9d8:	b158      	cbz	r0, 800a9f2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800a9da:	6803      	ldr	r3, [r0, #0]
 800a9dc:	f10d 0107 	add.w	r1, sp, #7
 800a9e0:	68db      	ldr	r3, [r3, #12]
 800a9e2:	4798      	blx	r3
 800a9e4:	b128      	cbz	r0, 800a9f2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800a9e6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800a9e8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a9ec:	6803      	ldr	r3, [r0, #0]
 800a9ee:	68db      	ldr	r3, [r3, #12]
 800a9f0:	4798      	blx	r3
 800a9f2:	f104 001c 	add.w	r0, r4, #28
 800a9f6:	f013 fd9b 	bl	801e530 <_ZN8touchgfx8Gestures4tickEv>
 800a9fa:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800a9fe:	b30b      	cbz	r3, 800aa44 <_ZN8touchgfx3HAL4tickEv+0x134>
 800aa00:	6920      	ldr	r0, [r4, #16]
 800aa02:	6803      	ldr	r3, [r0, #0]
 800aa04:	691b      	ldr	r3, [r3, #16]
 800aa06:	4798      	blx	r3
 800aa08:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800aa0a:	4606      	mov	r6, r0
 800aa0c:	b903      	cbnz	r3, 800aa10 <_ZN8touchgfx3HAL4tickEv+0x100>
 800aa0e:	6760      	str	r0, [r4, #116]	@ 0x74
 800aa10:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800aa12:	4a1e      	ldr	r2, [pc, #120]	@ (800aa8c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800aa14:	1af3      	subs	r3, r6, r3
 800aa16:	4293      	cmp	r3, r2
 800aa18:	d914      	bls.n	800aa44 <_ZN8touchgfx3HAL4tickEv+0x134>
 800aa1a:	6920      	ldr	r0, [r4, #16]
 800aa1c:	6803      	ldr	r3, [r0, #0]
 800aa1e:	699b      	ldr	r3, [r3, #24]
 800aa20:	4798      	blx	r3
 800aa22:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800aa24:	2264      	movs	r2, #100	@ 0x64
 800aa26:	1af3      	subs	r3, r6, r3
 800aa28:	fbb3 f3f2 	udiv	r3, r3, r2
 800aa2c:	fbb0 f0f3 	udiv	r0, r0, r3
 800aa30:	2800      	cmp	r0, #0
 800aa32:	dc1d      	bgt.n	800aa70 <_ZN8touchgfx3HAL4tickEv+0x160>
 800aa34:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800aa38:	6920      	ldr	r0, [r4, #16]
 800aa3a:	2100      	movs	r1, #0
 800aa3c:	6803      	ldr	r3, [r0, #0]
 800aa3e:	69db      	ldr	r3, [r3, #28]
 800aa40:	4798      	blx	r3
 800aa42:	6766      	str	r6, [r4, #116]	@ 0x74
 800aa44:	f003 f968 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
 800aa48:	6803      	ldr	r3, [r0, #0]
 800aa4a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800aa4c:	4798      	blx	r3
 800aa4e:	6823      	ldr	r3, [r4, #0]
 800aa50:	4620      	mov	r0, r4
 800aa52:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800aa56:	4798      	blx	r3
 800aa58:	2001      	movs	r0, #1
 800aa5a:	f7f6 fd6f 	bl	800153c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800aa5e:	2300      	movs	r3, #0
 800aa60:	702b      	strb	r3, [r5, #0]
 800aa62:	b004      	add	sp, #16
 800aa64:	bd70      	pop	{r4, r5, r6, pc}
 800aa66:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800aa6a:	4620      	mov	r0, r4
 800aa6c:	4798      	blx	r3
 800aa6e:	e7af      	b.n	800a9d0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800aa70:	2863      	cmp	r0, #99	@ 0x63
 800aa72:	bfcb      	itete	gt
 800aa74:	2300      	movgt	r3, #0
 800aa76:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800aa7a:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800aa7e:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800aa82:	e7d9      	b.n	800aa38 <_ZN8touchgfx3HAL4tickEv+0x128>
 800aa84:	200150b0 	.word	0x200150b0
 800aa88:	200150b1 	.word	0x200150b1
 800aa8c:	05f5e100 	.word	0x05f5e100

0800aa90 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800aa90:	b510      	push	{r4, lr}
 800aa92:	4604      	mov	r4, r0
 800aa94:	f7f6 ff0c 	bl	80018b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800aa98:	2200      	movs	r2, #0
 800aa9a:	6863      	ldr	r3, [r4, #4]
 800aa9c:	729a      	strb	r2, [r3, #10]
 800aa9e:	bd10      	pop	{r4, pc}

0800aaa0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800aaa0:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800aaa2:	301c      	adds	r0, #28
 800aaa4:	f013 bd42 	b.w	801e52c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800aaa8 <_ZN8touchgfx3HAL5touchEll>:
 800aaa8:	b530      	push	{r4, r5, lr}
 800aaaa:	b087      	sub	sp, #28
 800aaac:	4604      	mov	r4, r0
 800aaae:	a804      	add	r0, sp, #16
 800aab0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800aab4:	f002 ff18 	bl	800d8e8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800aab8:	9b04      	ldr	r3, [sp, #16]
 800aaba:	a906      	add	r1, sp, #24
 800aabc:	a803      	add	r0, sp, #12
 800aabe:	f8ad 300c 	strh.w	r3, [sp, #12]
 800aac2:	9b05      	ldr	r3, [sp, #20]
 800aac4:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800aac8:	f002 ff60 	bl	800d98c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800aacc:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800aad0:	f104 001c 	add.w	r0, r4, #28
 800aad4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800aad8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800aadc:	b189      	cbz	r1, 800ab02 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800aade:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800aae2:	9300      	str	r3, [sp, #0]
 800aae4:	4613      	mov	r3, r2
 800aae6:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800aaea:	462a      	mov	r2, r5
 800aaec:	f013 fd2e 	bl	801e54c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800aaf0:	b128      	cbz	r0, 800aafe <_ZN8touchgfx3HAL5touchEll+0x56>
 800aaf2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800aaf6:	6623      	str	r3, [r4, #96]	@ 0x60
 800aaf8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800aafc:	6663      	str	r3, [r4, #100]	@ 0x64
 800aafe:	b007      	add	sp, #28
 800ab00:	bd30      	pop	{r4, r5, pc}
 800ab02:	f013 fd63 	bl	801e5cc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ab06:	2301      	movs	r3, #1
 800ab08:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800ab0c:	e7f1      	b.n	800aaf2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800ab0e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800ab0e:	b510      	push	{r4, lr}
 800ab10:	2b00      	cmp	r3, #0
 800ab12:	d046      	beq.n	800aba2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ab14:	ea81 0002 	eor.w	r0, r1, r2
 800ab18:	07c4      	lsls	r4, r0, #31
 800ab1a:	d508      	bpl.n	800ab2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800ab1c:	440b      	add	r3, r1
 800ab1e:	3a01      	subs	r2, #1
 800ab20:	428b      	cmp	r3, r1
 800ab22:	d93e      	bls.n	800aba2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ab24:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ab28:	f801 0b01 	strb.w	r0, [r1], #1
 800ab2c:	e7f8      	b.n	800ab20 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800ab2e:	07d0      	lsls	r0, r2, #31
 800ab30:	bf42      	ittt	mi
 800ab32:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800ab36:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800ab3a:	f801 0b01 	strbmi.w	r0, [r1], #1
 800ab3e:	2b01      	cmp	r3, #1
 800ab40:	d911      	bls.n	800ab66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ab42:	ea81 0402 	eor.w	r4, r1, r2
 800ab46:	4610      	mov	r0, r2
 800ab48:	07a4      	lsls	r4, r4, #30
 800ab4a:	d022      	beq.n	800ab92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800ab4c:	f023 0401 	bic.w	r4, r3, #1
 800ab50:	440c      	add	r4, r1
 800ab52:	428c      	cmp	r4, r1
 800ab54:	4602      	mov	r2, r0
 800ab56:	d904      	bls.n	800ab62 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800ab58:	8812      	ldrh	r2, [r2, #0]
 800ab5a:	3002      	adds	r0, #2
 800ab5c:	f821 2b02 	strh.w	r2, [r1], #2
 800ab60:	e7f7      	b.n	800ab52 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800ab62:	f003 0301 	and.w	r3, r3, #1
 800ab66:	f023 0003 	bic.w	r0, r3, #3
 800ab6a:	4408      	add	r0, r1
 800ab6c:	4288      	cmp	r0, r1
 800ab6e:	4614      	mov	r4, r2
 800ab70:	d904      	bls.n	800ab7c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800ab72:	6824      	ldr	r4, [r4, #0]
 800ab74:	3204      	adds	r2, #4
 800ab76:	f841 4b04 	str.w	r4, [r1], #4
 800ab7a:	e7f7      	b.n	800ab6c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800ab7c:	f003 0303 	and.w	r3, r3, #3
 800ab80:	3a01      	subs	r2, #1
 800ab82:	440b      	add	r3, r1
 800ab84:	428b      	cmp	r3, r1
 800ab86:	d90c      	bls.n	800aba2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ab88:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ab8c:	f801 0b01 	strb.w	r0, [r1], #1
 800ab90:	e7f8      	b.n	800ab84 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800ab92:	0790      	lsls	r0, r2, #30
 800ab94:	d0e7      	beq.n	800ab66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ab96:	f832 0b02 	ldrh.w	r0, [r2], #2
 800ab9a:	3b02      	subs	r3, #2
 800ab9c:	f821 0b02 	strh.w	r0, [r1], #2
 800aba0:	e7e1      	b.n	800ab66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800aba2:	2001      	movs	r0, #1
 800aba4:	bd10      	pop	{r4, pc}

0800aba6 <_ZN8touchgfx3HAL7noTouchEv>:
 800aba6:	b510      	push	{r4, lr}
 800aba8:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800abac:	4604      	mov	r4, r0
 800abae:	b153      	cbz	r3, 800abc6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800abb0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800abb4:	2101      	movs	r1, #1
 800abb6:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800abba:	301c      	adds	r0, #28
 800abbc:	f013 fd06 	bl	801e5cc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800abc0:	2300      	movs	r3, #0
 800abc2:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800abc6:	bd10      	pop	{r4, pc}

0800abc8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800abc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800abcc:	b085      	sub	sp, #20
 800abce:	4604      	mov	r4, r0
 800abd0:	2000      	movs	r0, #0
 800abd2:	4699      	mov	r9, r3
 800abd4:	ad04      	add	r5, sp, #16
 800abd6:	460f      	mov	r7, r1
 800abd8:	4690      	mov	r8, r2
 800abda:	f845 0d04 	str.w	r0, [r5, #-4]!
 800abde:	69a0      	ldr	r0, [r4, #24]
 800abe0:	6806      	ldr	r6, [r0, #0]
 800abe2:	9501      	str	r5, [sp, #4]
 800abe4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800abe8:	9500      	str	r5, [sp, #0]
 800abea:	6835      	ldr	r5, [r6, #0]
 800abec:	47a8      	blx	r5
 800abee:	4d10      	ldr	r5, [pc, #64]	@ (800ac30 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800abf0:	4606      	mov	r6, r0
 800abf2:	f8a5 9000 	strh.w	r9, [r5]
 800abf6:	f7f7 fbdb 	bl	80023b0 <_ZN8touchgfx3HAL3lcdEv>
 800abfa:	6803      	ldr	r3, [r0, #0]
 800abfc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800abfe:	4798      	blx	r3
 800ac00:	b128      	cbz	r0, 800ac0e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800ac02:	2801      	cmp	r0, #1
 800ac04:	d00b      	beq.n	800ac1e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800ac06:	4630      	mov	r0, r6
 800ac08:	b005      	add	sp, #20
 800ac0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ac0e:	882b      	ldrh	r3, [r5, #0]
 800ac10:	fb08 7203 	mla	r2, r8, r3, r7
 800ac14:	9b03      	ldr	r3, [sp, #12]
 800ac16:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800ac1a:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800ac1c:	e7f3      	b.n	800ac06 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800ac1e:	882a      	ldrh	r2, [r5, #0]
 800ac20:	9b03      	ldr	r3, [sp, #12]
 800ac22:	fb08 7202 	mla	r2, r8, r2, r7
 800ac26:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800ac2a:	1a9a      	subs	r2, r3, r2
 800ac2c:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800ac2e:	e7ea      	b.n	800ac06 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800ac30:	200150a6 	.word	0x200150a6

0800ac34 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800ac34:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ac36:	b08b      	sub	sp, #44	@ 0x2c
 800ac38:	4617      	mov	r7, r2
 800ac3a:	4604      	mov	r4, r0
 800ac3c:	460e      	mov	r6, r1
 800ac3e:	461d      	mov	r5, r3
 800ac40:	f7f7 fbb6 	bl	80023b0 <_ZN8touchgfx3HAL3lcdEv>
 800ac44:	6803      	ldr	r3, [r0, #0]
 800ac46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ac48:	4798      	blx	r3
 800ac4a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800ac4e:	9007      	str	r0, [sp, #28]
 800ac50:	4631      	mov	r1, r6
 800ac52:	6822      	ldr	r2, [r4, #0]
 800ac54:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800ac58:	4b0c      	ldr	r3, [pc, #48]	@ (800ac8c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800ac5a:	4620      	mov	r0, r4
 800ac5c:	881b      	ldrh	r3, [r3, #0]
 800ac5e:	9306      	str	r3, [sp, #24]
 800ac60:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800ac64:	9305      	str	r3, [sp, #20]
 800ac66:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800ac6a:	9304      	str	r3, [sp, #16]
 800ac6c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ac70:	9303      	str	r3, [sp, #12]
 800ac72:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ac76:	9302      	str	r3, [sp, #8]
 800ac78:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800ac7c:	e9cd 5300 	strd	r5, r3, [sp]
 800ac80:	463b      	mov	r3, r7
 800ac82:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800ac84:	2200      	movs	r2, #0
 800ac86:	47a8      	blx	r5
 800ac88:	b00b      	add	sp, #44	@ 0x2c
 800ac8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac8c:	200150a6 	.word	0x200150a6

0800ac90 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800ac90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ac94:	4698      	mov	r8, r3
 800ac96:	6803      	ldr	r3, [r0, #0]
 800ac98:	b08b      	sub	sp, #44	@ 0x2c
 800ac9a:	4617      	mov	r7, r2
 800ac9c:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800ac9e:	460e      	mov	r6, r1
 800aca0:	4b13      	ldr	r3, [pc, #76]	@ (800acf0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800aca2:	4604      	mov	r4, r0
 800aca4:	f8b3 9000 	ldrh.w	r9, [r3]
 800aca8:	f7f7 fb82 	bl	80023b0 <_ZN8touchgfx3HAL3lcdEv>
 800acac:	6803      	ldr	r3, [r0, #0]
 800acae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800acb0:	4798      	blx	r3
 800acb2:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800acb6:	2200      	movs	r2, #0
 800acb8:	4631      	mov	r1, r6
 800acba:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800acbe:	2302      	movs	r3, #2
 800acc0:	4620      	mov	r0, r4
 800acc2:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800acc6:	2301      	movs	r3, #1
 800acc8:	9305      	str	r3, [sp, #20]
 800acca:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800acce:	9304      	str	r3, [sp, #16]
 800acd0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800acd4:	9303      	str	r3, [sp, #12]
 800acd6:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800acda:	9302      	str	r3, [sp, #8]
 800acdc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ace0:	e9cd 8300 	strd	r8, r3, [sp]
 800ace4:	463b      	mov	r3, r7
 800ace6:	47a8      	blx	r5
 800ace8:	b00b      	add	sp, #44	@ 0x2c
 800acea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800acee:	bf00      	nop
 800acf0:	200150a6 	.word	0x200150a6

0800acf4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800acf4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800acf8:	4698      	mov	r8, r3
 800acfa:	6803      	ldr	r3, [r0, #0]
 800acfc:	b087      	sub	sp, #28
 800acfe:	460e      	mov	r6, r1
 800ad00:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800ad02:	4617      	mov	r7, r2
 800ad04:	4b0f      	ldr	r3, [pc, #60]	@ (800ad44 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800ad06:	4604      	mov	r4, r0
 800ad08:	f8b3 9000 	ldrh.w	r9, [r3]
 800ad0c:	f7f7 fb50 	bl	80023b0 <_ZN8touchgfx3HAL3lcdEv>
 800ad10:	6803      	ldr	r3, [r0, #0]
 800ad12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ad14:	4798      	blx	r3
 800ad16:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800ad1a:	463a      	mov	r2, r7
 800ad1c:	4631      	mov	r1, r6
 800ad1e:	f8cd 900c 	str.w	r9, [sp, #12]
 800ad22:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800ad26:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800ad2a:	4620      	mov	r0, r4
 800ad2c:	9302      	str	r3, [sp, #8]
 800ad2e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800ad32:	9301      	str	r3, [sp, #4]
 800ad34:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800ad38:	9300      	str	r3, [sp, #0]
 800ad3a:	4643      	mov	r3, r8
 800ad3c:	47a8      	blx	r5
 800ad3e:	b007      	add	sp, #28
 800ad40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ad44:	200150a6 	.word	0x200150a6

0800ad48 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800ad48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad4c:	4604      	mov	r4, r0
 800ad4e:	b08f      	sub	sp, #60	@ 0x3c
 800ad50:	4610      	mov	r0, r2
 800ad52:	460d      	mov	r5, r1
 800ad54:	4691      	mov	r9, r2
 800ad56:	461e      	mov	r6, r3
 800ad58:	f005 ffba 	bl	8010cd0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ad5c:	2800      	cmp	r0, #0
 800ad5e:	f000 809d 	beq.w	800ae9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800ad62:	6823      	ldr	r3, [r4, #0]
 800ad64:	4620      	mov	r0, r4
 800ad66:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800af00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ad6a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800ad6e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ad70:	4798      	blx	r3
 800ad72:	6823      	ldr	r3, [r4, #0]
 800ad74:	4620      	mov	r0, r4
 800ad76:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800af04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800ad7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ad7c:	4798      	blx	r3
 800ad7e:	f8bb 3000 	ldrh.w	r3, [fp]
 800ad82:	4f5c      	ldr	r7, [pc, #368]	@ (800aef4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ad84:	9301      	str	r3, [sp, #4]
 800ad86:	f8ba 3000 	ldrh.w	r3, [sl]
 800ad8a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800ad8e:	4640      	mov	r0, r8
 800ad90:	9302      	str	r3, [sp, #8]
 800ad92:	883b      	ldrh	r3, [r7, #0]
 800ad94:	9303      	str	r3, [sp, #12]
 800ad96:	4b58      	ldr	r3, [pc, #352]	@ (800aef8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ad98:	881a      	ldrh	r2, [r3, #0]
 800ad9a:	9305      	str	r3, [sp, #20]
 800ad9c:	9204      	str	r2, [sp, #16]
 800ad9e:	f006 f82b 	bl	8010df8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ada2:	8038      	strh	r0, [r7, #0]
 800ada4:	4640      	mov	r0, r8
 800ada6:	f006 f85b 	bl	8010e60 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800adaa:	9b05      	ldr	r3, [sp, #20]
 800adac:	b280      	uxth	r0, r0
 800adae:	8018      	strh	r0, [r3, #0]
 800adb0:	4b52      	ldr	r3, [pc, #328]	@ (800aefc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800adb2:	781b      	ldrb	r3, [r3, #0]
 800adb4:	2b00      	cmp	r3, #0
 800adb6:	d174      	bne.n	800aea2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800adb8:	883b      	ldrh	r3, [r7, #0]
 800adba:	f8aa 0000 	strh.w	r0, [sl]
 800adbe:	f8ab 3000 	strh.w	r3, [fp]
 800adc2:	4648      	mov	r0, r9
 800adc4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800adc8:	f005 ff82 	bl	8010cd0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800adcc:	2200      	movs	r2, #0
 800adce:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800add2:	4611      	mov	r1, r2
 800add4:	4628      	mov	r0, r5
 800add6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800adda:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800adde:	f7f7 f9f2 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
 800ade2:	2301      	movs	r3, #1
 800ade4:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800ade8:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800adec:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800adf0:	2b00      	cmp	r3, #0
 800adf2:	dd5c      	ble.n	800aeae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800adf4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800adf8:	2b00      	cmp	r3, #0
 800adfa:	dd58      	ble.n	800aeae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800adfc:	462a      	mov	r2, r5
 800adfe:	ab0a      	add	r3, sp, #40	@ 0x28
 800ae00:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ae04:	6851      	ldr	r1, [r2, #4]
 800ae06:	c303      	stmia	r3!, {r0, r1}
 800ae08:	4631      	mov	r1, r6
 800ae0a:	a80a      	add	r0, sp, #40	@ 0x28
 800ae0c:	f7ff fbf8 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 800ae10:	4b38      	ldr	r3, [pc, #224]	@ (800aef4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ae12:	2100      	movs	r1, #0
 800ae14:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ae18:	4b37      	ldr	r3, [pc, #220]	@ (800aef8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ae1a:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800ae1e:	aa0a      	add	r2, sp, #40	@ 0x28
 800ae20:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ae24:	910c      	str	r1, [sp, #48]	@ 0x30
 800ae26:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ae2a:	ab08      	add	r3, sp, #32
 800ae2c:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ae30:	e883 0003 	stmia.w	r3, {r0, r1}
 800ae34:	4618      	mov	r0, r3
 800ae36:	a90c      	add	r1, sp, #48	@ 0x30
 800ae38:	f7ff fbe2 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 800ae3c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800ae3e:	2b00      	cmp	r3, #0
 800ae40:	d13c      	bne.n	800aebc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800ae42:	2000      	movs	r0, #0
 800ae44:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800ae48:	2600      	movs	r6, #0
 800ae4a:	696b      	ldr	r3, [r5, #20]
 800ae4c:	a908      	add	r1, sp, #32
 800ae4e:	682a      	ldr	r2, [r5, #0]
 800ae50:	4628      	mov	r0, r5
 800ae52:	9305      	str	r3, [sp, #20]
 800ae54:	616e      	str	r6, [r5, #20]
 800ae56:	6892      	ldr	r2, [r2, #8]
 800ae58:	4790      	blx	r2
 800ae5a:	9b05      	ldr	r3, [sp, #20]
 800ae5c:	4652      	mov	r2, sl
 800ae5e:	4649      	mov	r1, r9
 800ae60:	616b      	str	r3, [r5, #20]
 800ae62:	4628      	mov	r0, r5
 800ae64:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800ae68:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800ae6c:	f7f7 f9ab 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
 800ae70:	9a01      	ldr	r2, [sp, #4]
 800ae72:	4b23      	ldr	r3, [pc, #140]	@ (800af00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800ae74:	4620      	mov	r0, r4
 800ae76:	801a      	strh	r2, [r3, #0]
 800ae78:	9a02      	ldr	r2, [sp, #8]
 800ae7a:	4b22      	ldr	r3, [pc, #136]	@ (800af04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800ae7c:	801a      	strh	r2, [r3, #0]
 800ae7e:	9a03      	ldr	r2, [sp, #12]
 800ae80:	4b1c      	ldr	r3, [pc, #112]	@ (800aef4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ae82:	801a      	strh	r2, [r3, #0]
 800ae84:	4b1c      	ldr	r3, [pc, #112]	@ (800aef8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ae86:	9a04      	ldr	r2, [sp, #16]
 800ae88:	801a      	strh	r2, [r3, #0]
 800ae8a:	6823      	ldr	r3, [r4, #0]
 800ae8c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800ae90:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ae92:	4798      	blx	r3
 800ae94:	6823      	ldr	r3, [r4, #0]
 800ae96:	4620      	mov	r0, r4
 800ae98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ae9a:	4798      	blx	r3
 800ae9c:	b00f      	add	sp, #60	@ 0x3c
 800ae9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aea2:	883b      	ldrh	r3, [r7, #0]
 800aea4:	f8ab 0000 	strh.w	r0, [fp]
 800aea8:	f8aa 3000 	strh.w	r3, [sl]
 800aeac:	e789      	b.n	800adc2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800aeae:	462a      	mov	r2, r5
 800aeb0:	ab0a      	add	r3, sp, #40	@ 0x28
 800aeb2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800aeb6:	6851      	ldr	r1, [r2, #4]
 800aeb8:	c303      	stmia	r3!, {r0, r1}
 800aeba:	e7a9      	b.n	800ae10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800aebc:	a807      	add	r0, sp, #28
 800aebe:	f006 f90b 	bl	80110d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800aec2:	4606      	mov	r6, r0
 800aec4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800aec6:	6803      	ldr	r3, [r0, #0]
 800aec8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aeca:	4798      	blx	r3
 800aecc:	4286      	cmp	r6, r0
 800aece:	d1b8      	bne.n	800ae42 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800aed0:	f7f7 fa6e 	bl	80023b0 <_ZN8touchgfx3HAL3lcdEv>
 800aed4:	6803      	ldr	r3, [r0, #0]
 800aed6:	4606      	mov	r6, r0
 800aed8:	a807      	add	r0, sp, #28
 800aeda:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800aedc:	9305      	str	r3, [sp, #20]
 800aede:	f006 f8fb 	bl	80110d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800aee2:	9b05      	ldr	r3, [sp, #20]
 800aee4:	4601      	mov	r1, r0
 800aee6:	4630      	mov	r0, r6
 800aee8:	4798      	blx	r3
 800aeea:	f080 0001 	eor.w	r0, r0, #1
 800aeee:	b2c0      	uxtb	r0, r0
 800aef0:	e7a8      	b.n	800ae44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800aef2:	bf00      	nop
 800aef4:	200150a0 	.word	0x200150a0
 800aef8:	200150a2 	.word	0x200150a2
 800aefc:	200150a4 	.word	0x200150a4
 800af00:	200150a6 	.word	0x200150a6
 800af04:	200150a8 	.word	0x200150a8

0800af08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800af08:	4b07      	ldr	r3, [pc, #28]	@ (800af28 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800af0a:	b510      	push	{r4, lr}
 800af0c:	781b      	ldrb	r3, [r3, #0]
 800af0e:	4604      	mov	r4, r0
 800af10:	b13b      	cbz	r3, 800af22 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800af12:	6803      	ldr	r3, [r0, #0]
 800af14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800af16:	4798      	blx	r3
 800af18:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800af1a:	4283      	cmp	r3, r0
 800af1c:	d101      	bne.n	800af22 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800af1e:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800af20:	bd10      	pop	{r4, pc}
 800af22:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800af24:	e7fc      	b.n	800af20 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800af26:	bf00      	nop
 800af28:	200150aa 	.word	0x200150aa

0800af2c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800af2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af30:	461d      	mov	r5, r3
 800af32:	b08a      	sub	sp, #40	@ 0x28
 800af34:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800af38:	4690      	mov	r8, r2
 800af3a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800af3e:	2400      	movs	r4, #0
 800af40:	4607      	mov	r7, r0
 800af42:	fb06 8505 	mla	r5, r6, r5, r8
 800af46:	9404      	str	r4, [sp, #16]
 800af48:	f88d 4020 	strb.w	r4, [sp, #32]
 800af4c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800af50:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800af54:	f8ad 3018 	strh.w	r3, [sp, #24]
 800af58:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800af5c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800af60:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800af64:	f8ad 301c 	strh.w	r3, [sp, #28]
 800af68:	f7ff ffce 	bl	800af08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800af6c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800af70:	6878      	ldr	r0, [r7, #4]
 800af72:	f8ad 601e 	strh.w	r6, [sp, #30]
 800af76:	a901      	add	r1, sp, #4
 800af78:	9505      	str	r5, [sp, #20]
 800af7a:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800af7e:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800af82:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800af86:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800af8a:	6803      	ldr	r3, [r0, #0]
 800af8c:	685b      	ldr	r3, [r3, #4]
 800af8e:	4798      	blx	r3
 800af90:	b00a      	add	sp, #40	@ 0x28
 800af92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800af96 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800af96:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800af9a:	b08b      	sub	sp, #44	@ 0x2c
 800af9c:	2400      	movs	r4, #0
 800af9e:	4691      	mov	r9, r2
 800afa0:	461d      	mov	r5, r3
 800afa2:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800afa6:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800afaa:	4688      	mov	r8, r1
 800afac:	4607      	mov	r7, r0
 800afae:	9404      	str	r4, [sp, #16]
 800afb0:	fb06 9505 	mla	r5, r6, r5, r9
 800afb4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800afb8:	f7ff ffa6 	bl	800af08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800afbc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800afc0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800afc4:	6878      	ldr	r0, [r7, #4]
 800afc6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800afca:	a901      	add	r1, sp, #4
 800afcc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800afd0:	9505      	str	r5, [sp, #20]
 800afd2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800afd6:	f8ad 401c 	strh.w	r4, [sp, #28]
 800afda:	f8ad 601e 	strh.w	r6, [sp, #30]
 800afde:	f8cd 8010 	str.w	r8, [sp, #16]
 800afe2:	f8ad 4020 	strh.w	r4, [sp, #32]
 800afe6:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800afea:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800afee:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800aff2:	6803      	ldr	r3, [r0, #0]
 800aff4:	685b      	ldr	r3, [r3, #4]
 800aff6:	4798      	blx	r3
 800aff8:	b00b      	add	sp, #44	@ 0x2c
 800affa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b000 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b000:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b004:	b08a      	sub	sp, #40	@ 0x28
 800b006:	4698      	mov	r8, r3
 800b008:	2300      	movs	r3, #0
 800b00a:	4606      	mov	r6, r0
 800b00c:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800b010:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800b014:	2d0b      	cmp	r5, #11
 800b016:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800b01a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800b01e:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800b022:	9304      	str	r3, [sp, #16]
 800b024:	d137      	bne.n	800b096 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b026:	2380      	movs	r3, #128	@ 0x80
 800b028:	f88d 0020 	strb.w	r0, [sp, #32]
 800b02c:	4630      	mov	r0, r6
 800b02e:	9203      	str	r2, [sp, #12]
 800b030:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b034:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b038:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b03c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b040:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b044:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b048:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b04c:	f7ff ff5c 	bl	800af08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b050:	2c0b      	cmp	r4, #11
 800b052:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800b056:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b05a:	bf94      	ite	ls
 800b05c:	4b19      	ldrls	r3, [pc, #100]	@ (800b0c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b05e:	2100      	movhi	r1, #0
 800b060:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800b064:	bf98      	it	ls
 800b066:	5d19      	ldrbls	r1, [r3, r4]
 800b068:	fb02 8307 	mla	r3, r2, r7, r8
 800b06c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b070:	10c9      	asrs	r1, r1, #3
 800b072:	fb01 0003 	mla	r0, r1, r3, r0
 800b076:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800b07a:	a901      	add	r1, sp, #4
 800b07c:	9005      	str	r0, [sp, #20]
 800b07e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b082:	2300      	movs	r3, #0
 800b084:	6870      	ldr	r0, [r6, #4]
 800b086:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b08a:	6803      	ldr	r3, [r0, #0]
 800b08c:	685b      	ldr	r3, [r3, #4]
 800b08e:	4798      	blx	r3
 800b090:	b00a      	add	sp, #40	@ 0x28
 800b092:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b096:	2d02      	cmp	r5, #2
 800b098:	d109      	bne.n	800b0ae <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b09a:	28ff      	cmp	r0, #255	@ 0xff
 800b09c:	d105      	bne.n	800b0aa <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b09e:	f1bc 0f00 	cmp.w	ip, #0
 800b0a2:	bf14      	ite	ne
 800b0a4:	2340      	movne	r3, #64	@ 0x40
 800b0a6:	2320      	moveq	r3, #32
 800b0a8:	e7be      	b.n	800b028 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b0aa:	2340      	movs	r3, #64	@ 0x40
 800b0ac:	e7bc      	b.n	800b028 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b0ae:	28ff      	cmp	r0, #255	@ 0xff
 800b0b0:	d105      	bne.n	800b0be <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b0b2:	f1bc 0f00 	cmp.w	ip, #0
 800b0b6:	bf14      	ite	ne
 800b0b8:	2304      	movne	r3, #4
 800b0ba:	2301      	moveq	r3, #1
 800b0bc:	e7b4      	b.n	800b028 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b0be:	2304      	movs	r3, #4
 800b0c0:	e7b2      	b.n	800b028 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b0c2:	bf00      	nop
 800b0c4:	08020f34 	.word	0x08020f34

0800b0c8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b0c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b0cc:	b08b      	sub	sp, #44	@ 0x2c
 800b0ce:	461d      	mov	r5, r3
 800b0d0:	2400      	movs	r4, #0
 800b0d2:	4688      	mov	r8, r1
 800b0d4:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800b0d8:	4693      	mov	fp, r2
 800b0da:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b0de:	4607      	mov	r7, r0
 800b0e0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800b0e4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800b0e8:	9404      	str	r4, [sp, #16]
 800b0ea:	bf14      	ite	ne
 800b0ec:	2308      	movne	r3, #8
 800b0ee:	2302      	moveq	r3, #2
 800b0f0:	fb05 b50a 	mla	r5, r5, sl, fp
 800b0f4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b0f8:	f7ff ff06 	bl	800af08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b0fc:	2e0b      	cmp	r6, #11
 800b0fe:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800b102:	a901      	add	r1, sp, #4
 800b104:	bf98      	it	ls
 800b106:	4b13      	ldrls	r3, [pc, #76]	@ (800b154 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b108:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b10c:	bf98      	it	ls
 800b10e:	5d9c      	ldrbls	r4, [r3, r6]
 800b110:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b114:	10e4      	asrs	r4, r4, #3
 800b116:	f8cd 8010 	str.w	r8, [sp, #16]
 800b11a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b11e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b122:	fb04 0405 	mla	r4, r4, r5, r0
 800b126:	6878      	ldr	r0, [r7, #4]
 800b128:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b12c:	2300      	movs	r3, #0
 800b12e:	9405      	str	r4, [sp, #20]
 800b130:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b134:	f88d 9020 	strb.w	r9, [sp, #32]
 800b138:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800b13c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b140:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800b144:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800b148:	6803      	ldr	r3, [r0, #0]
 800b14a:	685b      	ldr	r3, [r3, #4]
 800b14c:	4798      	blx	r3
 800b14e:	b00b      	add	sp, #44	@ 0x2c
 800b150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b154:	08020f34 	.word	0x08020f34

0800b158 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b158:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b15c:	461e      	mov	r6, r3
 800b15e:	4b0a      	ldr	r3, [pc, #40]	@ (800b188 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b160:	460f      	mov	r7, r1
 800b162:	4690      	mov	r8, r2
 800b164:	881d      	ldrh	r5, [r3, #0]
 800b166:	f7f7 f923 	bl	80023b0 <_ZN8touchgfx3HAL3lcdEv>
 800b16a:	6803      	ldr	r3, [r0, #0]
 800b16c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b16e:	4798      	blx	r3
 800b170:	280b      	cmp	r0, #11
 800b172:	bf96      	itet	ls
 800b174:	4b05      	ldrls	r3, [pc, #20]	@ (800b18c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b176:	2400      	movhi	r4, #0
 800b178:	5c1c      	ldrbls	r4, [r3, r0]
 800b17a:	fb08 7005 	mla	r0, r8, r5, r7
 800b17e:	10e4      	asrs	r4, r4, #3
 800b180:	fb04 6000 	mla	r0, r4, r0, r6
 800b184:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b188:	200150a6 	.word	0x200150a6
 800b18c:	08020f34 	.word	0x08020f34

0800b190 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b190:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b192:	b08b      	sub	sp, #44	@ 0x2c
 800b194:	461f      	mov	r7, r3
 800b196:	4604      	mov	r4, r0
 800b198:	4616      	mov	r6, r2
 800b19a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b19e:	2500      	movs	r5, #0
 800b1a0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b1a4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b1a8:	9504      	str	r5, [sp, #16]
 800b1aa:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b1ae:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b1b2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b1b6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b1ba:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b1be:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b1c2:	f88d 3020 	strb.w	r3, [sp, #32]
 800b1c6:	f7ff fe9f 	bl	800af08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b1ca:	463a      	mov	r2, r7
 800b1cc:	4631      	mov	r1, r6
 800b1ce:	4603      	mov	r3, r0
 800b1d0:	4620      	mov	r0, r4
 800b1d2:	f7ff ffc1 	bl	800b158 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b1d6:	4b0e      	ldr	r3, [pc, #56]	@ (800b210 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b1d8:	9005      	str	r0, [sp, #20]
 800b1da:	881b      	ldrh	r3, [r3, #0]
 800b1dc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b1e0:	f7f7 f8e6 	bl	80023b0 <_ZN8touchgfx3HAL3lcdEv>
 800b1e4:	6803      	ldr	r3, [r0, #0]
 800b1e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b1e8:	4798      	blx	r3
 800b1ea:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800b1ec:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800b1f0:	a901      	add	r1, sp, #4
 800b1f2:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800b1f6:	9304      	str	r3, [sp, #16]
 800b1f8:	6860      	ldr	r0, [r4, #4]
 800b1fa:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b1fe:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800b202:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b206:	6803      	ldr	r3, [r0, #0]
 800b208:	685b      	ldr	r3, [r3, #4]
 800b20a:	4798      	blx	r3
 800b20c:	b00b      	add	sp, #44	@ 0x2c
 800b20e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b210:	200150a6 	.word	0x200150a6

0800b214 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b214:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b216:	b08d      	sub	sp, #52	@ 0x34
 800b218:	2501      	movs	r5, #1
 800b21a:	4604      	mov	r4, r0
 800b21c:	466b      	mov	r3, sp
 800b21e:	9503      	str	r5, [sp, #12]
 800b220:	e883 0006 	stmia.w	r3, {r1, r2}
 800b224:	2300      	movs	r3, #0
 800b226:	f8bd 6000 	ldrh.w	r6, [sp]
 800b22a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b22e:	9306      	str	r3, [sp, #24]
 800b230:	6803      	ldr	r3, [r0, #0]
 800b232:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b234:	4798      	blx	r3
 800b236:	463a      	mov	r2, r7
 800b238:	4631      	mov	r1, r6
 800b23a:	4603      	mov	r3, r0
 800b23c:	4620      	mov	r0, r4
 800b23e:	f7ff ff8b 	bl	800b158 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b242:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800b244:	9004      	str	r0, [sp, #16]
 800b246:	9307      	str	r3, [sp, #28]
 800b248:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b24c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b250:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b254:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b258:	4b0e      	ldr	r3, [pc, #56]	@ (800b294 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b25a:	881b      	ldrh	r3, [r3, #0]
 800b25c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b260:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b264:	f7f7 f8a4 	bl	80023b0 <_ZN8touchgfx3HAL3lcdEv>
 800b268:	6803      	ldr	r3, [r0, #0]
 800b26a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b26c:	4798      	blx	r3
 800b26e:	23ff      	movs	r3, #255	@ 0xff
 800b270:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b274:	a903      	add	r1, sp, #12
 800b276:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b27a:	6860      	ldr	r0, [r4, #4]
 800b27c:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b280:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b284:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b288:	6803      	ldr	r3, [r0, #0]
 800b28a:	685b      	ldr	r3, [r3, #4]
 800b28c:	4798      	blx	r3
 800b28e:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800b290:	b00d      	add	sp, #52	@ 0x34
 800b292:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b294:	200150a6 	.word	0x200150a6

0800b298 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b298:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b29c:	b08c      	sub	sp, #48	@ 0x30
 800b29e:	461e      	mov	r6, r3
 800b2a0:	2300      	movs	r3, #0
 800b2a2:	4604      	mov	r4, r0
 800b2a4:	466d      	mov	r5, sp
 800b2a6:	9306      	str	r3, [sp, #24]
 800b2a8:	6803      	ldr	r3, [r0, #0]
 800b2aa:	e885 0006 	stmia.w	r5, {r1, r2}
 800b2ae:	2501      	movs	r5, #1
 800b2b0:	f8bd 7000 	ldrh.w	r7, [sp]
 800b2b4:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b2b8:	9503      	str	r5, [sp, #12]
 800b2ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b2bc:	4798      	blx	r3
 800b2be:	4642      	mov	r2, r8
 800b2c0:	4639      	mov	r1, r7
 800b2c2:	4603      	mov	r3, r0
 800b2c4:	4620      	mov	r0, r4
 800b2c6:	f7ff ff47 	bl	800b158 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b2ca:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b2ce:	9004      	str	r0, [sp, #16]
 800b2d0:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b2d4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b2d8:	9607      	str	r6, [sp, #28]
 800b2da:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b2de:	4b10      	ldr	r3, [pc, #64]	@ (800b320 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b2e0:	881b      	ldrh	r3, [r3, #0]
 800b2e2:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b2e6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b2e8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b2ec:	f7f7 f860 	bl	80023b0 <_ZN8touchgfx3HAL3lcdEv>
 800b2f0:	6803      	ldr	r3, [r0, #0]
 800b2f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b2f4:	4798      	blx	r3
 800b2f6:	23ff      	movs	r3, #255	@ 0xff
 800b2f8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b2fc:	a903      	add	r1, sp, #12
 800b2fe:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b302:	6860      	ldr	r0, [r4, #4]
 800b304:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b308:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b30c:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b310:	6803      	ldr	r3, [r0, #0]
 800b312:	685b      	ldr	r3, [r3, #4]
 800b314:	4798      	blx	r3
 800b316:	4630      	mov	r0, r6
 800b318:	b00c      	add	sp, #48	@ 0x30
 800b31a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b31e:	bf00      	nop
 800b320:	200150a6 	.word	0x200150a6

0800b324 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b324:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b326:	b085      	sub	sp, #20
 800b328:	4605      	mov	r5, r0
 800b32a:	ac02      	add	r4, sp, #8
 800b32c:	e884 0006 	stmia.w	r4, {r1, r2}
 800b330:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b334:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b338:	f7ff fde6 	bl	800af08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b33c:	4631      	mov	r1, r6
 800b33e:	4603      	mov	r3, r0
 800b340:	463a      	mov	r2, r7
 800b342:	4628      	mov	r0, r5
 800b344:	f7ff ff08 	bl	800b158 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b348:	4a05      	ldr	r2, [pc, #20]	@ (800b360 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b34a:	682b      	ldr	r3, [r5, #0]
 800b34c:	8812      	ldrh	r2, [r2, #0]
 800b34e:	9200      	str	r2, [sp, #0]
 800b350:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800b352:	4603      	mov	r3, r0
 800b354:	4628      	mov	r0, r5
 800b356:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b35a:	47b0      	blx	r6
 800b35c:	b005      	add	sp, #20
 800b35e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b360:	200150a6 	.word	0x200150a6

0800b364 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b364:	b570      	push	{r4, r5, r6, lr}
 800b366:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800b36a:	4604      	mov	r4, r0
 800b36c:	b19b      	cbz	r3, 800b396 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b36e:	2002      	movs	r0, #2
 800b370:	f7f6 f914 	bl	800159c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b374:	2300      	movs	r3, #0
 800b376:	4620      	mov	r0, r4
 800b378:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b37c:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800b380:	6823      	ldr	r3, [r4, #0]
 800b382:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800b386:	f7ff fdbf 	bl	800af08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b38a:	4601      	mov	r1, r0
 800b38c:	4620      	mov	r0, r4
 800b38e:	462b      	mov	r3, r5
 800b390:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b394:	4718      	bx	r3
 800b396:	bd70      	pop	{r4, r5, r6, pc}

0800b398 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800b398:	b570      	push	{r4, r5, r6, lr}
 800b39a:	4605      	mov	r5, r0
 800b39c:	460c      	mov	r4, r1
 800b39e:	2003      	movs	r0, #3
 800b3a0:	b149      	cbz	r1, 800b3b6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800b3a2:	f7f6 f89b 	bl	80014dc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b3a6:	6928      	ldr	r0, [r5, #16]
 800b3a8:	b168      	cbz	r0, 800b3c6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b3aa:	6803      	ldr	r3, [r0, #0]
 800b3ac:	2101      	movs	r1, #1
 800b3ae:	695b      	ldr	r3, [r3, #20]
 800b3b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b3b4:	4718      	bx	r3
 800b3b6:	f7f6 f8c1 	bl	800153c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b3ba:	6928      	ldr	r0, [r5, #16]
 800b3bc:	b118      	cbz	r0, 800b3c6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b3be:	6803      	ldr	r3, [r0, #0]
 800b3c0:	4621      	mov	r1, r4
 800b3c2:	695b      	ldr	r3, [r3, #20]
 800b3c4:	e7f4      	b.n	800b3b0 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800b3c6:	bd70      	pop	{r4, r5, r6, pc}

0800b3c8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b3c8:	b538      	push	{r3, r4, r5, lr}
 800b3ca:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800b3ce:	4604      	mov	r4, r0
 800b3d0:	460d      	mov	r5, r1
 800b3d2:	428b      	cmp	r3, r1
 800b3d4:	d006      	beq.n	800b3e4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b3d6:	6803      	ldr	r3, [r0, #0]
 800b3d8:	b929      	cbnz	r1, 800b3e6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b3da:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800b3de:	4798      	blx	r3
 800b3e0:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800b3e4:	bd38      	pop	{r3, r4, r5, pc}
 800b3e6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800b3ea:	e7f8      	b.n	800b3de <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b3ec <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b3ec:	4b0d      	ldr	r3, [pc, #52]	@ (800b424 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b3ee:	b510      	push	{r4, lr}
 800b3f0:	781b      	ldrb	r3, [r3, #0]
 800b3f2:	4604      	mov	r4, r0
 800b3f4:	b95b      	cbnz	r3, 800b40e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b3f6:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800b3fa:	2b02      	cmp	r3, #2
 800b3fc:	d007      	beq.n	800b40e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b3fe:	6840      	ldr	r0, [r0, #4]
 800b400:	f000 f912 	bl	800b628 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b404:	b118      	cbz	r0, 800b40e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b406:	6862      	ldr	r2, [r4, #4]
 800b408:	7a53      	ldrb	r3, [r2, #9]
 800b40a:	2b00      	cmp	r3, #0
 800b40c:	d0fc      	beq.n	800b408 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b40e:	f7f6 fa47 	bl	80018a0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b412:	4620      	mov	r0, r4
 800b414:	2100      	movs	r1, #0
 800b416:	f7ff ffd7 	bl	800b3c8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b41a:	4620      	mov	r0, r4
 800b41c:	f7ff fd74 	bl	800af08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b420:	bd10      	pop	{r4, pc}
 800b422:	bf00      	nop
 800b424:	200150aa 	.word	0x200150aa

0800b428 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b428:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b42c:	1a13      	subs	r3, r2, r0
 800b42e:	4258      	negs	r0, r3
 800b430:	4158      	adcs	r0, r3
 800b432:	4770      	bx	lr

0800b434 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b434:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b438:	1a9b      	subs	r3, r3, r2
 800b43a:	2b00      	cmp	r3, #0
 800b43c:	bfdc      	itt	le
 800b43e:	6882      	ldrle	r2, [r0, #8]
 800b440:	189b      	addle	r3, r3, r2
 800b442:	2b01      	cmp	r3, #1
 800b444:	bfcc      	ite	gt
 800b446:	2000      	movgt	r0, #0
 800b448:	2001      	movle	r0, #1
 800b44a:	4770      	bx	lr

0800b44c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b44c:	6902      	ldr	r2, [r0, #16]
 800b44e:	6843      	ldr	r3, [r0, #4]
 800b450:	2024      	movs	r0, #36	@ 0x24
 800b452:	fb00 3002 	mla	r0, r0, r2, r3
 800b456:	4770      	bx	lr

0800b458 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b458:	6803      	ldr	r3, [r0, #0]
 800b45a:	691b      	ldr	r3, [r3, #16]
 800b45c:	4718      	bx	r3

0800b45e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b45e:	2301      	movs	r3, #1
 800b460:	b570      	push	{r4, r5, r6, lr}
 800b462:	7203      	strb	r3, [r0, #8]
 800b464:	4604      	mov	r4, r0
 800b466:	6840      	ldr	r0, [r0, #4]
 800b468:	6803      	ldr	r3, [r0, #0]
 800b46a:	699b      	ldr	r3, [r3, #24]
 800b46c:	4798      	blx	r3
 800b46e:	6803      	ldr	r3, [r0, #0]
 800b470:	4605      	mov	r5, r0
 800b472:	2b40      	cmp	r3, #64	@ 0x40
 800b474:	d00c      	beq.n	800b490 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b476:	d810      	bhi.n	800b49a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b478:	2b04      	cmp	r3, #4
 800b47a:	d01d      	beq.n	800b4b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b47c:	d804      	bhi.n	800b488 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b47e:	2b01      	cmp	r3, #1
 800b480:	d006      	beq.n	800b490 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b482:	2b02      	cmp	r3, #2
 800b484:	d02c      	beq.n	800b4e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b486:	bd70      	pop	{r4, r5, r6, pc}
 800b488:	2b08      	cmp	r3, #8
 800b48a:	d01d      	beq.n	800b4c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b48c:	2b20      	cmp	r3, #32
 800b48e:	d1fa      	bne.n	800b486 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b490:	6823      	ldr	r3, [r4, #0]
 800b492:	4620      	mov	r0, r4
 800b494:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b496:	4798      	blx	r3
 800b498:	e013      	b.n	800b4c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b49a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b49e:	d0f7      	beq.n	800b490 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b4a0:	d804      	bhi.n	800b4ac <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b4a2:	2b80      	cmp	r3, #128	@ 0x80
 800b4a4:	d0f4      	beq.n	800b490 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b4a6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800b4aa:	e7f0      	b.n	800b48e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b4ac:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800b4b0:	d0ee      	beq.n	800b490 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b4b2:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b4b6:	e7e5      	b.n	800b484 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b4b8:	6823      	ldr	r3, [r4, #0]
 800b4ba:	7f01      	ldrb	r1, [r0, #28]
 800b4bc:	4620      	mov	r0, r4
 800b4be:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b4c0:	4798      	blx	r3
 800b4c2:	6823      	ldr	r3, [r4, #0]
 800b4c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b4c6:	e006      	b.n	800b4d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b4c8:	6823      	ldr	r3, [r4, #0]
 800b4ca:	7f01      	ldrb	r1, [r0, #28]
 800b4cc:	4620      	mov	r0, r4
 800b4ce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b4d0:	4798      	blx	r3
 800b4d2:	6823      	ldr	r3, [r4, #0]
 800b4d4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b4d6:	4629      	mov	r1, r5
 800b4d8:	4620      	mov	r0, r4
 800b4da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b4de:	4718      	bx	r3
 800b4e0:	6823      	ldr	r3, [r4, #0]
 800b4e2:	4620      	mov	r0, r4
 800b4e4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b4e6:	4798      	blx	r3
 800b4e8:	e7f3      	b.n	800b4d2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b4ea <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b4ea:	4770      	bx	lr

0800b4ec <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b4ec:	4770      	bx	lr

0800b4ee <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b4ee:	4770      	bx	lr

0800b4f0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b4f0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b4f4:	b510      	push	{r4, lr}
 800b4f6:	1ad2      	subs	r2, r2, r3
 800b4f8:	2a00      	cmp	r2, #0
 800b4fa:	bfdc      	itt	le
 800b4fc:	6884      	ldrle	r4, [r0, #8]
 800b4fe:	1912      	addle	r2, r2, r4
 800b500:	2a01      	cmp	r2, #1
 800b502:	dd16      	ble.n	800b532 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b504:	6842      	ldr	r2, [r0, #4]
 800b506:	2424      	movs	r4, #36	@ 0x24
 800b508:	fb04 2303 	mla	r3, r4, r3, r2
 800b50c:	f101 0220 	add.w	r2, r1, #32
 800b510:	f851 4b04 	ldr.w	r4, [r1], #4
 800b514:	4291      	cmp	r1, r2
 800b516:	f843 4b04 	str.w	r4, [r3], #4
 800b51a:	d1f9      	bne.n	800b510 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b51c:	780a      	ldrb	r2, [r1, #0]
 800b51e:	701a      	strb	r2, [r3, #0]
 800b520:	68c3      	ldr	r3, [r0, #12]
 800b522:	6882      	ldr	r2, [r0, #8]
 800b524:	f3bf 8f5b 	dmb	ish
 800b528:	3301      	adds	r3, #1
 800b52a:	429a      	cmp	r2, r3
 800b52c:	bfd8      	it	le
 800b52e:	1a9b      	suble	r3, r3, r2
 800b530:	60c3      	str	r3, [r0, #12]
 800b532:	bd10      	pop	{r4, pc}

0800b534 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b534:	6903      	ldr	r3, [r0, #16]
 800b536:	6882      	ldr	r2, [r0, #8]
 800b538:	f3bf 8f5b 	dmb	ish
 800b53c:	3301      	adds	r3, #1
 800b53e:	429a      	cmp	r2, r3
 800b540:	bfd8      	it	le
 800b542:	1a9b      	suble	r3, r3, r2
 800b544:	6103      	str	r3, [r0, #16]
 800b546:	4770      	bx	lr

0800b548 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b548:	b570      	push	{r4, r5, r6, lr}
 800b54a:	4604      	mov	r4, r0
 800b54c:	460e      	mov	r6, r1
 800b54e:	6860      	ldr	r0, [r4, #4]
 800b550:	6803      	ldr	r3, [r0, #0]
 800b552:	685b      	ldr	r3, [r3, #4]
 800b554:	4798      	blx	r3
 800b556:	2800      	cmp	r0, #0
 800b558:	d1f9      	bne.n	800b54e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b55a:	4d0d      	ldr	r5, [pc, #52]	@ (800b590 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b55c:	6828      	ldr	r0, [r5, #0]
 800b55e:	6803      	ldr	r3, [r0, #0]
 800b560:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b562:	4798      	blx	r3
 800b564:	f7f6 f9aa 	bl	80018bc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b568:	6828      	ldr	r0, [r5, #0]
 800b56a:	2101      	movs	r1, #1
 800b56c:	f7ff ff2c 	bl	800b3c8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b570:	6860      	ldr	r0, [r4, #4]
 800b572:	4631      	mov	r1, r6
 800b574:	6803      	ldr	r3, [r0, #0]
 800b576:	689b      	ldr	r3, [r3, #8]
 800b578:	4798      	blx	r3
 800b57a:	6823      	ldr	r3, [r4, #0]
 800b57c:	4620      	mov	r0, r4
 800b57e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b580:	4798      	blx	r3
 800b582:	6828      	ldr	r0, [r5, #0]
 800b584:	6803      	ldr	r3, [r0, #0]
 800b586:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b58a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800b58c:	4718      	bx	r3
 800b58e:	bf00      	nop
 800b590:	200150ac 	.word	0x200150ac

0800b594 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b594:	b508      	push	{r3, lr}
 800b596:	f7f6 f983 	bl	80018a0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b59a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b59e:	f7f6 b987 	b.w	80018b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b5a2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b5a2:	b510      	push	{r4, lr}
 800b5a4:	4604      	mov	r4, r0
 800b5a6:	2114      	movs	r1, #20
 800b5a8:	f013 f896 	bl	801e6d8 <_ZdlPvj>
 800b5ac:	4620      	mov	r0, r4
 800b5ae:	bd10      	pop	{r4, pc}

0800b5b0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b5b0:	b510      	push	{r4, lr}
 800b5b2:	4604      	mov	r4, r0
 800b5b4:	6840      	ldr	r0, [r0, #4]
 800b5b6:	6803      	ldr	r3, [r0, #0]
 800b5b8:	681b      	ldr	r3, [r3, #0]
 800b5ba:	4798      	blx	r3
 800b5bc:	b948      	cbnz	r0, 800b5d2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b5be:	7a63      	ldrb	r3, [r4, #9]
 800b5c0:	b13b      	cbz	r3, 800b5d2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b5c2:	7a23      	ldrb	r3, [r4, #8]
 800b5c4:	b92b      	cbnz	r3, 800b5d2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b5c6:	6823      	ldr	r3, [r4, #0]
 800b5c8:	4620      	mov	r0, r4
 800b5ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b5cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b5d0:	4718      	bx	r3
 800b5d2:	bd10      	pop	{r4, pc}

0800b5d4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b5d4:	b570      	push	{r4, r5, r6, lr}
 800b5d6:	4604      	mov	r4, r0
 800b5d8:	6840      	ldr	r0, [r0, #4]
 800b5da:	6803      	ldr	r3, [r0, #0]
 800b5dc:	681b      	ldr	r3, [r3, #0]
 800b5de:	4798      	blx	r3
 800b5e0:	4605      	mov	r5, r0
 800b5e2:	b930      	cbnz	r0, 800b5f2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b5e4:	7a23      	ldrb	r3, [r4, #8]
 800b5e6:	b123      	cbz	r3, 800b5f2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b5e8:	6860      	ldr	r0, [r4, #4]
 800b5ea:	6803      	ldr	r3, [r0, #0]
 800b5ec:	695b      	ldr	r3, [r3, #20]
 800b5ee:	4798      	blx	r3
 800b5f0:	7225      	strb	r5, [r4, #8]
 800b5f2:	6860      	ldr	r0, [r4, #4]
 800b5f4:	6803      	ldr	r3, [r0, #0]
 800b5f6:	681b      	ldr	r3, [r3, #0]
 800b5f8:	4798      	blx	r3
 800b5fa:	b928      	cbnz	r0, 800b608 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b5fc:	6823      	ldr	r3, [r4, #0]
 800b5fe:	4620      	mov	r0, r4
 800b600:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b602:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b606:	4718      	bx	r3
 800b608:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b60c:	f7f6 b95e 	b.w	80018cc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b610 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b610:	b510      	push	{r4, lr}
 800b612:	6082      	str	r2, [r0, #8]
 800b614:	2200      	movs	r2, #0
 800b616:	4c03      	ldr	r4, [pc, #12]	@ (800b624 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b618:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b61c:	e9c0 4100 	strd	r4, r1, [r0]
 800b620:	bd10      	pop	{r4, pc}
 800b622:	bf00      	nop
 800b624:	08020f48 	.word	0x08020f48

0800b628 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b628:	6840      	ldr	r0, [r0, #4]
 800b62a:	6803      	ldr	r3, [r0, #0]
 800b62c:	681b      	ldr	r3, [r3, #0]
 800b62e:	4718      	bx	r3

0800b630 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800b630:	2000      	movs	r0, #0
 800b632:	4770      	bx	lr

0800b634 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 800b634:	2000      	movs	r0, #0
 800b636:	4770      	bx	lr

0800b638 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800b638:	4b07      	ldr	r3, [pc, #28]	@ (800b658 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800b63a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800b63c:	881b      	ldrh	r3, [r3, #0]
 800b63e:	4293      	cmp	r3, r2
 800b640:	bf81      	itttt	hi
 800b642:	4b06      	ldrhi	r3, [pc, #24]	@ (800b65c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800b644:	681b      	ldrhi	r3, [r3, #0]
 800b646:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800b64a:	7858      	ldrbhi	r0, [r3, #1]
 800b64c:	bf8c      	ite	hi
 800b64e:	f000 0003 	andhi.w	r0, r0, #3
 800b652:	2000      	movls	r0, #0
 800b654:	4770      	bx	lr
 800b656:	bf00      	nop
 800b658:	20015100 	.word	0x20015100
 800b65c:	200150fc 	.word	0x200150fc

0800b660 <_ZN8touchgfx8TextAreaD1Ev>:
 800b660:	4770      	bx	lr
	...

0800b664 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800b664:	4b11      	ldr	r3, [pc, #68]	@ (800b6ac <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800b666:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b66a:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800b66c:	4604      	mov	r4, r0
 800b66e:	881b      	ldrh	r3, [r3, #0]
 800b670:	428b      	cmp	r3, r1
 800b672:	d918      	bls.n	800b6a6 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800b674:	6803      	ldr	r3, [r0, #0]
 800b676:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800b678:	4b0d      	ldr	r3, [pc, #52]	@ (800b6b0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800b67a:	6818      	ldr	r0, [r3, #0]
 800b67c:	f7f7 fd5a 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 800b680:	6823      	ldr	r3, [r4, #0]
 800b682:	4606      	mov	r6, r0
 800b684:	4620      	mov	r0, r4
 800b686:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b688:	4798      	blx	r3
 800b68a:	6823      	ldr	r3, [r4, #0]
 800b68c:	4607      	mov	r7, r0
 800b68e:	4620      	mov	r0, r4
 800b690:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800b694:	4798      	blx	r3
 800b696:	463a      	mov	r2, r7
 800b698:	4603      	mov	r3, r0
 800b69a:	4631      	mov	r1, r6
 800b69c:	4620      	mov	r0, r4
 800b69e:	46ac      	mov	ip, r5
 800b6a0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b6a4:	4760      	bx	ip
 800b6a6:	2000      	movs	r0, #0
 800b6a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b6ac:	20015100 	.word	0x20015100
 800b6b0:	20015108 	.word	0x20015108

0800b6b4 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800b6b4:	4b18      	ldr	r3, [pc, #96]	@ (800b718 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800b6b6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b6ba:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800b6bc:	4604      	mov	r4, r0
 800b6be:	881b      	ldrh	r3, [r3, #0]
 800b6c0:	428b      	cmp	r3, r1
 800b6c2:	d926      	bls.n	800b712 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800b6c4:	4b15      	ldr	r3, [pc, #84]	@ (800b71c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800b6c6:	681b      	ldr	r3, [r3, #0]
 800b6c8:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800b6cc:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800b6d0:	4b13      	ldr	r3, [pc, #76]	@ (800b720 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800b6d2:	7855      	ldrb	r5, [r2, #1]
 800b6d4:	681b      	ldr	r3, [r3, #0]
 800b6d6:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800b6da:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800b6de:	6833      	ldr	r3, [r6, #0]
 800b6e0:	69df      	ldr	r7, [r3, #28]
 800b6e2:	4b10      	ldr	r3, [pc, #64]	@ (800b724 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800b6e4:	6818      	ldr	r0, [r3, #0]
 800b6e6:	f7f7 fd25 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 800b6ea:	6823      	ldr	r3, [r4, #0]
 800b6ec:	4680      	mov	r8, r0
 800b6ee:	4620      	mov	r0, r4
 800b6f0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b6f2:	4798      	blx	r3
 800b6f4:	6823      	ldr	r3, [r4, #0]
 800b6f6:	4681      	mov	r9, r0
 800b6f8:	4620      	mov	r0, r4
 800b6fa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800b6fe:	4798      	blx	r3
 800b700:	464b      	mov	r3, r9
 800b702:	9000      	str	r0, [sp, #0]
 800b704:	4642      	mov	r2, r8
 800b706:	4629      	mov	r1, r5
 800b708:	4630      	mov	r0, r6
 800b70a:	47b8      	blx	r7
 800b70c:	b003      	add	sp, #12
 800b70e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b712:	2000      	movs	r0, #0
 800b714:	e7fa      	b.n	800b70c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800b716:	bf00      	nop
 800b718:	20015100 	.word	0x20015100
 800b71c:	200150fc 	.word	0x200150fc
 800b720:	20015104 	.word	0x20015104
 800b724:	20015108 	.word	0x20015108

0800b728 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800b728:	b40e      	push	{r1, r2, r3}
 800b72a:	4b30      	ldr	r3, [pc, #192]	@ (800b7ec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800b72c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b730:	881a      	ldrh	r2, [r3, #0]
 800b732:	b09d      	sub	sp, #116	@ 0x74
 800b734:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800b736:	4604      	mov	r4, r0
 800b738:	429a      	cmp	r2, r3
 800b73a:	d954      	bls.n	800b7e6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800b73c:	aa26      	add	r2, sp, #152	@ 0x98
 800b73e:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800b7f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800b742:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800b7f4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800b746:	9202      	str	r2, [sp, #8]
 800b748:	f8d9 2000 	ldr.w	r2, [r9]
 800b74c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800b750:	f8d8 3000 	ldr.w	r3, [r8]
 800b754:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800b758:	682b      	ldr	r3, [r5, #0]
 800b75a:	4628      	mov	r0, r5
 800b75c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b75e:	4798      	blx	r3
 800b760:	4606      	mov	r6, r0
 800b762:	b207      	sxth	r7, r0
 800b764:	a803      	add	r0, sp, #12
 800b766:	f003 ffa9 	bl	800f6bc <_ZN8touchgfx12TextProviderC1Ev>
 800b76a:	682b      	ldr	r3, [r5, #0]
 800b76c:	4628      	mov	r0, r5
 800b76e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800b770:	4798      	blx	r3
 800b772:	682b      	ldr	r3, [r5, #0]
 800b774:	4682      	mov	sl, r0
 800b776:	4628      	mov	r0, r5
 800b778:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800b77a:	4798      	blx	r3
 800b77c:	4653      	mov	r3, sl
 800b77e:	9000      	str	r0, [sp, #0]
 800b780:	a803      	add	r0, sp, #12
 800b782:	9a02      	ldr	r2, [sp, #8]
 800b784:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800b786:	f003 fff4 	bl	800f772 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800b78a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800b78c:	f8d9 3000 	ldr.w	r3, [r9]
 800b790:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800b794:	8925      	ldrh	r5, [r4, #8]
 800b796:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800b79a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800b79e:	eba5 050c 	sub.w	r5, r5, ip
 800b7a2:	784a      	ldrb	r2, [r1, #1]
 800b7a4:	f8d8 3000 	ldr.w	r3, [r8]
 800b7a8:	b22d      	sxth	r5, r5
 800b7aa:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800b7ae:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800b7b2:	9500      	str	r5, [sp, #0]
 800b7b4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800b7b8:	a803      	add	r0, sp, #12
 800b7ba:	f001 fe1b 	bl	800d3f4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800b7be:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800b7c2:	b203      	sxth	r3, r0
 800b7c4:	18b9      	adds	r1, r7, r2
 800b7c6:	2900      	cmp	r1, #0
 800b7c8:	dd0b      	ble.n	800b7e2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800b7ca:	3b01      	subs	r3, #1
 800b7cc:	fb13 f302 	smulbb	r3, r3, r2
 800b7d0:	fb16 3300 	smlabb	r3, r6, r0, r3
 800b7d4:	b21f      	sxth	r7, r3
 800b7d6:	4638      	mov	r0, r7
 800b7d8:	b01d      	add	sp, #116	@ 0x74
 800b7da:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b7de:	b003      	add	sp, #12
 800b7e0:	4770      	bx	lr
 800b7e2:	2b00      	cmp	r3, #0
 800b7e4:	dcf7      	bgt.n	800b7d6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800b7e6:	2700      	movs	r7, #0
 800b7e8:	e7f5      	b.n	800b7d6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800b7ea:	bf00      	nop
 800b7ec:	20015100 	.word	0x20015100
 800b7f0:	200150fc 	.word	0x200150fc
 800b7f4:	20015104 	.word	0x20015104

0800b7f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800b7f8:	4bbd      	ldr	r3, [pc, #756]	@ (800baf0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800b7fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b7fe:	460c      	mov	r4, r1
 800b800:	881b      	ldrh	r3, [r3, #0]
 800b802:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 800b804:	b0a9      	sub	sp, #164	@ 0xa4
 800b806:	4680      	mov	r8, r0
 800b808:	428b      	cmp	r3, r1
 800b80a:	d809      	bhi.n	800b820 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800b80c:	2300      	movs	r3, #0
 800b80e:	f04f 32ff 	mov.w	r2, #4294967295
 800b812:	6083      	str	r3, [r0, #8]
 800b814:	e9c0 3200 	strd	r3, r2, [r0]
 800b818:	4640      	mov	r0, r8
 800b81a:	b029      	add	sp, #164	@ 0xa4
 800b81c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b820:	4eb4      	ldr	r6, [pc, #720]	@ (800baf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800b822:	6833      	ldr	r3, [r6, #0]
 800b824:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800b828:	4bb3      	ldr	r3, [pc, #716]	@ (800baf8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800b82a:	681b      	ldr	r3, [r3, #0]
 800b82c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800b830:	4bb2      	ldr	r3, [pc, #712]	@ (800bafc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800b832:	6818      	ldr	r0, [r3, #0]
 800b834:	f7f7 fc7e 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 800b838:	682b      	ldr	r3, [r5, #0]
 800b83a:	4681      	mov	r9, r0
 800b83c:	4628      	mov	r0, r5
 800b83e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b840:	4798      	blx	r3
 800b842:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 800b844:	b203      	sxth	r3, r0
 800b846:	4682      	mov	sl, r0
 800b848:	4407      	add	r7, r0
 800b84a:	a80f      	add	r0, sp, #60	@ 0x3c
 800b84c:	9304      	str	r3, [sp, #16]
 800b84e:	b2bb      	uxth	r3, r7
 800b850:	9303      	str	r3, [sp, #12]
 800b852:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800b856:	2b00      	cmp	r3, #0
 800b858:	f040 80a5 	bne.w	800b9a6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 800b85c:	f003 ff2e 	bl	800f6bc <_ZN8touchgfx12TextProviderC1Ev>
 800b860:	682b      	ldr	r3, [r5, #0]
 800b862:	4628      	mov	r0, r5
 800b864:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800b866:	4798      	blx	r3
 800b868:	682b      	ldr	r3, [r5, #0]
 800b86a:	4606      	mov	r6, r0
 800b86c:	4628      	mov	r0, r5
 800b86e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800b870:	4798      	blx	r3
 800b872:	6823      	ldr	r3, [r4, #0]
 800b874:	4607      	mov	r7, r0
 800b876:	4620      	mov	r0, r4
 800b878:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b87a:	4798      	blx	r3
 800b87c:	6823      	ldr	r3, [r4, #0]
 800b87e:	4683      	mov	fp, r0
 800b880:	4620      	mov	r0, r4
 800b882:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800b886:	4798      	blx	r3
 800b888:	463b      	mov	r3, r7
 800b88a:	4649      	mov	r1, r9
 800b88c:	4632      	mov	r2, r6
 800b88e:	2600      	movs	r6, #0
 800b890:	e9cd b000 	strd	fp, r0, [sp]
 800b894:	a80f      	add	r0, sp, #60	@ 0x3c
 800b896:	4637      	mov	r7, r6
 800b898:	f003 ff80 	bl	800f79c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800b89c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800b8a0:	f8df b250 	ldr.w	fp, [pc, #592]	@ 800baf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800b8a4:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800b8a8:	bf0c      	ite	eq
 800b8aa:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800b8ae:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800b8b2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800b8b4:	4629      	mov	r1, r5
 800b8b6:	f8db 3000 	ldr.w	r3, [fp]
 800b8ba:	a80f      	add	r0, sp, #60	@ 0x3c
 800b8bc:	3701      	adds	r7, #1
 800b8be:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800b8c2:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800b8c6:	b2bf      	uxth	r7, r7
 800b8c8:	785b      	ldrb	r3, [r3, #1]
 800b8ca:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800b8ce:	f001 fa98 	bl	800ce02 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800b8d2:	9b03      	ldr	r3, [sp, #12]
 800b8d4:	4286      	cmp	r6, r0
 800b8d6:	eba9 0903 	sub.w	r9, r9, r3
 800b8da:	bfb8      	it	lt
 800b8dc:	4606      	movlt	r6, r0
 800b8de:	a80f      	add	r0, sp, #60	@ 0x3c
 800b8e0:	fa0f f989 	sxth.w	r9, r9
 800b8e4:	b236      	sxth	r6, r6
 800b8e6:	f003 ff10 	bl	800f70a <_ZN8touchgfx12TextProvider11endOfStringEv>
 800b8ea:	b918      	cbnz	r0, 800b8f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800b8ec:	7a2b      	ldrb	r3, [r5, #8]
 800b8ee:	444b      	add	r3, r9
 800b8f0:	2b00      	cmp	r3, #0
 800b8f2:	dcde      	bgt.n	800b8b2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 800b8f4:	9b03      	ldr	r3, [sp, #12]
 800b8f6:	4620      	mov	r0, r4
 800b8f8:	9a04      	ldr	r2, [sp, #16]
 800b8fa:	fb13 f707 	smulbb	r7, r3, r7
 800b8fe:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800b900:	f895 9009 	ldrb.w	r9, [r5, #9]
 800b904:	1aff      	subs	r7, r7, r3
 800b906:	b2bf      	uxth	r7, r7
 800b908:	b23b      	sxth	r3, r7
 800b90a:	429a      	cmp	r2, r3
 800b90c:	bfa8      	it	ge
 800b90e:	4657      	movge	r7, sl
 800b910:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800b914:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800b918:	6823      	ldr	r3, [r4, #0]
 800b91a:	444f      	add	r7, r9
 800b91c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b91e:	bf08      	it	eq
 800b920:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800b924:	fa1f f987 	uxth.w	r9, r7
 800b928:	bf18      	it	ne
 800b92a:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800b92e:	4798      	blx	r3
 800b930:	2801      	cmp	r0, #1
 800b932:	fa0f f789 	sxth.w	r7, r9
 800b936:	b2b3      	uxth	r3, r6
 800b938:	f000 80e2 	beq.w	800bb00 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800b93c:	2802      	cmp	r0, #2
 800b93e:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 800b942:	f000 80e3 	beq.w	800bb0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800b946:	7aea      	ldrb	r2, [r5, #11]
 800b948:	b236      	sxth	r6, r6
 800b94a:	7b2d      	ldrb	r5, [r5, #12]
 800b94c:	1ab6      	subs	r6, r6, r2
 800b94e:	442a      	add	r2, r5
 800b950:	fa1f fa86 	uxth.w	sl, r6
 800b954:	4413      	add	r3, r2
 800b956:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800b95a:	fa0f fb8a 	sxth.w	fp, sl
 800b95e:	b29b      	uxth	r3, r3
 800b960:	2a02      	cmp	r2, #2
 800b962:	b21e      	sxth	r6, r3
 800b964:	f000 80d6 	beq.w	800bb14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800b968:	2a03      	cmp	r2, #3
 800b96a:	f000 80de 	beq.w	800bb2a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800b96e:	2a01      	cmp	r2, #1
 800b970:	f040 80e6 	bne.w	800bb40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800b974:	8925      	ldrh	r5, [r4, #8]
 800b976:	4633      	mov	r3, r6
 800b978:	463e      	mov	r6, r7
 800b97a:	eba5 0909 	sub.w	r9, r5, r9
 800b97e:	461f      	mov	r7, r3
 800b980:	465d      	mov	r5, fp
 800b982:	fa0f fb89 	sxth.w	fp, r9
 800b986:	4b5d      	ldr	r3, [pc, #372]	@ (800bafc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800b988:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800b98a:	6818      	ldr	r0, [r3, #0]
 800b98c:	f7f7 fbd2 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 800b990:	f8a8 b000 	strh.w	fp, [r8]
 800b994:	f8a8 5002 	strh.w	r5, [r8, #2]
 800b998:	f8a8 6004 	strh.w	r6, [r8, #4]
 800b99c:	f8a8 7006 	strh.w	r7, [r8, #6]
 800b9a0:	f8c8 0008 	str.w	r0, [r8, #8]
 800b9a4:	e738      	b.n	800b818 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800b9a6:	f003 fe89 	bl	800f6bc <_ZN8touchgfx12TextProviderC1Ev>
 800b9aa:	682b      	ldr	r3, [r5, #0]
 800b9ac:	4628      	mov	r0, r5
 800b9ae:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800b9b0:	4798      	blx	r3
 800b9b2:	682b      	ldr	r3, [r5, #0]
 800b9b4:	4607      	mov	r7, r0
 800b9b6:	4628      	mov	r0, r5
 800b9b8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800b9ba:	4798      	blx	r3
 800b9bc:	6823      	ldr	r3, [r4, #0]
 800b9be:	4683      	mov	fp, r0
 800b9c0:	4620      	mov	r0, r4
 800b9c2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b9c4:	4798      	blx	r3
 800b9c6:	6822      	ldr	r2, [r4, #0]
 800b9c8:	9005      	str	r0, [sp, #20]
 800b9ca:	4620      	mov	r0, r4
 800b9cc:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800b9d0:	4790      	blx	r2
 800b9d2:	9b05      	ldr	r3, [sp, #20]
 800b9d4:	463a      	mov	r2, r7
 800b9d6:	4649      	mov	r1, r9
 800b9d8:	9001      	str	r0, [sp, #4]
 800b9da:	a80f      	add	r0, sp, #60	@ 0x3c
 800b9dc:	9300      	str	r3, [sp, #0]
 800b9de:	465b      	mov	r3, fp
 800b9e0:	f003 fedc 	bl	800f79c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800b9e4:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800b9e8:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800b9ec:	af0f      	add	r7, sp, #60	@ 0x3c
 800b9ee:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800b9f2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b9f6:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800b9f8:	bf0a      	itet	eq
 800b9fa:	464a      	moveq	r2, r9
 800b9fc:	461a      	movne	r2, r3
 800b9fe:	4699      	moveq	r9, r3
 800ba00:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800ba04:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 800ba08:	1ad2      	subs	r2, r2, r3
 800ba0a:	6833      	ldr	r3, [r6, #0]
 800ba0c:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 800ba10:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800ba14:	7859      	ldrb	r1, [r3, #1]
 800ba16:	2300      	movs	r3, #0
 800ba18:	9707      	str	r7, [sp, #28]
 800ba1a:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800ba1e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ba22:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800ba26:	f88d 1020 	strb.w	r1, [sp, #32]
 800ba2a:	9509      	str	r5, [sp, #36]	@ 0x24
 800ba2c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800ba30:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 800ba34:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 800ba38:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800ba3c:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800ba40:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800ba44:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800ba48:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ba4c:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800ba50:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800ba54:	b350      	cbz	r0, 800baac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800ba56:	682b      	ldr	r3, [r5, #0]
 800ba58:	4628      	mov	r0, r5
 800ba5a:	695b      	ldr	r3, [r3, #20]
 800ba5c:	4798      	blx	r3
 800ba5e:	4607      	mov	r7, r0
 800ba60:	b320      	cbz	r0, 800baac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800ba62:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ba64:	4639      	mov	r1, r7
 800ba66:	6803      	ldr	r3, [r0, #0]
 800ba68:	68db      	ldr	r3, [r3, #12]
 800ba6a:	4798      	blx	r3
 800ba6c:	4606      	mov	r6, r0
 800ba6e:	b1e8      	cbz	r0, 800baac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800ba70:	7b43      	ldrb	r3, [r0, #13]
 800ba72:	7a82      	ldrb	r2, [r0, #10]
 800ba74:	005b      	lsls	r3, r3, #1
 800ba76:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ba7a:	4313      	orrs	r3, r2
 800ba7c:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800ba80:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 800ba84:	2b06      	cmp	r3, #6
 800ba86:	d111      	bne.n	800baac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800ba88:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ba8a:	4632      	mov	r2, r6
 800ba8c:	4639      	mov	r1, r7
 800ba8e:	6803      	ldr	r3, [r0, #0]
 800ba90:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ba92:	4798      	blx	r3
 800ba94:	7b73      	ldrb	r3, [r6, #13]
 800ba96:	005b      	lsls	r3, r3, #1
 800ba98:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800ba9c:	7ab3      	ldrb	r3, [r6, #10]
 800ba9e:	4313      	orrs	r3, r2
 800baa0:	4418      	add	r0, r3
 800baa2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800baa6:	4418      	add	r0, r3
 800baa8:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 800baac:	2600      	movs	r6, #0
 800baae:	4637      	mov	r7, r6
 800bab0:	a806      	add	r0, sp, #24
 800bab2:	3701      	adds	r7, #1
 800bab4:	f001 fb9b 	bl	800d1ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800bab8:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 800babc:	9b03      	ldr	r3, [sp, #12]
 800babe:	b2bf      	uxth	r7, r7
 800bac0:	4286      	cmp	r6, r0
 800bac2:	eba9 0903 	sub.w	r9, r9, r3
 800bac6:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800baca:	bfb8      	it	lt
 800bacc:	4606      	movlt	r6, r0
 800bace:	fa0f f989 	sxth.w	r9, r9
 800bad2:	b236      	sxth	r6, r6
 800bad4:	2b00      	cmp	r3, #0
 800bad6:	f43f af0d 	beq.w	800b8f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800bada:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 800bade:	2b00      	cmp	r3, #0
 800bae0:	f47f af08 	bne.w	800b8f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800bae4:	7a2b      	ldrb	r3, [r5, #8]
 800bae6:	444b      	add	r3, r9
 800bae8:	2b00      	cmp	r3, #0
 800baea:	dce1      	bgt.n	800bab0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 800baec:	e702      	b.n	800b8f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800baee:	bf00      	nop
 800baf0:	20015100 	.word	0x20015100
 800baf4:	200150fc 	.word	0x200150fc
 800baf8:	20015104 	.word	0x20015104
 800bafc:	20015108 	.word	0x20015108
 800bb00:	ebaa 0606 	sub.w	r6, sl, r6
 800bb04:	2002      	movs	r0, #2
 800bb06:	fb96 f6f0 	sdiv	r6, r6, r0
 800bb0a:	e71c      	b.n	800b946 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800bb0c:	441e      	add	r6, r3
 800bb0e:	ebaa 0606 	sub.w	r6, sl, r6
 800bb12:	e718      	b.n	800b946 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800bb14:	8925      	ldrh	r5, [r4, #8]
 800bb16:	1aed      	subs	r5, r5, r3
 800bb18:	eba5 050a 	sub.w	r5, r5, sl
 800bb1c:	fa0f fb85 	sxth.w	fp, r5
 800bb20:	8965      	ldrh	r5, [r4, #10]
 800bb22:	eba5 0509 	sub.w	r5, r5, r9
 800bb26:	b22d      	sxth	r5, r5
 800bb28:	e72d      	b.n	800b986 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800bb2a:	8965      	ldrh	r5, [r4, #10]
 800bb2c:	f04f 0b00 	mov.w	fp, #0
 800bb30:	1aed      	subs	r5, r5, r3
 800bb32:	4633      	mov	r3, r6
 800bb34:	463e      	mov	r6, r7
 800bb36:	eba5 050a 	sub.w	r5, r5, sl
 800bb3a:	461f      	mov	r7, r3
 800bb3c:	b22d      	sxth	r5, r5
 800bb3e:	e722      	b.n	800b986 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800bb40:	2500      	movs	r5, #0
 800bb42:	e720      	b.n	800b986 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

0800bb44 <_ZN8touchgfx8TextAreaD0Ev>:
 800bb44:	b510      	push	{r4, lr}
 800bb46:	4604      	mov	r4, r0
 800bb48:	2148      	movs	r1, #72	@ 0x48
 800bb4a:	f012 fdc5 	bl	801e6d8 <_ZdlPvj>
 800bb4e:	4620      	mov	r0, r4
 800bb50:	bd10      	pop	{r4, pc}
	...

0800bb54 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800bb54:	b513      	push	{r0, r1, r4, lr}
 800bb56:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 800bb5a:	4604      	mov	r4, r0
 800bb5c:	b1fb      	cbz	r3, 800bb9e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800bb5e:	4b16      	ldr	r3, [pc, #88]	@ (800bbb8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800bb60:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800bb62:	881b      	ldrh	r3, [r3, #0]
 800bb64:	428b      	cmp	r3, r1
 800bb66:	d91a      	bls.n	800bb9e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800bb68:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800bb6c:	2b00      	cmp	r3, #0
 800bb6e:	dd16      	ble.n	800bb9e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800bb70:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800bb74:	2b00      	cmp	r3, #0
 800bb76:	dd12      	ble.n	800bb9e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800bb78:	4b10      	ldr	r3, [pc, #64]	@ (800bbbc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800bb7a:	6818      	ldr	r0, [r3, #0]
 800bb7c:	f7f7 fada 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 800bb80:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800bb84:	6822      	ldr	r2, [r4, #0]
 800bb86:	2b00      	cmp	r3, #0
 800bb88:	db06      	blt.n	800bb98 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800bb8a:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800bb8e:	2b00      	cmp	r3, #0
 800bb90:	db02      	blt.n	800bb98 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800bb92:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800bb94:	4298      	cmp	r0, r3
 800bb96:	d004      	beq.n	800bba2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800bb98:	6953      	ldr	r3, [r2, #20]
 800bb9a:	4620      	mov	r0, r4
 800bb9c:	4798      	blx	r3
 800bb9e:	b002      	add	sp, #8
 800bba0:	bd10      	pop	{r4, pc}
 800bba2:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 800bba6:	466b      	mov	r3, sp
 800bba8:	6912      	ldr	r2, [r2, #16]
 800bbaa:	c903      	ldmia	r1, {r0, r1}
 800bbac:	e883 0003 	stmia.w	r3, {r0, r1}
 800bbb0:	4619      	mov	r1, r3
 800bbb2:	4620      	mov	r0, r4
 800bbb4:	4790      	blx	r2
 800bbb6:	e7f2      	b.n	800bb9e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800bbb8:	20015100 	.word	0x20015100
 800bbbc:	20015108 	.word	0x20015108

0800bbc0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800bbc0:	4b45      	ldr	r3, [pc, #276]	@ (800bcd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800bbc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbc6:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800bbc8:	b08e      	sub	sp, #56	@ 0x38
 800bbca:	881b      	ldrh	r3, [r3, #0]
 800bbcc:	4604      	mov	r4, r0
 800bbce:	4293      	cmp	r3, r2
 800bbd0:	d97e      	bls.n	800bcd0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800bbd2:	6808      	ldr	r0, [r1, #0]
 800bbd4:	ab05      	add	r3, sp, #20
 800bbd6:	6849      	ldr	r1, [r1, #4]
 800bbd8:	4d40      	ldr	r5, [pc, #256]	@ (800bcdc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800bbda:	c303      	stmia	r3!, {r0, r1}
 800bbdc:	4611      	mov	r1, r2
 800bbde:	6828      	ldr	r0, [r5, #0]
 800bbe0:	f7f7 faa8 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 800bbe4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800bbe8:	2b00      	cmp	r3, #0
 800bbea:	db11      	blt.n	800bc10 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800bbec:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800bbf0:	2b00      	cmp	r3, #0
 800bbf2:	db0d      	blt.n	800bc10 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800bbf4:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800bbf6:	4298      	cmp	r0, r3
 800bbf8:	d10a      	bne.n	800bc10 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800bbfa:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 800bbfe:	ab09      	add	r3, sp, #36	@ 0x24
 800bc00:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bc04:	e883 0003 	stmia.w	r3, {r0, r1}
 800bc08:	4619      	mov	r1, r3
 800bc0a:	a805      	add	r0, sp, #20
 800bc0c:	f7fe fcf8 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 800bc10:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800bc14:	2b00      	cmp	r3, #0
 800bc16:	dd5b      	ble.n	800bcd0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800bc18:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800bc1c:	2b00      	cmp	r3, #0
 800bc1e:	dd57      	ble.n	800bcd0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800bc20:	4f2f      	ldr	r7, [pc, #188]	@ (800bce0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800bc22:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800bc24:	683b      	ldr	r3, [r7, #0]
 800bc26:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800bc2a:	4b2e      	ldr	r3, [pc, #184]	@ (800bce4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800bc2c:	681b      	ldr	r3, [r3, #0]
 800bc2e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800bc32:	2e00      	cmp	r6, #0
 800bc34:	d04c      	beq.n	800bcd0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800bc36:	6823      	ldr	r3, [r4, #0]
 800bc38:	4620      	mov	r0, r4
 800bc3a:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 800bc3e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800bc40:	4798      	blx	r3
 800bc42:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800bc44:	683b      	ldr	r3, [r7, #0]
 800bc46:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 800bc4a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800bc4e:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 800bc52:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 800bc56:	785b      	ldrb	r3, [r3, #1]
 800bc58:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 800bc5c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800bc60:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800bc62:	9609      	str	r6, [sp, #36]	@ 0x24
 800bc64:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800bc68:	4b1f      	ldr	r3, [pc, #124]	@ (800bce8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800bc6a:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 800bc6e:	681b      	ldr	r3, [r3, #0]
 800bc70:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 800bc74:	910b      	str	r1, [sp, #44]	@ 0x2c
 800bc76:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 800bc7a:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 800bc7e:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 800bc82:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 800bc86:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bc8a:	b10a      	cbz	r2, 800bc90 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800bc8c:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 800bc8e:	b906      	cbnz	r6, 800bc92 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800bc90:	689e      	ldr	r6, [r3, #8]
 800bc92:	af07      	add	r7, sp, #28
 800bc94:	4621      	mov	r1, r4
 800bc96:	4638      	mov	r0, r7
 800bc98:	f003 f952 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bc9c:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800bc9e:	6828      	ldr	r0, [r5, #0]
 800bca0:	f7f7 fa48 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 800bca4:	6823      	ldr	r3, [r4, #0]
 800bca6:	4605      	mov	r5, r0
 800bca8:	4620      	mov	r0, r4
 800bcaa:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bcac:	4798      	blx	r3
 800bcae:	6823      	ldr	r3, [r4, #0]
 800bcb0:	4680      	mov	r8, r0
 800bcb2:	4620      	mov	r0, r4
 800bcb4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800bcb8:	4798      	blx	r3
 800bcba:	ab09      	add	r3, sp, #36	@ 0x24
 800bcbc:	9501      	str	r5, [sp, #4]
 800bcbe:	9300      	str	r3, [sp, #0]
 800bcc0:	ab05      	add	r3, sp, #20
 800bcc2:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800bcc6:	4630      	mov	r0, r6
 800bcc8:	e897 0006 	ldmia.w	r7, {r1, r2}
 800bccc:	f7f7 f9e4 	bl	8003098 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800bcd0:	b00e      	add	sp, #56	@ 0x38
 800bcd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bcd6:	bf00      	nop
 800bcd8:	20015100 	.word	0x20015100
 800bcdc:	20015108 	.word	0x20015108
 800bce0:	200150fc 	.word	0x200150fc
 800bce4:	20015104 	.word	0x20015104
 800bce8:	200150ac 	.word	0x200150ac

0800bcec <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800bcec:	b570      	push	{r4, r5, r6, lr}
 800bcee:	6803      	ldr	r3, [r0, #0]
 800bcf0:	4604      	mov	r4, r0
 800bcf2:	4615      	mov	r5, r2
 800bcf4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bcf6:	4798      	blx	r3
 800bcf8:	6823      	ldr	r3, [r4, #0]
 800bcfa:	4629      	mov	r1, r5
 800bcfc:	4620      	mov	r0, r4
 800bcfe:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bd00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd04:	4718      	bx	r3
	...

0800bd08 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800bd08:	b538      	push	{r3, r4, r5, lr}
 800bd0a:	4b0e      	ldr	r3, [pc, #56]	@ (800bd44 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800bd0c:	4604      	mov	r4, r0
 800bd0e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800bd10:	881b      	ldrh	r3, [r3, #0]
 800bd12:	429a      	cmp	r2, r3
 800bd14:	d214      	bcs.n	800bd40 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800bd16:	6803      	ldr	r3, [r0, #0]
 800bd18:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800bd1a:	4798      	blx	r3
 800bd1c:	6823      	ldr	r3, [r4, #0]
 800bd1e:	4605      	mov	r5, r0
 800bd20:	4620      	mov	r0, r4
 800bd22:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800bd24:	4798      	blx	r3
 800bd26:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800bd2a:	b22d      	sxth	r5, r5
 800bd2c:	4601      	mov	r1, r0
 800bd2e:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800bd32:	bf06      	itte	eq
 800bd34:	4602      	moveq	r2, r0
 800bd36:	4629      	moveq	r1, r5
 800bd38:	462a      	movne	r2, r5
 800bd3a:	4620      	mov	r0, r4
 800bd3c:	f7ff ffd6 	bl	800bcec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800bd40:	bd38      	pop	{r3, r4, r5, pc}
 800bd42:	bf00      	nop
 800bd44:	20015100 	.word	0x20015100

0800bd48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800bd48:	b530      	push	{r4, r5, lr}
 800bd4a:	888b      	ldrh	r3, [r1, #4]
 800bd4c:	b085      	sub	sp, #20
 800bd4e:	4604      	mov	r4, r0
 800bd50:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800bd52:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800bd56:	b923      	cbnz	r3, 800bd62 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800bd58:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800bd5c:	b90b      	cbnz	r3, 800bd62 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800bd5e:	f7ff ffd3 	bl	800bd08 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800bd62:	6823      	ldr	r3, [r4, #0]
 800bd64:	466d      	mov	r5, sp
 800bd66:	4621      	mov	r1, r4
 800bd68:	343c      	adds	r4, #60	@ 0x3c
 800bd6a:	4628      	mov	r0, r5
 800bd6c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800bd70:	4798      	blx	r3
 800bd72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800bd76:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800bd7a:	b005      	add	sp, #20
 800bd7c:	bd30      	pop	{r4, r5, pc}

0800bd7e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800bd7e:	2300      	movs	r3, #0
 800bd80:	8083      	strh	r3, [r0, #4]
 800bd82:	80c3      	strh	r3, [r0, #6]
 800bd84:	8003      	strh	r3, [r0, #0]
 800bd86:	8043      	strh	r3, [r0, #2]
 800bd88:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800bd8c:	2bff      	cmp	r3, #255	@ 0xff
 800bd8e:	bf01      	itttt	eq
 800bd90:	890b      	ldrheq	r3, [r1, #8]
 800bd92:	8083      	strheq	r3, [r0, #4]
 800bd94:	894b      	ldrheq	r3, [r1, #10]
 800bd96:	80c3      	strheq	r3, [r0, #6]
 800bd98:	4770      	bx	lr
	...

0800bd9c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800bd9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bd9e:	4604      	mov	r4, r0
 800bda0:	466b      	mov	r3, sp
 800bda2:	6808      	ldr	r0, [r1, #0]
 800bda4:	6849      	ldr	r1, [r1, #4]
 800bda6:	c303      	stmia	r3!, {r0, r1}
 800bda8:	6823      	ldr	r3, [r4, #0]
 800bdaa:	4669      	mov	r1, sp
 800bdac:	4620      	mov	r0, r4
 800bdae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bdb0:	4798      	blx	r3
 800bdb2:	4b08      	ldr	r3, [pc, #32]	@ (800bdd4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800bdb4:	681b      	ldr	r3, [r3, #0]
 800bdb6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bdba:	b10a      	cbz	r2, 800bdc0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800bdbc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800bdbe:	b900      	cbnz	r0, 800bdc2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800bdc0:	6898      	ldr	r0, [r3, #8]
 800bdc2:	6803      	ldr	r3, [r0, #0]
 800bdc4:	4669      	mov	r1, sp
 800bdc6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800bdc8:	6a1d      	ldr	r5, [r3, #32]
 800bdca:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800bdce:	47a8      	blx	r5
 800bdd0:	b003      	add	sp, #12
 800bdd2:	bd30      	pop	{r4, r5, pc}
 800bdd4:	200150ac 	.word	0x200150ac

0800bdd8 <_ZN8touchgfx3BoxD1Ev>:
 800bdd8:	4770      	bx	lr

0800bdda <_ZN8touchgfx3BoxD0Ev>:
 800bdda:	b510      	push	{r4, lr}
 800bddc:	4604      	mov	r4, r0
 800bdde:	212c      	movs	r1, #44	@ 0x2c
 800bde0:	f012 fc7a 	bl	801e6d8 <_ZdlPvj>
 800bde4:	4620      	mov	r0, r4
 800bde6:	bd10      	pop	{r4, pc}

0800bde8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800bde8:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800bdec:	b12a      	cbz	r2, 800bdfa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800bdee:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800bdf2:	b112      	cbz	r2, 800bdfa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800bdf4:	6803      	ldr	r3, [r0, #0]
 800bdf6:	695b      	ldr	r3, [r3, #20]
 800bdf8:	4718      	bx	r3
 800bdfa:	4770      	bx	lr

0800bdfc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800bdfc:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800be00:	4770      	bx	lr

0800be02 <_ZN8touchgfx6ButtonD1Ev>:
 800be02:	4770      	bx	lr

0800be04 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800be04:	b570      	push	{r4, r5, r6, lr}
 800be06:	880b      	ldrh	r3, [r1, #0]
 800be08:	4605      	mov	r5, r0
 800be0a:	4604      	mov	r4, r0
 800be0c:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800be0e:	8813      	ldrh	r3, [r2, #0]
 800be10:	f825 3f30 	strh.w	r3, [r5, #48]!
 800be14:	4628      	mov	r0, r5
 800be16:	f004 ffef 	bl	8010df8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800be1a:	4606      	mov	r6, r0
 800be1c:	4628      	mov	r0, r5
 800be1e:	f005 f81f 	bl	8010e60 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800be22:	6823      	ldr	r3, [r4, #0]
 800be24:	4605      	mov	r5, r0
 800be26:	4631      	mov	r1, r6
 800be28:	4620      	mov	r0, r4
 800be2a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800be2c:	4798      	blx	r3
 800be2e:	6823      	ldr	r3, [r4, #0]
 800be30:	4629      	mov	r1, r5
 800be32:	4620      	mov	r0, r4
 800be34:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800be36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be3a:	4718      	bx	r3

0800be3c <_ZN8touchgfx6ButtonD0Ev>:
 800be3c:	b510      	push	{r4, lr}
 800be3e:	4604      	mov	r4, r0
 800be40:	2134      	movs	r1, #52	@ 0x34
 800be42:	f012 fc49 	bl	801e6d8 <_ZdlPvj>
 800be46:	4620      	mov	r0, r4
 800be48:	bd10      	pop	{r4, pc}

0800be4a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800be4a:	b510      	push	{r4, lr}
 800be4c:	4604      	mov	r4, r0
 800be4e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800be50:	b150      	cbz	r0, 800be68 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800be52:	6803      	ldr	r3, [r0, #0]
 800be54:	68db      	ldr	r3, [r3, #12]
 800be56:	4798      	blx	r3
 800be58:	b130      	cbz	r0, 800be68 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800be5a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800be5c:	4621      	mov	r1, r4
 800be5e:	6803      	ldr	r3, [r0, #0]
 800be60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800be64:	689b      	ldr	r3, [r3, #8]
 800be66:	4718      	bx	r3
 800be68:	bd10      	pop	{r4, pc}

0800be6a <_ZNK8touchgfx6Button12getSolidRectEv>:
 800be6a:	b510      	push	{r4, lr}
 800be6c:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 800be70:	4604      	mov	r4, r0
 800be72:	2bff      	cmp	r3, #255	@ 0xff
 800be74:	d006      	beq.n	800be84 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800be76:	2300      	movs	r3, #0
 800be78:	8003      	strh	r3, [r0, #0]
 800be7a:	8043      	strh	r3, [r0, #2]
 800be7c:	8083      	strh	r3, [r0, #4]
 800be7e:	80c3      	strh	r3, [r0, #6]
 800be80:	4620      	mov	r0, r4
 800be82:	bd10      	pop	{r4, pc}
 800be84:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 800be88:	b11b      	cbz	r3, 800be92 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800be8a:	3130      	adds	r1, #48	@ 0x30
 800be8c:	f005 f81c 	bl	8010ec8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800be90:	e7f6      	b.n	800be80 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800be92:	312e      	adds	r1, #46	@ 0x2e
 800be94:	e7fa      	b.n	800be8c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800be98 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800be98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be9c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800bea0:	b08a      	sub	sp, #40	@ 0x28
 800bea2:	4604      	mov	r4, r0
 800bea4:	4688      	mov	r8, r1
 800bea6:	2b00      	cmp	r3, #0
 800bea8:	d066      	beq.n	800bf78 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800beaa:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800beac:	a805      	add	r0, sp, #20
 800beae:	f8ad 3014 	strh.w	r3, [sp, #20]
 800beb2:	f004 ffa1 	bl	8010df8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800beb6:	4607      	mov	r7, r0
 800beb8:	a805      	add	r0, sp, #20
 800beba:	f004 ffd1 	bl	8010e60 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bebe:	f9b8 6000 	ldrsh.w	r6, [r8]
 800bec2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800bec6:	2300      	movs	r3, #0
 800bec8:	4432      	add	r2, r6
 800beca:	9306      	str	r3, [sp, #24]
 800becc:	b292      	uxth	r2, r2
 800bece:	fa0f fc82 	sxth.w	ip, r2
 800bed2:	459c      	cmp	ip, r3
 800bed4:	dd52      	ble.n	800bf7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800bed6:	42b7      	cmp	r7, r6
 800bed8:	dd50      	ble.n	800bf7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800beda:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800bede:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800bee2:	442b      	add	r3, r5
 800bee4:	b29b      	uxth	r3, r3
 800bee6:	b219      	sxth	r1, r3
 800bee8:	2900      	cmp	r1, #0
 800beea:	dd47      	ble.n	800bf7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800beec:	42a8      	cmp	r0, r5
 800beee:	dd45      	ble.n	800bf7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800bef0:	4567      	cmp	r7, ip
 800bef2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800bef6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800befa:	bfb8      	it	lt
 800befc:	b2ba      	uxthlt	r2, r7
 800befe:	4288      	cmp	r0, r1
 800bf00:	f8ad 6018 	strh.w	r6, [sp, #24]
 800bf04:	bfb8      	it	lt
 800bf06:	b283      	uxthlt	r3, r0
 800bf08:	1b92      	subs	r2, r2, r6
 800bf0a:	f8ad 501a 	strh.w	r5, [sp, #26]
 800bf0e:	1b5b      	subs	r3, r3, r5
 800bf10:	f8ad 201c 	strh.w	r2, [sp, #28]
 800bf14:	f8ad 301e 	strh.w	r3, [sp, #30]
 800bf18:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800bf1c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800bf20:	429a      	cmp	r2, r3
 800bf22:	d026      	beq.n	800bf72 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800bf24:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800bf28:	2b00      	cmp	r3, #0
 800bf2a:	dd22      	ble.n	800bf72 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800bf2c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800bf30:	2b00      	cmp	r3, #0
 800bf32:	dd1e      	ble.n	800bf72 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800bf34:	2300      	movs	r3, #0
 800bf36:	a908      	add	r1, sp, #32
 800bf38:	4620      	mov	r0, r4
 800bf3a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800bf3e:	6823      	ldr	r3, [r4, #0]
 800bf40:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bf42:	4798      	blx	r3
 800bf44:	4b0f      	ldr	r3, [pc, #60]	@ (800bf84 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800bf46:	681b      	ldr	r3, [r3, #0]
 800bf48:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bf4c:	b10a      	cbz	r2, 800bf52 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800bf4e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800bf50:	b900      	cbnz	r0, 800bf54 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800bf52:	6898      	ldr	r0, [r3, #8]
 800bf54:	2501      	movs	r5, #1
 800bf56:	6801      	ldr	r1, [r0, #0]
 800bf58:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 800bf5c:	9502      	str	r5, [sp, #8]
 800bf5e:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800bf62:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800bf66:	9401      	str	r4, [sp, #4]
 800bf68:	ac06      	add	r4, sp, #24
 800bf6a:	9400      	str	r4, [sp, #0]
 800bf6c:	688c      	ldr	r4, [r1, #8]
 800bf6e:	a905      	add	r1, sp, #20
 800bf70:	47a0      	blx	r4
 800bf72:	b00a      	add	sp, #40	@ 0x28
 800bf74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bf78:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 800bf7a:	e797      	b.n	800beac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800bf7c:	2300      	movs	r3, #0
 800bf7e:	9307      	str	r3, [sp, #28]
 800bf80:	e7ca      	b.n	800bf18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800bf82:	bf00      	nop
 800bf84:	200150ac 	.word	0x200150ac

0800bf88 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800bf88:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800bf8c:	b12a      	cbz	r2, 800bf9a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800bf8e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800bf92:	b112      	cbz	r2, 800bf9a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800bf94:	6803      	ldr	r3, [r0, #0]
 800bf96:	695b      	ldr	r3, [r3, #20]
 800bf98:	4718      	bx	r3
 800bf9a:	4770      	bx	lr

0800bf9c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800bf9c:	4b30      	ldr	r3, [pc, #192]	@ (800c060 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800bf9e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bfa2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800bfa4:	b08d      	sub	sp, #52	@ 0x34
 800bfa6:	881b      	ldrh	r3, [r3, #0]
 800bfa8:	4604      	mov	r4, r0
 800bfaa:	460f      	mov	r7, r1
 800bfac:	4293      	cmp	r3, r2
 800bfae:	d954      	bls.n	800c05a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800bfb0:	4b2c      	ldr	r3, [pc, #176]	@ (800c064 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800bfb2:	6819      	ldr	r1, [r3, #0]
 800bfb4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800bfb8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800bfbc:	4a2a      	ldr	r2, [pc, #168]	@ (800c068 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800bfbe:	6812      	ldr	r2, [r2, #0]
 800bfc0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800bfc4:	2900      	cmp	r1, #0
 800bfc6:	d048      	beq.n	800c05a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800bfc8:	785a      	ldrb	r2, [r3, #1]
 800bfca:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800bfce:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800bfd2:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800bfd6:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800bfda:	4b24      	ldr	r3, [pc, #144]	@ (800c06c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800bfdc:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800bfe0:	681a      	ldr	r2, [r3, #0]
 800bfe2:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800bfe6:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800bfea:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800bfee:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800bff0:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800bff4:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800bff8:	9107      	str	r1, [sp, #28]
 800bffa:	f88d 8020 	strb.w	r8, [sp, #32]
 800bffe:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800c002:	9609      	str	r6, [sp, #36]	@ 0x24
 800c004:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800c008:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800c00c:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800c010:	b10b      	cbz	r3, 800c016 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800c012:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800c014:	b905      	cbnz	r5, 800c018 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800c016:	6895      	ldr	r5, [r2, #8]
 800c018:	ae05      	add	r6, sp, #20
 800c01a:	4621      	mov	r1, r4
 800c01c:	4630      	mov	r0, r6
 800c01e:	f002 ff8f 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c022:	4b13      	ldr	r3, [pc, #76]	@ (800c070 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800c024:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800c026:	6818      	ldr	r0, [r3, #0]
 800c028:	f7f7 f884 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 800c02c:	6823      	ldr	r3, [r4, #0]
 800c02e:	4680      	mov	r8, r0
 800c030:	4620      	mov	r0, r4
 800c032:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800c034:	4798      	blx	r3
 800c036:	6823      	ldr	r3, [r4, #0]
 800c038:	4681      	mov	r9, r0
 800c03a:	4620      	mov	r0, r4
 800c03c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800c040:	4798      	blx	r3
 800c042:	ab07      	add	r3, sp, #28
 800c044:	f8cd 8004 	str.w	r8, [sp, #4]
 800c048:	9300      	str	r3, [sp, #0]
 800c04a:	463b      	mov	r3, r7
 800c04c:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800c050:	4628      	mov	r0, r5
 800c052:	e896 0006 	ldmia.w	r6, {r1, r2}
 800c056:	f7f7 f81f 	bl	8003098 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c05a:	b00d      	add	sp, #52	@ 0x34
 800c05c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c060:	20015100 	.word	0x20015100
 800c064:	200150fc 	.word	0x200150fc
 800c068:	20015104 	.word	0x20015104
 800c06c:	200150ac 	.word	0x200150ac
 800c070:	20015108 	.word	0x20015108

0800c074 <_ZN8touchgfx5ImageD1Ev>:
 800c074:	4770      	bx	lr

0800c076 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800c076:	b570      	push	{r4, r5, r6, lr}
 800c078:	880b      	ldrh	r3, [r1, #0]
 800c07a:	460d      	mov	r5, r1
 800c07c:	4604      	mov	r4, r0
 800c07e:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800c080:	4608      	mov	r0, r1
 800c082:	f004 feb9 	bl	8010df8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c086:	4606      	mov	r6, r0
 800c088:	4628      	mov	r0, r5
 800c08a:	f004 fee9 	bl	8010e60 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c08e:	6823      	ldr	r3, [r4, #0]
 800c090:	4605      	mov	r5, r0
 800c092:	4631      	mov	r1, r6
 800c094:	4620      	mov	r0, r4
 800c096:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c098:	4798      	blx	r3
 800c09a:	6823      	ldr	r3, [r4, #0]
 800c09c:	4629      	mov	r1, r5
 800c09e:	4620      	mov	r0, r4
 800c0a0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c0a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c0a6:	4718      	bx	r3

0800c0a8 <_ZN8touchgfx5ImageD0Ev>:
 800c0a8:	b510      	push	{r4, lr}
 800c0aa:	4604      	mov	r4, r0
 800c0ac:	212c      	movs	r1, #44	@ 0x2c
 800c0ae:	f012 fb13 	bl	801e6d8 <_ZdlPvj>
 800c0b2:	4620      	mov	r0, r4
 800c0b4:	bd10      	pop	{r4, pc}

0800c0b6 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800c0b6:	b510      	push	{r4, lr}
 800c0b8:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800c0bc:	4604      	mov	r4, r0
 800c0be:	2bff      	cmp	r3, #255	@ 0xff
 800c0c0:	d006      	beq.n	800c0d0 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800c0c2:	2300      	movs	r3, #0
 800c0c4:	8003      	strh	r3, [r0, #0]
 800c0c6:	8043      	strh	r3, [r0, #2]
 800c0c8:	8083      	strh	r3, [r0, #4]
 800c0ca:	80c3      	strh	r3, [r0, #6]
 800c0cc:	4620      	mov	r0, r4
 800c0ce:	bd10      	pop	{r4, pc}
 800c0d0:	3126      	adds	r1, #38	@ 0x26
 800c0d2:	f004 fef9 	bl	8010ec8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c0d6:	e7f9      	b.n	800c0cc <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800c0d8 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800c0d8:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800c0dc:	b12a      	cbz	r2, 800c0ea <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c0de:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800c0e2:	b112      	cbz	r2, 800c0ea <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c0e4:	6803      	ldr	r3, [r0, #0]
 800c0e6:	695b      	ldr	r3, [r3, #20]
 800c0e8:	4718      	bx	r3
 800c0ea:	4770      	bx	lr

0800c0ec <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800c0ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c0f0:	4604      	mov	r4, r0
 800c0f2:	b088      	sub	sp, #32
 800c0f4:	2500      	movs	r5, #0
 800c0f6:	460f      	mov	r7, r1
 800c0f8:	f854 3b26 	ldr.w	r3, [r4], #38
 800c0fc:	a904      	add	r1, sp, #16
 800c0fe:	4606      	mov	r6, r0
 800c100:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c102:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800c106:	4798      	blx	r3
 800c108:	4620      	mov	r0, r4
 800c10a:	f004 fe75 	bl	8010df8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c10e:	4680      	mov	r8, r0
 800c110:	4620      	mov	r0, r4
 800c112:	f004 fea5 	bl	8010e60 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c116:	9506      	str	r5, [sp, #24]
 800c118:	ad06      	add	r5, sp, #24
 800c11a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c11e:	4639      	mov	r1, r7
 800c120:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c124:	4628      	mov	r0, r5
 800c126:	f7fe fa6b 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 800c12a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c12e:	2b00      	cmp	r3, #0
 800c130:	dd19      	ble.n	800c166 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c132:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c136:	2b00      	cmp	r3, #0
 800c138:	dd15      	ble.n	800c166 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c13a:	4b0c      	ldr	r3, [pc, #48]	@ (800c16c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800c13c:	681b      	ldr	r3, [r3, #0]
 800c13e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c142:	b10a      	cbz	r2, 800c148 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800c144:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800c146:	b900      	cbnz	r0, 800c14a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800c148:	6898      	ldr	r0, [r3, #8]
 800c14a:	2701      	movs	r7, #1
 800c14c:	6801      	ldr	r1, [r0, #0]
 800c14e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800c152:	9702      	str	r7, [sp, #8]
 800c154:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800c158:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800c15c:	e9cd 5600 	strd	r5, r6, [sp]
 800c160:	688d      	ldr	r5, [r1, #8]
 800c162:	4621      	mov	r1, r4
 800c164:	47a8      	blx	r5
 800c166:	b008      	add	sp, #32
 800c168:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c16c:	200150ac 	.word	0x200150ac

0800c170 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800c170:	4770      	bx	lr

0800c172 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800c172:	b510      	push	{r4, lr}
 800c174:	4604      	mov	r4, r0
 800c176:	2148      	movs	r1, #72	@ 0x48
 800c178:	f012 faae 	bl	801e6d8 <_ZdlPvj>
 800c17c:	4620      	mov	r0, r4
 800c17e:	bd10      	pop	{r4, pc}

0800c180 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800c180:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c184:	b08d      	sub	sp, #52	@ 0x34
 800c186:	4604      	mov	r4, r0
 800c188:	460f      	mov	r7, r1
 800c18a:	f7ff fe85 	bl	800be98 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800c18e:	4a55      	ldr	r2, [pc, #340]	@ (800c2e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800c190:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800c192:	8812      	ldrh	r2, [r2, #0]
 800c194:	429a      	cmp	r2, r3
 800c196:	f240 8082 	bls.w	800c29e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800c19a:	4d53      	ldr	r5, [pc, #332]	@ (800c2e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800c19c:	682a      	ldr	r2, [r5, #0]
 800c19e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c1a2:	4b52      	ldr	r3, [pc, #328]	@ (800c2ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800c1a4:	681b      	ldr	r3, [r3, #0]
 800c1a6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800c1aa:	2200      	movs	r2, #0
 800c1ac:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
 800c1b0:	e9cd 2203 	strd	r2, r2, [sp, #12]
 800c1b4:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 800c1b8:	2a03      	cmp	r2, #3
 800c1ba:	d811      	bhi.n	800c1e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800c1bc:	e8df f002 	tbb	[pc, r2]
 800c1c0:	89727902 	.word	0x89727902
 800c1c4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800c1c8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c1cc:	1ad2      	subs	r2, r2, r3
 800c1ce:	2002      	movs	r0, #2
 800c1d0:	f8ad 1010 	strh.w	r1, [sp, #16]
 800c1d4:	f8ad 3012 	strh.w	r3, [sp, #18]
 800c1d8:	fb92 f2f0 	sdiv	r2, r2, r0
 800c1dc:	f8ad 200e 	strh.w	r2, [sp, #14]
 800c1e0:	f10d 080c 	add.w	r8, sp, #12
 800c1e4:	f10d 0914 	add.w	r9, sp, #20
 800c1e8:	e898 0003 	ldmia.w	r8, {r0, r1}
 800c1ec:	e889 0003 	stmia.w	r9, {r0, r1}
 800c1f0:	4639      	mov	r1, r7
 800c1f2:	4648      	mov	r0, r9
 800c1f4:	f7fe fa04 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 800c1f8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800c1fc:	2b00      	cmp	r3, #0
 800c1fe:	dd4e      	ble.n	800c29e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800c200:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800c204:	2b00      	cmp	r3, #0
 800c206:	dd4a      	ble.n	800c29e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800c208:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800c20c:	4641      	mov	r1, r8
 800c20e:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c212:	4620      	mov	r0, r4
 800c214:	1a9b      	subs	r3, r3, r2
 800c216:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800c21a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c21e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800c222:	1a9b      	subs	r3, r3, r2
 800c224:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c228:	6823      	ldr	r3, [r4, #0]
 800c22a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c22c:	4798      	blx	r3
 800c22e:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800c232:	2b00      	cmp	r3, #0
 800c234:	d053      	beq.n	800c2de <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 800c236:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800c238:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
 800c23a:	682b      	ldr	r3, [r5, #0]
 800c23c:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
 800c240:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800c244:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
 800c248:	785b      	ldrb	r3, [r3, #1]
 800c24a:	9209      	str	r2, [sp, #36]	@ 0x24
 800c24c:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800c250:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c254:	9607      	str	r6, [sp, #28]
 800c256:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 800c25a:	2300      	movs	r3, #0
 800c25c:	f88d 5020 	strb.w	r5, [sp, #32]
 800c260:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 800c264:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
 800c268:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800c26c:	4b20      	ldr	r3, [pc, #128]	@ (800c2f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800c26e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800c272:	681b      	ldr	r3, [r3, #0]
 800c274:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800c278:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c27c:	b10a      	cbz	r2, 800c282 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800c27e:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 800c280:	b904      	cbnz	r4, 800c284 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 800c282:	689c      	ldr	r4, [r3, #8]
 800c284:	4b1b      	ldr	r3, [pc, #108]	@ (800c2f4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800c286:	6818      	ldr	r0, [r3, #0]
 800c288:	f7f6 ff54 	bl	8003134 <_ZNK8touchgfx5Texts7getTextEt>
 800c28c:	ab07      	add	r3, sp, #28
 800c28e:	9001      	str	r0, [sp, #4]
 800c290:	4620      	mov	r0, r4
 800c292:	9300      	str	r3, [sp, #0]
 800c294:	464b      	mov	r3, r9
 800c296:	e898 0006 	ldmia.w	r8, {r1, r2}
 800c29a:	f7f6 fefd 	bl	8003098 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c29e:	b00d      	add	sp, #52	@ 0x34
 800c2a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c2a4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800c2a8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c2ac:	1ad2      	subs	r2, r2, r3
 800c2ae:	3201      	adds	r2, #1
 800c2b0:	e78d      	b.n	800c1ce <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 800c2b2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c2b6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800c2ba:	1ad2      	subs	r2, r2, r3
 800c2bc:	3201      	adds	r2, #1
 800c2be:	2002      	movs	r0, #2
 800c2c0:	f8ad 3010 	strh.w	r3, [sp, #16]
 800c2c4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800c2c8:	fb92 f2f0 	sdiv	r2, r2, r0
 800c2cc:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c2d0:	e786      	b.n	800c1e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800c2d2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c2d6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800c2da:	1ad2      	subs	r2, r2, r3
 800c2dc:	e7ef      	b.n	800c2be <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 800c2de:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 800c2e0:	e7aa      	b.n	800c238 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 800c2e2:	bf00      	nop
 800c2e4:	20015100 	.word	0x20015100
 800c2e8:	200150fc 	.word	0x200150fc
 800c2ec:	20015104 	.word	0x20015104
 800c2f0:	200150ac 	.word	0x200150ac
 800c2f4:	20015108 	.word	0x20015108

0800c2f8 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800c2f8:	2101      	movs	r1, #1
 800c2fa:	2200      	movs	r2, #0
 800c2fc:	b510      	push	{r4, lr}
 800c2fe:	4c13      	ldr	r4, [pc, #76]	@ (800c34c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800c300:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800c304:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800c308:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800c30c:	6004      	str	r4, [r0, #0]
 800c30e:	4c10      	ldr	r4, [pc, #64]	@ (800c350 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800c310:	8082      	strh	r2, [r0, #4]
 800c312:	80c2      	strh	r2, [r0, #6]
 800c314:	8102      	strh	r2, [r0, #8]
 800c316:	8142      	strh	r2, [r0, #10]
 800c318:	8182      	strh	r2, [r0, #12]
 800c31a:	81c2      	strh	r2, [r0, #14]
 800c31c:	8202      	strh	r2, [r0, #16]
 800c31e:	8242      	strh	r2, [r0, #18]
 800c320:	61c2      	str	r2, [r0, #28]
 800c322:	8402      	strh	r2, [r0, #32]
 800c324:	8442      	strh	r2, [r0, #34]	@ 0x22
 800c326:	6282      	str	r2, [r0, #40]	@ 0x28
 800c328:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 800c32c:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 800c32e:	8601      	strh	r1, [r0, #48]	@ 0x30
 800c330:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 800c334:	6344      	str	r4, [r0, #52]	@ 0x34
 800c336:	8701      	strh	r1, [r0, #56]	@ 0x38
 800c338:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
 800c33c:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
 800c340:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c344:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 800c348:	bd10      	pop	{r4, pc}
 800c34a:	bf00      	nop
 800c34c:	08021144 	.word	0x08021144
 800c350:	08020018 	.word	0x08020018

0800c354 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800c354:	b510      	push	{r4, lr}
 800c356:	6803      	ldr	r3, [r0, #0]
 800c358:	460c      	mov	r4, r1
 800c35a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c35c:	4798      	blx	r3
 800c35e:	1b03      	subs	r3, r0, r4
 800c360:	4258      	negs	r0, r3
 800c362:	4158      	adcs	r0, r3
 800c364:	bd10      	pop	{r4, pc}
	...

0800c368 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800c368:	4b01      	ldr	r3, [pc, #4]	@ (800c370 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800c36a:	6019      	str	r1, [r3, #0]
 800c36c:	4770      	bx	lr
 800c36e:	bf00      	nop
 800c370:	200150b4 	.word	0x200150b4

0800c374 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c378:	4696      	mov	lr, r2
 800c37a:	b097      	sub	sp, #92	@ 0x5c
 800c37c:	4605      	mov	r5, r0
 800c37e:	4614      	mov	r4, r2
 800c380:	460e      	mov	r6, r1
 800c382:	461f      	mov	r7, r3
 800c384:	f10d 0c1c 	add.w	ip, sp, #28
 800c388:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800c38c:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800c390:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800c394:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c398:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c39c:	f8de 3000 	ldr.w	r3, [lr]
 800c3a0:	f104 0e14 	add.w	lr, r4, #20
 800c3a4:	f8cc 3000 	str.w	r3, [ip]
 800c3a8:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c3ac:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c3b0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c3b4:	f8de 3000 	ldr.w	r3, [lr]
 800c3b8:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c3bc:	f8cc 3000 	str.w	r3, [ip]
 800c3c0:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c3c4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c3c8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c3cc:	f8de 3000 	ldr.w	r3, [lr]
 800c3d0:	4631      	mov	r1, r6
 800c3d2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c3d4:	4628      	mov	r0, r5
 800c3d6:	f8cc 3000 	str.w	r3, [ip]
 800c3da:	682b      	ldr	r3, [r5, #0]
 800c3dc:	9201      	str	r2, [sp, #4]
 800c3de:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c3e0:	f8cd 8008 	str.w	r8, [sp, #8]
 800c3e4:	9200      	str	r2, [sp, #0]
 800c3e6:	aa07      	add	r2, sp, #28
 800c3e8:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c3ec:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800c3f0:	463b      	mov	r3, r7
 800c3f2:	47d8      	blx	fp
 800c3f4:	46a6      	mov	lr, r4
 800c3f6:	f10d 0c1c 	add.w	ip, sp, #28
 800c3fa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c3fe:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c402:	f8de 3000 	ldr.w	r3, [lr]
 800c406:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c40a:	343c      	adds	r4, #60	@ 0x3c
 800c40c:	f8cc 3000 	str.w	r3, [ip]
 800c410:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c414:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c418:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c41c:	f8de 3000 	ldr.w	r3, [lr]
 800c420:	f8cc 3000 	str.w	r3, [ip]
 800c424:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c428:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c42a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c42e:	6823      	ldr	r3, [r4, #0]
 800c430:	4631      	mov	r1, r6
 800c432:	4628      	mov	r0, r5
 800c434:	f8cc 3000 	str.w	r3, [ip]
 800c438:	682b      	ldr	r3, [r5, #0]
 800c43a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c43e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c440:	f8cd 8008 	str.w	r8, [sp, #8]
 800c444:	9201      	str	r2, [sp, #4]
 800c446:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c448:	9200      	str	r2, [sp, #0]
 800c44a:	aa07      	add	r2, sp, #28
 800c44c:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800c44e:	463b      	mov	r3, r7
 800c450:	47a0      	blx	r4
 800c452:	b017      	add	sp, #92	@ 0x5c
 800c454:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c458 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c45c:	b08d      	sub	sp, #52	@ 0x34
 800c45e:	4688      	mov	r8, r1
 800c460:	f8d3 c000 	ldr.w	ip, [r3]
 800c464:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800c466:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800c46a:	680f      	ldr	r7, [r1, #0]
 800c46c:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800c470:	eba7 070c 	sub.w	r7, r7, ip
 800c474:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800c478:	edd3 6a07 	vldr	s13, [r3, #28]
 800c47c:	42bc      	cmp	r4, r7
 800c47e:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800c480:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800c484:	bfa8      	it	ge
 800c486:	463c      	movge	r4, r7
 800c488:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c48c:	f9ba 1000 	ldrsh.w	r1, [sl]
 800c490:	ee07 4a90 	vmov	s15, r4
 800c494:	eb09 0e0c 	add.w	lr, r9, ip
 800c498:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800c49c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c4a0:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800c4a4:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800c4a8:	4571      	cmp	r1, lr
 800c4aa:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c4ae:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c4b2:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c4b6:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800c4ba:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c4be:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c4c2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c4c6:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c4ca:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c4ce:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c4d2:	f340 808c 	ble.w	800c5ee <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800c4d6:	eba1 060e 	sub.w	r6, r1, lr
 800c4da:	fb96 f5f4 	sdiv	r5, r6, r4
 800c4de:	ee07 5a10 	vmov	s14, r5
 800c4e2:	2d00      	cmp	r5, #0
 800c4e4:	fb04 6615 	mls	r6, r4, r5, r6
 800c4e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c4ec:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c4f0:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c4f4:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c4f8:	dd12      	ble.n	800c520 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800c4fa:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c4fe:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c502:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c506:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c50a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c50e:	bf14      	ite	ne
 800c510:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c514:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c518:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c51c:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c520:	fb05 f204 	mul.w	r2, r5, r4
 800c524:	1abf      	subs	r7, r7, r2
 800c526:	4494      	add	ip, r2
 800c528:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800c52c:	4411      	add	r1, r2
 800c52e:	eb09 020c 	add.w	r2, r9, ip
 800c532:	b209      	sxth	r1, r1
 800c534:	443a      	add	r2, r7
 800c536:	428a      	cmp	r2, r1
 800c538:	bfc4      	itt	gt
 800c53a:	eba1 0209 	subgt.w	r2, r1, r9
 800c53e:	eba2 070c 	subgt.w	r7, r2, ip
 800c542:	2f00      	cmp	r7, #0
 800c544:	dd50      	ble.n	800c5e8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800c546:	fb97 f1f4 	sdiv	r1, r7, r4
 800c54a:	fb04 7211 	mls	r2, r4, r1, r7
 800c54e:	b90a      	cbnz	r2, 800c554 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800c550:	3901      	subs	r1, #1
 800c552:	4622      	mov	r2, r4
 800c554:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c558:	6840      	ldr	r0, [r0, #4]
 800c55a:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800c55e:	44b6      	add	lr, r6
 800c560:	f8d0 a000 	ldr.w	sl, [r0]
 800c564:	2900      	cmp	r1, #0
 800c566:	bfcc      	ite	gt
 800c568:	46a1      	movgt	r9, r4
 800c56a:	4691      	movle	r9, r2
 800c56c:	900b      	str	r0, [sp, #44]	@ 0x2c
 800c56e:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800c570:	fb04 e505 	mla	r5, r4, r5, lr
 800c574:	eef0 6a42 	vmov.f32	s13, s4
 800c578:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800c57c:	9008      	str	r0, [sp, #32]
 800c57e:	eeb0 7a61 	vmov.f32	s14, s3
 800c582:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800c584:	695b      	ldr	r3, [r3, #20]
 800c586:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c58a:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800c58e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c592:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800c594:	445b      	add	r3, fp
 800c596:	9307      	str	r3, [sp, #28]
 800c598:	ee16 3a90 	vmov	r3, s13
 800c59c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800c5a0:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c5a4:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c5a8:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c5ac:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c5b0:	ee17 7a90 	vmov	r7, s15
 800c5b4:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c5b8:	fb97 f7f4 	sdiv	r7, r7, r4
 800c5bc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c5c0:	ee17 ca90 	vmov	ip, s15
 800c5c4:	fb9c fcf4 	sdiv	ip, ip, r4
 800c5c8:	fb0c 3306 	mla	r3, ip, r6, r3
 800c5cc:	9302      	str	r3, [sp, #8]
 800c5ce:	ee17 3a10 	vmov	r3, s14
 800c5d2:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800c5d6:	fb07 3706 	mla	r7, r7, r6, r3
 800c5da:	eba9 0306 	sub.w	r3, r9, r6
 800c5de:	e9cd 4700 	strd	r4, r7, [sp]
 800c5e2:	f8da 4008 	ldr.w	r4, [sl, #8]
 800c5e6:	47a0      	blx	r4
 800c5e8:	b00d      	add	sp, #52	@ 0x34
 800c5ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5ee:	2500      	movs	r5, #0
 800c5f0:	462e      	mov	r6, r5
 800c5f2:	e799      	b.n	800c528 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800c5f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c5f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5f8:	b0db      	sub	sp, #364	@ 0x16c
 800c5fa:	461d      	mov	r5, r3
 800c5fc:	4614      	mov	r4, r2
 800c5fe:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800c602:	910f      	str	r1, [sp, #60]	@ 0x3c
 800c604:	4629      	mov	r1, r5
 800c606:	930a      	str	r3, [sp, #40]	@ 0x28
 800c608:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800c60c:	9009      	str	r0, [sp, #36]	@ 0x24
 800c60e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c610:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800c614:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800c618:	9310      	str	r3, [sp, #64]	@ 0x40
 800c61a:	6803      	ldr	r3, [r0, #0]
 800c61c:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800c61e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800c622:	47b8      	blx	r7
 800c624:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c626:	6058      	str	r0, [r3, #4]
 800c628:	2800      	cmp	r0, #0
 800c62a:	f000 83a1 	beq.w	800cd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c62e:	682b      	ldr	r3, [r5, #0]
 800c630:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800c634:	ed94 7a02 	vldr	s14, [r4, #8]
 800c638:	9314      	str	r3, [sp, #80]	@ 0x50
 800c63a:	686b      	ldr	r3, [r5, #4]
 800c63c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c640:	9315      	str	r3, [sp, #84]	@ 0x54
 800c642:	4bc1      	ldr	r3, [pc, #772]	@ (800c948 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800c644:	7819      	ldrb	r1, [r3, #0]
 800c646:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800c64a:	2900      	cmp	r1, #0
 800c64c:	bf16      	itet	ne
 800c64e:	4619      	movne	r1, r3
 800c650:	4611      	moveq	r1, r2
 800c652:	4613      	movne	r3, r2
 800c654:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c658:	9116      	str	r1, [sp, #88]	@ 0x58
 800c65a:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800c65e:	f240 8387 	bls.w	800cd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c662:	ed94 7a07 	vldr	s14, [r4, #28]
 800c666:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c66a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c66e:	f240 837f 	bls.w	800cd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c672:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800c676:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c67a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c67e:	f240 8377 	bls.w	800cd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c682:	6822      	ldr	r2, [r4, #0]
 800c684:	4bb1      	ldr	r3, [pc, #708]	@ (800c94c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800c686:	429a      	cmp	r2, r3
 800c688:	f2c0 8372 	blt.w	800cd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c68c:	49b0      	ldr	r1, [pc, #704]	@ (800c950 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800c68e:	6963      	ldr	r3, [r4, #20]
 800c690:	428a      	cmp	r2, r1
 800c692:	f300 836d 	bgt.w	800cd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c696:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c69a:	48ae      	ldr	r0, [pc, #696]	@ (800c954 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800c69c:	33ff      	adds	r3, #255	@ 0xff
 800c69e:	4283      	cmp	r3, r0
 800c6a0:	f200 8366 	bhi.w	800cd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c6a4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800c6a6:	4dac      	ldr	r5, [pc, #688]	@ (800c958 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800c6a8:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c6ac:	33ff      	adds	r3, #255	@ 0xff
 800c6ae:	42ab      	cmp	r3, r5
 800c6b0:	f200 835e 	bhi.w	800cd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c6b4:	6862      	ldr	r2, [r4, #4]
 800c6b6:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800c6ba:	33ff      	adds	r3, #255	@ 0xff
 800c6bc:	4283      	cmp	r3, r0
 800c6be:	f200 8357 	bhi.w	800cd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c6c2:	69a1      	ldr	r1, [r4, #24]
 800c6c4:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800c6c8:	33ff      	adds	r3, #255	@ 0xff
 800c6ca:	4283      	cmp	r3, r0
 800c6cc:	f200 8350 	bhi.w	800cd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c6d0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800c6d2:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800c6d6:	30ff      	adds	r0, #255	@ 0xff
 800c6d8:	42a8      	cmp	r0, r5
 800c6da:	f200 8349 	bhi.w	800cd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c6de:	428a      	cmp	r2, r1
 800c6e0:	f280 8110 	bge.w	800c904 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800c6e4:	429a      	cmp	r2, r3
 800c6e6:	f300 8119 	bgt.w	800c91c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800c6ea:	4299      	cmp	r1, r3
 800c6ec:	f280 811d 	bge.w	800c92a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800c6f0:	2502      	movs	r5, #2
 800c6f2:	2701      	movs	r7, #1
 800c6f4:	46a9      	mov	r9, r5
 800c6f6:	46b8      	mov	r8, r7
 800c6f8:	f04f 0a00 	mov.w	sl, #0
 800c6fc:	4621      	mov	r1, r4
 800c6fe:	a849      	add	r0, sp, #292	@ 0x124
 800c700:	f003 fd26 	bl	8010150 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800c704:	4622      	mov	r2, r4
 800c706:	4653      	mov	r3, sl
 800c708:	a949      	add	r1, sp, #292	@ 0x124
 800c70a:	f8cd 9000 	str.w	r9, [sp]
 800c70e:	a819      	add	r0, sp, #100	@ 0x64
 800c710:	f003 fe4e 	bl	80103b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c714:	4622      	mov	r2, r4
 800c716:	4653      	mov	r3, sl
 800c718:	a949      	add	r1, sp, #292	@ 0x124
 800c71a:	f8cd 8000 	str.w	r8, [sp]
 800c71e:	a829      	add	r0, sp, #164	@ 0xa4
 800c720:	f003 fe46 	bl	80103b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c724:	4643      	mov	r3, r8
 800c726:	4622      	mov	r2, r4
 800c728:	a949      	add	r1, sp, #292	@ 0x124
 800c72a:	f8cd 9000 	str.w	r9, [sp]
 800c72e:	a839      	add	r0, sp, #228	@ 0xe4
 800c730:	f003 fe3e 	bl	80103b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c734:	42af      	cmp	r7, r5
 800c736:	af12      	add	r7, sp, #72	@ 0x48
 800c738:	bfb7      	itett	lt
 800c73a:	2300      	movlt	r3, #0
 800c73c:	2301      	movge	r3, #1
 800c73e:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800c740:	ac19      	addlt	r4, sp, #100	@ 0x64
 800c742:	bfb1      	iteee	lt
 800c744:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800c746:	ad19      	addge	r5, sp, #100	@ 0x64
 800c748:	930e      	strge	r3, [sp, #56]	@ 0x38
 800c74a:	ac29      	addge	r4, sp, #164	@ 0xa4
 800c74c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c74e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c752:	e887 0003 	stmia.w	r7, {r0, r1}
 800c756:	b928      	cbnz	r0, 800c764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800c758:	4b80      	ldr	r3, [pc, #512]	@ (800c95c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800c75a:	6818      	ldr	r0, [r3, #0]
 800c75c:	6803      	ldr	r3, [r0, #0]
 800c75e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c760:	4798      	blx	r3
 800c762:	6038      	str	r0, [r7, #0]
 800c764:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c766:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800c76a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c76e:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800c770:	930c      	str	r3, [sp, #48]	@ 0x30
 800c772:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c774:	6963      	ldr	r3, [r4, #20]
 800c776:	440b      	add	r3, r1
 800c778:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c77c:	4408      	add	r0, r1
 800c77e:	b200      	sxth	r0, r0
 800c780:	4283      	cmp	r3, r0
 800c782:	900d      	str	r0, [sp, #52]	@ 0x34
 800c784:	f280 80dd 	bge.w	800c942 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800c788:	428b      	cmp	r3, r1
 800c78a:	da08      	bge.n	800c79e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c78c:	2a00      	cmp	r2, #0
 800c78e:	dd06      	ble.n	800c79e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c790:	1acb      	subs	r3, r1, r3
 800c792:	429a      	cmp	r2, r3
 800c794:	f2c0 80e4 	blt.w	800c960 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800c798:	2b00      	cmp	r3, #0
 800c79a:	f300 80e2 	bgt.w	800c962 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800c79e:	6967      	ldr	r7, [r4, #20]
 800c7a0:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800c7a4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c7a6:	443b      	add	r3, r7
 800c7a8:	461f      	mov	r7, r3
 800c7aa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c7ac:	1bdf      	subs	r7, r3, r7
 800c7ae:	4297      	cmp	r7, r2
 800c7b0:	bfa8      	it	ge
 800c7b2:	4617      	movge	r7, r2
 800c7b4:	2f00      	cmp	r7, #0
 800c7b6:	f340 8166 	ble.w	800ca86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800c7ba:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c7bc:	6829      	ldr	r1, [r5, #0]
 800c7be:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c7c2:	f9bb 3000 	ldrsh.w	r3, [fp]
 800c7c6:	4411      	add	r1, r2
 800c7c8:	6820      	ldr	r0, [r4, #0]
 800c7ca:	4299      	cmp	r1, r3
 800c7cc:	dd1a      	ble.n	800c804 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c7ce:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800c7d2:	4402      	add	r2, r0
 800c7d4:	440b      	add	r3, r1
 800c7d6:	b21b      	sxth	r3, r3
 800c7d8:	429a      	cmp	r2, r3
 800c7da:	dc13      	bgt.n	800c804 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c7dc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800c7de:	a912      	add	r1, sp, #72	@ 0x48
 800c7e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c7e2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c7e4:	681b      	ldr	r3, [r3, #0]
 800c7e6:	9206      	str	r2, [sp, #24]
 800c7e8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c7ea:	9500      	str	r5, [sp, #0]
 800c7ec:	9205      	str	r2, [sp, #20]
 800c7ee:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c7f0:	e9cd b203 	strd	fp, r2, [sp, #12]
 800c7f4:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800c7f6:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800c7fa:	aa49      	add	r2, sp, #292	@ 0x124
 800c7fc:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800c800:	4623      	mov	r3, r4
 800c802:	47c8      	blx	r9
 800c804:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800c808:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800c80c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800c810:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c814:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800c818:	68a1      	ldr	r1, [r4, #8]
 800c81a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c81e:	ed94 6a08 	vldr	s12, [r4, #32]
 800c822:	edd4 6a07 	vldr	s13, [r4, #28]
 800c826:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c82a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c82e:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c832:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c836:	edc4 6a07 	vstr	s13, [r4, #28]
 800c83a:	441a      	add	r2, r3
 800c83c:	6963      	ldr	r3, [r4, #20]
 800c83e:	3301      	adds	r3, #1
 800c840:	6022      	str	r2, [r4, #0]
 800c842:	6163      	str	r3, [r4, #20]
 800c844:	69a3      	ldr	r3, [r4, #24]
 800c846:	3b01      	subs	r3, #1
 800c848:	61a3      	str	r3, [r4, #24]
 800c84a:	6923      	ldr	r3, [r4, #16]
 800c84c:	440b      	add	r3, r1
 800c84e:	68e1      	ldr	r1, [r4, #12]
 800c850:	428b      	cmp	r3, r1
 800c852:	6123      	str	r3, [r4, #16]
 800c854:	db15      	blt.n	800c882 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800c856:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800c85a:	3201      	adds	r2, #1
 800c85c:	1a5b      	subs	r3, r3, r1
 800c85e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c862:	6022      	str	r2, [r4, #0]
 800c864:	6123      	str	r3, [r4, #16]
 800c866:	edc4 6a07 	vstr	s13, [r4, #28]
 800c86a:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800c86e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c872:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c876:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800c87a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c87e:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c882:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800c886:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800c88a:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800c88e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c892:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800c896:	68a9      	ldr	r1, [r5, #8]
 800c898:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c89c:	ed95 6a08 	vldr	s12, [r5, #32]
 800c8a0:	edd5 6a07 	vldr	s13, [r5, #28]
 800c8a4:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c8a8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c8ac:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c8b0:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c8b4:	edc5 6a07 	vstr	s13, [r5, #28]
 800c8b8:	441a      	add	r2, r3
 800c8ba:	696b      	ldr	r3, [r5, #20]
 800c8bc:	3301      	adds	r3, #1
 800c8be:	602a      	str	r2, [r5, #0]
 800c8c0:	616b      	str	r3, [r5, #20]
 800c8c2:	69ab      	ldr	r3, [r5, #24]
 800c8c4:	3b01      	subs	r3, #1
 800c8c6:	61ab      	str	r3, [r5, #24]
 800c8c8:	692b      	ldr	r3, [r5, #16]
 800c8ca:	440b      	add	r3, r1
 800c8cc:	68e9      	ldr	r1, [r5, #12]
 800c8ce:	428b      	cmp	r3, r1
 800c8d0:	612b      	str	r3, [r5, #16]
 800c8d2:	db15      	blt.n	800c900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800c8d4:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800c8d8:	3201      	adds	r2, #1
 800c8da:	1a5b      	subs	r3, r3, r1
 800c8dc:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c8e0:	602a      	str	r2, [r5, #0]
 800c8e2:	612b      	str	r3, [r5, #16]
 800c8e4:	edc5 6a07 	vstr	s13, [r5, #28]
 800c8e8:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800c8ec:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c8f0:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c8f4:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800c8f8:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c8fc:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c900:	3f01      	subs	r7, #1
 800c902:	e757      	b.n	800c7b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800c904:	4299      	cmp	r1, r3
 800c906:	dc13      	bgt.n	800c930 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800c908:	429a      	cmp	r2, r3
 800c90a:	da14      	bge.n	800c936 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800c90c:	2502      	movs	r5, #2
 800c90e:	2703      	movs	r7, #3
 800c910:	f04f 0800 	mov.w	r8, #0
 800c914:	46a9      	mov	r9, r5
 800c916:	f04f 0a01 	mov.w	sl, #1
 800c91a:	e6ef      	b.n	800c6fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800c91c:	2501      	movs	r5, #1
 800c91e:	2700      	movs	r7, #0
 800c920:	46a9      	mov	r9, r5
 800c922:	46b8      	mov	r8, r7
 800c924:	f04f 0a02 	mov.w	sl, #2
 800c928:	e6e8      	b.n	800c6fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800c92a:	2501      	movs	r5, #1
 800c92c:	2702      	movs	r7, #2
 800c92e:	e6e1      	b.n	800c6f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800c930:	2500      	movs	r5, #0
 800c932:	2701      	movs	r7, #1
 800c934:	e7f4      	b.n	800c920 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800c936:	2702      	movs	r7, #2
 800c938:	2503      	movs	r5, #3
 800c93a:	f04f 0900 	mov.w	r9, #0
 800c93e:	46b8      	mov	r8, r7
 800c940:	e7e9      	b.n	800c916 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800c942:	4613      	mov	r3, r2
 800c944:	e728      	b.n	800c798 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800c946:	bf00      	nop
 800c948:	200150a4 	.word	0x200150a4
 800c94c:	fffd8f01 	.word	0xfffd8f01
 800c950:	00027100 	.word	0x00027100
 800c954:	0004e1ff 	.word	0x0004e1ff
 800c958:	0004e1fe 	.word	0x0004e1fe
 800c95c:	200150ac 	.word	0x200150ac
 800c960:	4613      	mov	r3, r2
 800c962:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800c964:	469e      	mov	lr, r3
 800c966:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800c968:	469c      	mov	ip, r3
 800c96a:	9111      	str	r1, [sp, #68]	@ 0x44
 800c96c:	f04f 0900 	mov.w	r9, #0
 800c970:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800c974:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800c978:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800c97c:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800c980:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800c984:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800c988:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800c98c:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800c990:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800c994:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800c998:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800c99c:	f1bc 0f00 	cmp.w	ip, #0
 800c9a0:	d147      	bne.n	800ca32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800c9a2:	eb03 0c07 	add.w	ip, r3, r7
 800c9a6:	1ad7      	subs	r7, r2, r3
 800c9a8:	f1b9 0f00 	cmp.w	r9, #0
 800c9ac:	d009      	beq.n	800c9c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800c9ae:	9029      	str	r0, [sp, #164]	@ 0xa4
 800c9b0:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800c9b4:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800c9b8:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800c9bc:	912d      	str	r1, [sp, #180]	@ 0xb4
 800c9be:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800c9c2:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800c9c4:	f04f 0800 	mov.w	r8, #0
 800c9c8:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800c9cc:	9111      	str	r1, [sp, #68]	@ 0x44
 800c9ce:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800c9d2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800c9d6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800c9da:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800c9de:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800c9e2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800c9e6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800c9ea:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800c9ee:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800c9f2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800c9f6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800c9fa:	f1be 0f00 	cmp.w	lr, #0
 800c9fe:	d031      	beq.n	800ca64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800ca00:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ca02:	4450      	add	r0, sl
 800ca04:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ca08:	4431      	add	r1, r6
 800ca0a:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ca0e:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ca12:	4549      	cmp	r1, r9
 800ca14:	db08      	blt.n	800ca28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ca16:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ca1a:	3001      	adds	r0, #1
 800ca1c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ca20:	eba1 0109 	sub.w	r1, r1, r9
 800ca24:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ca28:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ca2c:	f04f 0801 	mov.w	r8, #1
 800ca30:	e7e3      	b.n	800c9fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ca32:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ca34:	4450      	add	r0, sl
 800ca36:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ca3a:	4431      	add	r1, r6
 800ca3c:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ca40:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ca44:	4541      	cmp	r1, r8
 800ca46:	db08      	blt.n	800ca5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ca48:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ca4c:	3001      	adds	r0, #1
 800ca4e:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ca52:	eba1 0108 	sub.w	r1, r1, r8
 800ca56:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ca5a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ca5e:	f04f 0901 	mov.w	r9, #1
 800ca62:	e79b      	b.n	800c99c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ca64:	449c      	add	ip, r3
 800ca66:	1aff      	subs	r7, r7, r3
 800ca68:	f1b8 0f00 	cmp.w	r8, #0
 800ca6c:	d009      	beq.n	800ca82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ca6e:	9019      	str	r0, [sp, #100]	@ 0x64
 800ca70:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800ca74:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800ca78:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800ca7c:	911d      	str	r1, [sp, #116]	@ 0x74
 800ca7e:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800ca82:	1ad2      	subs	r2, r2, r3
 800ca84:	e68b      	b.n	800c79e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ca86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ca88:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800ca8a:	2b00      	cmp	r3, #0
 800ca8c:	f000 80d1 	beq.w	800cc32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ca90:	ad19      	add	r5, sp, #100	@ 0x64
 800ca92:	ac39      	add	r4, sp, #228	@ 0xe4
 800ca94:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ca96:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ca9a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ca9e:	930c      	str	r3, [sp, #48]	@ 0x30
 800caa0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800caa2:	6963      	ldr	r3, [r4, #20]
 800caa4:	440b      	add	r3, r1
 800caa6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800caaa:	4408      	add	r0, r1
 800caac:	b200      	sxth	r0, r0
 800caae:	4283      	cmp	r3, r0
 800cab0:	900d      	str	r0, [sp, #52]	@ 0x34
 800cab2:	f280 80c1 	bge.w	800cc38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800cab6:	428b      	cmp	r3, r1
 800cab8:	da08      	bge.n	800cacc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800caba:	2a00      	cmp	r2, #0
 800cabc:	dd06      	ble.n	800cacc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cabe:	1acb      	subs	r3, r1, r3
 800cac0:	429a      	cmp	r2, r3
 800cac2:	f2c0 80bb 	blt.w	800cc3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800cac6:	2b00      	cmp	r3, #0
 800cac8:	f300 80b9 	bgt.w	800cc3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800cacc:	6967      	ldr	r7, [r4, #20]
 800cace:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800cad2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800cad4:	443b      	add	r3, r7
 800cad6:	461f      	mov	r7, r3
 800cad8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800cada:	1bdf      	subs	r7, r3, r7
 800cadc:	4297      	cmp	r7, r2
 800cade:	bfa8      	it	ge
 800cae0:	4617      	movge	r7, r2
 800cae2:	2f00      	cmp	r7, #0
 800cae4:	f340 813c 	ble.w	800cd60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800cae8:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800caea:	6829      	ldr	r1, [r5, #0]
 800caec:	f9b3 2000 	ldrsh.w	r2, [r3]
 800caf0:	f9bb 3000 	ldrsh.w	r3, [fp]
 800caf4:	4411      	add	r1, r2
 800caf6:	6820      	ldr	r0, [r4, #0]
 800caf8:	4299      	cmp	r1, r3
 800cafa:	dd1a      	ble.n	800cb32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800cafc:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800cb00:	4402      	add	r2, r0
 800cb02:	440b      	add	r3, r1
 800cb04:	b21b      	sxth	r3, r3
 800cb06:	429a      	cmp	r2, r3
 800cb08:	dc13      	bgt.n	800cb32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800cb0a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800cb0c:	a912      	add	r1, sp, #72	@ 0x48
 800cb0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800cb10:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800cb12:	681b      	ldr	r3, [r3, #0]
 800cb14:	9206      	str	r2, [sp, #24]
 800cb16:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800cb18:	9500      	str	r5, [sp, #0]
 800cb1a:	9205      	str	r2, [sp, #20]
 800cb1c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800cb1e:	e9cd b203 	strd	fp, r2, [sp, #12]
 800cb22:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800cb24:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800cb28:	aa49      	add	r2, sp, #292	@ 0x124
 800cb2a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800cb2e:	4623      	mov	r3, r4
 800cb30:	47c8      	blx	r9
 800cb32:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800cb36:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800cb3a:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800cb3e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cb42:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800cb46:	68a1      	ldr	r1, [r4, #8]
 800cb48:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cb4c:	ed94 6a08 	vldr	s12, [r4, #32]
 800cb50:	edd4 6a07 	vldr	s13, [r4, #28]
 800cb54:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800cb58:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cb5c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800cb60:	e9d4 2300 	ldrd	r2, r3, [r4]
 800cb64:	edc4 6a07 	vstr	s13, [r4, #28]
 800cb68:	441a      	add	r2, r3
 800cb6a:	6963      	ldr	r3, [r4, #20]
 800cb6c:	3301      	adds	r3, #1
 800cb6e:	6022      	str	r2, [r4, #0]
 800cb70:	6163      	str	r3, [r4, #20]
 800cb72:	69a3      	ldr	r3, [r4, #24]
 800cb74:	3b01      	subs	r3, #1
 800cb76:	61a3      	str	r3, [r4, #24]
 800cb78:	6923      	ldr	r3, [r4, #16]
 800cb7a:	440b      	add	r3, r1
 800cb7c:	68e1      	ldr	r1, [r4, #12]
 800cb7e:	428b      	cmp	r3, r1
 800cb80:	6123      	str	r3, [r4, #16]
 800cb82:	db15      	blt.n	800cbb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800cb84:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800cb88:	3201      	adds	r2, #1
 800cb8a:	1a5b      	subs	r3, r3, r1
 800cb8c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cb90:	6022      	str	r2, [r4, #0]
 800cb92:	6123      	str	r3, [r4, #16]
 800cb94:	edc4 6a07 	vstr	s13, [r4, #28]
 800cb98:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800cb9c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cba0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800cba4:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800cba8:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cbac:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800cbb0:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800cbb4:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800cbb8:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800cbbc:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cbc0:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800cbc4:	68a9      	ldr	r1, [r5, #8]
 800cbc6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cbca:	ed95 6a08 	vldr	s12, [r5, #32]
 800cbce:	edd5 6a07 	vldr	s13, [r5, #28]
 800cbd2:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800cbd6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cbda:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800cbde:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cbe2:	edc5 6a07 	vstr	s13, [r5, #28]
 800cbe6:	441a      	add	r2, r3
 800cbe8:	696b      	ldr	r3, [r5, #20]
 800cbea:	3301      	adds	r3, #1
 800cbec:	602a      	str	r2, [r5, #0]
 800cbee:	616b      	str	r3, [r5, #20]
 800cbf0:	69ab      	ldr	r3, [r5, #24]
 800cbf2:	3b01      	subs	r3, #1
 800cbf4:	61ab      	str	r3, [r5, #24]
 800cbf6:	692b      	ldr	r3, [r5, #16]
 800cbf8:	440b      	add	r3, r1
 800cbfa:	68e9      	ldr	r1, [r5, #12]
 800cbfc:	428b      	cmp	r3, r1
 800cbfe:	612b      	str	r3, [r5, #16]
 800cc00:	db15      	blt.n	800cc2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800cc02:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800cc06:	3201      	adds	r2, #1
 800cc08:	1a5b      	subs	r3, r3, r1
 800cc0a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cc0e:	602a      	str	r2, [r5, #0]
 800cc10:	612b      	str	r3, [r5, #16]
 800cc12:	edc5 6a07 	vstr	s13, [r5, #28]
 800cc16:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800cc1a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cc1e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800cc22:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800cc26:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cc2a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800cc2e:	3f01      	subs	r7, #1
 800cc30:	e757      	b.n	800cae2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800cc32:	ad39      	add	r5, sp, #228	@ 0xe4
 800cc34:	ac19      	add	r4, sp, #100	@ 0x64
 800cc36:	e72d      	b.n	800ca94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800cc38:	4613      	mov	r3, r2
 800cc3a:	e744      	b.n	800cac6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800cc3c:	4613      	mov	r3, r2
 800cc3e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800cc40:	469e      	mov	lr, r3
 800cc42:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800cc46:	461f      	mov	r7, r3
 800cc48:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800cc4c:	f04f 0900 	mov.w	r9, #0
 800cc50:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800cc54:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800cc58:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800cc5c:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800cc60:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800cc64:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800cc66:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800cc6a:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800cc6e:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800cc72:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800cc76:	960e      	str	r6, [sp, #56]	@ 0x38
 800cc78:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800cc7c:	2f00      	cmp	r7, #0
 800cc7e:	d146      	bne.n	800cd0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800cc80:	449c      	add	ip, r3
 800cc82:	1ad7      	subs	r7, r2, r3
 800cc84:	f1b9 0f00 	cmp.w	r9, #0
 800cc88:	d009      	beq.n	800cc9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800cc8a:	9039      	str	r0, [sp, #228]	@ 0xe4
 800cc8c:	913d      	str	r1, [sp, #244]	@ 0xf4
 800cc8e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800cc92:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800cc96:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800cc9a:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800cc9e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800cca0:	f04f 0800 	mov.w	r8, #0
 800cca4:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800cca8:	910e      	str	r1, [sp, #56]	@ 0x38
 800ccaa:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800ccae:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800ccb2:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800ccb6:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800ccba:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800ccbe:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800ccc2:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800ccc6:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800ccca:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800ccce:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800ccd2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800ccd6:	f1be 0f00 	cmp.w	lr, #0
 800ccda:	d030      	beq.n	800cd3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800ccdc:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800ccde:	4450      	add	r0, sl
 800cce0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800cce4:	4431      	add	r1, r6
 800cce6:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ccea:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ccee:	4549      	cmp	r1, r9
 800ccf0:	db08      	blt.n	800cd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800ccf2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ccf6:	3001      	adds	r0, #1
 800ccf8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ccfc:	eba1 0109 	sub.w	r1, r1, r9
 800cd00:	ee37 7a06 	vadd.f32	s14, s14, s12
 800cd04:	f10e 3eff 	add.w	lr, lr, #4294967295
 800cd08:	f04f 0801 	mov.w	r8, #1
 800cd0c:	e7e3      	b.n	800ccd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800cd0e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800cd10:	4450      	add	r0, sl
 800cd12:	ee37 7a24 	vadd.f32	s14, s14, s9
 800cd16:	4431      	add	r1, r6
 800cd18:	ee77 7a84 	vadd.f32	s15, s15, s8
 800cd1c:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800cd20:	4541      	cmp	r1, r8
 800cd22:	db08      	blt.n	800cd36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800cd24:	ee76 6a85 	vadd.f32	s13, s13, s10
 800cd28:	3001      	adds	r0, #1
 800cd2a:	ee37 7a25 	vadd.f32	s14, s14, s11
 800cd2e:	eba1 0108 	sub.w	r1, r1, r8
 800cd32:	ee77 7a86 	vadd.f32	s15, s15, s12
 800cd36:	3f01      	subs	r7, #1
 800cd38:	f04f 0901 	mov.w	r9, #1
 800cd3c:	e79e      	b.n	800cc7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800cd3e:	449c      	add	ip, r3
 800cd40:	1aff      	subs	r7, r7, r3
 800cd42:	f1b8 0f00 	cmp.w	r8, #0
 800cd46:	d009      	beq.n	800cd5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800cd48:	9019      	str	r0, [sp, #100]	@ 0x64
 800cd4a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800cd4e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800cd52:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800cd56:	911d      	str	r1, [sp, #116]	@ 0x74
 800cd58:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800cd5c:	1ad2      	subs	r2, r2, r3
 800cd5e:	e6b5      	b.n	800cacc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cd60:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800cd62:	681b      	ldr	r3, [r3, #0]
 800cd64:	b923      	cbnz	r3, 800cd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800cd66:	4b04      	ldr	r3, [pc, #16]	@ (800cd78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800cd68:	6818      	ldr	r0, [r3, #0]
 800cd6a:	6803      	ldr	r3, [r0, #0]
 800cd6c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cd6e:	4798      	blx	r3
 800cd70:	b05b      	add	sp, #364	@ 0x16c
 800cd72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd76:	bf00      	nop
 800cd78:	200150ac 	.word	0x200150ac

0800cd7c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800cd7c:	b570      	push	{r4, r5, r6, lr}
 800cd7e:	4604      	mov	r4, r0
 800cd80:	2500      	movs	r5, #0
 800cd82:	9805      	ldr	r0, [sp, #20]
 800cd84:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800cd88:	6061      	str	r1, [r4, #4]
 800cd8a:	8263      	strh	r3, [r4, #18]
 800cd8c:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800cd90:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800cd94:	8025      	strh	r5, [r4, #0]
 800cd96:	7221      	strb	r1, [r4, #8]
 800cd98:	7266      	strb	r6, [r4, #9]
 800cd9a:	60e0      	str	r0, [r4, #12]
 800cd9c:	8222      	strh	r2, [r4, #16]
 800cd9e:	82a3      	strh	r3, [r4, #20]
 800cda0:	82e5      	strh	r5, [r4, #22]
 800cda2:	8325      	strh	r5, [r4, #24]
 800cda4:	8365      	strh	r5, [r4, #26]
 800cda6:	83a5      	strh	r5, [r4, #28]
 800cda8:	83e5      	strh	r5, [r4, #30]
 800cdaa:	8425      	strh	r5, [r4, #32]
 800cdac:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800cdb0:	b32e      	cbz	r6, 800cdfe <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800cdb2:	6803      	ldr	r3, [r0, #0]
 800cdb4:	695b      	ldr	r3, [r3, #20]
 800cdb6:	4798      	blx	r3
 800cdb8:	4606      	mov	r6, r0
 800cdba:	b300      	cbz	r0, 800cdfe <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800cdbc:	68e0      	ldr	r0, [r4, #12]
 800cdbe:	4631      	mov	r1, r6
 800cdc0:	6803      	ldr	r3, [r0, #0]
 800cdc2:	68db      	ldr	r3, [r3, #12]
 800cdc4:	4798      	blx	r3
 800cdc6:	4605      	mov	r5, r0
 800cdc8:	b1c8      	cbz	r0, 800cdfe <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800cdca:	7b43      	ldrb	r3, [r0, #13]
 800cdcc:	7a82      	ldrb	r2, [r0, #10]
 800cdce:	005b      	lsls	r3, r3, #1
 800cdd0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800cdd4:	4313      	orrs	r3, r2
 800cdd6:	8423      	strh	r3, [r4, #32]
 800cdd8:	7a63      	ldrb	r3, [r4, #9]
 800cdda:	2b06      	cmp	r3, #6
 800cddc:	d10f      	bne.n	800cdfe <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800cdde:	68e0      	ldr	r0, [r4, #12]
 800cde0:	462a      	mov	r2, r5
 800cde2:	4631      	mov	r1, r6
 800cde4:	6803      	ldr	r3, [r0, #0]
 800cde6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800cde8:	4798      	blx	r3
 800cdea:	7b6b      	ldrb	r3, [r5, #13]
 800cdec:	005b      	lsls	r3, r3, #1
 800cdee:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800cdf2:	7aab      	ldrb	r3, [r5, #10]
 800cdf4:	4313      	orrs	r3, r2
 800cdf6:	4418      	add	r0, r3
 800cdf8:	8c23      	ldrh	r3, [r4, #32]
 800cdfa:	4418      	add	r0, r3
 800cdfc:	8420      	strh	r0, [r4, #32]
 800cdfe:	4620      	mov	r0, r4
 800ce00:	bd70      	pop	{r4, r5, r6, pc}

0800ce02 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800ce02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce06:	2400      	movs	r4, #0
 800ce08:	b085      	sub	sp, #20
 800ce0a:	4681      	mov	r9, r0
 800ce0c:	4688      	mov	r8, r1
 800ce0e:	4692      	mov	sl, r2
 800ce10:	469b      	mov	fp, r3
 800ce12:	4627      	mov	r7, r4
 800ce14:	4625      	mov	r5, r4
 800ce16:	4626      	mov	r6, r4
 800ce18:	4554      	cmp	r4, sl
 800ce1a:	da2a      	bge.n	800ce72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ce1c:	2300      	movs	r3, #0
 800ce1e:	9303      	str	r3, [sp, #12]
 800ce20:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800ce24:	429d      	cmp	r5, r3
 800ce26:	d004      	beq.n	800ce32 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800ce28:	f242 030b 	movw	r3, #8203	@ 0x200b
 800ce2c:	429d      	cmp	r5, r3
 800ce2e:	bf18      	it	ne
 800ce30:	462f      	movne	r7, r5
 800ce32:	ab03      	add	r3, sp, #12
 800ce34:	4642      	mov	r2, r8
 800ce36:	4659      	mov	r1, fp
 800ce38:	4648      	mov	r0, r9
 800ce3a:	f002 ff9f 	bl	800fd7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ce3e:	4605      	mov	r5, r0
 800ce40:	b1b8      	cbz	r0, 800ce72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ce42:	280a      	cmp	r0, #10
 800ce44:	d015      	beq.n	800ce72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ce46:	9a03      	ldr	r2, [sp, #12]
 800ce48:	b18a      	cbz	r2, 800ce6e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800ce4a:	7b50      	ldrb	r0, [r2, #13]
 800ce4c:	4639      	mov	r1, r7
 800ce4e:	7a93      	ldrb	r3, [r2, #10]
 800ce50:	0040      	lsls	r0, r0, #1
 800ce52:	8895      	ldrh	r5, [r2, #4]
 800ce54:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800ce58:	4303      	orrs	r3, r0
 800ce5a:	4640      	mov	r0, r8
 800ce5c:	9301      	str	r3, [sp, #4]
 800ce5e:	f8d8 3000 	ldr.w	r3, [r8]
 800ce62:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ce64:	4798      	blx	r3
 800ce66:	9b01      	ldr	r3, [sp, #4]
 800ce68:	4418      	add	r0, r3
 800ce6a:	4406      	add	r6, r0
 800ce6c:	b2b6      	uxth	r6, r6
 800ce6e:	3401      	adds	r4, #1
 800ce70:	e7d2      	b.n	800ce18 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800ce72:	4630      	mov	r0, r6
 800ce74:	b005      	add	sp, #20
 800ce76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ce7a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800ce7a:	2a02      	cmp	r2, #2
 800ce7c:	b530      	push	{r4, r5, lr}
 800ce7e:	d011      	beq.n	800cea4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800ce80:	2a03      	cmp	r2, #3
 800ce82:	d01c      	beq.n	800cebe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800ce84:	2a01      	cmp	r2, #1
 800ce86:	d10c      	bne.n	800cea2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800ce88:	888b      	ldrh	r3, [r1, #4]
 800ce8a:	8801      	ldrh	r1, [r0, #0]
 800ce8c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800ce90:	1a5b      	subs	r3, r3, r1
 800ce92:	8844      	ldrh	r4, [r0, #2]
 800ce94:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ce98:	1a9b      	subs	r3, r3, r2
 800ce9a:	8004      	strh	r4, [r0, #0]
 800ce9c:	8081      	strh	r1, [r0, #4]
 800ce9e:	8043      	strh	r3, [r0, #2]
 800cea0:	80c2      	strh	r2, [r0, #6]
 800cea2:	bd30      	pop	{r4, r5, pc}
 800cea4:	88cb      	ldrh	r3, [r1, #6]
 800cea6:	8842      	ldrh	r2, [r0, #2]
 800cea8:	1a9b      	subs	r3, r3, r2
 800ceaa:	88c2      	ldrh	r2, [r0, #6]
 800ceac:	1a9b      	subs	r3, r3, r2
 800ceae:	888a      	ldrh	r2, [r1, #4]
 800ceb0:	8801      	ldrh	r1, [r0, #0]
 800ceb2:	8043      	strh	r3, [r0, #2]
 800ceb4:	1a52      	subs	r2, r2, r1
 800ceb6:	8881      	ldrh	r1, [r0, #4]
 800ceb8:	1a52      	subs	r2, r2, r1
 800ceba:	8002      	strh	r2, [r0, #0]
 800cebc:	e7f1      	b.n	800cea2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800cebe:	88cb      	ldrh	r3, [r1, #6]
 800cec0:	8841      	ldrh	r1, [r0, #2]
 800cec2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800cec6:	1a5b      	subs	r3, r3, r1
 800cec8:	f9b0 5000 	ldrsh.w	r5, [r0]
 800cecc:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800ced0:	1a9b      	subs	r3, r3, r2
 800ced2:	8045      	strh	r5, [r0, #2]
 800ced4:	8082      	strh	r2, [r0, #4]
 800ced6:	8003      	strh	r3, [r0, #0]
 800ced8:	80c4      	strh	r4, [r0, #6]
 800ceda:	e7e2      	b.n	800cea2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800cedc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800cedc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cee0:	b09f      	sub	sp, #124	@ 0x7c
 800cee2:	920f      	str	r2, [sp, #60]	@ 0x3c
 800cee4:	9312      	str	r3, [sp, #72]	@ 0x48
 800cee6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800cee8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800ceea:	8812      	ldrh	r2, [r2, #0]
 800ceec:	889b      	ldrh	r3, [r3, #4]
 800ceee:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800cef0:	4413      	add	r3, r2
 800cef2:	900e      	str	r0, [sp, #56]	@ 0x38
 800cef4:	6828      	ldr	r0, [r5, #0]
 800cef6:	b21b      	sxth	r3, r3
 800cef8:	9117      	str	r1, [sp, #92]	@ 0x5c
 800cefa:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800cefe:	9311      	str	r3, [sp, #68]	@ 0x44
 800cf00:	6803      	ldr	r3, [r0, #0]
 800cf02:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800cf06:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800cf08:	4798      	blx	r3
 800cf0a:	682b      	ldr	r3, [r5, #0]
 800cf0c:	9013      	str	r0, [sp, #76]	@ 0x4c
 800cf0e:	7b1a      	ldrb	r2, [r3, #12]
 800cf10:	7adb      	ldrb	r3, [r3, #11]
 800cf12:	9215      	str	r2, [sp, #84]	@ 0x54
 800cf14:	9316      	str	r3, [sp, #88]	@ 0x58
 800cf16:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800cf1a:	2c00      	cmp	r4, #0
 800cf1c:	d067      	beq.n	800cfee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800cf1e:	7c2b      	ldrb	r3, [r5, #16]
 800cf20:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800cf22:	2b06      	cmp	r3, #6
 800cf24:	bf14      	ite	ne
 800cf26:	2301      	movne	r3, #1
 800cf28:	2302      	moveq	r3, #2
 800cf2a:	4413      	add	r3, r2
 800cf2c:	f04f 0900 	mov.w	r9, #0
 800cf30:	9310      	str	r3, [sp, #64]	@ 0x40
 800cf32:	464c      	mov	r4, r9
 800cf34:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800cf38:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800cf3c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800cf3e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800cf40:	4293      	cmp	r3, r2
 800cf42:	f280 808b 	bge.w	800d05c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800cf46:	2300      	movs	r3, #0
 800cf48:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800cf4c:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800cf50:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800cf54:	429c      	cmp	r4, r3
 800cf56:	d006      	beq.n	800cf66 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800cf58:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800cf5a:	f242 020b 	movw	r2, #8203	@ 0x200b
 800cf5e:	4294      	cmp	r4, r2
 800cf60:	bf18      	it	ne
 800cf62:	4623      	movne	r3, r4
 800cf64:	930c      	str	r3, [sp, #48]	@ 0x30
 800cf66:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800cf68:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800cf6a:	682a      	ldr	r2, [r5, #0]
 800cf6c:	428b      	cmp	r3, r1
 800cf6e:	db40      	blt.n	800cff2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800cf70:	6813      	ldr	r3, [r2, #0]
 800cf72:	4610      	mov	r0, r2
 800cf74:	695b      	ldr	r3, [r3, #20]
 800cf76:	4798      	blx	r3
 800cf78:	4604      	mov	r4, r0
 800cf7a:	6828      	ldr	r0, [r5, #0]
 800cf7c:	aa1d      	add	r2, sp, #116	@ 0x74
 800cf7e:	4621      	mov	r1, r4
 800cf80:	6803      	ldr	r3, [r0, #0]
 800cf82:	689f      	ldr	r7, [r3, #8]
 800cf84:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800cf88:	47b8      	blx	r7
 800cf8a:	901c      	str	r0, [sp, #112]	@ 0x70
 800cf8c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800cf90:	429c      	cmp	r4, r3
 800cf92:	f000 80eb 	beq.w	800d16c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800cf96:	f242 030b 	movw	r3, #8203	@ 0x200b
 800cf9a:	429c      	cmp	r4, r3
 800cf9c:	f000 80e6 	beq.w	800d16c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800cfa0:	2c00      	cmp	r4, #0
 800cfa2:	f000 810d 	beq.w	800d1c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800cfa6:	2c0a      	cmp	r4, #10
 800cfa8:	d05e      	beq.n	800d068 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800cfaa:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800cfac:	b36a      	cbz	r2, 800d00a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800cfae:	8894      	ldrh	r4, [r2, #4]
 800cfb0:	f1bb 0f00 	cmp.w	fp, #0
 800cfb4:	d03a      	beq.n	800d02c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800cfb6:	f892 900d 	ldrb.w	r9, [r2, #13]
 800cfba:	f1bb 0f01 	cmp.w	fp, #1
 800cfbe:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800cfc2:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800cfc6:	f892 900a 	ldrb.w	r9, [r2, #10]
 800cfca:	ea49 0903 	orr.w	r9, r9, r3
 800cfce:	d133      	bne.n	800d038 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800cfd0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800cfd2:	eba6 0609 	sub.w	r6, r6, r9
 800cfd6:	2b00      	cmp	r3, #0
 800cfd8:	d14d      	bne.n	800d076 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800cfda:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800cfdc:	eb09 0306 	add.w	r3, r9, r6
 800cfe0:	4413      	add	r3, r2
 800cfe2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800cfe4:	f9b2 2000 	ldrsh.w	r2, [r2]
 800cfe8:	4293      	cmp	r3, r2
 800cfea:	da4e      	bge.n	800d08a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800cfec:	e036      	b.n	800d05c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800cfee:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800cff0:	e79c      	b.n	800cf2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800cff2:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800cff6:	4659      	mov	r1, fp
 800cff8:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800cffa:	9301      	str	r3, [sp, #4]
 800cffc:	ab1d      	add	r3, sp, #116	@ 0x74
 800cffe:	9300      	str	r3, [sp, #0]
 800d000:	ab1c      	add	r3, sp, #112	@ 0x70
 800d002:	f002 ff04 	bl	800fe0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800d006:	4604      	mov	r4, r0
 800d008:	e7c0      	b.n	800cf8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800d00a:	6828      	ldr	r0, [r5, #0]
 800d00c:	6803      	ldr	r3, [r0, #0]
 800d00e:	691b      	ldr	r3, [r3, #16]
 800d010:	4798      	blx	r3
 800d012:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800d016:	4298      	cmp	r0, r3
 800d018:	f000 80a8 	beq.w	800d16c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d01c:	f242 030b 	movw	r3, #8203	@ 0x200b
 800d020:	4298      	cmp	r0, r3
 800d022:	f000 80a3 	beq.w	800d16c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d026:	f1bb 0f00 	cmp.w	fp, #0
 800d02a:	d100      	bne.n	800d02e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800d02c:	444e      	add	r6, r9
 800d02e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800d030:	2a00      	cmp	r2, #0
 800d032:	d1c0      	bne.n	800cfb6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800d034:	4691      	mov	r9, r2
 800d036:	e099      	b.n	800d16c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d038:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d03a:	2b00      	cmp	r3, #0
 800d03c:	f000 80c2 	beq.w	800d1c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
 800d040:	f1bb 0f00 	cmp.w	fp, #0
 800d044:	d117      	bne.n	800d076 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800d046:	6828      	ldr	r0, [r5, #0]
 800d048:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800d04a:	6803      	ldr	r3, [r0, #0]
 800d04c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d04e:	4798      	blx	r3
 800d050:	4406      	add	r6, r0
 800d052:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800d054:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800d056:	1af3      	subs	r3, r6, r3
 800d058:	4293      	cmp	r3, r2
 800d05a:	dd16      	ble.n	800d08a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800d05c:	2c00      	cmp	r4, #0
 800d05e:	f000 80af 	beq.w	800d1c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800d062:	2c0a      	cmp	r4, #10
 800d064:	f040 809d 	bne.w	800d1a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800d068:	240a      	movs	r4, #10
 800d06a:	fab4 f084 	clz	r0, r4
 800d06e:	0940      	lsrs	r0, r0, #5
 800d070:	b01f      	add	sp, #124	@ 0x7c
 800d072:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d076:	6828      	ldr	r0, [r5, #0]
 800d078:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800d07a:	6803      	ldr	r3, [r0, #0]
 800d07c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d07e:	4798      	blx	r3
 800d080:	f1bb 0f01 	cmp.w	fp, #1
 800d084:	eba6 0600 	sub.w	r6, r6, r0
 800d088:	d0a7      	beq.n	800cfda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800d08a:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800d08c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800d08e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800d092:	f9b3 8000 	ldrsh.w	r8, [r3]
 800d096:	7b43      	ldrb	r3, [r0, #13]
 800d098:	4431      	add	r1, r6
 800d09a:	015b      	lsls	r3, r3, #5
 800d09c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800d0a0:	7983      	ldrb	r3, [r0, #6]
 800d0a2:	4313      	orrs	r3, r2
 800d0a4:	440b      	add	r3, r1
 800d0a6:	4543      	cmp	r3, r8
 800d0a8:	db60      	blt.n	800d16c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d0aa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800d0ac:	4299      	cmp	r1, r3
 800d0ae:	da5d      	bge.n	800d16c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d0b0:	6828      	ldr	r0, [r5, #0]
 800d0b2:	45b0      	cmp	r8, r6
 800d0b4:	6803      	ldr	r3, [r0, #0]
 800d0b6:	bfcc      	ite	gt
 800d0b8:	eba8 0806 	subgt.w	r8, r8, r6
 800d0bc:	f04f 0800 	movle.w	r8, #0
 800d0c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d0c2:	bfc8      	it	gt
 800d0c4:	fa1f f888 	uxthgt.w	r8, r8
 800d0c8:	4798      	blx	r3
 800d0ca:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800d0cc:	7b53      	ldrb	r3, [r2, #13]
 800d0ce:	00d9      	lsls	r1, r3, #3
 800d0d0:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800d0d4:	7a11      	ldrb	r1, [r2, #8]
 800d0d6:	4339      	orrs	r1, r7
 800d0d8:	065f      	lsls	r7, r3, #25
 800d0da:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800d0dc:	bf48      	it	mi
 800d0de:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800d0e2:	4407      	add	r7, r0
 800d0e4:	bf48      	it	mi
 800d0e6:	b209      	sxthmi	r1, r1
 800d0e8:	1a7f      	subs	r7, r7, r1
 800d0ea:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800d0ec:	b2bf      	uxth	r7, r7
 800d0ee:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800d0f2:	fa0f fa87 	sxth.w	sl, r7
 800d0f6:	4551      	cmp	r1, sl
 800d0f8:	dd3c      	ble.n	800d174 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800d0fa:	011b      	lsls	r3, r3, #4
 800d0fc:	79d0      	ldrb	r0, [r2, #7]
 800d0fe:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d102:	4303      	orrs	r3, r0
 800d104:	449a      	add	sl, r3
 800d106:	4551      	cmp	r1, sl
 800d108:	dc30      	bgt.n	800d16c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d10a:	1bcf      	subs	r7, r1, r7
 800d10c:	468a      	mov	sl, r1
 800d10e:	b23f      	sxth	r7, r7
 800d110:	9219      	str	r2, [sp, #100]	@ 0x64
 800d112:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800d114:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800d116:	6828      	ldr	r0, [r5, #0]
 800d118:	2a00      	cmp	r2, #0
 800d11a:	d12d      	bne.n	800d178 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 800d11c:	9318      	str	r3, [sp, #96]	@ 0x60
 800d11e:	b2bf      	uxth	r7, r7
 800d120:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800d122:	6819      	ldr	r1, [r3, #0]
 800d124:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800d126:	6801      	ldr	r1, [r0, #0]
 800d128:	9314      	str	r3, [sp, #80]	@ 0x50
 800d12a:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800d12c:	4788      	blx	r1
 800d12e:	79a9      	ldrb	r1, [r5, #6]
 800d130:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800d132:	910b      	str	r1, [sp, #44]	@ 0x2c
 800d134:	7ba9      	ldrb	r1, [r5, #14]
 800d136:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800d138:	910a      	str	r1, [sp, #40]	@ 0x28
 800d13a:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800d13e:	9109      	str	r1, [sp, #36]	@ 0x24
 800d140:	68a9      	ldr	r1, [r5, #8]
 800d142:	9306      	str	r3, [sp, #24]
 800d144:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800d146:	9205      	str	r2, [sp, #20]
 800d148:	9304      	str	r3, [sp, #16]
 800d14a:	f8cd a004 	str.w	sl, [sp, #4]
 800d14e:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800d152:	44b0      	add	r8, r6
 800d154:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800d156:	fa0f f388 	sxth.w	r3, r8
 800d15a:	9300      	str	r3, [sp, #0]
 800d15c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d15e:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800d162:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800d164:	681a      	ldr	r2, [r3, #0]
 800d166:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800d168:	685b      	ldr	r3, [r3, #4]
 800d16a:	47b8      	blx	r7
 800d16c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800d16e:	3301      	adds	r3, #1
 800d170:	930d      	str	r3, [sp, #52]	@ 0x34
 800d172:	e6e3      	b.n	800cf3c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800d174:	2700      	movs	r7, #0
 800d176:	e7cb      	b.n	800d110 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800d178:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800d17a:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800d17e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800d180:	f8dc 1000 	ldr.w	r1, [ip]
 800d184:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800d188:	79aa      	ldrb	r2, [r5, #6]
 800d18a:	9203      	str	r2, [sp, #12]
 800d18c:	7baa      	ldrb	r2, [r5, #14]
 800d18e:	9202      	str	r2, [sp, #8]
 800d190:	68aa      	ldr	r2, [r5, #8]
 800d192:	e9cd 0200 	strd	r0, r2, [sp]
 800d196:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800d198:	4660      	mov	r0, ip
 800d19a:	688f      	ldr	r7, [r1, #8]
 800d19c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800d19e:	47b8      	blx	r7
 800d1a0:	e7e4      	b.n	800d16c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d1a2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800d1a4:	3501      	adds	r5, #1
 800d1a6:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800d1a8:	429d      	cmp	r5, r3
 800d1aa:	f6bf af5e 	bge.w	800d06a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800d1ae:	4659      	mov	r1, fp
 800d1b0:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800d1b2:	f7f5 ff2d 	bl	8003010 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d1b6:	4604      	mov	r4, r0
 800d1b8:	b110      	cbz	r0, 800d1c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800d1ba:	280a      	cmp	r0, #10
 800d1bc:	d1f2      	bne.n	800d1a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
 800d1be:	e753      	b.n	800d068 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d1c0:	2400      	movs	r4, #0
 800d1c2:	e752      	b.n	800d06a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800d1c4:	f1bb 0f00 	cmp.w	fp, #0
 800d1c8:	f43f af43 	beq.w	800d052 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800d1cc:	e75d      	b.n	800d08a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800d1ce <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800d1ce:	b530      	push	{r4, r5, lr}
 800d1d0:	8ac4      	ldrh	r4, [r0, #22]
 800d1d2:	8b45      	ldrh	r5, [r0, #26]
 800d1d4:	8343      	strh	r3, [r0, #26]
 800d1d6:	442c      	add	r4, r5
 800d1d8:	1ae4      	subs	r4, r4, r3
 800d1da:	8b83      	ldrh	r3, [r0, #28]
 800d1dc:	82c4      	strh	r4, [r0, #22]
 800d1de:	8b04      	ldrh	r4, [r0, #24]
 800d1e0:	4422      	add	r2, r4
 800d1e2:	440c      	add	r4, r1
 800d1e4:	1a59      	subs	r1, r3, r1
 800d1e6:	83c2      	strh	r2, [r0, #30]
 800d1e8:	8304      	strh	r4, [r0, #24]
 800d1ea:	8381      	strh	r1, [r0, #28]
 800d1ec:	bd30      	pop	{r4, r5, pc}

0800d1ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800d1ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1f2:	4604      	mov	r4, r0
 800d1f4:	8a47      	ldrh	r7, [r0, #18]
 800d1f6:	68c0      	ldr	r0, [r0, #12]
 800d1f8:	b085      	sub	sp, #20
 800d1fa:	6803      	ldr	r3, [r0, #0]
 800d1fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d1fe:	4798      	blx	r3
 800d200:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800d204:	7a63      	ldrb	r3, [r4, #9]
 800d206:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800d20a:	3b01      	subs	r3, #1
 800d20c:	42b7      	cmp	r7, r6
 800d20e:	bfac      	ite	ge
 800d210:	f04f 0900 	movge.w	r9, #0
 800d214:	f04f 0901 	movlt.w	r9, #1
 800d218:	2b05      	cmp	r3, #5
 800d21a:	d804      	bhi.n	800d226 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 800d21c:	e8df f003 	tbb	[pc, r3]
 800d220:	470f0854 	.word	0x470f0854
 800d224:	4c4c      	.short	0x4c4c
 800d226:	2500      	movs	r5, #0
 800d228:	46a9      	mov	r9, r5
 800d22a:	462e      	mov	r6, r5
 800d22c:	462f      	mov	r7, r5
 800d22e:	e00e      	b.n	800d24e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800d230:	42b7      	cmp	r7, r6
 800d232:	f04f 0500 	mov.w	r5, #0
 800d236:	bfb4      	ite	lt
 800d238:	2600      	movlt	r6, #0
 800d23a:	2601      	movge	r6, #1
 800d23c:	e7f6      	b.n	800d22c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800d23e:	42b7      	cmp	r7, r6
 800d240:	464d      	mov	r5, r9
 800d242:	f04f 0900 	mov.w	r9, #0
 800d246:	bfb4      	ite	lt
 800d248:	2600      	movlt	r6, #0
 800d24a:	2601      	movge	r6, #1
 800d24c:	464f      	mov	r7, r9
 800d24e:	f04f 0800 	mov.w	r8, #0
 800d252:	f8a4 8016 	strh.w	r8, [r4, #22]
 800d256:	f8a4 8018 	strh.w	r8, [r4, #24]
 800d25a:	f8cd 8004 	str.w	r8, [sp, #4]
 800d25e:	2300      	movs	r3, #0
 800d260:	9303      	str	r3, [sp, #12]
 800d262:	8823      	ldrh	r3, [r4, #0]
 800d264:	2b20      	cmp	r3, #32
 800d266:	d033      	beq.n	800d2d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 800d268:	f242 010b 	movw	r1, #8203	@ 0x200b
 800d26c:	1a5a      	subs	r2, r3, r1
 800d26e:	f1d2 0a00 	rsbs	sl, r2, #0
 800d272:	eb4a 0a02 	adc.w	sl, sl, r2
 800d276:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800d27a:	4293      	cmp	r3, r2
 800d27c:	d008      	beq.n	800d290 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800d27e:	428b      	cmp	r3, r1
 800d280:	9a01      	ldr	r2, [sp, #4]
 800d282:	bf0e      	itee	eq
 800d284:	f04f 0a01 	moveq.w	sl, #1
 800d288:	461a      	movne	r2, r3
 800d28a:	f04f 0a00 	movne.w	sl, #0
 800d28e:	9201      	str	r2, [sp, #4]
 800d290:	ab03      	add	r3, sp, #12
 800d292:	68e2      	ldr	r2, [r4, #12]
 800d294:	7a21      	ldrb	r1, [r4, #8]
 800d296:	6860      	ldr	r0, [r4, #4]
 800d298:	f002 fd70 	bl	800fd7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d29c:	8020      	strh	r0, [r4, #0]
 800d29e:	b9d8      	cbnz	r0, 800d2d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 800d2a0:	8ba2      	ldrh	r2, [r4, #28]
 800d2a2:	2300      	movs	r3, #0
 800d2a4:	4611      	mov	r1, r2
 800d2a6:	4620      	mov	r0, r4
 800d2a8:	f7ff ff91 	bl	800d1ce <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d2ac:	e06e      	b.n	800d38c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800d2ae:	2500      	movs	r5, #0
 800d2b0:	2701      	movs	r7, #1
 800d2b2:	46a9      	mov	r9, r5
 800d2b4:	462e      	mov	r6, r5
 800d2b6:	e7ca      	b.n	800d24e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800d2b8:	42b7      	cmp	r7, r6
 800d2ba:	f04f 0500 	mov.w	r5, #0
 800d2be:	bfb4      	ite	lt
 800d2c0:	2700      	movlt	r7, #0
 800d2c2:	2701      	movge	r7, #1
 800d2c4:	462e      	mov	r6, r5
 800d2c6:	e7c2      	b.n	800d24e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800d2c8:	2500      	movs	r5, #0
 800d2ca:	2601      	movs	r6, #1
 800d2cc:	46a9      	mov	r9, r5
 800d2ce:	e7ad      	b.n	800d22c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800d2d0:	9301      	str	r3, [sp, #4]
 800d2d2:	f04f 0a01 	mov.w	sl, #1
 800d2d6:	e7db      	b.n	800d290 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800d2d8:	8b63      	ldrh	r3, [r4, #26]
 800d2da:	280a      	cmp	r0, #10
 800d2dc:	f103 0301 	add.w	r3, r3, #1
 800d2e0:	8363      	strh	r3, [r4, #26]
 800d2e2:	d0dd      	beq.n	800d2a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 800d2e4:	9a03      	ldr	r2, [sp, #12]
 800d2e6:	bb62      	cbnz	r2, 800d342 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 800d2e8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800d2ec:	4298      	cmp	r0, r3
 800d2ee:	d003      	beq.n	800d2f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800d2f0:	f242 030b 	movw	r3, #8203	@ 0x200b
 800d2f4:	4298      	cmp	r0, r3
 800d2f6:	d1b2      	bne.n	800d25e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d2f8:	8823      	ldrh	r3, [r4, #0]
 800d2fa:	8ba1      	ldrh	r1, [r4, #28]
 800d2fc:	2b20      	cmp	r3, #32
 800d2fe:	d003      	beq.n	800d308 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 800d300:	f242 000b 	movw	r0, #8203	@ 0x200b
 800d304:	4283      	cmp	r3, r0
 800d306:	d131      	bne.n	800d36c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 800d308:	f1ba 0f00 	cmp.w	sl, #0
 800d30c:	bf0a      	itet	eq
 800d30e:	4688      	moveq	r8, r1
 800d310:	4650      	movne	r0, sl
 800d312:	2001      	moveq	r0, #1
 800d314:	440a      	add	r2, r1
 800d316:	8b23      	ldrh	r3, [r4, #24]
 800d318:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800d31c:	b292      	uxth	r2, r2
 800d31e:	83a2      	strh	r2, [r4, #28]
 800d320:	4413      	add	r3, r2
 800d322:	f1b9 0f00 	cmp.w	r9, #0
 800d326:	d102      	bne.n	800d32e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 800d328:	2d00      	cmp	r5, #0
 800d32a:	d042      	beq.n	800d3b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 800d32c:	b300      	cbz	r0, 800d370 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 800d32e:	8c21      	ldrh	r1, [r4, #32]
 800d330:	4419      	add	r1, r3
 800d332:	458c      	cmp	ip, r1
 800d334:	da37      	bge.n	800d3a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800d336:	8ae1      	ldrh	r1, [r4, #22]
 800d338:	2900      	cmp	r1, #0
 800d33a:	d034      	beq.n	800d3a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800d33c:	4563      	cmp	r3, ip
 800d33e:	dd8e      	ble.n	800d25e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d340:	e01d      	b.n	800d37e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 800d342:	8893      	ldrh	r3, [r2, #4]
 800d344:	9901      	ldr	r1, [sp, #4]
 800d346:	8023      	strh	r3, [r4, #0]
 800d348:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800d34c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800d350:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800d354:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800d358:	ea4b 0b00 	orr.w	fp, fp, r0
 800d35c:	68e0      	ldr	r0, [r4, #12]
 800d35e:	6803      	ldr	r3, [r0, #0]
 800d360:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d362:	4798      	blx	r3
 800d364:	eb0b 0200 	add.w	r2, fp, r0
 800d368:	b292      	uxth	r2, r2
 800d36a:	e7c5      	b.n	800d2f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800d36c:	2000      	movs	r0, #0
 800d36e:	e7d1      	b.n	800d314 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 800d370:	4563      	cmp	r3, ip
 800d372:	f77f af74 	ble.w	800d25e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d376:	8ae3      	ldrh	r3, [r4, #22]
 800d378:	2b00      	cmp	r3, #0
 800d37a:	f43f af70 	beq.w	800d25e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d37e:	2301      	movs	r3, #1
 800d380:	8c22      	ldrh	r2, [r4, #32]
 800d382:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800d386:	8be3      	ldrh	r3, [r4, #30]
 800d388:	4413      	add	r3, r2
 800d38a:	83e3      	strh	r3, [r4, #30]
 800d38c:	68e0      	ldr	r0, [r4, #12]
 800d38e:	6803      	ldr	r3, [r0, #0]
 800d390:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d392:	4798      	blx	r3
 800d394:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800d398:	4418      	add	r0, r3
 800d39a:	8a63      	ldrh	r3, [r4, #18]
 800d39c:	1a18      	subs	r0, r3, r0
 800d39e:	8260      	strh	r0, [r4, #18]
 800d3a0:	b005      	add	sp, #20
 800d3a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d3a6:	2300      	movs	r3, #0
 800d3a8:	4611      	mov	r1, r2
 800d3aa:	4620      	mov	r0, r4
 800d3ac:	f7ff ff0f 	bl	800d1ce <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d3b0:	e755      	b.n	800d25e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d3b2:	4563      	cmp	r3, ip
 800d3b4:	dd14      	ble.n	800d3e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 800d3b6:	b117      	cbz	r7, 800d3be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 800d3b8:	2301      	movs	r3, #1
 800d3ba:	460a      	mov	r2, r1
 800d3bc:	e772      	b.n	800d2a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 800d3be:	2e00      	cmp	r6, #0
 800d3c0:	f43f af4d 	beq.w	800d25e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d3c4:	2800      	cmp	r0, #0
 800d3c6:	f47f af4a 	bne.w	800d25e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d3ca:	f1ba 0f00 	cmp.w	sl, #0
 800d3ce:	d002      	beq.n	800d3d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 800d3d0:	2301      	movs	r3, #1
 800d3d2:	4642      	mov	r2, r8
 800d3d4:	e767      	b.n	800d2a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800d3d6:	8ae3      	ldrh	r3, [r4, #22]
 800d3d8:	2b00      	cmp	r3, #0
 800d3da:	f43f af40 	beq.w	800d25e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d3de:	e7d5      	b.n	800d38c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800d3e0:	2800      	cmp	r0, #0
 800d3e2:	f47f af3c 	bne.w	800d25e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d3e6:	f1ba 0f00 	cmp.w	sl, #0
 800d3ea:	f43f af38 	beq.w	800d25e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d3ee:	2301      	movs	r3, #1
 800d3f0:	4642      	mov	r2, r8
 800d3f2:	e7da      	b.n	800d3aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

0800d3f4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800d3f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d3f6:	4605      	mov	r5, r0
 800d3f8:	b08f      	sub	sp, #60	@ 0x3c
 800d3fa:	4617      	mov	r7, r2
 800d3fc:	461c      	mov	r4, r3
 800d3fe:	460e      	mov	r6, r1
 800d400:	b1d1      	cbz	r1, 800d438 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800d402:	681b      	ldr	r3, [r3, #0]
 800d404:	4620      	mov	r0, r4
 800d406:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d408:	4798      	blx	r3
 800d40a:	4240      	negs	r0, r0
 800d40c:	9603      	str	r6, [sp, #12]
 800d40e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800d412:	b200      	sxth	r0, r0
 800d414:	9700      	str	r7, [sp, #0]
 800d416:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800d41a:	4629      	mov	r1, r5
 800d41c:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800d420:	2401      	movs	r4, #1
 800d422:	a805      	add	r0, sp, #20
 800d424:	f7ff fcaa 	bl	800cd7c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800d428:	a805      	add	r0, sp, #20
 800d42a:	f7ff fee0 	bl	800d1ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d42e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800d432:	b163      	cbz	r3, 800d44e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800d434:	3401      	adds	r4, #1
 800d436:	e7f7      	b.n	800d428 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800d438:	2401      	movs	r4, #1
 800d43a:	f002 fd6b 	bl	800ff14 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d43e:	280a      	cmp	r0, #10
 800d440:	4628      	mov	r0, r5
 800d442:	bf08      	it	eq
 800d444:	3401      	addeq	r4, #1
 800d446:	f002 fd65 	bl	800ff14 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d44a:	2800      	cmp	r0, #0
 800d44c:	d1f7      	bne.n	800d43e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800d44e:	b2a0      	uxth	r0, r4
 800d450:	b00f      	add	sp, #60	@ 0x3c
 800d452:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d454 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800d454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d458:	b0e3      	sub	sp, #396	@ 0x18c
 800d45a:	461c      	mov	r4, r3
 800d45c:	4683      	mov	fp, r0
 800d45e:	4688      	mov	r8, r1
 800d460:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800d462:	2b00      	cmp	r3, #0
 800d464:	f000 8112 	beq.w	800d68c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d468:	6823      	ldr	r3, [r4, #0]
 800d46a:	2b00      	cmp	r3, #0
 800d46c:	f000 810e 	beq.w	800d68c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d470:	7ba3      	ldrb	r3, [r4, #14]
 800d472:	2b00      	cmp	r3, #0
 800d474:	f000 810a 	beq.w	800d68c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d478:	ad0a      	add	r5, sp, #40	@ 0x28
 800d47a:	6810      	ldr	r0, [r2, #0]
 800d47c:	6851      	ldr	r1, [r2, #4]
 800d47e:	462b      	mov	r3, r5
 800d480:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800d484:	c303      	stmia	r3!, {r0, r1}
 800d486:	2100      	movs	r1, #0
 800d488:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800d48c:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800d490:	4628      	mov	r0, r5
 800d492:	910c      	str	r1, [sp, #48]	@ 0x30
 800d494:	a90c      	add	r1, sp, #48	@ 0x30
 800d496:	79a2      	ldrb	r2, [r4, #6]
 800d498:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d49c:	f7ff fced 	bl	800ce7a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d4a0:	a90c      	add	r1, sp, #48	@ 0x30
 800d4a2:	79a2      	ldrb	r2, [r4, #6]
 800d4a4:	4608      	mov	r0, r1
 800d4a6:	f7ff fce8 	bl	800ce7a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d4aa:	a817      	add	r0, sp, #92	@ 0x5c
 800d4ac:	f002 f906 	bl	800f6bc <_ZN8touchgfx12TextProviderC1Ev>
 800d4b0:	6820      	ldr	r0, [r4, #0]
 800d4b2:	6803      	ldr	r3, [r0, #0]
 800d4b4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d4b6:	4798      	blx	r3
 800d4b8:	4606      	mov	r6, r0
 800d4ba:	6820      	ldr	r0, [r4, #0]
 800d4bc:	6803      	ldr	r3, [r0, #0]
 800d4be:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d4c0:	4798      	blx	r3
 800d4c2:	4633      	mov	r3, r6
 800d4c4:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800d4c6:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800d4c8:	9000      	str	r0, [sp, #0]
 800d4ca:	a817      	add	r0, sp, #92	@ 0x5c
 800d4cc:	f002 f951 	bl	800f772 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d4d0:	6820      	ldr	r0, [r4, #0]
 800d4d2:	f894 a004 	ldrb.w	sl, [r4, #4]
 800d4d6:	6803      	ldr	r3, [r0, #0]
 800d4d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d4da:	4798      	blx	r3
 800d4dc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800d4e0:	6823      	ldr	r3, [r4, #0]
 800d4e2:	4607      	mov	r7, r0
 800d4e4:	4406      	add	r6, r0
 800d4e6:	a830      	add	r0, sp, #192	@ 0xc0
 800d4e8:	f893 9009 	ldrb.w	r9, [r3, #9]
 800d4ec:	f002 f8e6 	bl	800f6bc <_ZN8touchgfx12TextProviderC1Ev>
 800d4f0:	7c23      	ldrb	r3, [r4, #16]
 800d4f2:	b17b      	cbz	r3, 800d514 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800d4f4:	6820      	ldr	r0, [r4, #0]
 800d4f6:	6803      	ldr	r3, [r0, #0]
 800d4f8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d4fa:	4798      	blx	r3
 800d4fc:	9009      	str	r0, [sp, #36]	@ 0x24
 800d4fe:	6820      	ldr	r0, [r4, #0]
 800d500:	6802      	ldr	r2, [r0, #0]
 800d502:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800d504:	4790      	blx	r2
 800d506:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d508:	9000      	str	r0, [sp, #0]
 800d50a:	a830      	add	r0, sp, #192	@ 0xc0
 800d50c:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800d50e:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800d510:	f002 f92f 	bl	800f772 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d514:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800d518:	a80e      	add	r0, sp, #56	@ 0x38
 800d51a:	7be2      	ldrb	r2, [r4, #15]
 800d51c:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800d520:	1a8a      	subs	r2, r1, r2
 800d522:	7c21      	ldrb	r1, [r4, #16]
 800d524:	9103      	str	r1, [sp, #12]
 800d526:	b292      	uxth	r2, r2
 800d528:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800d52c:	9102      	str	r1, [sp, #8]
 800d52e:	6821      	ldr	r1, [r4, #0]
 800d530:	9101      	str	r1, [sp, #4]
 800d532:	7961      	ldrb	r1, [r4, #5]
 800d534:	9100      	str	r1, [sp, #0]
 800d536:	a930      	add	r1, sp, #192	@ 0xc0
 800d538:	f7ff fc20 	bl	800cd7c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800d53c:	2e00      	cmp	r6, #0
 800d53e:	dc5b      	bgt.n	800d5f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800d540:	af17      	add	r7, sp, #92	@ 0x5c
 800d542:	f04f 0900 	mov.w	r9, #0
 800d546:	7c23      	ldrb	r3, [r4, #16]
 800d548:	2b00      	cmp	r3, #0
 800d54a:	f000 80b1 	beq.w	800d6b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800d54e:	a80e      	add	r0, sp, #56	@ 0x38
 800d550:	f7ff fe4d 	bl	800d1ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d554:	f1ba 0f00 	cmp.w	sl, #0
 800d558:	f000 80a5 	beq.w	800d6a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800d55c:	7c23      	ldrb	r3, [r4, #16]
 800d55e:	2264      	movs	r2, #100	@ 0x64
 800d560:	4639      	mov	r1, r7
 800d562:	a849      	add	r0, sp, #292	@ 0x124
 800d564:	9309      	str	r3, [sp, #36]	@ 0x24
 800d566:	f011 fc76 	bl	801ee56 <memcpy>
 800d56a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d56c:	2b00      	cmp	r3, #0
 800d56e:	f000 80a7 	beq.w	800d6c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800d572:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 800d576:	7922      	ldrb	r2, [r4, #4]
 800d578:	2a01      	cmp	r2, #1
 800d57a:	f040 808a 	bne.w	800d692 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800d57e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 800d582:	1ac0      	subs	r0, r0, r3
 800d584:	2302      	movs	r3, #2
 800d586:	fb90 f0f3 	sdiv	r0, r0, r3
 800d58a:	b200      	sxth	r0, r0
 800d58c:	7c23      	ldrb	r3, [r4, #16]
 800d58e:	2b00      	cmp	r3, #0
 800d590:	f000 808b 	beq.w	800d6aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800d594:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 800d598:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 800d59c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800d5a0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800d5a4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 800d5a8:	2100      	movs	r1, #0
 800d5aa:	4410      	add	r0, r2
 800d5ac:	4642      	mov	r2, r8
 800d5ae:	b200      	sxth	r0, r0
 800d5b0:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800d5b4:	9000      	str	r0, [sp, #0]
 800d5b6:	4658      	mov	r0, fp
 800d5b8:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d5bc:	f7ff fc8e 	bl	800cedc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800d5c0:	2800      	cmp	r0, #0
 800d5c2:	d163      	bne.n	800d68c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d5c4:	b2b2      	uxth	r2, r6
 800d5c6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800d5ca:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800d5ce:	4413      	add	r3, r2
 800d5d0:	1a8a      	subs	r2, r1, r2
 800d5d2:	b21b      	sxth	r3, r3
 800d5d4:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 800d5d8:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 800d5dc:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800d5e0:	2a00      	cmp	r2, #0
 800d5e2:	d153      	bne.n	800d68c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d5e4:	6822      	ldr	r2, [r4, #0]
 800d5e6:	8869      	ldrh	r1, [r5, #2]
 800d5e8:	7a12      	ldrb	r2, [r2, #8]
 800d5ea:	1a9b      	subs	r3, r3, r2
 800d5ec:	88ea      	ldrh	r2, [r5, #6]
 800d5ee:	440a      	add	r2, r1
 800d5f0:	b212      	sxth	r2, r2
 800d5f2:	4293      	cmp	r3, r2
 800d5f4:	dda7      	ble.n	800d546 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800d5f6:	e049      	b.n	800d68c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d5f8:	7c23      	ldrb	r3, [r4, #16]
 800d5fa:	444f      	add	r7, r9
 800d5fc:	b1c3      	cbz	r3, 800d630 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800d5fe:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 800d602:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800d606:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d60a:	443b      	add	r3, r7
 800d60c:	4293      	cmp	r3, r2
 800d60e:	da97      	bge.n	800d540 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800d610:	a80e      	add	r0, sp, #56	@ 0x38
 800d612:	f7ff fdec 	bl	800d1ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d616:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 800d61a:	3b01      	subs	r3, #1
 800d61c:	b29b      	uxth	r3, r3
 800d61e:	454b      	cmp	r3, r9
 800d620:	9309      	str	r3, [sp, #36]	@ 0x24
 800d622:	d021      	beq.n	800d668 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800d624:	7961      	ldrb	r1, [r4, #5]
 800d626:	a817      	add	r0, sp, #92	@ 0x5c
 800d628:	f7f5 fcf2 	bl	8003010 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d62c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d62e:	e7f4      	b.n	800d61a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800d630:	fa1f f986 	uxth.w	r9, r6
 800d634:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800d638:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d63c:	443b      	add	r3, r7
 800d63e:	4293      	cmp	r3, r2
 800d640:	f6bf af7e 	bge.w	800d540 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800d644:	a817      	add	r0, sp, #92	@ 0x5c
 800d646:	f002 fc65 	bl	800ff14 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d64a:	b1f8      	cbz	r0, 800d68c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d64c:	280a      	cmp	r0, #10
 800d64e:	d1f1      	bne.n	800d634 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800d650:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800d654:	444b      	add	r3, r9
 800d656:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800d65a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800d65e:	eba3 0309 	sub.w	r3, r3, r9
 800d662:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d666:	e7e5      	b.n	800d634 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800d668:	b2b3      	uxth	r3, r6
 800d66a:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 800d66e:	441a      	add	r2, r3
 800d670:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800d674:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 800d678:	1ad3      	subs	r3, r2, r3
 800d67a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d67e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800d682:	b11b      	cbz	r3, 800d68c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d684:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 800d688:	2b00      	cmp	r3, #0
 800d68a:	d0ba      	beq.n	800d602 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800d68c:	b063      	add	sp, #396	@ 0x18c
 800d68e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d692:	2a02      	cmp	r2, #2
 800d694:	d105      	bne.n	800d6a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800d696:	7be2      	ldrb	r2, [r4, #15]
 800d698:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800d69c:	1a80      	subs	r0, r0, r2
 800d69e:	1ac0      	subs	r0, r0, r3
 800d6a0:	e773      	b.n	800d58a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800d6a2:	2000      	movs	r0, #0
 800d6a4:	e772      	b.n	800d58c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800d6a6:	7be0      	ldrb	r0, [r4, #15]
 800d6a8:	e770      	b.n	800d58c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800d6aa:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800d6ae:	e773      	b.n	800d598 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800d6b0:	f1ba 0f00 	cmp.w	sl, #0
 800d6b4:	d0f7      	beq.n	800d6a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800d6b6:	2264      	movs	r2, #100	@ 0x64
 800d6b8:	4639      	mov	r1, r7
 800d6ba:	a849      	add	r0, sp, #292	@ 0x124
 800d6bc:	f011 fbcb 	bl	801ee56 <memcpy>
 800d6c0:	2300      	movs	r3, #0
 800d6c2:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800d6c6:	6821      	ldr	r1, [r4, #0]
 800d6c8:	a849      	add	r0, sp, #292	@ 0x124
 800d6ca:	f7ff fb9a 	bl	800ce02 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d6ce:	b203      	sxth	r3, r0
 800d6d0:	e751      	b.n	800d576 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800d6d2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800d6d2:	2b03      	cmp	r3, #3
 800d6d4:	d818      	bhi.n	800d708 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800d6d6:	e8df f003 	tbb	[pc, r3]
 800d6da:	0602      	.short	0x0602
 800d6dc:	130d      	.short	0x130d
 800d6de:	f9b0 2000 	ldrsh.w	r2, [r0]
 800d6e2:	1850      	adds	r0, r2, r1
 800d6e4:	4770      	bx	lr
 800d6e6:	8803      	ldrh	r3, [r0, #0]
 800d6e8:	8880      	ldrh	r0, [r0, #4]
 800d6ea:	4418      	add	r0, r3
 800d6ec:	b200      	sxth	r0, r0
 800d6ee:	1a80      	subs	r0, r0, r2
 800d6f0:	3801      	subs	r0, #1
 800d6f2:	4770      	bx	lr
 800d6f4:	8803      	ldrh	r3, [r0, #0]
 800d6f6:	8880      	ldrh	r0, [r0, #4]
 800d6f8:	4418      	add	r0, r3
 800d6fa:	b200      	sxth	r0, r0
 800d6fc:	1a40      	subs	r0, r0, r1
 800d6fe:	e7f7      	b.n	800d6f0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800d700:	f9b0 0000 	ldrsh.w	r0, [r0]
 800d704:	4410      	add	r0, r2
 800d706:	4770      	bx	lr
 800d708:	2000      	movs	r0, #0
 800d70a:	4770      	bx	lr

0800d70c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800d70c:	2b03      	cmp	r3, #3
 800d70e:	d817      	bhi.n	800d740 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800d710:	e8df f003 	tbb	[pc, r3]
 800d714:	10090602 	.word	0x10090602
 800d718:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800d71c:	1850      	adds	r0, r2, r1
 800d71e:	4770      	bx	lr
 800d720:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800d724:	e7fa      	b.n	800d71c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800d726:	8843      	ldrh	r3, [r0, #2]
 800d728:	88c0      	ldrh	r0, [r0, #6]
 800d72a:	4418      	add	r0, r3
 800d72c:	b200      	sxth	r0, r0
 800d72e:	1a80      	subs	r0, r0, r2
 800d730:	3801      	subs	r0, #1
 800d732:	4770      	bx	lr
 800d734:	8843      	ldrh	r3, [r0, #2]
 800d736:	88c0      	ldrh	r0, [r0, #6]
 800d738:	4418      	add	r0, r3
 800d73a:	b200      	sxth	r0, r0
 800d73c:	1a40      	subs	r0, r0, r1
 800d73e:	e7f7      	b.n	800d730 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800d740:	2000      	movs	r0, #0
 800d742:	4770      	bx	lr

0800d744 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800d744:	4b01      	ldr	r3, [pc, #4]	@ (800d74c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800d746:	2200      	movs	r2, #0
 800d748:	601a      	str	r2, [r3, #0]
 800d74a:	4770      	bx	lr
 800d74c:	200150b4 	.word	0x200150b4

0800d750 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800d750:	4603      	mov	r3, r0
 800d752:	b1c8      	cbz	r0, 800d788 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800d754:	0c02      	lsrs	r2, r0, #16
 800d756:	0412      	lsls	r2, r2, #16
 800d758:	b9a2      	cbnz	r2, 800d784 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800d75a:	0403      	lsls	r3, r0, #16
 800d75c:	2010      	movs	r0, #16
 800d75e:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800d762:	bf04      	itt	eq
 800d764:	021b      	lsleq	r3, r3, #8
 800d766:	3008      	addeq	r0, #8
 800d768:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800d76c:	bf04      	itt	eq
 800d76e:	011b      	lsleq	r3, r3, #4
 800d770:	3004      	addeq	r0, #4
 800d772:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800d776:	bf04      	itt	eq
 800d778:	009b      	lsleq	r3, r3, #2
 800d77a:	3002      	addeq	r0, #2
 800d77c:	2b00      	cmp	r3, #0
 800d77e:	db04      	blt.n	800d78a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800d780:	3001      	adds	r0, #1
 800d782:	4770      	bx	lr
 800d784:	2000      	movs	r0, #0
 800d786:	e7ea      	b.n	800d75e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800d788:	2020      	movs	r0, #32
 800d78a:	4770      	bx	lr

0800d78c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800d78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d790:	b087      	sub	sp, #28
 800d792:	460d      	mov	r5, r1
 800d794:	4616      	mov	r6, r2
 800d796:	4698      	mov	r8, r3
 800d798:	4601      	mov	r1, r0
 800d79a:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800d79e:	b120      	cbz	r0, 800d7aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800d7a0:	b11a      	cbz	r2, 800d7aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800d7a2:	2d1f      	cmp	r5, #31
 800d7a4:	d801      	bhi.n	800d7aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800d7a6:	2b1f      	cmp	r3, #31
 800d7a8:	d904      	bls.n	800d7b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800d7aa:	2000      	movs	r0, #0
 800d7ac:	6038      	str	r0, [r7, #0]
 800d7ae:	b007      	add	sp, #28
 800d7b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7b4:	b97d      	cbnz	r5, 800d7d6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800d7b6:	b143      	cbz	r3, 800d7ca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800d7b8:	4602      	mov	r2, r0
 800d7ba:	462b      	mov	r3, r5
 800d7bc:	4641      	mov	r1, r8
 800d7be:	4630      	mov	r0, r6
 800d7c0:	e9cd 4700 	strd	r4, r7, [sp]
 800d7c4:	f7ff ffe2 	bl	800d78c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800d7c8:	e7f1      	b.n	800d7ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800d7ca:	f04f 33ff 	mov.w	r3, #4294967295
 800d7ce:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800d7d2:	603b      	str	r3, [r7, #0]
 800d7d4:	e7eb      	b.n	800d7ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800d7d6:	fa32 fa05 	lsrs.w	sl, r2, r5
 800d7da:	d106      	bne.n	800d7ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800d7dc:	4346      	muls	r6, r0
 800d7de:	fbb6 f0f4 	udiv	r0, r6, r4
 800d7e2:	fb04 6610 	mls	r6, r4, r0, r6
 800d7e6:	603e      	str	r6, [r7, #0]
 800d7e8:	e7e1      	b.n	800d7ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800d7ea:	2201      	movs	r2, #1
 800d7ec:	fa00 fb05 	lsl.w	fp, r0, r5
 800d7f0:	40aa      	lsls	r2, r5
 800d7f2:	fbbb f9f4 	udiv	r9, fp, r4
 800d7f6:	3a01      	subs	r2, #1
 800d7f8:	fb0a f309 	mul.w	r3, sl, r9
 800d7fc:	fb04 b919 	mls	r9, r4, r9, fp
 800d800:	4016      	ands	r6, r2
 800d802:	9303      	str	r3, [sp, #12]
 800d804:	4630      	mov	r0, r6
 800d806:	f7ff ffa3 	bl	800d750 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800d80a:	462b      	mov	r3, r5
 800d80c:	460a      	mov	r2, r1
 800d80e:	4601      	mov	r1, r0
 800d810:	4630      	mov	r0, r6
 800d812:	e9cd 4700 	strd	r4, r7, [sp]
 800d816:	f7ff ffb9 	bl	800d78c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800d81a:	4606      	mov	r6, r0
 800d81c:	4648      	mov	r0, r9
 800d81e:	eb05 0108 	add.w	r1, r5, r8
 800d822:	f7ff ff95 	bl	800d750 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800d826:	ab05      	add	r3, sp, #20
 800d828:	464a      	mov	r2, r9
 800d82a:	e9cd 4300 	strd	r4, r3, [sp]
 800d82e:	4603      	mov	r3, r0
 800d830:	4650      	mov	r0, sl
 800d832:	f7ff ffab 	bl	800d78c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800d836:	6839      	ldr	r1, [r7, #0]
 800d838:	9a05      	ldr	r2, [sp, #20]
 800d83a:	9b03      	ldr	r3, [sp, #12]
 800d83c:	4411      	add	r1, r2
 800d83e:	fbb1 f2f4 	udiv	r2, r1, r4
 800d842:	18d3      	adds	r3, r2, r3
 800d844:	fb04 1412 	mls	r4, r4, r2, r1
 800d848:	441e      	add	r6, r3
 800d84a:	603c      	str	r4, [r7, #0]
 800d84c:	4430      	add	r0, r6
 800d84e:	e7ae      	b.n	800d7ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800d850 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800d850:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d854:	b085      	sub	sp, #20
 800d856:	f1b0 0900 	subs.w	r9, r0, #0
 800d85a:	461d      	mov	r5, r3
 800d85c:	4617      	mov	r7, r2
 800d85e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800d860:	bfbb      	ittet	lt
 800d862:	f1c9 0900 	rsblt	r9, r9, #0
 800d866:	f04f 36ff 	movlt.w	r6, #4294967295
 800d86a:	2601      	movge	r6, #1
 800d86c:	6823      	ldrlt	r3, [r4, #0]
 800d86e:	bfbc      	itt	lt
 800d870:	425b      	neglt	r3, r3
 800d872:	6023      	strlt	r3, [r4, #0]
 800d874:	2a00      	cmp	r2, #0
 800d876:	da04      	bge.n	800d882 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800d878:	6823      	ldr	r3, [r4, #0]
 800d87a:	4257      	negs	r7, r2
 800d87c:	4276      	negs	r6, r6
 800d87e:	425b      	negs	r3, r3
 800d880:	6023      	str	r3, [r4, #0]
 800d882:	2d00      	cmp	r5, #0
 800d884:	4638      	mov	r0, r7
 800d886:	bfba      	itte	lt
 800d888:	426d      	neglt	r5, r5
 800d88a:	f04f 38ff 	movlt.w	r8, #4294967295
 800d88e:	f04f 0801 	movge.w	r8, #1
 800d892:	f7ff ff5d 	bl	800d750 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800d896:	ab03      	add	r3, sp, #12
 800d898:	463a      	mov	r2, r7
 800d89a:	e9cd 5300 	strd	r5, r3, [sp]
 800d89e:	4603      	mov	r3, r0
 800d8a0:	4648      	mov	r0, r9
 800d8a2:	f7ff ff73 	bl	800d78c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800d8a6:	6823      	ldr	r3, [r4, #0]
 800d8a8:	9a03      	ldr	r2, [sp, #12]
 800d8aa:	4546      	cmp	r6, r8
 800d8ac:	441a      	add	r2, r3
 800d8ae:	fb92 f3f5 	sdiv	r3, r2, r5
 800d8b2:	4418      	add	r0, r3
 800d8b4:	fb05 2313 	mls	r3, r5, r3, r2
 800d8b8:	bf18      	it	ne
 800d8ba:	4240      	negne	r0, r0
 800d8bc:	1c72      	adds	r2, r6, #1
 800d8be:	6023      	str	r3, [r4, #0]
 800d8c0:	d105      	bne.n	800d8ce <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800d8c2:	2b00      	cmp	r3, #0
 800d8c4:	f1c3 0200 	rsb	r2, r3, #0
 800d8c8:	db0b      	blt.n	800d8e2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800d8ca:	6022      	str	r2, [r4, #0]
 800d8cc:	e006      	b.n	800d8dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800d8ce:	2e01      	cmp	r6, #1
 800d8d0:	d104      	bne.n	800d8dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800d8d2:	2b00      	cmp	r3, #0
 800d8d4:	da02      	bge.n	800d8dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800d8d6:	442b      	add	r3, r5
 800d8d8:	3801      	subs	r0, #1
 800d8da:	6023      	str	r3, [r4, #0]
 800d8dc:	b005      	add	sp, #20
 800d8de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d8e2:	3801      	subs	r0, #1
 800d8e4:	1b52      	subs	r2, r2, r5
 800d8e6:	e7f0      	b.n	800d8ca <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800d8e8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800d8e8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800d8ec:	4c1c      	ldr	r4, [pc, #112]	@ (800d960 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800d8ee:	4605      	mov	r5, r0
 800d8f0:	6807      	ldr	r7, [r0, #0]
 800d8f2:	69a3      	ldr	r3, [r4, #24]
 800d8f4:	b92b      	cbnz	r3, 800d902 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800d8f6:	6840      	ldr	r0, [r0, #4]
 800d8f8:	e9c5 7000 	strd	r7, r0, [r5]
 800d8fc:	b004      	add	sp, #16
 800d8fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d902:	f04f 0802 	mov.w	r8, #2
 800d906:	68a2      	ldr	r2, [r4, #8]
 800d908:	ae04      	add	r6, sp, #16
 800d90a:	6820      	ldr	r0, [r4, #0]
 800d90c:	fb93 f1f8 	sdiv	r1, r3, r8
 800d910:	440a      	add	r2, r1
 800d912:	69e1      	ldr	r1, [r4, #28]
 800d914:	f846 2d04 	str.w	r2, [r6, #-4]!
 800d918:	463a      	mov	r2, r7
 800d91a:	9600      	str	r6, [sp, #0]
 800d91c:	f7ff ff98 	bl	800d850 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800d920:	69a3      	ldr	r3, [r4, #24]
 800d922:	4607      	mov	r7, r0
 800d924:	686a      	ldr	r2, [r5, #4]
 800d926:	6a21      	ldr	r1, [r4, #32]
 800d928:	9600      	str	r6, [sp, #0]
 800d92a:	6860      	ldr	r0, [r4, #4]
 800d92c:	f7ff ff90 	bl	800d850 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800d930:	69a3      	ldr	r3, [r4, #24]
 800d932:	6962      	ldr	r2, [r4, #20]
 800d934:	4407      	add	r7, r0
 800d936:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800d938:	9600      	str	r6, [sp, #0]
 800d93a:	68e0      	ldr	r0, [r4, #12]
 800d93c:	fb93 f8f8 	sdiv	r8, r3, r8
 800d940:	4442      	add	r2, r8
 800d942:	9203      	str	r2, [sp, #12]
 800d944:	682a      	ldr	r2, [r5, #0]
 800d946:	f7ff ff83 	bl	800d850 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800d94a:	4680      	mov	r8, r0
 800d94c:	9600      	str	r6, [sp, #0]
 800d94e:	69a3      	ldr	r3, [r4, #24]
 800d950:	686a      	ldr	r2, [r5, #4]
 800d952:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800d954:	6920      	ldr	r0, [r4, #16]
 800d956:	f7ff ff7b 	bl	800d850 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800d95a:	4440      	add	r0, r8
 800d95c:	e7cc      	b.n	800d8f8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800d95e:	bf00      	nop
 800d960:	200150b8 	.word	0x200150b8

0800d964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800d964:	4b07      	ldr	r3, [pc, #28]	@ (800d984 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800d966:	781b      	ldrb	r3, [r3, #0]
 800d968:	2b01      	cmp	r3, #1
 800d96a:	d109      	bne.n	800d980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800d96c:	f9b1 3000 	ldrsh.w	r3, [r1]
 800d970:	f9b0 2000 	ldrsh.w	r2, [r0]
 800d974:	8003      	strh	r3, [r0, #0]
 800d976:	4b04      	ldr	r3, [pc, #16]	@ (800d988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800d978:	881b      	ldrh	r3, [r3, #0]
 800d97a:	3b01      	subs	r3, #1
 800d97c:	1a9b      	subs	r3, r3, r2
 800d97e:	800b      	strh	r3, [r1, #0]
 800d980:	4770      	bx	lr
 800d982:	bf00      	nop
 800d984:	200150a4 	.word	0x200150a4
 800d988:	200150a0 	.word	0x200150a0

0800d98c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800d98c:	4b07      	ldr	r3, [pc, #28]	@ (800d9ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800d98e:	b510      	push	{r4, lr}
 800d990:	781b      	ldrb	r3, [r3, #0]
 800d992:	2b01      	cmp	r3, #1
 800d994:	d108      	bne.n	800d9a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800d996:	4b06      	ldr	r3, [pc, #24]	@ (800d9b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800d998:	880c      	ldrh	r4, [r1, #0]
 800d99a:	881b      	ldrh	r3, [r3, #0]
 800d99c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800d9a0:	3b01      	subs	r3, #1
 800d9a2:	1b1b      	subs	r3, r3, r4
 800d9a4:	8003      	strh	r3, [r0, #0]
 800d9a6:	800a      	strh	r2, [r1, #0]
 800d9a8:	bd10      	pop	{r4, pc}
 800d9aa:	bf00      	nop
 800d9ac:	200150a4 	.word	0x200150a4
 800d9b0:	200150a0 	.word	0x200150a0

0800d9b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800d9b4:	4b0a      	ldr	r3, [pc, #40]	@ (800d9e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800d9b6:	b510      	push	{r4, lr}
 800d9b8:	781b      	ldrb	r3, [r3, #0]
 800d9ba:	2b01      	cmp	r3, #1
 800d9bc:	d10e      	bne.n	800d9dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800d9be:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d9c2:	8843      	ldrh	r3, [r0, #2]
 800d9c4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d9c8:	18ca      	adds	r2, r1, r3
 800d9ca:	4b06      	ldr	r3, [pc, #24]	@ (800d9e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800d9cc:	8044      	strh	r4, [r0, #2]
 800d9ce:	881b      	ldrh	r3, [r3, #0]
 800d9d0:	1a9b      	subs	r3, r3, r2
 800d9d2:	8003      	strh	r3, [r0, #0]
 800d9d4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d9d8:	8081      	strh	r1, [r0, #4]
 800d9da:	80c3      	strh	r3, [r0, #6]
 800d9dc:	bd10      	pop	{r4, pc}
 800d9de:	bf00      	nop
 800d9e0:	200150a4 	.word	0x200150a4
 800d9e4:	200150a0 	.word	0x200150a0

0800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800d9e8:	4b08      	ldr	r3, [pc, #32]	@ (800da0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800d9ea:	781b      	ldrb	r3, [r3, #0]
 800d9ec:	2b01      	cmp	r3, #1
 800d9ee:	d10c      	bne.n	800da0a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800d9f0:	8803      	ldrh	r3, [r0, #0]
 800d9f2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800d9f6:	8842      	ldrh	r2, [r0, #2]
 800d9f8:	8002      	strh	r2, [r0, #0]
 800d9fa:	185a      	adds	r2, r3, r1
 800d9fc:	4b04      	ldr	r3, [pc, #16]	@ (800da10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800d9fe:	881b      	ldrh	r3, [r3, #0]
 800da00:	1a9b      	subs	r3, r3, r2
 800da02:	8043      	strh	r3, [r0, #2]
 800da04:	88c3      	ldrh	r3, [r0, #6]
 800da06:	80c1      	strh	r1, [r0, #6]
 800da08:	8083      	strh	r3, [r0, #4]
 800da0a:	4770      	bx	lr
 800da0c:	200150a4 	.word	0x200150a4
 800da10:	200150a0 	.word	0x200150a0

0800da14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800da14:	4b07      	ldr	r3, [pc, #28]	@ (800da34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800da16:	b510      	push	{r4, lr}
 800da18:	781b      	ldrb	r3, [r3, #0]
 800da1a:	2b01      	cmp	r3, #1
 800da1c:	d108      	bne.n	800da30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800da1e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800da22:	f9b0 4000 	ldrsh.w	r4, [r0]
 800da26:	8003      	strh	r3, [r0, #0]
 800da28:	8893      	ldrh	r3, [r2, #4]
 800da2a:	3b01      	subs	r3, #1
 800da2c:	1b1b      	subs	r3, r3, r4
 800da2e:	800b      	strh	r3, [r1, #0]
 800da30:	bd10      	pop	{r4, pc}
 800da32:	bf00      	nop
 800da34:	200150a4 	.word	0x200150a4

0800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800da38:	4b0a      	ldr	r3, [pc, #40]	@ (800da64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800da3a:	460a      	mov	r2, r1
 800da3c:	b510      	push	{r4, lr}
 800da3e:	781b      	ldrb	r3, [r3, #0]
 800da40:	2b01      	cmp	r3, #1
 800da42:	d10d      	bne.n	800da60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800da44:	8881      	ldrh	r1, [r0, #4]
 800da46:	8803      	ldrh	r3, [r0, #0]
 800da48:	440b      	add	r3, r1
 800da4a:	4601      	mov	r1, r0
 800da4c:	3b01      	subs	r3, #1
 800da4e:	f821 3b02 	strh.w	r3, [r1], #2
 800da52:	f7ff ffdf 	bl	800da14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800da56:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800da5a:	88c2      	ldrh	r2, [r0, #6]
 800da5c:	80c3      	strh	r3, [r0, #6]
 800da5e:	8082      	strh	r2, [r0, #4]
 800da60:	bd10      	pop	{r4, pc}
 800da62:	bf00      	nop
 800da64:	200150a4 	.word	0x200150a4

0800da68 <_ZN8touchgfx11Application13requestRedrawEv>:
 800da68:	4b06      	ldr	r3, [pc, #24]	@ (800da84 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800da6a:	2100      	movs	r1, #0
 800da6c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800da70:	4b05      	ldr	r3, [pc, #20]	@ (800da88 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800da72:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800da76:	f9b3 3000 	ldrsh.w	r3, [r3]
 800da7a:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800da7e:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800da82:	4770      	bx	lr
 800da84:	200150a0 	.word	0x200150a0
 800da88:	200150a2 	.word	0x200150a2

0800da8c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800da8c:	4b03      	ldr	r3, [pc, #12]	@ (800da9c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800da8e:	6818      	ldr	r0, [r3, #0]
 800da90:	b110      	cbz	r0, 800da98 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800da92:	6803      	ldr	r3, [r0, #0]
 800da94:	699b      	ldr	r3, [r3, #24]
 800da96:	4718      	bx	r3
 800da98:	4770      	bx	lr
 800da9a:	bf00      	nop
 800da9c:	200150e8 	.word	0x200150e8

0800daa0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800daa0:	4770      	bx	lr
	...

0800daa4 <_ZN8touchgfx11Application4drawEv>:
 800daa4:	4b09      	ldr	r3, [pc, #36]	@ (800dacc <_ZN8touchgfx11Application4drawEv+0x28>)
 800daa6:	b507      	push	{r0, r1, r2, lr}
 800daa8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800daac:	2100      	movs	r1, #0
 800daae:	4b08      	ldr	r3, [pc, #32]	@ (800dad0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800dab0:	9100      	str	r1, [sp, #0]
 800dab2:	4669      	mov	r1, sp
 800dab4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dab8:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dabc:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dac0:	6803      	ldr	r3, [r0, #0]
 800dac2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800dac4:	4798      	blx	r3
 800dac6:	b003      	add	sp, #12
 800dac8:	f85d fb04 	ldr.w	pc, [sp], #4
 800dacc:	200150a0 	.word	0x200150a0
 800dad0:	200150a2 	.word	0x200150a2

0800dad4 <_ZN8touchgfx11Application10invalidateEv>:
 800dad4:	4b09      	ldr	r3, [pc, #36]	@ (800dafc <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800dad6:	b082      	sub	sp, #8
 800dad8:	2100      	movs	r1, #0
 800dada:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dade:	4b08      	ldr	r3, [pc, #32]	@ (800db00 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800dae0:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dae4:	aa02      	add	r2, sp, #8
 800dae6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800daea:	9100      	str	r1, [sp, #0]
 800daec:	f8ad 3006 	strh.w	r3, [sp, #6]
 800daf0:	6803      	ldr	r3, [r0, #0]
 800daf2:	e912 0006 	ldmdb	r2, {r1, r2}
 800daf6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800daf8:	b002      	add	sp, #8
 800dafa:	4718      	bx	r3
 800dafc:	200150a0 	.word	0x200150a0
 800db00:	200150a2 	.word	0x200150a2

0800db04 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800db04:	4b03      	ldr	r3, [pc, #12]	@ (800db14 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800db06:	6818      	ldr	r0, [r3, #0]
 800db08:	b110      	cbz	r0, 800db10 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800db0a:	6803      	ldr	r3, [r0, #0]
 800db0c:	69db      	ldr	r3, [r3, #28]
 800db0e:	4718      	bx	r3
 800db10:	4770      	bx	lr
 800db12:	bf00      	nop
 800db14:	200150e8 	.word	0x200150e8

0800db18 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800db18:	4b03      	ldr	r3, [pc, #12]	@ (800db28 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800db1a:	6818      	ldr	r0, [r3, #0]
 800db1c:	b110      	cbz	r0, 800db24 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800db1e:	6803      	ldr	r3, [r0, #0]
 800db20:	6a1b      	ldr	r3, [r3, #32]
 800db22:	4718      	bx	r3
 800db24:	4770      	bx	lr
 800db26:	bf00      	nop
 800db28:	200150e8 	.word	0x200150e8

0800db2c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800db2c:	2300      	movs	r3, #0
 800db2e:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800db32:	4770      	bx	lr

0800db34 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800db34:	4b03      	ldr	r3, [pc, #12]	@ (800db44 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800db36:	6818      	ldr	r0, [r3, #0]
 800db38:	b110      	cbz	r0, 800db40 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800db3a:	6803      	ldr	r3, [r0, #0]
 800db3c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800db3e:	4718      	bx	r3
 800db40:	4770      	bx	lr
 800db42:	bf00      	nop
 800db44:	200150e8 	.word	0x200150e8

0800db48 <_ZN8touchgfx11ApplicationD1Ev>:
 800db48:	4770      	bx	lr

0800db4a <_ZN8touchgfx11ApplicationD0Ev>:
 800db4a:	b510      	push	{r4, lr}
 800db4c:	4604      	mov	r4, r0
 800db4e:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800db52:	f010 fdc1 	bl	801e6d8 <_ZdlPvj>
 800db56:	4620      	mov	r0, r4
 800db58:	bd10      	pop	{r4, pc}

0800db5a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800db5a:	b510      	push	{r4, lr}
 800db5c:	f9b1 4000 	ldrsh.w	r4, [r1]
 800db60:	888a      	ldrh	r2, [r1, #4]
 800db62:	f9b0 3000 	ldrsh.w	r3, [r0]
 800db66:	4422      	add	r2, r4
 800db68:	b212      	sxth	r2, r2
 800db6a:	4293      	cmp	r3, r2
 800db6c:	da15      	bge.n	800db9a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800db6e:	8882      	ldrh	r2, [r0, #4]
 800db70:	4413      	add	r3, r2
 800db72:	b21b      	sxth	r3, r3
 800db74:	429c      	cmp	r4, r3
 800db76:	da10      	bge.n	800db9a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800db78:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800db7c:	88c9      	ldrh	r1, [r1, #6]
 800db7e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800db82:	4419      	add	r1, r3
 800db84:	b209      	sxth	r1, r1
 800db86:	428a      	cmp	r2, r1
 800db88:	da07      	bge.n	800db9a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800db8a:	88c0      	ldrh	r0, [r0, #6]
 800db8c:	4410      	add	r0, r2
 800db8e:	b200      	sxth	r0, r0
 800db90:	4283      	cmp	r3, r0
 800db92:	bfac      	ite	ge
 800db94:	2000      	movge	r0, #0
 800db96:	2001      	movlt	r0, #1
 800db98:	bd10      	pop	{r4, pc}
 800db9a:	2000      	movs	r0, #0
 800db9c:	e7fc      	b.n	800db98 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800db9e <_ZN8touchgfx4Rect10restrictToEss>:
 800db9e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800dba2:	2b00      	cmp	r3, #0
 800dba4:	b510      	push	{r4, lr}
 800dba6:	da04      	bge.n	800dbb2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800dba8:	8884      	ldrh	r4, [r0, #4]
 800dbaa:	4423      	add	r3, r4
 800dbac:	8083      	strh	r3, [r0, #4]
 800dbae:	2300      	movs	r3, #0
 800dbb0:	8003      	strh	r3, [r0, #0]
 800dbb2:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dbb6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dbba:	1b09      	subs	r1, r1, r4
 800dbbc:	428b      	cmp	r3, r1
 800dbbe:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800dbc2:	bfc8      	it	gt
 800dbc4:	8081      	strhgt	r1, [r0, #4]
 800dbc6:	2b00      	cmp	r3, #0
 800dbc8:	da04      	bge.n	800dbd4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800dbca:	88c1      	ldrh	r1, [r0, #6]
 800dbcc:	440b      	add	r3, r1
 800dbce:	80c3      	strh	r3, [r0, #6]
 800dbd0:	2300      	movs	r3, #0
 800dbd2:	8043      	strh	r3, [r0, #2]
 800dbd4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800dbd8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800dbdc:	1a52      	subs	r2, r2, r1
 800dbde:	4293      	cmp	r3, r2
 800dbe0:	bfc8      	it	gt
 800dbe2:	80c2      	strhgt	r2, [r0, #6]
 800dbe4:	bd10      	pop	{r4, pc}
	...

0800dbe8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800dbe8:	4b10      	ldr	r3, [pc, #64]	@ (800dc2c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800dbea:	b510      	push	{r4, lr}
 800dbec:	460c      	mov	r4, r1
 800dbee:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dbf2:	4b0f      	ldr	r3, [pc, #60]	@ (800dc30 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800dbf4:	4620      	mov	r0, r4
 800dbf6:	f9b3 1000 	ldrsh.w	r1, [r3]
 800dbfa:	f7ff ffd0 	bl	800db9e <_ZN8touchgfx4Rect10restrictToEss>
 800dbfe:	4b0d      	ldr	r3, [pc, #52]	@ (800dc34 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800dc00:	6818      	ldr	r0, [r3, #0]
 800dc02:	b190      	cbz	r0, 800dc2a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800dc04:	6803      	ldr	r3, [r0, #0]
 800dc06:	4621      	mov	r1, r4
 800dc08:	689b      	ldr	r3, [r3, #8]
 800dc0a:	4798      	blx	r3
 800dc0c:	4b0a      	ldr	r3, [pc, #40]	@ (800dc38 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800dc0e:	6818      	ldr	r0, [r3, #0]
 800dc10:	b118      	cbz	r0, 800dc1a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800dc12:	6803      	ldr	r3, [r0, #0]
 800dc14:	4621      	mov	r1, r4
 800dc16:	689b      	ldr	r3, [r3, #8]
 800dc18:	4798      	blx	r3
 800dc1a:	4b08      	ldr	r3, [pc, #32]	@ (800dc3c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800dc1c:	4621      	mov	r1, r4
 800dc1e:	6818      	ldr	r0, [r3, #0]
 800dc20:	6803      	ldr	r3, [r0, #0]
 800dc22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dc26:	69db      	ldr	r3, [r3, #28]
 800dc28:	4718      	bx	r3
 800dc2a:	bd10      	pop	{r4, pc}
 800dc2c:	200150a2 	.word	0x200150a2
 800dc30:	200150a0 	.word	0x200150a0
 800dc34:	200150e8 	.word	0x200150e8
 800dc38:	200150e4 	.word	0x200150e4
 800dc3c:	200150ac 	.word	0x200150ac

0800dc40 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800dc40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dc42:	4606      	mov	r6, r0
 800dc44:	4608      	mov	r0, r1
 800dc46:	460f      	mov	r7, r1
 800dc48:	f7fc fd1d 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dc4c:	b9e8      	cbnz	r0, 800dc8a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800dc4e:	f9b7 5000 	ldrsh.w	r5, [r7]
 800dc52:	f9b6 4000 	ldrsh.w	r4, [r6]
 800dc56:	42a5      	cmp	r5, r4
 800dc58:	db17      	blt.n	800dc8a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800dc5a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800dc5e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800dc62:	429a      	cmp	r2, r3
 800dc64:	db11      	blt.n	800dc8a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800dc66:	88b9      	ldrh	r1, [r7, #4]
 800dc68:	440d      	add	r5, r1
 800dc6a:	88b1      	ldrh	r1, [r6, #4]
 800dc6c:	440c      	add	r4, r1
 800dc6e:	b22d      	sxth	r5, r5
 800dc70:	b224      	sxth	r4, r4
 800dc72:	42a5      	cmp	r5, r4
 800dc74:	dc09      	bgt.n	800dc8a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800dc76:	88f8      	ldrh	r0, [r7, #6]
 800dc78:	4410      	add	r0, r2
 800dc7a:	88f2      	ldrh	r2, [r6, #6]
 800dc7c:	4413      	add	r3, r2
 800dc7e:	b200      	sxth	r0, r0
 800dc80:	b21b      	sxth	r3, r3
 800dc82:	4298      	cmp	r0, r3
 800dc84:	bfcc      	ite	gt
 800dc86:	2000      	movgt	r0, #0
 800dc88:	2001      	movle	r0, #1
 800dc8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800dc8c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800dc8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dc8e:	4604      	mov	r4, r0
 800dc90:	4608      	mov	r0, r1
 800dc92:	460d      	mov	r5, r1
 800dc94:	f7fc fcf7 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dc98:	b978      	cbnz	r0, 800dcba <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800dc9a:	4620      	mov	r0, r4
 800dc9c:	f7fc fcf3 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dca0:	f9b5 6000 	ldrsh.w	r6, [r5]
 800dca4:	b150      	cbz	r0, 800dcbc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800dca6:	8026      	strh	r6, [r4, #0]
 800dca8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800dcac:	8063      	strh	r3, [r4, #2]
 800dcae:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800dcb2:	80a3      	strh	r3, [r4, #4]
 800dcb4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800dcb8:	80e3      	strh	r3, [r4, #6]
 800dcba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dcbc:	f9b4 1000 	ldrsh.w	r1, [r4]
 800dcc0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800dcc4:	42b1      	cmp	r1, r6
 800dcc6:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800dcca:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800dcce:	460f      	mov	r7, r1
 800dcd0:	88ed      	ldrh	r5, [r5, #6]
 800dcd2:	bfa8      	it	ge
 800dcd4:	4637      	movge	r7, r6
 800dcd6:	4293      	cmp	r3, r2
 800dcd8:	4618      	mov	r0, r3
 800dcda:	4466      	add	r6, ip
 800dcdc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800dce0:	bfa8      	it	ge
 800dce2:	4610      	movge	r0, r2
 800dce4:	442a      	add	r2, r5
 800dce6:	88e5      	ldrh	r5, [r4, #6]
 800dce8:	4461      	add	r1, ip
 800dcea:	b236      	sxth	r6, r6
 800dcec:	8027      	strh	r7, [r4, #0]
 800dcee:	442b      	add	r3, r5
 800dcf0:	b209      	sxth	r1, r1
 800dcf2:	b212      	sxth	r2, r2
 800dcf4:	8060      	strh	r0, [r4, #2]
 800dcf6:	b21b      	sxth	r3, r3
 800dcf8:	428e      	cmp	r6, r1
 800dcfa:	bfac      	ite	ge
 800dcfc:	ebc7 0106 	rsbge	r1, r7, r6
 800dd00:	ebc7 0101 	rsblt	r1, r7, r1
 800dd04:	429a      	cmp	r2, r3
 800dd06:	bfac      	ite	ge
 800dd08:	ebc0 0202 	rsbge	r2, r0, r2
 800dd0c:	ebc0 0203 	rsblt	r2, r0, r3
 800dd10:	80a1      	strh	r1, [r4, #4]
 800dd12:	80e2      	strh	r2, [r4, #6]
 800dd14:	e7d1      	b.n	800dcba <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800dd18 <_ZN8touchgfx11Application11getInstanceEv>:
 800dd18:	4b01      	ldr	r3, [pc, #4]	@ (800dd20 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800dd1a:	6818      	ldr	r0, [r3, #0]
 800dd1c:	4770      	bx	lr
 800dd1e:	bf00      	nop
 800dd20:	200150f8 	.word	0x200150f8

0800dd24 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800dd24:	2300      	movs	r3, #0
 800dd26:	b510      	push	{r4, lr}
 800dd28:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800dd2c:	4604      	mov	r4, r0
 800dd2e:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800dd32:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800dd36:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800dd3a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800dd3e:	429a      	cmp	r2, r3
 800dd40:	d90e      	bls.n	800dd60 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800dd42:	18e2      	adds	r2, r4, r3
 800dd44:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800dd48:	b122      	cbz	r2, 800dd54 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800dd4a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800dd4e:	6803      	ldr	r3, [r0, #0]
 800dd50:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800dd52:	4798      	blx	r3
 800dd54:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800dd58:	3301      	adds	r3, #1
 800dd5a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800dd5e:	e7ea      	b.n	800dd36 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800dd60:	bd10      	pop	{r4, pc}

0800dd62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800dd62:	2300      	movs	r3, #0
 800dd64:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800dd68:	30a4      	adds	r0, #164	@ 0xa4
 800dd6a:	f820 3c24 	strh.w	r3, [r0, #-36]
 800dd6e:	f802 3b01 	strb.w	r3, [r2], #1
 800dd72:	4282      	cmp	r2, r0
 800dd74:	d1fb      	bne.n	800dd6e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800dd76:	4770      	bx	lr

0800dd78 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800dd78:	b570      	push	{r4, r5, r6, lr}
 800dd7a:	4c0b      	ldr	r4, [pc, #44]	@ (800dda8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800dd7c:	4605      	mov	r5, r0
 800dd7e:	460e      	mov	r6, r1
 800dd80:	6820      	ldr	r0, [r4, #0]
 800dd82:	b110      	cbz	r0, 800dd8a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800dd84:	6803      	ldr	r3, [r0, #0]
 800dd86:	695b      	ldr	r3, [r3, #20]
 800dd88:	4798      	blx	r3
 800dd8a:	1d28      	adds	r0, r5, #4
 800dd8c:	f7ff ffe9 	bl	800dd62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800dd90:	6026      	str	r6, [r4, #0]
 800dd92:	6833      	ldr	r3, [r6, #0]
 800dd94:	4630      	mov	r0, r6
 800dd96:	68db      	ldr	r3, [r3, #12]
 800dd98:	4798      	blx	r3
 800dd9a:	682b      	ldr	r3, [r5, #0]
 800dd9c:	4628      	mov	r0, r5
 800dd9e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800dda0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dda4:	4718      	bx	r3
 800dda6:	bf00      	nop
 800dda8:	200150e8 	.word	0x200150e8

0800ddac <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800ddac:	2300      	movs	r3, #0
 800ddae:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800ddb2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800ddb6:	461a      	mov	r2, r3
 800ddb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ddba:	461c      	mov	r4, r3
 800ddbc:	461d      	mov	r5, r3
 800ddbe:	459c      	cmp	ip, r3
 800ddc0:	dd1a      	ble.n	800ddf8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800ddc2:	18c6      	adds	r6, r0, r3
 800ddc4:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800ddc8:	b16e      	cbz	r6, 800dde6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800ddca:	429a      	cmp	r2, r3
 800ddcc:	d008      	beq.n	800dde0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800ddce:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800ddd2:	fa1f fe82 	uxth.w	lr, r2
 800ddd6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800ddda:	1887      	adds	r7, r0, r2
 800dddc:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800dde0:	3201      	adds	r2, #1
 800dde2:	3301      	adds	r3, #1
 800dde4:	e7eb      	b.n	800ddbe <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800dde6:	4299      	cmp	r1, r3
 800dde8:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800ddec:	bfa8      	it	ge
 800ddee:	3501      	addge	r5, #1
 800ddf0:	429e      	cmp	r6, r3
 800ddf2:	bfc8      	it	gt
 800ddf4:	3401      	addgt	r4, #1
 800ddf6:	e7f4      	b.n	800dde2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800ddf8:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800ddfc:	1b49      	subs	r1, r1, r5
 800ddfe:	1b1b      	subs	r3, r3, r4
 800de00:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800de04:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800de08:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800de0c:	4293      	cmp	r3, r2
 800de0e:	dd03      	ble.n	800de18 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800de10:	3b01      	subs	r3, #1
 800de12:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800de16:	e7f7      	b.n	800de08 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800de18:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800de1c <_ZN8touchgfx11Application15handleTickEventEv>:
 800de1c:	b570      	push	{r4, r5, r6, lr}
 800de1e:	4d16      	ldr	r5, [pc, #88]	@ (800de78 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800de20:	4604      	mov	r4, r0
 800de22:	6828      	ldr	r0, [r5, #0]
 800de24:	b140      	cbz	r0, 800de38 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800de26:	7a03      	ldrb	r3, [r0, #8]
 800de28:	b933      	cbnz	r3, 800de38 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800de2a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800de2e:	6803      	ldr	r3, [r0, #0]
 800de30:	689b      	ldr	r3, [r3, #8]
 800de32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de36:	4718      	bx	r3
 800de38:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800de3c:	4e0f      	ldr	r6, [pc, #60]	@ (800de7c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800de3e:	b973      	cbnz	r3, 800de5e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800de40:	b168      	cbz	r0, 800de5e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800de42:	7a03      	ldrb	r3, [r0, #8]
 800de44:	b15b      	cbz	r3, 800de5e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800de46:	6830      	ldr	r0, [r6, #0]
 800de48:	b110      	cbz	r0, 800de50 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800de4a:	6803      	ldr	r3, [r0, #0]
 800de4c:	691b      	ldr	r3, [r3, #16]
 800de4e:	4798      	blx	r3
 800de50:	6828      	ldr	r0, [r5, #0]
 800de52:	6803      	ldr	r3, [r0, #0]
 800de54:	68db      	ldr	r3, [r3, #12]
 800de56:	4798      	blx	r3
 800de58:	2301      	movs	r3, #1
 800de5a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800de5e:	3404      	adds	r4, #4
 800de60:	4620      	mov	r0, r4
 800de62:	f7ff ff5f 	bl	800dd24 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800de66:	4620      	mov	r0, r4
 800de68:	f7ff ffa0 	bl	800ddac <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800de6c:	6830      	ldr	r0, [r6, #0]
 800de6e:	b110      	cbz	r0, 800de76 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800de70:	6803      	ldr	r3, [r0, #0]
 800de72:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800de74:	e7dd      	b.n	800de32 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800de76:	bd70      	pop	{r4, r5, r6, pc}
 800de78:	200150ec 	.word	0x200150ec
 800de7c:	200150e8 	.word	0x200150e8

0800de80 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800de80:	4603      	mov	r3, r0
 800de82:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800de86:	2200      	movs	r2, #0
 800de88:	801a      	strh	r2, [r3, #0]
 800de8a:	3308      	adds	r3, #8
 800de8c:	f823 2c06 	strh.w	r2, [r3, #-6]
 800de90:	f823 2c04 	strh.w	r2, [r3, #-4]
 800de94:	f823 2c02 	strh.w	r2, [r3, #-2]
 800de98:	428b      	cmp	r3, r1
 800de9a:	d1f5      	bne.n	800de88 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800de9c:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800dea0:	4770      	bx	lr
	...

0800dea4 <_ZN8touchgfx11ApplicationC1Ev>:
 800dea4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dea6:	4b1d      	ldr	r3, [pc, #116]	@ (800df1c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800dea8:	4606      	mov	r6, r0
 800deaa:	4604      	mov	r4, r0
 800deac:	2500      	movs	r5, #0
 800deae:	f846 3b04 	str.w	r3, [r6], #4
 800deb2:	22a8      	movs	r2, #168	@ 0xa8
 800deb4:	2100      	movs	r1, #0
 800deb6:	4630      	mov	r0, r6
 800deb8:	f010 fed8 	bl	801ec6c <memset>
 800debc:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800dec0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800dec4:	4f16      	ldr	r7, [pc, #88]	@ (800df20 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800dec6:	f7ff ffdb 	bl	800de80 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800deca:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800dece:	f7ff ffd7 	bl	800de80 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ded2:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800ded6:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800deda:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800dede:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800dee2:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800dee6:	490f      	ldr	r1, [pc, #60]	@ (800df24 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800dee8:	480f      	ldr	r0, [pc, #60]	@ (800df28 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800deea:	f010 facd 	bl	801e488 <CRC_Lock>
 800deee:	4b0f      	ldr	r3, [pc, #60]	@ (800df2c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800def0:	b158      	cbz	r0, 800df0a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800def2:	801d      	strh	r5, [r3, #0]
 800def4:	2300      	movs	r3, #0
 800def6:	4a0e      	ldr	r2, [pc, #56]	@ (800df30 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800def8:	4630      	mov	r0, r6
 800defa:	6013      	str	r3, [r2, #0]
 800defc:	4a0d      	ldr	r2, [pc, #52]	@ (800df34 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800defe:	603b      	str	r3, [r7, #0]
 800df00:	6013      	str	r3, [r2, #0]
 800df02:	f7ff ff2e 	bl	800dd62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800df06:	4620      	mov	r0, r4
 800df08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800df0a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800df0e:	2002      	movs	r0, #2
 800df10:	801a      	strh	r2, [r3, #0]
 800df12:	6038      	str	r0, [r7, #0]
 800df14:	f001 fa58 	bl	800f3c8 <_ZN8touchgfx6Screen4drawEv>
 800df18:	e7ec      	b.n	800def4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800df1a:	bf00      	nop
 800df1c:	080211b8 	.word	0x080211b8
 800df20:	200150e8 	.word	0x200150e8
 800df24:	b5e8b5cd 	.word	0xb5e8b5cd
 800df28:	f407a5c2 	.word	0xf407a5c2
 800df2c:	20000044 	.word	0x20000044
 800df30:	200150f8 	.word	0x200150f8
 800df34:	200150ec 	.word	0x200150ec

0800df38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800df38:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800df3c:	3b01      	subs	r3, #1
 800df3e:	b29b      	uxth	r3, r3
 800df40:	428b      	cmp	r3, r1
 800df42:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800df46:	b510      	push	{r4, lr}
 800df48:	d908      	bls.n	800df5c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800df4a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800df4e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800df52:	681a      	ldr	r2, [r3, #0]
 800df54:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800df58:	685a      	ldr	r2, [r3, #4]
 800df5a:	6062      	str	r2, [r4, #4]
 800df5c:	bd10      	pop	{r4, pc}
	...

0800df60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800df60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df64:	b08f      	sub	sp, #60	@ 0x3c
 800df66:	4b8f      	ldr	r3, [pc, #572]	@ (800e1a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800df68:	4683      	mov	fp, r0
 800df6a:	ac0a      	add	r4, sp, #40	@ 0x28
 800df6c:	e884 0006 	stmia.w	r4, {r1, r2}
 800df70:	f9b3 2000 	ldrsh.w	r2, [r3]
 800df74:	4620      	mov	r0, r4
 800df76:	4b8c      	ldr	r3, [pc, #560]	@ (800e1a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800df78:	f9b3 1000 	ldrsh.w	r1, [r3]
 800df7c:	f7ff fe0f 	bl	800db9e <_ZN8touchgfx4Rect10restrictToEss>
 800df80:	4620      	mov	r0, r4
 800df82:	f7fc fb80 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800df86:	2800      	cmp	r0, #0
 800df88:	d16a      	bne.n	800e060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800df8a:	9403      	str	r4, [sp, #12]
 800df8c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800df90:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800df94:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800df98:	9301      	str	r3, [sp, #4]
 800df9a:	35a4      	adds	r5, #164	@ 0xa4
 800df9c:	b15c      	cbz	r4, 800dfb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800df9e:	4629      	mov	r1, r5
 800dfa0:	9803      	ldr	r0, [sp, #12]
 800dfa2:	f7ff fe4d 	bl	800dc40 <_ZNK8touchgfx4Rect8includesERKS0_>
 800dfa6:	3c01      	subs	r4, #1
 800dfa8:	b118      	cbz	r0, 800dfb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800dfaa:	b2a1      	uxth	r1, r4
 800dfac:	9801      	ldr	r0, [sp, #4]
 800dfae:	f7ff ffc3 	bl	800df38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dfb2:	3d08      	subs	r5, #8
 800dfb4:	e7f2      	b.n	800df9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800dfb6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800dfba:	f10a 33ff 	add.w	r3, sl, #4294967295
 800dfbe:	f8cd a010 	str.w	sl, [sp, #16]
 800dfc2:	9302      	str	r3, [sp, #8]
 800dfc4:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800dfc8:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800dfcc:	9306      	str	r3, [sp, #24]
 800dfce:	445c      	add	r4, fp
 800dfd0:	2500      	movs	r5, #0
 800dfd2:	4626      	mov	r6, r4
 800dfd4:	f8cd a014 	str.w	sl, [sp, #20]
 800dfd8:	462f      	mov	r7, r5
 800dfda:	9b05      	ldr	r3, [sp, #20]
 800dfdc:	2b00      	cmp	r3, #0
 800dfde:	d073      	beq.n	800e0c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800dfe0:	9903      	ldr	r1, [sp, #12]
 800dfe2:	4630      	mov	r0, r6
 800dfe4:	f7ff fdb9 	bl	800db5a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800dfe8:	b350      	cbz	r0, 800e040 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800dfea:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800dfee:	f9b6 c000 	ldrsh.w	ip, [r6]
 800dff2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800dff6:	45e6      	cmp	lr, ip
 800dff8:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800dffc:	db33      	blt.n	800e066 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800dffe:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800e002:	88b3      	ldrh	r3, [r6, #4]
 800e004:	4472      	add	r2, lr
 800e006:	4463      	add	r3, ip
 800e008:	b212      	sxth	r2, r2
 800e00a:	b21b      	sxth	r3, r3
 800e00c:	429a      	cmp	r2, r3
 800e00e:	dc2a      	bgt.n	800e066 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800e010:	fa1f f289 	uxth.w	r2, r9
 800e014:	88f3      	ldrh	r3, [r6, #6]
 800e016:	45c8      	cmp	r8, r9
 800e018:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800e01c:	4413      	add	r3, r2
 800e01e:	fa1f fc88 	uxth.w	ip, r8
 800e022:	b29b      	uxth	r3, r3
 800e024:	fa0f fe83 	sxth.w	lr, r3
 800e028:	db0f      	blt.n	800e04a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800e02a:	eba3 030c 	sub.w	r3, r3, ip
 800e02e:	1ac9      	subs	r1, r1, r3
 800e030:	b209      	sxth	r1, r1
 800e032:	2900      	cmp	r1, #0
 800e034:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800e038:	dd12      	ble.n	800e060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e03a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800e03e:	4605      	mov	r5, r0
 800e040:	9b05      	ldr	r3, [sp, #20]
 800e042:	3e08      	subs	r6, #8
 800e044:	3b01      	subs	r3, #1
 800e046:	9305      	str	r3, [sp, #20]
 800e048:	e7c7      	b.n	800dfda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800e04a:	4461      	add	r1, ip
 800e04c:	b209      	sxth	r1, r1
 800e04e:	4571      	cmp	r1, lr
 800e050:	dc38      	bgt.n	800e0c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e052:	eba2 020c 	sub.w	r2, r2, ip
 800e056:	b212      	sxth	r2, r2
 800e058:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800e05c:	2a00      	cmp	r2, #0
 800e05e:	dcee      	bgt.n	800e03e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e060:	b00f      	add	sp, #60	@ 0x3c
 800e062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e066:	45c8      	cmp	r8, r9
 800e068:	db2c      	blt.n	800e0c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e06a:	88f3      	ldrh	r3, [r6, #6]
 800e06c:	4499      	add	r9, r3
 800e06e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800e072:	4498      	add	r8, r3
 800e074:	fa0f f989 	sxth.w	r9, r9
 800e078:	fa0f f888 	sxth.w	r8, r8
 800e07c:	45c1      	cmp	r9, r8
 800e07e:	db21      	blt.n	800e0c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e080:	fa1f f28c 	uxth.w	r2, ip
 800e084:	88b3      	ldrh	r3, [r6, #4]
 800e086:	45e6      	cmp	lr, ip
 800e088:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800e08c:	4413      	add	r3, r2
 800e08e:	fa1f f88e 	uxth.w	r8, lr
 800e092:	b29b      	uxth	r3, r3
 800e094:	fa0f f983 	sxth.w	r9, r3
 800e098:	db0a      	blt.n	800e0b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800e09a:	eba3 0308 	sub.w	r3, r3, r8
 800e09e:	1ac9      	subs	r1, r1, r3
 800e0a0:	b209      	sxth	r1, r1
 800e0a2:	2900      	cmp	r1, #0
 800e0a4:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800e0a8:	ddda      	ble.n	800e060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e0aa:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800e0ae:	e7c6      	b.n	800e03e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e0b0:	4441      	add	r1, r8
 800e0b2:	b209      	sxth	r1, r1
 800e0b4:	4549      	cmp	r1, r9
 800e0b6:	dc05      	bgt.n	800e0c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e0b8:	eba2 0208 	sub.w	r2, r2, r8
 800e0bc:	b212      	sxth	r2, r2
 800e0be:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800e0c2:	e7cb      	b.n	800e05c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800e0c4:	4607      	mov	r7, r0
 800e0c6:	e7bb      	b.n	800e040 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800e0c8:	2d00      	cmp	r5, #0
 800e0ca:	d181      	bne.n	800dfd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800e0cc:	2f00      	cmp	r7, #0
 800e0ce:	f000 81dd 	beq.w	800e48c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800e0d2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800e0d6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800e0da:	b2b3      	uxth	r3, r6
 800e0dc:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800e0e0:	9305      	str	r3, [sp, #20]
 800e0e2:	9a05      	ldr	r2, [sp, #20]
 800e0e4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800e0e8:	4413      	add	r3, r2
 800e0ea:	b2ba      	uxth	r2, r7
 800e0ec:	4492      	add	sl, r2
 800e0ee:	b29b      	uxth	r3, r3
 800e0f0:	fa1f fa8a 	uxth.w	sl, sl
 800e0f4:	fa0f f883 	sxth.w	r8, r3
 800e0f8:	fa0f f98a 	sxth.w	r9, sl
 800e0fc:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800e100:	9b04      	ldr	r3, [sp, #16]
 800e102:	2b00      	cmp	r3, #0
 800e104:	d052      	beq.n	800e1ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800e106:	9903      	ldr	r1, [sp, #12]
 800e108:	4620      	mov	r0, r4
 800e10a:	f7ff fd26 	bl	800db5a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e10e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800e112:	b1c0      	cbz	r0, 800e146 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e114:	f9b4 e000 	ldrsh.w	lr, [r4]
 800e118:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800e11c:	4576      	cmp	r6, lr
 800e11e:	dc22      	bgt.n	800e166 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800e120:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800e124:	44f4      	add	ip, lr
 800e126:	fa0f fc8c 	sxth.w	ip, ip
 800e12a:	45e0      	cmp	r8, ip
 800e12c:	db1b      	blt.n	800e166 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800e12e:	428f      	cmp	r7, r1
 800e130:	fa1f fc81 	uxth.w	ip, r1
 800e134:	88e1      	ldrh	r1, [r4, #6]
 800e136:	dc0d      	bgt.n	800e154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800e138:	ebaa 0c0c 	sub.w	ip, sl, ip
 800e13c:	f8a4 9002 	strh.w	r9, [r4, #2]
 800e140:	eba1 010c 	sub.w	r1, r1, ip
 800e144:	80e1      	strh	r1, [r4, #6]
 800e146:	4628      	mov	r0, r5
 800e148:	9904      	ldr	r1, [sp, #16]
 800e14a:	3c08      	subs	r4, #8
 800e14c:	4605      	mov	r5, r0
 800e14e:	3901      	subs	r1, #1
 800e150:	9104      	str	r1, [sp, #16]
 800e152:	e7d3      	b.n	800e0fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800e154:	4461      	add	r1, ip
 800e156:	b209      	sxth	r1, r1
 800e158:	4549      	cmp	r1, r9
 800e15a:	dcf5      	bgt.n	800e148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e15c:	eba2 0c0c 	sub.w	ip, r2, ip
 800e160:	f8a4 c006 	strh.w	ip, [r4, #6]
 800e164:	e7ef      	b.n	800e146 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e166:	428f      	cmp	r7, r1
 800e168:	dcee      	bgt.n	800e148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e16a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800e16e:	4461      	add	r1, ip
 800e170:	b209      	sxth	r1, r1
 800e172:	4589      	cmp	r9, r1
 800e174:	dbe8      	blt.n	800e148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e176:	4576      	cmp	r6, lr
 800e178:	fa1f fc8e 	uxth.w	ip, lr
 800e17c:	88a1      	ldrh	r1, [r4, #4]
 800e17e:	dc07      	bgt.n	800e190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800e180:	eba3 0c0c 	sub.w	ip, r3, ip
 800e184:	f8a4 8000 	strh.w	r8, [r4]
 800e188:	eba1 010c 	sub.w	r1, r1, ip
 800e18c:	80a1      	strh	r1, [r4, #4]
 800e18e:	e7da      	b.n	800e146 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e190:	4461      	add	r1, ip
 800e192:	b209      	sxth	r1, r1
 800e194:	4588      	cmp	r8, r1
 800e196:	dbd7      	blt.n	800e148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e198:	9905      	ldr	r1, [sp, #20]
 800e19a:	eba1 0c0c 	sub.w	ip, r1, ip
 800e19e:	f8a4 c004 	strh.w	ip, [r4, #4]
 800e1a2:	e7d0      	b.n	800e146 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e1a4:	200150a2 	.word	0x200150a2
 800e1a8:	200150a0 	.word	0x200150a0
 800e1ac:	2d00      	cmp	r5, #0
 800e1ae:	f000 816d 	beq.w	800e48c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800e1b2:	9b06      	ldr	r3, [sp, #24]
 800e1b4:	445b      	add	r3, fp
 800e1b6:	461c      	mov	r4, r3
 800e1b8:	9b02      	ldr	r3, [sp, #8]
 800e1ba:	3301      	adds	r3, #1
 800e1bc:	f000 8166 	beq.w	800e48c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800e1c0:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800e1c4:	9803      	ldr	r0, [sp, #12]
 800e1c6:	4629      	mov	r1, r5
 800e1c8:	f7ff fd3a 	bl	800dc40 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e1cc:	b120      	cbz	r0, 800e1d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800e1ce:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800e1d2:	9801      	ldr	r0, [sp, #4]
 800e1d4:	f7ff feb0 	bl	800df38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e1d8:	9903      	ldr	r1, [sp, #12]
 800e1da:	4628      	mov	r0, r5
 800e1dc:	f7ff fcbd 	bl	800db5a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e1e0:	2800      	cmp	r0, #0
 800e1e2:	f000 809c 	beq.w	800e31e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800e1e6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800e1ea:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800e1ee:	fa1f f189 	uxth.w	r1, r9
 800e1f2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800e1f6:	9309      	str	r3, [sp, #36]	@ 0x24
 800e1f8:	eb01 0c03 	add.w	ip, r1, r3
 800e1fc:	b283      	uxth	r3, r0
 800e1fe:	4548      	cmp	r0, r9
 800e200:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800e204:	fa1f fa8c 	uxth.w	sl, ip
 800e208:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800e20c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800e210:	eb03 050c 	add.w	r5, r3, ip
 800e214:	b2ad      	uxth	r5, r5
 800e216:	9505      	str	r5, [sp, #20]
 800e218:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800e21c:	9504      	str	r5, [sp, #16]
 800e21e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800e222:	f340 8099 	ble.w	800e358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800e226:	1a5b      	subs	r3, r3, r1
 800e228:	4596      	cmp	lr, r2
 800e22a:	fa0f f08a 	sxth.w	r0, sl
 800e22e:	b29b      	uxth	r3, r3
 800e230:	b21e      	sxth	r6, r3
 800e232:	dd2e      	ble.n	800e292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800e234:	9f02      	ldr	r7, [sp, #8]
 800e236:	fa1f fe8e 	uxth.w	lr, lr
 800e23a:	b292      	uxth	r2, r2
 800e23c:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800e240:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800e244:	9f04      	ldr	r7, [sp, #16]
 800e246:	ebae 0102 	sub.w	r1, lr, r2
 800e24a:	44a6      	add	lr, r4
 800e24c:	1a3f      	subs	r7, r7, r0
 800e24e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800e252:	b289      	uxth	r1, r1
 800e254:	4402      	add	r2, r0
 800e256:	fa0f fe8e 	sxth.w	lr, lr
 800e25a:	b20d      	sxth	r5, r1
 800e25c:	b212      	sxth	r2, r2
 800e25e:	436f      	muls	r7, r5
 800e260:	ebae 0202 	sub.w	r2, lr, r2
 800e264:	4372      	muls	r2, r6
 800e266:	4297      	cmp	r7, r2
 800e268:	db09      	blt.n	800e27e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800e26a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800e26e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800e272:	449c      	add	ip, r3
 800e274:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800e278:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800e27c:	e686      	b.n	800df8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e27e:	4421      	add	r1, r4
 800e280:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800e284:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800e288:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800e28c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800e290:	e67c      	b.n	800df8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e292:	9f04      	ldr	r7, [sp, #16]
 800e294:	42b8      	cmp	r0, r7
 800e296:	da27      	bge.n	800e2e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800e298:	9902      	ldr	r1, [sp, #8]
 800e29a:	1a3f      	subs	r7, r7, r0
 800e29c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800e2a0:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800e2a4:	eb05 010e 	add.w	r1, r5, lr
 800e2a8:	fa1f f881 	uxth.w	r8, r1
 800e2ac:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800e2b0:	4411      	add	r1, r2
 800e2b2:	fa0f f988 	sxth.w	r9, r8
 800e2b6:	eba2 020e 	sub.w	r2, r2, lr
 800e2ba:	eba1 0108 	sub.w	r1, r1, r8
 800e2be:	4372      	muls	r2, r6
 800e2c0:	b289      	uxth	r1, r1
 800e2c2:	fa0f f881 	sxth.w	r8, r1
 800e2c6:	fb08 f707 	mul.w	r7, r8, r7
 800e2ca:	42ba      	cmp	r2, r7
 800e2cc:	dc06      	bgt.n	800e2dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800e2ce:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800e2d2:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800e2d6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800e2da:	e7ca      	b.n	800e272 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800e2dc:	4429      	add	r1, r5
 800e2de:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800e2e2:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800e2e6:	e651      	b.n	800df8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e2e8:	9805      	ldr	r0, [sp, #20]
 800e2ea:	2d06      	cmp	r5, #6
 800e2ec:	ebaa 0000 	sub.w	r0, sl, r0
 800e2f0:	b280      	uxth	r0, r0
 800e2f2:	fa0f fe80 	sxth.w	lr, r0
 800e2f6:	d817      	bhi.n	800e328 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800e2f8:	9b04      	ldr	r3, [sp, #16]
 800e2fa:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800e2fe:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800e302:	1c6b      	adds	r3, r5, #1
 800e304:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800e308:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800e30c:	9b01      	ldr	r3, [sp, #4]
 800e30e:	9801      	ldr	r0, [sp, #4]
 800e310:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e314:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e318:	805a      	strh	r2, [r3, #2]
 800e31a:	809e      	strh	r6, [r3, #4]
 800e31c:	80d9      	strh	r1, [r3, #6]
 800e31e:	9b02      	ldr	r3, [sp, #8]
 800e320:	3c08      	subs	r4, #8
 800e322:	3b01      	subs	r3, #1
 800e324:	9302      	str	r3, [sp, #8]
 800e326:	e747      	b.n	800e1b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800e328:	9a02      	ldr	r2, [sp, #8]
 800e32a:	45b6      	cmp	lr, r6
 800e32c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e330:	db0d      	blt.n	800e34e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800e332:	449c      	add	ip, r3
 800e334:	445a      	add	r2, fp
 800e336:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800e33a:	fa1f fc8c 	uxth.w	ip, ip
 800e33e:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800e342:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800e346:	448c      	add	ip, r1
 800e348:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800e34c:	e61e      	b.n	800df8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e34e:	445a      	add	r2, fp
 800e350:	4484      	add	ip, r0
 800e352:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800e356:	e78f      	b.n	800e278 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800e358:	fa1f f18e 	uxth.w	r1, lr
 800e35c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800e360:	b293      	uxth	r3, r2
 800e362:	4596      	cmp	lr, r2
 800e364:	eb01 0806 	add.w	r8, r1, r6
 800e368:	9306      	str	r3, [sp, #24]
 800e36a:	fa1f f888 	uxth.w	r8, r8
 800e36e:	9f06      	ldr	r7, [sp, #24]
 800e370:	fa0f f388 	sxth.w	r3, r8
 800e374:	9307      	str	r3, [sp, #28]
 800e376:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800e37a:	443b      	add	r3, r7
 800e37c:	b29b      	uxth	r3, r3
 800e37e:	9308      	str	r3, [sp, #32]
 800e380:	da24      	bge.n	800e3cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800e382:	9905      	ldr	r1, [sp, #20]
 800e384:	eba3 0308 	sub.w	r3, r3, r8
 800e388:	eba2 020e 	sub.w	r2, r2, lr
 800e38c:	eba9 0000 	sub.w	r0, r9, r0
 800e390:	ebaa 0401 	sub.w	r4, sl, r1
 800e394:	b29b      	uxth	r3, r3
 800e396:	b2a4      	uxth	r4, r4
 800e398:	b219      	sxth	r1, r3
 800e39a:	b225      	sxth	r5, r4
 800e39c:	4348      	muls	r0, r1
 800e39e:	436a      	muls	r2, r5
 800e3a0:	4282      	cmp	r2, r0
 800e3a2:	9a02      	ldr	r2, [sp, #8]
 800e3a4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e3a8:	445a      	add	r2, fp
 800e3aa:	dc06      	bgt.n	800e3ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800e3ac:	9b07      	ldr	r3, [sp, #28]
 800e3ae:	44a4      	add	ip, r4
 800e3b0:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800e3b4:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800e3b8:	e75e      	b.n	800e278 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800e3ba:	9904      	ldr	r1, [sp, #16]
 800e3bc:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800e3c0:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800e3c4:	4433      	add	r3, r6
 800e3c6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800e3ca:	e5df      	b.n	800df8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e3cc:	9f06      	ldr	r7, [sp, #24]
 800e3ce:	9b04      	ldr	r3, [sp, #16]
 800e3d0:	1bc9      	subs	r1, r1, r7
 800e3d2:	fa0f f78a 	sxth.w	r7, sl
 800e3d6:	b289      	uxth	r1, r1
 800e3d8:	429f      	cmp	r7, r3
 800e3da:	fa0f fe81 	sxth.w	lr, r1
 800e3de:	dd23      	ble.n	800e428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 800e3e0:	9a05      	ldr	r2, [sp, #20]
 800e3e2:	eba9 0000 	sub.w	r0, r9, r0
 800e3e6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800e3ea:	ebaa 0202 	sub.w	r2, sl, r2
 800e3ee:	9d07      	ldr	r5, [sp, #28]
 800e3f0:	fb0e f000 	mul.w	r0, lr, r0
 800e3f4:	b292      	uxth	r2, r2
 800e3f6:	eba5 0a03 	sub.w	sl, r5, r3
 800e3fa:	9b02      	ldr	r3, [sp, #8]
 800e3fc:	b214      	sxth	r4, r2
 800e3fe:	00db      	lsls	r3, r3, #3
 800e400:	fb04 fa0a 	mul.w	sl, r4, sl
 800e404:	445b      	add	r3, fp
 800e406:	4550      	cmp	r0, sl
 800e408:	db03      	blt.n	800e412 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 800e40a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800e40e:	4494      	add	ip, r2
 800e410:	e732      	b.n	800e278 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800e412:	9a04      	ldr	r2, [sp, #16]
 800e414:	4431      	add	r1, r6
 800e416:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800e41a:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800e41e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800e422:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800e426:	e75c      	b.n	800e2e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800e428:	9b08      	ldr	r3, [sp, #32]
 800e42a:	2d06      	cmp	r5, #6
 800e42c:	eba3 0308 	sub.w	r3, r3, r8
 800e430:	b29b      	uxth	r3, r3
 800e432:	b218      	sxth	r0, r3
 800e434:	d813      	bhi.n	800e45e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 800e436:	9b07      	ldr	r3, [sp, #28]
 800e438:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800e43c:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800e440:	1c6b      	adds	r3, r5, #1
 800e442:	9901      	ldr	r1, [sp, #4]
 800e444:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800e448:	9b01      	ldr	r3, [sp, #4]
 800e44a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800e44e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e452:	805a      	strh	r2, [r3, #2]
 800e454:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e456:	f8a3 e006 	strh.w	lr, [r3, #6]
 800e45a:	809a      	strh	r2, [r3, #4]
 800e45c:	e75f      	b.n	800e31e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800e45e:	9c02      	ldr	r4, [sp, #8]
 800e460:	4570      	cmp	r0, lr
 800e462:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800e466:	db0d      	blt.n	800e484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 800e468:	4431      	add	r1, r6
 800e46a:	9b06      	ldr	r3, [sp, #24]
 800e46c:	445c      	add	r4, fp
 800e46e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800e472:	b289      	uxth	r1, r1
 800e474:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800e478:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800e47c:	4419      	add	r1, r3
 800e47e:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800e482:	e583      	b.n	800df8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e484:	445c      	add	r4, fp
 800e486:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800e48a:	e79b      	b.n	800e3c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800e48c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800e490:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800e494:	1e65      	subs	r5, r4, #1
 800e496:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800e49a:	b2ad      	uxth	r5, r5
 800e49c:	42b5      	cmp	r5, r6
 800e49e:	d044      	beq.n	800e52a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800e4a0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800e4a4:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800e4a8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800e4ac:	4282      	cmp	r2, r0
 800e4ae:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800e4b2:	d11f      	bne.n	800e4f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800e4b4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800e4b8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800e4bc:	459c      	cmp	ip, r3
 800e4be:	d119      	bne.n	800e4f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800e4c0:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800e4c4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800e4c8:	19d8      	adds	r0, r3, r7
 800e4ca:	b200      	sxth	r0, r0
 800e4cc:	4288      	cmp	r0, r1
 800e4ce:	d109      	bne.n	800e4e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800e4d0:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800e4d4:	4413      	add	r3, r2
 800e4d6:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800e4da:	4629      	mov	r1, r5
 800e4dc:	9801      	ldr	r0, [sp, #4]
 800e4de:	f7ff fd2b 	bl	800df38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e4e2:	e003      	b.n	800e4ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800e4e4:	4411      	add	r1, r2
 800e4e6:	b209      	sxth	r1, r1
 800e4e8:	42b9      	cmp	r1, r7
 800e4ea:	d0f3      	beq.n	800e4d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 800e4ec:	3d01      	subs	r5, #1
 800e4ee:	3c08      	subs	r4, #8
 800e4f0:	b2ad      	uxth	r5, r5
 800e4f2:	e7d3      	b.n	800e49c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800e4f4:	42b9      	cmp	r1, r7
 800e4f6:	d1f9      	bne.n	800e4ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800e4f8:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800e4fc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800e500:	4299      	cmp	r1, r3
 800e502:	d1f3      	bne.n	800e4ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800e504:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800e508:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800e50c:	181f      	adds	r7, r3, r0
 800e50e:	b23f      	sxth	r7, r7
 800e510:	42ba      	cmp	r2, r7
 800e512:	d105      	bne.n	800e520 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 800e514:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800e518:	440b      	add	r3, r1
 800e51a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800e51e:	e7dc      	b.n	800e4da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 800e520:	440a      	add	r2, r1
 800e522:	b212      	sxth	r2, r2
 800e524:	4290      	cmp	r0, r2
 800e526:	d1e1      	bne.n	800e4ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800e528:	e7f6      	b.n	800e518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 800e52a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800e52e:	2e07      	cmp	r6, #7
 800e530:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800e534:	d812      	bhi.n	800e55c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 800e536:	1c75      	adds	r5, r6, #1
 800e538:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800e53c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800e540:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800e544:	9d01      	ldr	r5, [sp, #4]
 800e546:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800e54a:	442c      	add	r4, r5
 800e54c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800e550:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800e554:	8061      	strh	r1, [r4, #2]
 800e556:	80a2      	strh	r2, [r4, #4]
 800e558:	80e3      	strh	r3, [r4, #6]
 800e55a:	e581      	b.n	800e060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e55c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800e560:	3e01      	subs	r6, #1
 800e562:	445c      	add	r4, fp
 800e564:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800e568:	f04f 37ff 	mov.w	r7, #4294967295
 800e56c:	2500      	movs	r5, #0
 800e56e:	9305      	str	r3, [sp, #20]
 800e570:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800e574:	1e72      	subs	r2, r6, #1
 800e576:	9302      	str	r3, [sp, #8]
 800e578:	4691      	mov	r9, r2
 800e57a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800e57e:	9304      	str	r3, [sp, #16]
 800e580:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800e584:	f1b9 3fff 	cmp.w	r9, #4294967295
 800e588:	6818      	ldr	r0, [r3, #0]
 800e58a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e58e:	9207      	str	r2, [sp, #28]
 800e590:	bf16      	itet	ne
 800e592:	9905      	ldrne	r1, [sp, #20]
 800e594:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800e598:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800e59c:	9306      	str	r3, [sp, #24]
 800e59e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800e5a2:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800e5a6:	fb18 f801 	smulbb	r8, r8, r1
 800e5aa:	6859      	ldr	r1, [r3, #4]
 800e5ac:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e5b0:	4671      	mov	r1, lr
 800e5b2:	a80c      	add	r0, sp, #48	@ 0x30
 800e5b4:	f7ff fb6a 	bl	800dc8c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e5b8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800e5bc:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800e5c0:	f04f 0c08 	mov.w	ip, #8
 800e5c4:	9b04      	ldr	r3, [sp, #16]
 800e5c6:	9a02      	ldr	r2, [sp, #8]
 800e5c8:	fb10 f001 	smulbb	r0, r0, r1
 800e5cc:	fb02 8803 	mla	r8, r2, r3, r8
 800e5d0:	eba0 0108 	sub.w	r1, r0, r8
 800e5d4:	fb90 f0fc 	sdiv	r0, r0, ip
 800e5d8:	4288      	cmp	r0, r1
 800e5da:	dc20      	bgt.n	800e61e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 800e5dc:	4551      	cmp	r1, sl
 800e5de:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e5e2:	da03      	bge.n	800e5ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 800e5e4:	b1d9      	cbz	r1, 800e61e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 800e5e6:	468a      	mov	sl, r1
 800e5e8:	464f      	mov	r7, r9
 800e5ea:	4635      	mov	r5, r6
 800e5ec:	f109 39ff 	add.w	r9, r9, #4294967295
 800e5f0:	f119 0f02 	cmn.w	r9, #2
 800e5f4:	d1c6      	bne.n	800e584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 800e5f6:	4616      	mov	r6, r2
 800e5f8:	3201      	adds	r2, #1
 800e5fa:	f1a4 0408 	sub.w	r4, r4, #8
 800e5fe:	d1b7      	bne.n	800e570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 800e600:	9b01      	ldr	r3, [sp, #4]
 800e602:	b2ac      	uxth	r4, r5
 800e604:	00ed      	lsls	r5, r5, #3
 800e606:	1958      	adds	r0, r3, r5
 800e608:	1c7b      	adds	r3, r7, #1
 800e60a:	d10b      	bne.n	800e624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 800e60c:	4601      	mov	r1, r0
 800e60e:	9803      	ldr	r0, [sp, #12]
 800e610:	f7ff fb3c 	bl	800dc8c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e614:	4621      	mov	r1, r4
 800e616:	9801      	ldr	r0, [sp, #4]
 800e618:	f7ff fc8e 	bl	800df38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e61c:	e4b6      	b.n	800df8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e61e:	464f      	mov	r7, r9
 800e620:	4635      	mov	r5, r6
 800e622:	e7ed      	b.n	800e600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 800e624:	9b01      	ldr	r3, [sp, #4]
 800e626:	00ff      	lsls	r7, r7, #3
 800e628:	445d      	add	r5, fp
 800e62a:	19d9      	adds	r1, r3, r7
 800e62c:	445f      	add	r7, fp
 800e62e:	f7ff fb2d 	bl	800dc8c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e632:	9b03      	ldr	r3, [sp, #12]
 800e634:	cb03      	ldmia	r3!, {r0, r1}
 800e636:	9b03      	ldr	r3, [sp, #12]
 800e638:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800e63c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800e640:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800e644:	6869      	ldr	r1, [r5, #4]
 800e646:	c303      	stmia	r3!, {r0, r1}
 800e648:	e7e4      	b.n	800e614 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 800e64a:	bf00      	nop

0800e64c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800e64c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e650:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800e654:	b09b      	sub	sp, #108	@ 0x6c
 800e656:	4604      	mov	r4, r0
 800e658:	4630      	mov	r0, r6
 800e65a:	f7fc f814 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e65e:	4605      	mov	r5, r0
 800e660:	b948      	cbnz	r0, 800e676 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800e662:	6823      	ldr	r3, [r4, #0]
 800e664:	4620      	mov	r0, r4
 800e666:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e668:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e66c:	4798      	blx	r3
 800e66e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800e672:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800e676:	4bc5      	ldr	r3, [pc, #788]	@ (800e98c <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 800e678:	681b      	ldr	r3, [r3, #0]
 800e67a:	2b00      	cmp	r3, #0
 800e67c:	d03f      	beq.n	800e6fe <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800e67e:	4dc4      	ldr	r5, [pc, #784]	@ (800e990 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800e680:	4628      	mov	r0, r5
 800e682:	f7fc f800 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e686:	4606      	mov	r6, r0
 800e688:	2800      	cmp	r0, #0
 800e68a:	d138      	bne.n	800e6fe <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800e68c:	4628      	mov	r0, r5
 800e68e:	f7ff f991 	bl	800d9b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e692:	6823      	ldr	r3, [r4, #0]
 800e694:	6829      	ldr	r1, [r5, #0]
 800e696:	4620      	mov	r0, r4
 800e698:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e69a:	686a      	ldr	r2, [r5, #4]
 800e69c:	4798      	blx	r3
 800e69e:	802e      	strh	r6, [r5, #0]
 800e6a0:	806e      	strh	r6, [r5, #2]
 800e6a2:	80ae      	strh	r6, [r5, #4]
 800e6a4:	80ee      	strh	r6, [r5, #6]
 800e6a6:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800e6aa:	4dba      	ldr	r5, [pc, #744]	@ (800e994 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800e6ac:	4640      	mov	r0, r8
 800e6ae:	f7ff fbe7 	bl	800de80 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e6b2:	882e      	ldrh	r6, [r5, #0]
 800e6b4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800e6b8:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800e6bc:	4633      	mov	r3, r6
 800e6be:	42bb      	cmp	r3, r7
 800e6c0:	d224      	bcs.n	800e70c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800e6c2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800e6c6:	2907      	cmp	r1, #7
 800e6c8:	d816      	bhi.n	800e6f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800e6ca:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800e6ce:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800e6d2:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800e6d6:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800e6da:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800e6de:	1c4a      	adds	r2, r1, #1
 800e6e0:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800e6e4:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800e6e8:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800e6ec:	f8a2 a002 	strh.w	sl, [r2, #2]
 800e6f0:	f8a2 e004 	strh.w	lr, [r2, #4]
 800e6f4:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e6f8:	3301      	adds	r3, #1
 800e6fa:	b29b      	uxth	r3, r3
 800e6fc:	e7df      	b.n	800e6be <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800e6fe:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800e702:	2b00      	cmp	r3, #0
 800e704:	d1cf      	bne.n	800e6a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800e706:	b01b      	add	sp, #108	@ 0x6c
 800e708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e70c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800e710:	42b3      	cmp	r3, r6
 800e712:	d90c      	bls.n	800e72e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800e714:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e718:	6822      	ldr	r2, [r4, #0]
 800e71a:	3601      	adds	r6, #1
 800e71c:	4620      	mov	r0, r4
 800e71e:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800e720:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800e724:	b2b6      	uxth	r6, r6
 800e726:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800e72a:	47b8      	blx	r7
 800e72c:	e7ee      	b.n	800e70c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800e72e:	4a9a      	ldr	r2, [pc, #616]	@ (800e998 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800e730:	6813      	ldr	r3, [r2, #0]
 800e732:	4691      	mov	r9, r2
 800e734:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800e738:	2b01      	cmp	r3, #1
 800e73a:	f040 80e0 	bne.w	800e8fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 800e73e:	8829      	ldrh	r1, [r5, #0]
 800e740:	2600      	movs	r6, #0
 800e742:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800e746:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800e74a:	33ae      	adds	r3, #174	@ 0xae
 800e74c:	428f      	cmp	r7, r1
 800e74e:	f103 0308 	add.w	r3, r3, #8
 800e752:	dd0a      	ble.n	800e76a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800e754:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800e758:	3101      	adds	r1, #1
 800e75a:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800e75e:	4402      	add	r2, r0
 800e760:	b212      	sxth	r2, r2
 800e762:	4296      	cmp	r6, r2
 800e764:	bfb8      	it	lt
 800e766:	4616      	movlt	r6, r2
 800e768:	e7f0      	b.n	800e74c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800e76a:	4b8c      	ldr	r3, [pc, #560]	@ (800e99c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800e76c:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 800e998 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 800e770:	881b      	ldrh	r3, [r3, #0]
 800e772:	2b0f      	cmp	r3, #15
 800e774:	bf8c      	ite	hi
 800e776:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800e77a:	f04f 0b01 	movls.w	fp, #1
 800e77e:	2300      	movs	r3, #0
 800e780:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800e784:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800e788:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800e78c:	4b82      	ldr	r3, [pc, #520]	@ (800e998 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800e78e:	4438      	add	r0, r7
 800e790:	b207      	sxth	r7, r0
 800e792:	6818      	ldr	r0, [r3, #0]
 800e794:	42b7      	cmp	r7, r6
 800e796:	6803      	ldr	r3, [r0, #0]
 800e798:	f280 8083 	bge.w	800e8a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 800e79c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800e7a0:	4798      	blx	r3
 800e7a2:	eb07 030b 	add.w	r3, r7, fp
 800e7a6:	4298      	cmp	r0, r3
 800e7a8:	da07      	bge.n	800e7ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800e7aa:	42b0      	cmp	r0, r6
 800e7ac:	da05      	bge.n	800e7ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800e7ae:	4287      	cmp	r7, r0
 800e7b0:	dd6c      	ble.n	800e88c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800e7b2:	2f00      	cmp	r7, #0
 800e7b4:	dd6a      	ble.n	800e88c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800e7b6:	4630      	mov	r0, r6
 800e7b8:	e004      	b.n	800e7c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 800e7ba:	4287      	cmp	r7, r0
 800e7bc:	dcfb      	bgt.n	800e7b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 800e7be:	42b0      	cmp	r0, r6
 800e7c0:	bfa8      	it	ge
 800e7c2:	4630      	movge	r0, r6
 800e7c4:	4b76      	ldr	r3, [pc, #472]	@ (800e9a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800e7c6:	1bc0      	subs	r0, r0, r7
 800e7c8:	2200      	movs	r2, #0
 800e7ca:	f8ad 7016 	strh.w	r7, [sp, #22]
 800e7ce:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e7d2:	882f      	ldrh	r7, [r5, #0]
 800e7d4:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e7d8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e7dc:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e7e0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800e7e4:	42bb      	cmp	r3, r7
 800e7e6:	d9cd      	bls.n	800e784 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 800e7e8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800e7ec:	ab07      	add	r3, sp, #28
 800e7ee:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800e7f2:	6851      	ldr	r1, [r2, #4]
 800e7f4:	c303      	stmia	r3!, {r0, r1}
 800e7f6:	a905      	add	r1, sp, #20
 800e7f8:	a807      	add	r0, sp, #28
 800e7fa:	f7ff f9ae 	bl	800db5a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e7fe:	2800      	cmp	r0, #0
 800e800:	d04c      	beq.n	800e89c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 800e802:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800e806:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800e80a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800e80e:	4686      	mov	lr, r0
 800e810:	4290      	cmp	r0, r2
 800e812:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800e816:	4450      	add	r0, sl
 800e818:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800e81c:	bfb8      	it	lt
 800e81e:	4696      	movlt	lr, r2
 800e820:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e824:	4452      	add	r2, sl
 800e826:	b280      	uxth	r0, r0
 800e828:	4299      	cmp	r1, r3
 800e82a:	468c      	mov	ip, r1
 800e82c:	b292      	uxth	r2, r2
 800e82e:	9302      	str	r3, [sp, #8]
 800e830:	bfb8      	it	lt
 800e832:	469c      	movlt	ip, r3
 800e834:	b203      	sxth	r3, r0
 800e836:	fa0f fa82 	sxth.w	sl, r2
 800e83a:	f8ad e01c 	strh.w	lr, [sp, #28]
 800e83e:	f8ad c01e 	strh.w	ip, [sp, #30]
 800e842:	4553      	cmp	r3, sl
 800e844:	bfb8      	it	lt
 800e846:	4602      	movlt	r2, r0
 800e848:	9b02      	ldr	r3, [sp, #8]
 800e84a:	eba2 020e 	sub.w	r2, r2, lr
 800e84e:	f8ad 2020 	strh.w	r2, [sp, #32]
 800e852:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800e856:	4411      	add	r1, r2
 800e858:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800e85c:	4413      	add	r3, r2
 800e85e:	b289      	uxth	r1, r1
 800e860:	b29b      	uxth	r3, r3
 800e862:	b208      	sxth	r0, r1
 800e864:	b21a      	sxth	r2, r3
 800e866:	4290      	cmp	r0, r2
 800e868:	bfb8      	it	lt
 800e86a:	460b      	movlt	r3, r1
 800e86c:	eba3 030c 	sub.w	r3, r3, ip
 800e870:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800e874:	a807      	add	r0, sp, #28
 800e876:	f7fb ff06 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e87a:	b920      	cbnz	r0, 800e886 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 800e87c:	6823      	ldr	r3, [r4, #0]
 800e87e:	a907      	add	r1, sp, #28
 800e880:	4620      	mov	r0, r4
 800e882:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800e884:	4798      	blx	r3
 800e886:	3701      	adds	r7, #1
 800e888:	b2bf      	uxth	r7, r7
 800e88a:	e7a9      	b.n	800e7e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 800e88c:	f8d9 0000 	ldr.w	r0, [r9]
 800e890:	2101      	movs	r1, #1
 800e892:	6803      	ldr	r3, [r0, #0]
 800e894:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800e898:	4798      	blx	r3
 800e89a:	e773      	b.n	800e784 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 800e89c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800e8a0:	e7e8      	b.n	800e874 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 800e8a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e8a4:	4798      	blx	r3
 800e8a6:	4b3f      	ldr	r3, [pc, #252]	@ (800e9a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800e8a8:	781b      	ldrb	r3, [r3, #0]
 800e8aa:	2b00      	cmp	r3, #0
 800e8ac:	f43f af2b 	beq.w	800e706 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800e8b0:	2300      	movs	r3, #0
 800e8b2:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800e8b6:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800e8ba:	882b      	ldrh	r3, [r5, #0]
 800e8bc:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800e8c0:	42ab      	cmp	r3, r5
 800e8c2:	f4bf af20 	bcs.w	800e706 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800e8c6:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800e8ca:	2907      	cmp	r1, #7
 800e8cc:	d814      	bhi.n	800e8f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 800e8ce:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800e8d2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800e8d6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800e8da:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800e8de:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800e8e2:	1c4a      	adds	r2, r1, #1
 800e8e4:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800e8e8:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800e8ec:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800e8f0:	f8a2 c002 	strh.w	ip, [r2, #2]
 800e8f4:	8097      	strh	r7, [r2, #4]
 800e8f6:	80d6      	strh	r6, [r2, #6]
 800e8f8:	3301      	adds	r3, #1
 800e8fa:	b29b      	uxth	r3, r3
 800e8fc:	e7e0      	b.n	800e8c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 800e8fe:	2b02      	cmp	r3, #2
 800e900:	f040 8133 	bne.w	800eb6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 800e904:	4b28      	ldr	r3, [pc, #160]	@ (800e9a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800e906:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800e90a:	781b      	ldrb	r3, [r3, #0]
 800e90c:	2b01      	cmp	r3, #1
 800e90e:	f000 8098 	beq.w	800ea42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800e912:	882a      	ldrh	r2, [r5, #0]
 800e914:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800e918:	3201      	adds	r2, #1
 800e91a:	b292      	uxth	r2, r2
 800e91c:	2900      	cmp	r1, #0
 800e91e:	d0c2      	beq.n	800e8a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800e920:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800e924:	4694      	mov	ip, r2
 800e926:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800e92a:	f04f 0900 	mov.w	r9, #0
 800e92e:	441e      	add	r6, r3
 800e930:	b236      	sxth	r6, r6
 800e932:	fa1f f38c 	uxth.w	r3, ip
 800e936:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800e93a:	4299      	cmp	r1, r3
 800e93c:	f240 80be 	bls.w	800eabc <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 800e940:	4427      	add	r7, r4
 800e942:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800e946:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800e94a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800e94e:	4283      	cmp	r3, r0
 800e950:	f340 80a0 	ble.w	800ea94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 800e954:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800e958:	46e1      	mov	r9, ip
 800e95a:	4406      	add	r6, r0
 800e95c:	b236      	sxth	r6, r6
 800e95e:	429e      	cmp	r6, r3
 800e960:	bfa8      	it	ge
 800e962:	461e      	movge	r6, r3
 800e964:	f10c 0c01 	add.w	ip, ip, #1
 800e968:	e7e3      	b.n	800e932 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 800e96a:	d10a      	bne.n	800e982 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 800e96c:	4562      	cmp	r2, ip
 800e96e:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800e972:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800e976:	bfb8      	it	lt
 800e978:	4662      	movlt	r2, ip
 800e97a:	4288      	cmp	r0, r1
 800e97c:	bfb8      	it	lt
 800e97e:	461f      	movlt	r7, r3
 800e980:	e086      	b.n	800ea90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 800e982:	428a      	cmp	r2, r1
 800e984:	bfb8      	it	lt
 800e986:	460a      	movlt	r2, r1
 800e988:	e082      	b.n	800ea90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 800e98a:	bf00      	nop
 800e98c:	200150e4 	.word	0x200150e4
 800e990:	200150f0 	.word	0x200150f0
 800e994:	20000044 	.word	0x20000044
 800e998:	200150ac 	.word	0x200150ac
 800e99c:	200150a2 	.word	0x200150a2
 800e9a0:	200150a0 	.word	0x200150a0
 800e9a4:	200150aa 	.word	0x200150aa
 800e9a8:	200150a4 	.word	0x200150a4
 800e9ac:	19a1      	adds	r1, r4, r6
 800e9ae:	ab07      	add	r3, sp, #28
 800e9b0:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800e9b4:	6849      	ldr	r1, [r1, #4]
 800e9b6:	c303      	stmia	r3!, {r0, r1}
 800e9b8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800e9bc:	a807      	add	r0, sp, #28
 800e9be:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800e9c2:	2b13      	cmp	r3, #19
 800e9c4:	440b      	add	r3, r1
 800e9c6:	bfd8      	it	le
 800e9c8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800e9cc:	1a9b      	subs	r3, r3, r2
 800e9ce:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e9d2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800e9d6:	f7ff f807 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800e9da:	a807      	add	r0, sp, #28
 800e9dc:	f7fb fe53 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e9e0:	bb78      	cbnz	r0, 800ea42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800e9e2:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800e9e6:	4426      	add	r6, r4
 800e9e8:	f8d9 0000 	ldr.w	r0, [r9]
 800e9ec:	f1bc 0f14 	cmp.w	ip, #20
 800e9f0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800e9f4:	f8d0 e000 	ldr.w	lr, [r0]
 800e9f8:	bfa8      	it	ge
 800e9fa:	f04f 0c14 	movge.w	ip, #20
 800e9fe:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800ea02:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ea06:	fa1f fc8c 	uxth.w	ip, ip
 800ea0a:	f8cd c000 	str.w	ip, [sp]
 800ea0e:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800ea12:	47d8      	blx	fp
 800ea14:	4683      	mov	fp, r0
 800ea16:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800ea1a:	a807      	add	r0, sp, #28
 800ea1c:	f7fe ffca 	bl	800d9b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ea20:	6823      	ldr	r3, [r4, #0]
 800ea22:	4620      	mov	r0, r4
 800ea24:	a907      	add	r1, sp, #28
 800ea26:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ea28:	4798      	blx	r3
 800ea2a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800ea2e:	eba0 000b 	sub.w	r0, r0, fp
 800ea32:	b200      	sxth	r0, r0
 800ea34:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800ea38:	b918      	cbnz	r0, 800ea42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800ea3a:	b2b9      	uxth	r1, r7
 800ea3c:	4650      	mov	r0, sl
 800ea3e:	f7ff fa7b 	bl	800df38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ea42:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800ea46:	f1bb 0f00 	cmp.w	fp, #0
 800ea4a:	f43f af2c 	beq.w	800e8a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800ea4e:	882b      	ldrh	r3, [r5, #0]
 800ea50:	2700      	movs	r7, #0
 800ea52:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800ea56:	3301      	adds	r3, #1
 800ea58:	b29b      	uxth	r3, r3
 800ea5a:	b299      	uxth	r1, r3
 800ea5c:	00fe      	lsls	r6, r7, #3
 800ea5e:	458b      	cmp	fp, r1
 800ea60:	d9a4      	bls.n	800e9ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 800ea62:	4426      	add	r6, r4
 800ea64:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800ea68:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800ea6c:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800ea70:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800ea74:	4408      	add	r0, r1
 800ea76:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800ea7a:	4461      	add	r1, ip
 800ea7c:	b200      	sxth	r0, r0
 800ea7e:	b209      	sxth	r1, r1
 800ea80:	4288      	cmp	r0, r1
 800ea82:	f6bf af72 	bge.w	800e96a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 800ea86:	4584      	cmp	ip, r0
 800ea88:	4662      	mov	r2, ip
 800ea8a:	461f      	mov	r7, r3
 800ea8c:	bfb8      	it	lt
 800ea8e:	4602      	movlt	r2, r0
 800ea90:	3301      	adds	r3, #1
 800ea92:	e7e2      	b.n	800ea5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 800ea94:	d10e      	bne.n	800eab4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 800ea96:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800ea9a:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800ea9e:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800eaa2:	4473      	add	r3, lr
 800eaa4:	b21b      	sxth	r3, r3
 800eaa6:	429e      	cmp	r6, r3
 800eaa8:	bfa8      	it	ge
 800eaaa:	461e      	movge	r6, r3
 800eaac:	4287      	cmp	r7, r0
 800eaae:	bfb8      	it	lt
 800eab0:	46e1      	movlt	r9, ip
 800eab2:	e757      	b.n	800e964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 800eab4:	4286      	cmp	r6, r0
 800eab6:	bfa8      	it	ge
 800eab8:	4606      	movge	r6, r0
 800eaba:	e753      	b.n	800e964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 800eabc:	eb0a 0007 	add.w	r0, sl, r7
 800eac0:	4427      	add	r7, r4
 800eac2:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800eac6:	f1bb 0f13 	cmp.w	fp, #19
 800eaca:	bfdc      	itt	le
 800eacc:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800ead0:	445e      	addle	r6, fp
 800ead2:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800ead6:	bfd8      	it	le
 800ead8:	b236      	sxthle	r6, r6
 800eada:	f7fb fdd4 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800eade:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800eae2:	2800      	cmp	r0, #0
 800eae4:	f47f af1a 	bne.w	800e91c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 800eae8:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800eaec:	fa1f fb8b 	uxth.w	fp, fp
 800eaf0:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800eaf4:	1ab6      	subs	r6, r6, r2
 800eaf6:	4829      	ldr	r0, [pc, #164]	@ (800eb9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 800eaf8:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800eafc:	2e14      	cmp	r6, #20
 800eafe:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800eb02:	6800      	ldr	r0, [r0, #0]
 800eb04:	bfa8      	it	ge
 800eb06:	2614      	movge	r6, #20
 800eb08:	f8ad 101c 	strh.w	r1, [sp, #28]
 800eb0c:	f8ad 201e 	strh.w	r2, [sp, #30]
 800eb10:	b289      	uxth	r1, r1
 800eb12:	f8ad 3020 	strh.w	r3, [sp, #32]
 800eb16:	b2b6      	uxth	r6, r6
 800eb18:	f8d0 c000 	ldr.w	ip, [r0]
 800eb1c:	b292      	uxth	r2, r2
 800eb1e:	455e      	cmp	r6, fp
 800eb20:	bf94      	ite	ls
 800eb22:	9600      	strls	r6, [sp, #0]
 800eb24:	f8cd b000 	strhi.w	fp, [sp]
 800eb28:	b29b      	uxth	r3, r3
 800eb2a:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800eb2e:	47b0      	blx	r6
 800eb30:	6823      	ldr	r3, [r4, #0]
 800eb32:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800eb36:	a907      	add	r1, sp, #28
 800eb38:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800eb3a:	4620      	mov	r0, r4
 800eb3c:	4798      	blx	r3
 800eb3e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800eb42:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800eb46:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800eb4a:	1a5b      	subs	r3, r3, r1
 800eb4c:	440a      	add	r2, r1
 800eb4e:	b21b      	sxth	r3, r3
 800eb50:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800eb54:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800eb58:	2b00      	cmp	r3, #0
 800eb5a:	f47f aeda 	bne.w	800e912 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 800eb5e:	fa1f f189 	uxth.w	r1, r9
 800eb62:	4650      	mov	r0, sl
 800eb64:	f7ff f9e8 	bl	800df38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800eb68:	e6d3      	b.n	800e912 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 800eb6a:	882e      	ldrh	r6, [r5, #0]
 800eb6c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800eb70:	42b3      	cmp	r3, r6
 800eb72:	f67f ae98 	bls.w	800e8a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800eb76:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800eb7a:	ab07      	add	r3, sp, #28
 800eb7c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800eb80:	6851      	ldr	r1, [r2, #4]
 800eb82:	c303      	stmia	r3!, {r0, r1}
 800eb84:	a807      	add	r0, sp, #28
 800eb86:	f7fb fd7e 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 800eb8a:	b920      	cbnz	r0, 800eb96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 800eb8c:	6823      	ldr	r3, [r4, #0]
 800eb8e:	a907      	add	r1, sp, #28
 800eb90:	4620      	mov	r0, r4
 800eb92:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800eb94:	4798      	blx	r3
 800eb96:	3601      	adds	r6, #1
 800eb98:	b2b6      	uxth	r6, r6
 800eb9a:	e7e7      	b.n	800eb6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 800eb9c:	200150ac 	.word	0x200150ac

0800eba0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800eba0:	4b03      	ldr	r3, [pc, #12]	@ (800ebb0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800eba2:	2200      	movs	r2, #0
 800eba4:	801a      	strh	r2, [r3, #0]
 800eba6:	805a      	strh	r2, [r3, #2]
 800eba8:	809a      	strh	r2, [r3, #4]
 800ebaa:	80da      	strh	r2, [r3, #6]
 800ebac:	4770      	bx	lr
 800ebae:	bf00      	nop
 800ebb0:	200150f0 	.word	0x200150f0

0800ebb4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ebb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebb8:	b09d      	sub	sp, #116	@ 0x74
 800ebba:	4606      	mov	r6, r0
 800ebbc:	4614      	mov	r4, r2
 800ebbe:	468a      	mov	sl, r1
 800ebc0:	a803      	add	r0, sp, #12
 800ebc2:	461d      	mov	r5, r3
 800ebc4:	f000 fd7a 	bl	800f6bc <_ZN8touchgfx12TextProviderC1Ev>
 800ebc8:	6833      	ldr	r3, [r6, #0]
 800ebca:	4630      	mov	r0, r6
 800ebcc:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800ebd0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ebd2:	4798      	blx	r3
 800ebd4:	6833      	ldr	r3, [r6, #0]
 800ebd6:	4607      	mov	r7, r0
 800ebd8:	4630      	mov	r0, r6
 800ebda:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ebdc:	4798      	blx	r3
 800ebde:	462a      	mov	r2, r5
 800ebe0:	2500      	movs	r5, #0
 800ebe2:	4621      	mov	r1, r4
 800ebe4:	9000      	str	r0, [sp, #0]
 800ebe6:	463b      	mov	r3, r7
 800ebe8:	462c      	mov	r4, r5
 800ebea:	46a9      	mov	r9, r5
 800ebec:	46a8      	mov	r8, r5
 800ebee:	a803      	add	r0, sp, #12
 800ebf0:	f000 fdbf 	bl	800f772 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ebf4:	2300      	movs	r3, #0
 800ebf6:	9302      	str	r3, [sp, #8]
 800ebf8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800ebfc:	429c      	cmp	r4, r3
 800ebfe:	d002      	beq.n	800ec06 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800ec00:	455c      	cmp	r4, fp
 800ec02:	bf18      	it	ne
 800ec04:	4625      	movne	r5, r4
 800ec06:	ab02      	add	r3, sp, #8
 800ec08:	4632      	mov	r2, r6
 800ec0a:	4651      	mov	r1, sl
 800ec0c:	a803      	add	r0, sp, #12
 800ec0e:	f001 f8b5 	bl	800fd7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ec12:	4604      	mov	r4, r0
 800ec14:	b108      	cbz	r0, 800ec1a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800ec16:	280a      	cmp	r0, #10
 800ec18:	d10a      	bne.n	800ec30 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800ec1a:	45c1      	cmp	r9, r8
 800ec1c:	bf38      	it	cc
 800ec1e:	46c1      	movcc	r9, r8
 800ec20:	f04f 0800 	mov.w	r8, #0
 800ec24:	2c00      	cmp	r4, #0
 800ec26:	d1e5      	bne.n	800ebf4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ec28:	4648      	mov	r0, r9
 800ec2a:	b01d      	add	sp, #116	@ 0x74
 800ec2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec30:	9a02      	ldr	r2, [sp, #8]
 800ec32:	2a00      	cmp	r2, #0
 800ec34:	d0de      	beq.n	800ebf4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ec36:	7b57      	ldrb	r7, [r2, #13]
 800ec38:	4629      	mov	r1, r5
 800ec3a:	6833      	ldr	r3, [r6, #0]
 800ec3c:	007f      	lsls	r7, r7, #1
 800ec3e:	8894      	ldrh	r4, [r2, #4]
 800ec40:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ec42:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 800ec46:	7a97      	ldrb	r7, [r2, #10]
 800ec48:	4307      	orrs	r7, r0
 800ec4a:	4630      	mov	r0, r6
 800ec4c:	4798      	blx	r3
 800ec4e:	4438      	add	r0, r7
 800ec50:	4480      	add	r8, r0
 800ec52:	fa1f f888 	uxth.w	r8, r8
 800ec56:	e7e5      	b.n	800ec24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800ec58 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ec58:	b508      	push	{r3, lr}
 800ec5a:	6803      	ldr	r3, [r0, #0]
 800ec5c:	68db      	ldr	r3, [r3, #12]
 800ec5e:	4798      	blx	r3
 800ec60:	b128      	cbz	r0, 800ec6e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ec62:	7b43      	ldrb	r3, [r0, #13]
 800ec64:	7a80      	ldrb	r0, [r0, #10]
 800ec66:	005b      	lsls	r3, r3, #1
 800ec68:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ec6c:	4318      	orrs	r0, r3
 800ec6e:	bd08      	pop	{r3, pc}

0800ec70 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800ec70:	b40e      	push	{r1, r2, r3}
 800ec72:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ec74:	b09e      	sub	sp, #120	@ 0x78
 800ec76:	4605      	mov	r5, r0
 800ec78:	ab23      	add	r3, sp, #140	@ 0x8c
 800ec7a:	a805      	add	r0, sp, #20
 800ec7c:	f853 4b04 	ldr.w	r4, [r3], #4
 800ec80:	9303      	str	r3, [sp, #12]
 800ec82:	f000 fd1b 	bl	800f6bc <_ZN8touchgfx12TextProviderC1Ev>
 800ec86:	682b      	ldr	r3, [r5, #0]
 800ec88:	4628      	mov	r0, r5
 800ec8a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ec8c:	4798      	blx	r3
 800ec8e:	682b      	ldr	r3, [r5, #0]
 800ec90:	4606      	mov	r6, r0
 800ec92:	4628      	mov	r0, r5
 800ec94:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ec96:	4798      	blx	r3
 800ec98:	4633      	mov	r3, r6
 800ec9a:	4621      	mov	r1, r4
 800ec9c:	ae1e      	add	r6, sp, #120	@ 0x78
 800ec9e:	2400      	movs	r4, #0
 800eca0:	9000      	str	r0, [sp, #0]
 800eca2:	9a03      	ldr	r2, [sp, #12]
 800eca4:	a805      	add	r0, sp, #20
 800eca6:	f000 fd64 	bl	800f772 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ecaa:	f846 4d68 	str.w	r4, [r6, #-104]!
 800ecae:	462a      	mov	r2, r5
 800ecb0:	4633      	mov	r3, r6
 800ecb2:	4621      	mov	r1, r4
 800ecb4:	a805      	add	r0, sp, #20
 800ecb6:	f001 f861 	bl	800fd7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ecba:	b300      	cbz	r0, 800ecfe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 800ecbc:	280a      	cmp	r0, #10
 800ecbe:	d01a      	beq.n	800ecf6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 800ecc0:	9f04      	ldr	r7, [sp, #16]
 800ecc2:	b1c7      	cbz	r7, 800ecf6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 800ecc4:	7b78      	ldrb	r0, [r7, #13]
 800ecc6:	7a3b      	ldrb	r3, [r7, #8]
 800ecc8:	00c1      	lsls	r1, r0, #3
 800ecca:	88ea      	ldrh	r2, [r5, #6]
 800eccc:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800ecd0:	4319      	orrs	r1, r3
 800ecd2:	0643      	lsls	r3, r0, #25
 800ecd4:	ea4f 1000 	mov.w	r0, r0, lsl #4
 800ecd8:	bf48      	it	mi
 800ecda:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 800ecde:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800ece2:	bf48      	it	mi
 800ece4:	b219      	sxthmi	r1, r3
 800ece6:	79fb      	ldrb	r3, [r7, #7]
 800ece8:	4303      	orrs	r3, r0
 800ecea:	4413      	add	r3, r2
 800ecec:	1a5b      	subs	r3, r3, r1
 800ecee:	b21b      	sxth	r3, r3
 800ecf0:	429c      	cmp	r4, r3
 800ecf2:	bfb8      	it	lt
 800ecf4:	461c      	movlt	r4, r3
 800ecf6:	4633      	mov	r3, r6
 800ecf8:	462a      	mov	r2, r5
 800ecfa:	2100      	movs	r1, #0
 800ecfc:	e7da      	b.n	800ecb4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800ecfe:	b2a0      	uxth	r0, r4
 800ed00:	b01e      	add	sp, #120	@ 0x78
 800ed02:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800ed06:	b003      	add	sp, #12
 800ed08:	4770      	bx	lr

0800ed0a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800ed0a:	7a43      	ldrb	r3, [r0, #9]
 800ed0c:	8880      	ldrh	r0, [r0, #4]
 800ed0e:	4418      	add	r0, r3
 800ed10:	b280      	uxth	r0, r0
 800ed12:	4770      	bx	lr

0800ed14 <_ZNK8touchgfx4Font13getFontHeightEv>:
 800ed14:	6803      	ldr	r3, [r0, #0]
 800ed16:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ed18:	4718      	bx	r3

0800ed1a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800ed1a:	b40e      	push	{r1, r2, r3}
 800ed1c:	b570      	push	{r4, r5, r6, lr}
 800ed1e:	b09d      	sub	sp, #116	@ 0x74
 800ed20:	4604      	mov	r4, r0
 800ed22:	ab21      	add	r3, sp, #132	@ 0x84
 800ed24:	a803      	add	r0, sp, #12
 800ed26:	f853 5b04 	ldr.w	r5, [r3], #4
 800ed2a:	9302      	str	r3, [sp, #8]
 800ed2c:	f000 fcc6 	bl	800f6bc <_ZN8touchgfx12TextProviderC1Ev>
 800ed30:	6823      	ldr	r3, [r4, #0]
 800ed32:	4620      	mov	r0, r4
 800ed34:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ed36:	4798      	blx	r3
 800ed38:	6823      	ldr	r3, [r4, #0]
 800ed3a:	4606      	mov	r6, r0
 800ed3c:	4620      	mov	r0, r4
 800ed3e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ed40:	2401      	movs	r4, #1
 800ed42:	4798      	blx	r3
 800ed44:	4633      	mov	r3, r6
 800ed46:	9000      	str	r0, [sp, #0]
 800ed48:	4629      	mov	r1, r5
 800ed4a:	9a02      	ldr	r2, [sp, #8]
 800ed4c:	a803      	add	r0, sp, #12
 800ed4e:	f000 fd10 	bl	800f772 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ed52:	a803      	add	r0, sp, #12
 800ed54:	f001 f8de 	bl	800ff14 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ed58:	b2a3      	uxth	r3, r4
 800ed5a:	b138      	cbz	r0, 800ed6c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 800ed5c:	280a      	cmp	r0, #10
 800ed5e:	a803      	add	r0, sp, #12
 800ed60:	bf04      	itt	eq
 800ed62:	3301      	addeq	r3, #1
 800ed64:	b21c      	sxtheq	r4, r3
 800ed66:	f001 f8d5 	bl	800ff14 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ed6a:	e7f5      	b.n	800ed58 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800ed6c:	4618      	mov	r0, r3
 800ed6e:	b01d      	add	sp, #116	@ 0x74
 800ed70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ed74:	b003      	add	sp, #12
 800ed76:	4770      	bx	lr

0800ed78 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800ed78:	b40e      	push	{r1, r2, r3}
 800ed7a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ed7c:	b09e      	sub	sp, #120	@ 0x78
 800ed7e:	4604      	mov	r4, r0
 800ed80:	ab23      	add	r3, sp, #140	@ 0x8c
 800ed82:	a805      	add	r0, sp, #20
 800ed84:	f853 5b04 	ldr.w	r5, [r3], #4
 800ed88:	9303      	str	r3, [sp, #12]
 800ed8a:	f000 fc97 	bl	800f6bc <_ZN8touchgfx12TextProviderC1Ev>
 800ed8e:	6823      	ldr	r3, [r4, #0]
 800ed90:	4620      	mov	r0, r4
 800ed92:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ed94:	4798      	blx	r3
 800ed96:	6823      	ldr	r3, [r4, #0]
 800ed98:	4606      	mov	r6, r0
 800ed9a:	4620      	mov	r0, r4
 800ed9c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ed9e:	4798      	blx	r3
 800eda0:	4633      	mov	r3, r6
 800eda2:	4629      	mov	r1, r5
 800eda4:	9000      	str	r0, [sp, #0]
 800eda6:	9a03      	ldr	r2, [sp, #12]
 800eda8:	a805      	add	r0, sp, #20
 800edaa:	f000 fce2 	bl	800f772 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800edae:	ad1e      	add	r5, sp, #120	@ 0x78
 800edb0:	2100      	movs	r1, #0
 800edb2:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 800edb6:	4622      	mov	r2, r4
 800edb8:	a805      	add	r0, sp, #20
 800edba:	f845 1d68 	str.w	r1, [r5, #-104]!
 800edbe:	462b      	mov	r3, r5
 800edc0:	f000 ffdc 	bl	800fd7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800edc4:	b1d8      	cbz	r0, 800edfe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800edc6:	280a      	cmp	r0, #10
 800edc8:	d012      	beq.n	800edf0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800edca:	9804      	ldr	r0, [sp, #16]
 800edcc:	b180      	cbz	r0, 800edf0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800edce:	7b47      	ldrb	r7, [r0, #13]
 800edd0:	88e2      	ldrh	r2, [r4, #6]
 800edd2:	00fb      	lsls	r3, r7, #3
 800edd4:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800edd8:	7a03      	ldrb	r3, [r0, #8]
 800edda:	430b      	orrs	r3, r1
 800eddc:	0679      	lsls	r1, r7, #25
 800edde:	bf44      	itt	mi
 800ede0:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800ede4:	b21b      	sxthmi	r3, r3
 800ede6:	1ad3      	subs	r3, r2, r3
 800ede8:	b21b      	sxth	r3, r3
 800edea:	429e      	cmp	r6, r3
 800edec:	bfa8      	it	ge
 800edee:	461e      	movge	r6, r3
 800edf0:	462b      	mov	r3, r5
 800edf2:	4622      	mov	r2, r4
 800edf4:	2100      	movs	r1, #0
 800edf6:	a805      	add	r0, sp, #20
 800edf8:	f000 ffc0 	bl	800fd7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800edfc:	e7e2      	b.n	800edc4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800edfe:	4630      	mov	r0, r6
 800ee00:	b01e      	add	sp, #120	@ 0x78
 800ee02:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800ee06:	b003      	add	sp, #12
 800ee08:	4770      	bx	lr

0800ee0a <_ZNK8touchgfx8Drawable10invalidateEv>:
 800ee0a:	b513      	push	{r0, r1, r4, lr}
 800ee0c:	6803      	ldr	r3, [r0, #0]
 800ee0e:	2400      	movs	r4, #0
 800ee10:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ee14:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ee18:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ee1c:	4669      	mov	r1, sp
 800ee1e:	691b      	ldr	r3, [r3, #16]
 800ee20:	9400      	str	r4, [sp, #0]
 800ee22:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ee26:	4798      	blx	r3
 800ee28:	b002      	add	sp, #8
 800ee2a:	bd10      	pop	{r4, pc}

0800ee2c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800ee2c:	b538      	push	{r3, r4, r5, lr}
 800ee2e:	680b      	ldr	r3, [r1, #0]
 800ee30:	460c      	mov	r4, r1
 800ee32:	4605      	mov	r5, r0
 800ee34:	68db      	ldr	r3, [r3, #12]
 800ee36:	4798      	blx	r3
 800ee38:	6823      	ldr	r3, [r4, #0]
 800ee3a:	4620      	mov	r0, r4
 800ee3c:	4629      	mov	r1, r5
 800ee3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ee40:	4798      	blx	r3
 800ee42:	4628      	mov	r0, r5
 800ee44:	bd38      	pop	{r3, r4, r5, pc}

0800ee46 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800ee46:	b410      	push	{r4}
 800ee48:	880a      	ldrh	r2, [r1, #0]
 800ee4a:	8884      	ldrh	r4, [r0, #4]
 800ee4c:	4422      	add	r2, r4
 800ee4e:	800a      	strh	r2, [r1, #0]
 800ee50:	884a      	ldrh	r2, [r1, #2]
 800ee52:	88c4      	ldrh	r4, [r0, #6]
 800ee54:	4422      	add	r2, r4
 800ee56:	804a      	strh	r2, [r1, #2]
 800ee58:	6940      	ldr	r0, [r0, #20]
 800ee5a:	b120      	cbz	r0, 800ee66 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800ee5c:	6803      	ldr	r3, [r0, #0]
 800ee5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ee62:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ee64:	4718      	bx	r3
 800ee66:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ee6a:	4770      	bx	lr

0800ee6c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800ee6c:	b570      	push	{r4, r5, r6, lr}
 800ee6e:	8882      	ldrh	r2, [r0, #4]
 800ee70:	460c      	mov	r4, r1
 800ee72:	880b      	ldrh	r3, [r1, #0]
 800ee74:	4605      	mov	r5, r0
 800ee76:	4413      	add	r3, r2
 800ee78:	800b      	strh	r3, [r1, #0]
 800ee7a:	884b      	ldrh	r3, [r1, #2]
 800ee7c:	88c2      	ldrh	r2, [r0, #6]
 800ee7e:	4413      	add	r3, r2
 800ee80:	804b      	strh	r3, [r1, #2]
 800ee82:	1d01      	adds	r1, r0, #4
 800ee84:	4620      	mov	r0, r4
 800ee86:	f7fb fbbb 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 800ee8a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800ee8e:	2b00      	cmp	r3, #0
 800ee90:	dd0b      	ble.n	800eeaa <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ee92:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800ee96:	2b00      	cmp	r3, #0
 800ee98:	dd07      	ble.n	800eeaa <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ee9a:	6968      	ldr	r0, [r5, #20]
 800ee9c:	b128      	cbz	r0, 800eeaa <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ee9e:	6803      	ldr	r3, [r0, #0]
 800eea0:	4621      	mov	r1, r4
 800eea2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800eea4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eea8:	4718      	bx	r3
 800eeaa:	bd70      	pop	{r4, r5, r6, pc}

0800eeac <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800eeac:	b570      	push	{r4, r5, r6, lr}
 800eeae:	8882      	ldrh	r2, [r0, #4]
 800eeb0:	460c      	mov	r4, r1
 800eeb2:	880b      	ldrh	r3, [r1, #0]
 800eeb4:	4605      	mov	r5, r0
 800eeb6:	4413      	add	r3, r2
 800eeb8:	800b      	strh	r3, [r1, #0]
 800eeba:	884b      	ldrh	r3, [r1, #2]
 800eebc:	88c2      	ldrh	r2, [r0, #6]
 800eebe:	4413      	add	r3, r2
 800eec0:	804b      	strh	r3, [r1, #2]
 800eec2:	1d01      	adds	r1, r0, #4
 800eec4:	4620      	mov	r0, r4
 800eec6:	f7fb fb9b 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 800eeca:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800eece:	2b00      	cmp	r3, #0
 800eed0:	dd19      	ble.n	800ef06 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800eed2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800eed6:	2b00      	cmp	r3, #0
 800eed8:	dd15      	ble.n	800ef06 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800eeda:	6968      	ldr	r0, [r5, #20]
 800eedc:	b128      	cbz	r0, 800eeea <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800eede:	6803      	ldr	r3, [r0, #0]
 800eee0:	4621      	mov	r1, r4
 800eee2:	691b      	ldr	r3, [r3, #16]
 800eee4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eee8:	4718      	bx	r3
 800eeea:	4b07      	ldr	r3, [pc, #28]	@ (800ef08 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800eeec:	681b      	ldr	r3, [r3, #0]
 800eeee:	3304      	adds	r3, #4
 800eef0:	429d      	cmp	r5, r3
 800eef2:	d108      	bne.n	800ef06 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800eef4:	f7fe ff10 	bl	800dd18 <_ZN8touchgfx11Application11getInstanceEv>
 800eef8:	6803      	ldr	r3, [r0, #0]
 800eefa:	6821      	ldr	r1, [r4, #0]
 800eefc:	6862      	ldr	r2, [r4, #4]
 800eefe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ef00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ef04:	4718      	bx	r3
 800ef06:	bd70      	pop	{r4, r5, r6, pc}
 800ef08:	200150e8 	.word	0x200150e8

0800ef0c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800ef0c:	b570      	push	{r4, r5, r6, lr}
 800ef0e:	4604      	mov	r4, r0
 800ef10:	4616      	mov	r6, r2
 800ef12:	460d      	mov	r5, r1
 800ef14:	b901      	cbnz	r1, 800ef18 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800ef16:	b192      	cbz	r2, 800ef3e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800ef18:	6823      	ldr	r3, [r4, #0]
 800ef1a:	4620      	mov	r0, r4
 800ef1c:	699b      	ldr	r3, [r3, #24]
 800ef1e:	4798      	blx	r3
 800ef20:	88e2      	ldrh	r2, [r4, #6]
 800ef22:	88a1      	ldrh	r1, [r4, #4]
 800ef24:	4620      	mov	r0, r4
 800ef26:	4432      	add	r2, r6
 800ef28:	4429      	add	r1, r5
 800ef2a:	b212      	sxth	r2, r2
 800ef2c:	b209      	sxth	r1, r1
 800ef2e:	f7f3 f94a 	bl	80021c6 <_ZN8touchgfx8Drawable5setXYEss>
 800ef32:	6823      	ldr	r3, [r4, #0]
 800ef34:	4620      	mov	r0, r4
 800ef36:	699b      	ldr	r3, [r3, #24]
 800ef38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ef3c:	4718      	bx	r3
 800ef3e:	bd70      	pop	{r4, r5, r6, pc}

0800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800ef40:	b510      	push	{r4, lr}
 800ef42:	2300      	movs	r3, #0
 800ef44:	4604      	mov	r4, r0
 800ef46:	4608      	mov	r0, r1
 800ef48:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800ef4c:	8023      	strh	r3, [r4, #0]
 800ef4e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ef52:	8063      	strh	r3, [r4, #2]
 800ef54:	6803      	ldr	r3, [r0, #0]
 800ef56:	80a1      	strh	r1, [r4, #4]
 800ef58:	4621      	mov	r1, r4
 800ef5a:	80e2      	strh	r2, [r4, #6]
 800ef5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ef5e:	4798      	blx	r3
 800ef60:	4620      	mov	r0, r4
 800ef62:	bd10      	pop	{r4, pc}

0800ef64 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800ef64:	b530      	push	{r4, r5, lr}
 800ef66:	8083      	strh	r3, [r0, #4]
 800ef68:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800ef6c:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800ef70:	80c3      	strh	r3, [r0, #6]
 800ef72:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800ef76:	6141      	str	r1, [r0, #20]
 800ef78:	7203      	strb	r3, [r0, #8]
 800ef7a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ef7e:	8302      	strh	r2, [r0, #24]
 800ef80:	7243      	strb	r3, [r0, #9]
 800ef82:	7a83      	ldrb	r3, [r0, #10]
 800ef84:	f365 0306 	bfi	r3, r5, #0, #7
 800ef88:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800ef8c:	f365 13c7 	bfi	r3, r5, #7, #1
 800ef90:	7283      	strb	r3, [r0, #10]
 800ef92:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800ef96:	72c3      	strb	r3, [r0, #11]
 800ef98:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 800ef9c:	7303      	strb	r3, [r0, #12]
 800ef9e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 800efa2:	81c3      	strh	r3, [r0, #14]
 800efa4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800efa8:	8203      	strh	r3, [r0, #16]
 800efaa:	4b01      	ldr	r3, [pc, #4]	@ (800efb0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800efac:	6003      	str	r3, [r0, #0]
 800efae:	bd30      	pop	{r4, r5, pc}
 800efb0:	0802120c 	.word	0x0802120c

0800efb4 <_ZNK8touchgfx9ConstFont4findEt>:
 800efb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800efb6:	6944      	ldr	r4, [r0, #20]
 800efb8:	b3bc      	cbz	r4, 800f02a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800efba:	88a3      	ldrh	r3, [r4, #4]
 800efbc:	8b02      	ldrh	r2, [r0, #24]
 800efbe:	1acb      	subs	r3, r1, r3
 800efc0:	f102 32ff 	add.w	r2, r2, #4294967295
 800efc4:	d431      	bmi.n	800f02a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800efc6:	4293      	cmp	r3, r2
 800efc8:	dd0c      	ble.n	800efe4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800efca:	230e      	movs	r3, #14
 800efcc:	fb03 4302 	mla	r3, r3, r2, r4
 800efd0:	889b      	ldrh	r3, [r3, #4]
 800efd2:	1a5b      	subs	r3, r3, r1
 800efd4:	1ad3      	subs	r3, r2, r3
 800efd6:	429a      	cmp	r2, r3
 800efd8:	db27      	blt.n	800f02a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800efda:	2b00      	cmp	r3, #0
 800efdc:	bfbc      	itt	lt
 800efde:	2302      	movlt	r3, #2
 800efe0:	fb92 f3f3 	sdivlt	r3, r2, r3
 800efe4:	2500      	movs	r5, #0
 800efe6:	260e      	movs	r6, #14
 800efe8:	4295      	cmp	r5, r2
 800efea:	dc1e      	bgt.n	800f02a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800efec:	fb06 4003 	mla	r0, r6, r3, r4
 800eff0:	8887      	ldrh	r7, [r0, #4]
 800eff2:	42b9      	cmp	r1, r7
 800eff4:	d01a      	beq.n	800f02c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800eff6:	d20d      	bcs.n	800f014 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800eff8:	1e5a      	subs	r2, r3, #1
 800effa:	4295      	cmp	r5, r2
 800effc:	dc15      	bgt.n	800f02a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800effe:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800f002:	1a5b      	subs	r3, r3, r1
 800f004:	1ad3      	subs	r3, r2, r3
 800f006:	429a      	cmp	r2, r3
 800f008:	db0f      	blt.n	800f02a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f00a:	429d      	cmp	r5, r3
 800f00c:	ddec      	ble.n	800efe8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f00e:	1953      	adds	r3, r2, r5
 800f010:	105b      	asrs	r3, r3, #1
 800f012:	e7e9      	b.n	800efe8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f014:	1c5d      	adds	r5, r3, #1
 800f016:	42aa      	cmp	r2, r5
 800f018:	db07      	blt.n	800f02a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f01a:	8a43      	ldrh	r3, [r0, #18]
 800f01c:	1acb      	subs	r3, r1, r3
 800f01e:	442b      	add	r3, r5
 800f020:	429d      	cmp	r5, r3
 800f022:	dc02      	bgt.n	800f02a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f024:	429a      	cmp	r2, r3
 800f026:	dadf      	bge.n	800efe8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f028:	e7f1      	b.n	800f00e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800f02a:	2000      	movs	r0, #0
 800f02c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f02e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800f02e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f030:	4604      	mov	r4, r0
 800f032:	4617      	mov	r7, r2
 800f034:	461e      	mov	r6, r3
 800f036:	b911      	cbnz	r1, 800f03e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800f038:	2500      	movs	r5, #0
 800f03a:	4628      	mov	r0, r5
 800f03c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f03e:	290a      	cmp	r1, #10
 800f040:	d0fa      	beq.n	800f038 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f042:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800f046:	4291      	cmp	r1, r2
 800f048:	d0f6      	beq.n	800f038 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f04a:	f242 020b 	movw	r2, #8203	@ 0x200b
 800f04e:	4291      	cmp	r1, r2
 800f050:	d0f2      	beq.n	800f038 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f052:	f7ff ffaf 	bl	800efb4 <_ZNK8touchgfx9ConstFont4findEt>
 800f056:	4605      	mov	r5, r0
 800f058:	b950      	cbnz	r0, 800f070 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800f05a:	6823      	ldr	r3, [r4, #0]
 800f05c:	4620      	mov	r0, r4
 800f05e:	691b      	ldr	r3, [r3, #16]
 800f060:	4798      	blx	r3
 800f062:	4601      	mov	r1, r0
 800f064:	4620      	mov	r0, r4
 800f066:	f7ff ffa5 	bl	800efb4 <_ZNK8touchgfx9ConstFont4findEt>
 800f06a:	4605      	mov	r5, r0
 800f06c:	2800      	cmp	r0, #0
 800f06e:	d0e3      	beq.n	800f038 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f070:	6823      	ldr	r3, [r4, #0]
 800f072:	4629      	mov	r1, r5
 800f074:	4620      	mov	r0, r4
 800f076:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f078:	4798      	blx	r3
 800f07a:	6038      	str	r0, [r7, #0]
 800f07c:	6823      	ldr	r3, [r4, #0]
 800f07e:	4620      	mov	r0, r4
 800f080:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f082:	4798      	blx	r3
 800f084:	7030      	strb	r0, [r6, #0]
 800f086:	e7d8      	b.n	800f03a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800f088 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800f088:	2000      	movs	r0, #0
 800f08a:	4770      	bx	lr

0800f08c <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800f08c:	2001      	movs	r0, #1
 800f08e:	4770      	bx	lr

0800f090 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800f090:	2002      	movs	r0, #2
 800f092:	4770      	bx	lr

0800f094 <_ZN8touchgfx6ScreenD1Ev>:
 800f094:	4770      	bx	lr

0800f096 <_ZN8touchgfx12GestureEventD1Ev>:
 800f096:	4770      	bx	lr

0800f098 <_ZN8touchgfx9DragEventD1Ev>:
 800f098:	4770      	bx	lr

0800f09a <_ZN8touchgfx10ClickEventD1Ev>:
 800f09a:	4770      	bx	lr

0800f09c <_ZN8touchgfx10ClickEventD0Ev>:
 800f09c:	b510      	push	{r4, lr}
 800f09e:	4604      	mov	r4, r0
 800f0a0:	210c      	movs	r1, #12
 800f0a2:	f00f fb19 	bl	801e6d8 <_ZdlPvj>
 800f0a6:	4620      	mov	r0, r4
 800f0a8:	bd10      	pop	{r4, pc}

0800f0aa <_ZN8touchgfx9DragEventD0Ev>:
 800f0aa:	b510      	push	{r4, lr}
 800f0ac:	4604      	mov	r4, r0
 800f0ae:	2110      	movs	r1, #16
 800f0b0:	f00f fb12 	bl	801e6d8 <_ZdlPvj>
 800f0b4:	4620      	mov	r0, r4
 800f0b6:	bd10      	pop	{r4, pc}

0800f0b8 <_ZN8touchgfx12GestureEventD0Ev>:
 800f0b8:	b510      	push	{r4, lr}
 800f0ba:	4604      	mov	r4, r0
 800f0bc:	210c      	movs	r1, #12
 800f0be:	f00f fb0b 	bl	801e6d8 <_ZdlPvj>
 800f0c2:	4620      	mov	r0, r4
 800f0c4:	bd10      	pop	{r4, pc}

0800f0c6 <_ZN8touchgfx6ScreenD0Ev>:
 800f0c6:	b510      	push	{r4, lr}
 800f0c8:	4604      	mov	r4, r0
 800f0ca:	213c      	movs	r1, #60	@ 0x3c
 800f0cc:	f00f fb04 	bl	801e6d8 <_ZdlPvj>
 800f0d0:	4620      	mov	r0, r4
 800f0d2:	bd10      	pop	{r4, pc}

0800f0d4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800f0d4:	b530      	push	{r4, r5, lr}
 800f0d6:	460d      	mov	r5, r1
 800f0d8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800f0da:	b087      	sub	sp, #28
 800f0dc:	4604      	mov	r4, r0
 800f0de:	b301      	cbz	r1, 800f122 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800f0e0:	a801      	add	r0, sp, #4
 800f0e2:	f7ff ff2d 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f0e6:	892a      	ldrh	r2, [r5, #8]
 800f0e8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f0ec:	7928      	ldrb	r0, [r5, #4]
 800f0ee:	1ad2      	subs	r2, r2, r3
 800f0f0:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800f0f2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f0f6:	441a      	add	r2, r3
 800f0f8:	896b      	ldrh	r3, [r5, #10]
 800f0fa:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800f0fe:	f88d 0010 	strb.w	r0, [sp, #16]
 800f102:	1b5b      	subs	r3, r3, r5
 800f104:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 800f106:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800f108:	442b      	add	r3, r5
 800f10a:	4d07      	ldr	r5, [pc, #28]	@ (800f128 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800f10c:	f8ad 1012 	strh.w	r1, [sp, #18]
 800f110:	a903      	add	r1, sp, #12
 800f112:	9503      	str	r5, [sp, #12]
 800f114:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f118:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f11c:	6803      	ldr	r3, [r0, #0]
 800f11e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f120:	4798      	blx	r3
 800f122:	b007      	add	sp, #28
 800f124:	bd30      	pop	{r4, r5, pc}
 800f126:	bf00      	nop
 800f128:	0802129c 	.word	0x0802129c

0800f12c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800f12c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f130:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800f132:	b08a      	sub	sp, #40	@ 0x28
 800f134:	4604      	mov	r4, r0
 800f136:	460d      	mov	r5, r1
 800f138:	b113      	cbz	r3, 800f140 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800f13a:	790b      	ldrb	r3, [r1, #4]
 800f13c:	2b00      	cmp	r3, #0
 800f13e:	d044      	beq.n	800f1ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f140:	f104 0804 	add.w	r8, r4, #4
 800f144:	a803      	add	r0, sp, #12
 800f146:	4641      	mov	r1, r8
 800f148:	f7ff fefa 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f14c:	792b      	ldrb	r3, [r5, #4]
 800f14e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800f152:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800f156:	b983      	cbnz	r3, 800f17a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800f158:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 800f15c:	892a      	ldrh	r2, [r5, #8]
 800f15e:	88e9      	ldrh	r1, [r5, #6]
 800f160:	4640      	mov	r0, r8
 800f162:	1b92      	subs	r2, r2, r6
 800f164:	9301      	str	r3, [sp, #4]
 800f166:	1bc9      	subs	r1, r1, r7
 800f168:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 800f16c:	b212      	sxth	r2, r2
 800f16e:	9300      	str	r3, [sp, #0]
 800f170:	b209      	sxth	r1, r1
 800f172:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 800f176:	f7fb f961 	bl	800a43c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800f17a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800f17c:	b329      	cbz	r1, 800f1ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f17e:	a805      	add	r0, sp, #20
 800f180:	f7ff fede 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f184:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800f188:	792b      	ldrb	r3, [r5, #4]
 800f18a:	a907      	add	r1, sp, #28
 800f18c:	1abf      	subs	r7, r7, r2
 800f18e:	88ea      	ldrh	r2, [r5, #6]
 800f190:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800f192:	4417      	add	r7, r2
 800f194:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 800f196:	f88d 3020 	strb.w	r3, [sp, #32]
 800f19a:	4417      	add	r7, r2
 800f19c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800f1a0:	1ab6      	subs	r6, r6, r2
 800f1a2:	892a      	ldrh	r2, [r5, #8]
 800f1a4:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800f1a8:	4416      	add	r6, r2
 800f1aa:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800f1ac:	4416      	add	r6, r2
 800f1ae:	4a08      	ldr	r2, [pc, #32]	@ (800f1d0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800f1b0:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800f1b4:	2600      	movs	r6, #0
 800f1b6:	9207      	str	r2, [sp, #28]
 800f1b8:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 800f1bc:	6803      	ldr	r3, [r0, #0]
 800f1be:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f1c0:	4798      	blx	r3
 800f1c2:	792b      	ldrb	r3, [r5, #4]
 800f1c4:	b10b      	cbz	r3, 800f1ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f1c6:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800f1ca:	b00a      	add	sp, #40	@ 0x28
 800f1cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f1d0:	08021274 	.word	0x08021274

0800f1d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800f1d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f1d8:	460c      	mov	r4, r1
 800f1da:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800f1dc:	b088      	sub	sp, #32
 800f1de:	4605      	mov	r5, r0
 800f1e0:	2900      	cmp	r1, #0
 800f1e2:	d06d      	beq.n	800f2c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800f1e4:	4668      	mov	r0, sp
 800f1e6:	f7ff feab 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f1ea:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 800f1ec:	88e3      	ldrh	r3, [r4, #6]
 800f1ee:	f9bd 8000 	ldrsh.w	r8, [sp]
 800f1f2:	440b      	add	r3, r1
 800f1f4:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800f1f8:	b21b      	sxth	r3, r3
 800f1fa:	4543      	cmp	r3, r8
 800f1fc:	db31      	blt.n	800f262 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f1fe:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800f202:	44c4      	add	ip, r8
 800f204:	fa0f fc8c 	sxth.w	ip, ip
 800f208:	4563      	cmp	r3, ip
 800f20a:	da2a      	bge.n	800f262 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f20c:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 800f20e:	8926      	ldrh	r6, [r4, #8]
 800f210:	4416      	add	r6, r2
 800f212:	b236      	sxth	r6, r6
 800f214:	42be      	cmp	r6, r7
 800f216:	db24      	blt.n	800f262 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f218:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800f21c:	4438      	add	r0, r7
 800f21e:	b200      	sxth	r0, r0
 800f220:	4286      	cmp	r6, r0
 800f222:	da1e      	bge.n	800f262 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f224:	8963      	ldrh	r3, [r4, #10]
 800f226:	4419      	add	r1, r3
 800f228:	b209      	sxth	r1, r1
 800f22a:	4541      	cmp	r1, r8
 800f22c:	db08      	blt.n	800f240 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f22e:	4561      	cmp	r1, ip
 800f230:	da06      	bge.n	800f240 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f232:	89a3      	ldrh	r3, [r4, #12]
 800f234:	441a      	add	r2, r3
 800f236:	b212      	sxth	r2, r2
 800f238:	42ba      	cmp	r2, r7
 800f23a:	db01      	blt.n	800f240 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f23c:	4282      	cmp	r2, r0
 800f23e:	db10      	blt.n	800f262 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f240:	4b21      	ldr	r3, [pc, #132]	@ (800f2c8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800f242:	a904      	add	r1, sp, #16
 800f244:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800f246:	9304      	str	r3, [sp, #16]
 800f248:	2302      	movs	r3, #2
 800f24a:	f88d 3014 	strb.w	r3, [sp, #20]
 800f24e:	2300      	movs	r3, #0
 800f250:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f254:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f258:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f25c:	6803      	ldr	r3, [r0, #0]
 800f25e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f260:	4798      	blx	r3
 800f262:	1d29      	adds	r1, r5, #4
 800f264:	a802      	add	r0, sp, #8
 800f266:	f7ff fe6b 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f26a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f26e:	88e0      	ldrh	r0, [r4, #6]
 800f270:	eba3 0808 	sub.w	r8, r3, r8
 800f274:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f278:	7921      	ldrb	r1, [r4, #4]
 800f27a:	fa1f f888 	uxth.w	r8, r8
 800f27e:	1bdf      	subs	r7, r3, r7
 800f280:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 800f284:	b2bb      	uxth	r3, r7
 800f286:	4440      	add	r0, r8
 800f288:	8922      	ldrh	r2, [r4, #8]
 800f28a:	8967      	ldrh	r7, [r4, #10]
 800f28c:	4460      	add	r0, ip
 800f28e:	89a4      	ldrh	r4, [r4, #12]
 800f290:	441a      	add	r2, r3
 800f292:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 800f294:	44b8      	add	r8, r7
 800f296:	4423      	add	r3, r4
 800f298:	f8ad 0016 	strh.w	r0, [sp, #22]
 800f29c:	4432      	add	r2, r6
 800f29e:	44e0      	add	r8, ip
 800f2a0:	4433      	add	r3, r6
 800f2a2:	4c0a      	ldr	r4, [pc, #40]	@ (800f2cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800f2a4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800f2a6:	f88d 1014 	strb.w	r1, [sp, #20]
 800f2aa:	a904      	add	r1, sp, #16
 800f2ac:	9404      	str	r4, [sp, #16]
 800f2ae:	f8ad 2018 	strh.w	r2, [sp, #24]
 800f2b2:	f8ad 801a 	strh.w	r8, [sp, #26]
 800f2b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f2ba:	6803      	ldr	r3, [r0, #0]
 800f2bc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f2be:	4798      	blx	r3
 800f2c0:	b008      	add	sp, #32
 800f2c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f2c6:	bf00      	nop
 800f2c8:	08021274 	.word	0x08021274
 800f2cc:	08021288 	.word	0x08021288

0800f2d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800f2d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f2d2:	4604      	mov	r4, r0
 800f2d4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800f2d8:	3201      	adds	r2, #1
 800f2da:	d112      	bne.n	800f302 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800f2dc:	2500      	movs	r5, #0
 800f2de:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f2e2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f2e6:	6803      	ldr	r3, [r0, #0]
 800f2e8:	9500      	str	r5, [sp, #0]
 800f2ea:	466d      	mov	r5, sp
 800f2ec:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f2f0:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f2f4:	4629      	mov	r1, r5
 800f2f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f2f8:	4798      	blx	r3
 800f2fa:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f2fe:	e884 0003 	stmia.w	r4, {r0, r1}
 800f302:	4620      	mov	r0, r4
 800f304:	b003      	add	sp, #12
 800f306:	bd30      	pop	{r4, r5, pc}

0800f308 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800f308:	b513      	push	{r0, r1, r4, lr}
 800f30a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800f30e:	4604      	mov	r4, r0
 800f310:	3301      	adds	r3, #1
 800f312:	d109      	bne.n	800f328 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800f314:	4601      	mov	r1, r0
 800f316:	4668      	mov	r0, sp
 800f318:	f7ff fe12 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f31c:	f8bd 3000 	ldrh.w	r3, [sp]
 800f320:	8423      	strh	r3, [r4, #32]
 800f322:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f326:	8463      	strh	r3, [r4, #34]	@ 0x22
 800f328:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800f32c:	b002      	add	sp, #8
 800f32e:	bd10      	pop	{r4, pc}

0800f330 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800f330:	b513      	push	{r0, r1, r4, lr}
 800f332:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 800f336:	4604      	mov	r4, r0
 800f338:	3301      	adds	r3, #1
 800f33a:	d109      	bne.n	800f350 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800f33c:	4601      	mov	r1, r0
 800f33e:	4668      	mov	r0, sp
 800f340:	f7ff fdfe 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f344:	f8bd 3000 	ldrh.w	r3, [sp]
 800f348:	8423      	strh	r3, [r4, #32]
 800f34a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f34e:	8463      	strh	r3, [r4, #34]	@ 0x22
 800f350:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 800f354:	b002      	add	sp, #8
 800f356:	bd10      	pop	{r4, pc}

0800f358 <_ZN8touchgfx6ScreenC1Ev>:
 800f358:	b570      	push	{r4, r5, r6, lr}
 800f35a:	4b17      	ldr	r3, [pc, #92]	@ (800f3b8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800f35c:	4605      	mov	r5, r0
 800f35e:	4a17      	ldr	r2, [pc, #92]	@ (800f3bc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800f360:	2101      	movs	r1, #1
 800f362:	f845 3b04 	str.w	r3, [r5], #4
 800f366:	2300      	movs	r3, #0
 800f368:	6042      	str	r2, [r0, #4]
 800f36a:	4604      	mov	r4, r0
 800f36c:	8103      	strh	r3, [r0, #8]
 800f36e:	8143      	strh	r3, [r0, #10]
 800f370:	8183      	strh	r3, [r0, #12]
 800f372:	81c3      	strh	r3, [r0, #14]
 800f374:	8203      	strh	r3, [r0, #16]
 800f376:	8243      	strh	r3, [r0, #18]
 800f378:	8283      	strh	r3, [r0, #20]
 800f37a:	82c3      	strh	r3, [r0, #22]
 800f37c:	6203      	str	r3, [r0, #32]
 800f37e:	8483      	strh	r3, [r0, #36]	@ 0x24
 800f380:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800f382:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 800f386:	6343      	str	r3, [r0, #52]	@ 0x34
 800f388:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800f38c:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 800f390:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800f394:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 800f398:	4b09      	ldr	r3, [pc, #36]	@ (800f3c0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800f39a:	4628      	mov	r0, r5
 800f39c:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f3a0:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800f3a2:	4a08      	ldr	r2, [pc, #32]	@ (800f3c4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800f3a4:	f9b2 1000 	ldrsh.w	r1, [r2]
 800f3a8:	4798      	blx	r3
 800f3aa:	6863      	ldr	r3, [r4, #4]
 800f3ac:	4628      	mov	r0, r5
 800f3ae:	4631      	mov	r1, r6
 800f3b0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f3b2:	4798      	blx	r3
 800f3b4:	4620      	mov	r0, r4
 800f3b6:	bd70      	pop	{r4, r5, r6, pc}
 800f3b8:	080212b0 	.word	0x080212b0
 800f3bc:	08020eac 	.word	0x08020eac
 800f3c0:	200150a2 	.word	0x200150a2
 800f3c4:	200150a0 	.word	0x200150a0

0800f3c8 <_ZN8touchgfx6Screen4drawEv>:
 800f3c8:	4b09      	ldr	r3, [pc, #36]	@ (800f3f0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800f3ca:	b507      	push	{r0, r1, r2, lr}
 800f3cc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f3d0:	2100      	movs	r1, #0
 800f3d2:	4b08      	ldr	r3, [pc, #32]	@ (800f3f4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800f3d4:	9100      	str	r1, [sp, #0]
 800f3d6:	4669      	mov	r1, sp
 800f3d8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f3dc:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f3e0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f3e4:	6803      	ldr	r3, [r0, #0]
 800f3e6:	689b      	ldr	r3, [r3, #8]
 800f3e8:	4798      	blx	r3
 800f3ea:	b003      	add	sp, #12
 800f3ec:	f85d fb04 	ldr.w	pc, [sp], #4
 800f3f0:	200150a0 	.word	0x200150a0
 800f3f4:	200150a2 	.word	0x200150a2

0800f3f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800f3f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3fc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800f400:	b089      	sub	sp, #36	@ 0x24
 800f402:	4680      	mov	r8, r0
 800f404:	460c      	mov	r4, r1
 800f406:	2b00      	cmp	r3, #0
 800f408:	4615      	mov	r5, r2
 800f40a:	dd0e      	ble.n	800f42a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f40c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f410:	2b00      	cmp	r3, #0
 800f412:	dd0a      	ble.n	800f42a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f414:	4628      	mov	r0, r5
 800f416:	f7ff ff5b 	bl	800f2d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f41a:	4621      	mov	r1, r4
 800f41c:	f7fe fb9d 	bl	800db5a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f420:	69eb      	ldr	r3, [r5, #28]
 800f422:	b928      	cbnz	r0, 800f430 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800f424:	461d      	mov	r5, r3
 800f426:	2b00      	cmp	r3, #0
 800f428:	d1f4      	bne.n	800f414 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800f42a:	b009      	add	sp, #36	@ 0x24
 800f42c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f430:	ae04      	add	r6, sp, #16
 800f432:	2b00      	cmp	r3, #0
 800f434:	f000 80b5 	beq.w	800f5a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f438:	682b      	ldr	r3, [r5, #0]
 800f43a:	4629      	mov	r1, r5
 800f43c:	a802      	add	r0, sp, #8
 800f43e:	68db      	ldr	r3, [r3, #12]
 800f440:	4798      	blx	r3
 800f442:	4628      	mov	r0, r5
 800f444:	f7ff ff60 	bl	800f308 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f448:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800f44c:	4407      	add	r7, r0
 800f44e:	4628      	mov	r0, r5
 800f450:	f7ff ff6e 	bl	800f330 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f454:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f458:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f45c:	b23f      	sxth	r7, r7
 800f45e:	4418      	add	r0, r3
 800f460:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f464:	4621      	mov	r1, r4
 800f466:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f46a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f46e:	4630      	mov	r0, r6
 800f470:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f474:	f8ad 7010 	strh.w	r7, [sp, #16]
 800f478:	f7fb f8c2 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 800f47c:	4628      	mov	r0, r5
 800f47e:	f7ff ff27 	bl	800f2d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f482:	ab06      	add	r3, sp, #24
 800f484:	4602      	mov	r2, r0
 800f486:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f48a:	e883 0003 	stmia.w	r3, {r0, r1}
 800f48e:	4611      	mov	r1, r2
 800f490:	4618      	mov	r0, r3
 800f492:	f7fb f8b5 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 800f496:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f49a:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f49e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800f4a2:	4299      	cmp	r1, r3
 800f4a4:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800f4a8:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800f4ac:	d10b      	bne.n	800f4c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f4ae:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f4b2:	4552      	cmp	r2, sl
 800f4b4:	d107      	bne.n	800f4c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f4b6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f4ba:	455a      	cmp	r2, fp
 800f4bc:	d103      	bne.n	800f4c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f4be:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f4c2:	454a      	cmp	r2, r9
 800f4c4:	d06d      	beq.n	800f5a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f4c6:	f1bb 0f00 	cmp.w	fp, #0
 800f4ca:	dd65      	ble.n	800f598 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f4cc:	f1b9 0f00 	cmp.w	r9, #0
 800f4d0:	dd62      	ble.n	800f598 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f4d2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f4d6:	fa1f f08a 	uxth.w	r0, sl
 800f4da:	4552      	cmp	r2, sl
 800f4dc:	9000      	str	r0, [sp, #0]
 800f4de:	da12      	bge.n	800f506 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800f4e0:	9301      	str	r3, [sp, #4]
 800f4e2:	9b00      	ldr	r3, [sp, #0]
 800f4e4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f4e8:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f4ec:	1a9a      	subs	r2, r3, r2
 800f4ee:	f8ad 1010 	strh.w	r1, [sp, #16]
 800f4f2:	4631      	mov	r1, r6
 800f4f4:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f4f8:	4640      	mov	r0, r8
 800f4fa:	f8ad 2016 	strh.w	r2, [sp, #22]
 800f4fe:	69ea      	ldr	r2, [r5, #28]
 800f500:	f7ff ff7a 	bl	800f3f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f504:	9b01      	ldr	r3, [sp, #4]
 800f506:	f9b4 2000 	ldrsh.w	r2, [r4]
 800f50a:	b29f      	uxth	r7, r3
 800f50c:	429a      	cmp	r2, r3
 800f50e:	da0d      	bge.n	800f52c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800f510:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f514:	1aba      	subs	r2, r7, r2
 800f516:	f8ad a012 	strh.w	sl, [sp, #18]
 800f51a:	4631      	mov	r1, r6
 800f51c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f520:	4640      	mov	r0, r8
 800f522:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f526:	69ea      	ldr	r2, [r5, #28]
 800f528:	f7ff ff66 	bl	800f3f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f52c:	8822      	ldrh	r2, [r4, #0]
 800f52e:	445f      	add	r7, fp
 800f530:	88a3      	ldrh	r3, [r4, #4]
 800f532:	b2bf      	uxth	r7, r7
 800f534:	4413      	add	r3, r2
 800f536:	b23a      	sxth	r2, r7
 800f538:	b29b      	uxth	r3, r3
 800f53a:	b219      	sxth	r1, r3
 800f53c:	4291      	cmp	r1, r2
 800f53e:	dd0d      	ble.n	800f55c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800f540:	1bdb      	subs	r3, r3, r7
 800f542:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f546:	f8ad a012 	strh.w	sl, [sp, #18]
 800f54a:	4631      	mov	r1, r6
 800f54c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f550:	4640      	mov	r0, r8
 800f552:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f556:	69ea      	ldr	r2, [r5, #28]
 800f558:	f7ff ff4e 	bl	800f3f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f55c:	88e2      	ldrh	r2, [r4, #6]
 800f55e:	8863      	ldrh	r3, [r4, #2]
 800f560:	4413      	add	r3, r2
 800f562:	9a00      	ldr	r2, [sp, #0]
 800f564:	444a      	add	r2, r9
 800f566:	b29b      	uxth	r3, r3
 800f568:	fa1f f982 	uxth.w	r9, r2
 800f56c:	b219      	sxth	r1, r3
 800f56e:	fa0f f289 	sxth.w	r2, r9
 800f572:	428a      	cmp	r2, r1
 800f574:	da15      	bge.n	800f5a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f576:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f57a:	eba3 0309 	sub.w	r3, r3, r9
 800f57e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f582:	f8ad 1014 	strh.w	r1, [sp, #20]
 800f586:	4631      	mov	r1, r6
 800f588:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f58c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f590:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f594:	69ea      	ldr	r2, [r5, #28]
 800f596:	e001      	b.n	800f59c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800f598:	69ea      	ldr	r2, [r5, #28]
 800f59a:	4621      	mov	r1, r4
 800f59c:	4640      	mov	r0, r8
 800f59e:	f7ff ff2b 	bl	800f3f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f5a2:	4628      	mov	r0, r5
 800f5a4:	f7ff fe94 	bl	800f2d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f5a8:	6861      	ldr	r1, [r4, #4]
 800f5aa:	4602      	mov	r2, r0
 800f5ac:	4633      	mov	r3, r6
 800f5ae:	6820      	ldr	r0, [r4, #0]
 800f5b0:	c303      	stmia	r3!, {r0, r1}
 800f5b2:	4611      	mov	r1, r2
 800f5b4:	4630      	mov	r0, r6
 800f5b6:	f7fb f823 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 800f5ba:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f5be:	2b00      	cmp	r3, #0
 800f5c0:	f77f af33 	ble.w	800f42a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f5c4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f5c8:	2b00      	cmp	r3, #0
 800f5ca:	f77f af2e 	ble.w	800f42a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f5ce:	4628      	mov	r0, r5
 800f5d0:	f7ff fe9a 	bl	800f308 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f5d4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800f5d8:	1a18      	subs	r0, r3, r0
 800f5da:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f5de:	4628      	mov	r0, r5
 800f5e0:	f7ff fea6 	bl	800f330 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f5e4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f5e8:	4631      	mov	r1, r6
 800f5ea:	1a18      	subs	r0, r3, r0
 800f5ec:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f5f0:	4628      	mov	r0, r5
 800f5f2:	682b      	ldr	r3, [r5, #0]
 800f5f4:	689b      	ldr	r3, [r3, #8]
 800f5f6:	4798      	blx	r3
 800f5f8:	e717      	b.n	800f42a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800f5fa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800f5fa:	b570      	push	{r4, r5, r6, lr}
 800f5fc:	1d06      	adds	r6, r0, #4
 800f5fe:	b086      	sub	sp, #24
 800f600:	460c      	mov	r4, r1
 800f602:	2300      	movs	r3, #0
 800f604:	4631      	mov	r1, r6
 800f606:	4605      	mov	r5, r0
 800f608:	a802      	add	r0, sp, #8
 800f60a:	9301      	str	r3, [sp, #4]
 800f60c:	f7ff fc98 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f610:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f614:	8822      	ldrh	r2, [r4, #0]
 800f616:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800f61a:	1ad2      	subs	r2, r2, r3
 800f61c:	8863      	ldrh	r3, [r4, #2]
 800f61e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f622:	1a5b      	subs	r3, r3, r1
 800f624:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800f628:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f62c:	aa01      	add	r2, sp, #4
 800f62e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f632:	4630      	mov	r0, r6
 800f634:	f8ad 1016 	strh.w	r1, [sp, #22]
 800f638:	a904      	add	r1, sp, #16
 800f63a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800f63e:	f7fb f8b7 	bl	800a7b0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800f642:	9a01      	ldr	r2, [sp, #4]
 800f644:	b11a      	cbz	r2, 800f64e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800f646:	4621      	mov	r1, r4
 800f648:	4628      	mov	r0, r5
 800f64a:	f7ff fed5 	bl	800f3f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f64e:	b006      	add	sp, #24
 800f650:	bd70      	pop	{r4, r5, r6, pc}

0800f652 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800f652:	4602      	mov	r2, r0
 800f654:	b530      	push	{r4, r5, lr}
 800f656:	4604      	mov	r4, r0
 800f658:	b085      	sub	sp, #20
 800f65a:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f65e:	460d      	mov	r5, r1
 800f660:	466b      	mov	r3, sp
 800f662:	6851      	ldr	r1, [r2, #4]
 800f664:	c303      	stmia	r3!, {r0, r1}
 800f666:	4629      	mov	r1, r5
 800f668:	4668      	mov	r0, sp
 800f66a:	f7fa ffc9 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 800f66e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800f672:	b12b      	cbz	r3, 800f680 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800f674:	4669      	mov	r1, sp
 800f676:	4620      	mov	r0, r4
 800f678:	f7ff ffbf 	bl	800f5fa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f67c:	b005      	add	sp, #20
 800f67e:	bd30      	pop	{r4, r5, pc}
 800f680:	3404      	adds	r4, #4
 800f682:	a802      	add	r0, sp, #8
 800f684:	4621      	mov	r1, r4
 800f686:	f7ff fc5b 	bl	800ef40 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f68a:	f8bd 3000 	ldrh.w	r3, [sp]
 800f68e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f692:	4669      	mov	r1, sp
 800f694:	4620      	mov	r0, r4
 800f696:	1a9b      	subs	r3, r3, r2
 800f698:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800f69c:	f8ad 3000 	strh.w	r3, [sp]
 800f6a0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f6a4:	1a9b      	subs	r3, r3, r2
 800f6a6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f6aa:	f7fb f848 	bl	800a73e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f6ae:	e7e5      	b.n	800f67c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800f6b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f6b0:	460b      	mov	r3, r1
 800f6b2:	680a      	ldr	r2, [r1, #0]
 800f6b4:	1d01      	adds	r1, r0, #4
 800f6b6:	6992      	ldr	r2, [r2, #24]
 800f6b8:	4618      	mov	r0, r3
 800f6ba:	4710      	bx	r2

0800f6bc <_ZN8touchgfx12TextProviderC1Ev>:
 800f6bc:	b538      	push	{r3, r4, r5, lr}
 800f6be:	2500      	movs	r5, #0
 800f6c0:	2302      	movs	r3, #2
 800f6c2:	4604      	mov	r4, r0
 800f6c4:	220e      	movs	r2, #14
 800f6c6:	7403      	strb	r3, [r0, #16]
 800f6c8:	4629      	mov	r1, r5
 800f6ca:	6145      	str	r5, [r0, #20]
 800f6cc:	7605      	strb	r5, [r0, #24]
 800f6ce:	83c5      	strh	r5, [r0, #30]
 800f6d0:	8405      	strh	r5, [r0, #32]
 800f6d2:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800f6d4:	8705      	strh	r5, [r0, #56]	@ 0x38
 800f6d6:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 800f6d8:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 800f6dc:	e9c0 5500 	strd	r5, r5, [r0]
 800f6e0:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 800f6e4:	304c      	adds	r0, #76	@ 0x4c
 800f6e6:	f00f fac1 	bl	801ec6c <memset>
 800f6ea:	2301      	movs	r3, #1
 800f6ec:	4620      	mov	r0, r4
 800f6ee:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 800f6f2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f6f6:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 800f6fa:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 800f6fe:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 800f702:	f7f3 fcc7 	bl	8003094 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800f706:	4620      	mov	r0, r4
 800f708:	bd38      	pop	{r3, r4, r5, pc}

0800f70a <_ZN8touchgfx12TextProvider11endOfStringEv>:
 800f70a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f70c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f710:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 800f712:	fab0 f080 	clz	r0, r0
 800f716:	0940      	lsrs	r0, r0, #5
 800f718:	4770      	bx	lr

0800f71a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800f71a:	b530      	push	{r4, r5, lr}
 800f71c:	2500      	movs	r5, #0
 800f71e:	2401      	movs	r4, #1
 800f720:	6843      	ldr	r3, [r0, #4]
 800f722:	b913      	cbnz	r3, 800f72a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800f724:	6803      	ldr	r3, [r0, #0]
 800f726:	b313      	cbz	r3, 800f76e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f728:	6043      	str	r3, [r0, #4]
 800f72a:	7e03      	ldrb	r3, [r0, #24]
 800f72c:	b143      	cbz	r3, 800f740 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800f72e:	6943      	ldr	r3, [r0, #20]
 800f730:	b12b      	cbz	r3, 800f73e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f732:	881a      	ldrh	r2, [r3, #0]
 800f734:	b11a      	cbz	r2, 800f73e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f736:	1c9a      	adds	r2, r3, #2
 800f738:	6142      	str	r2, [r0, #20]
 800f73a:	8818      	ldrh	r0, [r3, #0]
 800f73c:	bd30      	pop	{r4, r5, pc}
 800f73e:	7605      	strb	r5, [r0, #24]
 800f740:	6843      	ldr	r3, [r0, #4]
 800f742:	8819      	ldrh	r1, [r3, #0]
 800f744:	b199      	cbz	r1, 800f76e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f746:	1c9a      	adds	r2, r3, #2
 800f748:	2902      	cmp	r1, #2
 800f74a:	6042      	str	r2, [r0, #4]
 800f74c:	d1f5      	bne.n	800f73a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800f74e:	7c03      	ldrb	r3, [r0, #16]
 800f750:	2b01      	cmp	r3, #1
 800f752:	d8e5      	bhi.n	800f720 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f754:	1c5a      	adds	r2, r3, #1
 800f756:	3302      	adds	r3, #2
 800f758:	7402      	strb	r2, [r0, #16]
 800f75a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800f75e:	6143      	str	r3, [r0, #20]
 800f760:	2b00      	cmp	r3, #0
 800f762:	d0dd      	beq.n	800f720 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f764:	881b      	ldrh	r3, [r3, #0]
 800f766:	2b00      	cmp	r3, #0
 800f768:	d0da      	beq.n	800f720 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f76a:	7604      	strb	r4, [r0, #24]
 800f76c:	e7d8      	b.n	800f720 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f76e:	2000      	movs	r0, #0
 800f770:	e7e4      	b.n	800f73c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800f772 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800f772:	6001      	str	r1, [r0, #0]
 800f774:	2100      	movs	r1, #0
 800f776:	b430      	push	{r4, r5}
 800f778:	6041      	str	r1, [r0, #4]
 800f77a:	6815      	ldr	r5, [r2, #0]
 800f77c:	6085      	str	r5, [r0, #8]
 800f77e:	6852      	ldr	r2, [r2, #4]
 800f780:	6443      	str	r3, [r0, #68]	@ 0x44
 800f782:	9b02      	ldr	r3, [sp, #8]
 800f784:	60c2      	str	r2, [r0, #12]
 800f786:	7401      	strb	r1, [r0, #16]
 800f788:	6141      	str	r1, [r0, #20]
 800f78a:	7601      	strb	r1, [r0, #24]
 800f78c:	8701      	strh	r1, [r0, #56]	@ 0x38
 800f78e:	8401      	strh	r1, [r0, #32]
 800f790:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 800f794:	6483      	str	r3, [r0, #72]	@ 0x48
 800f796:	bc30      	pop	{r4, r5}
 800f798:	f7f3 bc7c 	b.w	8003094 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800f79c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 800f79c:	b408      	push	{r3}
 800f79e:	b510      	push	{r4, lr}
 800f7a0:	b085      	sub	sp, #20
 800f7a2:	ac07      	add	r4, sp, #28
 800f7a4:	f854 3b04 	ldr.w	r3, [r4], #4
 800f7a8:	9300      	str	r3, [sp, #0]
 800f7aa:	4613      	mov	r3, r2
 800f7ac:	4622      	mov	r2, r4
 800f7ae:	9403      	str	r4, [sp, #12]
 800f7b0:	f7ff ffdf 	bl	800f772 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f7b4:	b005      	add	sp, #20
 800f7b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f7ba:	b001      	add	sp, #4
 800f7bc:	4770      	bx	lr

0800f7be <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800f7be:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f7c0:	4605      	mov	r5, r0
 800f7c2:	4608      	mov	r0, r1
 800f7c4:	b1f1      	cbz	r1, 800f804 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 800f7c6:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 800f7ca:	460b      	mov	r3, r1
 800f7cc:	f101 0708 	add.w	r7, r1, #8
 800f7d0:	4622      	mov	r2, r4
 800f7d2:	6818      	ldr	r0, [r3, #0]
 800f7d4:	3308      	adds	r3, #8
 800f7d6:	f853 1c04 	ldr.w	r1, [r3, #-4]
 800f7da:	4626      	mov	r6, r4
 800f7dc:	42bb      	cmp	r3, r7
 800f7de:	c603      	stmia	r6!, {r0, r1}
 800f7e0:	4634      	mov	r4, r6
 800f7e2:	d1f6      	bne.n	800f7d2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800f7e4:	6818      	ldr	r0, [r3, #0]
 800f7e6:	6030      	str	r0, [r6, #0]
 800f7e8:	4610      	mov	r0, r2
 800f7ea:	889b      	ldrh	r3, [r3, #4]
 800f7ec:	80b3      	strh	r3, [r6, #4]
 800f7ee:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 800f7f2:	015b      	lsls	r3, r3, #5
 800f7f4:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f7f8:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 800f7fc:	430b      	orrs	r3, r1
 800f7fe:	425b      	negs	r3, r3
 800f800:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 800f804:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f806 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800f806:	b538      	push	{r3, r4, r5, lr}
 800f808:	460c      	mov	r4, r1
 800f80a:	6811      	ldr	r1, [r2, #0]
 800f80c:	4610      	mov	r0, r2
 800f80e:	68cd      	ldr	r5, [r1, #12]
 800f810:	4619      	mov	r1, r3
 800f812:	47a8      	blx	r5
 800f814:	2800      	cmp	r0, #0
 800f816:	bf08      	it	eq
 800f818:	4620      	moveq	r0, r4
 800f81a:	bd38      	pop	{r3, r4, r5, pc}

0800f81c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800f81c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f81e:	4604      	mov	r4, r0
 800f820:	4615      	mov	r5, r2
 800f822:	4608      	mov	r0, r1
 800f824:	b93a      	cbnz	r2, 800f836 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f826:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800f82a:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 800f82e:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 800f832:	4628      	mov	r0, r5
 800f834:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f836:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800f83a:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 800f83e:	8893      	ldrh	r3, [r2, #4]
 800f840:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800f844:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800f848:	79ee      	ldrb	r6, [r5, #7]
 800f84a:	4316      	orrs	r6, r2
 800f84c:	19da      	adds	r2, r3, r7
 800f84e:	b291      	uxth	r1, r2
 800f850:	b2b7      	uxth	r7, r6
 800f852:	291d      	cmp	r1, #29
 800f854:	d87b      	bhi.n	800f94e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 800f856:	2201      	movs	r2, #1
 800f858:	10f6      	asrs	r6, r6, #3
 800f85a:	408a      	lsls	r2, r1
 800f85c:	4974      	ldr	r1, [pc, #464]	@ (800fa30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 800f85e:	420a      	tst	r2, r1
 800f860:	d12e      	bne.n	800f8c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800f862:	f412 7f60 	tst.w	r2, #896	@ 0x380
 800f866:	d072      	beq.n	800f94e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 800f868:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 800f86c:	462b      	mov	r3, r5
 800f86e:	f105 0e08 	add.w	lr, r5, #8
 800f872:	4615      	mov	r5, r2
 800f874:	6818      	ldr	r0, [r3, #0]
 800f876:	3308      	adds	r3, #8
 800f878:	f853 1c04 	ldr.w	r1, [r3, #-4]
 800f87c:	4694      	mov	ip, r2
 800f87e:	4573      	cmp	r3, lr
 800f880:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800f884:	4662      	mov	r2, ip
 800f886:	d1f5      	bne.n	800f874 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 800f888:	6818      	ldr	r0, [r3, #0]
 800f88a:	f8cc 0000 	str.w	r0, [ip]
 800f88e:	889b      	ldrh	r3, [r3, #4]
 800f890:	f8ac 3004 	strh.w	r3, [ip, #4]
 800f894:	b2b3      	uxth	r3, r6
 800f896:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 800f89a:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 800f89e:	1aca      	subs	r2, r1, r3
 800f8a0:	1bcf      	subs	r7, r1, r7
 800f8a2:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 800f8a6:	b292      	uxth	r2, r2
 800f8a8:	1afb      	subs	r3, r7, r3
 800f8aa:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800f8ae:	10d2      	asrs	r2, r2, #3
 800f8b0:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 800f8b4:	4302      	orrs	r2, r0
 800f8b6:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 800f8ba:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800f8be:	e7b8      	b.n	800f832 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f8c0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800f8c2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f8c6:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 800f8c8:	f640 6333 	movw	r3, #3635	@ 0xe33
 800f8cc:	4299      	cmp	r1, r3
 800f8ce:	d110      	bne.n	800f8f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 800f8d0:	6803      	ldr	r3, [r0, #0]
 800f8d2:	68db      	ldr	r3, [r3, #12]
 800f8d4:	4798      	blx	r3
 800f8d6:	7b41      	ldrb	r1, [r0, #13]
 800f8d8:	00cb      	lsls	r3, r1, #3
 800f8da:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f8de:	7a03      	ldrb	r3, [r0, #8]
 800f8e0:	0648      	lsls	r0, r1, #25
 800f8e2:	ea43 0302 	orr.w	r3, r3, r2
 800f8e6:	bf44      	itt	mi
 800f8e8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f8ec:	b21b      	sxthmi	r3, r3
 800f8ee:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f8f2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 800f8f6:	462a      	mov	r2, r5
 800f8f8:	f105 0c08 	add.w	ip, r5, #8
 800f8fc:	443b      	add	r3, r7
 800f8fe:	4433      	add	r3, r6
 800f900:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 800f904:	b29b      	uxth	r3, r3
 800f906:	4635      	mov	r5, r6
 800f908:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f90c:	6810      	ldr	r0, [r2, #0]
 800f90e:	3208      	adds	r2, #8
 800f910:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800f914:	4637      	mov	r7, r6
 800f916:	4562      	cmp	r2, ip
 800f918:	c703      	stmia	r7!, {r0, r1}
 800f91a:	463e      	mov	r6, r7
 800f91c:	d1f6      	bne.n	800f90c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 800f91e:	6810      	ldr	r0, [r2, #0]
 800f920:	6038      	str	r0, [r7, #0]
 800f922:	8892      	ldrh	r2, [r2, #4]
 800f924:	80ba      	strh	r2, [r7, #4]
 800f926:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f92a:	10db      	asrs	r3, r3, #3
 800f92c:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f930:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f934:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f938:	4313      	orrs	r3, r2
 800f93a:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 800f93e:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f942:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800f946:	1a9b      	subs	r3, r3, r2
 800f948:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 800f94c:	e771      	b.n	800f832 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f94e:	f023 0204 	bic.w	r2, r3, #4
 800f952:	f640 611b 	movw	r1, #3611	@ 0xe1b
 800f956:	428a      	cmp	r2, r1
 800f958:	d003      	beq.n	800f962 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 800f95a:	f640 621d 	movw	r2, #3613	@ 0xe1d
 800f95e:	4293      	cmp	r3, r2
 800f960:	d120      	bne.n	800f9a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 800f962:	3b01      	subs	r3, #1
 800f964:	4602      	mov	r2, r0
 800f966:	4629      	mov	r1, r5
 800f968:	4620      	mov	r0, r4
 800f96a:	b29b      	uxth	r3, r3
 800f96c:	f7ff ff4b 	bl	800f806 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f970:	7b41      	ldrb	r1, [r0, #13]
 800f972:	00cb      	lsls	r3, r1, #3
 800f974:	0649      	lsls	r1, r1, #25
 800f976:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f97a:	7a03      	ldrb	r3, [r0, #8]
 800f97c:	ea43 0302 	orr.w	r3, r3, r2
 800f980:	bf44      	itt	mi
 800f982:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f986:	b21b      	sxthmi	r3, r3
 800f988:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f98c:	7b6b      	ldrb	r3, [r5, #13]
 800f98e:	7aaa      	ldrb	r2, [r5, #10]
 800f990:	005b      	lsls	r3, r3, #1
 800f992:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f996:	4313      	orrs	r3, r2
 800f998:	115a      	asrs	r2, r3, #5
 800f99a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800f99e:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800f9a2:	e035      	b.n	800fa10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 800f9a4:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800f9a8:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 800f9ac:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 800f9b0:	7a2a      	ldrb	r2, [r5, #8]
 800f9b2:	ea42 0201 	orr.w	r2, r2, r1
 800f9b6:	f640 6109 	movw	r1, #3593	@ 0xe09
 800f9ba:	bf1c      	itt	ne
 800f9bc:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 800f9c0:	b212      	sxthne	r2, r2
 800f9c2:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800f9c6:	f023 0210 	bic.w	r2, r3, #16
 800f9ca:	428a      	cmp	r2, r1
 800f9cc:	d003      	beq.n	800f9d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 800f9ce:	f640 6213 	movw	r2, #3603	@ 0xe13
 800f9d2:	4293      	cmp	r3, r2
 800f9d4:	d129      	bne.n	800fa2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 800f9d6:	7b6e      	ldrb	r6, [r5, #13]
 800f9d8:	4629      	mov	r1, r5
 800f9da:	0076      	lsls	r6, r6, #1
 800f9dc:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800f9e0:	7aae      	ldrb	r6, [r5, #10]
 800f9e2:	4316      	orrs	r6, r2
 800f9e4:	f640 6213 	movw	r2, #3603	@ 0xe13
 800f9e8:	4293      	cmp	r3, r2
 800f9ea:	4602      	mov	r2, r0
 800f9ec:	4620      	mov	r0, r4
 800f9ee:	bf16      	itet	ne
 800f9f0:	f103 33ff 	addne.w	r3, r3, #4294967295
 800f9f4:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 800f9f8:	b29b      	uxthne	r3, r3
 800f9fa:	f7ff ff04 	bl	800f806 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f9fe:	7b43      	ldrb	r3, [r0, #13]
 800fa00:	7a82      	ldrb	r2, [r0, #10]
 800fa02:	005b      	lsls	r3, r3, #1
 800fa04:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800fa08:	4313      	orrs	r3, r2
 800fa0a:	1af6      	subs	r6, r6, r3
 800fa0c:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 800fa10:	7b69      	ldrb	r1, [r5, #13]
 800fa12:	00cb      	lsls	r3, r1, #3
 800fa14:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fa18:	7a2b      	ldrb	r3, [r5, #8]
 800fa1a:	4313      	orrs	r3, r2
 800fa1c:	064a      	lsls	r2, r1, #25
 800fa1e:	bf44      	itt	mi
 800fa20:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fa24:	b21b      	sxthmi	r3, r3
 800fa26:	1bdb      	subs	r3, r3, r7
 800fa28:	e747      	b.n	800f8ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 800fa2a:	2300      	movs	r3, #0
 800fa2c:	e7b7      	b.n	800f99e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 800fa2e:	bf00      	nop
 800fa30:	3fc00079 	.word	0x3fc00079

0800fa34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800fa34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fa38:	4604      	mov	r4, r0
 800fa3a:	b942      	cbnz	r2, 800fa4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800fa3c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fa40:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 800fa44:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 800fa48:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800fa4c:	e047      	b.n	800fade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800fa4e:	7b51      	ldrb	r1, [r2, #13]
 800fa50:	8893      	ldrh	r3, [r2, #4]
 800fa52:	010d      	lsls	r5, r1, #4
 800fa54:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 800fa58:	79d5      	ldrb	r5, [r2, #7]
 800fa5a:	4305      	orrs	r5, r0
 800fa5c:	2d04      	cmp	r5, #4
 800fa5e:	bfcc      	ite	gt
 800fa60:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800fa64:	f04f 0e01 	movle.w	lr, #1
 800fa68:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 800fa6c:	f200 80ab 	bhi.w	800fbc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800fa70:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 800fa74:	4283      	cmp	r3, r0
 800fa76:	d216      	bcs.n	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fa78:	f240 605b 	movw	r0, #1627	@ 0x65b
 800fa7c:	4283      	cmp	r3, r0
 800fa7e:	d859      	bhi.n	800fb34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800fa80:	f240 6057 	movw	r0, #1623	@ 0x657
 800fa84:	4283      	cmp	r3, r0
 800fa86:	d20e      	bcs.n	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fa88:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800fa8c:	d24a      	bcs.n	800fb24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800fa8e:	f240 604e 	movw	r0, #1614	@ 0x64e
 800fa92:	4283      	cmp	r3, r0
 800fa94:	d207      	bcs.n	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fa96:	f240 601a 	movw	r0, #1562	@ 0x61a
 800fa9a:	4283      	cmp	r3, r0
 800fa9c:	d02a      	beq.n	800faf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fa9e:	d821      	bhi.n	800fae4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800faa0:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 800faa4:	d35b      	bcc.n	800fb5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800faa6:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 800faaa:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800faae:	f040 80d0 	bne.w	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800fab2:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 800fab6:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800faba:	f040 80ca 	bne.w	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800fabe:	00cb      	lsls	r3, r1, #3
 800fac0:	0649      	lsls	r1, r1, #25
 800fac2:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800fac6:	7a13      	ldrb	r3, [r2, #8]
 800fac8:	ea43 0300 	orr.w	r3, r3, r0
 800facc:	bf44      	itt	mi
 800face:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fad2:	b21b      	sxthmi	r3, r3
 800fad4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800fad8:	1b5d      	subs	r5, r3, r5
 800fada:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800fade:	4610      	mov	r0, r2
 800fae0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fae4:	f240 604b 	movw	r0, #1611	@ 0x64b
 800fae8:	4283      	cmp	r3, r0
 800faea:	d338      	bcc.n	800fb5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800faec:	f240 604c 	movw	r0, #1612	@ 0x64c
 800faf0:	4283      	cmp	r3, r0
 800faf2:	d9d8      	bls.n	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800faf4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 800faf8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 800fafc:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800fb00:	f040 80f3 	bne.w	800fcea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 800fb04:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800fb08:	f040 80ef 	bne.w	800fcea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 800fb0c:	00cb      	lsls	r3, r1, #3
 800fb0e:	064e      	lsls	r6, r1, #25
 800fb10:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800fb14:	7a13      	ldrb	r3, [r2, #8]
 800fb16:	ea43 0300 	orr.w	r3, r3, r0
 800fb1a:	bf44      	itt	mi
 800fb1c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fb20:	b21b      	sxthmi	r3, r3
 800fb22:	e7d9      	b.n	800fad8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800fb24:	f240 6054 	movw	r0, #1620	@ 0x654
 800fb28:	4283      	cmp	r3, r0
 800fb2a:	d8e3      	bhi.n	800faf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fb2c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800fb30:	d9e0      	bls.n	800faf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fb32:	e7b8      	b.n	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fb34:	f240 6074 	movw	r0, #1652	@ 0x674
 800fb38:	4283      	cmp	r3, r0
 800fb3a:	d0b4      	beq.n	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fb3c:	d82d      	bhi.n	800fb9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800fb3e:	f240 605e 	movw	r0, #1630	@ 0x65e
 800fb42:	4283      	cmp	r3, r0
 800fb44:	d804      	bhi.n	800fb50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800fb46:	f240 605d 	movw	r0, #1629	@ 0x65d
 800fb4a:	4283      	cmp	r3, r0
 800fb4c:	d3d2      	bcc.n	800faf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fb4e:	e7aa      	b.n	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fb50:	f240 605f 	movw	r0, #1631	@ 0x65f
 800fb54:	4283      	cmp	r3, r0
 800fb56:	d0cd      	beq.n	800faf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fb58:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 800fb5c:	d0a3      	beq.n	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fb5e:	00cb      	lsls	r3, r1, #3
 800fb60:	0649      	lsls	r1, r1, #25
 800fb62:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800fb66:	7a13      	ldrb	r3, [r2, #8]
 800fb68:	ea43 0300 	orr.w	r3, r3, r0
 800fb6c:	bf44      	itt	mi
 800fb6e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fb72:	b21b      	sxthmi	r3, r3
 800fb74:	1b5d      	subs	r5, r3, r5
 800fb76:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800fb7a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800fb7e:	7b53      	ldrb	r3, [r2, #13]
 800fb80:	015b      	lsls	r3, r3, #5
 800fb82:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800fb86:	7993      	ldrb	r3, [r2, #6]
 800fb88:	430b      	orrs	r3, r1
 800fb8a:	2105      	movs	r1, #5
 800fb8c:	005b      	lsls	r3, r3, #1
 800fb8e:	fb93 f3f1 	sdiv	r3, r3, r1
 800fb92:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800fb96:	440b      	add	r3, r1
 800fb98:	e756      	b.n	800fa48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800fb9a:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 800fb9e:	4283      	cmp	r3, r0
 800fba0:	d809      	bhi.n	800fbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800fba2:	f240 60df 	movw	r0, #1759	@ 0x6df
 800fba6:	4283      	cmp	r3, r0
 800fba8:	f4bf af7d 	bcs.w	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fbac:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 800fbb0:	2b05      	cmp	r3, #5
 800fbb2:	d8d4      	bhi.n	800fb5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800fbb4:	e777      	b.n	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fbb6:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 800fbba:	4283      	cmp	r3, r0
 800fbbc:	d09a      	beq.n	800faf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fbbe:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 800fbc2:	4283      	cmp	r3, r0
 800fbc4:	e7ca      	b.n	800fb5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fbc6:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 800fbca:	d22b      	bcs.n	800fc24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800fbcc:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 800fbd0:	4283      	cmp	r3, r0
 800fbd2:	d28f      	bcs.n	800faf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fbd4:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 800fbd8:	4283      	cmp	r3, r0
 800fbda:	d816      	bhi.n	800fc0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800fbdc:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 800fbe0:	4283      	cmp	r3, r0
 800fbe2:	f4bf af60 	bcs.w	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fbe6:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 800fbea:	4283      	cmp	r3, r0
 800fbec:	d80a      	bhi.n	800fc04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800fbee:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 800fbf2:	4283      	cmp	r3, r0
 800fbf4:	f4bf af57 	bcs.w	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fbf8:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 800fbfc:	4283      	cmp	r3, r0
 800fbfe:	f43f af79 	beq.w	800faf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fc02:	e7ac      	b.n	800fb5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800fc04:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 800fc08:	e7f8      	b.n	800fbfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800fc0a:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 800fc0e:	4283      	cmp	r3, r0
 800fc10:	d802      	bhi.n	800fc18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800fc12:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 800fc16:	e798      	b.n	800fb4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800fc18:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 800fc1c:	4283      	cmp	r3, r0
 800fc1e:	f47f af42 	bne.w	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fc22:	e767      	b.n	800faf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fc24:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 800fc28:	4283      	cmp	r3, r0
 800fc2a:	f43f af63 	beq.w	800faf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fc2e:	d802      	bhi.n	800fc36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800fc30:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 800fc34:	e7f2      	b.n	800fc1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800fc36:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 800fc3a:	4283      	cmp	r3, r0
 800fc3c:	d805      	bhi.n	800fc4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800fc3e:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 800fc42:	4283      	cmp	r3, r0
 800fc44:	f4ff af2f 	bcc.w	800faa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fc48:	e754      	b.n	800faf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fc4a:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 800fc4e:	4283      	cmp	r3, r0
 800fc50:	e7af      	b.n	800fbb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800fc52:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800fc56:	4617      	mov	r7, r2
 800fc58:	f102 0808 	add.w	r8, r2, #8
 800fc5c:	4666      	mov	r6, ip
 800fc5e:	6838      	ldr	r0, [r7, #0]
 800fc60:	3708      	adds	r7, #8
 800fc62:	f857 1c04 	ldr.w	r1, [r7, #-4]
 800fc66:	46e6      	mov	lr, ip
 800fc68:	4547      	cmp	r7, r8
 800fc6a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800fc6e:	46f4      	mov	ip, lr
 800fc70:	d1f5      	bne.n	800fc5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800fc72:	6838      	ldr	r0, [r7, #0]
 800fc74:	f8ce 0000 	str.w	r0, [lr]
 800fc78:	88b9      	ldrh	r1, [r7, #4]
 800fc7a:	f8ae 1004 	strh.w	r1, [lr, #4]
 800fc7e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800fc82:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800fc86:	d009      	beq.n	800fc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 800fc88:	7b51      	ldrb	r1, [r2, #13]
 800fc8a:	7992      	ldrb	r2, [r2, #6]
 800fc8c:	0149      	lsls	r1, r1, #5
 800fc8e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800fc92:	4311      	orrs	r1, r2
 800fc94:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800fc98:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800fc9c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800fca0:	b2ad      	uxth	r5, r5
 800fca2:	d00d      	beq.n	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 800fca4:	442b      	add	r3, r5
 800fca6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800fcaa:	b29b      	uxth	r3, r3
 800fcac:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800fcb0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800fcb4:	10db      	asrs	r3, r3, #3
 800fcb6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800fcba:	4313      	orrs	r3, r2
 800fcbc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800fcc0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800fcc4:	00cb      	lsls	r3, r1, #3
 800fcc6:	064f      	lsls	r7, r1, #25
 800fcc8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fccc:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800fcd0:	ea43 0302 	orr.w	r3, r3, r2
 800fcd4:	bf44      	itt	mi
 800fcd6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fcda:	b21b      	sxthmi	r3, r3
 800fcdc:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800fce0:	1b5b      	subs	r3, r3, r5
 800fce2:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800fce6:	4632      	mov	r2, r6
 800fce8:	e6f9      	b.n	800fade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800fcea:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800fcee:	4617      	mov	r7, r2
 800fcf0:	f102 0908 	add.w	r9, r2, #8
 800fcf4:	4666      	mov	r6, ip
 800fcf6:	6838      	ldr	r0, [r7, #0]
 800fcf8:	3708      	adds	r7, #8
 800fcfa:	f857 1c04 	ldr.w	r1, [r7, #-4]
 800fcfe:	46e0      	mov	r8, ip
 800fd00:	454f      	cmp	r7, r9
 800fd02:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800fd06:	46c4      	mov	ip, r8
 800fd08:	d1f5      	bne.n	800fcf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 800fd0a:	6838      	ldr	r0, [r7, #0]
 800fd0c:	f8c8 0000 	str.w	r0, [r8]
 800fd10:	88b9      	ldrh	r1, [r7, #4]
 800fd12:	f8a8 1004 	strh.w	r1, [r8, #4]
 800fd16:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800fd1a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800fd1e:	d009      	beq.n	800fd34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 800fd20:	7b51      	ldrb	r1, [r2, #13]
 800fd22:	7992      	ldrb	r2, [r2, #6]
 800fd24:	0149      	lsls	r1, r1, #5
 800fd26:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800fd2a:	4311      	orrs	r1, r2
 800fd2c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800fd30:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800fd34:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800fd38:	d00e      	beq.n	800fd58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800fd3a:	eba3 030e 	sub.w	r3, r3, lr
 800fd3e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800fd42:	b29b      	uxth	r3, r3
 800fd44:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800fd48:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800fd4c:	10db      	asrs	r3, r3, #3
 800fd4e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800fd52:	4313      	orrs	r3, r2
 800fd54:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800fd58:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800fd5c:	00cb      	lsls	r3, r1, #3
 800fd5e:	0648      	lsls	r0, r1, #25
 800fd60:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fd64:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800fd68:	ea43 0302 	orr.w	r3, r3, r2
 800fd6c:	bf44      	itt	mi
 800fd6e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fd72:	b21b      	sxthmi	r3, r3
 800fd74:	1b5d      	subs	r5, r3, r5
 800fd76:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800fd7a:	e7b4      	b.n	800fce6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

0800fd7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800fd7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd80:	461e      	mov	r6, r3
 800fd82:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800fd84:	4604      	mov	r4, r0
 800fd86:	4617      	mov	r7, r2
 800fd88:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800fd8c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800fd90:	f7f3 f93e 	bl	8003010 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fd94:	4605      	mov	r5, r0
 800fd96:	b918      	cbnz	r0, 800fda0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800fd98:	6030      	str	r0, [r6, #0]
 800fd9a:	4628      	mov	r0, r5
 800fd9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fda0:	683b      	ldr	r3, [r7, #0]
 800fda2:	4601      	mov	r1, r0
 800fda4:	4638      	mov	r0, r7
 800fda6:	68db      	ldr	r3, [r3, #12]
 800fda8:	4798      	blx	r3
 800fdaa:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 800fdae:	4602      	mov	r2, r0
 800fdb0:	6030      	str	r0, [r6, #0]
 800fdb2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800fdb6:	d213      	bcs.n	800fde0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800fdb8:	4643      	mov	r3, r8
 800fdba:	4639      	mov	r1, r7
 800fdbc:	4620      	mov	r0, r4
 800fdbe:	f7ff fe39 	bl	800fa34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800fdc2:	6030      	str	r0, [r6, #0]
 800fdc4:	6833      	ldr	r3, [r6, #0]
 800fdc6:	b143      	cbz	r3, 800fdda <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800fdc8:	7b5a      	ldrb	r2, [r3, #13]
 800fdca:	7a9b      	ldrb	r3, [r3, #10]
 800fdcc:	0052      	lsls	r2, r2, #1
 800fdce:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800fdd2:	4313      	orrs	r3, r2
 800fdd4:	bf0c      	ite	eq
 800fdd6:	2301      	moveq	r3, #1
 800fdd8:	2300      	movne	r3, #0
 800fdda:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 800fdde:	e7dc      	b.n	800fd9a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800fde0:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 800fde4:	b29b      	uxth	r3, r3
 800fde6:	2b7f      	cmp	r3, #127	@ 0x7f
 800fde8:	d804      	bhi.n	800fdf4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800fdea:	4639      	mov	r1, r7
 800fdec:	4620      	mov	r0, r4
 800fdee:	f7ff fd15 	bl	800f81c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800fdf2:	e7e6      	b.n	800fdc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800fdf4:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 800fdf8:	2b00      	cmp	r3, #0
 800fdfa:	d0e3      	beq.n	800fdc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800fdfc:	f640 1302 	movw	r3, #2306	@ 0x902
 800fe00:	429d      	cmp	r5, r3
 800fe02:	d1df      	bne.n	800fdc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800fe04:	4601      	mov	r1, r0
 800fe06:	4620      	mov	r0, r4
 800fe08:	f7ff fcd9 	bl	800f7be <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800fe0c:	e7d9      	b.n	800fdc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800fe0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800fe0e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fe12:	461e      	mov	r6, r3
 800fe14:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800fe16:	4604      	mov	r4, r0
 800fe18:	4617      	mov	r7, r2
 800fe1a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800fe1e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800fe22:	f7f3 f8f5 	bl	8003010 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fe26:	4605      	mov	r5, r0
 800fe28:	b918      	cbnz	r0, 800fe32 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 800fe2a:	6030      	str	r0, [r6, #0]
 800fe2c:	4628      	mov	r0, r5
 800fe2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fe32:	683b      	ldr	r3, [r7, #0]
 800fe34:	4601      	mov	r1, r0
 800fe36:	4638      	mov	r0, r7
 800fe38:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800fe3c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800fe40:	47c8      	blx	r9
 800fe42:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 800fe46:	4602      	mov	r2, r0
 800fe48:	6030      	str	r0, [r6, #0]
 800fe4a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800fe4e:	d213      	bcs.n	800fe78 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 800fe50:	4643      	mov	r3, r8
 800fe52:	4639      	mov	r1, r7
 800fe54:	4620      	mov	r0, r4
 800fe56:	f7ff fded 	bl	800fa34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800fe5a:	6030      	str	r0, [r6, #0]
 800fe5c:	6833      	ldr	r3, [r6, #0]
 800fe5e:	b143      	cbz	r3, 800fe72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 800fe60:	7b5a      	ldrb	r2, [r3, #13]
 800fe62:	7a9b      	ldrb	r3, [r3, #10]
 800fe64:	0052      	lsls	r2, r2, #1
 800fe66:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800fe6a:	4313      	orrs	r3, r2
 800fe6c:	bf0c      	ite	eq
 800fe6e:	2301      	moveq	r3, #1
 800fe70:	2300      	movne	r3, #0
 800fe72:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 800fe76:	e7d9      	b.n	800fe2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 800fe78:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 800fe7c:	b29b      	uxth	r3, r3
 800fe7e:	2b7f      	cmp	r3, #127	@ 0x7f
 800fe80:	d804      	bhi.n	800fe8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 800fe82:	4639      	mov	r1, r7
 800fe84:	4620      	mov	r0, r4
 800fe86:	f7ff fcc9 	bl	800f81c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800fe8a:	e7e6      	b.n	800fe5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 800fe8c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 800fe90:	2b00      	cmp	r3, #0
 800fe92:	d0e3      	beq.n	800fe5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800fe94:	f640 1302 	movw	r3, #2306	@ 0x902
 800fe98:	429d      	cmp	r5, r3
 800fe9a:	d1df      	bne.n	800fe5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800fe9c:	4601      	mov	r1, r0
 800fe9e:	4620      	mov	r0, r4
 800fea0:	f7ff fc8d 	bl	800f7be <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800fea4:	e7d9      	b.n	800fe5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0800fea6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800fea6:	b510      	push	{r4, lr}
 800fea8:	4604      	mov	r4, r0
 800feaa:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800feae:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800feb0:	b1e1      	cbz	r1, 800feec <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 800feb2:	2b0a      	cmp	r3, #10
 800feb4:	d02d      	beq.n	800ff12 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 800feb6:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800feb8:	3901      	subs	r1, #1
 800feba:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800febe:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 800fec0:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 800fec4:	1c51      	adds	r1, r2, #1
 800fec6:	b289      	uxth	r1, r1
 800fec8:	2901      	cmp	r1, #1
 800feca:	bf8a      	itet	hi
 800fecc:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800fed0:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 800fed2:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 800fed4:	1c5a      	adds	r2, r3, #1
 800fed6:	8722      	strh	r2, [r4, #56]	@ 0x38
 800fed8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800feda:	4413      	add	r3, r2
 800fedc:	b29b      	uxth	r3, r3
 800fede:	2b09      	cmp	r3, #9
 800fee0:	bf88      	it	hi
 800fee2:	3b0a      	subhi	r3, #10
 800fee4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fee8:	8458      	strh	r0, [r3, #34]	@ 0x22
 800feea:	e7de      	b.n	800feaa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800feec:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800feee:	2b0a      	cmp	r3, #10
 800fef0:	d00f      	beq.n	800ff12 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 800fef2:	4620      	mov	r0, r4
 800fef4:	f7ff fc11 	bl	800f71a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800fef8:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800fefa:	1c5a      	adds	r2, r3, #1
 800fefc:	8722      	strh	r2, [r4, #56]	@ 0x38
 800fefe:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800ff00:	4413      	add	r3, r2
 800ff02:	b29b      	uxth	r3, r3
 800ff04:	2b09      	cmp	r3, #9
 800ff06:	bf88      	it	hi
 800ff08:	3b0a      	subhi	r3, #10
 800ff0a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ff0e:	8458      	strh	r0, [r3, #34]	@ 0x22
 800ff10:	e7ec      	b.n	800feec <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 800ff12:	bd10      	pop	{r4, pc}

0800ff14 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800ff14:	b538      	push	{r3, r4, r5, lr}
 800ff16:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800ff18:	4604      	mov	r4, r0
 800ff1a:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 800ff1e:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 800ff20:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 800ff22:	3a01      	subs	r2, #1
 800ff24:	8702      	strh	r2, [r0, #56]	@ 0x38
 800ff26:	1c5a      	adds	r2, r3, #1
 800ff28:	b292      	uxth	r2, r2
 800ff2a:	2a09      	cmp	r2, #9
 800ff2c:	bf8a      	itet	hi
 800ff2e:	3b09      	subhi	r3, #9
 800ff30:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 800ff32:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 800ff34:	f7ff ffb7 	bl	800fea6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ff38:	8c23      	ldrh	r3, [r4, #32]
 800ff3a:	2b01      	cmp	r3, #1
 800ff3c:	bf9c      	itt	ls
 800ff3e:	3301      	addls	r3, #1
 800ff40:	8423      	strhls	r3, [r4, #32]
 800ff42:	8be3      	ldrh	r3, [r4, #30]
 800ff44:	b90b      	cbnz	r3, 800ff4a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 800ff46:	2302      	movs	r3, #2
 800ff48:	83e3      	strh	r3, [r4, #30]
 800ff4a:	8be3      	ldrh	r3, [r4, #30]
 800ff4c:	4628      	mov	r0, r5
 800ff4e:	3b01      	subs	r3, #1
 800ff50:	b29b      	uxth	r3, r3
 800ff52:	83e3      	strh	r3, [r4, #30]
 800ff54:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ff58:	8365      	strh	r5, [r4, #26]
 800ff5a:	bd38      	pop	{r3, r4, r5, pc}

0800ff5c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800ff5c:	428a      	cmp	r2, r1
 800ff5e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ff62:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 800ff64:	d932      	bls.n	800ffcc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 800ff66:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 800ff68:	1a54      	subs	r4, r2, r1
 800ff6a:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 800ff6e:	19ee      	adds	r6, r5, r7
 800ff70:	fa1f fe84 	uxth.w	lr, r4
 800ff74:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 800ff78:	3e01      	subs	r6, #1
 800ff7a:	b2b4      	uxth	r4, r6
 800ff7c:	eba4 090e 	sub.w	r9, r4, lr
 800ff80:	fa1f f989 	uxth.w	r9, r9
 800ff84:	2c09      	cmp	r4, #9
 800ff86:	4626      	mov	r6, r4
 800ff88:	bf88      	it	hi
 800ff8a:	f1a4 060a 	subhi.w	r6, r4, #10
 800ff8e:	f1bc 0f00 	cmp.w	ip, #0
 800ff92:	f104 34ff 	add.w	r4, r4, #4294967295
 800ff96:	bf08      	it	eq
 800ff98:	f04f 0c02 	moveq.w	ip, #2
 800ff9c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 800ffa0:	b2a4      	uxth	r4, r4
 800ffa2:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ffa6:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 800ffaa:	454c      	cmp	r4, r9
 800ffac:	fa1f fc8c 	uxth.w	ip, ip
 800ffb0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 800ffb4:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 800ffb8:	d1e4      	bne.n	800ff84 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 800ffba:	eba5 050e 	sub.w	r5, r5, lr
 800ffbe:	eb0e 0408 	add.w	r4, lr, r8
 800ffc2:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 800ffc6:	8705      	strh	r5, [r0, #56]	@ 0x38
 800ffc8:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 800ffcc:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 800ffce:	250a      	movs	r5, #10
 800ffd0:	1a64      	subs	r4, r4, r1
 800ffd2:	4439      	add	r1, r7
 800ffd4:	b289      	uxth	r1, r1
 800ffd6:	8704      	strh	r4, [r0, #56]	@ 0x38
 800ffd8:	2909      	cmp	r1, #9
 800ffda:	bf88      	it	hi
 800ffdc:	390a      	subhi	r1, #10
 800ffde:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800ffe0:	b18a      	cbz	r2, 8010006 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 800ffe2:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 800ffe4:	3a01      	subs	r2, #1
 800ffe6:	3101      	adds	r1, #1
 800ffe8:	b292      	uxth	r2, r2
 800ffea:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800ffee:	8701      	strh	r1, [r0, #56]	@ 0x38
 800fff0:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800fff2:	b901      	cbnz	r1, 800fff6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 800fff4:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800fff6:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800fff8:	3901      	subs	r1, #1
 800fffa:	b289      	uxth	r1, r1
 800fffc:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800fffe:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8010002:	844c      	strh	r4, [r1, #34]	@ 0x22
 8010004:	e7ec      	b.n	800ffe0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 8010006:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801000a:	f7ff bf4c 	b.w	800fea6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801000e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801000e:	b570      	push	{r4, r5, r6, lr}
 8010010:	2500      	movs	r5, #0
 8010012:	4295      	cmp	r5, r2
 8010014:	d011      	beq.n	801003a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8010016:	8bc4      	ldrh	r4, [r0, #30]
 8010018:	f831 6b02 	ldrh.w	r6, [r1], #2
 801001c:	4414      	add	r4, r2
 801001e:	3c01      	subs	r4, #1
 8010020:	1b64      	subs	r4, r4, r5
 8010022:	b2a4      	uxth	r4, r4
 8010024:	2c01      	cmp	r4, #1
 8010026:	bf88      	it	hi
 8010028:	3c02      	subhi	r4, #2
 801002a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801002e:	8b64      	ldrh	r4, [r4, #26]
 8010030:	42b4      	cmp	r4, r6
 8010032:	d117      	bne.n	8010064 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8010034:	3501      	adds	r5, #1
 8010036:	b2ad      	uxth	r5, r5
 8010038:	e7eb      	b.n	8010012 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801003a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801003e:	2400      	movs	r4, #0
 8010040:	4413      	add	r3, r2
 8010042:	b2a2      	uxth	r2, r4
 8010044:	429a      	cmp	r2, r3
 8010046:	da0f      	bge.n	8010068 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8010048:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 801004a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801004e:	3401      	adds	r4, #1
 8010050:	4432      	add	r2, r6
 8010052:	b292      	uxth	r2, r2
 8010054:	2a09      	cmp	r2, #9
 8010056:	bf88      	it	hi
 8010058:	3a0a      	subhi	r2, #10
 801005a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801005e:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8010060:	42aa      	cmp	r2, r5
 8010062:	d0ee      	beq.n	8010042 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8010064:	2000      	movs	r0, #0
 8010066:	bd70      	pop	{r4, r5, r6, pc}
 8010068:	2001      	movs	r0, #1
 801006a:	e7fc      	b.n	8010066 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801006c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801006c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010070:	4605      	mov	r5, r0
 8010072:	4616      	mov	r6, r2
 8010074:	1c8c      	adds	r4, r1, #2
 8010076:	8809      	ldrh	r1, [r1, #0]
 8010078:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801007c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8010080:	42b3      	cmp	r3, r6
 8010082:	d124      	bne.n	80100ce <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8010084:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8010088:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801008c:	f001 070f 	and.w	r7, r1, #15
 8010090:	4652      	mov	r2, sl
 8010092:	f8cd 8000 	str.w	r8, [sp]
 8010096:	464b      	mov	r3, r9
 8010098:	4621      	mov	r1, r4
 801009a:	4628      	mov	r0, r5
 801009c:	f7ff ffb7 	bl	801000e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80100a0:	4683      	mov	fp, r0
 80100a2:	b168      	cbz	r0, 80100c0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80100a4:	eb0a 0109 	add.w	r1, sl, r9
 80100a8:	463a      	mov	r2, r7
 80100aa:	4628      	mov	r0, r5
 80100ac:	4441      	add	r1, r8
 80100ae:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80100b2:	4649      	mov	r1, r9
 80100b4:	f7ff ff52 	bl	800ff5c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80100b8:	4658      	mov	r0, fp
 80100ba:	b003      	add	sp, #12
 80100bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100c0:	eb07 010a 	add.w	r1, r7, sl
 80100c4:	4449      	add	r1, r9
 80100c6:	4441      	add	r1, r8
 80100c8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80100cc:	e7d2      	b.n	8010074 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80100ce:	f04f 0b00 	mov.w	fp, #0
 80100d2:	e7f1      	b.n	80100b8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080100d4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80100d4:	b570      	push	{r4, r5, r6, lr}
 80100d6:	8810      	ldrh	r0, [r2, #0]
 80100d8:	4298      	cmp	r0, r3
 80100da:	d817      	bhi.n	801010c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80100dc:	1e48      	subs	r0, r1, #1
 80100de:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80100e2:	4298      	cmp	r0, r3
 80100e4:	d312      	bcc.n	801010c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80100e6:	2400      	movs	r4, #0
 80100e8:	428c      	cmp	r4, r1
 80100ea:	d20f      	bcs.n	801010c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80100ec:	1860      	adds	r0, r4, r1
 80100ee:	1040      	asrs	r0, r0, #1
 80100f0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80100f4:	0085      	lsls	r5, r0, #2
 80100f6:	42b3      	cmp	r3, r6
 80100f8:	d902      	bls.n	8010100 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80100fa:	3001      	adds	r0, #1
 80100fc:	b284      	uxth	r4, r0
 80100fe:	e7f3      	b.n	80100e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8010100:	d201      	bcs.n	8010106 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8010102:	b281      	uxth	r1, r0
 8010104:	e7f0      	b.n	80100e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8010106:	442a      	add	r2, r5
 8010108:	8850      	ldrh	r0, [r2, #2]
 801010a:	bd70      	pop	{r4, r5, r6, pc}
 801010c:	2000      	movs	r0, #0
 801010e:	e7fc      	b.n	801010a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08010110 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8010110:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010114:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8010116:	4604      	mov	r4, r0
 8010118:	260b      	movs	r6, #11
 801011a:	886f      	ldrh	r7, [r5, #2]
 801011c:	087f      	lsrs	r7, r7, #1
 801011e:	3e01      	subs	r6, #1
 8010120:	d013      	beq.n	801014a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8010122:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8010124:	462a      	mov	r2, r5
 8010126:	4639      	mov	r1, r7
 8010128:	4620      	mov	r0, r4
 801012a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801012e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8010132:	4643      	mov	r3, r8
 8010134:	f7ff ffce 	bl	80100d4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8010138:	b138      	cbz	r0, 801014a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801013a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801013e:	4642      	mov	r2, r8
 8010140:	4620      	mov	r0, r4
 8010142:	f7ff ff93 	bl	801006c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8010146:	2800      	cmp	r0, #0
 8010148:	d1e9      	bne.n	801011e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801014a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08010150 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8010150:	b570      	push	{r4, r5, r6, lr}
 8010152:	694a      	ldr	r2, [r1, #20]
 8010154:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8010156:	684b      	ldr	r3, [r1, #4]
 8010158:	1b54      	subs	r4, r2, r5
 801015a:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 801015c:	f000 8106 	beq.w	801036c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8010160:	1b9b      	subs	r3, r3, r6
 8010162:	d003      	beq.n	801016c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8010164:	4363      	muls	r3, r4
 8010166:	2210      	movs	r2, #16
 8010168:	fb93 f3f2 	sdiv	r3, r3, r2
 801016c:	680c      	ldr	r4, [r1, #0]
 801016e:	698a      	ldr	r2, [r1, #24]
 8010170:	1b65      	subs	r5, r4, r5
 8010172:	f000 80fd 	beq.w	8010370 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8010176:	1b92      	subs	r2, r2, r6
 8010178:	d003      	beq.n	8010182 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801017a:	436a      	muls	r2, r5
 801017c:	2410      	movs	r4, #16
 801017e:	fb92 f2f4 	sdiv	r2, r2, r4
 8010182:	1a9b      	subs	r3, r3, r2
 8010184:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 80103ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8010188:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801018c:	460a      	mov	r2, r1
 801018e:	ee07 3a90 	vmov	s15, r3
 8010192:	f100 040c 	add.w	r4, r0, #12
 8010196:	4603      	mov	r3, r0
 8010198:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801019c:	ee67 7a84 	vmul.f32	s15, s15, s8
 80101a0:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80101a4:	eeb1 6a43 	vneg.f32	s12, s6
 80101a8:	edd2 7a02 	vldr	s15, [r2, #8]
 80101ac:	3214      	adds	r2, #20
 80101ae:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80101b2:	ece3 6a01 	vstmia	r3!, {s13}
 80101b6:	429c      	cmp	r4, r3
 80101b8:	ed52 7a02 	vldr	s15, [r2, #-8]
 80101bc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80101c0:	edc3 7a02 	vstr	s15, [r3, #8]
 80101c4:	ed52 7a01 	vldr	s15, [r2, #-4]
 80101c8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80101cc:	edc3 7a05 	vstr	s15, [r3, #20]
 80101d0:	d1ea      	bne.n	80101a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80101d2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80101d4:	698b      	ldr	r3, [r1, #24]
 80101d6:	edd0 4a02 	vldr	s9, [r0, #8]
 80101da:	1a9b      	subs	r3, r3, r2
 80101dc:	edd0 3a00 	vldr	s7, [r0]
 80101e0:	edd0 6a01 	vldr	s13, [r0, #4]
 80101e4:	ee07 3a90 	vmov	s15, r3
 80101e8:	684b      	ldr	r3, [r1, #4]
 80101ea:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80101ee:	ed90 5a05 	vldr	s10, [r0, #20]
 80101f2:	1a9b      	subs	r3, r3, r2
 80101f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80101f8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80101fc:	ed90 2a03 	vldr	s4, [r0, #12]
 8010200:	ee07 3a10 	vmov	s14, r3
 8010204:	edd0 5a04 	vldr	s11, [r0, #16]
 8010208:	ee67 7a84 	vmul.f32	s15, s15, s8
 801020c:	ed90 1a07 	vldr	s2, [r0, #28]
 8010210:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010214:	edd0 2a06 	vldr	s5, [r0, #24]
 8010218:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801021c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8010220:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010224:	ee32 5a45 	vsub.f32	s10, s4, s10
 8010228:	eee6 7a87 	vfma.f32	s15, s13, s14
 801022c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8010230:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8010234:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8010236:	694a      	ldr	r2, [r1, #20]
 8010238:	1b13      	subs	r3, r2, r4
 801023a:	ee07 3a10 	vmov	s14, r3
 801023e:	680b      	ldr	r3, [r1, #0]
 8010240:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010244:	1b1b      	subs	r3, r3, r4
 8010246:	ee27 7a04 	vmul.f32	s14, s14, s8
 801024a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801024e:	ee07 3a10 	vmov	s14, r3
 8010252:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010256:	ee27 7a04 	vmul.f32	s14, s14, s8
 801025a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801025e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8010262:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8010266:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8010268:	698b      	ldr	r3, [r1, #24]
 801026a:	1a9b      	subs	r3, r3, r2
 801026c:	ee06 3a90 	vmov	s13, r3
 8010270:	684b      	ldr	r3, [r1, #4]
 8010272:	1a9b      	subs	r3, r3, r2
 8010274:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010278:	ee07 3a10 	vmov	s14, r3
 801027c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8010280:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010284:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8010288:	ee27 7a04 	vmul.f32	s14, s14, s8
 801028c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8010290:	ee66 6a83 	vmul.f32	s13, s13, s6
 8010294:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8010298:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801029a:	694a      	ldr	r2, [r1, #20]
 801029c:	1b13      	subs	r3, r2, r4
 801029e:	ee07 3a10 	vmov	s14, r3
 80102a2:	680b      	ldr	r3, [r1, #0]
 80102a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80102a8:	1b1b      	subs	r3, r3, r4
 80102aa:	ee27 7a04 	vmul.f32	s14, s14, s8
 80102ae:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80102b2:	ee07 3a10 	vmov	s14, r3
 80102b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80102ba:	ee27 7a04 	vmul.f32	s14, s14, s8
 80102be:	eea5 5a87 	vfma.f32	s10, s11, s14
 80102c2:	edd0 5a08 	vldr	s11, [r0, #32]
 80102c6:	ee31 1a65 	vsub.f32	s2, s2, s11
 80102ca:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80102ce:	ee25 5a06 	vmul.f32	s10, s10, s12
 80102d2:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 80102d6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80102d8:	698b      	ldr	r3, [r1, #24]
 80102da:	1a9b      	subs	r3, r3, r2
 80102dc:	ee07 3a10 	vmov	s14, r3
 80102e0:	684b      	ldr	r3, [r1, #4]
 80102e2:	1a9b      	subs	r3, r3, r2
 80102e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80102e8:	ee01 3a90 	vmov	s3, r3
 80102ec:	ee27 7a04 	vmul.f32	s14, s14, s8
 80102f0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80102f4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80102f8:	ee61 1a84 	vmul.f32	s3, s3, s8
 80102fc:	eea1 7a21 	vfma.f32	s14, s2, s3
 8010300:	ee27 7a03 	vmul.f32	s14, s14, s6
 8010304:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8010308:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801030a:	694a      	ldr	r2, [r1, #20]
 801030c:	1b13      	subs	r3, r2, r4
 801030e:	ee03 3a10 	vmov	s6, r3
 8010312:	680b      	ldr	r3, [r1, #0]
 8010314:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8010318:	1b1b      	subs	r3, r3, r4
 801031a:	ee23 3a04 	vmul.f32	s6, s6, s8
 801031e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8010322:	ee03 3a10 	vmov	s6, r3
 8010326:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801032a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801032e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8010332:	ee25 6a86 	vmul.f32	s12, s11, s12
 8010336:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801033a:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 801033e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8010342:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8010346:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801034a:	dd13      	ble.n	8010374 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801034c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8010350:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8010354:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8010356:	eee3 7a87 	vfma.f32	s15, s7, s14
 801035a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801035e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010362:	dd15      	ble.n	8010390 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8010364:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8010368:	6403      	str	r3, [r0, #64]	@ 0x40
 801036a:	bd70      	pop	{r4, r5, r6, pc}
 801036c:	4623      	mov	r3, r4
 801036e:	e6fd      	b.n	801016c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8010370:	462a      	mov	r2, r5
 8010372:	e706      	b.n	8010182 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8010374:	d502      	bpl.n	801037c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8010376:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801037a:	e7e9      	b.n	8010350 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801037c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8010380:	eea3 2a85 	vfma.f32	s4, s7, s10
 8010384:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8010388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801038c:	dade      	bge.n	801034c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801038e:	e7f2      	b.n	8010376 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8010390:	d502      	bpl.n	8010398 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8010392:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8010396:	e7e7      	b.n	8010368 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8010398:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801039c:	eee3 4a86 	vfma.f32	s9, s7, s12
 80103a0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80103a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80103a8:	dadc      	bge.n	8010364 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80103aa:	e7f2      	b.n	8010392 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80103ac:	3d800000 	.word	0x3d800000

080103b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80103b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80103b4:	2714      	movs	r7, #20
 80103b6:	435f      	muls	r7, r3
 80103b8:	eb02 0c07 	add.w	ip, r2, r7
 80103bc:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80103c0:	f115 0e0f 	adds.w	lr, r5, #15
 80103c4:	f100 80a2 	bmi.w	801050c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80103c8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80103cc:	9c08      	ldr	r4, [sp, #32]
 80103ce:	2614      	movs	r6, #20
 80103d0:	f8c0 e014 	str.w	lr, [r0, #20]
 80103d4:	4366      	muls	r6, r4
 80103d6:	eb02 0806 	add.w	r8, r2, r6
 80103da:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80103de:	f115 040f 	adds.w	r4, r5, #15
 80103e2:	f100 809f 	bmi.w	8010524 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80103e6:	1124      	asrs	r4, r4, #4
 80103e8:	eba4 040e 	sub.w	r4, r4, lr
 80103ec:	6184      	str	r4, [r0, #24]
 80103ee:	2c00      	cmp	r4, #0
 80103f0:	f000 808a 	beq.w	8010508 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80103f4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80103f8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80103fc:	5995      	ldr	r5, [r2, r6]
 80103fe:	eba4 0809 	sub.w	r8, r4, r9
 8010402:	59d4      	ldr	r4, [r2, r7]
 8010404:	eba5 0a04 	sub.w	sl, r5, r4
 8010408:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801040c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8010410:	fb0e fe05 	mul.w	lr, lr, r5
 8010414:	fb0a ee19 	mls	lr, sl, r9, lr
 8010418:	fb08 e404 	mla	r4, r8, r4, lr
 801041c:	3c01      	subs	r4, #1
 801041e:	19a4      	adds	r4, r4, r6
 8010420:	f100 808c 	bmi.w	801053c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8010424:	fb94 fef6 	sdiv	lr, r4, r6
 8010428:	fb06 441e 	mls	r4, r6, lr, r4
 801042c:	f8c0 e000 	str.w	lr, [r0]
 8010430:	6104      	str	r4, [r0, #16]
 8010432:	2d00      	cmp	r5, #0
 8010434:	f2c0 8095 	blt.w	8010562 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8010438:	fb95 f4f6 	sdiv	r4, r5, r6
 801043c:	fb06 5514 	mls	r5, r6, r4, r5
 8010440:	6044      	str	r4, [r0, #4]
 8010442:	6085      	str	r5, [r0, #8]
 8010444:	60c6      	str	r6, [r0, #12]
 8010446:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801044a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801044e:	6945      	ldr	r5, [r0, #20]
 8010450:	59d2      	ldr	r2, [r2, r7]
 8010452:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8010456:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 8010584 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801045a:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801045e:	ee07 4a10 	vmov	s14, r4
 8010462:	6804      	ldr	r4, [r0, #0]
 8010464:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8010468:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801046c:	ee07 2a90 	vmov	s15, r2
 8010470:	ee27 7a26 	vmul.f32	s14, s14, s13
 8010474:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010478:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801047c:	edd3 6a00 	vldr	s13, [r3]
 8010480:	eee6 6a07 	vfma.f32	s13, s12, s14
 8010484:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8010488:	eee6 6a27 	vfma.f32	s13, s12, s15
 801048c:	edc0 6a07 	vstr	s13, [r0, #28]
 8010490:	edd0 6a01 	vldr	s13, [r0, #4]
 8010494:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8010498:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801049c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80104a0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80104a4:	ed80 6a08 	vstr	s12, [r0, #32]
 80104a8:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 80104aa:	6242      	str	r2, [r0, #36]	@ 0x24
 80104ac:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 80104b0:	ed93 6a03 	vldr	s12, [r3, #12]
 80104b4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80104b8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80104bc:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80104c0:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 80104c4:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80104c8:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 80104cc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80104d0:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 80104d4:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80104d6:	6302      	str	r2, [r0, #48]	@ 0x30
 80104d8:	ed93 6a06 	vldr	s12, [r3, #24]
 80104dc:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 80104e0:	eea5 6a87 	vfma.f32	s12, s11, s14
 80104e4:	eeb0 7a46 	vmov.f32	s14, s12
 80104e8:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 80104ec:	eea6 7a27 	vfma.f32	s14, s12, s15
 80104f0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80104f4:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 80104f8:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 80104fc:	eee6 7a87 	vfma.f32	s15, s13, s14
 8010500:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8010504:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8010506:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8010508:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801050c:	2410      	movs	r4, #16
 801050e:	f1c5 0501 	rsb	r5, r5, #1
 8010512:	fb9e fef4 	sdiv	lr, lr, r4
 8010516:	f015 050f 	ands.w	r5, r5, #15
 801051a:	bf18      	it	ne
 801051c:	2501      	movne	r5, #1
 801051e:	ebae 0e05 	sub.w	lr, lr, r5
 8010522:	e753      	b.n	80103cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8010524:	f04f 0910 	mov.w	r9, #16
 8010528:	f1c5 0501 	rsb	r5, r5, #1
 801052c:	fb94 f4f9 	sdiv	r4, r4, r9
 8010530:	f015 050f 	ands.w	r5, r5, #15
 8010534:	bf18      	it	ne
 8010536:	2501      	movne	r5, #1
 8010538:	1b64      	subs	r4, r4, r5
 801053a:	e755      	b.n	80103e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801053c:	4264      	negs	r4, r4
 801053e:	fb94 fef6 	sdiv	lr, r4, r6
 8010542:	f1ce 0800 	rsb	r8, lr, #0
 8010546:	fb06 441e 	mls	r4, r6, lr, r4
 801054a:	f8c0 8000 	str.w	r8, [r0]
 801054e:	6104      	str	r4, [r0, #16]
 8010550:	2c00      	cmp	r4, #0
 8010552:	f43f af6e 	beq.w	8010432 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8010556:	ea6f 0e0e 	mvn.w	lr, lr
 801055a:	1b34      	subs	r4, r6, r4
 801055c:	f8c0 e000 	str.w	lr, [r0]
 8010560:	e766      	b.n	8010430 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8010562:	426d      	negs	r5, r5
 8010564:	fb95 f4f6 	sdiv	r4, r5, r6
 8010568:	f1c4 0e00 	rsb	lr, r4, #0
 801056c:	fb06 5514 	mls	r5, r6, r4, r5
 8010570:	f8c0 e004 	str.w	lr, [r0, #4]
 8010574:	6085      	str	r5, [r0, #8]
 8010576:	2d00      	cmp	r5, #0
 8010578:	f43f af64 	beq.w	8010444 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801057c:	43e4      	mvns	r4, r4
 801057e:	1b75      	subs	r5, r6, r5
 8010580:	6044      	str	r4, [r0, #4]
 8010582:	e75e      	b.n	8010442 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8010584:	3d800000 	.word	0x3d800000

08010588 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8010588:	4602      	mov	r2, r0
 801058a:	b148      	cbz	r0, 80105a0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801058c:	2300      	movs	r3, #0
 801058e:	b298      	uxth	r0, r3
 8010590:	3301      	adds	r3, #1
 8010592:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8010596:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801059a:	2900      	cmp	r1, #0
 801059c:	d1f7      	bne.n	801058e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801059e:	4770      	bx	lr
 80105a0:	4770      	bx	lr

080105a2 <_ZN8touchgfx7Unicode7strncpyEPtPKtt>:
 80105a2:	b530      	push	{r4, r5, lr}
 80105a4:	4604      	mov	r4, r0
 80105a6:	b161      	cbz	r1, 80105c2 <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0x20>
 80105a8:	b150      	cbz	r0, 80105c0 <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0x1e>
 80105aa:	2300      	movs	r3, #0
 80105ac:	b298      	uxth	r0, r3
 80105ae:	4290      	cmp	r0, r2
 80105b0:	d206      	bcs.n	80105c0 <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0x1e>
 80105b2:	f831 5013 	ldrh.w	r5, [r1, r3, lsl #1]
 80105b6:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80105ba:	3301      	adds	r3, #1
 80105bc:	2d00      	cmp	r5, #0
 80105be:	d1f5      	bne.n	80105ac <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0xa>
 80105c0:	bd30      	pop	{r4, r5, pc}
 80105c2:	4608      	mov	r0, r1
 80105c4:	e7fc      	b.n	80105c0 <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0x1e>

080105c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80105c6:	b530      	push	{r4, r5, lr}
 80105c8:	4604      	mov	r4, r0
 80105ca:	b159      	cbz	r1, 80105e4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80105cc:	b148      	cbz	r0, 80105e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80105ce:	2300      	movs	r3, #0
 80105d0:	b298      	uxth	r0, r3
 80105d2:	4282      	cmp	r2, r0
 80105d4:	d905      	bls.n	80105e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80105d6:	5ccd      	ldrb	r5, [r1, r3]
 80105d8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80105dc:	3301      	adds	r3, #1
 80105de:	2d00      	cmp	r5, #0
 80105e0:	d1f6      	bne.n	80105d0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80105e2:	bd30      	pop	{r4, r5, pc}
 80105e4:	4608      	mov	r0, r1
 80105e6:	e7fc      	b.n	80105e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080105e8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80105e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80105ea:	b08b      	sub	sp, #44	@ 0x2c
 80105ec:	468c      	mov	ip, r1
 80105ee:	4604      	mov	r4, r0
 80105f0:	2100      	movs	r1, #0
 80105f2:	261f      	movs	r6, #31
 80105f4:	af01      	add	r7, sp, #4
 80105f6:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 80105fa:	1e71      	subs	r1, r6, #1
 80105fc:	fb94 fef3 	sdiv	lr, r4, r3
 8010600:	fb03 441e 	mls	r4, r3, lr, r4
 8010604:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8010608:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801060c:	b2ec      	uxtb	r4, r5
 801060e:	2d09      	cmp	r5, #9
 8010610:	bfd4      	ite	le
 8010612:	3430      	addle	r4, #48	@ 0x30
 8010614:	3457      	addgt	r4, #87	@ 0x57
 8010616:	b2e4      	uxtb	r4, r4
 8010618:	55bc      	strb	r4, [r7, r6]
 801061a:	4674      	mov	r4, lr
 801061c:	b974      	cbnz	r4, 801063c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801061e:	2800      	cmp	r0, #0
 8010620:	da05      	bge.n	801062e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8010622:	ab0a      	add	r3, sp, #40	@ 0x28
 8010624:	4419      	add	r1, r3
 8010626:	232d      	movs	r3, #45	@ 0x2d
 8010628:	f801 3c24 	strb.w	r3, [r1, #-36]
 801062c:	1eb1      	subs	r1, r6, #2
 801062e:	3101      	adds	r1, #1
 8010630:	4660      	mov	r0, ip
 8010632:	4439      	add	r1, r7
 8010634:	f7ff ffc7 	bl	80105c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8010638:	b00b      	add	sp, #44	@ 0x2c
 801063a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801063c:	460e      	mov	r6, r1
 801063e:	e7dc      	b.n	80105fa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08010640 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8010640:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010642:	468c      	mov	ip, r1
 8010644:	b08b      	sub	sp, #44	@ 0x2c
 8010646:	2100      	movs	r1, #0
 8010648:	ae01      	add	r6, sp, #4
 801064a:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 801064e:	211f      	movs	r1, #31
 8010650:	fbb0 f7f3 	udiv	r7, r0, r3
 8010654:	fb03 0517 	mls	r5, r3, r7, r0
 8010658:	4638      	mov	r0, r7
 801065a:	b2ec      	uxtb	r4, r5
 801065c:	2d09      	cmp	r5, #9
 801065e:	bfd4      	ite	le
 8010660:	3430      	addle	r4, #48	@ 0x30
 8010662:	3457      	addgt	r4, #87	@ 0x57
 8010664:	b2e4      	uxtb	r4, r4
 8010666:	558c      	strb	r4, [r1, r6]
 8010668:	1e4c      	subs	r4, r1, #1
 801066a:	b92f      	cbnz	r7, 8010678 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801066c:	4431      	add	r1, r6
 801066e:	4660      	mov	r0, ip
 8010670:	f7ff ffa9 	bl	80105c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8010674:	b00b      	add	sp, #44	@ 0x2c
 8010676:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010678:	4621      	mov	r1, r4
 801067a:	e7e9      	b.n	8010650 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801067c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801067c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010680:	b085      	sub	sp, #20
 8010682:	4691      	mov	r9, r2
 8010684:	6802      	ldr	r2, [r0, #0]
 8010686:	4688      	mov	r8, r1
 8010688:	461c      	mov	r4, r3
 801068a:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 801068e:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8010692:	4683      	mov	fp, r0
 8010694:	4610      	mov	r0, r2
 8010696:	9103      	str	r1, [sp, #12]
 8010698:	9302      	str	r3, [sp, #8]
 801069a:	9201      	str	r2, [sp, #4]
 801069c:	f7ff ff74 	bl	8010588 <_ZN8touchgfx7Unicode6strlenEPKt>
 80106a0:	f1b8 0f00 	cmp.w	r8, #0
 80106a4:	bf0c      	ite	eq
 80106a6:	4684      	moveq	ip, r0
 80106a8:	f100 0c01 	addne.w	ip, r0, #1
 80106ac:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 80106b0:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 80106b4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80106b6:	fa1f fc8c 	uxth.w	ip, ip
 80106ba:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80106bc:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 80106c0:	9903      	ldr	r1, [sp, #12]
 80106c2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80106c6:	d041      	beq.n	801074c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80106c8:	d834      	bhi.n	8010734 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80106ca:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 80106ce:	d059      	beq.n	8010784 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80106d0:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 80106d4:	d03a      	beq.n	801074c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80106d6:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 80106da:	d034      	beq.n	8010746 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80106dc:	2400      	movs	r4, #0
 80106de:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 80106e2:	3a01      	subs	r2, #1
 80106e4:	b169      	cbz	r1, 8010702 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80106e6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80106e8:	458c      	cmp	ip, r1
 80106ea:	da09      	bge.n	8010700 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80106ec:	eba1 010c 	sub.w	r1, r1, ip
 80106f0:	b289      	uxth	r1, r1
 80106f2:	b933      	cbnz	r3, 8010702 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80106f4:	2e00      	cmp	r6, #0
 80106f6:	d051      	beq.n	801079c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80106f8:	2800      	cmp	r0, #0
 80106fa:	d04f      	beq.n	801079c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80106fc:	440c      	add	r4, r1
 80106fe:	b2a4      	uxth	r4, r4
 8010700:	2100      	movs	r1, #0
 8010702:	682b      	ldr	r3, [r5, #0]
 8010704:	4293      	cmp	r3, r2
 8010706:	da07      	bge.n	8010718 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8010708:	f1b8 0f00 	cmp.w	r8, #0
 801070c:	d004      	beq.n	8010718 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801070e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8010712:	682b      	ldr	r3, [r5, #0]
 8010714:	3301      	adds	r3, #1
 8010716:	602b      	str	r3, [r5, #0]
 8010718:	2730      	movs	r7, #48	@ 0x30
 801071a:	2c00      	cmp	r4, #0
 801071c:	d04e      	beq.n	80107bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801071e:	682e      	ldr	r6, [r5, #0]
 8010720:	3c01      	subs	r4, #1
 8010722:	42b2      	cmp	r2, r6
 8010724:	b2a4      	uxth	r4, r4
 8010726:	dd49      	ble.n	80107bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8010728:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801072c:	682b      	ldr	r3, [r5, #0]
 801072e:	3301      	adds	r3, #1
 8010730:	602b      	str	r3, [r5, #0]
 8010732:	e7f2      	b.n	801071a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8010734:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8010738:	d01d      	beq.n	8010776 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801073a:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 801073e:	d002      	beq.n	8010746 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8010740:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8010744:	e7c9      	b.n	80106da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8010746:	4684      	mov	ip, r0
 8010748:	f04f 0800 	mov.w	r8, #0
 801074c:	2c00      	cmp	r4, #0
 801074e:	d0c6      	beq.n	80106de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010750:	b947      	cbnz	r7, 8010764 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8010752:	2801      	cmp	r0, #1
 8010754:	d106      	bne.n	8010764 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8010756:	8814      	ldrh	r4, [r2, #0]
 8010758:	2c30      	cmp	r4, #48	@ 0x30
 801075a:	bf02      	ittt	eq
 801075c:	3202      	addeq	r2, #2
 801075e:	4638      	moveq	r0, r7
 8010760:	f8cb 2000 	streq.w	r2, [fp]
 8010764:	45bc      	cmp	ip, r7
 8010766:	da14      	bge.n	8010792 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8010768:	b2bf      	uxth	r7, r7
 801076a:	eba7 040c 	sub.w	r4, r7, ip
 801076e:	46bc      	mov	ip, r7
 8010770:	b2a4      	uxth	r4, r4
 8010772:	2600      	movs	r6, #0
 8010774:	e7b3      	b.n	80106de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010776:	4684      	mov	ip, r0
 8010778:	b16c      	cbz	r4, 8010796 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801077a:	42b8      	cmp	r0, r7
 801077c:	dd00      	ble.n	8010780 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801077e:	b2b8      	uxth	r0, r7
 8010780:	2400      	movs	r4, #0
 8010782:	e003      	b.n	801078c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8010784:	f04f 0c01 	mov.w	ip, #1
 8010788:	2400      	movs	r4, #0
 801078a:	4660      	mov	r0, ip
 801078c:	4626      	mov	r6, r4
 801078e:	46a0      	mov	r8, r4
 8010790:	e7a5      	b.n	80106de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010792:	2400      	movs	r4, #0
 8010794:	e7ed      	b.n	8010772 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8010796:	4626      	mov	r6, r4
 8010798:	46a0      	mov	r8, r4
 801079a:	e7a0      	b.n	80106de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801079c:	2900      	cmp	r1, #0
 801079e:	d0b0      	beq.n	8010702 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80107a0:	2720      	movs	r7, #32
 80107a2:	682e      	ldr	r6, [r5, #0]
 80107a4:	2900      	cmp	r1, #0
 80107a6:	d0ac      	beq.n	8010702 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80107a8:	3901      	subs	r1, #1
 80107aa:	4296      	cmp	r6, r2
 80107ac:	b289      	uxth	r1, r1
 80107ae:	daa7      	bge.n	8010700 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80107b0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80107b4:	682b      	ldr	r3, [r5, #0]
 80107b6:	3301      	adds	r3, #1
 80107b8:	602b      	str	r3, [r5, #0]
 80107ba:	e7f2      	b.n	80107a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80107bc:	b188      	cbz	r0, 80107e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80107be:	682b      	ldr	r3, [r5, #0]
 80107c0:	3801      	subs	r0, #1
 80107c2:	429a      	cmp	r2, r3
 80107c4:	b280      	uxth	r0, r0
 80107c6:	dd0c      	ble.n	80107e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80107c8:	f8db 3000 	ldr.w	r3, [fp]
 80107cc:	1c9c      	adds	r4, r3, #2
 80107ce:	f8cb 4000 	str.w	r4, [fp]
 80107d2:	881c      	ldrh	r4, [r3, #0]
 80107d4:	682b      	ldr	r3, [r5, #0]
 80107d6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80107da:	682b      	ldr	r3, [r5, #0]
 80107dc:	3301      	adds	r3, #1
 80107de:	602b      	str	r3, [r5, #0]
 80107e0:	e7ec      	b.n	80107bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80107e2:	2620      	movs	r6, #32
 80107e4:	b151      	cbz	r1, 80107fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80107e6:	6828      	ldr	r0, [r5, #0]
 80107e8:	3901      	subs	r1, #1
 80107ea:	4282      	cmp	r2, r0
 80107ec:	b289      	uxth	r1, r1
 80107ee:	dd05      	ble.n	80107fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80107f0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80107f4:	682b      	ldr	r3, [r5, #0]
 80107f6:	3301      	adds	r3, #1
 80107f8:	602b      	str	r3, [r5, #0]
 80107fa:	e7f3      	b.n	80107e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80107fc:	b005      	add	sp, #20
 80107fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010802 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8010802:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010806:	2400      	movs	r4, #0
 8010808:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801080c:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8010810:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8010814:	8014      	strh	r4, [r2, #0]
 8010816:	701c      	strb	r4, [r3, #0]
 8010818:	f888 4000 	strb.w	r4, [r8]
 801081c:	f88c 4000 	strb.w	r4, [ip]
 8010820:	f88e 4000 	strb.w	r4, [lr]
 8010824:	703c      	strb	r4, [r7, #0]
 8010826:	6804      	ldr	r4, [r0, #0]
 8010828:	b1a4      	cbz	r4, 8010854 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801082a:	8824      	ldrh	r4, [r4, #0]
 801082c:	f04f 0901 	mov.w	r9, #1
 8010830:	b314      	cbz	r4, 8010878 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8010832:	2c2b      	cmp	r4, #43	@ 0x2b
 8010834:	d001      	beq.n	801083a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8010836:	2c20      	cmp	r4, #32
 8010838:	d110      	bne.n	801085c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801083a:	8014      	strh	r4, [r2, #0]
 801083c:	6804      	ldr	r4, [r0, #0]
 801083e:	b10c      	cbz	r4, 8010844 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8010840:	3402      	adds	r4, #2
 8010842:	6004      	str	r4, [r0, #0]
 8010844:	680c      	ldr	r4, [r1, #0]
 8010846:	b10c      	cbz	r4, 801084c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8010848:	3401      	adds	r4, #1
 801084a:	600c      	str	r4, [r1, #0]
 801084c:	6804      	ldr	r4, [r0, #0]
 801084e:	b17c      	cbz	r4, 8010870 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8010850:	8824      	ldrh	r4, [r4, #0]
 8010852:	e7ed      	b.n	8010830 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8010854:	680c      	ldr	r4, [r1, #0]
 8010856:	b17c      	cbz	r4, 8010878 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8010858:	7824      	ldrb	r4, [r4, #0]
 801085a:	e7e7      	b.n	801082c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801085c:	2c2d      	cmp	r4, #45	@ 0x2d
 801085e:	d102      	bne.n	8010866 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8010860:	f883 9000 	strb.w	r9, [r3]
 8010864:	e7ea      	b.n	801083c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8010866:	2c23      	cmp	r4, #35	@ 0x23
 8010868:	d107      	bne.n	801087a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801086a:	f888 9000 	strb.w	r9, [r8]
 801086e:	e7e5      	b.n	801083c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8010870:	680c      	ldr	r4, [r1, #0]
 8010872:	b10c      	cbz	r4, 8010878 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8010874:	7824      	ldrb	r4, [r4, #0]
 8010876:	e7db      	b.n	8010830 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8010878:	2400      	movs	r4, #0
 801087a:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 801087e:	2b09      	cmp	r3, #9
 8010880:	d901      	bls.n	8010886 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8010882:	2c2a      	cmp	r4, #42	@ 0x2a
 8010884:	d122      	bne.n	80108cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8010886:	2301      	movs	r3, #1
 8010888:	2c30      	cmp	r4, #48	@ 0x30
 801088a:	f88e 3000 	strb.w	r3, [lr]
 801088e:	d10d      	bne.n	80108ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8010890:	f88c 3000 	strb.w	r3, [ip]
 8010894:	6803      	ldr	r3, [r0, #0]
 8010896:	b10b      	cbz	r3, 801089c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8010898:	3302      	adds	r3, #2
 801089a:	6003      	str	r3, [r0, #0]
 801089c:	680b      	ldr	r3, [r1, #0]
 801089e:	b10b      	cbz	r3, 80108a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80108a0:	3301      	adds	r3, #1
 80108a2:	600b      	str	r3, [r1, #0]
 80108a4:	6803      	ldr	r3, [r0, #0]
 80108a6:	2b00      	cmp	r3, #0
 80108a8:	d02f      	beq.n	801090a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80108aa:	881c      	ldrh	r4, [r3, #0]
 80108ac:	2c2a      	cmp	r4, #42	@ 0x2a
 80108ae:	d135      	bne.n	801091c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80108b0:	f04f 33ff 	mov.w	r3, #4294967295
 80108b4:	6033      	str	r3, [r6, #0]
 80108b6:	6803      	ldr	r3, [r0, #0]
 80108b8:	b10b      	cbz	r3, 80108be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80108ba:	3302      	adds	r3, #2
 80108bc:	6003      	str	r3, [r0, #0]
 80108be:	680b      	ldr	r3, [r1, #0]
 80108c0:	b10b      	cbz	r3, 80108c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80108c2:	3301      	adds	r3, #1
 80108c4:	600b      	str	r3, [r1, #0]
 80108c6:	6803      	ldr	r3, [r0, #0]
 80108c8:	b31b      	cbz	r3, 8010912 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80108ca:	881c      	ldrh	r4, [r3, #0]
 80108cc:	2c2e      	cmp	r4, #46	@ 0x2e
 80108ce:	d11a      	bne.n	8010906 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80108d0:	2301      	movs	r3, #1
 80108d2:	703b      	strb	r3, [r7, #0]
 80108d4:	6803      	ldr	r3, [r0, #0]
 80108d6:	b10b      	cbz	r3, 80108dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80108d8:	3302      	adds	r3, #2
 80108da:	6003      	str	r3, [r0, #0]
 80108dc:	680b      	ldr	r3, [r1, #0]
 80108de:	b10b      	cbz	r3, 80108e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80108e0:	3301      	adds	r3, #1
 80108e2:	600b      	str	r3, [r1, #0]
 80108e4:	6803      	ldr	r3, [r0, #0]
 80108e6:	2b00      	cmp	r3, #0
 80108e8:	d036      	beq.n	8010958 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 80108ea:	881b      	ldrh	r3, [r3, #0]
 80108ec:	2b2a      	cmp	r3, #42	@ 0x2a
 80108ee:	d137      	bne.n	8010960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80108f0:	f04f 33ff 	mov.w	r3, #4294967295
 80108f4:	602b      	str	r3, [r5, #0]
 80108f6:	6803      	ldr	r3, [r0, #0]
 80108f8:	b10b      	cbz	r3, 80108fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80108fa:	3302      	adds	r3, #2
 80108fc:	6003      	str	r3, [r0, #0]
 80108fe:	680b      	ldr	r3, [r1, #0]
 8010900:	b10b      	cbz	r3, 8010906 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010902:	3301      	adds	r3, #1
 8010904:	600b      	str	r3, [r1, #0]
 8010906:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801090a:	680c      	ldr	r4, [r1, #0]
 801090c:	b134      	cbz	r4, 801091c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801090e:	7824      	ldrb	r4, [r4, #0]
 8010910:	e7cc      	b.n	80108ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8010912:	680b      	ldr	r3, [r1, #0]
 8010914:	2b00      	cmp	r3, #0
 8010916:	d0f6      	beq.n	8010906 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010918:	781c      	ldrb	r4, [r3, #0]
 801091a:	e7d7      	b.n	80108cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801091c:	2300      	movs	r3, #0
 801091e:	220a      	movs	r2, #10
 8010920:	6033      	str	r3, [r6, #0]
 8010922:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8010926:	fa1f f38c 	uxth.w	r3, ip
 801092a:	2b09      	cmp	r3, #9
 801092c:	d8ce      	bhi.n	80108cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801092e:	6833      	ldr	r3, [r6, #0]
 8010930:	fb02 c303 	mla	r3, r2, r3, ip
 8010934:	6033      	str	r3, [r6, #0]
 8010936:	6803      	ldr	r3, [r0, #0]
 8010938:	b10b      	cbz	r3, 801093e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801093a:	3302      	adds	r3, #2
 801093c:	6003      	str	r3, [r0, #0]
 801093e:	680b      	ldr	r3, [r1, #0]
 8010940:	b10b      	cbz	r3, 8010946 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8010942:	3301      	adds	r3, #1
 8010944:	600b      	str	r3, [r1, #0]
 8010946:	6803      	ldr	r3, [r0, #0]
 8010948:	b10b      	cbz	r3, 801094e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801094a:	881c      	ldrh	r4, [r3, #0]
 801094c:	e7e9      	b.n	8010922 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801094e:	680c      	ldr	r4, [r1, #0]
 8010950:	2c00      	cmp	r4, #0
 8010952:	d0e6      	beq.n	8010922 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010954:	7824      	ldrb	r4, [r4, #0]
 8010956:	e7e4      	b.n	8010922 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010958:	680b      	ldr	r3, [r1, #0]
 801095a:	b10b      	cbz	r3, 8010960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801095c:	781b      	ldrb	r3, [r3, #0]
 801095e:	e7c5      	b.n	80108ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8010960:	2200      	movs	r2, #0
 8010962:	240a      	movs	r4, #10
 8010964:	602a      	str	r2, [r5, #0]
 8010966:	3b30      	subs	r3, #48	@ 0x30
 8010968:	682a      	ldr	r2, [r5, #0]
 801096a:	b29e      	uxth	r6, r3
 801096c:	2e09      	cmp	r6, #9
 801096e:	d813      	bhi.n	8010998 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8010970:	fb04 3302 	mla	r3, r4, r2, r3
 8010974:	602b      	str	r3, [r5, #0]
 8010976:	6803      	ldr	r3, [r0, #0]
 8010978:	b10b      	cbz	r3, 801097e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801097a:	3302      	adds	r3, #2
 801097c:	6003      	str	r3, [r0, #0]
 801097e:	680b      	ldr	r3, [r1, #0]
 8010980:	b10b      	cbz	r3, 8010986 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8010982:	3301      	adds	r3, #1
 8010984:	600b      	str	r3, [r1, #0]
 8010986:	6803      	ldr	r3, [r0, #0]
 8010988:	b10b      	cbz	r3, 801098e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801098a:	881b      	ldrh	r3, [r3, #0]
 801098c:	e7eb      	b.n	8010966 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801098e:	680b      	ldr	r3, [r1, #0]
 8010990:	2b00      	cmp	r3, #0
 8010992:	d0e8      	beq.n	8010966 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010994:	781b      	ldrb	r3, [r3, #0]
 8010996:	e7e6      	b.n	8010966 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010998:	2a06      	cmp	r2, #6
 801099a:	bfa8      	it	ge
 801099c:	2206      	movge	r2, #6
 801099e:	602a      	str	r2, [r5, #0]
 80109a0:	e7b1      	b.n	8010906 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080109a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80109a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109a6:	b0a3      	sub	sp, #140	@ 0x8c
 80109a8:	2600      	movs	r6, #0
 80109aa:	4607      	mov	r7, r0
 80109ac:	4688      	mov	r8, r1
 80109ae:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 80109b2:	4631      	mov	r1, r6
 80109b4:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 80109b6:	4648      	mov	r0, r9
 80109b8:	960d      	str	r6, [sp, #52]	@ 0x34
 80109ba:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80109be:	2242      	movs	r2, #66	@ 0x42
 80109c0:	f00e f954 	bl	801ec6c <memset>
 80109c4:	b15f      	cbz	r7, 80109de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80109c6:	f108 3aff 	add.w	sl, r8, #4294967295
 80109ca:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80109cc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80109ce:	b152      	cbz	r2, 80109e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 80109d0:	8812      	ldrh	r2, [r2, #0]
 80109d2:	b10a      	cbz	r2, 80109d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80109d4:	459a      	cmp	sl, r3
 80109d6:	dc2e      	bgt.n	8010a36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 80109d8:	2200      	movs	r2, #0
 80109da:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80109de:	4638      	mov	r0, r7
 80109e0:	b023      	add	sp, #140	@ 0x8c
 80109e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80109e6:	9a08      	ldr	r2, [sp, #32]
 80109e8:	2a00      	cmp	r2, #0
 80109ea:	d0f5      	beq.n	80109d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80109ec:	7812      	ldrb	r2, [r2, #0]
 80109ee:	e7f0      	b.n	80109d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 80109f0:	2d00      	cmp	r5, #0
 80109f2:	d0ea      	beq.n	80109ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80109f4:	782a      	ldrb	r2, [r5, #0]
 80109f6:	b142      	cbz	r2, 8010a0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 80109f8:	2a25      	cmp	r2, #37	@ 0x25
 80109fa:	d001      	beq.n	8010a00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 80109fc:	459a      	cmp	sl, r3
 80109fe:	dc08      	bgt.n	8010a12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8010a00:	f1bb 0f00 	cmp.w	fp, #0
 8010a04:	d121      	bne.n	8010a4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8010a06:	2d00      	cmp	r5, #0
 8010a08:	d0df      	beq.n	80109ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010a0a:	782a      	ldrb	r2, [r5, #0]
 8010a0c:	f04f 0b00 	mov.w	fp, #0
 8010a10:	e01d      	b.n	8010a4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8010a12:	f1bb 0f00 	cmp.w	fp, #0
 8010a16:	d077      	beq.n	8010b08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 8010a18:	f8bb 2000 	ldrh.w	r2, [fp]
 8010a1c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8010a20:	f1bb 0f00 	cmp.w	fp, #0
 8010a24:	d002      	beq.n	8010a2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8010a26:	f10b 0202 	add.w	r2, fp, #2
 8010a2a:	9209      	str	r2, [sp, #36]	@ 0x24
 8010a2c:	b10d      	cbz	r5, 8010a32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8010a2e:	3501      	adds	r5, #1
 8010a30:	9508      	str	r5, [sp, #32]
 8010a32:	3301      	adds	r3, #1
 8010a34:	930d      	str	r3, [sp, #52]	@ 0x34
 8010a36:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010a38:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8010a3c:	f1bb 0f00 	cmp.w	fp, #0
 8010a40:	d0d6      	beq.n	80109f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8010a42:	f8bb 2000 	ldrh.w	r2, [fp]
 8010a46:	2a00      	cmp	r2, #0
 8010a48:	d1d6      	bne.n	80109f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8010a4a:	f8bb 2000 	ldrh.w	r2, [fp]
 8010a4e:	2a00      	cmp	r2, #0
 8010a50:	d0bb      	beq.n	80109ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010a52:	459a      	cmp	sl, r3
 8010a54:	ddb9      	ble.n	80109ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010a56:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8010a5a:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8010a5e:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8010a62:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8010a66:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8010a6a:	960e      	str	r6, [sp, #56]	@ 0x38
 8010a6c:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8010a70:	960f      	str	r6, [sp, #60]	@ 0x3c
 8010a72:	f1bb 0f00 	cmp.w	fp, #0
 8010a76:	d002      	beq.n	8010a7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8010a78:	f10b 0302 	add.w	r3, fp, #2
 8010a7c:	9309      	str	r3, [sp, #36]	@ 0x24
 8010a7e:	b10d      	cbz	r5, 8010a84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8010a80:	1c6b      	adds	r3, r5, #1
 8010a82:	9308      	str	r3, [sp, #32]
 8010a84:	ab0f      	add	r3, sp, #60	@ 0x3c
 8010a86:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8010a8a:	a908      	add	r1, sp, #32
 8010a8c:	a809      	add	r0, sp, #36	@ 0x24
 8010a8e:	9305      	str	r3, [sp, #20]
 8010a90:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8010a94:	9304      	str	r3, [sp, #16]
 8010a96:	ab0e      	add	r3, sp, #56	@ 0x38
 8010a98:	9303      	str	r3, [sp, #12]
 8010a9a:	ab0c      	add	r3, sp, #48	@ 0x30
 8010a9c:	9302      	str	r3, [sp, #8]
 8010a9e:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8010aa2:	9301      	str	r3, [sp, #4]
 8010aa4:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8010aa8:	9300      	str	r3, [sp, #0]
 8010aaa:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8010aae:	f7ff fea8 	bl	8010802 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8010ab2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010ab4:	2b00      	cmp	r3, #0
 8010ab6:	bfbf      	itttt	lt
 8010ab8:	6823      	ldrlt	r3, [r4, #0]
 8010aba:	3404      	addlt	r4, #4
 8010abc:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8010ac0:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8010ac2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8010ac4:	2b00      	cmp	r3, #0
 8010ac6:	bfbe      	ittt	lt
 8010ac8:	6823      	ldrlt	r3, [r4, #0]
 8010aca:	3404      	addlt	r4, #4
 8010acc:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8010ad0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8010ad4:	bfb8      	it	lt
 8010ad6:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8010ad8:	b1d9      	cbz	r1, 8010b12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 8010ada:	880b      	ldrh	r3, [r1, #0]
 8010adc:	2b69      	cmp	r3, #105	@ 0x69
 8010ade:	d01f      	beq.n	8010b20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010ae0:	d82f      	bhi.n	8010b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 8010ae2:	2b58      	cmp	r3, #88	@ 0x58
 8010ae4:	d01c      	beq.n	8010b20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010ae6:	d818      	bhi.n	8010b1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 8010ae8:	2b25      	cmp	r3, #37	@ 0x25
 8010aea:	d034      	beq.n	8010b56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 8010aec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010aee:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8010af2:	f1bb 0f00 	cmp.w	fp, #0
 8010af6:	f000 80b7 	beq.w	8010c68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 8010afa:	f8bb 5000 	ldrh.w	r5, [fp]
 8010afe:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8010b02:	3301      	adds	r3, #1
 8010b04:	930d      	str	r3, [sp, #52]	@ 0x34
 8010b06:	e029      	b.n	8010b5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8010b08:	b10d      	cbz	r5, 8010b0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 8010b0a:	782a      	ldrb	r2, [r5, #0]
 8010b0c:	e786      	b.n	8010a1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8010b0e:	462a      	mov	r2, r5
 8010b10:	e784      	b.n	8010a1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8010b12:	2a00      	cmp	r2, #0
 8010b14:	d0ea      	beq.n	8010aec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8010b16:	7813      	ldrb	r3, [r2, #0]
 8010b18:	e7e0      	b.n	8010adc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 8010b1a:	3b63      	subs	r3, #99	@ 0x63
 8010b1c:	2b01      	cmp	r3, #1
 8010b1e:	d8e5      	bhi.n	8010aec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8010b20:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8010b24:	b329      	cbz	r1, 8010b72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 8010b26:	880b      	ldrh	r3, [r1, #0]
 8010b28:	2b69      	cmp	r3, #105	@ 0x69
 8010b2a:	d063      	beq.n	8010bf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8010b2c:	d825      	bhi.n	8010b7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 8010b2e:	2b63      	cmp	r3, #99	@ 0x63
 8010b30:	d038      	beq.n	8010ba4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 8010b32:	2b64      	cmp	r3, #100	@ 0x64
 8010b34:	d05e      	beq.n	8010bf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8010b36:	2b58      	cmp	r3, #88	@ 0x58
 8010b38:	d07a      	beq.n	8010c30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 8010b3a:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8010b3e:	4625      	mov	r5, r4
 8010b40:	e036      	b.n	8010bb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010b42:	2b73      	cmp	r3, #115	@ 0x73
 8010b44:	d0ec      	beq.n	8010b20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010b46:	d802      	bhi.n	8010b4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 8010b48:	2b6f      	cmp	r3, #111	@ 0x6f
 8010b4a:	d1cf      	bne.n	8010aec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8010b4c:	e7e8      	b.n	8010b20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010b4e:	2b75      	cmp	r3, #117	@ 0x75
 8010b50:	d0e6      	beq.n	8010b20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010b52:	2b78      	cmp	r3, #120	@ 0x78
 8010b54:	e7f9      	b.n	8010b4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 8010b56:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010b58:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8010b5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010b5e:	b10b      	cbz	r3, 8010b64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 8010b60:	3302      	adds	r3, #2
 8010b62:	9309      	str	r3, [sp, #36]	@ 0x24
 8010b64:	9b08      	ldr	r3, [sp, #32]
 8010b66:	2b00      	cmp	r3, #0
 8010b68:	f43f af2f 	beq.w	80109ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010b6c:	3301      	adds	r3, #1
 8010b6e:	9308      	str	r3, [sp, #32]
 8010b70:	e72b      	b.n	80109ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010b72:	2a00      	cmp	r2, #0
 8010b74:	d0e1      	beq.n	8010b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8010b76:	7813      	ldrb	r3, [r2, #0]
 8010b78:	e7d6      	b.n	8010b28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 8010b7a:	2b73      	cmp	r3, #115	@ 0x73
 8010b7c:	d036      	beq.n	8010bec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 8010b7e:	d807      	bhi.n	8010b90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 8010b80:	2b6f      	cmp	r3, #111	@ 0x6f
 8010b82:	d1da      	bne.n	8010b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8010b84:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010b86:	1d25      	adds	r5, r4, #4
 8010b88:	2308      	movs	r3, #8
 8010b8a:	eba8 0202 	sub.w	r2, r8, r2
 8010b8e:	e049      	b.n	8010c24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8010b90:	2b75      	cmp	r3, #117	@ 0x75
 8010b92:	d042      	beq.n	8010c1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 8010b94:	2b78      	cmp	r3, #120	@ 0x78
 8010b96:	d1d0      	bne.n	8010b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8010b98:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010b9a:	1d25      	adds	r5, r4, #4
 8010b9c:	2310      	movs	r3, #16
 8010b9e:	eba8 0202 	sub.w	r2, r8, r2
 8010ba2:	e03f      	b.n	8010c24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8010ba4:	6823      	ldr	r3, [r4, #0]
 8010ba6:	1d25      	adds	r5, r4, #4
 8010ba8:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 8010bac:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8010bb0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010bb2:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8010bb6:	2b00      	cmp	r3, #0
 8010bb8:	d051      	beq.n	8010c5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 8010bba:	881a      	ldrh	r2, [r3, #0]
 8010bbc:	a80d      	add	r0, sp, #52	@ 0x34
 8010bbe:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8010bc2:	462c      	mov	r4, r5
 8010bc4:	9005      	str	r0, [sp, #20]
 8010bc6:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8010bca:	9004      	str	r0, [sp, #16]
 8010bcc:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8010bce:	9003      	str	r0, [sp, #12]
 8010bd0:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8010bd4:	9002      	str	r0, [sp, #8]
 8010bd6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8010bd8:	9001      	str	r0, [sp, #4]
 8010bda:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8010bde:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8010be2:	9000      	str	r0, [sp, #0]
 8010be4:	a810      	add	r0, sp, #64	@ 0x40
 8010be6:	f7ff fd49 	bl	801067c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8010bea:	e7b7      	b.n	8010b5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8010bec:	1d25      	adds	r5, r4, #4
 8010bee:	6823      	ldr	r3, [r4, #0]
 8010bf0:	9310      	str	r3, [sp, #64]	@ 0x40
 8010bf2:	e7dd      	b.n	8010bb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010bf4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010bf6:	230a      	movs	r3, #10
 8010bf8:	4649      	mov	r1, r9
 8010bfa:	6820      	ldr	r0, [r4, #0]
 8010bfc:	eba8 0202 	sub.w	r2, r8, r2
 8010c00:	1d25      	adds	r5, r4, #4
 8010c02:	b292      	uxth	r2, r2
 8010c04:	f7ff fcf0 	bl	80105e8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8010c08:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8010c0c:	2b2d      	cmp	r3, #45	@ 0x2d
 8010c0e:	d1cf      	bne.n	8010bb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010c10:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010c14:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010c16:	3302      	adds	r3, #2
 8010c18:	e7ea      	b.n	8010bf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 8010c1a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010c1c:	1d25      	adds	r5, r4, #4
 8010c1e:	230a      	movs	r3, #10
 8010c20:	eba8 0202 	sub.w	r2, r8, r2
 8010c24:	b292      	uxth	r2, r2
 8010c26:	4649      	mov	r1, r9
 8010c28:	6820      	ldr	r0, [r4, #0]
 8010c2a:	f7ff fd09 	bl	8010640 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8010c2e:	e7bf      	b.n	8010bb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010c30:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010c32:	2310      	movs	r3, #16
 8010c34:	4649      	mov	r1, r9
 8010c36:	6820      	ldr	r0, [r4, #0]
 8010c38:	eba8 0202 	sub.w	r2, r8, r2
 8010c3c:	1d25      	adds	r5, r4, #4
 8010c3e:	b292      	uxth	r2, r2
 8010c40:	f7ff fcfe 	bl	8010640 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8010c44:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 8010c48:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8010c4c:	2b00      	cmp	r3, #0
 8010c4e:	d0af      	beq.n	8010bb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010c50:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8010c54:	2919      	cmp	r1, #25
 8010c56:	d8f7      	bhi.n	8010c48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8010c58:	3b20      	subs	r3, #32
 8010c5a:	8013      	strh	r3, [r2, #0]
 8010c5c:	e7f4      	b.n	8010c48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8010c5e:	9a08      	ldr	r2, [sp, #32]
 8010c60:	2a00      	cmp	r2, #0
 8010c62:	d0ab      	beq.n	8010bbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8010c64:	7812      	ldrb	r2, [r2, #0]
 8010c66:	e7a9      	b.n	8010bbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8010c68:	2d00      	cmp	r5, #0
 8010c6a:	f43f af48 	beq.w	8010afe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 8010c6e:	782d      	ldrb	r5, [r5, #0]
 8010c70:	e745      	b.n	8010afe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

08010c72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8010c72:	b507      	push	{r0, r1, r2, lr}
 8010c74:	9300      	str	r3, [sp, #0]
 8010c76:	4613      	mov	r3, r2
 8010c78:	2200      	movs	r2, #0
 8010c7a:	f7ff fe92 	bl	80109a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8010c7e:	b003      	add	sp, #12
 8010c80:	f85d fb04 	ldr.w	pc, [sp], #4

08010c84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8010c84:	b40c      	push	{r2, r3}
 8010c86:	b507      	push	{r0, r1, r2, lr}
 8010c88:	ab04      	add	r3, sp, #16
 8010c8a:	f853 2b04 	ldr.w	r2, [r3], #4
 8010c8e:	9301      	str	r3, [sp, #4]
 8010c90:	f7ff ffef 	bl	8010c72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8010c94:	b003      	add	sp, #12
 8010c96:	f85d eb04 	ldr.w	lr, [sp], #4
 8010c9a:	b002      	add	sp, #8
 8010c9c:	4770      	bx	lr
	...

08010ca0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8010ca0:	4b01      	ldr	r3, [pc, #4]	@ (8010ca8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8010ca2:	6018      	str	r0, [r3, #0]
 8010ca4:	4770      	bx	lr
 8010ca6:	bf00      	nop
 8010ca8:	2001510c 	.word	0x2001510c

08010cac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8010cac:	4b06      	ldr	r3, [pc, #24]	@ (8010cc8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8010cae:	881a      	ldrh	r2, [r3, #0]
 8010cb0:	4282      	cmp	r2, r0
 8010cb2:	d807      	bhi.n	8010cc4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8010cb4:	4b05      	ldr	r3, [pc, #20]	@ (8010ccc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8010cb6:	881b      	ldrh	r3, [r3, #0]
 8010cb8:	4413      	add	r3, r2
 8010cba:	4298      	cmp	r0, r3
 8010cbc:	bfac      	ite	ge
 8010cbe:	2000      	movge	r0, #0
 8010cc0:	2001      	movlt	r0, #1
 8010cc2:	4770      	bx	lr
 8010cc4:	2000      	movs	r0, #0
 8010cc6:	4770      	bx	lr
 8010cc8:	2001512c 	.word	0x2001512c
 8010ccc:	20015130 	.word	0x20015130

08010cd0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8010cd0:	b508      	push	{r3, lr}
 8010cd2:	4601      	mov	r1, r0
 8010cd4:	f7ff ffea 	bl	8010cac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8010cd8:	b118      	cbz	r0, 8010ce2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8010cda:	4b02      	ldr	r3, [pc, #8]	@ (8010ce4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8010cdc:	681b      	ldr	r3, [r3, #0]
 8010cde:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8010ce2:	bd08      	pop	{r3, pc}
 8010ce4:	20015110 	.word	0x20015110

08010ce8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8010ce8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010cea:	4c24      	ldr	r4, [pc, #144]	@ (8010d7c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8010cec:	6823      	ldr	r3, [r4, #0]
 8010cee:	2b00      	cmp	r3, #0
 8010cf0:	d042      	beq.n	8010d78 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8010cf2:	4a23      	ldr	r2, [pc, #140]	@ (8010d80 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8010cf4:	4d23      	ldr	r5, [pc, #140]	@ (8010d84 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8010cf6:	8811      	ldrh	r1, [r2, #0]
 8010cf8:	f8b5 c000 	ldrh.w	ip, [r5]
 8010cfc:	4822      	ldr	r0, [pc, #136]	@ (8010d88 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8010cfe:	4461      	add	r1, ip
 8010d00:	1c4a      	adds	r2, r1, #1
 8010d02:	008f      	lsls	r7, r1, #2
 8010d04:	f022 0201 	bic.w	r2, r2, #1
 8010d08:	19de      	adds	r6, r3, r7
 8010d0a:	0412      	lsls	r2, r2, #16
 8010d0c:	6006      	str	r6, [r0, #0]
 8010d0e:	4e1f      	ldr	r6, [pc, #124]	@ (8010d8c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8010d10:	0c12      	lsrs	r2, r2, #16
 8010d12:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8010d16:	19da      	adds	r2, r3, r7
 8010d18:	6032      	str	r2, [r6, #0]
 8010d1a:	220e      	movs	r2, #14
 8010d1c:	fb02 f20c 	mul.w	r2, r2, ip
 8010d20:	3203      	adds	r2, #3
 8010d22:	f022 0203 	bic.w	r2, r2, #3
 8010d26:	443a      	add	r2, r7
 8010d28:	4f19      	ldr	r7, [pc, #100]	@ (8010d90 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8010d2a:	4413      	add	r3, r2
 8010d2c:	603b      	str	r3, [r7, #0]
 8010d2e:	2300      	movs	r3, #0
 8010d30:	4f18      	ldr	r7, [pc, #96]	@ (8010d94 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8010d32:	469c      	mov	ip, r3
 8010d34:	803b      	strh	r3, [r7, #0]
 8010d36:	4f18      	ldr	r7, [pc, #96]	@ (8010d98 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8010d38:	683f      	ldr	r7, [r7, #0]
 8010d3a:	1aba      	subs	r2, r7, r2
 8010d3c:	4f17      	ldr	r7, [pc, #92]	@ (8010d9c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8010d3e:	603a      	str	r2, [r7, #0]
 8010d40:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8010d44:	4a16      	ldr	r2, [pc, #88]	@ (8010da0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8010d46:	8013      	strh	r3, [r2, #0]
 8010d48:	428b      	cmp	r3, r1
 8010d4a:	d10d      	bne.n	8010d68 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8010d4c:	882d      	ldrh	r5, [r5, #0]
 8010d4e:	2300      	movs	r3, #0
 8010d50:	6830      	ldr	r0, [r6, #0]
 8010d52:	240e      	movs	r4, #14
 8010d54:	429d      	cmp	r5, r3
 8010d56:	d90f      	bls.n	8010d78 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8010d58:	fb04 0203 	mla	r2, r4, r3, r0
 8010d5c:	3301      	adds	r3, #1
 8010d5e:	7b11      	ldrb	r1, [r2, #12]
 8010d60:	f36f 1145 	bfc	r1, #5, #1
 8010d64:	7311      	strb	r1, [r2, #12]
 8010d66:	e7f5      	b.n	8010d54 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8010d68:	6822      	ldr	r2, [r4, #0]
 8010d6a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8010d6e:	6802      	ldr	r2, [r0, #0]
 8010d70:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8010d74:	3301      	adds	r3, #1
 8010d76:	e7e7      	b.n	8010d48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8010d78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010d7a:	bf00      	nop
 8010d7c:	20015110 	.word	0x20015110
 8010d80:	2001512c 	.word	0x2001512c
 8010d84:	20015130 	.word	0x20015130
 8010d88:	20015124 	.word	0x20015124
 8010d8c:	20015114 	.word	0x20015114
 8010d90:	2001511c 	.word	0x2001511c
 8010d94:	2001512e 	.word	0x2001512e
 8010d98:	20015118 	.word	0x20015118
 8010d9c:	20015128 	.word	0x20015128
 8010da0:	20015120 	.word	0x20015120

08010da4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8010da4:	4b06      	ldr	r3, [pc, #24]	@ (8010dc0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8010da6:	681b      	ldr	r3, [r3, #0]
 8010da8:	b943      	cbnz	r3, 8010dbc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8010daa:	b139      	cbz	r1, 8010dbc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8010dac:	4b05      	ldr	r3, [pc, #20]	@ (8010dc4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8010dae:	801a      	strh	r2, [r3, #0]
 8010db0:	4b05      	ldr	r3, [pc, #20]	@ (8010dc8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8010db2:	6019      	str	r1, [r3, #0]
 8010db4:	4b05      	ldr	r3, [pc, #20]	@ (8010dcc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8010db6:	6018      	str	r0, [r3, #0]
 8010db8:	f7ff bf96 	b.w	8010ce8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8010dbc:	4770      	bx	lr
 8010dbe:	bf00      	nop
 8010dc0:	2001511c 	.word	0x2001511c
 8010dc4:	20015130 	.word	0x20015130
 8010dc8:	20015118 	.word	0x20015118
 8010dcc:	20015110 	.word	0x20015110

08010dd0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8010dd0:	b470      	push	{r4, r5, r6}
 8010dd2:	4c07      	ldr	r4, [pc, #28]	@ (8010df0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8010dd4:	4605      	mov	r5, r0
 8010dd6:	4610      	mov	r0, r2
 8010dd8:	9a03      	ldr	r2, [sp, #12]
 8010dda:	6826      	ldr	r6, [r4, #0]
 8010ddc:	b936      	cbnz	r6, 8010dec <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8010dde:	6025      	str	r5, [r4, #0]
 8010de0:	4c04      	ldr	r4, [pc, #16]	@ (8010df4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8010de2:	8021      	strh	r1, [r4, #0]
 8010de4:	4619      	mov	r1, r3
 8010de6:	bc70      	pop	{r4, r5, r6}
 8010de8:	f7ff bfdc 	b.w	8010da4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8010dec:	bc70      	pop	{r4, r5, r6}
 8010dee:	4770      	bx	lr
 8010df0:	20015134 	.word	0x20015134
 8010df4:	2001512c 	.word	0x2001512c

08010df8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8010df8:	4a12      	ldr	r2, [pc, #72]	@ (8010e44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8010dfa:	8803      	ldrh	r3, [r0, #0]
 8010dfc:	8812      	ldrh	r2, [r2, #0]
 8010dfe:	4293      	cmp	r3, r2
 8010e00:	d207      	bcs.n	8010e12 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8010e02:	4a11      	ldr	r2, [pc, #68]	@ (8010e48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8010e04:	2114      	movs	r1, #20
 8010e06:	6812      	ldr	r2, [r2, #0]
 8010e08:	fb01 2303 	mla	r3, r1, r3, r2
 8010e0c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8010e10:	4770      	bx	lr
 8010e12:	490e      	ldr	r1, [pc, #56]	@ (8010e4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8010e14:	8809      	ldrh	r1, [r1, #0]
 8010e16:	4411      	add	r1, r2
 8010e18:	428b      	cmp	r3, r1
 8010e1a:	da04      	bge.n	8010e26 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8010e1c:	1a9b      	subs	r3, r3, r2
 8010e1e:	4a0c      	ldr	r2, [pc, #48]	@ (8010e50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8010e20:	210e      	movs	r1, #14
 8010e22:	6812      	ldr	r2, [r2, #0]
 8010e24:	e7f0      	b.n	8010e08 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8010e26:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010e2a:	4293      	cmp	r3, r2
 8010e2c:	d108      	bne.n	8010e40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8010e2e:	4b09      	ldr	r3, [pc, #36]	@ (8010e54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8010e30:	781b      	ldrb	r3, [r3, #0]
 8010e32:	b91b      	cbnz	r3, 8010e3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8010e34:	4b08      	ldr	r3, [pc, #32]	@ (8010e58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8010e36:	f9b3 0000 	ldrsh.w	r0, [r3]
 8010e3a:	4770      	bx	lr
 8010e3c:	4b07      	ldr	r3, [pc, #28]	@ (8010e5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8010e3e:	e7fa      	b.n	8010e36 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8010e40:	2000      	movs	r0, #0
 8010e42:	4770      	bx	lr
 8010e44:	2001512c 	.word	0x2001512c
 8010e48:	20015134 	.word	0x20015134
 8010e4c:	20015130 	.word	0x20015130
 8010e50:	20015114 	.word	0x20015114
 8010e54:	200150a4 	.word	0x200150a4
 8010e58:	200150a6 	.word	0x200150a6
 8010e5c:	200150a8 	.word	0x200150a8

08010e60 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8010e60:	4a12      	ldr	r2, [pc, #72]	@ (8010eac <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8010e62:	8803      	ldrh	r3, [r0, #0]
 8010e64:	8812      	ldrh	r2, [r2, #0]
 8010e66:	4293      	cmp	r3, r2
 8010e68:	d207      	bcs.n	8010e7a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8010e6a:	4a11      	ldr	r2, [pc, #68]	@ (8010eb0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8010e6c:	2114      	movs	r1, #20
 8010e6e:	6812      	ldr	r2, [r2, #0]
 8010e70:	fb01 2303 	mla	r3, r1, r3, r2
 8010e74:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8010e78:	4770      	bx	lr
 8010e7a:	490e      	ldr	r1, [pc, #56]	@ (8010eb4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8010e7c:	8809      	ldrh	r1, [r1, #0]
 8010e7e:	4411      	add	r1, r2
 8010e80:	428b      	cmp	r3, r1
 8010e82:	da04      	bge.n	8010e8e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8010e84:	1a9b      	subs	r3, r3, r2
 8010e86:	4a0c      	ldr	r2, [pc, #48]	@ (8010eb8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8010e88:	210e      	movs	r1, #14
 8010e8a:	6812      	ldr	r2, [r2, #0]
 8010e8c:	e7f0      	b.n	8010e70 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8010e8e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010e92:	4293      	cmp	r3, r2
 8010e94:	d108      	bne.n	8010ea8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8010e96:	4b09      	ldr	r3, [pc, #36]	@ (8010ebc <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8010e98:	781b      	ldrb	r3, [r3, #0]
 8010e9a:	b91b      	cbnz	r3, 8010ea4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8010e9c:	4b08      	ldr	r3, [pc, #32]	@ (8010ec0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8010e9e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8010ea2:	4770      	bx	lr
 8010ea4:	4b07      	ldr	r3, [pc, #28]	@ (8010ec4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8010ea6:	e7fa      	b.n	8010e9e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8010ea8:	2000      	movs	r0, #0
 8010eaa:	4770      	bx	lr
 8010eac:	2001512c 	.word	0x2001512c
 8010eb0:	20015134 	.word	0x20015134
 8010eb4:	20015130 	.word	0x20015130
 8010eb8:	20015114 	.word	0x20015114
 8010ebc:	200150a4 	.word	0x200150a4
 8010ec0:	200150a8 	.word	0x200150a8
 8010ec4:	200150a6 	.word	0x200150a6

08010ec8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8010ec8:	4a1f      	ldr	r2, [pc, #124]	@ (8010f48 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8010eca:	b510      	push	{r4, lr}
 8010ecc:	880b      	ldrh	r3, [r1, #0]
 8010ece:	8812      	ldrh	r2, [r2, #0]
 8010ed0:	4293      	cmp	r3, r2
 8010ed2:	d213      	bcs.n	8010efc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8010ed4:	4a1d      	ldr	r2, [pc, #116]	@ (8010f4c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8010ed6:	2114      	movs	r1, #20
 8010ed8:	6812      	ldr	r2, [r2, #0]
 8010eda:	fb01 2303 	mla	r3, r1, r3, r2
 8010ede:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8010ee2:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8010ee6:	8a1a      	ldrh	r2, [r3, #16]
 8010ee8:	8a5b      	ldrh	r3, [r3, #18]
 8010eea:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8010eee:	8004      	strh	r4, [r0, #0]
 8010ef0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8010ef4:	8041      	strh	r1, [r0, #2]
 8010ef6:	8082      	strh	r2, [r0, #4]
 8010ef8:	80c3      	strh	r3, [r0, #6]
 8010efa:	e00e      	b.n	8010f1a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8010efc:	4914      	ldr	r1, [pc, #80]	@ (8010f50 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8010efe:	8809      	ldrh	r1, [r1, #0]
 8010f00:	4411      	add	r1, r2
 8010f02:	428b      	cmp	r3, r1
 8010f04:	da0a      	bge.n	8010f1c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8010f06:	1a9b      	subs	r3, r3, r2
 8010f08:	4a12      	ldr	r2, [pc, #72]	@ (8010f54 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8010f0a:	210e      	movs	r1, #14
 8010f0c:	6812      	ldr	r2, [r2, #0]
 8010f0e:	fb01 2303 	mla	r3, r1, r3, r2
 8010f12:	681a      	ldr	r2, [r3, #0]
 8010f14:	6002      	str	r2, [r0, #0]
 8010f16:	685a      	ldr	r2, [r3, #4]
 8010f18:	6042      	str	r2, [r0, #4]
 8010f1a:	bd10      	pop	{r4, pc}
 8010f1c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010f20:	4293      	cmp	r3, r2
 8010f22:	d10b      	bne.n	8010f3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8010f24:	4b0c      	ldr	r3, [pc, #48]	@ (8010f58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8010f26:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010f2a:	4b0c      	ldr	r3, [pc, #48]	@ (8010f5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8010f2c:	8081      	strh	r1, [r0, #4]
 8010f2e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010f32:	2300      	movs	r3, #0
 8010f34:	80c2      	strh	r2, [r0, #6]
 8010f36:	8003      	strh	r3, [r0, #0]
 8010f38:	8043      	strh	r3, [r0, #2]
 8010f3a:	e7ee      	b.n	8010f1a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8010f3c:	2300      	movs	r3, #0
 8010f3e:	8003      	strh	r3, [r0, #0]
 8010f40:	8043      	strh	r3, [r0, #2]
 8010f42:	8083      	strh	r3, [r0, #4]
 8010f44:	e7d8      	b.n	8010ef8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8010f46:	bf00      	nop
 8010f48:	2001512c 	.word	0x2001512c
 8010f4c:	20015134 	.word	0x20015134
 8010f50:	20015130 	.word	0x20015130
 8010f54:	20015114 	.word	0x20015114
 8010f58:	200150a0 	.word	0x200150a0
 8010f5c:	200150a2 	.word	0x200150a2

08010f60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8010f60:	4a17      	ldr	r2, [pc, #92]	@ (8010fc0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8010f62:	8803      	ldrh	r3, [r0, #0]
 8010f64:	8812      	ldrh	r2, [r2, #0]
 8010f66:	4293      	cmp	r3, r2
 8010f68:	d213      	bcs.n	8010f92 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8010f6a:	4a16      	ldr	r2, [pc, #88]	@ (8010fc4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8010f6c:	2114      	movs	r1, #20
 8010f6e:	6812      	ldr	r2, [r2, #0]
 8010f70:	fb01 2303 	mla	r3, r1, r3, r2
 8010f74:	8a1a      	ldrh	r2, [r3, #16]
 8010f76:	8919      	ldrh	r1, [r3, #8]
 8010f78:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8010f7c:	428a      	cmp	r2, r1
 8010f7e:	db1d      	blt.n	8010fbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8010f80:	8a58      	ldrh	r0, [r3, #18]
 8010f82:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8010f86:	895b      	ldrh	r3, [r3, #10]
 8010f88:	4298      	cmp	r0, r3
 8010f8a:	bfac      	ite	ge
 8010f8c:	2000      	movge	r0, #0
 8010f8e:	2001      	movlt	r0, #1
 8010f90:	4770      	bx	lr
 8010f92:	490d      	ldr	r1, [pc, #52]	@ (8010fc8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8010f94:	8809      	ldrh	r1, [r1, #0]
 8010f96:	4411      	add	r1, r2
 8010f98:	428b      	cmp	r3, r1
 8010f9a:	da0d      	bge.n	8010fb8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8010f9c:	1a9b      	subs	r3, r3, r2
 8010f9e:	4a0b      	ldr	r2, [pc, #44]	@ (8010fcc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8010fa0:	210e      	movs	r1, #14
 8010fa2:	6812      	ldr	r2, [r2, #0]
 8010fa4:	fb01 2303 	mla	r3, r1, r3, r2
 8010fa8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8010fac:	891a      	ldrh	r2, [r3, #8]
 8010fae:	4291      	cmp	r1, r2
 8010fb0:	db04      	blt.n	8010fbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8010fb2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8010fb6:	e7e6      	b.n	8010f86 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8010fb8:	2000      	movs	r0, #0
 8010fba:	4770      	bx	lr
 8010fbc:	2001      	movs	r0, #1
 8010fbe:	4770      	bx	lr
 8010fc0:	2001512c 	.word	0x2001512c
 8010fc4:	20015134 	.word	0x20015134
 8010fc8:	20015130 	.word	0x20015130
 8010fcc:	20015114 	.word	0x20015114

08010fd0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8010fd0:	4a12      	ldr	r2, [pc, #72]	@ (801101c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8010fd2:	8803      	ldrh	r3, [r0, #0]
 8010fd4:	8811      	ldrh	r1, [r2, #0]
 8010fd6:	428b      	cmp	r3, r1
 8010fd8:	d20b      	bcs.n	8010ff2 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8010fda:	4a11      	ldr	r2, [pc, #68]	@ (8011020 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010fdc:	6812      	ldr	r2, [r2, #0]
 8010fde:	b112      	cbz	r2, 8010fe6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8010fe0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010fe4:	b9c0      	cbnz	r0, 8011018 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8010fe6:	4a0f      	ldr	r2, [pc, #60]	@ (8011024 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8010fe8:	6811      	ldr	r1, [r2, #0]
 8010fea:	2214      	movs	r2, #20
 8010fec:	4353      	muls	r3, r2
 8010fee:	58c8      	ldr	r0, [r1, r3]
 8010ff0:	4770      	bx	lr
 8010ff2:	4a0d      	ldr	r2, [pc, #52]	@ (8011028 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8010ff4:	8812      	ldrh	r2, [r2, #0]
 8010ff6:	440a      	add	r2, r1
 8010ff8:	4293      	cmp	r3, r2
 8010ffa:	da04      	bge.n	8011006 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8010ffc:	4a08      	ldr	r2, [pc, #32]	@ (8011020 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010ffe:	6812      	ldr	r2, [r2, #0]
 8011000:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8011004:	4770      	bx	lr
 8011006:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801100a:	4293      	cmp	r3, r2
 801100c:	d103      	bne.n	8011016 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801100e:	4b07      	ldr	r3, [pc, #28]	@ (801102c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8011010:	681b      	ldr	r3, [r3, #0]
 8011012:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8011014:	4770      	bx	lr
 8011016:	2000      	movs	r0, #0
 8011018:	4770      	bx	lr
 801101a:	bf00      	nop
 801101c:	2001512c 	.word	0x2001512c
 8011020:	20015110 	.word	0x20015110
 8011024:	20015134 	.word	0x20015134
 8011028:	20015130 	.word	0x20015130
 801102c:	200150ac 	.word	0x200150ac

08011030 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8011030:	4b24      	ldr	r3, [pc, #144]	@ (80110c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8011032:	8802      	ldrh	r2, [r0, #0]
 8011034:	8818      	ldrh	r0, [r3, #0]
 8011036:	4282      	cmp	r2, r0
 8011038:	d221      	bcs.n	801107e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801103a:	4b23      	ldr	r3, [pc, #140]	@ (80110c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801103c:	6819      	ldr	r1, [r3, #0]
 801103e:	2314      	movs	r3, #20
 8011040:	fb03 1302 	mla	r3, r3, r2, r1
 8011044:	6858      	ldr	r0, [r3, #4]
 8011046:	2800      	cmp	r0, #0
 8011048:	d03a      	beq.n	80110c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801104a:	4920      	ldr	r1, [pc, #128]	@ (80110cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801104c:	6809      	ldr	r1, [r1, #0]
 801104e:	2900      	cmp	r1, #0
 8011050:	d036      	beq.n	80110c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8011052:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8011056:	2900      	cmp	r1, #0
 8011058:	d032      	beq.n	80110c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801105a:	891a      	ldrh	r2, [r3, #8]
 801105c:	8958      	ldrh	r0, [r3, #10]
 801105e:	4350      	muls	r0, r2
 8011060:	7c5a      	ldrb	r2, [r3, #17]
 8011062:	7cdb      	ldrb	r3, [r3, #19]
 8011064:	0952      	lsrs	r2, r2, #5
 8011066:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801106a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801106e:	2b0b      	cmp	r3, #11
 8011070:	bf18      	it	ne
 8011072:	0040      	lslne	r0, r0, #1
 8011074:	3003      	adds	r0, #3
 8011076:	f020 0003 	bic.w	r0, r0, #3
 801107a:	4408      	add	r0, r1
 801107c:	4770      	bx	lr
 801107e:	4b14      	ldr	r3, [pc, #80]	@ (80110d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8011080:	881b      	ldrh	r3, [r3, #0]
 8011082:	4403      	add	r3, r0
 8011084:	429a      	cmp	r2, r3
 8011086:	da1a      	bge.n	80110be <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8011088:	4b12      	ldr	r3, [pc, #72]	@ (80110d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801108a:	1a10      	subs	r0, r2, r0
 801108c:	210e      	movs	r1, #14
 801108e:	681b      	ldr	r3, [r3, #0]
 8011090:	fb01 3000 	mla	r0, r1, r0, r3
 8011094:	7b03      	ldrb	r3, [r0, #12]
 8011096:	f003 031f 	and.w	r3, r3, #31
 801109a:	2b0b      	cmp	r3, #11
 801109c:	d10b      	bne.n	80110b6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801109e:	8903      	ldrh	r3, [r0, #8]
 80110a0:	8940      	ldrh	r0, [r0, #10]
 80110a2:	4358      	muls	r0, r3
 80110a4:	4b09      	ldr	r3, [pc, #36]	@ (80110cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80110a6:	3003      	adds	r0, #3
 80110a8:	6819      	ldr	r1, [r3, #0]
 80110aa:	f020 0303 	bic.w	r3, r0, #3
 80110ae:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80110b2:	4418      	add	r0, r3
 80110b4:	4770      	bx	lr
 80110b6:	2b0d      	cmp	r3, #13
 80110b8:	d101      	bne.n	80110be <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80110ba:	300d      	adds	r0, #13
 80110bc:	4770      	bx	lr
 80110be:	2000      	movs	r0, #0
 80110c0:	4770      	bx	lr
 80110c2:	bf00      	nop
 80110c4:	2001512c 	.word	0x2001512c
 80110c8:	20015134 	.word	0x20015134
 80110cc:	20015110 	.word	0x20015110
 80110d0:	20015130 	.word	0x20015130
 80110d4:	20015114 	.word	0x20015114

080110d8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80110d8:	4a17      	ldr	r2, [pc, #92]	@ (8011138 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80110da:	b510      	push	{r4, lr}
 80110dc:	8803      	ldrh	r3, [r0, #0]
 80110de:	8812      	ldrh	r2, [r2, #0]
 80110e0:	4293      	cmp	r3, r2
 80110e2:	d20c      	bcs.n	80110fe <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80110e4:	4a15      	ldr	r2, [pc, #84]	@ (801113c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80110e6:	2114      	movs	r1, #20
 80110e8:	6812      	ldr	r2, [r2, #0]
 80110ea:	fb01 2303 	mla	r3, r1, r3, r2
 80110ee:	7c58      	ldrb	r0, [r3, #17]
 80110f0:	0942      	lsrs	r2, r0, #5
 80110f2:	7cd8      	ldrb	r0, [r3, #19]
 80110f4:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80110f8:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80110fc:	bd10      	pop	{r4, pc}
 80110fe:	4910      	ldr	r1, [pc, #64]	@ (8011140 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8011100:	8809      	ldrh	r1, [r1, #0]
 8011102:	4411      	add	r1, r2
 8011104:	428b      	cmp	r3, r1
 8011106:	da09      	bge.n	801111c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8011108:	1a9b      	subs	r3, r3, r2
 801110a:	4a0e      	ldr	r2, [pc, #56]	@ (8011144 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801110c:	210e      	movs	r1, #14
 801110e:	6812      	ldr	r2, [r2, #0]
 8011110:	fb01 2303 	mla	r3, r1, r3, r2
 8011114:	7b18      	ldrb	r0, [r3, #12]
 8011116:	f000 001f 	and.w	r0, r0, #31
 801111a:	e7ef      	b.n	80110fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801111c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8011120:	4293      	cmp	r3, r2
 8011122:	d106      	bne.n	8011132 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8011124:	f7f1 f944 	bl	80023b0 <_ZN8touchgfx3HAL3lcdEv>
 8011128:	6803      	ldr	r3, [r0, #0]
 801112a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801112e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011130:	4718      	bx	r3
 8011132:	2000      	movs	r0, #0
 8011134:	e7e2      	b.n	80110fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8011136:	bf00      	nop
 8011138:	2001512c 	.word	0x2001512c
 801113c:	20015134 	.word	0x20015134
 8011140:	20015130 	.word	0x20015130
 8011144:	20015114 	.word	0x20015114

08011148 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8011148:	2010      	movs	r0, #16
 801114a:	4770      	bx	lr

0801114c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801114c:	2000      	movs	r0, #0
 801114e:	4770      	bx	lr

08011150 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8011150:	4b02      	ldr	r3, [pc, #8]	@ (801115c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8011152:	8818      	ldrh	r0, [r3, #0]
 8011154:	0040      	lsls	r0, r0, #1
 8011156:	b280      	uxth	r0, r0
 8011158:	4770      	bx	lr
 801115a:	bf00      	nop
 801115c:	200150a6 	.word	0x200150a6

08011160 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8011160:	2bff      	cmp	r3, #255	@ 0xff
 8011162:	d050      	beq.n	8011206 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8011164:	2a0b      	cmp	r2, #11
 8011166:	d04a      	beq.n	80111fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8011168:	d80e      	bhi.n	8011188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801116a:	2a03      	cmp	r2, #3
 801116c:	d03f      	beq.n	80111ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801116e:	d804      	bhi.n	801117a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8011170:	2a01      	cmp	r2, #1
 8011172:	d03e      	beq.n	80111f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8011174:	d93f      	bls.n	80111f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8011176:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8011178:	4770      	bx	lr
 801117a:	2a09      	cmp	r2, #9
 801117c:	d03f      	beq.n	80111fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801117e:	d83c      	bhi.n	80111fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8011180:	2a08      	cmp	r2, #8
 8011182:	d03a      	beq.n	80111fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8011184:	2000      	movs	r0, #0
 8011186:	4770      	bx	lr
 8011188:	2a2f      	cmp	r2, #47	@ 0x2f
 801118a:	d024      	beq.n	80111d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801118c:	d80d      	bhi.n	80111aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801118e:	2a2d      	cmp	r2, #45	@ 0x2d
 8011190:	d014      	beq.n	80111bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8011192:	d826      	bhi.n	80111e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8011194:	2a2c      	cmp	r2, #44	@ 0x2c
 8011196:	d1f5      	bne.n	8011184 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011198:	684b      	ldr	r3, [r1, #4]
 801119a:	781b      	ldrb	r3, [r3, #0]
 801119c:	2b01      	cmp	r3, #1
 801119e:	d018      	beq.n	80111d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80111a0:	d323      	bcc.n	80111ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80111a2:	2b02      	cmp	r3, #2
 80111a4:	d1ee      	bne.n	8011184 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80111a6:	68c0      	ldr	r0, [r0, #12]
 80111a8:	4770      	bx	lr
 80111aa:	2a31      	cmp	r2, #49	@ 0x31
 80111ac:	d004      	beq.n	80111b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80111ae:	d328      	bcc.n	8011202 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80111b0:	2a32      	cmp	r2, #50	@ 0x32
 80111b2:	d026      	beq.n	8011202 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80111b4:	2a33      	cmp	r2, #51	@ 0x33
 80111b6:	d1e5      	bne.n	8011184 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80111b8:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 80111ba:	4770      	bx	lr
 80111bc:	684b      	ldr	r3, [r1, #4]
 80111be:	781b      	ldrb	r3, [r3, #0]
 80111c0:	2b01      	cmp	r3, #1
 80111c2:	d004      	beq.n	80111ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80111c4:	d30b      	bcc.n	80111de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80111c6:	2b02      	cmp	r3, #2
 80111c8:	d1dc      	bne.n	8011184 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80111ca:	6940      	ldr	r0, [r0, #20]
 80111cc:	4770      	bx	lr
 80111ce:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 80111d0:	4770      	bx	lr
 80111d2:	69c0      	ldr	r0, [r0, #28]
 80111d4:	4770      	bx	lr
 80111d6:	684b      	ldr	r3, [r1, #4]
 80111d8:	781b      	ldrb	r3, [r3, #0]
 80111da:	2b00      	cmp	r3, #0
 80111dc:	d1d2      	bne.n	8011184 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80111de:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 80111e0:	4770      	bx	lr
 80111e2:	684b      	ldr	r3, [r1, #4]
 80111e4:	781b      	ldrb	r3, [r3, #0]
 80111e6:	2b00      	cmp	r3, #0
 80111e8:	d1cc      	bne.n	8011184 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80111ea:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 80111ec:	4770      	bx	lr
 80111ee:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 80111f0:	4770      	bx	lr
 80111f2:	6d40      	ldr	r0, [r0, #84]	@ 0x54
 80111f4:	4770      	bx	lr
 80111f6:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 80111f8:	4770      	bx	lr
 80111fa:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
 80111fc:	4770      	bx	lr
 80111fe:	6e40      	ldr	r0, [r0, #100]	@ 0x64
 8011200:	4770      	bx	lr
 8011202:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
 8011204:	4770      	bx	lr
 8011206:	2a0b      	cmp	r2, #11
 8011208:	d049      	beq.n	801129e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801120a:	d80e      	bhi.n	801122a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801120c:	2a03      	cmp	r2, #3
 801120e:	d040      	beq.n	8011292 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8011210:	d804      	bhi.n	801121c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8011212:	2a01      	cmp	r2, #1
 8011214:	d03f      	beq.n	8011296 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8011216:	d940      	bls.n	801129a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8011218:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 801121a:	4770      	bx	lr
 801121c:	2a09      	cmp	r2, #9
 801121e:	d03e      	beq.n	801129e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8011220:	d801      	bhi.n	8011226 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8011222:	2a08      	cmp	r2, #8
 8011224:	d1ae      	bne.n	8011184 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011226:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8011228:	4770      	bx	lr
 801122a:	2a2f      	cmp	r2, #47	@ 0x2f
 801122c:	d024      	beq.n	8011278 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801122e:	d80d      	bhi.n	801124c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8011230:	2a2d      	cmp	r2, #45	@ 0x2d
 8011232:	d014      	beq.n	801125e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8011234:	d826      	bhi.n	8011284 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8011236:	2a2c      	cmp	r2, #44	@ 0x2c
 8011238:	d1a4      	bne.n	8011184 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801123a:	684b      	ldr	r3, [r1, #4]
 801123c:	781b      	ldrb	r3, [r3, #0]
 801123e:	2b01      	cmp	r3, #1
 8011240:	d018      	beq.n	8011274 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8011242:	d324      	bcc.n	801128e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8011244:	2b02      	cmp	r3, #2
 8011246:	d19d      	bne.n	8011184 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011248:	6900      	ldr	r0, [r0, #16]
 801124a:	4770      	bx	lr
 801124c:	2a31      	cmp	r2, #49	@ 0x31
 801124e:	d004      	beq.n	801125a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8011250:	d327      	bcc.n	80112a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8011252:	2a32      	cmp	r2, #50	@ 0x32
 8011254:	d025      	beq.n	80112a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8011256:	2a33      	cmp	r2, #51	@ 0x33
 8011258:	d194      	bne.n	8011184 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801125a:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 801125c:	4770      	bx	lr
 801125e:	684b      	ldr	r3, [r1, #4]
 8011260:	781b      	ldrb	r3, [r3, #0]
 8011262:	2b01      	cmp	r3, #1
 8011264:	d004      	beq.n	8011270 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8011266:	d30b      	bcc.n	8011280 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8011268:	2b02      	cmp	r3, #2
 801126a:	d18b      	bne.n	8011184 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801126c:	6980      	ldr	r0, [r0, #24]
 801126e:	4770      	bx	lr
 8011270:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8011272:	4770      	bx	lr
 8011274:	6a00      	ldr	r0, [r0, #32]
 8011276:	4770      	bx	lr
 8011278:	684b      	ldr	r3, [r1, #4]
 801127a:	781b      	ldrb	r3, [r3, #0]
 801127c:	2b00      	cmp	r3, #0
 801127e:	d181      	bne.n	8011184 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011280:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8011282:	4770      	bx	lr
 8011284:	684b      	ldr	r3, [r1, #4]
 8011286:	781b      	ldrb	r3, [r3, #0]
 8011288:	2b00      	cmp	r3, #0
 801128a:	f47f af7b 	bne.w	8011184 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801128e:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8011290:	4770      	bx	lr
 8011292:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 8011294:	4770      	bx	lr
 8011296:	6d80      	ldr	r0, [r0, #88]	@ 0x58
 8011298:	4770      	bx	lr
 801129a:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 801129c:	4770      	bx	lr
 801129e:	6e80      	ldr	r0, [r0, #104]	@ 0x68
 80112a0:	4770      	bx	lr
 80112a2:	6f00      	ldr	r0, [r0, #112]	@ 0x70
 80112a4:	4770      	bx	lr

080112a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80112a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80112aa:	b087      	sub	sp, #28
 80112ac:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80112ae:	9205      	str	r2, [sp, #20]
 80112b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80112b4:	9101      	str	r1, [sp, #4]
 80112b6:	9202      	str	r2, [sp, #8]
 80112b8:	6841      	ldr	r1, [r0, #4]
 80112ba:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80112be:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80112c2:	fb01 2404 	mla	r4, r1, r4, r2
 80112c6:	6802      	ldr	r2, [r0, #0]
 80112c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80112cc:	f8de 2000 	ldr.w	r2, [lr]
 80112d0:	9203      	str	r2, [sp, #12]
 80112d2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80112d6:	3204      	adds	r2, #4
 80112d8:	9204      	str	r2, [sp, #16]
 80112da:	9a02      	ldr	r2, [sp, #8]
 80112dc:	43d6      	mvns	r6, r2
 80112de:	b2f6      	uxtb	r6, r6
 80112e0:	9a01      	ldr	r2, [sp, #4]
 80112e2:	2a00      	cmp	r2, #0
 80112e4:	dc03      	bgt.n	80112ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80112e6:	9a05      	ldr	r2, [sp, #20]
 80112e8:	2a00      	cmp	r2, #0
 80112ea:	f340 8129 	ble.w	8011540 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80112ee:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80112f0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80112f4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80112f8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80112fa:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80112fe:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011302:	2b00      	cmp	r3, #0
 8011304:	dd0e      	ble.n	8011324 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011306:	1408      	asrs	r0, r1, #16
 8011308:	d405      	bmi.n	8011316 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801130a:	4560      	cmp	r0, ip
 801130c:	da03      	bge.n	8011316 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801130e:	1410      	asrs	r0, r2, #16
 8011310:	d401      	bmi.n	8011316 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011312:	42b8      	cmp	r0, r7
 8011314:	db07      	blt.n	8011326 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011316:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011318:	3b01      	subs	r3, #1
 801131a:	3402      	adds	r4, #2
 801131c:	4401      	add	r1, r0
 801131e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8011320:	4402      	add	r2, r0
 8011322:	e7ee      	b.n	8011302 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8011324:	d071      	beq.n	801140a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011326:	1e58      	subs	r0, r3, #1
 8011328:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801132a:	fb05 1500 	mla	r5, r5, r0, r1
 801132e:	142d      	asrs	r5, r5, #16
 8011330:	d45f      	bmi.n	80113f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011332:	4565      	cmp	r5, ip
 8011334:	da5d      	bge.n	80113f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011336:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8011338:	fb05 2000 	mla	r0, r5, r0, r2
 801133c:	1400      	asrs	r0, r0, #16
 801133e:	d458      	bmi.n	80113f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011340:	42b8      	cmp	r0, r7
 8011342:	da56      	bge.n	80113f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011344:	4699      	mov	r9, r3
 8011346:	46a2      	mov	sl, r4
 8011348:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801134c:	f1b9 0f00 	cmp.w	r9, #0
 8011350:	dd57      	ble.n	8011402 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8011352:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8011356:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801135a:	9803      	ldr	r0, [sp, #12]
 801135c:	140d      	asrs	r5, r1, #16
 801135e:	f109 39ff 	add.w	r9, r9, #4294967295
 8011362:	fb07 000c 	mla	r0, r7, ip, r0
 8011366:	5d40      	ldrb	r0, [r0, r5]
 8011368:	9d04      	ldr	r5, [sp, #16]
 801136a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801136e:	f8ba 5000 	ldrh.w	r5, [sl]
 8011372:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011376:	122f      	asrs	r7, r5, #8
 8011378:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801137c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011380:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011384:	00ed      	lsls	r5, r5, #3
 8011386:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801138a:	fb17 f706 	smulbb	r7, r7, r6
 801138e:	b2ed      	uxtb	r5, r5
 8011390:	fb18 f806 	smulbb	r8, r8, r6
 8011394:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8011398:	10c7      	asrs	r7, r0, #3
 801139a:	fb15 f506 	smulbb	r5, r5, r6
 801139e:	00c0      	lsls	r0, r0, #3
 80113a0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80113a4:	fa1f fc8c 	uxth.w	ip, ip
 80113a8:	b2c0      	uxtb	r0, r0
 80113aa:	fb07 870b 	mla	r7, r7, fp, r8
 80113ae:	fb00 500b 	mla	r0, r0, fp, r5
 80113b2:	f10c 0501 	add.w	r5, ip, #1
 80113b6:	b2bf      	uxth	r7, r7
 80113b8:	b280      	uxth	r0, r0
 80113ba:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80113be:	f107 0801 	add.w	r8, r7, #1
 80113c2:	1c45      	adds	r5, r0, #1
 80113c4:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80113c8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80113cc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80113d0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80113d2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80113d6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80113da:	4401      	add	r1, r0
 80113dc:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80113e0:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80113e2:	ea45 0c0c 	orr.w	ip, r5, ip
 80113e6:	4402      	add	r2, r0
 80113e8:	ea4c 0c08 	orr.w	ip, ip, r8
 80113ec:	f82a cb02 	strh.w	ip, [sl], #2
 80113f0:	e7ac      	b.n	801134c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80113f2:	f04f 0800 	mov.w	r8, #0
 80113f6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80113fa:	eb03 0008 	add.w	r0, r3, r8
 80113fe:	2800      	cmp	r0, #0
 8011400:	dc41      	bgt.n	8011486 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8011402:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011406:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801140a:	9b01      	ldr	r3, [sp, #4]
 801140c:	2b00      	cmp	r3, #0
 801140e:	f340 8097 	ble.w	8011540 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8011412:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011416:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011418:	ee30 0a04 	vadd.f32	s0, s0, s8
 801141c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011420:	eef0 6a62 	vmov.f32	s13, s5
 8011424:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011428:	ee31 1a05 	vadd.f32	s2, s2, s10
 801142c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011430:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8011434:	eef0 6a43 	vmov.f32	s13, s6
 8011438:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801143c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8011440:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011444:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011448:	ee77 2a62 	vsub.f32	s5, s14, s5
 801144c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011450:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011454:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011458:	ee12 2a90 	vmov	r2, s5
 801145c:	eef0 2a47 	vmov.f32	s5, s14
 8011460:	fb92 f3f3 	sdiv	r3, r2, r3
 8011464:	ee13 2a10 	vmov	r2, s6
 8011468:	9313      	str	r3, [sp, #76]	@ 0x4c
 801146a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801146c:	eeb0 3a67 	vmov.f32	s6, s15
 8011470:	fb92 f3f3 	sdiv	r3, r2, r3
 8011474:	9314      	str	r3, [sp, #80]	@ 0x50
 8011476:	9b01      	ldr	r3, [sp, #4]
 8011478:	9a05      	ldr	r2, [sp, #20]
 801147a:	3b01      	subs	r3, #1
 801147c:	9301      	str	r3, [sp, #4]
 801147e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011480:	bf08      	it	eq
 8011482:	4613      	moveq	r3, r2
 8011484:	e72c      	b.n	80112e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8011486:	140f      	asrs	r7, r1, #16
 8011488:	d453      	bmi.n	8011532 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801148a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801148e:	42bd      	cmp	r5, r7
 8011490:	dd4f      	ble.n	8011532 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011492:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011496:	d44c      	bmi.n	8011532 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011498:	f8de 000c 	ldr.w	r0, [lr, #12]
 801149c:	4560      	cmp	r0, ip
 801149e:	dd48      	ble.n	8011532 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80114a0:	9803      	ldr	r0, [sp, #12]
 80114a2:	b22d      	sxth	r5, r5
 80114a4:	fb0c 0505 	mla	r5, ip, r5, r0
 80114a8:	5de8      	ldrb	r0, [r5, r7]
 80114aa:	9d04      	ldr	r5, [sp, #16]
 80114ac:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80114b0:	f06f 0501 	mvn.w	r5, #1
 80114b4:	fb05 fb08 	mul.w	fp, r5, r8
 80114b8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80114bc:	f834 500b 	ldrh.w	r5, [r4, fp]
 80114c0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80114c4:	122f      	asrs	r7, r5, #8
 80114c6:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80114ca:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80114ce:	00ed      	lsls	r5, r5, #3
 80114d0:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80114d4:	fb17 f706 	smulbb	r7, r7, r6
 80114d8:	b2ed      	uxtb	r5, r5
 80114da:	fb19 f906 	smulbb	r9, r9, r6
 80114de:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80114e2:	10c7      	asrs	r7, r0, #3
 80114e4:	fb15 f506 	smulbb	r5, r5, r6
 80114e8:	00c0      	lsls	r0, r0, #3
 80114ea:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80114ee:	fa1f fc8c 	uxth.w	ip, ip
 80114f2:	b2c0      	uxtb	r0, r0
 80114f4:	fb07 970a 	mla	r7, r7, sl, r9
 80114f8:	fb00 500a 	mla	r0, r0, sl, r5
 80114fc:	f10c 0501 	add.w	r5, ip, #1
 8011500:	b2bf      	uxth	r7, r7
 8011502:	b280      	uxth	r0, r0
 8011504:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011508:	f107 0901 	add.w	r9, r7, #1
 801150c:	1c45      	adds	r5, r0, #1
 801150e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011512:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011516:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801151a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801151e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011522:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8011526:	ea45 0c0c 	orr.w	ip, r5, ip
 801152a:	ea4c 0c09 	orr.w	ip, ip, r9
 801152e:	f824 c00b 	strh.w	ip, [r4, fp]
 8011532:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011534:	f108 38ff 	add.w	r8, r8, #4294967295
 8011538:	4401      	add	r1, r0
 801153a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801153c:	4402      	add	r2, r0
 801153e:	e75c      	b.n	80113fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8011540:	b007      	add	sp, #28
 8011542:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011546 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011546:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801154a:	b085      	sub	sp, #20
 801154c:	4693      	mov	fp, r2
 801154e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011552:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8011554:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8011556:	6870      	ldr	r0, [r6, #4]
 8011558:	9100      	str	r1, [sp, #0]
 801155a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801155e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8011562:	fb00 2404 	mla	r4, r0, r4, r2
 8011566:	6832      	ldr	r2, [r6, #0]
 8011568:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801156c:	682a      	ldr	r2, [r5, #0]
 801156e:	9201      	str	r2, [sp, #4]
 8011570:	686a      	ldr	r2, [r5, #4]
 8011572:	3204      	adds	r2, #4
 8011574:	9202      	str	r2, [sp, #8]
 8011576:	9a00      	ldr	r2, [sp, #0]
 8011578:	2a00      	cmp	r2, #0
 801157a:	dc03      	bgt.n	8011584 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801157c:	f1bb 0f00 	cmp.w	fp, #0
 8011580:	f340 80a0 	ble.w	80116c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8011584:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8011586:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801158a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801158e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011590:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011594:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011598:	2b00      	cmp	r3, #0
 801159a:	dd0c      	ble.n	80115b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801159c:	1406      	asrs	r6, r0, #16
 801159e:	d405      	bmi.n	80115ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80115a0:	454e      	cmp	r6, r9
 80115a2:	da03      	bge.n	80115ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80115a4:	1416      	asrs	r6, r2, #16
 80115a6:	d401      	bmi.n	80115ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80115a8:	4546      	cmp	r6, r8
 80115aa:	db05      	blt.n	80115b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80115ac:	4470      	add	r0, lr
 80115ae:	4462      	add	r2, ip
 80115b0:	3b01      	subs	r3, #1
 80115b2:	3402      	adds	r4, #2
 80115b4:	e7f0      	b.n	8011598 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80115b6:	d00f      	beq.n	80115d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80115b8:	1e5e      	subs	r6, r3, #1
 80115ba:	fb0e 0706 	mla	r7, lr, r6, r0
 80115be:	143f      	asrs	r7, r7, #16
 80115c0:	d541      	bpl.n	8011646 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80115c2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80115c6:	4698      	mov	r8, r3
 80115c8:	9603      	str	r6, [sp, #12]
 80115ca:	f1b8 0f00 	cmp.w	r8, #0
 80115ce:	dc59      	bgt.n	8011684 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80115d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80115d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80115d8:	9b00      	ldr	r3, [sp, #0]
 80115da:	2b00      	cmp	r3, #0
 80115dc:	dd72      	ble.n	80116c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80115de:	ee30 0a04 	vadd.f32	s0, s0, s8
 80115e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80115e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80115e8:	eeb0 6a62 	vmov.f32	s12, s5
 80115ec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80115f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80115f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80115f8:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80115fc:	eeb0 6a43 	vmov.f32	s12, s6
 8011600:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011604:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8011608:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801160c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011610:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011614:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011618:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801161c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011620:	ee12 2a90 	vmov	r2, s5
 8011624:	eef0 2a47 	vmov.f32	s5, s14
 8011628:	fb92 fef3 	sdiv	lr, r2, r3
 801162c:	ee13 2a10 	vmov	r2, s6
 8011630:	eeb0 3a67 	vmov.f32	s6, s15
 8011634:	fb92 fcf3 	sdiv	ip, r2, r3
 8011638:	9b00      	ldr	r3, [sp, #0]
 801163a:	3b01      	subs	r3, #1
 801163c:	9300      	str	r3, [sp, #0]
 801163e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011640:	bf08      	it	eq
 8011642:	465b      	moveq	r3, fp
 8011644:	e797      	b.n	8011576 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011646:	454f      	cmp	r7, r9
 8011648:	dabb      	bge.n	80115c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801164a:	fb0c 2606 	mla	r6, ip, r6, r2
 801164e:	1436      	asrs	r6, r6, #16
 8011650:	d4b7      	bmi.n	80115c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011652:	4546      	cmp	r6, r8
 8011654:	dab5      	bge.n	80115c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011656:	461e      	mov	r6, r3
 8011658:	46a0      	mov	r8, r4
 801165a:	2e00      	cmp	r6, #0
 801165c:	ddb8      	ble.n	80115d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801165e:	1417      	asrs	r7, r2, #16
 8011660:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8011664:	9901      	ldr	r1, [sp, #4]
 8011666:	ea4f 4920 	mov.w	r9, r0, asr #16
 801166a:	4462      	add	r2, ip
 801166c:	4470      	add	r0, lr
 801166e:	fb0a 1707 	mla	r7, sl, r7, r1
 8011672:	9902      	ldr	r1, [sp, #8]
 8011674:	3e01      	subs	r6, #1
 8011676:	f817 7009 	ldrb.w	r7, [r7, r9]
 801167a:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801167e:	f828 7b02 	strh.w	r7, [r8], #2
 8011682:	e7ea      	b.n	801165a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8011684:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011688:	d417      	bmi.n	80116ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801168a:	68ae      	ldr	r6, [r5, #8]
 801168c:	454e      	cmp	r6, r9
 801168e:	dd14      	ble.n	80116ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8011690:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011694:	d411      	bmi.n	80116ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8011696:	68ef      	ldr	r7, [r5, #12]
 8011698:	4557      	cmp	r7, sl
 801169a:	dd0e      	ble.n	80116ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801169c:	9f01      	ldr	r7, [sp, #4]
 801169e:	b236      	sxth	r6, r6
 80116a0:	f06f 0101 	mvn.w	r1, #1
 80116a4:	fb0a 7606 	mla	r6, sl, r6, r7
 80116a8:	9f02      	ldr	r7, [sp, #8]
 80116aa:	f816 6009 	ldrb.w	r6, [r6, r9]
 80116ae:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80116b2:	fb01 f608 	mul.w	r6, r1, r8
 80116b6:	9903      	ldr	r1, [sp, #12]
 80116b8:	538f      	strh	r7, [r1, r6]
 80116ba:	4470      	add	r0, lr
 80116bc:	4462      	add	r2, ip
 80116be:	f108 38ff 	add.w	r8, r8, #4294967295
 80116c2:	e782      	b.n	80115ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80116c4:	b005      	add	sp, #20
 80116c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080116ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80116ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80116ce:	b087      	sub	sp, #28
 80116d0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80116d2:	9205      	str	r2, [sp, #20]
 80116d4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80116d8:	9102      	str	r1, [sp, #8]
 80116da:	9203      	str	r2, [sp, #12]
 80116dc:	6861      	ldr	r1, [r4, #4]
 80116de:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 80116e2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80116e6:	fb01 2000 	mla	r0, r1, r0, r2
 80116ea:	6822      	ldr	r2, [r4, #0]
 80116ec:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80116f0:	9200      	str	r2, [sp, #0]
 80116f2:	f8dc 2000 	ldr.w	r2, [ip]
 80116f6:	9204      	str	r2, [sp, #16]
 80116f8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80116fc:	3204      	adds	r2, #4
 80116fe:	9201      	str	r2, [sp, #4]
 8011700:	9a03      	ldr	r2, [sp, #12]
 8011702:	43d5      	mvns	r5, r2
 8011704:	b2ed      	uxtb	r5, r5
 8011706:	9a02      	ldr	r2, [sp, #8]
 8011708:	2a00      	cmp	r2, #0
 801170a:	dc03      	bgt.n	8011714 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801170c:	9a05      	ldr	r2, [sp, #20]
 801170e:	2a00      	cmp	r2, #0
 8011710:	f340 812c 	ble.w	801196c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8011714:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011716:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801171a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801171e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011720:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8011724:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011728:	2b00      	cmp	r3, #0
 801172a:	dd10      	ble.n	801174e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801172c:	140c      	asrs	r4, r1, #16
 801172e:	d405      	bmi.n	801173c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011730:	4574      	cmp	r4, lr
 8011732:	da03      	bge.n	801173c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011734:	1414      	asrs	r4, r2, #16
 8011736:	d401      	bmi.n	801173c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011738:	42bc      	cmp	r4, r7
 801173a:	db09      	blt.n	8011750 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801173c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801173e:	3b01      	subs	r3, #1
 8011740:	9800      	ldr	r0, [sp, #0]
 8011742:	4421      	add	r1, r4
 8011744:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8011746:	3002      	adds	r0, #2
 8011748:	4422      	add	r2, r4
 801174a:	9000      	str	r0, [sp, #0]
 801174c:	e7ec      	b.n	8011728 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801174e:	d071      	beq.n	8011834 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8011750:	1e5c      	subs	r4, r3, #1
 8011752:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8011754:	fb06 1604 	mla	r6, r6, r4, r1
 8011758:	1436      	asrs	r6, r6, #16
 801175a:	d45d      	bmi.n	8011818 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801175c:	4576      	cmp	r6, lr
 801175e:	da5b      	bge.n	8011818 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011760:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8011762:	fb06 2404 	mla	r4, r6, r4, r2
 8011766:	1424      	asrs	r4, r4, #16
 8011768:	d456      	bmi.n	8011818 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801176a:	42bc      	cmp	r4, r7
 801176c:	da54      	bge.n	8011818 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801176e:	4698      	mov	r8, r3
 8011770:	f8dd 9000 	ldr.w	r9, [sp]
 8011774:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8011778:	f1b8 0f00 	cmp.w	r8, #0
 801177c:	dd54      	ble.n	8011828 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801177e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8011782:	1414      	asrs	r4, r2, #16
 8011784:	9804      	ldr	r0, [sp, #16]
 8011786:	140e      	asrs	r6, r1, #16
 8011788:	f108 38ff 	add.w	r8, r8, #4294967295
 801178c:	fb07 0404 	mla	r4, r7, r4, r0
 8011790:	9801      	ldr	r0, [sp, #4]
 8011792:	f814 e006 	ldrb.w	lr, [r4, r6]
 8011796:	f8b9 4000 	ldrh.w	r4, [r9]
 801179a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801179e:	1227      	asrs	r7, r4, #8
 80117a0:	eb00 0b0e 	add.w	fp, r0, lr
 80117a4:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80117a8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80117ac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80117ae:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80117b2:	f89b b001 	ldrb.w	fp, [fp, #1]
 80117b6:	4401      	add	r1, r0
 80117b8:	fb16 f60a 	smulbb	r6, r6, sl
 80117bc:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80117be:	fb1b fb0a 	smulbb	fp, fp, sl
 80117c2:	fb07 6705 	mla	r7, r7, r5, r6
 80117c6:	10e6      	asrs	r6, r4, #3
 80117c8:	00e4      	lsls	r4, r4, #3
 80117ca:	4402      	add	r2, r0
 80117cc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80117d0:	b2bf      	uxth	r7, r7
 80117d2:	b2e4      	uxtb	r4, r4
 80117d4:	fb06 b605 	mla	r6, r6, r5, fp
 80117d8:	fb14 f405 	smulbb	r4, r4, r5
 80117dc:	b2b6      	uxth	r6, r6
 80117de:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80117e2:	1c7c      	adds	r4, r7, #1
 80117e4:	f106 0b01 	add.w	fp, r6, #1
 80117e8:	fa1f fe8e 	uxth.w	lr, lr
 80117ec:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80117f0:	f10e 0401 	add.w	r4, lr, #1
 80117f4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80117f8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80117fc:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8011800:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8011804:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8011808:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801180c:	4327      	orrs	r7, r4
 801180e:	ea47 070b 	orr.w	r7, r7, fp
 8011812:	f829 7b02 	strh.w	r7, [r9], #2
 8011816:	e7af      	b.n	8011778 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8011818:	f04f 0e00 	mov.w	lr, #0
 801181c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8011820:	eb03 040e 	add.w	r4, r3, lr
 8011824:	2c00      	cmp	r4, #0
 8011826:	dc43      	bgt.n	80118b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8011828:	9a00      	ldr	r2, [sp, #0]
 801182a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801182e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8011832:	9300      	str	r3, [sp, #0]
 8011834:	9b02      	ldr	r3, [sp, #8]
 8011836:	2b00      	cmp	r3, #0
 8011838:	f340 8098 	ble.w	801196c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801183c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011840:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011842:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011846:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801184a:	eef0 6a62 	vmov.f32	s13, s5
 801184e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011852:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011856:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801185a:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801185e:	eef0 6a43 	vmov.f32	s13, s6
 8011862:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011866:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801186a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801186e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011872:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011876:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801187a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801187e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011882:	ee12 2a90 	vmov	r2, s5
 8011886:	eef0 2a47 	vmov.f32	s5, s14
 801188a:	fb92 f3f3 	sdiv	r3, r2, r3
 801188e:	ee13 2a10 	vmov	r2, s6
 8011892:	9313      	str	r3, [sp, #76]	@ 0x4c
 8011894:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011896:	eeb0 3a67 	vmov.f32	s6, s15
 801189a:	fb92 f3f3 	sdiv	r3, r2, r3
 801189e:	9314      	str	r3, [sp, #80]	@ 0x50
 80118a0:	9b02      	ldr	r3, [sp, #8]
 80118a2:	9a05      	ldr	r2, [sp, #20]
 80118a4:	3b01      	subs	r3, #1
 80118a6:	9302      	str	r3, [sp, #8]
 80118a8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80118aa:	bf08      	it	eq
 80118ac:	4613      	moveq	r3, r2
 80118ae:	e72a      	b.n	8011706 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80118b0:	140f      	asrs	r7, r1, #16
 80118b2:	d454      	bmi.n	801195e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80118b4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80118b8:	42be      	cmp	r6, r7
 80118ba:	dd50      	ble.n	801195e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80118bc:	ea5f 4822 	movs.w	r8, r2, asr #16
 80118c0:	d44d      	bmi.n	801195e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80118c2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80118c6:	4544      	cmp	r4, r8
 80118c8:	dd49      	ble.n	801195e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80118ca:	9c04      	ldr	r4, [sp, #16]
 80118cc:	b236      	sxth	r6, r6
 80118ce:	f06f 0001 	mvn.w	r0, #1
 80118d2:	fb08 4606 	mla	r6, r8, r6, r4
 80118d6:	9c01      	ldr	r4, [sp, #4]
 80118d8:	fb00 fa0e 	mul.w	sl, r0, lr
 80118dc:	9800      	ldr	r0, [sp, #0]
 80118de:	f816 8007 	ldrb.w	r8, [r6, r7]
 80118e2:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80118e6:	eb04 0b08 	add.w	fp, r4, r8
 80118ea:	f830 400a 	ldrh.w	r4, [r0, sl]
 80118ee:	9801      	ldr	r0, [sp, #4]
 80118f0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80118f4:	1227      	asrs	r7, r4, #8
 80118f6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80118fa:	fb16 f609 	smulbb	r6, r6, r9
 80118fe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011902:	f810 8008 	ldrb.w	r8, [r0, r8]
 8011906:	fb1b fb09 	smulbb	fp, fp, r9
 801190a:	fb07 6705 	mla	r7, r7, r5, r6
 801190e:	10e6      	asrs	r6, r4, #3
 8011910:	00e4      	lsls	r4, r4, #3
 8011912:	9800      	ldr	r0, [sp, #0]
 8011914:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011918:	b2bf      	uxth	r7, r7
 801191a:	b2e4      	uxtb	r4, r4
 801191c:	fb06 b605 	mla	r6, r6, r5, fp
 8011920:	fb14 f405 	smulbb	r4, r4, r5
 8011924:	b2b6      	uxth	r6, r6
 8011926:	fb08 4809 	mla	r8, r8, r9, r4
 801192a:	1c7c      	adds	r4, r7, #1
 801192c:	f106 0b01 	add.w	fp, r6, #1
 8011930:	fa1f f888 	uxth.w	r8, r8
 8011934:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8011938:	f108 0401 	add.w	r4, r8, #1
 801193c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8011940:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8011944:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8011948:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801194c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8011950:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8011954:	4327      	orrs	r7, r4
 8011956:	ea47 070b 	orr.w	r7, r7, fp
 801195a:	f820 700a 	strh.w	r7, [r0, sl]
 801195e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011960:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011964:	4401      	add	r1, r0
 8011966:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8011968:	4402      	add	r2, r0
 801196a:	e759      	b.n	8011820 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801196c:	b007      	add	sp, #28
 801196e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08011974 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011978:	b085      	sub	sp, #20
 801197a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801197e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8011980:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8011982:	9203      	str	r2, [sp, #12]
 8011984:	6870      	ldr	r0, [r6, #4]
 8011986:	686f      	ldr	r7, [r5, #4]
 8011988:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801198c:	3704      	adds	r7, #4
 801198e:	9101      	str	r1, [sp, #4]
 8011990:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8011994:	fb00 2404 	mla	r4, r0, r4, r2
 8011998:	6832      	ldr	r2, [r6, #0]
 801199a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801199e:	682a      	ldr	r2, [r5, #0]
 80119a0:	9202      	str	r2, [sp, #8]
 80119a2:	9a01      	ldr	r2, [sp, #4]
 80119a4:	2a00      	cmp	r2, #0
 80119a6:	dc03      	bgt.n	80119b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80119a8:	9a03      	ldr	r2, [sp, #12]
 80119aa:	2a00      	cmp	r2, #0
 80119ac:	f340 80cc 	ble.w	8011b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80119b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80119b2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80119b6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80119ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80119bc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80119c0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80119c4:	2b00      	cmp	r3, #0
 80119c6:	dd0d      	ble.n	80119e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80119c8:	1406      	asrs	r6, r0, #16
 80119ca:	d405      	bmi.n	80119d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80119cc:	454e      	cmp	r6, r9
 80119ce:	da03      	bge.n	80119d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80119d0:	1416      	asrs	r6, r2, #16
 80119d2:	d401      	bmi.n	80119d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80119d4:	4546      	cmp	r6, r8
 80119d6:	db06      	blt.n	80119e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80119d8:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 80119da:	4460      	add	r0, ip
 80119dc:	3b01      	subs	r3, #1
 80119de:	3402      	adds	r4, #2
 80119e0:	4432      	add	r2, r6
 80119e2:	e7ef      	b.n	80119c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80119e4:	d00f      	beq.n	8011a06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80119e6:	1e5e      	subs	r6, r3, #1
 80119e8:	fb0c 0e06 	mla	lr, ip, r6, r0
 80119ec:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80119f0:	d543      	bpl.n	8011a7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80119f2:	4698      	mov	r8, r3
 80119f4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80119f8:	f1b8 0f00 	cmp.w	r8, #0
 80119fc:	dc71      	bgt.n	8011ae2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80119fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011a02:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011a06:	9b01      	ldr	r3, [sp, #4]
 8011a08:	2b00      	cmp	r3, #0
 8011a0a:	f340 809d 	ble.w	8011b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8011a0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011a12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011a14:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011a18:	eeb0 6a62 	vmov.f32	s12, s5
 8011a1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011a20:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011a24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a28:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8011a2c:	eeb0 6a43 	vmov.f32	s12, s6
 8011a30:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a34:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8011a38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011a3c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011a40:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011a44:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011a48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011a4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011a50:	ee12 2a90 	vmov	r2, s5
 8011a54:	eef0 2a47 	vmov.f32	s5, s14
 8011a58:	fb92 fcf3 	sdiv	ip, r2, r3
 8011a5c:	ee13 2a10 	vmov	r2, s6
 8011a60:	eeb0 3a67 	vmov.f32	s6, s15
 8011a64:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a68:	9312      	str	r3, [sp, #72]	@ 0x48
 8011a6a:	9b01      	ldr	r3, [sp, #4]
 8011a6c:	9a03      	ldr	r2, [sp, #12]
 8011a6e:	3b01      	subs	r3, #1
 8011a70:	9301      	str	r3, [sp, #4]
 8011a72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011a74:	bf08      	it	eq
 8011a76:	4613      	moveq	r3, r2
 8011a78:	e793      	b.n	80119a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8011a7a:	45ce      	cmp	lr, r9
 8011a7c:	dab9      	bge.n	80119f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011a7e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8011a80:	fb01 2606 	mla	r6, r1, r6, r2
 8011a84:	1436      	asrs	r6, r6, #16
 8011a86:	d4b4      	bmi.n	80119f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011a88:	4546      	cmp	r6, r8
 8011a8a:	dab2      	bge.n	80119f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011a8c:	4698      	mov	r8, r3
 8011a8e:	46a2      	mov	sl, r4
 8011a90:	f1b8 0f00 	cmp.w	r8, #0
 8011a94:	ddb3      	ble.n	80119fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8011a96:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011a9a:	1416      	asrs	r6, r2, #16
 8011a9c:	9902      	ldr	r1, [sp, #8]
 8011a9e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8011aa2:	f108 38ff 	add.w	r8, r8, #4294967295
 8011aa6:	4460      	add	r0, ip
 8011aa8:	fb09 1606 	mla	r6, r9, r6, r1
 8011aac:	4928      	ldr	r1, [pc, #160]	@ (8011b50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8011aae:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8011ab2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011ab6:	eb07 0b0e 	add.w	fp, r7, lr
 8011aba:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8011abe:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8011ac2:	00f6      	lsls	r6, r6, #3
 8011ac4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8011ac8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8011aca:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8011ace:	440a      	add	r2, r1
 8011ad0:	ea49 0606 	orr.w	r6, r9, r6
 8011ad4:	f817 900e 	ldrb.w	r9, [r7, lr]
 8011ad8:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8011adc:	f82a 6b02 	strh.w	r6, [sl], #2
 8011ae0:	e7d6      	b.n	8011a90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011ae2:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011ae6:	d429      	bmi.n	8011b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011ae8:	68ae      	ldr	r6, [r5, #8]
 8011aea:	454e      	cmp	r6, r9
 8011aec:	dd26      	ble.n	8011b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011aee:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8011af2:	d423      	bmi.n	8011b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011af4:	68e9      	ldr	r1, [r5, #12]
 8011af6:	4559      	cmp	r1, fp
 8011af8:	dd20      	ble.n	8011b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011afa:	fa0f fe86 	sxth.w	lr, r6
 8011afe:	9902      	ldr	r1, [sp, #8]
 8011b00:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8011b04:	f06f 0101 	mvn.w	r1, #1
 8011b08:	f81e e009 	ldrb.w	lr, [lr, r9]
 8011b0c:	fb01 f908 	mul.w	r9, r1, r8
 8011b10:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8011b14:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011b18:	eb07 060e 	add.w	r6, r7, lr
 8011b1c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8011b20:	7876      	ldrb	r6, [r6, #1]
 8011b22:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8011b26:	00f6      	lsls	r6, r6, #3
 8011b28:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8011b2c:	ea4b 0606 	orr.w	r6, fp, r6
 8011b30:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8011b34:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8011b38:	f82a 6009 	strh.w	r6, [sl, r9]
 8011b3c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8011b3e:	4460      	add	r0, ip
 8011b40:	f108 38ff 	add.w	r8, r8, #4294967295
 8011b44:	440a      	add	r2, r1
 8011b46:	e757      	b.n	80119f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011b48:	b005      	add	sp, #20
 8011b4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b4e:	bf00      	nop
 8011b50:	fffff800 	.word	0xfffff800

08011b54 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b58:	b087      	sub	sp, #28
 8011b5a:	468b      	mov	fp, r1
 8011b5c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011b60:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8011b62:	9204      	str	r2, [sp, #16]
 8011b64:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8011b68:	6841      	ldr	r1, [r0, #4]
 8011b6a:	9205      	str	r2, [sp, #20]
 8011b6c:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8011b70:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8011b74:	fb01 2404 	mla	r4, r1, r4, r2
 8011b78:	6802      	ldr	r2, [r0, #0]
 8011b7a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011b7e:	f8dc 2000 	ldr.w	r2, [ip]
 8011b82:	9201      	str	r2, [sp, #4]
 8011b84:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8011b88:	3204      	adds	r2, #4
 8011b8a:	9202      	str	r2, [sp, #8]
 8011b8c:	f1bb 0f00 	cmp.w	fp, #0
 8011b90:	dc03      	bgt.n	8011b9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8011b92:	9a04      	ldr	r2, [sp, #16]
 8011b94:	2a00      	cmp	r2, #0
 8011b96:	f340 8138 	ble.w	8011e0a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8011b9a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011b9c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8011ba0:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011ba4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011ba6:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8011baa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011bae:	2b00      	cmp	r3, #0
 8011bb0:	dd0e      	ble.n	8011bd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011bb2:	1402      	asrs	r2, r0, #16
 8011bb4:	d405      	bmi.n	8011bc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011bb6:	42ba      	cmp	r2, r7
 8011bb8:	da03      	bge.n	8011bc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011bba:	140a      	asrs	r2, r1, #16
 8011bbc:	d401      	bmi.n	8011bc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011bbe:	42b2      	cmp	r2, r6
 8011bc0:	db07      	blt.n	8011bd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011bc2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011bc4:	3b01      	subs	r3, #1
 8011bc6:	3402      	adds	r4, #2
 8011bc8:	4410      	add	r0, r2
 8011bca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011bcc:	4411      	add	r1, r2
 8011bce:	e7ee      	b.n	8011bae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8011bd0:	d019      	beq.n	8011c06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8011bd2:	1e5a      	subs	r2, r3, #1
 8011bd4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8011bd6:	fb05 0502 	mla	r5, r5, r2, r0
 8011bda:	142d      	asrs	r5, r5, #16
 8011bdc:	d409      	bmi.n	8011bf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011bde:	42bd      	cmp	r5, r7
 8011be0:	da07      	bge.n	8011bf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011be2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8011be4:	fb05 1202 	mla	r2, r5, r2, r1
 8011be8:	1412      	asrs	r2, r2, #16
 8011bea:	d402      	bmi.n	8011bf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011bec:	42b2      	cmp	r2, r6
 8011bee:	f2c0 80ac 	blt.w	8011d4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8011bf2:	f04f 0e00 	mov.w	lr, #0
 8011bf6:	eb03 020e 	add.w	r2, r3, lr
 8011bfa:	2a00      	cmp	r2, #0
 8011bfc:	dc3e      	bgt.n	8011c7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011bfe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011c02:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011c06:	f1bb 0f00 	cmp.w	fp, #0
 8011c0a:	f340 80fe 	ble.w	8011e0a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8011c0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011c12:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011c14:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011c18:	f1bb 0b01 	subs.w	fp, fp, #1
 8011c1c:	eeb0 6a62 	vmov.f32	s12, s5
 8011c20:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011c24:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011c28:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011c2c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8011c30:	eeb0 6a43 	vmov.f32	s12, s6
 8011c34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011c38:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8011c3c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011c40:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011c44:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011c48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011c4c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011c50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011c54:	ee12 2a90 	vmov	r2, s5
 8011c58:	eef0 2a47 	vmov.f32	s5, s14
 8011c5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8011c60:	ee13 2a10 	vmov	r2, s6
 8011c64:	9313      	str	r3, [sp, #76]	@ 0x4c
 8011c66:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011c68:	eeb0 3a67 	vmov.f32	s6, s15
 8011c6c:	fb92 f3f3 	sdiv	r3, r2, r3
 8011c70:	9a04      	ldr	r2, [sp, #16]
 8011c72:	9314      	str	r3, [sp, #80]	@ 0x50
 8011c74:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011c76:	bf08      	it	eq
 8011c78:	4613      	moveq	r3, r2
 8011c7a:	e787      	b.n	8011b8c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011c7c:	1406      	asrs	r6, r0, #16
 8011c7e:	d45d      	bmi.n	8011d3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011c80:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8011c84:	42b5      	cmp	r5, r6
 8011c86:	dd59      	ble.n	8011d3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011c88:	140f      	asrs	r7, r1, #16
 8011c8a:	d457      	bmi.n	8011d3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011c8c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8011c90:	42ba      	cmp	r2, r7
 8011c92:	dd53      	ble.n	8011d3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011c94:	9a01      	ldr	r2, [sp, #4]
 8011c96:	b22d      	sxth	r5, r5
 8011c98:	fb07 2505 	mla	r5, r7, r5, r2
 8011c9c:	5daa      	ldrb	r2, [r5, r6]
 8011c9e:	9d02      	ldr	r5, [sp, #8]
 8011ca0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011ca4:	0e2e      	lsrs	r6, r5, #24
 8011ca6:	d049      	beq.n	8011d3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011ca8:	f06f 0201 	mvn.w	r2, #1
 8011cac:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011cb0:	fb02 f20e 	mul.w	r2, r2, lr
 8011cb4:	f834 8002 	ldrh.w	r8, [r4, r2]
 8011cb8:	9203      	str	r2, [sp, #12]
 8011cba:	9a05      	ldr	r2, [sp, #20]
 8011cbc:	ea4f 2728 	mov.w	r7, r8, asr #8
 8011cc0:	4356      	muls	r6, r2
 8011cc2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011cc6:	1c72      	adds	r2, r6, #1
 8011cc8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011ccc:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011cd0:	b2ed      	uxtb	r5, r5
 8011cd2:	1212      	asrs	r2, r2, #8
 8011cd4:	fa1f f982 	uxth.w	r9, r2
 8011cd8:	43d2      	mvns	r2, r2
 8011cda:	fb16 f609 	smulbb	r6, r6, r9
 8011cde:	b2d2      	uxtb	r2, r2
 8011ce0:	fb15 f509 	smulbb	r5, r5, r9
 8011ce4:	fb07 6702 	mla	r7, r7, r2, r6
 8011ce8:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8011cec:	fb1a fa09 	smulbb	sl, sl, r9
 8011cf0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011cf4:	b2bf      	uxth	r7, r7
 8011cf6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011cfa:	fa5f f888 	uxtb.w	r8, r8
 8011cfe:	fb06 a602 	mla	r6, r6, r2, sl
 8011d02:	fb08 5502 	mla	r5, r8, r2, r5
 8011d06:	1c7a      	adds	r2, r7, #1
 8011d08:	b2b6      	uxth	r6, r6
 8011d0a:	b2ad      	uxth	r5, r5
 8011d0c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011d10:	9a03      	ldr	r2, [sp, #12]
 8011d12:	f105 0a01 	add.w	sl, r5, #1
 8011d16:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8011d1a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011d1e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011d22:	ea4a 0707 	orr.w	r7, sl, r7
 8011d26:	f106 0a01 	add.w	sl, r6, #1
 8011d2a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011d2e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011d32:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8011d36:	ea47 070a 	orr.w	r7, r7, sl
 8011d3a:	52a7      	strh	r7, [r4, r2]
 8011d3c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011d3e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011d42:	4410      	add	r0, r2
 8011d44:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011d46:	4411      	add	r1, r2
 8011d48:	e755      	b.n	8011bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011d4a:	f04f 0800 	mov.w	r8, #0
 8011d4e:	eba3 0208 	sub.w	r2, r3, r8
 8011d52:	2a00      	cmp	r2, #0
 8011d54:	f77f af53 	ble.w	8011bfe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011d58:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8011d5c:	140a      	asrs	r2, r1, #16
 8011d5e:	9f01      	ldr	r7, [sp, #4]
 8011d60:	1405      	asrs	r5, r0, #16
 8011d62:	fb06 7202 	mla	r2, r6, r2, r7
 8011d66:	5d52      	ldrb	r2, [r2, r5]
 8011d68:	9d02      	ldr	r5, [sp, #8]
 8011d6a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011d6e:	0e2e      	lsrs	r6, r5, #24
 8011d70:	d044      	beq.n	8011dfc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8011d72:	9a05      	ldr	r2, [sp, #20]
 8011d74:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011d78:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8011d7c:	4356      	muls	r6, r2
 8011d7e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011d82:	1c72      	adds	r2, r6, #1
 8011d84:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011d88:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011d8c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011d90:	b2ed      	uxtb	r5, r5
 8011d92:	1212      	asrs	r2, r2, #8
 8011d94:	fa1f f982 	uxth.w	r9, r2
 8011d98:	43d2      	mvns	r2, r2
 8011d9a:	fb16 f609 	smulbb	r6, r6, r9
 8011d9e:	b2d2      	uxtb	r2, r2
 8011da0:	fb15 f509 	smulbb	r5, r5, r9
 8011da4:	fb07 6702 	mla	r7, r7, r2, r6
 8011da8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011dac:	fb1a fa09 	smulbb	sl, sl, r9
 8011db0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011db4:	b2bf      	uxth	r7, r7
 8011db6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011dba:	fa5f fe8e 	uxtb.w	lr, lr
 8011dbe:	fb06 a602 	mla	r6, r6, r2, sl
 8011dc2:	fb0e 5502 	mla	r5, lr, r2, r5
 8011dc6:	1c7a      	adds	r2, r7, #1
 8011dc8:	b2b6      	uxth	r6, r6
 8011dca:	b2ad      	uxth	r5, r5
 8011dcc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011dd0:	f105 0a01 	add.w	sl, r5, #1
 8011dd4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8011dd8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011ddc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011de0:	ea4a 0707 	orr.w	r7, sl, r7
 8011de4:	f106 0a01 	add.w	sl, r6, #1
 8011de8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011dec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011df0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8011df4:	ea47 070a 	orr.w	r7, r7, sl
 8011df8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8011dfc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011dfe:	f108 0801 	add.w	r8, r8, #1
 8011e02:	4410      	add	r0, r2
 8011e04:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011e06:	4411      	add	r1, r2
 8011e08:	e7a1      	b.n	8011d4e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8011e0a:	b007      	add	sp, #28
 8011e0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011e10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e14:	b085      	sub	sp, #20
 8011e16:	468b      	mov	fp, r1
 8011e18:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011e1c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011e1e:	9203      	str	r2, [sp, #12]
 8011e20:	6841      	ldr	r1, [r0, #4]
 8011e22:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8011e26:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8011e2a:	fb01 2404 	mla	r4, r1, r4, r2
 8011e2e:	6802      	ldr	r2, [r0, #0]
 8011e30:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011e34:	f8de 2000 	ldr.w	r2, [lr]
 8011e38:	9200      	str	r2, [sp, #0]
 8011e3a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011e3e:	3204      	adds	r2, #4
 8011e40:	9201      	str	r2, [sp, #4]
 8011e42:	f1bb 0f00 	cmp.w	fp, #0
 8011e46:	dc03      	bgt.n	8011e50 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8011e48:	9a03      	ldr	r2, [sp, #12]
 8011e4a:	2a00      	cmp	r2, #0
 8011e4c:	f340 8153 	ble.w	80120f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8011e50:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8011e52:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011e56:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011e5a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011e5c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8011e60:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011e64:	2b00      	cmp	r3, #0
 8011e66:	dd0e      	ble.n	8011e86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011e68:	1408      	asrs	r0, r1, #16
 8011e6a:	d405      	bmi.n	8011e78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011e6c:	42b8      	cmp	r0, r7
 8011e6e:	da03      	bge.n	8011e78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011e70:	1410      	asrs	r0, r2, #16
 8011e72:	d401      	bmi.n	8011e78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011e74:	42b0      	cmp	r0, r6
 8011e76:	db07      	blt.n	8011e88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8011e78:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011e7a:	3b01      	subs	r3, #1
 8011e7c:	3402      	adds	r4, #2
 8011e7e:	4401      	add	r1, r0
 8011e80:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011e82:	4402      	add	r2, r0
 8011e84:	e7ee      	b.n	8011e64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8011e86:	d017      	beq.n	8011eb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8011e88:	1e58      	subs	r0, r3, #1
 8011e8a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8011e8c:	fb05 1500 	mla	r5, r5, r0, r1
 8011e90:	142d      	asrs	r5, r5, #16
 8011e92:	d409      	bmi.n	8011ea8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011e94:	42bd      	cmp	r5, r7
 8011e96:	da07      	bge.n	8011ea8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011e98:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8011e9a:	fb05 2000 	mla	r0, r5, r0, r2
 8011e9e:	1400      	asrs	r0, r0, #16
 8011ea0:	d402      	bmi.n	8011ea8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011ea2:	42b0      	cmp	r0, r6
 8011ea4:	f2c0 80bc 	blt.w	8012020 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8011ea8:	2600      	movs	r6, #0
 8011eaa:	1998      	adds	r0, r3, r6
 8011eac:	2800      	cmp	r0, #0
 8011eae:	dc3e      	bgt.n	8011f2e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8011eb0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011eb4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011eb8:	f1bb 0f00 	cmp.w	fp, #0
 8011ebc:	f340 811b 	ble.w	80120f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8011ec0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011ec4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011ec6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011eca:	f1bb 0b01 	subs.w	fp, fp, #1
 8011ece:	eeb0 6a62 	vmov.f32	s12, s5
 8011ed2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011ed6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011eda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011ede:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8011ee2:	eeb0 6a43 	vmov.f32	s12, s6
 8011ee6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011eea:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8011eee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011ef2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011ef6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011efa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011efe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011f02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011f06:	ee12 2a90 	vmov	r2, s5
 8011f0a:	eef0 2a47 	vmov.f32	s5, s14
 8011f0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011f12:	ee13 2a10 	vmov	r2, s6
 8011f16:	9311      	str	r3, [sp, #68]	@ 0x44
 8011f18:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011f1a:	eeb0 3a67 	vmov.f32	s6, s15
 8011f1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011f22:	9a03      	ldr	r2, [sp, #12]
 8011f24:	9312      	str	r3, [sp, #72]	@ 0x48
 8011f26:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011f28:	bf08      	it	eq
 8011f2a:	4613      	moveq	r3, r2
 8011f2c:	e789      	b.n	8011e42 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8011f2e:	140f      	asrs	r7, r1, #16
 8011f30:	d426      	bmi.n	8011f80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011f32:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011f36:	42bd      	cmp	r5, r7
 8011f38:	dd22      	ble.n	8011f80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011f3a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011f3e:	d41f      	bmi.n	8011f80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011f40:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011f44:	4560      	cmp	r0, ip
 8011f46:	dd1b      	ble.n	8011f80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011f48:	9800      	ldr	r0, [sp, #0]
 8011f4a:	b22d      	sxth	r5, r5
 8011f4c:	fb0c 0505 	mla	r5, ip, r5, r0
 8011f50:	5de8      	ldrb	r0, [r5, r7]
 8011f52:	9d01      	ldr	r5, [sp, #4]
 8011f54:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8011f58:	0e07      	lsrs	r7, r0, #24
 8011f5a:	2fff      	cmp	r7, #255	@ 0xff
 8011f5c:	d116      	bne.n	8011f8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011f5e:	f06f 0501 	mvn.w	r5, #1
 8011f62:	fb05 f706 	mul.w	r7, r5, r6
 8011f66:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8011f6a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8011f6e:	0945      	lsrs	r5, r0, #5
 8011f70:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011f74:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8011f78:	ea4c 0505 	orr.w	r5, ip, r5
 8011f7c:	4305      	orrs	r5, r0
 8011f7e:	53e5      	strh	r5, [r4, r7]
 8011f80:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011f82:	3e01      	subs	r6, #1
 8011f84:	4401      	add	r1, r0
 8011f86:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011f88:	4402      	add	r2, r0
 8011f8a:	e78e      	b.n	8011eaa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8011f8c:	b2fd      	uxtb	r5, r7
 8011f8e:	2f00      	cmp	r7, #0
 8011f90:	d0f6      	beq.n	8011f80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011f92:	f06f 0701 	mvn.w	r7, #1
 8011f96:	fa1f f985 	uxth.w	r9, r5
 8011f9a:	43ed      	mvns	r5, r5
 8011f9c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011fa0:	4377      	muls	r7, r6
 8011fa2:	fb1a fa09 	smulbb	sl, sl, r9
 8011fa6:	b2ed      	uxtb	r5, r5
 8011fa8:	f834 8007 	ldrh.w	r8, [r4, r7]
 8011fac:	9702      	str	r7, [sp, #8]
 8011fae:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011fb2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8011fb6:	fb17 f709 	smulbb	r7, r7, r9
 8011fba:	b2c0      	uxtb	r0, r0
 8011fbc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011fc0:	fb10 f009 	smulbb	r0, r0, r9
 8011fc4:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011fc8:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8011fcc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011fd0:	fa1f fc8c 	uxth.w	ip, ip
 8011fd4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8011fd8:	fa5f f888 	uxtb.w	r8, r8
 8011fdc:	fb07 a705 	mla	r7, r7, r5, sl
 8011fe0:	fb08 0005 	mla	r0, r8, r5, r0
 8011fe4:	f10c 0501 	add.w	r5, ip, #1
 8011fe8:	b2bf      	uxth	r7, r7
 8011fea:	b280      	uxth	r0, r0
 8011fec:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011ff0:	f100 0a01 	add.w	sl, r0, #1
 8011ff4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011ff8:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011ffc:	9802      	ldr	r0, [sp, #8]
 8011ffe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012002:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012006:	f107 0a01 	add.w	sl, r7, #1
 801200a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801200e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012012:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012016:	ea4c 0c0a 	orr.w	ip, ip, sl
 801201a:	f824 c000 	strh.w	ip, [r4, r0]
 801201e:	e7af      	b.n	8011f80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012020:	f04f 0800 	mov.w	r8, #0
 8012024:	eba3 0008 	sub.w	r0, r3, r8
 8012028:	2800      	cmp	r0, #0
 801202a:	f77f af41 	ble.w	8011eb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801202e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8012032:	1410      	asrs	r0, r2, #16
 8012034:	9f00      	ldr	r7, [sp, #0]
 8012036:	140d      	asrs	r5, r1, #16
 8012038:	fb06 7000 	mla	r0, r6, r0, r7
 801203c:	5d40      	ldrb	r0, [r0, r5]
 801203e:	9d01      	ldr	r5, [sp, #4]
 8012040:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8012044:	0e2e      	lsrs	r6, r5, #24
 8012046:	2eff      	cmp	r6, #255	@ 0xff
 8012048:	d112      	bne.n	8012070 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801204a:	482c      	ldr	r0, [pc, #176]	@ (80120fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801204c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8012050:	0968      	lsrs	r0, r5, #5
 8012052:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012056:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801205a:	4330      	orrs	r0, r6
 801205c:	4328      	orrs	r0, r5
 801205e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8012062:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012064:	f108 0801 	add.w	r8, r8, #1
 8012068:	4401      	add	r1, r0
 801206a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801206c:	4402      	add	r2, r0
 801206e:	e7d9      	b.n	8012024 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012070:	b2f0      	uxtb	r0, r6
 8012072:	2e00      	cmp	r6, #0
 8012074:	d0f5      	beq.n	8012062 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8012076:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801207a:	fa1f f980 	uxth.w	r9, r0
 801207e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012082:	43c0      	mvns	r0, r0
 8012084:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012088:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801208c:	fb16 f609 	smulbb	r6, r6, r9
 8012090:	b2c0      	uxtb	r0, r0
 8012092:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012096:	b2ed      	uxtb	r5, r5
 8012098:	fb1a fa09 	smulbb	sl, sl, r9
 801209c:	fb07 6700 	mla	r7, r7, r0, r6
 80120a0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80120a4:	fb15 f509 	smulbb	r5, r5, r9
 80120a8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80120ac:	b2bf      	uxth	r7, r7
 80120ae:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80120b2:	fa5f fc8c 	uxtb.w	ip, ip
 80120b6:	fb06 a600 	mla	r6, r6, r0, sl
 80120ba:	fb0c 5500 	mla	r5, ip, r0, r5
 80120be:	1c78      	adds	r0, r7, #1
 80120c0:	b2b6      	uxth	r6, r6
 80120c2:	b2ad      	uxth	r5, r5
 80120c4:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80120c8:	f105 0a01 	add.w	sl, r5, #1
 80120cc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80120d0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80120d4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80120d8:	ea4a 0707 	orr.w	r7, sl, r7
 80120dc:	f106 0a01 	add.w	sl, r6, #1
 80120e0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80120e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80120e8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80120ec:	ea47 070a 	orr.w	r7, r7, sl
 80120f0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80120f4:	e7b5      	b.n	8012062 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80120f6:	b005      	add	sp, #20
 80120f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80120fc:	fffff800 	.word	0xfffff800

08012100 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012104:	b087      	sub	sp, #28
 8012106:	468b      	mov	fp, r1
 8012108:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801210c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801210e:	9204      	str	r2, [sp, #16]
 8012110:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012114:	6861      	ldr	r1, [r4, #4]
 8012116:	9205      	str	r2, [sp, #20]
 8012118:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801211c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8012120:	fb01 2000 	mla	r0, r1, r0, r2
 8012124:	6822      	ldr	r2, [r4, #0]
 8012126:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801212a:	f8de 2000 	ldr.w	r2, [lr]
 801212e:	9201      	str	r2, [sp, #4]
 8012130:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012134:	9202      	str	r2, [sp, #8]
 8012136:	f1bb 0f00 	cmp.w	fp, #0
 801213a:	dc03      	bgt.n	8012144 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801213c:	9a04      	ldr	r2, [sp, #16]
 801213e:	2a00      	cmp	r2, #0
 8012140:	f340 8142 	ble.w	80123c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8012144:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012146:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801214a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801214e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012150:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8012154:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012158:	2b00      	cmp	r3, #0
 801215a:	dd0e      	ble.n	801217a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801215c:	140c      	asrs	r4, r1, #16
 801215e:	d405      	bmi.n	801216c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012160:	42bc      	cmp	r4, r7
 8012162:	da03      	bge.n	801216c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012164:	1414      	asrs	r4, r2, #16
 8012166:	d401      	bmi.n	801216c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012168:	42b4      	cmp	r4, r6
 801216a:	db07      	blt.n	801217c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801216c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801216e:	3b01      	subs	r3, #1
 8012170:	3002      	adds	r0, #2
 8012172:	4421      	add	r1, r4
 8012174:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8012176:	4422      	add	r2, r4
 8012178:	e7ee      	b.n	8012158 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801217a:	d019      	beq.n	80121b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801217c:	1e5c      	subs	r4, r3, #1
 801217e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8012180:	fb05 1504 	mla	r5, r5, r4, r1
 8012184:	142d      	asrs	r5, r5, #16
 8012186:	d409      	bmi.n	801219c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012188:	42bd      	cmp	r5, r7
 801218a:	da07      	bge.n	801219c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801218c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801218e:	fb05 2404 	mla	r4, r5, r4, r2
 8012192:	1424      	asrs	r4, r4, #16
 8012194:	d402      	bmi.n	801219c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012196:	42b4      	cmp	r4, r6
 8012198:	f2c0 80b1 	blt.w	80122fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801219c:	f04f 0800 	mov.w	r8, #0
 80121a0:	eb03 0408 	add.w	r4, r3, r8
 80121a4:	2c00      	cmp	r4, #0
 80121a6:	dc3e      	bgt.n	8012226 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80121a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80121ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80121b0:	f1bb 0f00 	cmp.w	fp, #0
 80121b4:	f340 8108 	ble.w	80123c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80121b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80121bc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80121be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80121c2:	f1bb 0b01 	subs.w	fp, fp, #1
 80121c6:	eeb0 6a62 	vmov.f32	s12, s5
 80121ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80121ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80121d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80121d6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80121da:	eeb0 6a43 	vmov.f32	s12, s6
 80121de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80121e2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80121e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80121ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80121ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 80121f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80121f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80121fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80121fe:	ee12 2a90 	vmov	r2, s5
 8012202:	eef0 2a47 	vmov.f32	s5, s14
 8012206:	fb92 f3f3 	sdiv	r3, r2, r3
 801220a:	ee13 2a10 	vmov	r2, s6
 801220e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8012210:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012212:	eeb0 3a67 	vmov.f32	s6, s15
 8012216:	fb92 f3f3 	sdiv	r3, r2, r3
 801221a:	9a04      	ldr	r2, [sp, #16]
 801221c:	9314      	str	r3, [sp, #80]	@ 0x50
 801221e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012220:	bf08      	it	eq
 8012222:	4613      	moveq	r3, r2
 8012224:	e787      	b.n	8012136 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8012226:	140e      	asrs	r6, r1, #16
 8012228:	d462      	bmi.n	80122f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801222a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801222e:	42b5      	cmp	r5, r6
 8012230:	dd5e      	ble.n	80122f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012232:	1417      	asrs	r7, r2, #16
 8012234:	d45c      	bmi.n	80122f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012236:	f8de 400c 	ldr.w	r4, [lr, #12]
 801223a:	42bc      	cmp	r4, r7
 801223c:	dd58      	ble.n	80122f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801223e:	b22d      	sxth	r5, r5
 8012240:	9c02      	ldr	r4, [sp, #8]
 8012242:	fb07 6505 	mla	r5, r7, r5, r6
 8012246:	5d66      	ldrb	r6, [r4, r5]
 8012248:	2e00      	cmp	r6, #0
 801224a:	d051      	beq.n	80122f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801224c:	9c01      	ldr	r4, [sp, #4]
 801224e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8012252:	f06f 0401 	mvn.w	r4, #1
 8012256:	fb04 f408 	mul.w	r4, r4, r8
 801225a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801225e:	5b05      	ldrh	r5, [r0, r4]
 8012260:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012264:	9403      	str	r4, [sp, #12]
 8012266:	9c05      	ldr	r4, [sp, #20]
 8012268:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801226c:	4366      	muls	r6, r4
 801226e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8012272:	1c74      	adds	r4, r6, #1
 8012274:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8012278:	122e      	asrs	r6, r5, #8
 801227a:	1224      	asrs	r4, r4, #8
 801227c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8012280:	00ed      	lsls	r5, r5, #3
 8012282:	b2a7      	uxth	r7, r4
 8012284:	43e4      	mvns	r4, r4
 8012286:	b2ed      	uxtb	r5, r5
 8012288:	b2e4      	uxtb	r4, r4
 801228a:	fb16 f604 	smulbb	r6, r6, r4
 801228e:	fb15 f504 	smulbb	r5, r5, r4
 8012292:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012296:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801229a:	fb1a fa04 	smulbb	sl, sl, r4
 801229e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80122a2:	fa1f fc8c 	uxth.w	ip, ip
 80122a6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80122aa:	fa5f f989 	uxtb.w	r9, r9
 80122ae:	fb06 a607 	mla	r6, r6, r7, sl
 80122b2:	f10c 0401 	add.w	r4, ip, #1
 80122b6:	fb09 5507 	mla	r5, r9, r7, r5
 80122ba:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80122be:	9c03      	ldr	r4, [sp, #12]
 80122c0:	b2ad      	uxth	r5, r5
 80122c2:	b2b6      	uxth	r6, r6
 80122c4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80122c8:	f105 0a01 	add.w	sl, r5, #1
 80122cc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80122d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80122d4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80122d8:	f106 0a01 	add.w	sl, r6, #1
 80122dc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80122e0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80122e4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80122e8:	ea4c 0c0a 	orr.w	ip, ip, sl
 80122ec:	f820 c004 	strh.w	ip, [r0, r4]
 80122f0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80122f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80122f6:	4421      	add	r1, r4
 80122f8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80122fa:	4422      	add	r2, r4
 80122fc:	e750      	b.n	80121a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80122fe:	f04f 0900 	mov.w	r9, #0
 8012302:	eba3 0409 	sub.w	r4, r3, r9
 8012306:	2c00      	cmp	r4, #0
 8012308:	f77f af4e 	ble.w	80121a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801230c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8012310:	140d      	asrs	r5, r1, #16
 8012312:	1414      	asrs	r4, r2, #16
 8012314:	fb06 5404 	mla	r4, r6, r4, r5
 8012318:	9d02      	ldr	r5, [sp, #8]
 801231a:	5d2e      	ldrb	r6, [r5, r4]
 801231c:	2e00      	cmp	r6, #0
 801231e:	d04c      	beq.n	80123ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8012320:	9d01      	ldr	r5, [sp, #4]
 8012322:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8012326:	9c05      	ldr	r4, [sp, #20]
 8012328:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801232c:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8012330:	4366      	muls	r6, r4
 8012332:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012336:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801233a:	1c74      	adds	r4, r6, #1
 801233c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8012340:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8012344:	122e      	asrs	r6, r5, #8
 8012346:	1224      	asrs	r4, r4, #8
 8012348:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801234c:	00ed      	lsls	r5, r5, #3
 801234e:	b2a7      	uxth	r7, r4
 8012350:	43e4      	mvns	r4, r4
 8012352:	b2ed      	uxtb	r5, r5
 8012354:	b2e4      	uxtb	r4, r4
 8012356:	fb16 f604 	smulbb	r6, r6, r4
 801235a:	fb15 f504 	smulbb	r5, r5, r4
 801235e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012362:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8012366:	fb1a fa04 	smulbb	sl, sl, r4
 801236a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801236e:	fa1f fc8c 	uxth.w	ip, ip
 8012372:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012376:	fa5f f888 	uxtb.w	r8, r8
 801237a:	fb06 a607 	mla	r6, r6, r7, sl
 801237e:	f10c 0401 	add.w	r4, ip, #1
 8012382:	fb08 5507 	mla	r5, r8, r7, r5
 8012386:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801238a:	b2ad      	uxth	r5, r5
 801238c:	b2b6      	uxth	r6, r6
 801238e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012392:	f105 0a01 	add.w	sl, r5, #1
 8012396:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801239a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801239e:	ea4a 0c0c 	orr.w	ip, sl, ip
 80123a2:	f106 0a01 	add.w	sl, r6, #1
 80123a6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80123aa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80123ae:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80123b2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80123b6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80123ba:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80123bc:	f109 0901 	add.w	r9, r9, #1
 80123c0:	4421      	add	r1, r4
 80123c2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80123c4:	4422      	add	r2, r4
 80123c6:	e79c      	b.n	8012302 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80123c8:	b007      	add	sp, #28
 80123ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080123ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80123ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123d2:	b085      	sub	sp, #20
 80123d4:	468b      	mov	fp, r1
 80123d6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80123da:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80123dc:	9203      	str	r2, [sp, #12]
 80123de:	6861      	ldr	r1, [r4, #4]
 80123e0:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80123e4:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 80123e8:	fb01 2000 	mla	r0, r1, r0, r2
 80123ec:	6822      	ldr	r2, [r4, #0]
 80123ee:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80123f2:	f8d8 2000 	ldr.w	r2, [r8]
 80123f6:	9200      	str	r2, [sp, #0]
 80123f8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80123fc:	9201      	str	r2, [sp, #4]
 80123fe:	f1bb 0f00 	cmp.w	fp, #0
 8012402:	dc03      	bgt.n	801240c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012404:	9a03      	ldr	r2, [sp, #12]
 8012406:	2a00      	cmp	r2, #0
 8012408:	f340 8146 	ble.w	8012698 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801240c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801240e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8012412:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012416:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012418:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801241c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012420:	2b00      	cmp	r3, #0
 8012422:	dd0e      	ble.n	8012442 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012424:	140c      	asrs	r4, r1, #16
 8012426:	d405      	bmi.n	8012434 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012428:	42bc      	cmp	r4, r7
 801242a:	da03      	bge.n	8012434 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801242c:	1414      	asrs	r4, r2, #16
 801242e:	d401      	bmi.n	8012434 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012430:	42b4      	cmp	r4, r6
 8012432:	db07      	blt.n	8012444 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012434:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8012436:	3b01      	subs	r3, #1
 8012438:	3002      	adds	r0, #2
 801243a:	4421      	add	r1, r4
 801243c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801243e:	4422      	add	r2, r4
 8012440:	e7ee      	b.n	8012420 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012442:	d017      	beq.n	8012474 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012444:	1e5c      	subs	r4, r3, #1
 8012446:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8012448:	fb05 1504 	mla	r5, r5, r4, r1
 801244c:	142d      	asrs	r5, r5, #16
 801244e:	d409      	bmi.n	8012464 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012450:	42bd      	cmp	r5, r7
 8012452:	da07      	bge.n	8012464 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012454:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8012456:	fb05 2404 	mla	r4, r5, r4, r2
 801245a:	1424      	asrs	r4, r4, #16
 801245c:	d402      	bmi.n	8012464 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801245e:	42b4      	cmp	r4, r6
 8012460:	f2c0 80b3 	blt.w	80125ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8012464:	2600      	movs	r6, #0
 8012466:	199c      	adds	r4, r3, r6
 8012468:	2c00      	cmp	r4, #0
 801246a:	dc3e      	bgt.n	80124ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801246c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012470:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012474:	f1bb 0f00 	cmp.w	fp, #0
 8012478:	f340 810e 	ble.w	8012698 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801247c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012480:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012482:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012486:	f1bb 0b01 	subs.w	fp, fp, #1
 801248a:	eeb0 6a62 	vmov.f32	s12, s5
 801248e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012492:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012496:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801249a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801249e:	eeb0 6a43 	vmov.f32	s12, s6
 80124a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80124a6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80124aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80124ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80124b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80124b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80124ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80124be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80124c2:	ee12 2a90 	vmov	r2, s5
 80124c6:	eef0 2a47 	vmov.f32	s5, s14
 80124ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80124ce:	ee13 2a10 	vmov	r2, s6
 80124d2:	9311      	str	r3, [sp, #68]	@ 0x44
 80124d4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80124d6:	eeb0 3a67 	vmov.f32	s6, s15
 80124da:	fb92 f3f3 	sdiv	r3, r2, r3
 80124de:	9a03      	ldr	r2, [sp, #12]
 80124e0:	9312      	str	r3, [sp, #72]	@ 0x48
 80124e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80124e4:	bf08      	it	eq
 80124e6:	4613      	moveq	r3, r2
 80124e8:	e789      	b.n	80123fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80124ea:	140f      	asrs	r7, r1, #16
 80124ec:	d418      	bmi.n	8012520 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80124ee:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80124f2:	42bd      	cmp	r5, r7
 80124f4:	dd14      	ble.n	8012520 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80124f6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80124fa:	d411      	bmi.n	8012520 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80124fc:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8012500:	4564      	cmp	r4, ip
 8012502:	dd0d      	ble.n	8012520 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012504:	b22d      	sxth	r5, r5
 8012506:	9c01      	ldr	r4, [sp, #4]
 8012508:	fb0c 7505 	mla	r5, ip, r5, r7
 801250c:	5d64      	ldrb	r4, [r4, r5]
 801250e:	2cff      	cmp	r4, #255	@ 0xff
 8012510:	d10c      	bne.n	801252c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8012512:	9c00      	ldr	r4, [sp, #0]
 8012514:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8012518:	f06f 0401 	mvn.w	r4, #1
 801251c:	4374      	muls	r4, r6
 801251e:	5305      	strh	r5, [r0, r4]
 8012520:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8012522:	3e01      	subs	r6, #1
 8012524:	4421      	add	r1, r4
 8012526:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8012528:	4422      	add	r2, r4
 801252a:	e79c      	b.n	8012466 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801252c:	2c00      	cmp	r4, #0
 801252e:	d0f7      	beq.n	8012520 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012530:	9f00      	ldr	r7, [sp, #0]
 8012532:	fa1f fc84 	uxth.w	ip, r4
 8012536:	43e4      	mvns	r4, r4
 8012538:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801253c:	f06f 0501 	mvn.w	r5, #1
 8012540:	b2e4      	uxtb	r4, r4
 8012542:	4375      	muls	r5, r6
 8012544:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8012548:	9502      	str	r5, [sp, #8]
 801254a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801254e:	5b45      	ldrh	r5, [r0, r5]
 8012550:	122f      	asrs	r7, r5, #8
 8012552:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012556:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801255a:	00ed      	lsls	r5, r5, #3
 801255c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8012560:	fb17 f704 	smulbb	r7, r7, r4
 8012564:	b2ed      	uxtb	r5, r5
 8012566:	fb1a fa04 	smulbb	sl, sl, r4
 801256a:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801256e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8012572:	fb15 f504 	smulbb	r5, r5, r4
 8012576:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801257a:	fa1f fe8e 	uxth.w	lr, lr
 801257e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012582:	fa5f f989 	uxtb.w	r9, r9
 8012586:	fb07 a70c 	mla	r7, r7, ip, sl
 801258a:	f10e 0401 	add.w	r4, lr, #1
 801258e:	fb09 550c 	mla	r5, r9, ip, r5
 8012592:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8012596:	9c02      	ldr	r4, [sp, #8]
 8012598:	b2ad      	uxth	r5, r5
 801259a:	b2bf      	uxth	r7, r7
 801259c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80125a0:	f105 0a01 	add.w	sl, r5, #1
 80125a4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80125a8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80125ac:	ea4a 0e0e 	orr.w	lr, sl, lr
 80125b0:	f107 0a01 	add.w	sl, r7, #1
 80125b4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80125b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80125bc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80125c0:	ea4e 0e0a 	orr.w	lr, lr, sl
 80125c4:	f820 e004 	strh.w	lr, [r0, r4]
 80125c8:	e7aa      	b.n	8012520 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80125ca:	f04f 0900 	mov.w	r9, #0
 80125ce:	eba3 0409 	sub.w	r4, r3, r9
 80125d2:	2c00      	cmp	r4, #0
 80125d4:	f77f af4a 	ble.w	801246c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80125d8:	1414      	asrs	r4, r2, #16
 80125da:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80125de:	140d      	asrs	r5, r1, #16
 80125e0:	fb06 5504 	mla	r5, r6, r4, r5
 80125e4:	9c01      	ldr	r4, [sp, #4]
 80125e6:	5d64      	ldrb	r4, [r4, r5]
 80125e8:	2cff      	cmp	r4, #255	@ 0xff
 80125ea:	d10b      	bne.n	8012604 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80125ec:	9c00      	ldr	r4, [sp, #0]
 80125ee:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80125f2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80125f6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80125f8:	f109 0901 	add.w	r9, r9, #1
 80125fc:	4421      	add	r1, r4
 80125fe:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8012600:	4422      	add	r2, r4
 8012602:	e7e4      	b.n	80125ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8012604:	2c00      	cmp	r4, #0
 8012606:	d0f6      	beq.n	80125f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8012608:	9e00      	ldr	r6, [sp, #0]
 801260a:	b2a7      	uxth	r7, r4
 801260c:	43e4      	mvns	r4, r4
 801260e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8012612:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8012616:	b2e4      	uxtb	r4, r4
 8012618:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801261c:	122e      	asrs	r6, r5, #8
 801261e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012622:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012626:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801262a:	00ed      	lsls	r5, r5, #3
 801262c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8012630:	fb16 f604 	smulbb	r6, r6, r4
 8012634:	b2ed      	uxtb	r5, r5
 8012636:	fb1a fa04 	smulbb	sl, sl, r4
 801263a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801263e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012642:	fb15 f504 	smulbb	r5, r5, r4
 8012646:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801264a:	fa1f fc8c 	uxth.w	ip, ip
 801264e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012652:	fa5f fe8e 	uxtb.w	lr, lr
 8012656:	fb06 a607 	mla	r6, r6, r7, sl
 801265a:	f10c 0401 	add.w	r4, ip, #1
 801265e:	fb0e 5507 	mla	r5, lr, r7, r5
 8012662:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012666:	b2ad      	uxth	r5, r5
 8012668:	b2b6      	uxth	r6, r6
 801266a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801266e:	f105 0a01 	add.w	sl, r5, #1
 8012672:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012676:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801267a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801267e:	f106 0a01 	add.w	sl, r6, #1
 8012682:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012686:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801268a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801268e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012692:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8012696:	e7ae      	b.n	80125f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8012698:	b005      	add	sp, #20
 801269a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801269e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801269e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126a2:	b085      	sub	sp, #20
 80126a4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80126a6:	9203      	str	r2, [sp, #12]
 80126a8:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 80126ac:	9100      	str	r1, [sp, #0]
 80126ae:	9201      	str	r2, [sp, #4]
 80126b0:	6841      	ldr	r1, [r0, #4]
 80126b2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80126b6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80126ba:	fb01 2404 	mla	r4, r1, r4, r2
 80126be:	6802      	ldr	r2, [r0, #0]
 80126c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80126c4:	f8de 2000 	ldr.w	r2, [lr]
 80126c8:	9202      	str	r2, [sp, #8]
 80126ca:	9a01      	ldr	r2, [sp, #4]
 80126cc:	43d6      	mvns	r6, r2
 80126ce:	b2f6      	uxtb	r6, r6
 80126d0:	9a00      	ldr	r2, [sp, #0]
 80126d2:	2a00      	cmp	r2, #0
 80126d4:	dc03      	bgt.n	80126de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80126d6:	9a03      	ldr	r2, [sp, #12]
 80126d8:	2a00      	cmp	r2, #0
 80126da:	f340 8124 	ble.w	8012926 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80126de:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80126e0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80126e4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80126e8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80126ea:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80126ee:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80126f2:	2b00      	cmp	r3, #0
 80126f4:	dd0e      	ble.n	8012714 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80126f6:	1408      	asrs	r0, r1, #16
 80126f8:	d405      	bmi.n	8012706 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80126fa:	4560      	cmp	r0, ip
 80126fc:	da03      	bge.n	8012706 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80126fe:	1410      	asrs	r0, r2, #16
 8012700:	d401      	bmi.n	8012706 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012702:	42b8      	cmp	r0, r7
 8012704:	db07      	blt.n	8012716 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8012706:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012708:	3b01      	subs	r3, #1
 801270a:	3402      	adds	r4, #2
 801270c:	4401      	add	r1, r0
 801270e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012710:	4402      	add	r2, r0
 8012712:	e7ee      	b.n	80126f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8012714:	d06e      	beq.n	80127f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8012716:	1e58      	subs	r0, r3, #1
 8012718:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801271a:	fb05 1500 	mla	r5, r5, r0, r1
 801271e:	142d      	asrs	r5, r5, #16
 8012720:	d45c      	bmi.n	80127dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012722:	4565      	cmp	r5, ip
 8012724:	da5a      	bge.n	80127dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012726:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8012728:	fb05 2000 	mla	r0, r5, r0, r2
 801272c:	1400      	asrs	r0, r0, #16
 801272e:	d455      	bmi.n	80127dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012730:	42b8      	cmp	r0, r7
 8012732:	da53      	bge.n	80127dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012734:	4699      	mov	r9, r3
 8012736:	46a2      	mov	sl, r4
 8012738:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801273c:	f1b9 0f00 	cmp.w	r9, #0
 8012740:	dd54      	ble.n	80127ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012742:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012746:	140d      	asrs	r5, r1, #16
 8012748:	1410      	asrs	r0, r2, #16
 801274a:	f109 39ff 	add.w	r9, r9, #4294967295
 801274e:	fb07 5000 	mla	r0, r7, r0, r5
 8012752:	9d02      	ldr	r5, [sp, #8]
 8012754:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8012758:	f8ba 5000 	ldrh.w	r5, [sl]
 801275c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012760:	122f      	asrs	r7, r5, #8
 8012762:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8012766:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801276a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801276e:	00ed      	lsls	r5, r5, #3
 8012770:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8012774:	fb17 f706 	smulbb	r7, r7, r6
 8012778:	b2ed      	uxtb	r5, r5
 801277a:	fb18 f806 	smulbb	r8, r8, r6
 801277e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8012782:	10c7      	asrs	r7, r0, #3
 8012784:	fb15 f506 	smulbb	r5, r5, r6
 8012788:	00c0      	lsls	r0, r0, #3
 801278a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801278e:	fa1f fc8c 	uxth.w	ip, ip
 8012792:	b2c0      	uxtb	r0, r0
 8012794:	fb07 870b 	mla	r7, r7, fp, r8
 8012798:	fb00 500b 	mla	r0, r0, fp, r5
 801279c:	f10c 0501 	add.w	r5, ip, #1
 80127a0:	b2bf      	uxth	r7, r7
 80127a2:	b280      	uxth	r0, r0
 80127a4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80127a8:	f107 0801 	add.w	r8, r7, #1
 80127ac:	1c45      	adds	r5, r0, #1
 80127ae:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80127b2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80127b6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80127ba:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80127bc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80127c0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80127c4:	4401      	add	r1, r0
 80127c6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80127ca:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80127cc:	ea45 0c0c 	orr.w	ip, r5, ip
 80127d0:	4402      	add	r2, r0
 80127d2:	ea4c 0c08 	orr.w	ip, ip, r8
 80127d6:	f82a cb02 	strh.w	ip, [sl], #2
 80127da:	e7af      	b.n	801273c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80127dc:	f04f 0800 	mov.w	r8, #0
 80127e0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80127e4:	eb03 0008 	add.w	r0, r3, r8
 80127e8:	2800      	cmp	r0, #0
 80127ea:	dc41      	bgt.n	8012870 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80127ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80127f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80127f4:	9b00      	ldr	r3, [sp, #0]
 80127f6:	2b00      	cmp	r3, #0
 80127f8:	f340 8095 	ble.w	8012926 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80127fc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012800:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012802:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012806:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801280a:	eef0 6a62 	vmov.f32	s13, s5
 801280e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012812:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012816:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801281a:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 801281e:	eef0 6a43 	vmov.f32	s13, s6
 8012822:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012826:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 801282a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801282e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012832:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012836:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801283a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801283e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012842:	ee12 2a90 	vmov	r2, s5
 8012846:	eef0 2a47 	vmov.f32	s5, s14
 801284a:	fb92 f3f3 	sdiv	r3, r2, r3
 801284e:	ee13 2a10 	vmov	r2, s6
 8012852:	9311      	str	r3, [sp, #68]	@ 0x44
 8012854:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012856:	eeb0 3a67 	vmov.f32	s6, s15
 801285a:	fb92 f3f3 	sdiv	r3, r2, r3
 801285e:	9312      	str	r3, [sp, #72]	@ 0x48
 8012860:	9b00      	ldr	r3, [sp, #0]
 8012862:	9a03      	ldr	r2, [sp, #12]
 8012864:	3b01      	subs	r3, #1
 8012866:	9300      	str	r3, [sp, #0]
 8012868:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801286a:	bf08      	it	eq
 801286c:	4613      	moveq	r3, r2
 801286e:	e72f      	b.n	80126d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8012870:	140f      	asrs	r7, r1, #16
 8012872:	d451      	bmi.n	8012918 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012874:	f8de 5008 	ldr.w	r5, [lr, #8]
 8012878:	42bd      	cmp	r5, r7
 801287a:	dd4d      	ble.n	8012918 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801287c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012880:	d44a      	bmi.n	8012918 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012882:	f8de 000c 	ldr.w	r0, [lr, #12]
 8012886:	4560      	cmp	r0, ip
 8012888:	dd46      	ble.n	8012918 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801288a:	b22d      	sxth	r5, r5
 801288c:	9802      	ldr	r0, [sp, #8]
 801288e:	fb0c 7505 	mla	r5, ip, r5, r7
 8012892:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8012896:	f06f 0501 	mvn.w	r5, #1
 801289a:	fb05 fb08 	mul.w	fp, r5, r8
 801289e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80128a2:	f834 500b 	ldrh.w	r5, [r4, fp]
 80128a6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80128aa:	122f      	asrs	r7, r5, #8
 80128ac:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80128b0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80128b4:	00ed      	lsls	r5, r5, #3
 80128b6:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80128ba:	fb17 f706 	smulbb	r7, r7, r6
 80128be:	b2ed      	uxtb	r5, r5
 80128c0:	fb19 f906 	smulbb	r9, r9, r6
 80128c4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80128c8:	10c7      	asrs	r7, r0, #3
 80128ca:	fb15 f506 	smulbb	r5, r5, r6
 80128ce:	00c0      	lsls	r0, r0, #3
 80128d0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80128d4:	fa1f fc8c 	uxth.w	ip, ip
 80128d8:	b2c0      	uxtb	r0, r0
 80128da:	fb07 970a 	mla	r7, r7, sl, r9
 80128de:	fb00 500a 	mla	r0, r0, sl, r5
 80128e2:	f10c 0501 	add.w	r5, ip, #1
 80128e6:	b2bf      	uxth	r7, r7
 80128e8:	b280      	uxth	r0, r0
 80128ea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80128ee:	f107 0901 	add.w	r9, r7, #1
 80128f2:	1c45      	adds	r5, r0, #1
 80128f4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80128f8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80128fc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012900:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012904:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012908:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801290c:	ea45 0c0c 	orr.w	ip, r5, ip
 8012910:	ea4c 0c09 	orr.w	ip, ip, r9
 8012914:	f824 c00b 	strh.w	ip, [r4, fp]
 8012918:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801291a:	f108 38ff 	add.w	r8, r8, #4294967295
 801291e:	4401      	add	r1, r0
 8012920:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012922:	4402      	add	r2, r0
 8012924:	e75e      	b.n	80127e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8012926:	b005      	add	sp, #20
 8012928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801292c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801292c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012930:	b085      	sub	sp, #20
 8012932:	4693      	mov	fp, r2
 8012934:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012938:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801293a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801293c:	6870      	ldr	r0, [r6, #4]
 801293e:	9101      	str	r1, [sp, #4]
 8012940:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8012944:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8012948:	fb00 2404 	mla	r4, r0, r4, r2
 801294c:	6832      	ldr	r2, [r6, #0]
 801294e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012952:	682a      	ldr	r2, [r5, #0]
 8012954:	9202      	str	r2, [sp, #8]
 8012956:	9a01      	ldr	r2, [sp, #4]
 8012958:	2a00      	cmp	r2, #0
 801295a:	dc03      	bgt.n	8012964 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801295c:	f1bb 0f00 	cmp.w	fp, #0
 8012960:	f340 809a 	ble.w	8012a98 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8012964:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012966:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801296a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801296e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012970:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8012974:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012978:	2b00      	cmp	r3, #0
 801297a:	dd0c      	ble.n	8012996 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801297c:	1406      	asrs	r6, r0, #16
 801297e:	d405      	bmi.n	801298c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012980:	454e      	cmp	r6, r9
 8012982:	da03      	bge.n	801298c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012984:	1416      	asrs	r6, r2, #16
 8012986:	d401      	bmi.n	801298c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012988:	4546      	cmp	r6, r8
 801298a:	db05      	blt.n	8012998 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801298c:	4470      	add	r0, lr
 801298e:	4462      	add	r2, ip
 8012990:	3b01      	subs	r3, #1
 8012992:	3402      	adds	r4, #2
 8012994:	e7f0      	b.n	8012978 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8012996:	d00f      	beq.n	80129b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8012998:	1e5e      	subs	r6, r3, #1
 801299a:	fb0e 0706 	mla	r7, lr, r6, r0
 801299e:	143f      	asrs	r7, r7, #16
 80129a0:	d541      	bpl.n	8012a26 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80129a2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80129a6:	4698      	mov	r8, r3
 80129a8:	9603      	str	r6, [sp, #12]
 80129aa:	f1b8 0f00 	cmp.w	r8, #0
 80129ae:	dc56      	bgt.n	8012a5e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80129b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80129b4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80129b8:	9b01      	ldr	r3, [sp, #4]
 80129ba:	2b00      	cmp	r3, #0
 80129bc:	dd6c      	ble.n	8012a98 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80129be:	ee30 0a04 	vadd.f32	s0, s0, s8
 80129c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80129c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80129c8:	eeb0 6a62 	vmov.f32	s12, s5
 80129cc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80129d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80129d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80129d8:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80129dc:	eeb0 6a43 	vmov.f32	s12, s6
 80129e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80129e4:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80129e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80129ec:	ee61 7a27 	vmul.f32	s15, s2, s15
 80129f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80129f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80129f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80129fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012a00:	ee12 2a90 	vmov	r2, s5
 8012a04:	eef0 2a47 	vmov.f32	s5, s14
 8012a08:	fb92 fef3 	sdiv	lr, r2, r3
 8012a0c:	ee13 2a10 	vmov	r2, s6
 8012a10:	eeb0 3a67 	vmov.f32	s6, s15
 8012a14:	fb92 fcf3 	sdiv	ip, r2, r3
 8012a18:	9b01      	ldr	r3, [sp, #4]
 8012a1a:	3b01      	subs	r3, #1
 8012a1c:	9301      	str	r3, [sp, #4]
 8012a1e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012a20:	bf08      	it	eq
 8012a22:	465b      	moveq	r3, fp
 8012a24:	e797      	b.n	8012956 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8012a26:	454f      	cmp	r7, r9
 8012a28:	dabb      	bge.n	80129a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012a2a:	fb0c 2606 	mla	r6, ip, r6, r2
 8012a2e:	1436      	asrs	r6, r6, #16
 8012a30:	d4b7      	bmi.n	80129a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012a32:	4546      	cmp	r6, r8
 8012a34:	dab5      	bge.n	80129a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012a36:	461e      	mov	r6, r3
 8012a38:	46a0      	mov	r8, r4
 8012a3a:	2e00      	cmp	r6, #0
 8012a3c:	ddb8      	ble.n	80129b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012a3e:	1417      	asrs	r7, r2, #16
 8012a40:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8012a44:	ea4f 4920 	mov.w	r9, r0, asr #16
 8012a48:	9902      	ldr	r1, [sp, #8]
 8012a4a:	4470      	add	r0, lr
 8012a4c:	4462      	add	r2, ip
 8012a4e:	fb0a 9707 	mla	r7, sl, r7, r9
 8012a52:	3e01      	subs	r6, #1
 8012a54:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8012a58:	f828 7b02 	strh.w	r7, [r8], #2
 8012a5c:	e7ed      	b.n	8012a3a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8012a5e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012a62:	d414      	bmi.n	8012a8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012a64:	68ae      	ldr	r6, [r5, #8]
 8012a66:	454e      	cmp	r6, r9
 8012a68:	dd11      	ble.n	8012a8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012a6a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8012a6e:	d40e      	bmi.n	8012a8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012a70:	68ef      	ldr	r7, [r5, #12]
 8012a72:	4557      	cmp	r7, sl
 8012a74:	dd0b      	ble.n	8012a8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012a76:	b236      	sxth	r6, r6
 8012a78:	f06f 0101 	mvn.w	r1, #1
 8012a7c:	9f02      	ldr	r7, [sp, #8]
 8012a7e:	fb0a 9606 	mla	r6, sl, r6, r9
 8012a82:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8012a86:	fb01 f608 	mul.w	r6, r1, r8
 8012a8a:	9903      	ldr	r1, [sp, #12]
 8012a8c:	538f      	strh	r7, [r1, r6]
 8012a8e:	4470      	add	r0, lr
 8012a90:	4462      	add	r2, ip
 8012a92:	f108 38ff 	add.w	r8, r8, #4294967295
 8012a96:	e788      	b.n	80129aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012a98:	b005      	add	sp, #20
 8012a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012a9e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012a9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012aa2:	b087      	sub	sp, #28
 8012aa4:	468b      	mov	fp, r1
 8012aa6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012aaa:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8012aac:	9203      	str	r2, [sp, #12]
 8012aae:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012ab2:	6841      	ldr	r1, [r0, #4]
 8012ab4:	9204      	str	r2, [sp, #16]
 8012ab6:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8012aba:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8012abe:	fb01 2505 	mla	r5, r1, r5, r2
 8012ac2:	6802      	ldr	r2, [r0, #0]
 8012ac4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8012ac8:	f8d9 2000 	ldr.w	r2, [r9]
 8012acc:	9201      	str	r2, [sp, #4]
 8012ace:	f1bb 0f00 	cmp.w	fp, #0
 8012ad2:	dc03      	bgt.n	8012adc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012ad4:	9a03      	ldr	r2, [sp, #12]
 8012ad6:	2a00      	cmp	r2, #0
 8012ad8:	f340 8158 	ble.w	8012d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8012adc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012ade:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8012ae2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8012ae6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012ae8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8012aec:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012af0:	2b00      	cmp	r3, #0
 8012af2:	dd0e      	ble.n	8012b12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012af4:	1402      	asrs	r2, r0, #16
 8012af6:	d405      	bmi.n	8012b04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012af8:	42ba      	cmp	r2, r7
 8012afa:	da03      	bge.n	8012b04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012afc:	140a      	asrs	r2, r1, #16
 8012afe:	d401      	bmi.n	8012b04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012b00:	42b2      	cmp	r2, r6
 8012b02:	db07      	blt.n	8012b14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012b04:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012b06:	3b01      	subs	r3, #1
 8012b08:	3502      	adds	r5, #2
 8012b0a:	4410      	add	r0, r2
 8012b0c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012b0e:	4411      	add	r1, r2
 8012b10:	e7ee      	b.n	8012af0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012b12:	d017      	beq.n	8012b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012b14:	1e5a      	subs	r2, r3, #1
 8012b16:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8012b18:	fb04 0402 	mla	r4, r4, r2, r0
 8012b1c:	1424      	asrs	r4, r4, #16
 8012b1e:	d409      	bmi.n	8012b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012b20:	42bc      	cmp	r4, r7
 8012b22:	da07      	bge.n	8012b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012b24:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8012b26:	fb04 1202 	mla	r2, r4, r2, r1
 8012b2a:	1412      	asrs	r2, r2, #16
 8012b2c:	d402      	bmi.n	8012b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012b2e:	42b2      	cmp	r2, r6
 8012b30:	f2c0 80bf 	blt.w	8012cb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012b34:	2700      	movs	r7, #0
 8012b36:	19da      	adds	r2, r3, r7
 8012b38:	2a00      	cmp	r2, #0
 8012b3a:	dc3e      	bgt.n	8012bba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012b3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012b40:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8012b44:	f1bb 0f00 	cmp.w	fp, #0
 8012b48:	f340 8120 	ble.w	8012d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8012b4c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012b50:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012b52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012b56:	f1bb 0b01 	subs.w	fp, fp, #1
 8012b5a:	eeb0 6a62 	vmov.f32	s12, s5
 8012b5e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012b62:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012b66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012b6a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8012b6e:	eeb0 6a43 	vmov.f32	s12, s6
 8012b72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012b76:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8012b7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012b7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012b82:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012b86:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012b8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012b8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012b92:	ee12 2a90 	vmov	r2, s5
 8012b96:	eef0 2a47 	vmov.f32	s5, s14
 8012b9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8012b9e:	ee13 2a10 	vmov	r2, s6
 8012ba2:	9313      	str	r3, [sp, #76]	@ 0x4c
 8012ba4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012ba6:	eeb0 3a67 	vmov.f32	s6, s15
 8012baa:	fb92 f3f3 	sdiv	r3, r2, r3
 8012bae:	9a03      	ldr	r2, [sp, #12]
 8012bb0:	9314      	str	r3, [sp, #80]	@ 0x50
 8012bb2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012bb4:	bf08      	it	eq
 8012bb6:	4613      	moveq	r3, r2
 8012bb8:	e789      	b.n	8012ace <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012bba:	1406      	asrs	r6, r0, #16
 8012bbc:	d42d      	bmi.n	8012c1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012bbe:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8012bc2:	42b4      	cmp	r4, r6
 8012bc4:	dd29      	ble.n	8012c1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012bc6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8012bca:	d426      	bmi.n	8012c1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012bcc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8012bd0:	4562      	cmp	r2, ip
 8012bd2:	dd22      	ble.n	8012c1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012bd4:	b224      	sxth	r4, r4
 8012bd6:	9a01      	ldr	r2, [sp, #4]
 8012bd8:	fb0c 6404 	mla	r4, ip, r4, r6
 8012bdc:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8012be0:	0e22      	lsrs	r2, r4, #24
 8012be2:	d01a      	beq.n	8012c1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012be4:	9e04      	ldr	r6, [sp, #16]
 8012be6:	4372      	muls	r2, r6
 8012be8:	1c56      	adds	r6, r2, #1
 8012bea:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8012bee:	0a26      	lsrs	r6, r4, #8
 8012bf0:	1212      	asrs	r2, r2, #8
 8012bf2:	9605      	str	r6, [sp, #20]
 8012bf4:	2aff      	cmp	r2, #255	@ 0xff
 8012bf6:	d116      	bne.n	8012c26 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8012bf8:	f06f 0201 	mvn.w	r2, #1
 8012bfc:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8012c00:	fb02 fc07 	mul.w	ip, r2, r7
 8012c04:	0962      	lsrs	r2, r4, #5
 8012c06:	f026 0607 	bic.w	r6, r6, #7
 8012c0a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012c0e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8012c12:	4316      	orrs	r6, r2
 8012c14:	4326      	orrs	r6, r4
 8012c16:	f825 600c 	strh.w	r6, [r5, ip]
 8012c1a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012c1c:	3f01      	subs	r7, #1
 8012c1e:	4410      	add	r0, r2
 8012c20:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012c22:	4411      	add	r1, r2
 8012c24:	e787      	b.n	8012b36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012c26:	f06f 0601 	mvn.w	r6, #1
 8012c2a:	fa1f fa82 	uxth.w	sl, r2
 8012c2e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8012c32:	43d2      	mvns	r2, r2
 8012c34:	437e      	muls	r6, r7
 8012c36:	b2e4      	uxtb	r4, r4
 8012c38:	fb1c fc0a 	smulbb	ip, ip, sl
 8012c3c:	b2d2      	uxtb	r2, r2
 8012c3e:	f835 8006 	ldrh.w	r8, [r5, r6]
 8012c42:	fb14 f40a 	smulbb	r4, r4, sl
 8012c46:	9602      	str	r6, [sp, #8]
 8012c48:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8012c4c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8012c50:	fb16 f60a 	smulbb	r6, r6, sl
 8012c54:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8012c58:	fb0e ce02 	mla	lr, lr, r2, ip
 8012c5c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8012c60:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012c64:	fa1f fe8e 	uxth.w	lr, lr
 8012c68:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8012c6c:	fa5f f888 	uxtb.w	r8, r8
 8012c70:	fb0c 6c02 	mla	ip, ip, r2, r6
 8012c74:	fb08 4402 	mla	r4, r8, r2, r4
 8012c78:	f10e 0201 	add.w	r2, lr, #1
 8012c7c:	fa1f fc8c 	uxth.w	ip, ip
 8012c80:	b2a4      	uxth	r4, r4
 8012c82:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8012c86:	9a02      	ldr	r2, [sp, #8]
 8012c88:	1c66      	adds	r6, r4, #1
 8012c8a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8012c8e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8012c92:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012c96:	ea46 0e0e 	orr.w	lr, r6, lr
 8012c9a:	f10c 0601 	add.w	r6, ip, #1
 8012c9e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8012ca2:	0976      	lsrs	r6, r6, #5
 8012ca4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8012ca8:	ea4e 0e06 	orr.w	lr, lr, r6
 8012cac:	f825 e002 	strh.w	lr, [r5, r2]
 8012cb0:	e7b3      	b.n	8012c1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012cb2:	f04f 0800 	mov.w	r8, #0
 8012cb6:	eba3 0208 	sub.w	r2, r3, r8
 8012cba:	2a00      	cmp	r2, #0
 8012cbc:	f77f af3e 	ble.w	8012b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012cc0:	1404      	asrs	r4, r0, #16
 8012cc2:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8012cc6:	140a      	asrs	r2, r1, #16
 8012cc8:	fb06 4202 	mla	r2, r6, r2, r4
 8012ccc:	9c01      	ldr	r4, [sp, #4]
 8012cce:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8012cd2:	0e22      	lsrs	r2, r4, #24
 8012cd4:	d015      	beq.n	8012d02 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8012cd6:	9e04      	ldr	r6, [sp, #16]
 8012cd8:	4372      	muls	r2, r6
 8012cda:	1c56      	adds	r6, r2, #1
 8012cdc:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8012ce0:	0a26      	lsrs	r6, r4, #8
 8012ce2:	1212      	asrs	r2, r2, #8
 8012ce4:	2aff      	cmp	r2, #255	@ 0xff
 8012ce6:	d113      	bne.n	8012d10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8012ce8:	0962      	lsrs	r2, r4, #5
 8012cea:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8012cee:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012cf2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8012cf6:	f026 0607 	bic.w	r6, r6, #7
 8012cfa:	4316      	orrs	r6, r2
 8012cfc:	4326      	orrs	r6, r4
 8012cfe:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8012d02:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012d04:	f108 0801 	add.w	r8, r8, #1
 8012d08:	4410      	add	r0, r2
 8012d0a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012d0c:	4411      	add	r1, r2
 8012d0e:	e7d2      	b.n	8012cb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8012d10:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8012d14:	fa1f fa82 	uxth.w	sl, r2
 8012d18:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8012d1c:	43d2      	mvns	r2, r2
 8012d1e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012d22:	fb17 f70a 	smulbb	r7, r7, sl
 8012d26:	b2d2      	uxtb	r2, r2
 8012d28:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012d2c:	b2e4      	uxtb	r4, r4
 8012d2e:	b2f6      	uxtb	r6, r6
 8012d30:	fb0c 7c02 	mla	ip, ip, r2, r7
 8012d34:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012d38:	fb14 f40a 	smulbb	r4, r4, sl
 8012d3c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012d40:	fa1f fc8c 	uxth.w	ip, ip
 8012d44:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012d48:	fb16 f60a 	smulbb	r6, r6, sl
 8012d4c:	fa5f fe8e 	uxtb.w	lr, lr
 8012d50:	fb0e 4402 	mla	r4, lr, r2, r4
 8012d54:	fb07 6702 	mla	r7, r7, r2, r6
 8012d58:	f10c 0201 	add.w	r2, ip, #1
 8012d5c:	b2a4      	uxth	r4, r4
 8012d5e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8012d62:	1c66      	adds	r6, r4, #1
 8012d64:	b2bf      	uxth	r7, r7
 8012d66:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012d6a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8012d6e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012d72:	ea46 0c0c 	orr.w	ip, r6, ip
 8012d76:	1c7e      	adds	r6, r7, #1
 8012d78:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8012d7c:	0976      	lsrs	r6, r6, #5
 8012d7e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8012d82:	ea4c 0c06 	orr.w	ip, ip, r6
 8012d86:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8012d8a:	e7ba      	b.n	8012d02 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8012d8c:	b007      	add	sp, #28
 8012d8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012d94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d98:	b085      	sub	sp, #20
 8012d9a:	468b      	mov	fp, r1
 8012d9c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012da0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012da2:	9203      	str	r2, [sp, #12]
 8012da4:	6841      	ldr	r1, [r0, #4]
 8012da6:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8012daa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8012dae:	fb01 2404 	mla	r4, r1, r4, r2
 8012db2:	6802      	ldr	r2, [r0, #0]
 8012db4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012db8:	f8d8 2000 	ldr.w	r2, [r8]
 8012dbc:	9201      	str	r2, [sp, #4]
 8012dbe:	f1bb 0f00 	cmp.w	fp, #0
 8012dc2:	dc03      	bgt.n	8012dcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8012dc4:	9a03      	ldr	r2, [sp, #12]
 8012dc6:	2a00      	cmp	r2, #0
 8012dc8:	f340 814f 	ble.w	801306a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8012dcc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012dce:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8012dd2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012dd6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012dd8:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8012ddc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012de0:	2b00      	cmp	r3, #0
 8012de2:	dd0e      	ble.n	8012e02 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012de4:	1408      	asrs	r0, r1, #16
 8012de6:	d405      	bmi.n	8012df4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012de8:	42b8      	cmp	r0, r7
 8012dea:	da03      	bge.n	8012df4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012dec:	1410      	asrs	r0, r2, #16
 8012dee:	d401      	bmi.n	8012df4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012df0:	42b0      	cmp	r0, r6
 8012df2:	db07      	blt.n	8012e04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012df4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012df6:	3b01      	subs	r3, #1
 8012df8:	3402      	adds	r4, #2
 8012dfa:	4401      	add	r1, r0
 8012dfc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012dfe:	4402      	add	r2, r0
 8012e00:	e7ee      	b.n	8012de0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8012e02:	d017      	beq.n	8012e34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012e04:	1e58      	subs	r0, r3, #1
 8012e06:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8012e08:	fb05 1500 	mla	r5, r5, r0, r1
 8012e0c:	142d      	asrs	r5, r5, #16
 8012e0e:	d409      	bmi.n	8012e24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012e10:	42bd      	cmp	r5, r7
 8012e12:	da07      	bge.n	8012e24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012e14:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8012e16:	fb05 2000 	mla	r0, r5, r0, r2
 8012e1a:	1400      	asrs	r0, r0, #16
 8012e1c:	d402      	bmi.n	8012e24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012e1e:	42b0      	cmp	r0, r6
 8012e20:	f2c0 80ba 	blt.w	8012f98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8012e24:	2600      	movs	r6, #0
 8012e26:	1998      	adds	r0, r3, r6
 8012e28:	2800      	cmp	r0, #0
 8012e2a:	dc3e      	bgt.n	8012eaa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8012e2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012e30:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012e34:	f1bb 0f00 	cmp.w	fp, #0
 8012e38:	f340 8117 	ble.w	801306a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8012e3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012e40:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012e42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012e46:	f1bb 0b01 	subs.w	fp, fp, #1
 8012e4a:	eeb0 6a62 	vmov.f32	s12, s5
 8012e4e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012e52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012e56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012e5a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8012e5e:	eeb0 6a43 	vmov.f32	s12, s6
 8012e62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012e66:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8012e6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012e6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012e72:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012e76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012e7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012e7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012e82:	ee12 2a90 	vmov	r2, s5
 8012e86:	eef0 2a47 	vmov.f32	s5, s14
 8012e8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8012e8e:	ee13 2a10 	vmov	r2, s6
 8012e92:	9311      	str	r3, [sp, #68]	@ 0x44
 8012e94:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012e96:	eeb0 3a67 	vmov.f32	s6, s15
 8012e9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8012e9e:	9a03      	ldr	r2, [sp, #12]
 8012ea0:	9312      	str	r3, [sp, #72]	@ 0x48
 8012ea2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012ea4:	bf08      	it	eq
 8012ea6:	4613      	moveq	r3, r2
 8012ea8:	e789      	b.n	8012dbe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8012eaa:	140f      	asrs	r7, r1, #16
 8012eac:	d424      	bmi.n	8012ef8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012eae:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8012eb2:	42bd      	cmp	r5, r7
 8012eb4:	dd20      	ble.n	8012ef8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012eb6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012eba:	d41d      	bmi.n	8012ef8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012ebc:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8012ec0:	4560      	cmp	r0, ip
 8012ec2:	dd19      	ble.n	8012ef8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012ec4:	b22d      	sxth	r5, r5
 8012ec6:	9801      	ldr	r0, [sp, #4]
 8012ec8:	fb0c 7505 	mla	r5, ip, r5, r7
 8012ecc:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8012ed0:	0e07      	lsrs	r7, r0, #24
 8012ed2:	2fff      	cmp	r7, #255	@ 0xff
 8012ed4:	d116      	bne.n	8012f04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012ed6:	f06f 0501 	mvn.w	r5, #1
 8012eda:	fb05 f706 	mul.w	r7, r5, r6
 8012ede:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8012ee2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8012ee6:	0945      	lsrs	r5, r0, #5
 8012ee8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8012eec:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8012ef0:	ea4c 0505 	orr.w	r5, ip, r5
 8012ef4:	4305      	orrs	r5, r0
 8012ef6:	53e5      	strh	r5, [r4, r7]
 8012ef8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012efa:	3e01      	subs	r6, #1
 8012efc:	4401      	add	r1, r0
 8012efe:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012f00:	4402      	add	r2, r0
 8012f02:	e790      	b.n	8012e26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012f04:	b2fd      	uxtb	r5, r7
 8012f06:	2f00      	cmp	r7, #0
 8012f08:	d0f6      	beq.n	8012ef8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012f0a:	f06f 0701 	mvn.w	r7, #1
 8012f0e:	fa1f f985 	uxth.w	r9, r5
 8012f12:	43ed      	mvns	r5, r5
 8012f14:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8012f18:	4377      	muls	r7, r6
 8012f1a:	fb1a fa09 	smulbb	sl, sl, r9
 8012f1e:	b2ed      	uxtb	r5, r5
 8012f20:	f834 e007 	ldrh.w	lr, [r4, r7]
 8012f24:	9702      	str	r7, [sp, #8]
 8012f26:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8012f2a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012f2e:	fb17 f709 	smulbb	r7, r7, r9
 8012f32:	b2c0      	uxtb	r0, r0
 8012f34:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012f38:	fb10 f009 	smulbb	r0, r0, r9
 8012f3c:	fb0c 7c05 	mla	ip, ip, r5, r7
 8012f40:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012f44:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012f48:	fa1f fc8c 	uxth.w	ip, ip
 8012f4c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012f50:	fa5f fe8e 	uxtb.w	lr, lr
 8012f54:	fb07 a705 	mla	r7, r7, r5, sl
 8012f58:	fb0e 0005 	mla	r0, lr, r5, r0
 8012f5c:	f10c 0501 	add.w	r5, ip, #1
 8012f60:	b2bf      	uxth	r7, r7
 8012f62:	b280      	uxth	r0, r0
 8012f64:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012f68:	f100 0a01 	add.w	sl, r0, #1
 8012f6c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012f70:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8012f74:	9802      	ldr	r0, [sp, #8]
 8012f76:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012f7a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012f7e:	f107 0a01 	add.w	sl, r7, #1
 8012f82:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012f86:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012f8a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012f8e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012f92:	f824 c000 	strh.w	ip, [r4, r0]
 8012f96:	e7af      	b.n	8012ef8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012f98:	f04f 0e00 	mov.w	lr, #0
 8012f9c:	eba3 000e 	sub.w	r0, r3, lr
 8012fa0:	2800      	cmp	r0, #0
 8012fa2:	f77f af43 	ble.w	8012e2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012fa6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8012faa:	140d      	asrs	r5, r1, #16
 8012fac:	1410      	asrs	r0, r2, #16
 8012fae:	fb06 5000 	mla	r0, r6, r0, r5
 8012fb2:	9d01      	ldr	r5, [sp, #4]
 8012fb4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8012fb8:	0e2e      	lsrs	r6, r5, #24
 8012fba:	2eff      	cmp	r6, #255	@ 0xff
 8012fbc:	d112      	bne.n	8012fe4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8012fbe:	482c      	ldr	r0, [pc, #176]	@ (8013070 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8012fc0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8012fc4:	0968      	lsrs	r0, r5, #5
 8012fc6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012fca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8012fce:	4330      	orrs	r0, r6
 8012fd0:	4328      	orrs	r0, r5
 8012fd2:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8012fd6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012fd8:	f10e 0e01 	add.w	lr, lr, #1
 8012fdc:	4401      	add	r1, r0
 8012fde:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012fe0:	4402      	add	r2, r0
 8012fe2:	e7db      	b.n	8012f9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8012fe4:	b2f0      	uxtb	r0, r6
 8012fe6:	2e00      	cmp	r6, #0
 8012fe8:	d0f5      	beq.n	8012fd6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8012fea:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8012fee:	fa1f f980 	uxth.w	r9, r0
 8012ff2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012ff6:	43c0      	mvns	r0, r0
 8012ff8:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012ffc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013000:	fb16 f609 	smulbb	r6, r6, r9
 8013004:	b2c0      	uxtb	r0, r0
 8013006:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801300a:	b2ed      	uxtb	r5, r5
 801300c:	fb1a fa09 	smulbb	sl, sl, r9
 8013010:	fb07 6700 	mla	r7, r7, r0, r6
 8013014:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013018:	fb15 f509 	smulbb	r5, r5, r9
 801301c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013020:	b2bf      	uxth	r7, r7
 8013022:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013026:	fa5f fc8c 	uxtb.w	ip, ip
 801302a:	fb06 a600 	mla	r6, r6, r0, sl
 801302e:	fb0c 5500 	mla	r5, ip, r0, r5
 8013032:	1c78      	adds	r0, r7, #1
 8013034:	b2b6      	uxth	r6, r6
 8013036:	b2ad      	uxth	r5, r5
 8013038:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801303c:	f105 0a01 	add.w	sl, r5, #1
 8013040:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013044:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013048:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801304c:	ea4a 0707 	orr.w	r7, sl, r7
 8013050:	f106 0a01 	add.w	sl, r6, #1
 8013054:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013058:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801305c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013060:	ea47 070a 	orr.w	r7, r7, sl
 8013064:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8013068:	e7b5      	b.n	8012fd6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801306a:	b005      	add	sp, #20
 801306c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013070:	fffff800 	.word	0xfffff800

08013074 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013078:	b087      	sub	sp, #28
 801307a:	468b      	mov	fp, r1
 801307c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013080:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8013082:	9203      	str	r2, [sp, #12]
 8013084:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013088:	6841      	ldr	r1, [r0, #4]
 801308a:	9204      	str	r2, [sp, #16]
 801308c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8013090:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013094:	fb01 2404 	mla	r4, r1, r4, r2
 8013098:	6802      	ldr	r2, [r0, #0]
 801309a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801309e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80130a2:	3201      	adds	r2, #1
 80130a4:	f022 0201 	bic.w	r2, r2, #1
 80130a8:	9200      	str	r2, [sp, #0]
 80130aa:	f8d9 2000 	ldr.w	r2, [r9]
 80130ae:	9201      	str	r2, [sp, #4]
 80130b0:	f1bb 0f00 	cmp.w	fp, #0
 80130b4:	dc03      	bgt.n	80130be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80130b6:	9a03      	ldr	r2, [sp, #12]
 80130b8:	2a00      	cmp	r2, #0
 80130ba:	f340 816a 	ble.w	8013392 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80130be:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80130c0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80130c4:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80130c8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80130ca:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80130ce:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80130d2:	2b00      	cmp	r3, #0
 80130d4:	dd0e      	ble.n	80130f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80130d6:	1402      	asrs	r2, r0, #16
 80130d8:	d405      	bmi.n	80130e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80130da:	42ba      	cmp	r2, r7
 80130dc:	da03      	bge.n	80130e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80130de:	140a      	asrs	r2, r1, #16
 80130e0:	d401      	bmi.n	80130e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80130e2:	42b2      	cmp	r2, r6
 80130e4:	db07      	blt.n	80130f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80130e6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80130e8:	3b01      	subs	r3, #1
 80130ea:	3402      	adds	r4, #2
 80130ec:	4410      	add	r0, r2
 80130ee:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80130f0:	4411      	add	r1, r2
 80130f2:	e7ee      	b.n	80130d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80130f4:	d017      	beq.n	8013126 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80130f6:	1e5a      	subs	r2, r3, #1
 80130f8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80130fa:	fb05 0502 	mla	r5, r5, r2, r0
 80130fe:	142d      	asrs	r5, r5, #16
 8013100:	d409      	bmi.n	8013116 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013102:	42bd      	cmp	r5, r7
 8013104:	da07      	bge.n	8013116 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013106:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013108:	fb05 1202 	mla	r2, r5, r2, r1
 801310c:	1412      	asrs	r2, r2, #16
 801310e:	d402      	bmi.n	8013116 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013110:	42b2      	cmp	r2, r6
 8013112:	f2c0 80c8 	blt.w	80132a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8013116:	2700      	movs	r7, #0
 8013118:	19da      	adds	r2, r3, r7
 801311a:	2a00      	cmp	r2, #0
 801311c:	dc3e      	bgt.n	801319c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801311e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013122:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013126:	f1bb 0f00 	cmp.w	fp, #0
 801312a:	f340 8132 	ble.w	8013392 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801312e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013132:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013134:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013138:	f1bb 0b01 	subs.w	fp, fp, #1
 801313c:	eeb0 6a62 	vmov.f32	s12, s5
 8013140:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013144:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013148:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801314c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013150:	eeb0 6a43 	vmov.f32	s12, s6
 8013154:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013158:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801315c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013160:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013164:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013168:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801316c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013170:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013174:	ee12 2a90 	vmov	r2, s5
 8013178:	eef0 2a47 	vmov.f32	s5, s14
 801317c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013180:	ee13 2a10 	vmov	r2, s6
 8013184:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013186:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013188:	eeb0 3a67 	vmov.f32	s6, s15
 801318c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013190:	9a03      	ldr	r2, [sp, #12]
 8013192:	9314      	str	r3, [sp, #80]	@ 0x50
 8013194:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013196:	bf08      	it	eq
 8013198:	4613      	moveq	r3, r2
 801319a:	e789      	b.n	80130b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801319c:	1405      	asrs	r5, r0, #16
 801319e:	d436      	bmi.n	801320e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80131a0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80131a4:	42aa      	cmp	r2, r5
 80131a6:	dd32      	ble.n	801320e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80131a8:	140e      	asrs	r6, r1, #16
 80131aa:	d430      	bmi.n	801320e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80131ac:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80131b0:	42b2      	cmp	r2, r6
 80131b2:	dd2c      	ble.n	801320e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80131b4:	9a00      	ldr	r2, [sp, #0]
 80131b6:	fb06 5502 	mla	r5, r6, r2, r5
 80131ba:	9e01      	ldr	r6, [sp, #4]
 80131bc:	086a      	lsrs	r2, r5, #1
 80131be:	5cb2      	ldrb	r2, [r6, r2]
 80131c0:	07ee      	lsls	r6, r5, #31
 80131c2:	bf54      	ite	pl
 80131c4:	f002 020f 	andpl.w	r2, r2, #15
 80131c8:	1112      	asrmi	r2, r2, #4
 80131ca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80131ce:	b2d2      	uxtb	r2, r2
 80131d0:	b1ea      	cbz	r2, 801320e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80131d2:	9d04      	ldr	r5, [sp, #16]
 80131d4:	436a      	muls	r2, r5
 80131d6:	1c55      	adds	r5, r2, #1
 80131d8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80131dc:	4d6e      	ldr	r5, [pc, #440]	@ (8013398 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80131de:	1212      	asrs	r2, r2, #8
 80131e0:	682d      	ldr	r5, [r5, #0]
 80131e2:	2aff      	cmp	r2, #255	@ 0xff
 80131e4:	ea4f 2615 	mov.w	r6, r5, lsr #8
 80131e8:	9605      	str	r6, [sp, #20]
 80131ea:	d116      	bne.n	801321a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80131ec:	f06f 0201 	mvn.w	r2, #1
 80131f0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80131f4:	fb02 fc07 	mul.w	ip, r2, r7
 80131f8:	096a      	lsrs	r2, r5, #5
 80131fa:	f026 0607 	bic.w	r6, r6, #7
 80131fe:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013202:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8013206:	4316      	orrs	r6, r2
 8013208:	432e      	orrs	r6, r5
 801320a:	f824 600c 	strh.w	r6, [r4, ip]
 801320e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013210:	3f01      	subs	r7, #1
 8013212:	4410      	add	r0, r2
 8013214:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013216:	4411      	add	r1, r2
 8013218:	e77e      	b.n	8013118 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801321a:	f06f 0601 	mvn.w	r6, #1
 801321e:	fa1f fa82 	uxth.w	sl, r2
 8013222:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8013226:	43d2      	mvns	r2, r2
 8013228:	437e      	muls	r6, r7
 801322a:	b2ed      	uxtb	r5, r5
 801322c:	fb1c fc0a 	smulbb	ip, ip, sl
 8013230:	b2d2      	uxtb	r2, r2
 8013232:	f834 8006 	ldrh.w	r8, [r4, r6]
 8013236:	fb15 f50a 	smulbb	r5, r5, sl
 801323a:	9602      	str	r6, [sp, #8]
 801323c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8013240:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8013244:	fb16 f60a 	smulbb	r6, r6, sl
 8013248:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801324c:	fb0e ce02 	mla	lr, lr, r2, ip
 8013250:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8013254:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013258:	fa1f fe8e 	uxth.w	lr, lr
 801325c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8013260:	fa5f f888 	uxtb.w	r8, r8
 8013264:	fb0c 6c02 	mla	ip, ip, r2, r6
 8013268:	fb08 5502 	mla	r5, r8, r2, r5
 801326c:	f10e 0201 	add.w	r2, lr, #1
 8013270:	fa1f fc8c 	uxth.w	ip, ip
 8013274:	b2ad      	uxth	r5, r5
 8013276:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801327a:	9a02      	ldr	r2, [sp, #8]
 801327c:	1c6e      	adds	r6, r5, #1
 801327e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8013282:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8013286:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801328a:	ea46 0e0e 	orr.w	lr, r6, lr
 801328e:	f10c 0601 	add.w	r6, ip, #1
 8013292:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8013296:	0976      	lsrs	r6, r6, #5
 8013298:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801329c:	ea4e 0e06 	orr.w	lr, lr, r6
 80132a0:	f824 e002 	strh.w	lr, [r4, r2]
 80132a4:	e7b3      	b.n	801320e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80132a6:	f04f 0800 	mov.w	r8, #0
 80132aa:	eba3 0208 	sub.w	r2, r3, r8
 80132ae:	2a00      	cmp	r2, #0
 80132b0:	f77f af35 	ble.w	801311e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80132b4:	1402      	asrs	r2, r0, #16
 80132b6:	9e00      	ldr	r6, [sp, #0]
 80132b8:	140d      	asrs	r5, r1, #16
 80132ba:	fb06 2505 	mla	r5, r6, r5, r2
 80132be:	9e01      	ldr	r6, [sp, #4]
 80132c0:	086a      	lsrs	r2, r5, #1
 80132c2:	07ed      	lsls	r5, r5, #31
 80132c4:	5cb2      	ldrb	r2, [r6, r2]
 80132c6:	bf54      	ite	pl
 80132c8:	f002 020f 	andpl.w	r2, r2, #15
 80132cc:	1112      	asrmi	r2, r2, #4
 80132ce:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80132d2:	b2d2      	uxtb	r2, r2
 80132d4:	b1c2      	cbz	r2, 8013308 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80132d6:	9d04      	ldr	r5, [sp, #16]
 80132d8:	436a      	muls	r2, r5
 80132da:	1c55      	adds	r5, r2, #1
 80132dc:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80132e0:	4d2d      	ldr	r5, [pc, #180]	@ (8013398 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80132e2:	1212      	asrs	r2, r2, #8
 80132e4:	682e      	ldr	r6, [r5, #0]
 80132e6:	2aff      	cmp	r2, #255	@ 0xff
 80132e8:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80132ec:	d113      	bne.n	8013316 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80132ee:	0972      	lsrs	r2, r6, #5
 80132f0:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80132f4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80132f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80132fc:	f025 0507 	bic.w	r5, r5, #7
 8013300:	4315      	orrs	r5, r2
 8013302:	4335      	orrs	r5, r6
 8013304:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8013308:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801330a:	f108 0801 	add.w	r8, r8, #1
 801330e:	4410      	add	r0, r2
 8013310:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013312:	4411      	add	r1, r2
 8013314:	e7c9      	b.n	80132aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8013316:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801331a:	fa1f fa82 	uxth.w	sl, r2
 801331e:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8013322:	43d2      	mvns	r2, r2
 8013324:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013328:	fb17 f70a 	smulbb	r7, r7, sl
 801332c:	b2d2      	uxtb	r2, r2
 801332e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013332:	b2f6      	uxtb	r6, r6
 8013334:	b2ed      	uxtb	r5, r5
 8013336:	fb0c 7c02 	mla	ip, ip, r2, r7
 801333a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801333e:	fb16 f60a 	smulbb	r6, r6, sl
 8013342:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013346:	fa1f fc8c 	uxth.w	ip, ip
 801334a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801334e:	fb15 f50a 	smulbb	r5, r5, sl
 8013352:	fa5f fe8e 	uxtb.w	lr, lr
 8013356:	fb0e 6602 	mla	r6, lr, r2, r6
 801335a:	fb07 5702 	mla	r7, r7, r2, r5
 801335e:	f10c 0201 	add.w	r2, ip, #1
 8013362:	b2b6      	uxth	r6, r6
 8013364:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8013368:	1c75      	adds	r5, r6, #1
 801336a:	b2bf      	uxth	r7, r7
 801336c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013370:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8013374:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013378:	ea45 0c0c 	orr.w	ip, r5, ip
 801337c:	1c7d      	adds	r5, r7, #1
 801337e:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8013382:	096d      	lsrs	r5, r5, #5
 8013384:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013388:	ea4c 0c05 	orr.w	ip, ip, r5
 801338c:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8013390:	e7ba      	b.n	8013308 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013392:	b007      	add	sp, #28
 8013394:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013398:	200150b4 	.word	0x200150b4

0801339c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801339c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133a0:	b087      	sub	sp, #28
 80133a2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80133a6:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 80136b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80133aa:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80133ac:	9101      	str	r1, [sp, #4]
 80133ae:	9205      	str	r2, [sp, #20]
 80133b0:	6841      	ldr	r1, [r0, #4]
 80133b2:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 80133b6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80133ba:	fb01 2404 	mla	r4, r1, r4, r2
 80133be:	6802      	ldr	r2, [r0, #0]
 80133c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80133c4:	f8db 2008 	ldr.w	r2, [fp, #8]
 80133c8:	3201      	adds	r2, #1
 80133ca:	f022 0201 	bic.w	r2, r2, #1
 80133ce:	9202      	str	r2, [sp, #8]
 80133d0:	f8db 2000 	ldr.w	r2, [fp]
 80133d4:	9203      	str	r2, [sp, #12]
 80133d6:	9a01      	ldr	r2, [sp, #4]
 80133d8:	2a00      	cmp	r2, #0
 80133da:	dc03      	bgt.n	80133e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80133dc:	9a05      	ldr	r2, [sp, #20]
 80133de:	2a00      	cmp	r2, #0
 80133e0:	f340 8162 	ble.w	80136a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80133e4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80133e6:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80133ea:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80133ee:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80133f0:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80133f4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80133f8:	2b00      	cmp	r3, #0
 80133fa:	dd0e      	ble.n	801341a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80133fc:	1402      	asrs	r2, r0, #16
 80133fe:	d405      	bmi.n	801340c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013400:	42ba      	cmp	r2, r7
 8013402:	da03      	bge.n	801340c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013404:	140a      	asrs	r2, r1, #16
 8013406:	d401      	bmi.n	801340c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013408:	42b2      	cmp	r2, r6
 801340a:	db07      	blt.n	801341c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801340c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801340e:	3b01      	subs	r3, #1
 8013410:	3402      	adds	r4, #2
 8013412:	4410      	add	r0, r2
 8013414:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013416:	4411      	add	r1, r2
 8013418:	e7ee      	b.n	80133f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801341a:	d017      	beq.n	801344c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801341c:	1e5a      	subs	r2, r3, #1
 801341e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013420:	fb05 0502 	mla	r5, r5, r2, r0
 8013424:	142d      	asrs	r5, r5, #16
 8013426:	d409      	bmi.n	801343c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013428:	42bd      	cmp	r5, r7
 801342a:	da07      	bge.n	801343c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801342c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801342e:	fb05 1202 	mla	r2, r5, r2, r1
 8013432:	1412      	asrs	r2, r2, #16
 8013434:	d402      	bmi.n	801343c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013436:	42b2      	cmp	r2, r6
 8013438:	f2c0 80c3 	blt.w	80135c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801343c:	2500      	movs	r5, #0
 801343e:	195a      	adds	r2, r3, r5
 8013440:	2a00      	cmp	r2, #0
 8013442:	dc3f      	bgt.n	80134c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013444:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013448:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801344c:	9b01      	ldr	r3, [sp, #4]
 801344e:	2b00      	cmp	r3, #0
 8013450:	f340 812a 	ble.w	80136a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8013454:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013458:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801345a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801345e:	eeb0 6a62 	vmov.f32	s12, s5
 8013462:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013466:	ee31 1a05 	vadd.f32	s2, s2, s10
 801346a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801346e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013472:	eeb0 6a43 	vmov.f32	s12, s6
 8013476:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801347a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801347e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013482:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013486:	ee77 2a62 	vsub.f32	s5, s14, s5
 801348a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801348e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013492:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013496:	ee12 2a90 	vmov	r2, s5
 801349a:	eef0 2a47 	vmov.f32	s5, s14
 801349e:	fb92 f3f3 	sdiv	r3, r2, r3
 80134a2:	ee13 2a10 	vmov	r2, s6
 80134a6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80134a8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80134aa:	eeb0 3a67 	vmov.f32	s6, s15
 80134ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80134b2:	9314      	str	r3, [sp, #80]	@ 0x50
 80134b4:	9b01      	ldr	r3, [sp, #4]
 80134b6:	9a05      	ldr	r2, [sp, #20]
 80134b8:	3b01      	subs	r3, #1
 80134ba:	9301      	str	r3, [sp, #4]
 80134bc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80134be:	bf08      	it	eq
 80134c0:	4613      	moveq	r3, r2
 80134c2:	e788      	b.n	80133d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80134c4:	1406      	asrs	r6, r0, #16
 80134c6:	d42c      	bmi.n	8013522 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80134c8:	f8db 2008 	ldr.w	r2, [fp, #8]
 80134cc:	42b2      	cmp	r2, r6
 80134ce:	dd28      	ble.n	8013522 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80134d0:	140f      	asrs	r7, r1, #16
 80134d2:	d426      	bmi.n	8013522 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80134d4:	f8db 200c 	ldr.w	r2, [fp, #12]
 80134d8:	42ba      	cmp	r2, r7
 80134da:	dd22      	ble.n	8013522 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80134dc:	9a02      	ldr	r2, [sp, #8]
 80134de:	fb07 6602 	mla	r6, r7, r2, r6
 80134e2:	9f03      	ldr	r7, [sp, #12]
 80134e4:	0872      	lsrs	r2, r6, #1
 80134e6:	07f6      	lsls	r6, r6, #31
 80134e8:	5cba      	ldrb	r2, [r7, r2]
 80134ea:	bf54      	ite	pl
 80134ec:	f002 020f 	andpl.w	r2, r2, #15
 80134f0:	1112      	asrmi	r2, r2, #4
 80134f2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80134f6:	b2d2      	uxtb	r2, r2
 80134f8:	2aff      	cmp	r2, #255	@ 0xff
 80134fa:	d118      	bne.n	801352e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80134fc:	f06f 0601 	mvn.w	r6, #1
 8013500:	f8d8 2000 	ldr.w	r2, [r8]
 8013504:	fb06 f705 	mul.w	r7, r6, r5
 8013508:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 801350c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8013510:	0956      	lsrs	r6, r2, #5
 8013512:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8013516:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801351a:	ea4c 0606 	orr.w	r6, ip, r6
 801351e:	4316      	orrs	r6, r2
 8013520:	53e6      	strh	r6, [r4, r7]
 8013522:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013524:	3d01      	subs	r5, #1
 8013526:	4410      	add	r0, r2
 8013528:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801352a:	4411      	add	r1, r2
 801352c:	e787      	b.n	801343e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801352e:	2a00      	cmp	r2, #0
 8013530:	d0f7      	beq.n	8013522 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013532:	f06f 0601 	mvn.w	r6, #1
 8013536:	f8d8 c000 	ldr.w	ip, [r8]
 801353a:	fa1f f982 	uxth.w	r9, r2
 801353e:	43d2      	mvns	r2, r2
 8013540:	436e      	muls	r6, r5
 8013542:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8013546:	b2d2      	uxtb	r2, r2
 8013548:	f834 e006 	ldrh.w	lr, [r4, r6]
 801354c:	fb1a fa09 	smulbb	sl, sl, r9
 8013550:	9604      	str	r6, [sp, #16]
 8013552:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8013556:	ea4f 272e 	mov.w	r7, lr, asr #8
 801355a:	fb16 f609 	smulbb	r6, r6, r9
 801355e:	fa5f fc8c 	uxtb.w	ip, ip
 8013562:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013566:	fb1c fc09 	smulbb	ip, ip, r9
 801356a:	fb07 6702 	mla	r7, r7, r2, r6
 801356e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013572:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013576:	b2bf      	uxth	r7, r7
 8013578:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801357c:	fa5f fe8e 	uxtb.w	lr, lr
 8013580:	fb06 a602 	mla	r6, r6, r2, sl
 8013584:	fb0e cc02 	mla	ip, lr, r2, ip
 8013588:	1c7a      	adds	r2, r7, #1
 801358a:	b2b6      	uxth	r6, r6
 801358c:	fa1f fc8c 	uxth.w	ip, ip
 8013590:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013594:	9a04      	ldr	r2, [sp, #16]
 8013596:	f10c 0a01 	add.w	sl, ip, #1
 801359a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801359e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80135a2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80135a6:	ea4a 0707 	orr.w	r7, sl, r7
 80135aa:	f106 0a01 	add.w	sl, r6, #1
 80135ae:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80135b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80135b6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80135ba:	ea47 070a 	orr.w	r7, r7, sl
 80135be:	52a7      	strh	r7, [r4, r2]
 80135c0:	e7af      	b.n	8013522 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80135c2:	f04f 0e00 	mov.w	lr, #0
 80135c6:	eba3 020e 	sub.w	r2, r3, lr
 80135ca:	2a00      	cmp	r2, #0
 80135cc:	f77f af3a 	ble.w	8013444 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80135d0:	1402      	asrs	r2, r0, #16
 80135d2:	9e02      	ldr	r6, [sp, #8]
 80135d4:	140d      	asrs	r5, r1, #16
 80135d6:	fb06 2505 	mla	r5, r6, r5, r2
 80135da:	9e03      	ldr	r6, [sp, #12]
 80135dc:	086a      	lsrs	r2, r5, #1
 80135de:	07ed      	lsls	r5, r5, #31
 80135e0:	5cb2      	ldrb	r2, [r6, r2]
 80135e2:	bf54      	ite	pl
 80135e4:	f002 020f 	andpl.w	r2, r2, #15
 80135e8:	1112      	asrmi	r2, r2, #4
 80135ea:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80135ee:	b2d2      	uxtb	r2, r2
 80135f0:	2aff      	cmp	r2, #255	@ 0xff
 80135f2:	d115      	bne.n	8013620 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80135f4:	f8d8 5000 	ldr.w	r5, [r8]
 80135f8:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 80135fc:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8013600:	096a      	lsrs	r2, r5, #5
 8013602:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013606:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801360a:	4332      	orrs	r2, r6
 801360c:	432a      	orrs	r2, r5
 801360e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8013612:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013614:	f10e 0e01 	add.w	lr, lr, #1
 8013618:	4410      	add	r0, r2
 801361a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801361c:	4411      	add	r1, r2
 801361e:	e7d2      	b.n	80135c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8013620:	2a00      	cmp	r2, #0
 8013622:	d0f6      	beq.n	8013612 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8013624:	f8d8 7000 	ldr.w	r7, [r8]
 8013628:	fa1f f982 	uxth.w	r9, r2
 801362c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8013630:	43d2      	mvns	r2, r2
 8013632:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8013636:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801363a:	ea4f 262c 	mov.w	r6, ip, asr #8
 801363e:	fb15 f509 	smulbb	r5, r5, r9
 8013642:	b2d2      	uxtb	r2, r2
 8013644:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013648:	b2ff      	uxtb	r7, r7
 801364a:	fb1a fa09 	smulbb	sl, sl, r9
 801364e:	fb06 5602 	mla	r6, r6, r2, r5
 8013652:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8013656:	fb17 f709 	smulbb	r7, r7, r9
 801365a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801365e:	b2b6      	uxth	r6, r6
 8013660:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8013664:	fa5f fc8c 	uxtb.w	ip, ip
 8013668:	fb05 a502 	mla	r5, r5, r2, sl
 801366c:	fb0c 7702 	mla	r7, ip, r2, r7
 8013670:	1c72      	adds	r2, r6, #1
 8013672:	b2ad      	uxth	r5, r5
 8013674:	b2bf      	uxth	r7, r7
 8013676:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801367a:	f107 0a01 	add.w	sl, r7, #1
 801367e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8013682:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8013686:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801368a:	ea4a 0606 	orr.w	r6, sl, r6
 801368e:	f105 0a01 	add.w	sl, r5, #1
 8013692:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013696:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801369a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801369e:	ea46 060a 	orr.w	r6, r6, sl
 80136a2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80136a6:	e7b4      	b.n	8013612 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80136a8:	b007      	add	sp, #28
 80136aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80136ae:	bf00      	nop
 80136b0:	200150b4 	.word	0x200150b4

080136b4 <_ZN8touchgfx8LCD16bppD1Ev>:
 80136b4:	4770      	bx	lr

080136b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 80136b6:	4770      	bx	lr

080136b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 80136b8:	4770      	bx	lr

080136ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 80136ba:	4770      	bx	lr

080136bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80136bc:	4770      	bx	lr

080136be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80136be:	4770      	bx	lr

080136c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80136c0:	4770      	bx	lr

080136c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80136c2:	4770      	bx	lr

080136c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80136c4:	4770      	bx	lr

080136c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80136c6:	4770      	bx	lr

080136c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80136c8:	4770      	bx	lr

080136ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80136ca:	4770      	bx	lr

080136cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80136cc:	4770      	bx	lr

080136ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80136ce:	4770      	bx	lr

080136d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80136d0:	4770      	bx	lr

080136d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80136d2:	4770      	bx	lr

080136d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80136d4:	4770      	bx	lr

080136d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80136d6:	4770      	bx	lr

080136d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80136d8:	4770      	bx	lr

080136da <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80136da:	4770      	bx	lr

080136dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80136dc:	4770      	bx	lr

080136de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80136de:	4770      	bx	lr

080136e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80136e0:	4770      	bx	lr

080136e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80136e2:	4770      	bx	lr

080136e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80136e4:	4770      	bx	lr

080136e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80136e6:	4770      	bx	lr

080136e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80136e8:	4770      	bx	lr

080136ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80136ea:	4770      	bx	lr

080136ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80136ec:	4770      	bx	lr

080136ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80136ee:	4770      	bx	lr

080136f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80136f0:	4770      	bx	lr

080136f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80136f2:	4770      	bx	lr

080136f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80136f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80136f8:	b088      	sub	sp, #32
 80136fa:	4606      	mov	r6, r0
 80136fc:	4688      	mov	r8, r1
 80136fe:	4691      	mov	r9, r2
 8013700:	ac08      	add	r4, sp, #32
 8013702:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8013706:	4620      	mov	r0, r4
 8013708:	f7fd fc62 	bl	8010fd0 <_ZNK8touchgfx6Bitmap7getDataEv>
 801370c:	6833      	ldr	r3, [r6, #0]
 801370e:	4605      	mov	r5, r0
 8013710:	4620      	mov	r0, r4
 8013712:	699f      	ldr	r7, [r3, #24]
 8013714:	f7fd fb70 	bl	8010df8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013718:	4682      	mov	sl, r0
 801371a:	4620      	mov	r0, r4
 801371c:	f7fd fba0 	bl	8010e60 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013720:	9500      	str	r5, [sp, #0]
 8013722:	464b      	mov	r3, r9
 8013724:	4642      	mov	r2, r8
 8013726:	4631      	mov	r1, r6
 8013728:	e9cd a001 	strd	sl, r0, [sp, #4]
 801372c:	a806      	add	r0, sp, #24
 801372e:	47b8      	blx	r7
 8013730:	4628      	mov	r0, r5
 8013732:	b008      	add	sp, #32
 8013734:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08013738 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8013738:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801373c:	2300      	movs	r3, #0
 801373e:	9300      	str	r3, [sp, #0]
 8013740:	4b3d      	ldr	r3, [pc, #244]	@ (8013838 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8013742:	781b      	ldrb	r3, [r3, #0]
 8013744:	2b00      	cmp	r3, #0
 8013746:	d137      	bne.n	80137b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8013748:	4a3c      	ldr	r2, [pc, #240]	@ (801383c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801374a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801374e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013752:	2b00      	cmp	r3, #0
 8013754:	d132      	bne.n	80137bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8013756:	4b3a      	ldr	r3, [pc, #232]	@ (8013840 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8013758:	f9b3 3000 	ldrsh.w	r3, [r3]
 801375c:	ac02      	add	r4, sp, #8
 801375e:	6808      	ldr	r0, [r1, #0]
 8013760:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013764:	ab02      	add	r3, sp, #8
 8013766:	6849      	ldr	r1, [r1, #4]
 8013768:	4d36      	ldr	r5, [pc, #216]	@ (8013844 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801376a:	c303      	stmia	r3!, {r0, r1}
 801376c:	4669      	mov	r1, sp
 801376e:	4620      	mov	r0, r4
 8013770:	f7fa f962 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013774:	4668      	mov	r0, sp
 8013776:	f7fa f937 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801377a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801377e:	f8bd 2000 	ldrh.w	r2, [sp]
 8013782:	462f      	mov	r7, r5
 8013784:	6828      	ldr	r0, [r5, #0]
 8013786:	4413      	add	r3, r2
 8013788:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801378c:	f8ad 3008 	strh.w	r3, [sp, #8]
 8013790:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013794:	4413      	add	r3, r2
 8013796:	f8ad 300a 	strh.w	r3, [sp, #10]
 801379a:	6803      	ldr	r3, [r0, #0]
 801379c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801379e:	4798      	blx	r3
 80137a0:	f010 0f01 	tst.w	r0, #1
 80137a4:	d00c      	beq.n	80137c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80137a6:	6828      	ldr	r0, [r5, #0]
 80137a8:	6803      	ldr	r3, [r0, #0]
 80137aa:	e894 0006 	ldmia.w	r4, {r1, r2}
 80137ae:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80137b0:	4798      	blx	r3
 80137b2:	b004      	add	sp, #16
 80137b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80137b8:	4a21      	ldr	r2, [pc, #132]	@ (8013840 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80137ba:	e7c6      	b.n	801374a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80137bc:	4b1f      	ldr	r3, [pc, #124]	@ (801383c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80137be:	e7cb      	b.n	8013758 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80137c0:	6838      	ldr	r0, [r7, #0]
 80137c2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80137c6:	6803      	ldr	r3, [r0, #0]
 80137c8:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80137cc:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80137d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80137d2:	4798      	blx	r3
 80137d4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80137d8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80137dc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80137e0:	fb16 3602 	smlabb	r6, r6, r2, r3
 80137e4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80137e8:	6838      	ldr	r0, [r7, #0]
 80137ea:	6803      	ldr	r3, [r0, #0]
 80137ec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80137ee:	4798      	blx	r3
 80137f0:	4a12      	ldr	r2, [pc, #72]	@ (801383c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80137f2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80137f6:	8813      	ldrh	r3, [r2, #0]
 80137f8:	4691      	mov	r9, r2
 80137fa:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80137fe:	435d      	muls	r5, r3
 8013800:	fb03 1404 	mla	r4, r3, r4, r1
 8013804:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013808:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801380c:	6838      	ldr	r0, [r7, #0]
 801380e:	42ac      	cmp	r4, r5
 8013810:	6803      	ldr	r3, [r0, #0]
 8013812:	d20e      	bcs.n	8013832 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8013814:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 8013818:	4632      	mov	r2, r6
 801381a:	4643      	mov	r3, r8
 801381c:	4621      	mov	r1, r4
 801381e:	47d0      	blx	sl
 8013820:	f8b9 3000 	ldrh.w	r3, [r9]
 8013824:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013828:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801382c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013830:	e7ec      	b.n	801380c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8013832:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013834:	4798      	blx	r3
 8013836:	e7bc      	b.n	80137b2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8013838:	200150a4 	.word	0x200150a4
 801383c:	200150a6 	.word	0x200150a6
 8013840:	200150a8 	.word	0x200150a8
 8013844:	200150ac 	.word	0x200150ac

08013848 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8013848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801384c:	b08b      	sub	sp, #44	@ 0x2c
 801384e:	460f      	mov	r7, r1
 8013850:	4616      	mov	r6, r2
 8013852:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8013856:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 801385a:	f1bb 0f00 	cmp.w	fp, #0
 801385e:	d04a      	beq.n	80138f6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8013860:	6810      	ldr	r0, [r2, #0]
 8013862:	ad06      	add	r5, sp, #24
 8013864:	6851      	ldr	r1, [r2, #4]
 8013866:	c503      	stmia	r5!, {r0, r1}
 8013868:	6818      	ldr	r0, [r3, #0]
 801386a:	ad08      	add	r5, sp, #32
 801386c:	6859      	ldr	r1, [r3, #4]
 801386e:	c503      	stmia	r5!, {r0, r1}
 8013870:	a806      	add	r0, sp, #24
 8013872:	f7fa f8b9 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013876:	4631      	mov	r1, r6
 8013878:	a808      	add	r0, sp, #32
 801387a:	f7fa f8dd 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801387e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013882:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8013886:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801388a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801388e:	fb16 2103 	smlabb	r1, r6, r3, r2
 8013892:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8013896:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801389a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801389e:	4f5f      	ldr	r7, [pc, #380]	@ (8013a1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80138a0:	440a      	add	r2, r1
 80138a2:	6838      	ldr	r0, [r7, #0]
 80138a4:	46b9      	mov	r9, r7
 80138a6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80138aa:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80138ae:	4413      	add	r3, r2
 80138b0:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80138b4:	6803      	ldr	r3, [r0, #0]
 80138b6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80138b8:	4798      	blx	r3
 80138ba:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80138be:	d11d      	bne.n	80138fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80138c0:	b9fc      	cbnz	r4, 8013902 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80138c2:	f010 0f01 	tst.w	r0, #1
 80138c6:	d01c      	beq.n	8013902 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80138c8:	f8d9 0000 	ldr.w	r0, [r9]
 80138cc:	2700      	movs	r7, #0
 80138ce:	b2ad      	uxth	r5, r5
 80138d0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80138d4:	6801      	ldr	r1, [r0, #0]
 80138d6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80138da:	f8cd b00c 	str.w	fp, [sp, #12]
 80138de:	9501      	str	r5, [sp, #4]
 80138e0:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80138e4:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80138e8:	9402      	str	r4, [sp, #8]
 80138ea:	fa1f f488 	uxth.w	r4, r8
 80138ee:	9400      	str	r4, [sp, #0]
 80138f0:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 80138f2:	4631      	mov	r1, r6
 80138f4:	47a0      	blx	r4
 80138f6:	b00b      	add	sp, #44	@ 0x2c
 80138f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138fc:	f010 0f04 	tst.w	r0, #4
 8013900:	e7e1      	b.n	80138c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8013902:	f8d9 0000 	ldr.w	r0, [r9]
 8013906:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801390a:	6803      	ldr	r3, [r0, #0]
 801390c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801390e:	4798      	blx	r3
 8013910:	4b43      	ldr	r3, [pc, #268]	@ (8013a20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8013912:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8013916:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801391a:	881a      	ldrh	r2, [r3, #0]
 801391c:	469a      	mov	sl, r3
 801391e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8013922:	fb05 f502 	mul.w	r5, r5, r2
 8013926:	fb02 1404 	mla	r4, r2, r4, r1
 801392a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801392e:	d059      	beq.n	80139e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8013930:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8013934:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013938:	fa1f f28b 	uxth.w	r2, fp
 801393c:	469e      	mov	lr, r3
 801393e:	fa1f f989 	uxth.w	r9, r9
 8013942:	42ac      	cmp	r4, r5
 8013944:	d264      	bcs.n	8013a10 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8013946:	eb04 0a07 	add.w	sl, r4, r7
 801394a:	4554      	cmp	r4, sl
 801394c:	d23d      	bcs.n	80139ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801394e:	8821      	ldrh	r1, [r4, #0]
 8013950:	f836 3b02 	ldrh.w	r3, [r6], #2
 8013954:	1208      	asrs	r0, r1, #8
 8013956:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801395a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801395e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8013962:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013966:	00c9      	lsls	r1, r1, #3
 8013968:	fb10 f009 	smulbb	r0, r0, r9
 801396c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8013970:	b2c9      	uxtb	r1, r1
 8013972:	fb0c 0c02 	mla	ip, ip, r2, r0
 8013976:	10d8      	asrs	r0, r3, #3
 8013978:	fb1b fb09 	smulbb	fp, fp, r9
 801397c:	00db      	lsls	r3, r3, #3
 801397e:	fa1f fc8c 	uxth.w	ip, ip
 8013982:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8013986:	fb11 f109 	smulbb	r1, r1, r9
 801398a:	b2db      	uxtb	r3, r3
 801398c:	fb00 b002 	mla	r0, r0, r2, fp
 8013990:	f10c 0b01 	add.w	fp, ip, #1
 8013994:	fb03 1302 	mla	r3, r3, r2, r1
 8013998:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801399c:	b29b      	uxth	r3, r3
 801399e:	b280      	uxth	r0, r0
 80139a0:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 80139a4:	f103 0c01 	add.w	ip, r3, #1
 80139a8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80139ac:	1c43      	adds	r3, r0, #1
 80139ae:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80139b2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80139b6:	0940      	lsrs	r0, r0, #5
 80139b8:	ea4c 0c0b 	orr.w	ip, ip, fp
 80139bc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80139c0:	ea4c 0c00 	orr.w	ip, ip, r0
 80139c4:	f824 cb02 	strh.w	ip, [r4], #2
 80139c8:	e7bf      	b.n	801394a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80139ca:	f8be 3000 	ldrh.w	r3, [lr]
 80139ce:	eba3 0308 	sub.w	r3, r3, r8
 80139d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80139d6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80139da:	eba3 0308 	sub.w	r3, r3, r8
 80139de:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80139e2:	e7ae      	b.n	8013942 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80139e4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80139e8:	f8d9 0000 	ldr.w	r0, [r9]
 80139ec:	42ac      	cmp	r4, r5
 80139ee:	6803      	ldr	r3, [r0, #0]
 80139f0:	d20e      	bcs.n	8013a10 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80139f2:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 80139f6:	4632      	mov	r2, r6
 80139f8:	463b      	mov	r3, r7
 80139fa:	4621      	mov	r1, r4
 80139fc:	47c0      	blx	r8
 80139fe:	f8ba 3000 	ldrh.w	r3, [sl]
 8013a02:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013a06:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013a0a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013a0e:	e7eb      	b.n	80139e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8013a10:	4b02      	ldr	r3, [pc, #8]	@ (8013a1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8013a12:	6818      	ldr	r0, [r3, #0]
 8013a14:	6803      	ldr	r3, [r0, #0]
 8013a16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013a18:	4798      	blx	r3
 8013a1a:	e76c      	b.n	80138f6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8013a1c:	200150ac 	.word	0x200150ac
 8013a20:	200150a6 	.word	0x200150a6

08013a24 <_ZN8touchgfx8LCD16bppD0Ev>:
 8013a24:	b510      	push	{r4, lr}
 8013a26:	4604      	mov	r4, r0
 8013a28:	2188      	movs	r1, #136	@ 0x88
 8013a2a:	f00a fe55 	bl	801e6d8 <_ZdlPvj>
 8013a2e:	4620      	mov	r0, r4
 8013a30:	bd10      	pop	{r4, pc}

08013a32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8013a32:	b510      	push	{r4, lr}
 8013a34:	4604      	mov	r4, r0
 8013a36:	2104      	movs	r1, #4
 8013a38:	f00a fe4e 	bl	801e6d8 <_ZdlPvj>
 8013a3c:	4620      	mov	r0, r4
 8013a3e:	bd10      	pop	{r4, pc}

08013a40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8013a40:	b510      	push	{r4, lr}
 8013a42:	4604      	mov	r4, r0
 8013a44:	2104      	movs	r1, #4
 8013a46:	f00a fe47 	bl	801e6d8 <_ZdlPvj>
 8013a4a:	4620      	mov	r0, r4
 8013a4c:	bd10      	pop	{r4, pc}

08013a4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8013a4e:	b510      	push	{r4, lr}
 8013a50:	4604      	mov	r4, r0
 8013a52:	f640 0144 	movw	r1, #2116	@ 0x844
 8013a56:	f00a fe3f 	bl	801e6d8 <_ZdlPvj>
 8013a5a:	4620      	mov	r0, r4
 8013a5c:	bd10      	pop	{r4, pc}

08013a5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013a5e:	b510      	push	{r4, lr}
 8013a60:	4604      	mov	r4, r0
 8013a62:	2104      	movs	r1, #4
 8013a64:	f00a fe38 	bl	801e6d8 <_ZdlPvj>
 8013a68:	4620      	mov	r0, r4
 8013a6a:	bd10      	pop	{r4, pc}

08013a6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8013a6c:	b510      	push	{r4, lr}
 8013a6e:	4604      	mov	r4, r0
 8013a70:	2104      	movs	r1, #4
 8013a72:	f00a fe31 	bl	801e6d8 <_ZdlPvj>
 8013a76:	4620      	mov	r0, r4
 8013a78:	bd10      	pop	{r4, pc}

08013a7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013a7a:	b510      	push	{r4, lr}
 8013a7c:	4604      	mov	r4, r0
 8013a7e:	2104      	movs	r1, #4
 8013a80:	f00a fe2a 	bl	801e6d8 <_ZdlPvj>
 8013a84:	4620      	mov	r0, r4
 8013a86:	bd10      	pop	{r4, pc}

08013a88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013a88:	b510      	push	{r4, lr}
 8013a8a:	4604      	mov	r4, r0
 8013a8c:	2104      	movs	r1, #4
 8013a8e:	f00a fe23 	bl	801e6d8 <_ZdlPvj>
 8013a92:	4620      	mov	r0, r4
 8013a94:	bd10      	pop	{r4, pc}

08013a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013a96:	b510      	push	{r4, lr}
 8013a98:	4604      	mov	r4, r0
 8013a9a:	2104      	movs	r1, #4
 8013a9c:	f00a fe1c 	bl	801e6d8 <_ZdlPvj>
 8013aa0:	4620      	mov	r0, r4
 8013aa2:	bd10      	pop	{r4, pc}

08013aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8013aa4:	b510      	push	{r4, lr}
 8013aa6:	4604      	mov	r4, r0
 8013aa8:	2104      	movs	r1, #4
 8013aaa:	f00a fe15 	bl	801e6d8 <_ZdlPvj>
 8013aae:	4620      	mov	r0, r4
 8013ab0:	bd10      	pop	{r4, pc}

08013ab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013ab2:	b510      	push	{r4, lr}
 8013ab4:	4604      	mov	r4, r0
 8013ab6:	2104      	movs	r1, #4
 8013ab8:	f00a fe0e 	bl	801e6d8 <_ZdlPvj>
 8013abc:	4620      	mov	r0, r4
 8013abe:	bd10      	pop	{r4, pc}

08013ac0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8013ac0:	b510      	push	{r4, lr}
 8013ac2:	4604      	mov	r4, r0
 8013ac4:	2104      	movs	r1, #4
 8013ac6:	f00a fe07 	bl	801e6d8 <_ZdlPvj>
 8013aca:	4620      	mov	r0, r4
 8013acc:	bd10      	pop	{r4, pc}

08013ace <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013ace:	b510      	push	{r4, lr}
 8013ad0:	4604      	mov	r4, r0
 8013ad2:	2104      	movs	r1, #4
 8013ad4:	f00a fe00 	bl	801e6d8 <_ZdlPvj>
 8013ad8:	4620      	mov	r0, r4
 8013ada:	bd10      	pop	{r4, pc}

08013adc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013adc:	b510      	push	{r4, lr}
 8013ade:	4604      	mov	r4, r0
 8013ae0:	2104      	movs	r1, #4
 8013ae2:	f00a fdf9 	bl	801e6d8 <_ZdlPvj>
 8013ae6:	4620      	mov	r0, r4
 8013ae8:	bd10      	pop	{r4, pc}

08013aea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013aea:	b510      	push	{r4, lr}
 8013aec:	4604      	mov	r4, r0
 8013aee:	2104      	movs	r1, #4
 8013af0:	f00a fdf2 	bl	801e6d8 <_ZdlPvj>
 8013af4:	4620      	mov	r0, r4
 8013af6:	bd10      	pop	{r4, pc}

08013af8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013af8:	b510      	push	{r4, lr}
 8013afa:	4604      	mov	r4, r0
 8013afc:	2104      	movs	r1, #4
 8013afe:	f00a fdeb 	bl	801e6d8 <_ZdlPvj>
 8013b02:	4620      	mov	r0, r4
 8013b04:	bd10      	pop	{r4, pc}

08013b06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013b06:	b510      	push	{r4, lr}
 8013b08:	4604      	mov	r4, r0
 8013b0a:	2104      	movs	r1, #4
 8013b0c:	f00a fde4 	bl	801e6d8 <_ZdlPvj>
 8013b10:	4620      	mov	r0, r4
 8013b12:	bd10      	pop	{r4, pc}

08013b14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8013b14:	b510      	push	{r4, lr}
 8013b16:	4604      	mov	r4, r0
 8013b18:	2104      	movs	r1, #4
 8013b1a:	f00a fddd 	bl	801e6d8 <_ZdlPvj>
 8013b1e:	4620      	mov	r0, r4
 8013b20:	bd10      	pop	{r4, pc}

08013b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013b22:	b510      	push	{r4, lr}
 8013b24:	4604      	mov	r4, r0
 8013b26:	2104      	movs	r1, #4
 8013b28:	f00a fdd6 	bl	801e6d8 <_ZdlPvj>
 8013b2c:	4620      	mov	r0, r4
 8013b2e:	bd10      	pop	{r4, pc}

08013b30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013b30:	b510      	push	{r4, lr}
 8013b32:	4604      	mov	r4, r0
 8013b34:	2104      	movs	r1, #4
 8013b36:	f00a fdcf 	bl	801e6d8 <_ZdlPvj>
 8013b3a:	4620      	mov	r0, r4
 8013b3c:	bd10      	pop	{r4, pc}

08013b3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013b3e:	b510      	push	{r4, lr}
 8013b40:	4604      	mov	r4, r0
 8013b42:	2104      	movs	r1, #4
 8013b44:	f00a fdc8 	bl	801e6d8 <_ZdlPvj>
 8013b48:	4620      	mov	r0, r4
 8013b4a:	bd10      	pop	{r4, pc}

08013b4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013b4c:	b510      	push	{r4, lr}
 8013b4e:	4604      	mov	r4, r0
 8013b50:	2104      	movs	r1, #4
 8013b52:	f00a fdc1 	bl	801e6d8 <_ZdlPvj>
 8013b56:	4620      	mov	r0, r4
 8013b58:	bd10      	pop	{r4, pc}

08013b5a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013b5a:	b510      	push	{r4, lr}
 8013b5c:	4604      	mov	r4, r0
 8013b5e:	2104      	movs	r1, #4
 8013b60:	f00a fdba 	bl	801e6d8 <_ZdlPvj>
 8013b64:	4620      	mov	r0, r4
 8013b66:	bd10      	pop	{r4, pc}

08013b68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013b68:	b510      	push	{r4, lr}
 8013b6a:	4604      	mov	r4, r0
 8013b6c:	2104      	movs	r1, #4
 8013b6e:	f00a fdb3 	bl	801e6d8 <_ZdlPvj>
 8013b72:	4620      	mov	r0, r4
 8013b74:	bd10      	pop	{r4, pc}

08013b76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013b76:	b510      	push	{r4, lr}
 8013b78:	4604      	mov	r4, r0
 8013b7a:	2104      	movs	r1, #4
 8013b7c:	f00a fdac 	bl	801e6d8 <_ZdlPvj>
 8013b80:	4620      	mov	r0, r4
 8013b82:	bd10      	pop	{r4, pc}

08013b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013b84:	b510      	push	{r4, lr}
 8013b86:	4604      	mov	r4, r0
 8013b88:	2104      	movs	r1, #4
 8013b8a:	f00a fda5 	bl	801e6d8 <_ZdlPvj>
 8013b8e:	4620      	mov	r0, r4
 8013b90:	bd10      	pop	{r4, pc}

08013b92 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013b92:	b510      	push	{r4, lr}
 8013b94:	4604      	mov	r4, r0
 8013b96:	2104      	movs	r1, #4
 8013b98:	f00a fd9e 	bl	801e6d8 <_ZdlPvj>
 8013b9c:	4620      	mov	r0, r4
 8013b9e:	bd10      	pop	{r4, pc}

08013ba0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013ba0:	b510      	push	{r4, lr}
 8013ba2:	4604      	mov	r4, r0
 8013ba4:	2104      	movs	r1, #4
 8013ba6:	f00a fd97 	bl	801e6d8 <_ZdlPvj>
 8013baa:	4620      	mov	r0, r4
 8013bac:	bd10      	pop	{r4, pc}

08013bae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8013bae:	b510      	push	{r4, lr}
 8013bb0:	4604      	mov	r4, r0
 8013bb2:	2104      	movs	r1, #4
 8013bb4:	f00a fd90 	bl	801e6d8 <_ZdlPvj>
 8013bb8:	4620      	mov	r0, r4
 8013bba:	bd10      	pop	{r4, pc}

08013bbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8013bbc:	b510      	push	{r4, lr}
 8013bbe:	4604      	mov	r4, r0
 8013bc0:	2104      	movs	r1, #4
 8013bc2:	f00a fd89 	bl	801e6d8 <_ZdlPvj>
 8013bc6:	4620      	mov	r0, r4
 8013bc8:	bd10      	pop	{r4, pc}

08013bca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8013bca:	b510      	push	{r4, lr}
 8013bcc:	4604      	mov	r4, r0
 8013bce:	2104      	movs	r1, #4
 8013bd0:	f00a fd82 	bl	801e6d8 <_ZdlPvj>
 8013bd4:	4620      	mov	r0, r4
 8013bd6:	bd10      	pop	{r4, pc}

08013bd8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8013bd8:	b510      	push	{r4, lr}
 8013bda:	4604      	mov	r4, r0
 8013bdc:	2104      	movs	r1, #4
 8013bde:	f00a fd7b 	bl	801e6d8 <_ZdlPvj>
 8013be2:	4620      	mov	r0, r4
 8013be4:	bd10      	pop	{r4, pc}
	...

08013be8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8013be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013bec:	b08f      	sub	sp, #60	@ 0x3c
 8013bee:	461c      	mov	r4, r3
 8013bf0:	9205      	str	r2, [sp, #20]
 8013bf2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013bf6:	9100      	str	r1, [sp, #0]
 8013bf8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8013bfa:	9201      	str	r2, [sp, #4]
 8013bfc:	2a00      	cmp	r2, #0
 8013bfe:	f000 8116 	beq.w	8013e2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 8013c02:	6820      	ldr	r0, [r4, #0]
 8013c04:	aa0a      	add	r2, sp, #40	@ 0x28
 8013c06:	6861      	ldr	r1, [r4, #4]
 8013c08:	c203      	stmia	r2!, {r0, r1}
 8013c0a:	6818      	ldr	r0, [r3, #0]
 8013c0c:	aa0c      	add	r2, sp, #48	@ 0x30
 8013c0e:	6859      	ldr	r1, [r3, #4]
 8013c10:	c203      	stmia	r2!, {r0, r1}
 8013c12:	a80a      	add	r0, sp, #40	@ 0x28
 8013c14:	f7f9 fee8 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013c18:	4621      	mov	r1, r4
 8013c1a:	a80c      	add	r0, sp, #48	@ 0x30
 8013c1c:	f7f9 ff0c 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013c20:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8013c24:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8013c28:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8013c2c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8013c30:	bfdb      	ittet	le
 8013c32:	b2b3      	uxthle	r3, r6
 8013c34:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8013c38:	2301      	movgt	r3, #1
 8013c3a:	fb92 f3f3 	sdivle	r3, r2, r3
 8013c3e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8013c42:	441d      	add	r5, r3
 8013c44:	fb92 f1f3 	sdiv	r1, r2, r3
 8013c48:	fa1f fc81 	uxth.w	ip, r1
 8013c4c:	3d01      	subs	r5, #1
 8013c4e:	fb0c 2413 	mls	r4, ip, r3, r2
 8013c52:	4661      	mov	r1, ip
 8013c54:	fb14 f406 	smulbb	r4, r4, r6
 8013c58:	4404      	add	r4, r0
 8013c5a:	fb95 f5f3 	sdiv	r5, r5, r3
 8013c5e:	b2a4      	uxth	r4, r4
 8013c60:	b131      	cbz	r1, 8013c70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 8013c62:	9b05      	ldr	r3, [sp, #20]
 8013c64:	9900      	ldr	r1, [sp, #0]
 8013c66:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8013c6a:	ba1b      	rev	r3, r3
 8013c6c:	4419      	add	r1, r3
 8013c6e:	9100      	str	r1, [sp, #0]
 8013c70:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8013c74:	b2ad      	uxth	r5, r5
 8013c76:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8013c7a:	4418      	add	r0, r3
 8013c7c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8013c80:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8013c84:	00ad      	lsls	r5, r5, #2
 8013c86:	441a      	add	r2, r3
 8013c88:	4b6a      	ldr	r3, [pc, #424]	@ (8013e34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8013c8a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8013c8e:	6818      	ldr	r0, [r3, #0]
 8013c90:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8013c94:	6803      	ldr	r3, [r0, #0]
 8013c96:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013c98:	4798      	blx	r3
 8013c9a:	4967      	ldr	r1, [pc, #412]	@ (8013e38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8013c9c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8013ca0:	2c00      	cmp	r4, #0
 8013ca2:	880b      	ldrh	r3, [r1, #0]
 8013ca4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8013ca8:	bf0c      	ite	eq
 8013caa:	46c6      	moveq	lr, r8
 8013cac:	f04f 0e00 	movne.w	lr, #0
 8013cb0:	9109      	str	r1, [sp, #36]	@ 0x24
 8013cb2:	fb03 c202 	mla	r2, r3, r2, ip
 8013cb6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8013cba:	4373      	muls	r3, r6
 8013cbc:	fa1f fe8e 	uxth.w	lr, lr
 8013cc0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013cc4:	9103      	str	r1, [sp, #12]
 8013cc6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013cca:	9306      	str	r3, [sp, #24]
 8013ccc:	1d2b      	adds	r3, r5, #4
 8013cce:	9307      	str	r3, [sp, #28]
 8013cd0:	9b01      	ldr	r3, [sp, #4]
 8013cd2:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8013cd6:	2300      	movs	r3, #0
 8013cd8:	b292      	uxth	r2, r2
 8013cda:	9302      	str	r3, [sp, #8]
 8013cdc:	9204      	str	r2, [sp, #16]
 8013cde:	9a06      	ldr	r2, [sp, #24]
 8013ce0:	4282      	cmp	r2, r0
 8013ce2:	f240 809f 	bls.w	8013e24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 8013ce6:	b963      	cbnz	r3, 8013d02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8013ce8:	9b00      	ldr	r3, [sp, #0]
 8013cea:	781a      	ldrb	r2, [r3, #0]
 8013cec:	0993      	lsrs	r3, r2, #6
 8013cee:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8013cf2:	9202      	str	r2, [sp, #8]
 8013cf4:	1e5a      	subs	r2, r3, #1
 8013cf6:	2a02      	cmp	r2, #2
 8013cf8:	d815      	bhi.n	8013d26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8013cfa:	9a00      	ldr	r2, [sp, #0]
 8013cfc:	b29b      	uxth	r3, r3
 8013cfe:	3201      	adds	r2, #1
 8013d00:	9200      	str	r2, [sp, #0]
 8013d02:	b1b4      	cbz	r4, 8013d32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 8013d04:	429c      	cmp	r4, r3
 8013d06:	bf91      	iteee	ls
 8013d08:	1b1c      	subls	r4, r3, r4
 8013d0a:	1ae4      	subhi	r4, r4, r3
 8013d0c:	4671      	movhi	r1, lr
 8013d0e:	f04f 0a00 	movhi.w	sl, #0
 8013d12:	bf9b      	ittet	ls
 8013d14:	fa1f fa84 	uxthls.w	sl, r4
 8013d18:	2400      	movls	r4, #0
 8013d1a:	b2a4      	uxthhi	r4, r4
 8013d1c:	fa1f f188 	uxthls.w	r1, r8
 8013d20:	4653      	mov	r3, sl
 8013d22:	468e      	mov	lr, r1
 8013d24:	e7db      	b.n	8013cde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 8013d26:	9a00      	ldr	r2, [sp, #0]
 8013d28:	9b00      	ldr	r3, [sp, #0]
 8013d2a:	3202      	adds	r2, #2
 8013d2c:	785b      	ldrb	r3, [r3, #1]
 8013d2e:	9200      	str	r2, [sp, #0]
 8013d30:	e7e7      	b.n	8013d02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8013d32:	2202      	movs	r2, #2
 8013d34:	9907      	ldr	r1, [sp, #28]
 8013d36:	4573      	cmp	r3, lr
 8013d38:	4615      	mov	r5, r2
 8013d3a:	9a02      	ldr	r2, [sp, #8]
 8013d3c:	bf24      	itt	cs
 8013d3e:	eba3 0a0e 	subcs.w	sl, r3, lr
 8013d42:	46f1      	movcs	r9, lr
 8013d44:	fb15 1202 	smlabb	r2, r5, r2, r1
 8013d48:	9905      	ldr	r1, [sp, #20]
 8013d4a:	bf34      	ite	cc
 8013d4c:	4699      	movcc	r9, r3
 8013d4e:	fa1f fa8a 	uxthcs.w	sl, sl
 8013d52:	f831 c002 	ldrh.w	ip, [r1, r2]
 8013d56:	bf38      	it	cc
 8013d58:	ebae 0103 	subcc.w	r1, lr, r3
 8013d5c:	9a01      	ldr	r2, [sp, #4]
 8013d5e:	bf2e      	itee	cs
 8013d60:	4621      	movcs	r1, r4
 8013d62:	b289      	uxthcc	r1, r1
 8013d64:	46a2      	movcc	sl, r4
 8013d66:	2aff      	cmp	r2, #255	@ 0xff
 8013d68:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8013d6c:	d105      	bne.n	8013d7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 8013d6e:	4481      	add	r9, r0
 8013d70:	4581      	cmp	r9, r0
 8013d72:	d045      	beq.n	8013e00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8013d74:	f820 cb02 	strh.w	ip, [r0], #2
 8013d78:	e7fa      	b.n	8013d70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 8013d7a:	ea4f 222c 	mov.w	r2, ip, asr #8
 8013d7e:	9d03      	ldr	r5, [sp, #12]
 8013d80:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8013d84:	4481      	add	r9, r0
 8013d86:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013d8a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8013d8e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8013d92:	fa5f fc8c 	uxtb.w	ip, ip
 8013d96:	436a      	muls	r2, r5
 8013d98:	fb0b fb05 	mul.w	fp, fp, r5
 8013d9c:	fb0c fc05 	mul.w	ip, ip, r5
 8013da0:	9208      	str	r2, [sp, #32]
 8013da2:	4581      	cmp	r9, r0
 8013da4:	d02c      	beq.n	8013e00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8013da6:	8802      	ldrh	r2, [r0, #0]
 8013da8:	9d04      	ldr	r5, [sp, #16]
 8013daa:	1216      	asrs	r6, r2, #8
 8013dac:	9f04      	ldr	r7, [sp, #16]
 8013dae:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013db2:	fb16 f605 	smulbb	r6, r6, r5
 8013db6:	9d08      	ldr	r5, [sp, #32]
 8013db8:	442e      	add	r6, r5
 8013dba:	10d5      	asrs	r5, r2, #3
 8013dbc:	00d2      	lsls	r2, r2, #3
 8013dbe:	b2b6      	uxth	r6, r6
 8013dc0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8013dc4:	b2d2      	uxtb	r2, r2
 8013dc6:	fb15 f507 	smulbb	r5, r5, r7
 8013dca:	fb12 f207 	smulbb	r2, r2, r7
 8013dce:	1c77      	adds	r7, r6, #1
 8013dd0:	445d      	add	r5, fp
 8013dd2:	4462      	add	r2, ip
 8013dd4:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8013dd8:	b2ad      	uxth	r5, r5
 8013dda:	b292      	uxth	r2, r2
 8013ddc:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8013de0:	1c57      	adds	r7, r2, #1
 8013de2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8013de6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013dea:	4316      	orrs	r6, r2
 8013dec:	1c6a      	adds	r2, r5, #1
 8013dee:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8013df2:	096d      	lsrs	r5, r5, #5
 8013df4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013df8:	432e      	orrs	r6, r5
 8013dfa:	f820 6b02 	strh.w	r6, [r0], #2
 8013dfe:	e7d0      	b.n	8013da2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 8013e00:	4573      	cmp	r3, lr
 8013e02:	d38d      	bcc.n	8013d20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8013e04:	fa1f f188 	uxth.w	r1, r8
 8013e08:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8013e0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013e0e:	1a64      	subs	r4, r4, r1
 8013e10:	881b      	ldrh	r3, [r3, #0]
 8013e12:	b2a4      	uxth	r4, r4
 8013e14:	eba3 0308 	sub.w	r3, r3, r8
 8013e18:	2c00      	cmp	r4, #0
 8013e1a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013e1e:	bf18      	it	ne
 8013e20:	2100      	movne	r1, #0
 8013e22:	e77d      	b.n	8013d20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8013e24:	4b03      	ldr	r3, [pc, #12]	@ (8013e34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8013e26:	6818      	ldr	r0, [r3, #0]
 8013e28:	6803      	ldr	r3, [r0, #0]
 8013e2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013e2c:	4798      	blx	r3
 8013e2e:	b00f      	add	sp, #60	@ 0x3c
 8013e30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e34:	200150ac 	.word	0x200150ac
 8013e38:	200150a6 	.word	0x200150a6

08013e3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8013e3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e40:	b09f      	sub	sp, #124	@ 0x7c
 8013e42:	461d      	mov	r5, r3
 8013e44:	4604      	mov	r4, r0
 8013e46:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8013e48:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8013e4c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8013e50:	9209      	str	r2, [sp, #36]	@ 0x24
 8013e52:	2a00      	cmp	r2, #0
 8013e54:	f000 81ed 	beq.w	8014232 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 8013e58:	6828      	ldr	r0, [r5, #0]
 8013e5a:	aa1a      	add	r2, sp, #104	@ 0x68
 8013e5c:	6869      	ldr	r1, [r5, #4]
 8013e5e:	c203      	stmia	r2!, {r0, r1}
 8013e60:	6818      	ldr	r0, [r3, #0]
 8013e62:	aa1c      	add	r2, sp, #112	@ 0x70
 8013e64:	6859      	ldr	r1, [r3, #4]
 8013e66:	c203      	stmia	r2!, {r0, r1}
 8013e68:	a81a      	add	r0, sp, #104	@ 0x68
 8013e6a:	f7f9 fdbd 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013e6e:	4629      	mov	r1, r5
 8013e70:	a81c      	add	r0, sp, #112	@ 0x70
 8013e72:	f7f9 fde1 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013e76:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8013e7a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8013e7e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8013e82:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8013e86:	bfdb      	ittet	le
 8013e88:	b29a      	uxthle	r2, r3
 8013e8a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8013e8e:	2201      	movgt	r2, #1
 8013e90:	fb91 f2f2 	sdivle	r2, r1, r2
 8013e94:	9202      	str	r2, [sp, #8]
 8013e96:	9802      	ldr	r0, [sp, #8]
 8013e98:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8013e9c:	9902      	ldr	r1, [sp, #8]
 8013e9e:	fb92 f0f0 	sdiv	r0, r2, r0
 8013ea2:	b280      	uxth	r0, r0
 8013ea4:	4488      	add	r8, r1
 8013ea6:	9010      	str	r0, [sp, #64]	@ 0x40
 8013ea8:	f108 38ff 	add.w	r8, r8, #4294967295
 8013eac:	9802      	ldr	r0, [sp, #8]
 8013eae:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8013eb0:	fb05 2510 	mls	r5, r5, r0, r2
 8013eb4:	fb98 f8f1 	sdiv	r8, r8, r1
 8013eb8:	fb15 f503 	smulbb	r5, r5, r3
 8013ebc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8013ec0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8013ec4:	f108 0801 	add.w	r8, r8, #1
 8013ec8:	440d      	add	r5, r1
 8013eca:	4419      	add	r1, r3
 8013ecc:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8013ed0:	fa1f f888 	uxth.w	r8, r8
 8013ed4:	441a      	add	r2, r3
 8013ed6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8013eda:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8013ede:	b2ad      	uxth	r5, r5
 8013ee0:	9304      	str	r3, [sp, #16]
 8013ee2:	4b94      	ldr	r3, [pc, #592]	@ (8014134 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8013ee4:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8013ee8:	6818      	ldr	r0, [r3, #0]
 8013eea:	6803      	ldr	r3, [r0, #0]
 8013eec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013eee:	4798      	blx	r3
 8013ef0:	4b91      	ldr	r3, [pc, #580]	@ (8014138 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8013ef2:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8013ef6:	2d00      	cmp	r5, #0
 8013ef8:	881a      	ldrh	r2, [r3, #0]
 8013efa:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8013efe:	fb02 f606 	mul.w	r6, r2, r6
 8013f02:	fb02 7101 	mla	r1, r2, r1, r7
 8013f06:	9318      	str	r3, [sp, #96]	@ 0x60
 8013f08:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8013f0c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8013f10:	f04f 0100 	mov.w	r1, #0
 8013f14:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8013f18:	930f      	str	r3, [sp, #60]	@ 0x3c
 8013f1a:	4b88      	ldr	r3, [pc, #544]	@ (801413c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 8013f1c:	920a      	str	r2, [sp, #40]	@ 0x28
 8013f1e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013f20:	eba3 0304 	sub.w	r3, r3, r4
 8013f24:	910d      	str	r1, [sp, #52]	@ 0x34
 8013f26:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8013f2a:	9319      	str	r3, [sp, #100]	@ 0x64
 8013f2c:	f108 0204 	add.w	r2, r8, #4
 8013f30:	9211      	str	r2, [sp, #68]	@ 0x44
 8013f32:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013f34:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8013f38:	9215      	str	r2, [sp, #84]	@ 0x54
 8013f3a:	9a04      	ldr	r2, [sp, #16]
 8013f3c:	bf18      	it	ne
 8013f3e:	2200      	movne	r2, #0
 8013f40:	b292      	uxth	r2, r2
 8013f42:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8013f44:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013f46:	fa11 f383 	uxtah	r3, r1, r3
 8013f4a:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8013f4c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013f50:	3304      	adds	r3, #4
 8013f52:	9306      	str	r3, [sp, #24]
 8013f54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8013f56:	4283      	cmp	r3, r0
 8013f58:	f240 8166 	bls.w	8014228 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 8013f5c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8013f60:	f04f 0a01 	mov.w	sl, #1
 8013f64:	9902      	ldr	r1, [sp, #8]
 8013f66:	9e06      	ldr	r6, [sp, #24]
 8013f68:	46d3      	mov	fp, sl
 8013f6a:	4657      	mov	r7, sl
 8013f6c:	7836      	ldrb	r6, [r6, #0]
 8013f6e:	fbb5 f3f3 	udiv	r3, r5, r3
 8013f72:	1acb      	subs	r3, r1, r3
 8013f74:	9612      	str	r6, [sp, #72]	@ 0x48
 8013f76:	3601      	adds	r6, #1
 8013f78:	b29b      	uxth	r3, r3
 8013f7a:	9605      	str	r6, [sp, #20]
 8013f7c:	9316      	str	r3, [sp, #88]	@ 0x58
 8013f7e:	9b06      	ldr	r3, [sp, #24]
 8013f80:	7859      	ldrb	r1, [r3, #1]
 8013f82:	789b      	ldrb	r3, [r3, #2]
 8013f84:	021b      	lsls	r3, r3, #8
 8013f86:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8013f8a:	9906      	ldr	r1, [sp, #24]
 8013f8c:	78c9      	ldrb	r1, [r1, #3]
 8013f8e:	430b      	orrs	r3, r1
 8013f90:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8013f92:	4419      	add	r1, r3
 8013f94:	1c4e      	adds	r6, r1, #1
 8013f96:	7849      	ldrb	r1, [r1, #1]
 8013f98:	9603      	str	r6, [sp, #12]
 8013f9a:	0209      	lsls	r1, r1, #8
 8013f9c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013f9e:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8013fa2:	5cf3      	ldrb	r3, [r6, r3]
 8013fa4:	4319      	orrs	r1, r3
 8013fa6:	b28b      	uxth	r3, r1
 8013fa8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8013fac:	930c      	str	r3, [sp, #48]	@ 0x30
 8013fae:	2300      	movs	r3, #0
 8013fb0:	9307      	str	r3, [sp, #28]
 8013fb2:	469c      	mov	ip, r3
 8013fb4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8013fb8:	930e      	str	r3, [sp, #56]	@ 0x38
 8013fba:	2d00      	cmp	r5, #0
 8013fbc:	d07e      	beq.n	80140bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 8013fbe:	42af      	cmp	r7, r5
 8013fc0:	d26e      	bcs.n	80140a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 8013fc2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8013fc4:	1bed      	subs	r5, r5, r7
 8013fc6:	9201      	str	r2, [sp, #4]
 8013fc8:	4283      	cmp	r3, r0
 8013fca:	b2ad      	uxth	r5, r5
 8013fcc:	d802      	bhi.n	8013fd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 8013fce:	e073      	b.n	80140b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8013fd0:	2b00      	cmp	r3, #0
 8013fd2:	d15f      	bne.n	8014094 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 8013fd4:	9b03      	ldr	r3, [sp, #12]
 8013fd6:	f1cb 0207 	rsb	r2, fp, #7
 8013fda:	785b      	ldrb	r3, [r3, #1]
 8013fdc:	4093      	lsls	r3, r2
 8013fde:	005b      	lsls	r3, r3, #1
 8013fe0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8013fe4:	9b03      	ldr	r3, [sp, #12]
 8013fe6:	781b      	ldrb	r3, [r3, #0]
 8013fe8:	fa43 f30b 	asr.w	r3, r3, fp
 8013fec:	b2db      	uxtb	r3, r3
 8013fee:	4313      	orrs	r3, r2
 8013ff0:	f10b 0201 	add.w	r2, fp, #1
 8013ff4:	fa5f fb82 	uxtb.w	fp, r2
 8013ff8:	9a03      	ldr	r2, [sp, #12]
 8013ffa:	b29f      	uxth	r7, r3
 8013ffc:	f1bb 0f08 	cmp.w	fp, #8
 8014000:	bf13      	iteet	ne
 8014002:	3201      	addne	r2, #1
 8014004:	3202      	addeq	r2, #2
 8014006:	f04f 0b00 	moveq.w	fp, #0
 801400a:	9203      	strne	r2, [sp, #12]
 801400c:	bf08      	it	eq
 801400e:	9203      	streq	r2, [sp, #12]
 8014010:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014012:	42ba      	cmp	r2, r7
 8014014:	d309      	bcc.n	801402a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 8014016:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801401a:	2301      	movs	r3, #1
 801401c:	9a05      	ldr	r2, [sp, #20]
 801401e:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8014022:	d30e      	bcc.n	8014042 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8014024:	469a      	mov	sl, r3
 8014026:	2600      	movs	r6, #0
 8014028:	e035      	b.n	8014096 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 801402a:	9b05      	ldr	r3, [sp, #20]
 801402c:	429f      	cmp	r7, r3
 801402e:	d318      	bcc.n	8014062 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 8014030:	eb04 030a 	add.w	r3, r4, sl
 8014034:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8014038:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801403c:	f10a 0301 	add.w	r3, sl, #1
 8014040:	b29b      	uxth	r3, r3
 8014042:	9a05      	ldr	r2, [sp, #20]
 8014044:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8014048:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801404c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801404e:	7116      	strb	r6, [r2, #4]
 8014050:	f10a 0601 	add.w	r6, sl, #1
 8014054:	80d1      	strh	r1, [r2, #6]
 8014056:	7156      	strb	r6, [r2, #5]
 8014058:	9a05      	ldr	r2, [sp, #20]
 801405a:	3201      	adds	r2, #1
 801405c:	b292      	uxth	r2, r2
 801405e:	9205      	str	r2, [sp, #20]
 8014060:	e7e0      	b.n	8014024 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 8014062:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8014066:	463a      	mov	r2, r7
 8014068:	795b      	ldrb	r3, [r3, #5]
 801406a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801406e:	4426      	add	r6, r4
 8014070:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8014072:	eb01 0c06 	add.w	ip, r1, r6
 8014076:	f1bc 0f00 	cmp.w	ip, #0
 801407a:	dd07      	ble.n	801408c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 801407c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8014080:	f892 c004 	ldrb.w	ip, [r2, #4]
 8014084:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8014088:	88d2      	ldrh	r2, [r2, #6]
 801408a:	e7f1      	b.n	8014070 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 801408c:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8014090:	b29b      	uxth	r3, r3
 8014092:	e7c3      	b.n	801401c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 8014094:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8014096:	970c      	str	r7, [sp, #48]	@ 0x30
 8014098:	46b4      	mov	ip, r6
 801409a:	9a01      	ldr	r2, [sp, #4]
 801409c:	461f      	mov	r7, r3
 801409e:	e78c      	b.n	8013fba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 80140a0:	1b7b      	subs	r3, r7, r5
 80140a2:	eb0c 0605 	add.w	r6, ip, r5
 80140a6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80140aa:	b29b      	uxth	r3, r3
 80140ac:	b2b6      	uxth	r6, r6
 80140ae:	9201      	str	r2, [sp, #4]
 80140b0:	2500      	movs	r5, #0
 80140b2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80140b4:	4282      	cmp	r2, r0
 80140b6:	d88b      	bhi.n	8013fd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 80140b8:	9a01      	ldr	r2, [sp, #4]
 80140ba:	e74b      	b.n	8013f54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 80140bc:	4297      	cmp	r7, r2
 80140be:	d332      	bcc.n	8014126 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 80140c0:	1abb      	subs	r3, r7, r2
 80140c2:	9208      	str	r2, [sp, #32]
 80140c4:	9501      	str	r5, [sp, #4]
 80140c6:	b29b      	uxth	r3, r3
 80140c8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80140ca:	29ff      	cmp	r1, #255	@ 0xff
 80140cc:	9908      	ldr	r1, [sp, #32]
 80140ce:	eb0c 0601 	add.w	r6, ip, r1
 80140d2:	d135      	bne.n	8014140 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 80140d4:	f1a0 0e02 	sub.w	lr, r0, #2
 80140d8:	b2b6      	uxth	r6, r6
 80140da:	45b4      	cmp	ip, r6
 80140dc:	f040 808c 	bne.w	80141f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 80140e0:	9908      	ldr	r1, [sp, #32]
 80140e2:	4297      	cmp	r7, r2
 80140e4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80140e8:	d3e2      	bcc.n	80140b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 80140ea:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80140ec:	9904      	ldr	r1, [sp, #16]
 80140ee:	8812      	ldrh	r2, [r2, #0]
 80140f0:	1a52      	subs	r2, r2, r1
 80140f2:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80140f4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80140f8:	9a07      	ldr	r2, [sp, #28]
 80140fa:	3201      	adds	r2, #1
 80140fc:	428a      	cmp	r2, r1
 80140fe:	9207      	str	r2, [sp, #28]
 8014100:	f040 8087 	bne.w	8014212 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 8014104:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8014108:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801410c:	9b04      	ldr	r3, [sp, #16]
 801410e:	1bed      	subs	r5, r5, r7
 8014110:	b2ad      	uxth	r5, r5
 8014112:	2d00      	cmp	r5, #0
 8014114:	bf08      	it	eq
 8014116:	461a      	moveq	r2, r3
 8014118:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801411a:	bf18      	it	ne
 801411c:	2200      	movne	r2, #0
 801411e:	3301      	adds	r3, #1
 8014120:	b292      	uxth	r2, r2
 8014122:	930d      	str	r3, [sp, #52]	@ 0x34
 8014124:	e70d      	b.n	8013f42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 8014126:	1bd1      	subs	r1, r2, r7
 8014128:	9708      	str	r7, [sp, #32]
 801412a:	b28b      	uxth	r3, r1
 801412c:	9301      	str	r3, [sp, #4]
 801412e:	462b      	mov	r3, r5
 8014130:	e7ca      	b.n	80140c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 8014132:	bf00      	nop
 8014134:	200150ac 	.word	0x200150ac
 8014138:	200150a6 	.word	0x200150a6
 801413c:	fffff7fb 	.word	0xfffff7fb
 8014140:	b2b6      	uxth	r6, r6
 8014142:	900b      	str	r0, [sp, #44]	@ 0x2c
 8014144:	45b4      	cmp	ip, r6
 8014146:	d0cb      	beq.n	80140e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 8014148:	f10c 0101 	add.w	r1, ip, #1
 801414c:	44a4      	add	ip, r4
 801414e:	9117      	str	r1, [sp, #92]	@ 0x5c
 8014150:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8014154:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014156:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801415a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801415c:	ea4f 2825 	mov.w	r8, r5, asr #8
 8014160:	f8b1 c000 	ldrh.w	ip, [r1]
 8014164:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8014166:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801416a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801416e:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8014172:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014176:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801417a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801417e:	fb1e fe01 	smulbb	lr, lr, r1
 8014182:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8014184:	fa5f fc8c 	uxtb.w	ip, ip
 8014188:	fb08 e801 	mla	r8, r8, r1, lr
 801418c:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8014190:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8014192:	00ed      	lsls	r5, r5, #3
 8014194:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8014198:	fa1f f888 	uxth.w	r8, r8
 801419c:	fb19 f901 	smulbb	r9, r9, r1
 80141a0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80141a2:	b2ed      	uxtb	r5, r5
 80141a4:	fb0e 9e01 	mla	lr, lr, r1, r9
 80141a8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80141aa:	fb1c fc01 	smulbb	ip, ip, r1
 80141ae:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80141b0:	fa1f fe8e 	uxth.w	lr, lr
 80141b4:	fb05 c501 	mla	r5, r5, r1, ip
 80141b8:	f108 0c01 	add.w	ip, r8, #1
 80141bc:	f10e 0901 	add.w	r9, lr, #1
 80141c0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80141c2:	b2ad      	uxth	r5, r5
 80141c4:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80141c8:	f105 0c01 	add.w	ip, r5, #1
 80141cc:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 80141d0:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 80141d4:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80141d8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80141dc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80141e0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80141e4:	ea4c 0808 	orr.w	r8, ip, r8
 80141e8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 80141ec:	ea48 0809 	orr.w	r8, r8, r9
 80141f0:	f821 8b02 	strh.w	r8, [r1], #2
 80141f4:	910b      	str	r1, [sp, #44]	@ 0x2c
 80141f6:	e7a5      	b.n	8014144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 80141f8:	f10c 0801 	add.w	r8, ip, #1
 80141fc:	44a4      	add	ip, r4
 80141fe:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014200:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8014204:	fa1f fc88 	uxth.w	ip, r8
 8014208:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801420c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8014210:	e763      	b.n	80140da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 8014212:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014216:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801421a:	1aad      	subs	r5, r5, r2
 801421c:	b2ad      	uxth	r5, r5
 801421e:	2d00      	cmp	r5, #0
 8014220:	bf18      	it	ne
 8014222:	2200      	movne	r2, #0
 8014224:	9201      	str	r2, [sp, #4]
 8014226:	e744      	b.n	80140b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 8014228:	4b03      	ldr	r3, [pc, #12]	@ (8014238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 801422a:	6818      	ldr	r0, [r3, #0]
 801422c:	6803      	ldr	r3, [r0, #0]
 801422e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014230:	4798      	blx	r3
 8014232:	b01f      	add	sp, #124	@ 0x7c
 8014234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014238:	200150ac 	.word	0x200150ac

0801423c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801423c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014240:	b08f      	sub	sp, #60	@ 0x3c
 8014242:	461c      	mov	r4, r3
 8014244:	460f      	mov	r7, r1
 8014246:	9203      	str	r2, [sp, #12]
 8014248:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801424c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801424e:	9202      	str	r2, [sp, #8]
 8014250:	2a00      	cmp	r2, #0
 8014252:	f000 8128 	beq.w	80144a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8014256:	6820      	ldr	r0, [r4, #0]
 8014258:	aa0a      	add	r2, sp, #40	@ 0x28
 801425a:	6861      	ldr	r1, [r4, #4]
 801425c:	c203      	stmia	r2!, {r0, r1}
 801425e:	6818      	ldr	r0, [r3, #0]
 8014260:	aa0c      	add	r2, sp, #48	@ 0x30
 8014262:	6859      	ldr	r1, [r3, #4]
 8014264:	c203      	stmia	r2!, {r0, r1}
 8014266:	a80a      	add	r0, sp, #40	@ 0x28
 8014268:	f7f9 fbbe 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801426c:	4621      	mov	r1, r4
 801426e:	a80c      	add	r0, sp, #48	@ 0x30
 8014270:	f7f9 fbe2 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014274:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8014278:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801427c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8014280:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8014284:	bfdb      	ittet	le
 8014286:	b2b3      	uxthle	r3, r6
 8014288:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801428c:	2301      	movgt	r3, #1
 801428e:	fb92 f3f3 	sdivle	r3, r2, r3
 8014292:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8014296:	441d      	add	r5, r3
 8014298:	fb92 f1f3 	sdiv	r1, r2, r3
 801429c:	fa1f fc81 	uxth.w	ip, r1
 80142a0:	3d01      	subs	r5, #1
 80142a2:	fb0c 2413 	mls	r4, ip, r3, r2
 80142a6:	4661      	mov	r1, ip
 80142a8:	fb14 f406 	smulbb	r4, r4, r6
 80142ac:	4404      	add	r4, r0
 80142ae:	fb95 f5f3 	sdiv	r5, r5, r3
 80142b2:	b2a4      	uxth	r4, r4
 80142b4:	b121      	cbz	r1, 80142c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 80142b6:	9b03      	ldr	r3, [sp, #12]
 80142b8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80142bc:	ba1b      	rev	r3, r3
 80142be:	441f      	add	r7, r3
 80142c0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80142c4:	b2ad      	uxth	r5, r5
 80142c6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80142ca:	4418      	add	r0, r3
 80142cc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80142d0:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80142d4:	00ad      	lsls	r5, r5, #2
 80142d6:	441a      	add	r2, r3
 80142d8:	4b74      	ldr	r3, [pc, #464]	@ (80144ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80142da:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80142de:	6818      	ldr	r0, [r3, #0]
 80142e0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80142e4:	6803      	ldr	r3, [r0, #0]
 80142e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80142e8:	4798      	blx	r3
 80142ea:	4a71      	ldr	r2, [pc, #452]	@ (80144b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80142ec:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80142f0:	2c00      	cmp	r4, #0
 80142f2:	8813      	ldrh	r3, [r2, #0]
 80142f4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80142f8:	bf0c      	ite	eq
 80142fa:	46c8      	moveq	r8, r9
 80142fc:	f04f 0800 	movne.w	r8, #0
 8014300:	9209      	str	r2, [sp, #36]	@ 0x24
 8014302:	fb03 c101 	mla	r1, r3, r1, ip
 8014306:	4373      	muls	r3, r6
 8014308:	fa1f f888 	uxth.w	r8, r8
 801430c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014310:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014314:	9304      	str	r3, [sp, #16]
 8014316:	1d2b      	adds	r3, r5, #4
 8014318:	9305      	str	r3, [sp, #20]
 801431a:	2300      	movs	r3, #0
 801431c:	9301      	str	r3, [sp, #4]
 801431e:	9a04      	ldr	r2, [sp, #16]
 8014320:	4282      	cmp	r2, r0
 8014322:	f240 80bb 	bls.w	801449c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8014326:	b95b      	cbnz	r3, 8014340 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 8014328:	783a      	ldrb	r2, [r7, #0]
 801432a:	0993      	lsrs	r3, r2, #6
 801432c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8014330:	9201      	str	r2, [sp, #4]
 8014332:	1e5a      	subs	r2, r3, #1
 8014334:	2a02      	cmp	r2, #2
 8014336:	bf8d      	iteet	hi
 8014338:	787b      	ldrbhi	r3, [r7, #1]
 801433a:	3701      	addls	r7, #1
 801433c:	b29b      	uxthls	r3, r3
 801433e:	3702      	addhi	r7, #2
 8014340:	b184      	cbz	r4, 8014364 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 8014342:	429c      	cmp	r4, r3
 8014344:	bf91      	iteee	ls
 8014346:	1b1c      	subls	r4, r3, r4
 8014348:	1ae4      	subhi	r4, r4, r3
 801434a:	46c4      	movhi	ip, r8
 801434c:	f04f 0a00 	movhi.w	sl, #0
 8014350:	bf9b      	ittet	ls
 8014352:	fa1f fa84 	uxthls.w	sl, r4
 8014356:	2400      	movls	r4, #0
 8014358:	b2a4      	uxthhi	r4, r4
 801435a:	fa1f fc89 	uxthls.w	ip, r9
 801435e:	4653      	mov	r3, sl
 8014360:	46e0      	mov	r8, ip
 8014362:	e7dc      	b.n	801431e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 8014364:	2204      	movs	r2, #4
 8014366:	9905      	ldr	r1, [sp, #20]
 8014368:	4543      	cmp	r3, r8
 801436a:	4615      	mov	r5, r2
 801436c:	9a01      	ldr	r2, [sp, #4]
 801436e:	bf24      	itt	cs
 8014370:	eba3 0a08 	subcs.w	sl, r3, r8
 8014374:	46c6      	movcs	lr, r8
 8014376:	fb15 1202 	smlabb	r2, r5, r2, r1
 801437a:	9903      	ldr	r1, [sp, #12]
 801437c:	bf3c      	itt	cc
 801437e:	eba8 0c03 	subcc.w	ip, r8, r3
 8014382:	469e      	movcc	lr, r3
 8014384:	588a      	ldr	r2, [r1, r2]
 8014386:	bf26      	itte	cs
 8014388:	fa1f fa8a 	uxthcs.w	sl, sl
 801438c:	46a4      	movcs	ip, r4
 801438e:	fa1f fc8c 	uxthcc.w	ip, ip
 8014392:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8014396:	bf38      	it	cc
 8014398:	46a2      	movcc	sl, r4
 801439a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801439e:	2900      	cmp	r1, #0
 80143a0:	d066      	beq.n	8014470 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 80143a2:	29ff      	cmp	r1, #255	@ 0xff
 80143a4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80143a8:	d114      	bne.n	80143d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80143aa:	9d02      	ldr	r5, [sp, #8]
 80143ac:	2dff      	cmp	r5, #255	@ 0xff
 80143ae:	d111      	bne.n	80143d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80143b0:	0951      	lsrs	r1, r2, #5
 80143b2:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80143b6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80143ba:	4486      	add	lr, r0
 80143bc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80143c0:	f026 0607 	bic.w	r6, r6, #7
 80143c4:	430e      	orrs	r6, r1
 80143c6:	4316      	orrs	r6, r2
 80143c8:	b2b6      	uxth	r6, r6
 80143ca:	4586      	cmp	lr, r0
 80143cc:	d051      	beq.n	8014472 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80143ce:	f820 6b02 	strh.w	r6, [r0], #2
 80143d2:	e7fa      	b.n	80143ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 80143d4:	9d02      	ldr	r5, [sp, #8]
 80143d6:	b2f6      	uxtb	r6, r6
 80143d8:	4486      	add	lr, r0
 80143da:	4369      	muls	r1, r5
 80143dc:	1c4d      	adds	r5, r1, #1
 80143de:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80143e2:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80143e6:	b2d2      	uxtb	r2, r2
 80143e8:	122d      	asrs	r5, r5, #8
 80143ea:	ea6f 0b05 	mvn.w	fp, r5
 80143ee:	b2ad      	uxth	r5, r5
 80143f0:	fb11 f105 	smulbb	r1, r1, r5
 80143f4:	fa5f fb8b 	uxtb.w	fp, fp
 80143f8:	fb16 f605 	smulbb	r6, r6, r5
 80143fc:	fb12 f205 	smulbb	r2, r2, r5
 8014400:	b289      	uxth	r1, r1
 8014402:	b2b6      	uxth	r6, r6
 8014404:	b292      	uxth	r2, r2
 8014406:	9106      	str	r1, [sp, #24]
 8014408:	9607      	str	r6, [sp, #28]
 801440a:	9208      	str	r2, [sp, #32]
 801440c:	4586      	cmp	lr, r0
 801440e:	d030      	beq.n	8014472 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8014410:	8802      	ldrh	r2, [r0, #0]
 8014412:	9906      	ldr	r1, [sp, #24]
 8014414:	1216      	asrs	r6, r2, #8
 8014416:	10d5      	asrs	r5, r2, #3
 8014418:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801441c:	00d2      	lsls	r2, r2, #3
 801441e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8014422:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8014426:	b2d2      	uxtb	r2, r2
 8014428:	fb06 160b 	mla	r6, r6, fp, r1
 801442c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014430:	9907      	ldr	r1, [sp, #28]
 8014432:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8014436:	b2b6      	uxth	r6, r6
 8014438:	fb05 150b 	mla	r5, r5, fp, r1
 801443c:	9908      	ldr	r1, [sp, #32]
 801443e:	fb02 120b 	mla	r2, r2, fp, r1
 8014442:	1c71      	adds	r1, r6, #1
 8014444:	b2ad      	uxth	r5, r5
 8014446:	b292      	uxth	r2, r2
 8014448:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801444c:	1c51      	adds	r1, r2, #1
 801444e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8014452:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8014456:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801445a:	4316      	orrs	r6, r2
 801445c:	1c6a      	adds	r2, r5, #1
 801445e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8014462:	096d      	lsrs	r5, r5, #5
 8014464:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014468:	432e      	orrs	r6, r5
 801446a:	f820 6b02 	strh.w	r6, [r0], #2
 801446e:	e7cd      	b.n	801440c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8014470:	4470      	add	r0, lr
 8014472:	4543      	cmp	r3, r8
 8014474:	f4ff af73 	bcc.w	801435e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8014478:	fa1f fc89 	uxth.w	ip, r9
 801447c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8014480:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014482:	eba4 040c 	sub.w	r4, r4, ip
 8014486:	881b      	ldrh	r3, [r3, #0]
 8014488:	b2a4      	uxth	r4, r4
 801448a:	eba3 0309 	sub.w	r3, r3, r9
 801448e:	2c00      	cmp	r4, #0
 8014490:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014494:	bf18      	it	ne
 8014496:	f04f 0c00 	movne.w	ip, #0
 801449a:	e760      	b.n	801435e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801449c:	4b03      	ldr	r3, [pc, #12]	@ (80144ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801449e:	6818      	ldr	r0, [r3, #0]
 80144a0:	6803      	ldr	r3, [r0, #0]
 80144a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80144a4:	4798      	blx	r3
 80144a6:	b00f      	add	sp, #60	@ 0x3c
 80144a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144ac:	200150ac 	.word	0x200150ac
 80144b0:	200150a6 	.word	0x200150a6

080144b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80144b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144b8:	b093      	sub	sp, #76	@ 0x4c
 80144ba:	461c      	mov	r4, r3
 80144bc:	9205      	str	r2, [sp, #20]
 80144be:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 80144c2:	9101      	str	r1, [sp, #4]
 80144c4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80144c6:	9202      	str	r2, [sp, #8]
 80144c8:	2a00      	cmp	r2, #0
 80144ca:	f000 812e 	beq.w	801472a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 80144ce:	6820      	ldr	r0, [r4, #0]
 80144d0:	aa0e      	add	r2, sp, #56	@ 0x38
 80144d2:	6861      	ldr	r1, [r4, #4]
 80144d4:	c203      	stmia	r2!, {r0, r1}
 80144d6:	6818      	ldr	r0, [r3, #0]
 80144d8:	aa10      	add	r2, sp, #64	@ 0x40
 80144da:	6859      	ldr	r1, [r3, #4]
 80144dc:	c203      	stmia	r2!, {r0, r1}
 80144de:	a80e      	add	r0, sp, #56	@ 0x38
 80144e0:	f7f9 fa82 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80144e4:	4621      	mov	r1, r4
 80144e6:	a810      	add	r0, sp, #64	@ 0x40
 80144e8:	f7f9 faa6 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80144ec:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80144f0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80144f4:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80144f8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 80144fc:	bfdb      	ittet	le
 80144fe:	b2b3      	uxthle	r3, r6
 8014500:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8014504:	2301      	movgt	r3, #1
 8014506:	fb92 f3f3 	sdivle	r3, r2, r3
 801450a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801450e:	441d      	add	r5, r3
 8014510:	fb92 f1f3 	sdiv	r1, r2, r3
 8014514:	fa1f fc81 	uxth.w	ip, r1
 8014518:	3d01      	subs	r5, #1
 801451a:	fb0c 2413 	mls	r4, ip, r3, r2
 801451e:	4661      	mov	r1, ip
 8014520:	fb14 f406 	smulbb	r4, r4, r6
 8014524:	4404      	add	r4, r0
 8014526:	fb95 f5f3 	sdiv	r5, r5, r3
 801452a:	b2a4      	uxth	r4, r4
 801452c:	b131      	cbz	r1, 801453c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 801452e:	9b05      	ldr	r3, [sp, #20]
 8014530:	9901      	ldr	r1, [sp, #4]
 8014532:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8014536:	ba1b      	rev	r3, r3
 8014538:	4419      	add	r1, r3
 801453a:	9101      	str	r1, [sp, #4]
 801453c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8014540:	b2ad      	uxth	r5, r5
 8014542:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8014546:	4418      	add	r0, r3
 8014548:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801454c:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8014550:	00ad      	lsls	r5, r5, #2
 8014552:	441a      	add	r2, r3
 8014554:	4b76      	ldr	r3, [pc, #472]	@ (8014730 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8014556:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801455a:	6818      	ldr	r0, [r3, #0]
 801455c:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8014560:	6803      	ldr	r3, [r0, #0]
 8014562:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014564:	4798      	blx	r3
 8014566:	4973      	ldr	r1, [pc, #460]	@ (8014734 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8014568:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801456c:	2c00      	cmp	r4, #0
 801456e:	880b      	ldrh	r3, [r1, #0]
 8014570:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8014574:	910d      	str	r1, [sp, #52]	@ 0x34
 8014576:	fb03 c202 	mla	r2, r3, r2, ip
 801457a:	bf08      	it	eq
 801457c:	46dc      	moveq	ip, fp
 801457e:	fb03 f306 	mul.w	r3, r3, r6
 8014582:	bf18      	it	ne
 8014584:	f04f 0c00 	movne.w	ip, #0
 8014588:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801458c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014590:	fa1f fc8c 	uxth.w	ip, ip
 8014594:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014598:	9106      	str	r1, [sp, #24]
 801459a:	9308      	str	r3, [sp, #32]
 801459c:	1d2b      	adds	r3, r5, #4
 801459e:	9309      	str	r3, [sp, #36]	@ 0x24
 80145a0:	9b02      	ldr	r3, [sp, #8]
 80145a2:	43da      	mvns	r2, r3
 80145a4:	2300      	movs	r3, #0
 80145a6:	b2d2      	uxtb	r2, r2
 80145a8:	9303      	str	r3, [sp, #12]
 80145aa:	9207      	str	r2, [sp, #28]
 80145ac:	9a08      	ldr	r2, [sp, #32]
 80145ae:	4282      	cmp	r2, r0
 80145b0:	f240 80b6 	bls.w	8014720 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 80145b4:	b963      	cbnz	r3, 80145d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 80145b6:	9b01      	ldr	r3, [sp, #4]
 80145b8:	781a      	ldrb	r2, [r3, #0]
 80145ba:	0993      	lsrs	r3, r2, #6
 80145bc:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80145c0:	9203      	str	r2, [sp, #12]
 80145c2:	1e5a      	subs	r2, r3, #1
 80145c4:	2a02      	cmp	r2, #2
 80145c6:	d815      	bhi.n	80145f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 80145c8:	9a01      	ldr	r2, [sp, #4]
 80145ca:	b29b      	uxth	r3, r3
 80145cc:	3201      	adds	r2, #1
 80145ce:	9201      	str	r2, [sp, #4]
 80145d0:	b1b4      	cbz	r4, 8014600 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 80145d2:	429c      	cmp	r4, r3
 80145d4:	bf91      	iteee	ls
 80145d6:	1b1c      	subls	r4, r3, r4
 80145d8:	1ae4      	subhi	r4, r4, r3
 80145da:	4666      	movhi	r6, ip
 80145dc:	f04f 0800 	movhi.w	r8, #0
 80145e0:	bf9b      	ittet	ls
 80145e2:	fa1f f884 	uxthls.w	r8, r4
 80145e6:	2400      	movls	r4, #0
 80145e8:	b2a4      	uxthhi	r4, r4
 80145ea:	fa1f f68b 	uxthls.w	r6, fp
 80145ee:	4643      	mov	r3, r8
 80145f0:	46b4      	mov	ip, r6
 80145f2:	e7db      	b.n	80145ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 80145f4:	9a01      	ldr	r2, [sp, #4]
 80145f6:	9b01      	ldr	r3, [sp, #4]
 80145f8:	3202      	adds	r2, #2
 80145fa:	785b      	ldrb	r3, [r3, #1]
 80145fc:	9201      	str	r2, [sp, #4]
 80145fe:	e7e7      	b.n	80145d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 8014600:	2203      	movs	r2, #3
 8014602:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8014604:	4563      	cmp	r3, ip
 8014606:	4615      	mov	r5, r2
 8014608:	9a03      	ldr	r2, [sp, #12]
 801460a:	bf2c      	ite	cs
 801460c:	eba3 080c 	subcs.w	r8, r3, ip
 8014610:	ebac 0603 	subcc.w	r6, ip, r3
 8014614:	fb15 1202 	smlabb	r2, r5, r2, r1
 8014618:	9905      	ldr	r1, [sp, #20]
 801461a:	bf24      	itt	cs
 801461c:	fa1f f888 	uxthcs.w	r8, r8
 8014620:	46e1      	movcs	r9, ip
 8014622:	eb01 0502 	add.w	r5, r1, r2
 8014626:	9902      	ldr	r1, [sp, #8]
 8014628:	bf2f      	iteee	cs
 801462a:	4626      	movcs	r6, r4
 801462c:	b2b6      	uxthcc	r6, r6
 801462e:	4699      	movcc	r9, r3
 8014630:	46a0      	movcc	r8, r4
 8014632:	29ff      	cmp	r1, #255	@ 0xff
 8014634:	d04a      	beq.n	80146cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8014636:	9f06      	ldr	r7, [sp, #24]
 8014638:	46ca      	mov	sl, r9
 801463a:	78a9      	ldrb	r1, [r5, #2]
 801463c:	9004      	str	r0, [sp, #16]
 801463e:	4379      	muls	r1, r7
 8014640:	910a      	str	r1, [sp, #40]	@ 0x28
 8014642:	7869      	ldrb	r1, [r5, #1]
 8014644:	4379      	muls	r1, r7
 8014646:	910b      	str	r1, [sp, #44]	@ 0x2c
 8014648:	9905      	ldr	r1, [sp, #20]
 801464a:	5c8a      	ldrb	r2, [r1, r2]
 801464c:	437a      	muls	r2, r7
 801464e:	920c      	str	r2, [sp, #48]	@ 0x30
 8014650:	f1ba 0f00 	cmp.w	sl, #0
 8014654:	d03d      	beq.n	80146d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8014656:	9a04      	ldr	r2, [sp, #16]
 8014658:	f10a 3aff 	add.w	sl, sl, #4294967295
 801465c:	9f07      	ldr	r7, [sp, #28]
 801465e:	8812      	ldrh	r2, [r2, #0]
 8014660:	fa1f fa8a 	uxth.w	sl, sl
 8014664:	46be      	mov	lr, r7
 8014666:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8014668:	1215      	asrs	r5, r2, #8
 801466a:	10d1      	asrs	r1, r2, #3
 801466c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8014670:	00d2      	lsls	r2, r2, #3
 8014672:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8014676:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801467a:	b2d2      	uxtb	r2, r2
 801467c:	fb05 750e 	mla	r5, r5, lr, r7
 8014680:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8014684:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8014686:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801468a:	b2ad      	uxth	r5, r5
 801468c:	fb01 710e 	mla	r1, r1, lr, r7
 8014690:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8014692:	fb02 720e 	mla	r2, r2, lr, r7
 8014696:	f105 0e01 	add.w	lr, r5, #1
 801469a:	b289      	uxth	r1, r1
 801469c:	b292      	uxth	r2, r2
 801469e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80146a2:	f102 0e01 	add.w	lr, r2, #1
 80146a6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80146aa:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80146ae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80146b2:	4315      	orrs	r5, r2
 80146b4:	1c4a      	adds	r2, r1, #1
 80146b6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80146ba:	9a04      	ldr	r2, [sp, #16]
 80146bc:	0949      	lsrs	r1, r1, #5
 80146be:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80146c2:	430d      	orrs	r5, r1
 80146c4:	f822 5b02 	strh.w	r5, [r2], #2
 80146c8:	9204      	str	r2, [sp, #16]
 80146ca:	e7c1      	b.n	8014650 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 80146cc:	4649      	mov	r1, r9
 80146ce:	4686      	mov	lr, r0
 80146d0:	b999      	cbnz	r1, 80146fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 80146d2:	4563      	cmp	r3, ip
 80146d4:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 80146d8:	d389      	bcc.n	80145ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 80146da:	fa1f f68b 	uxth.w	r6, fp
 80146de:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 80146e2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80146e4:	1ba4      	subs	r4, r4, r6
 80146e6:	881b      	ldrh	r3, [r3, #0]
 80146e8:	b2a4      	uxth	r4, r4
 80146ea:	eba3 030b 	sub.w	r3, r3, fp
 80146ee:	2c00      	cmp	r4, #0
 80146f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80146f4:	bf18      	it	ne
 80146f6:	2600      	movne	r6, #0
 80146f8:	e779      	b.n	80145ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 80146fa:	78aa      	ldrb	r2, [r5, #2]
 80146fc:	3901      	subs	r1, #1
 80146fe:	4f0e      	ldr	r7, [pc, #56]	@ (8014738 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 8014700:	b289      	uxth	r1, r1
 8014702:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8014706:	786a      	ldrb	r2, [r5, #1]
 8014708:	00d2      	lsls	r2, r2, #3
 801470a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801470e:	ea4a 0202 	orr.w	r2, sl, r2
 8014712:	f895 a000 	ldrb.w	sl, [r5]
 8014716:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801471a:	f82e 2b02 	strh.w	r2, [lr], #2
 801471e:	e7d7      	b.n	80146d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 8014720:	4b03      	ldr	r3, [pc, #12]	@ (8014730 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8014722:	6818      	ldr	r0, [r3, #0]
 8014724:	6803      	ldr	r3, [r0, #0]
 8014726:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014728:	4798      	blx	r3
 801472a:	b013      	add	sp, #76	@ 0x4c
 801472c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014730:	200150ac 	.word	0x200150ac
 8014734:	200150a6 	.word	0x200150a6
 8014738:	fffff800 	.word	0xfffff800

0801473c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801473c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014740:	b09d      	sub	sp, #116	@ 0x74
 8014742:	461c      	mov	r4, r3
 8014744:	4683      	mov	fp, r0
 8014746:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8014748:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 801474c:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8014750:	920e      	str	r2, [sp, #56]	@ 0x38
 8014752:	2a00      	cmp	r2, #0
 8014754:	f000 81e4 	beq.w	8014b20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 8014758:	6820      	ldr	r0, [r4, #0]
 801475a:	aa18      	add	r2, sp, #96	@ 0x60
 801475c:	6861      	ldr	r1, [r4, #4]
 801475e:	c203      	stmia	r2!, {r0, r1}
 8014760:	6818      	ldr	r0, [r3, #0]
 8014762:	aa1a      	add	r2, sp, #104	@ 0x68
 8014764:	6859      	ldr	r1, [r3, #4]
 8014766:	c203      	stmia	r2!, {r0, r1}
 8014768:	a818      	add	r0, sp, #96	@ 0x60
 801476a:	f7f9 f93d 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801476e:	4621      	mov	r1, r4
 8014770:	a81a      	add	r0, sp, #104	@ 0x68
 8014772:	f7f9 f961 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014776:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801477a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801477e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8014782:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8014786:	bfdb      	ittet	le
 8014788:	b29a      	uxthle	r2, r3
 801478a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801478e:	2201      	movgt	r2, #1
 8014790:	fb91 f2f2 	sdivle	r2, r1, r2
 8014794:	9202      	str	r2, [sp, #8]
 8014796:	9802      	ldr	r0, [sp, #8]
 8014798:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801479c:	9902      	ldr	r1, [sp, #8]
 801479e:	fb92 f0f0 	sdiv	r0, r2, r0
 80147a2:	b280      	uxth	r0, r0
 80147a4:	440c      	add	r4, r1
 80147a6:	900f      	str	r0, [sp, #60]	@ 0x3c
 80147a8:	3c01      	subs	r4, #1
 80147aa:	9802      	ldr	r0, [sp, #8]
 80147ac:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80147ae:	fb05 2510 	mls	r5, r5, r0, r2
 80147b2:	fb94 f4f1 	sdiv	r4, r4, r1
 80147b6:	fb15 f503 	smulbb	r5, r5, r3
 80147ba:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 80147be:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 80147c2:	3401      	adds	r4, #1
 80147c4:	440d      	add	r5, r1
 80147c6:	4419      	add	r1, r3
 80147c8:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 80147cc:	b2a4      	uxth	r4, r4
 80147ce:	441a      	add	r2, r3
 80147d0:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80147d4:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 80147d8:	00a4      	lsls	r4, r4, #2
 80147da:	9306      	str	r3, [sp, #24]
 80147dc:	b2ad      	uxth	r5, r5
 80147de:	4bb3      	ldr	r3, [pc, #716]	@ (8014aac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 80147e0:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 80147e4:	6818      	ldr	r0, [r3, #0]
 80147e6:	6803      	ldr	r3, [r0, #0]
 80147e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80147ea:	4798      	blx	r3
 80147ec:	4bb0      	ldr	r3, [pc, #704]	@ (8014ab0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 80147ee:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 80147f2:	2d00      	cmp	r5, #0
 80147f4:	881a      	ldrh	r2, [r3, #0]
 80147f6:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 80147fa:	fb02 f606 	mul.w	r6, r2, r6
 80147fe:	fb02 7101 	mla	r1, r2, r1, r7
 8014802:	9316      	str	r3, [sp, #88]	@ 0x58
 8014804:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8014808:	4baa      	ldr	r3, [pc, #680]	@ (8014ab4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 801480a:	bf18      	it	ne
 801480c:	2100      	movne	r1, #0
 801480e:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8014812:	eba3 030b 	sub.w	r3, r3, fp
 8014816:	920a      	str	r2, [sp, #40]	@ 0x28
 8014818:	f104 0204 	add.w	r2, r4, #4
 801481c:	9317      	str	r3, [sp, #92]	@ 0x5c
 801481e:	9213      	str	r2, [sp, #76]	@ 0x4c
 8014820:	9a06      	ldr	r2, [sp, #24]
 8014822:	bf08      	it	eq
 8014824:	4611      	moveq	r1, r2
 8014826:	2200      	movs	r2, #0
 8014828:	b289      	uxth	r1, r1
 801482a:	920d      	str	r2, [sp, #52]	@ 0x34
 801482c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801482e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014830:	fa12 f383 	uxtah	r3, r2, r3
 8014834:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014836:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801483a:	3304      	adds	r3, #4
 801483c:	9308      	str	r3, [sp, #32]
 801483e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014840:	4543      	cmp	r3, r8
 8014842:	f240 8168 	bls.w	8014b16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 8014846:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801484a:	f04f 0e01 	mov.w	lr, #1
 801484e:	9a02      	ldr	r2, [sp, #8]
 8014850:	9808      	ldr	r0, [sp, #32]
 8014852:	fbb5 f3f3 	udiv	r3, r5, r3
 8014856:	1ad3      	subs	r3, r2, r3
 8014858:	7800      	ldrb	r0, [r0, #0]
 801485a:	b29b      	uxth	r3, r3
 801485c:	9010      	str	r0, [sp, #64]	@ 0x40
 801485e:	3001      	adds	r0, #1
 8014860:	9314      	str	r3, [sp, #80]	@ 0x50
 8014862:	9b08      	ldr	r3, [sp, #32]
 8014864:	9007      	str	r0, [sp, #28]
 8014866:	785a      	ldrb	r2, [r3, #1]
 8014868:	789b      	ldrb	r3, [r3, #2]
 801486a:	021b      	lsls	r3, r3, #8
 801486c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8014870:	9a08      	ldr	r2, [sp, #32]
 8014872:	78d2      	ldrb	r2, [r2, #3]
 8014874:	4313      	orrs	r3, r2
 8014876:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014878:	441a      	add	r2, r3
 801487a:	1c50      	adds	r0, r2, #1
 801487c:	7852      	ldrb	r2, [r2, #1]
 801487e:	9005      	str	r0, [sp, #20]
 8014880:	0212      	lsls	r2, r2, #8
 8014882:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014884:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8014888:	5cc3      	ldrb	r3, [r0, r3]
 801488a:	431a      	orrs	r2, r3
 801488c:	b293      	uxth	r3, r2
 801488e:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8014892:	930b      	str	r3, [sp, #44]	@ 0x2c
 8014894:	2300      	movs	r3, #0
 8014896:	9309      	str	r3, [sp, #36]	@ 0x24
 8014898:	2301      	movs	r3, #1
 801489a:	9301      	str	r3, [sp, #4]
 801489c:	9304      	str	r3, [sp, #16]
 801489e:	2300      	movs	r3, #0
 80148a0:	9303      	str	r3, [sp, #12]
 80148a2:	2d00      	cmp	r5, #0
 80148a4:	d07d      	beq.n	80149a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 80148a6:	45ae      	cmp	lr, r5
 80148a8:	d26c      	bcs.n	8014984 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 80148aa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80148ac:	eba5 050e 	sub.w	r5, r5, lr
 80148b0:	460c      	mov	r4, r1
 80148b2:	4543      	cmp	r3, r8
 80148b4:	b2ad      	uxth	r5, r5
 80148b6:	d802      	bhi.n	80148be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 80148b8:	e071      	b.n	801499e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 80148ba:	2b00      	cmp	r3, #0
 80148bc:	d15d      	bne.n	801497a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 80148be:	9b05      	ldr	r3, [sp, #20]
 80148c0:	9a04      	ldr	r2, [sp, #16]
 80148c2:	785b      	ldrb	r3, [r3, #1]
 80148c4:	f1c2 0207 	rsb	r2, r2, #7
 80148c8:	9904      	ldr	r1, [sp, #16]
 80148ca:	4093      	lsls	r3, r2
 80148cc:	005b      	lsls	r3, r3, #1
 80148ce:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80148d2:	9b05      	ldr	r3, [sp, #20]
 80148d4:	781b      	ldrb	r3, [r3, #0]
 80148d6:	410b      	asrs	r3, r1
 80148d8:	3101      	adds	r1, #1
 80148da:	b2c9      	uxtb	r1, r1
 80148dc:	b2db      	uxtb	r3, r3
 80148de:	2908      	cmp	r1, #8
 80148e0:	9104      	str	r1, [sp, #16]
 80148e2:	9905      	ldr	r1, [sp, #20]
 80148e4:	ea43 0302 	orr.w	r3, r3, r2
 80148e8:	bf0c      	ite	eq
 80148ea:	3102      	addeq	r1, #2
 80148ec:	3101      	addne	r1, #1
 80148ee:	b29a      	uxth	r2, r3
 80148f0:	bf05      	ittet	eq
 80148f2:	9105      	streq	r1, [sp, #20]
 80148f4:	2100      	moveq	r1, #0
 80148f6:	9105      	strne	r1, [sp, #20]
 80148f8:	9104      	streq	r1, [sp, #16]
 80148fa:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80148fc:	4291      	cmp	r1, r2
 80148fe:	d30a      	bcc.n	8014916 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 8014900:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8014904:	2301      	movs	r3, #1
 8014906:	9907      	ldr	r1, [sp, #28]
 8014908:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801490c:	d30f      	bcc.n	801492e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 801490e:	2100      	movs	r1, #0
 8014910:	9301      	str	r3, [sp, #4]
 8014912:	9103      	str	r1, [sp, #12]
 8014914:	e032      	b.n	801497c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8014916:	9b07      	ldr	r3, [sp, #28]
 8014918:	429a      	cmp	r2, r3
 801491a:	d318      	bcc.n	801494e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 801491c:	9b01      	ldr	r3, [sp, #4]
 801491e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8014922:	445b      	add	r3, fp
 8014924:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8014928:	9b01      	ldr	r3, [sp, #4]
 801492a:	3301      	adds	r3, #1
 801492c:	b29b      	uxth	r3, r3
 801492e:	9907      	ldr	r1, [sp, #28]
 8014930:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8014934:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8014938:	7108      	strb	r0, [r1, #4]
 801493a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801493c:	80c8      	strh	r0, [r1, #6]
 801493e:	9801      	ldr	r0, [sp, #4]
 8014940:	3001      	adds	r0, #1
 8014942:	7148      	strb	r0, [r1, #5]
 8014944:	9907      	ldr	r1, [sp, #28]
 8014946:	3101      	adds	r1, #1
 8014948:	b289      	uxth	r1, r1
 801494a:	9107      	str	r1, [sp, #28]
 801494c:	e7df      	b.n	801490e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801494e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8014952:	4611      	mov	r1, r2
 8014954:	795b      	ldrb	r3, [r3, #5]
 8014956:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801495a:	4458      	add	r0, fp
 801495c:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801495e:	4406      	add	r6, r0
 8014960:	2e00      	cmp	r6, #0
 8014962:	dd06      	ble.n	8014972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8014964:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8014968:	790e      	ldrb	r6, [r1, #4]
 801496a:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801496e:	88c9      	ldrh	r1, [r1, #6]
 8014970:	e7f4      	b.n	801495c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 8014972:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8014976:	b29b      	uxth	r3, r3
 8014978:	e7c5      	b.n	8014906 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801497a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801497c:	4621      	mov	r1, r4
 801497e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8014980:	469e      	mov	lr, r3
 8014982:	e78e      	b.n	80148a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 8014984:	9a03      	ldr	r2, [sp, #12]
 8014986:	ebae 0305 	sub.w	r3, lr, r5
 801498a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801498e:	442a      	add	r2, r5
 8014990:	b29b      	uxth	r3, r3
 8014992:	b292      	uxth	r2, r2
 8014994:	9203      	str	r2, [sp, #12]
 8014996:	2500      	movs	r5, #0
 8014998:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801499a:	4542      	cmp	r2, r8
 801499c:	d88d      	bhi.n	80148ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 801499e:	4621      	mov	r1, r4
 80149a0:	e74d      	b.n	801483e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 80149a2:	458e      	cmp	lr, r1
 80149a4:	f04f 0900 	mov.w	r9, #0
 80149a8:	bf2b      	itete	cs
 80149aa:	ebae 0301 	subcs.w	r3, lr, r1
 80149ae:	eba1 040e 	subcc.w	r4, r1, lr
 80149b2:	462c      	movcs	r4, r5
 80149b4:	462b      	movcc	r3, r5
 80149b6:	bf27      	ittee	cs
 80149b8:	b29b      	uxthcs	r3, r3
 80149ba:	910c      	strcs	r1, [sp, #48]	@ 0x30
 80149bc:	b2a4      	uxthcc	r4, r4
 80149be:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 80149c2:	9a03      	ldr	r2, [sp, #12]
 80149c4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80149c6:	444a      	add	r2, r9
 80149c8:	4548      	cmp	r0, r9
 80149ca:	b292      	uxth	r2, r2
 80149cc:	d074      	beq.n	8014ab8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 80149ce:	2004      	movs	r0, #4
 80149d0:	445a      	add	r2, fp
 80149d2:	4605      	mov	r5, r0
 80149d4:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 80149d8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80149da:	fb15 0202 	smlabb	r2, r5, r2, r0
 80149de:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80149e0:	5880      	ldr	r0, [r0, r2]
 80149e2:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 80149e6:	d014      	beq.n	8014a12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 80149e8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80149ec:	ea4f 2510 	mov.w	r5, r0, lsr #8
 80149f0:	d112      	bne.n	8014a18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 80149f2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80149f4:	2aff      	cmp	r2, #255	@ 0xff
 80149f6:	d10f      	bne.n	8014a18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 80149f8:	0942      	lsrs	r2, r0, #5
 80149fa:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80149fe:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014a02:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014a06:	f025 0507 	bic.w	r5, r5, #7
 8014a0a:	4315      	orrs	r5, r2
 8014a0c:	4305      	orrs	r5, r0
 8014a0e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8014a12:	f109 0901 	add.w	r9, r9, #1
 8014a16:	e7d4      	b.n	80149c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8014a18:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8014a1c:	b2ed      	uxtb	r5, r5
 8014a1e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014a22:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014a26:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8014a2a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014a2e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8014a32:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014a36:	9215      	str	r2, [sp, #84]	@ 0x54
 8014a38:	fa5f fc8c 	uxtb.w	ip, ip
 8014a3c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8014a3e:	b2c0      	uxtb	r0, r0
 8014a40:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8014a44:	fb02 fa0a 	mul.w	sl, r2, sl
 8014a48:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8014a4c:	f10a 0201 	add.w	r2, sl, #1
 8014a50:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8014a54:	1212      	asrs	r2, r2, #8
 8014a56:	fa1f fa82 	uxth.w	sl, r2
 8014a5a:	43d2      	mvns	r2, r2
 8014a5c:	fb16 f60a 	smulbb	r6, r6, sl
 8014a60:	b2d2      	uxtb	r2, r2
 8014a62:	fb10 f00a 	smulbb	r0, r0, sl
 8014a66:	fb07 6702 	mla	r7, r7, r2, r6
 8014a6a:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8014a6c:	fb0c 0002 	mla	r0, ip, r2, r0
 8014a70:	fb15 f50a 	smulbb	r5, r5, sl
 8014a74:	b2bf      	uxth	r7, r7
 8014a76:	b280      	uxth	r0, r0
 8014a78:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8014a7c:	fb06 5602 	mla	r6, r6, r2, r5
 8014a80:	1c7a      	adds	r2, r7, #1
 8014a82:	1c45      	adds	r5, r0, #1
 8014a84:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014a88:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014a8c:	b2b6      	uxth	r6, r6
 8014a8e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014a92:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014a96:	432f      	orrs	r7, r5
 8014a98:	1c75      	adds	r5, r6, #1
 8014a9a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8014a9e:	096d      	lsrs	r5, r5, #5
 8014aa0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014aa4:	432f      	orrs	r7, r5
 8014aa6:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8014aaa:	e7b2      	b.n	8014a12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8014aac:	200150ac 	.word	0x200150ac
 8014ab0:	200150a6 	.word	0x200150a6
 8014ab4:	fffff7fb 	.word	0xfffff7fb
 8014ab8:	9203      	str	r2, [sp, #12]
 8014aba:	458e      	cmp	lr, r1
 8014abc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8014abe:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8014ac2:	f4ff af68 	bcc.w	8014996 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8014ac6:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8014ac8:	9906      	ldr	r1, [sp, #24]
 8014aca:	8812      	ldrh	r2, [r2, #0]
 8014acc:	1a52      	subs	r2, r2, r1
 8014ace:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8014ad0:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8014ad4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014ad6:	3201      	adds	r2, #1
 8014ad8:	428a      	cmp	r2, r1
 8014ada:	9209      	str	r2, [sp, #36]	@ 0x24
 8014adc:	d111      	bne.n	8014b02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 8014ade:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8014ae2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8014ae6:	9b06      	ldr	r3, [sp, #24]
 8014ae8:	eba5 0509 	sub.w	r5, r5, r9
 8014aec:	b2ad      	uxth	r5, r5
 8014aee:	2d00      	cmp	r5, #0
 8014af0:	bf08      	it	eq
 8014af2:	4619      	moveq	r1, r3
 8014af4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014af6:	bf18      	it	ne
 8014af8:	2100      	movne	r1, #0
 8014afa:	3301      	adds	r3, #1
 8014afc:	b289      	uxth	r1, r1
 8014afe:	930d      	str	r3, [sp, #52]	@ 0x34
 8014b00:	e694      	b.n	801482c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 8014b02:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8014b06:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8014b0a:	1b2d      	subs	r5, r5, r4
 8014b0c:	b2ad      	uxth	r5, r5
 8014b0e:	2d00      	cmp	r5, #0
 8014b10:	bf18      	it	ne
 8014b12:	2400      	movne	r4, #0
 8014b14:	e740      	b.n	8014998 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8014b16:	4b04      	ldr	r3, [pc, #16]	@ (8014b28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8014b18:	6818      	ldr	r0, [r3, #0]
 8014b1a:	6803      	ldr	r3, [r0, #0]
 8014b1c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014b1e:	4798      	blx	r3
 8014b20:	b01d      	add	sp, #116	@ 0x74
 8014b22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b26:	bf00      	nop
 8014b28:	200150ac 	.word	0x200150ac

08014b2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8014b2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b30:	b09f      	sub	sp, #124	@ 0x7c
 8014b32:	461d      	mov	r5, r3
 8014b34:	4604      	mov	r4, r0
 8014b36:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8014b38:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8014b3c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8014b40:	920a      	str	r2, [sp, #40]	@ 0x28
 8014b42:	2a00      	cmp	r2, #0
 8014b44:	f000 81fe 	beq.w	8014f44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8014b48:	6828      	ldr	r0, [r5, #0]
 8014b4a:	aa1a      	add	r2, sp, #104	@ 0x68
 8014b4c:	6869      	ldr	r1, [r5, #4]
 8014b4e:	c203      	stmia	r2!, {r0, r1}
 8014b50:	6818      	ldr	r0, [r3, #0]
 8014b52:	aa1c      	add	r2, sp, #112	@ 0x70
 8014b54:	6859      	ldr	r1, [r3, #4]
 8014b56:	c203      	stmia	r2!, {r0, r1}
 8014b58:	a81a      	add	r0, sp, #104	@ 0x68
 8014b5a:	f7f8 ff45 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014b5e:	4629      	mov	r1, r5
 8014b60:	a81c      	add	r0, sp, #112	@ 0x70
 8014b62:	f7f8 ff69 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014b66:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8014b6a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8014b6e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8014b72:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8014b76:	bfdb      	ittet	le
 8014b78:	b29a      	uxthle	r2, r3
 8014b7a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8014b7e:	2201      	movgt	r2, #1
 8014b80:	fb91 f2f2 	sdivle	r2, r1, r2
 8014b84:	9201      	str	r2, [sp, #4]
 8014b86:	9801      	ldr	r0, [sp, #4]
 8014b88:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8014b8c:	9901      	ldr	r1, [sp, #4]
 8014b8e:	fb92 f0f0 	sdiv	r0, r2, r0
 8014b92:	b280      	uxth	r0, r0
 8014b94:	440e      	add	r6, r1
 8014b96:	9010      	str	r0, [sp, #64]	@ 0x40
 8014b98:	3e01      	subs	r6, #1
 8014b9a:	9801      	ldr	r0, [sp, #4]
 8014b9c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8014b9e:	fb05 2510 	mls	r5, r5, r0, r2
 8014ba2:	fb96 f6f1 	sdiv	r6, r6, r1
 8014ba6:	fb15 f503 	smulbb	r5, r5, r3
 8014baa:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8014bae:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8014bb2:	3601      	adds	r6, #1
 8014bb4:	440d      	add	r5, r1
 8014bb6:	4419      	add	r1, r3
 8014bb8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8014bbc:	b2b6      	uxth	r6, r6
 8014bbe:	441a      	add	r2, r3
 8014bc0:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8014bc4:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8014bc8:	b2ad      	uxth	r5, r5
 8014bca:	9304      	str	r3, [sp, #16]
 8014bcc:	4b96      	ldr	r3, [pc, #600]	@ (8014e28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8014bce:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8014bd2:	6818      	ldr	r0, [r3, #0]
 8014bd4:	6803      	ldr	r3, [r0, #0]
 8014bd6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014bd8:	4798      	blx	r3
 8014bda:	4b94      	ldr	r3, [pc, #592]	@ (8014e2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 8014bdc:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8014be0:	2d00      	cmp	r5, #0
 8014be2:	881a      	ldrh	r2, [r3, #0]
 8014be4:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8014be8:	fb02 f707 	mul.w	r7, r2, r7
 8014bec:	fb02 c101 	mla	r1, r2, r1, ip
 8014bf0:	9318      	str	r3, [sp, #96]	@ 0x60
 8014bf2:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8014bf6:	4b8e      	ldr	r3, [pc, #568]	@ (8014e30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 8014bf8:	bf18      	it	ne
 8014bfa:	2100      	movne	r1, #0
 8014bfc:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8014c00:	eba3 0304 	sub.w	r3, r3, r4
 8014c04:	920b      	str	r2, [sp, #44]	@ 0x2c
 8014c06:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014c08:	9319      	str	r3, [sp, #100]	@ 0x64
 8014c0a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8014c0e:	f106 0204 	add.w	r2, r6, #4
 8014c12:	9206      	str	r2, [sp, #24]
 8014c14:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8014c16:	ea6f 0202 	mvn.w	r2, r2
 8014c1a:	b2d2      	uxtb	r2, r2
 8014c1c:	9215      	str	r2, [sp, #84]	@ 0x54
 8014c1e:	9a04      	ldr	r2, [sp, #16]
 8014c20:	bf08      	it	eq
 8014c22:	4611      	moveq	r1, r2
 8014c24:	2200      	movs	r2, #0
 8014c26:	b289      	uxth	r1, r1
 8014c28:	920d      	str	r2, [sp, #52]	@ 0x34
 8014c2a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014c2c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014c2e:	fa12 f383 	uxtah	r3, r2, r3
 8014c32:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014c34:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8014c38:	3304      	adds	r3, #4
 8014c3a:	9307      	str	r3, [sp, #28]
 8014c3c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014c3e:	455b      	cmp	r3, fp
 8014c40:	f240 817b 	bls.w	8014f3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 8014c44:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8014c48:	f04f 0801 	mov.w	r8, #1
 8014c4c:	9a01      	ldr	r2, [sp, #4]
 8014c4e:	9807      	ldr	r0, [sp, #28]
 8014c50:	46c4      	mov	ip, r8
 8014c52:	f8cd 8008 	str.w	r8, [sp, #8]
 8014c56:	7800      	ldrb	r0, [r0, #0]
 8014c58:	fbb5 f3f3 	udiv	r3, r5, r3
 8014c5c:	1ad3      	subs	r3, r2, r3
 8014c5e:	9011      	str	r0, [sp, #68]	@ 0x44
 8014c60:	3001      	adds	r0, #1
 8014c62:	b29b      	uxth	r3, r3
 8014c64:	9005      	str	r0, [sp, #20]
 8014c66:	9316      	str	r3, [sp, #88]	@ 0x58
 8014c68:	9b07      	ldr	r3, [sp, #28]
 8014c6a:	785a      	ldrb	r2, [r3, #1]
 8014c6c:	789b      	ldrb	r3, [r3, #2]
 8014c6e:	021b      	lsls	r3, r3, #8
 8014c70:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8014c74:	9a07      	ldr	r2, [sp, #28]
 8014c76:	78d2      	ldrb	r2, [r2, #3]
 8014c78:	4313      	orrs	r3, r2
 8014c7a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014c7c:	441a      	add	r2, r3
 8014c7e:	1c50      	adds	r0, r2, #1
 8014c80:	7852      	ldrb	r2, [r2, #1]
 8014c82:	9003      	str	r0, [sp, #12]
 8014c84:	0212      	lsls	r2, r2, #8
 8014c86:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014c88:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8014c8c:	5cc3      	ldrb	r3, [r0, r3]
 8014c8e:	431a      	orrs	r2, r3
 8014c90:	b293      	uxth	r3, r2
 8014c92:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8014c96:	930c      	str	r3, [sp, #48]	@ 0x30
 8014c98:	2300      	movs	r3, #0
 8014c9a:	9308      	str	r3, [sp, #32]
 8014c9c:	461a      	mov	r2, r3
 8014c9e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8014ca2:	930e      	str	r3, [sp, #56]	@ 0x38
 8014ca4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8014ca8:	930f      	str	r3, [sp, #60]	@ 0x3c
 8014caa:	2d00      	cmp	r5, #0
 8014cac:	d07d      	beq.n	8014daa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 8014cae:	45ac      	cmp	ip, r5
 8014cb0:	d26d      	bcs.n	8014d8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 8014cb2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014cb4:	eba5 050c 	sub.w	r5, r5, ip
 8014cb8:	4608      	mov	r0, r1
 8014cba:	455b      	cmp	r3, fp
 8014cbc:	b2ad      	uxth	r5, r5
 8014cbe:	d802      	bhi.n	8014cc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 8014cc0:	e071      	b.n	8014da6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 8014cc2:	2b00      	cmp	r3, #0
 8014cc4:	d15d      	bne.n	8014d82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8014cc6:	9b03      	ldr	r3, [sp, #12]
 8014cc8:	9a02      	ldr	r2, [sp, #8]
 8014cca:	785b      	ldrb	r3, [r3, #1]
 8014ccc:	f1c2 0207 	rsb	r2, r2, #7
 8014cd0:	9902      	ldr	r1, [sp, #8]
 8014cd2:	4093      	lsls	r3, r2
 8014cd4:	005b      	lsls	r3, r3, #1
 8014cd6:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8014cda:	9b03      	ldr	r3, [sp, #12]
 8014cdc:	781b      	ldrb	r3, [r3, #0]
 8014cde:	410b      	asrs	r3, r1
 8014ce0:	3101      	adds	r1, #1
 8014ce2:	b2c9      	uxtb	r1, r1
 8014ce4:	b2db      	uxtb	r3, r3
 8014ce6:	2908      	cmp	r1, #8
 8014ce8:	9102      	str	r1, [sp, #8]
 8014cea:	9903      	ldr	r1, [sp, #12]
 8014cec:	ea43 0302 	orr.w	r3, r3, r2
 8014cf0:	bf0c      	ite	eq
 8014cf2:	3102      	addeq	r1, #2
 8014cf4:	3101      	addne	r1, #1
 8014cf6:	b29a      	uxth	r2, r3
 8014cf8:	bf05      	ittet	eq
 8014cfa:	9103      	streq	r1, [sp, #12]
 8014cfc:	2100      	moveq	r1, #0
 8014cfe:	9103      	strne	r1, [sp, #12]
 8014d00:	9102      	streq	r1, [sp, #8]
 8014d02:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014d04:	4291      	cmp	r1, r2
 8014d06:	d30a      	bcc.n	8014d1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8014d08:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8014d0c:	2301      	movs	r3, #1
 8014d0e:	9905      	ldr	r1, [sp, #20]
 8014d10:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8014d14:	d30f      	bcc.n	8014d36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 8014d16:	2100      	movs	r1, #0
 8014d18:	4698      	mov	r8, r3
 8014d1a:	9100      	str	r1, [sp, #0]
 8014d1c:	e032      	b.n	8014d84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 8014d1e:	9b05      	ldr	r3, [sp, #20]
 8014d20:	429a      	cmp	r2, r3
 8014d22:	d318      	bcc.n	8014d56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 8014d24:	eb04 0308 	add.w	r3, r4, r8
 8014d28:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8014d2c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8014d30:	f108 0301 	add.w	r3, r8, #1
 8014d34:	b29b      	uxth	r3, r3
 8014d36:	9905      	ldr	r1, [sp, #20]
 8014d38:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8014d3c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8014d40:	710e      	strb	r6, [r1, #4]
 8014d42:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8014d44:	80ce      	strh	r6, [r1, #6]
 8014d46:	f108 0601 	add.w	r6, r8, #1
 8014d4a:	714e      	strb	r6, [r1, #5]
 8014d4c:	9905      	ldr	r1, [sp, #20]
 8014d4e:	3101      	adds	r1, #1
 8014d50:	b289      	uxth	r1, r1
 8014d52:	9105      	str	r1, [sp, #20]
 8014d54:	e7df      	b.n	8014d16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8014d56:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8014d5a:	4611      	mov	r1, r2
 8014d5c:	795b      	ldrb	r3, [r3, #5]
 8014d5e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8014d62:	4426      	add	r6, r4
 8014d64:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8014d66:	4437      	add	r7, r6
 8014d68:	2f00      	cmp	r7, #0
 8014d6a:	dd06      	ble.n	8014d7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 8014d6c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8014d70:	790f      	ldrb	r7, [r1, #4]
 8014d72:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8014d76:	88c9      	ldrh	r1, [r1, #6]
 8014d78:	e7f4      	b.n	8014d64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 8014d7a:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8014d7e:	b29b      	uxth	r3, r3
 8014d80:	e7c5      	b.n	8014d0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 8014d82:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8014d84:	920c      	str	r2, [sp, #48]	@ 0x30
 8014d86:	4601      	mov	r1, r0
 8014d88:	9a00      	ldr	r2, [sp, #0]
 8014d8a:	469c      	mov	ip, r3
 8014d8c:	e78d      	b.n	8014caa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 8014d8e:	ebac 0305 	sub.w	r3, ip, r5
 8014d92:	1957      	adds	r7, r2, r5
 8014d94:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8014d98:	b2ba      	uxth	r2, r7
 8014d9a:	b29b      	uxth	r3, r3
 8014d9c:	9200      	str	r2, [sp, #0]
 8014d9e:	2500      	movs	r5, #0
 8014da0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8014da2:	455a      	cmp	r2, fp
 8014da4:	d88d      	bhi.n	8014cc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8014da6:	4601      	mov	r1, r0
 8014da8:	e748      	b.n	8014c3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 8014daa:	458c      	cmp	ip, r1
 8014dac:	bf27      	ittee	cs
 8014dae:	ebac 0301 	subcs.w	r3, ip, r1
 8014db2:	4628      	movcs	r0, r5
 8014db4:	eba1 000c 	subcc.w	r0, r1, ip
 8014db8:	462b      	movcc	r3, r5
 8014dba:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8014dbc:	bf27      	ittee	cs
 8014dbe:	b29b      	uxthcs	r3, r3
 8014dc0:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8014dc2:	b280      	uxthcc	r0, r0
 8014dc4:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8014dc8:	2dff      	cmp	r5, #255	@ 0xff
 8014dca:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8014dcc:	eb02 0705 	add.w	r7, r2, r5
 8014dd0:	b2bd      	uxth	r5, r7
 8014dd2:	9500      	str	r5, [sp, #0]
 8014dd4:	d12e      	bne.n	8014e34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 8014dd6:	465e      	mov	r6, fp
 8014dd8:	9d00      	ldr	r5, [sp, #0]
 8014dda:	42aa      	cmp	r2, r5
 8014ddc:	f040 8083 	bne.w	8014ee6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 8014de0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014de2:	458c      	cmp	ip, r1
 8014de4:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8014de8:	d3d9      	bcc.n	8014d9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8014dea:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8014dec:	9904      	ldr	r1, [sp, #16]
 8014dee:	8812      	ldrh	r2, [r2, #0]
 8014df0:	1a52      	subs	r2, r2, r1
 8014df2:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8014df4:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8014df8:	9a08      	ldr	r2, [sp, #32]
 8014dfa:	3201      	adds	r2, #1
 8014dfc:	428a      	cmp	r2, r1
 8014dfe:	9208      	str	r2, [sp, #32]
 8014e00:	f040 8091 	bne.w	8014f26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 8014e04:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8014e08:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8014e0c:	9b04      	ldr	r3, [sp, #16]
 8014e0e:	eba5 050c 	sub.w	r5, r5, ip
 8014e12:	b2ad      	uxth	r5, r5
 8014e14:	2d00      	cmp	r5, #0
 8014e16:	bf08      	it	eq
 8014e18:	4619      	moveq	r1, r3
 8014e1a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014e1c:	bf18      	it	ne
 8014e1e:	2100      	movne	r1, #0
 8014e20:	3301      	adds	r3, #1
 8014e22:	b289      	uxth	r1, r1
 8014e24:	930d      	str	r3, [sp, #52]	@ 0x34
 8014e26:	e700      	b.n	8014c2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 8014e28:	200150ac 	.word	0x200150ac
 8014e2c:	200150a6 	.word	0x200150a6
 8014e30:	fffff7fb 	.word	0xfffff7fb
 8014e34:	46d9      	mov	r9, fp
 8014e36:	9d00      	ldr	r5, [sp, #0]
 8014e38:	42aa      	cmp	r2, r5
 8014e3a:	d0d1      	beq.n	8014de0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 8014e3c:	1c55      	adds	r5, r2, #1
 8014e3e:	4422      	add	r2, r4
 8014e40:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8014e44:	9a06      	ldr	r2, [sp, #24]
 8014e46:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014e4a:	9517      	str	r5, [sp, #92]	@ 0x5c
 8014e4c:	4472      	add	r2, lr
 8014e4e:	9212      	str	r2, [sp, #72]	@ 0x48
 8014e50:	f8b9 2000 	ldrh.w	r2, [r9]
 8014e54:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8014e56:	1216      	asrs	r6, r2, #8
 8014e58:	f897 a002 	ldrb.w	sl, [r7, #2]
 8014e5c:	10d5      	asrs	r5, r2, #3
 8014e5e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8014e60:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014e64:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8014e68:	00d2      	lsls	r2, r2, #3
 8014e6a:	fb1a fa07 	smulbb	sl, sl, r7
 8014e6e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8014e72:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8014e74:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014e78:	b2d2      	uxtb	r2, r2
 8014e7a:	fb06 a607 	mla	r6, r6, r7, sl
 8014e7e:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8014e80:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8014e84:	f897 a001 	ldrb.w	sl, [r7, #1]
 8014e88:	b2b6      	uxth	r6, r6
 8014e8a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8014e8c:	fb1a fa07 	smulbb	sl, sl, r7
 8014e90:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8014e92:	fb05 a507 	mla	r5, r5, r7, sl
 8014e96:	9f06      	ldr	r7, [sp, #24]
 8014e98:	f106 0a01 	add.w	sl, r6, #1
 8014e9c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8014ea0:	b2ad      	uxth	r5, r5
 8014ea2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8014ea4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8014ea8:	f105 0a01 	add.w	sl, r5, #1
 8014eac:	fb1e fe07 	smulbb	lr, lr, r7
 8014eb0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8014eb2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014eb6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8014eba:	fb02 e207 	mla	r2, r2, r7, lr
 8014ebe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014ec2:	b292      	uxth	r2, r2
 8014ec4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014ec8:	f102 0e01 	add.w	lr, r2, #1
 8014ecc:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8014ed0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8014ed4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8014ed8:	ea4e 0606 	orr.w	r6, lr, r6
 8014edc:	ea46 060a 	orr.w	r6, r6, sl
 8014ee0:	f829 6b02 	strh.w	r6, [r9], #2
 8014ee4:	e7a7      	b.n	8014e36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 8014ee6:	f102 0e01 	add.w	lr, r2, #1
 8014eea:	4422      	add	r2, r4
 8014eec:	9f06      	ldr	r7, [sp, #24]
 8014eee:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8014ef2:	9a06      	ldr	r2, [sp, #24]
 8014ef4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014ef8:	eb02 0a05 	add.w	sl, r2, r5
 8014efc:	4a13      	ldr	r2, [pc, #76]	@ (8014f4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 8014efe:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8014f02:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8014f06:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014f0a:	00d2      	lsls	r2, r2, #3
 8014f0c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014f10:	ea49 0202 	orr.w	r2, r9, r2
 8014f14:	f817 9005 	ldrb.w	r9, [r7, r5]
 8014f18:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8014f1c:	f826 2b02 	strh.w	r2, [r6], #2
 8014f20:	fa1f f28e 	uxth.w	r2, lr
 8014f24:	e758      	b.n	8014dd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 8014f26:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8014f2a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8014f2e:	1a2d      	subs	r5, r5, r0
 8014f30:	b2ad      	uxth	r5, r5
 8014f32:	2d00      	cmp	r5, #0
 8014f34:	bf18      	it	ne
 8014f36:	2000      	movne	r0, #0
 8014f38:	e732      	b.n	8014da0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 8014f3a:	4b05      	ldr	r3, [pc, #20]	@ (8014f50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 8014f3c:	6818      	ldr	r0, [r3, #0]
 8014f3e:	6803      	ldr	r3, [r0, #0]
 8014f40:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014f42:	4798      	blx	r3
 8014f44:	b01f      	add	sp, #124	@ 0x7c
 8014f46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f4a:	bf00      	nop
 8014f4c:	fffff800 	.word	0xfffff800
 8014f50:	200150ac 	.word	0x200150ac

08014f54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8014f54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f58:	b091      	sub	sp, #68	@ 0x44
 8014f5a:	469b      	mov	fp, r3
 8014f5c:	4616      	mov	r6, r2
 8014f5e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014f62:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8014f66:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014f6a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 8014f6e:	4604      	mov	r4, r0
 8014f70:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8014f74:	4640      	mov	r0, r8
 8014f76:	460d      	mov	r5, r1
 8014f78:	4659      	mov	r1, fp
 8014f7a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8014f7e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8014f82:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8014f86:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8014f8a:	f7f5 fb39 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 8014f8e:	4631      	mov	r1, r6
 8014f90:	4640      	mov	r0, r8
 8014f92:	f7f5 fb35 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 8014f96:	4b74      	ldr	r3, [pc, #464]	@ (8015168 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8014f98:	8818      	ldrh	r0, [r3, #0]
 8014f9a:	4b74      	ldr	r3, [pc, #464]	@ (801516c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8014f9c:	b202      	sxth	r2, r0
 8014f9e:	8819      	ldrh	r1, [r3, #0]
 8014fa0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8014fa4:	b20e      	sxth	r6, r1
 8014fa6:	2b00      	cmp	r3, #0
 8014fa8:	da07      	bge.n	8014fba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8014faa:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8014fae:	4463      	add	r3, ip
 8014fb0:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8014fb4:	2300      	movs	r3, #0
 8014fb6:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8014fba:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8014fbe:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8014fc2:	1ad2      	subs	r2, r2, r3
 8014fc4:	4594      	cmp	ip, r2
 8014fc6:	bfc4      	itt	gt
 8014fc8:	1ac2      	subgt	r2, r0, r3
 8014fca:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8014fce:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8014fd2:	2a00      	cmp	r2, #0
 8014fd4:	da07      	bge.n	8014fe6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8014fd6:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 8014fda:	4462      	add	r2, ip
 8014fdc:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8014fe0:	2200      	movs	r2, #0
 8014fe2:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8014fe6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 8014fea:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8014fee:	eba6 060a 	sub.w	r6, r6, sl
 8014ff2:	42b2      	cmp	r2, r6
 8014ff4:	bfc4      	itt	gt
 8014ff6:	eba1 020a 	subgt.w	r2, r1, sl
 8014ffa:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8014ffe:	4a5c      	ldr	r2, [pc, #368]	@ (8015170 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8015000:	7812      	ldrb	r2, [r2, #0]
 8015002:	b9a2      	cbnz	r2, 801502e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8015004:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8015008:	4286      	cmp	r6, r0
 801500a:	4640      	mov	r0, r8
 801500c:	9303      	str	r3, [sp, #12]
 801500e:	bf14      	ite	ne
 8015010:	2600      	movne	r6, #0
 8015012:	2601      	moveq	r6, #1
 8015014:	f7f5 fb37 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015018:	9b03      	ldr	r3, [sp, #12]
 801501a:	b160      	cbz	r0, 8015036 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801501c:	2300      	movs	r3, #0
 801501e:	8023      	strh	r3, [r4, #0]
 8015020:	8063      	strh	r3, [r4, #2]
 8015022:	80a3      	strh	r3, [r4, #4]
 8015024:	4620      	mov	r0, r4
 8015026:	80e3      	strh	r3, [r4, #6]
 8015028:	b011      	add	sp, #68	@ 0x44
 801502a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801502e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8015032:	428e      	cmp	r6, r1
 8015034:	e7e9      	b.n	801500a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8015036:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801503a:	a90e      	add	r1, sp, #56	@ 0x38
 801503c:	900e      	str	r0, [sp, #56]	@ 0x38
 801503e:	a80c      	add	r0, sp, #48	@ 0x30
 8015040:	9205      	str	r2, [sp, #20]
 8015042:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8015046:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801504a:	9206      	str	r2, [sp, #24]
 801504c:	f8bb 2000 	ldrh.w	r2, [fp]
 8015050:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8015054:	1a9b      	subs	r3, r3, r2
 8015056:	b21b      	sxth	r3, r3
 8015058:	9303      	str	r3, [sp, #12]
 801505a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801505e:	f8df b118 	ldr.w	fp, [pc, #280]	@ 8015178 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8015062:	ebaa 0a03 	sub.w	sl, sl, r3
 8015066:	fa0f f38a 	sxth.w	r3, sl
 801506a:	9304      	str	r3, [sp, #16]
 801506c:	9b03      	ldr	r3, [sp, #12]
 801506e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8015072:	9b04      	ldr	r3, [sp, #16]
 8015074:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015078:	9b05      	ldr	r3, [sp, #20]
 801507a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801507e:	9b06      	ldr	r3, [sp, #24]
 8015080:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8015084:	f7f8 fcd8 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015088:	4640      	mov	r0, r8
 801508a:	f7f8 fcad 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801508e:	a80e      	add	r0, sp, #56	@ 0x38
 8015090:	f7f8 fcaa 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015094:	4b37      	ldr	r3, [pc, #220]	@ (8015174 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8015096:	4628      	mov	r0, r5
 8015098:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801509c:	881b      	ldrh	r3, [r3, #0]
 801509e:	9307      	str	r3, [sp, #28]
 80150a0:	682b      	ldr	r3, [r5, #0]
 80150a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80150a4:	4798      	blx	r3
 80150a6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 80150aa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 80150ae:	4681      	mov	r9, r0
 80150b0:	f8db 0000 	ldr.w	r0, [fp]
 80150b4:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80150b8:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 80150ba:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80150be:	6803      	ldr	r3, [r0, #0]
 80150c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80150c2:	4798      	blx	r3
 80150c4:	4607      	mov	r7, r0
 80150c6:	f8db 0000 	ldr.w	r0, [fp]
 80150ca:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80150ce:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80150d2:	6803      	ldr	r3, [r0, #0]
 80150d4:	9109      	str	r1, [sp, #36]	@ 0x24
 80150d6:	9208      	str	r2, [sp, #32]
 80150d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80150da:	4798      	blx	r3
 80150dc:	f010 0f01 	tst.w	r0, #1
 80150e0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80150e4:	d012      	beq.n	801510c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80150e6:	f8db 0000 	ldr.w	r0, [fp]
 80150ea:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80150ee:	6803      	ldr	r3, [r0, #0]
 80150f0:	9200      	str	r2, [sp, #0]
 80150f2:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 80150f4:	462b      	mov	r3, r5
 80150f6:	e898 0006 	ldmia.w	r8, {r1, r2}
 80150fa:	47b0      	blx	r6
 80150fc:	9b03      	ldr	r3, [sp, #12]
 80150fe:	8023      	strh	r3, [r4, #0]
 8015100:	9b04      	ldr	r3, [sp, #16]
 8015102:	8063      	strh	r3, [r4, #2]
 8015104:	9b05      	ldr	r3, [sp, #20]
 8015106:	80a3      	strh	r3, [r4, #4]
 8015108:	9b06      	ldr	r3, [sp, #24]
 801510a:	e78b      	b.n	8015024 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801510c:	fb09 f202 	mul.w	r2, r9, r2
 8015110:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 8015114:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8015118:	440f      	add	r7, r1
 801511a:	b166      	cbz	r6, 8015136 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801511c:	9a07      	ldr	r2, [sp, #28]
 801511e:	4592      	cmp	sl, r2
 8015120:	d109      	bne.n	8015136 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8015122:	f8db 0000 	ldr.w	r0, [fp]
 8015126:	fb09 f303 	mul.w	r3, r9, r3
 801512a:	4629      	mov	r1, r5
 801512c:	6802      	ldr	r2, [r0, #0]
 801512e:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 8015130:	463a      	mov	r2, r7
 8015132:	47b0      	blx	r6
 8015134:	e7e2      	b.n	80150fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8015136:	fb0a f303 	mul.w	r3, sl, r3
 801513a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801513e:	f8df b038 	ldr.w	fp, [pc, #56]	@ 8015178 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8015142:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8015146:	4545      	cmp	r5, r8
 8015148:	d2d8      	bcs.n	80150fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801514a:	f8db 0000 	ldr.w	r0, [fp]
 801514e:	4629      	mov	r1, r5
 8015150:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8015154:	4435      	add	r5, r6
 8015156:	6802      	ldr	r2, [r0, #0]
 8015158:	005b      	lsls	r3, r3, #1
 801515a:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801515e:	463a      	mov	r2, r7
 8015160:	47d0      	blx	sl
 8015162:	444f      	add	r7, r9
 8015164:	e7ef      	b.n	8015146 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8015166:	bf00      	nop
 8015168:	200150a0 	.word	0x200150a0
 801516c:	200150a2 	.word	0x200150a2
 8015170:	200150a4 	.word	0x200150a4
 8015174:	200150a6 	.word	0x200150a6
 8015178:	200150ac 	.word	0x200150ac

0801517c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801517c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801517e:	4606      	mov	r6, r0
 8015180:	b087      	sub	sp, #28
 8015182:	460c      	mov	r4, r1
 8015184:	4617      	mov	r7, r2
 8015186:	461d      	mov	r5, r3
 8015188:	b333      	cbz	r3, 80151d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801518a:	4608      	mov	r0, r1
 801518c:	f7f5 fa7b 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015190:	bb10      	cbnz	r0, 80151d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8015192:	6820      	ldr	r0, [r4, #0]
 8015194:	ab04      	add	r3, sp, #16
 8015196:	6861      	ldr	r1, [r4, #4]
 8015198:	4c1b      	ldr	r4, [pc, #108]	@ (8015208 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801519a:	c303      	stmia	r3!, {r0, r1}
 801519c:	a804      	add	r0, sp, #16
 801519e:	f7f8 fc23 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80151a2:	6820      	ldr	r0, [r4, #0]
 80151a4:	6803      	ldr	r3, [r0, #0]
 80151a6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80151a8:	4798      	blx	r3
 80151aa:	2dff      	cmp	r5, #255	@ 0xff
 80151ac:	d016      	beq.n	80151dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80151ae:	f010 0f08 	tst.w	r0, #8
 80151b2:	6820      	ldr	r0, [r4, #0]
 80151b4:	d015      	beq.n	80151e2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80151b6:	2400      	movs	r4, #0
 80151b8:	6801      	ldr	r1, [r0, #0]
 80151ba:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80151be:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80151c2:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80151c6:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80151ca:	9401      	str	r4, [sp, #4]
 80151cc:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80151d0:	9400      	str	r4, [sp, #0]
 80151d2:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 80151d4:	4639      	mov	r1, r7
 80151d6:	47a0      	blx	r4
 80151d8:	b007      	add	sp, #28
 80151da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80151dc:	f010 0f02 	tst.w	r0, #2
 80151e0:	e7e7      	b.n	80151b2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80151e2:	6803      	ldr	r3, [r0, #0]
 80151e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80151e6:	4798      	blx	r3
 80151e8:	4b08      	ldr	r3, [pc, #32]	@ (801520c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80151ea:	4601      	mov	r1, r0
 80151ec:	4630      	mov	r0, r6
 80151ee:	881a      	ldrh	r2, [r3, #0]
 80151f0:	6833      	ldr	r3, [r6, #0]
 80151f2:	e9cd 7500 	strd	r7, r5, [sp]
 80151f6:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 80151f8:	ab04      	add	r3, sp, #16
 80151fa:	47a8      	blx	r5
 80151fc:	6820      	ldr	r0, [r4, #0]
 80151fe:	6803      	ldr	r3, [r0, #0]
 8015200:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015202:	4798      	blx	r3
 8015204:	e7e8      	b.n	80151d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8015206:	bf00      	nop
 8015208:	200150ac 	.word	0x200150ac
 801520c:	200150a6 	.word	0x200150a6

08015210 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8015210:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015214:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8015218:	4688      	mov	r8, r1
 801521a:	4614      	mov	r4, r2
 801521c:	461d      	mov	r5, r3
 801521e:	9e08      	ldr	r6, [sp, #32]
 8015220:	2f00      	cmp	r7, #0
 8015222:	f000 80ab 	beq.w	801537c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8015226:	4618      	mov	r0, r3
 8015228:	f7f5 fa2d 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 801522c:	2800      	cmp	r0, #0
 801522e:	f040 80a5 	bne.w	801537c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8015232:	f9b5 1000 	ldrsh.w	r1, [r5]
 8015236:	2fff      	cmp	r7, #255	@ 0xff
 8015238:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801523c:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8015240:	fb04 1303 	mla	r3, r4, r3, r1
 8015244:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8015248:	eba4 0200 	sub.w	r2, r4, r0
 801524c:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8015250:	fb04 f505 	mul.w	r5, r4, r5
 8015254:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8015258:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801525c:	d04a      	beq.n	80152f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801525e:	b2bc      	uxth	r4, r7
 8015260:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8015264:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8015268:	fa5f f788 	uxtb.w	r7, r8
 801526c:	b2f3      	uxtb	r3, r6
 801526e:	0040      	lsls	r0, r0, #1
 8015270:	fb0e fe04 	mul.w	lr, lr, r4
 8015274:	4367      	muls	r7, r4
 8015276:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801527a:	4363      	muls	r3, r4
 801527c:	fa1f fc8c 	uxth.w	ip, ip
 8015280:	42a9      	cmp	r1, r5
 8015282:	d27b      	bcs.n	801537c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8015284:	eb01 0900 	add.w	r9, r1, r0
 8015288:	4549      	cmp	r1, r9
 801528a:	d231      	bcs.n	80152f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 801528c:	880a      	ldrh	r2, [r1, #0]
 801528e:	1214      	asrs	r4, r2, #8
 8015290:	10d6      	asrs	r6, r2, #3
 8015292:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8015296:	00d2      	lsls	r2, r2, #3
 8015298:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801529c:	b2d2      	uxtb	r2, r2
 801529e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80152a2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80152a6:	fb14 f40c 	smulbb	r4, r4, ip
 80152aa:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80152ae:	fb12 f20c 	smulbb	r2, r2, ip
 80152b2:	fb16 f60c 	smulbb	r6, r6, ip
 80152b6:	4474      	add	r4, lr
 80152b8:	441a      	add	r2, r3
 80152ba:	b2a4      	uxth	r4, r4
 80152bc:	443e      	add	r6, r7
 80152be:	b292      	uxth	r2, r2
 80152c0:	f104 0a01 	add.w	sl, r4, #1
 80152c4:	b2b6      	uxth	r6, r6
 80152c6:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80152ca:	f102 0a01 	add.w	sl, r2, #1
 80152ce:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80152d2:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80152d6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80152da:	4322      	orrs	r2, r4
 80152dc:	1c74      	adds	r4, r6, #1
 80152de:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80152e2:	0976      	lsrs	r6, r6, #5
 80152e4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80152e8:	4332      	orrs	r2, r6
 80152ea:	f821 2b02 	strh.w	r2, [r1], #2
 80152ee:	e7cb      	b.n	8015288 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 80152f0:	4441      	add	r1, r8
 80152f2:	e7c5      	b.n	8015280 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 80152f4:	0973      	lsrs	r3, r6, #5
 80152f6:	4f22      	ldr	r7, [pc, #136]	@ (8015380 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 80152f8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80152fc:	ea08 0707 	and.w	r7, r8, r7
 8015300:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8015304:	433b      	orrs	r3, r7
 8015306:	07e7      	lsls	r7, r4, #31
 8015308:	ea43 0306 	orr.w	r3, r3, r6
 801530c:	b29b      	uxth	r3, r3
 801530e:	d50b      	bpl.n	8015328 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 8015310:	0040      	lsls	r0, r0, #1
 8015312:	0052      	lsls	r2, r2, #1
 8015314:	42a9      	cmp	r1, r5
 8015316:	d231      	bcs.n	801537c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8015318:	180c      	adds	r4, r1, r0
 801531a:	42a1      	cmp	r1, r4
 801531c:	d202      	bcs.n	8015324 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801531e:	f821 3b02 	strh.w	r3, [r1], #2
 8015322:	e7fa      	b.n	801531a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 8015324:	4411      	add	r1, r2
 8015326:	e7f5      	b.n	8015314 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 8015328:	078e      	lsls	r6, r1, #30
 801532a:	d008      	beq.n	801533e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 801532c:	0066      	lsls	r6, r4, #1
 801532e:	460a      	mov	r2, r1
 8015330:	42aa      	cmp	r2, r5
 8015332:	d202      	bcs.n	801533a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8015334:	8013      	strh	r3, [r2, #0]
 8015336:	4432      	add	r2, r6
 8015338:	e7fa      	b.n	8015330 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 801533a:	3102      	adds	r1, #2
 801533c:	3801      	subs	r0, #1
 801533e:	07c2      	lsls	r2, r0, #31
 8015340:	d50b      	bpl.n	801535a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 8015342:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8015346:	0066      	lsls	r6, r4, #1
 8015348:	3a01      	subs	r2, #1
 801534a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801534e:	42aa      	cmp	r2, r5
 8015350:	d202      	bcs.n	8015358 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8015352:	8013      	strh	r3, [r2, #0]
 8015354:	4432      	add	r2, r6
 8015356:	e7fa      	b.n	801534e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 8015358:	3801      	subs	r0, #1
 801535a:	b178      	cbz	r0, 801537c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801535c:	1040      	asrs	r0, r0, #1
 801535e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8015362:	0080      	lsls	r0, r0, #2
 8015364:	0064      	lsls	r4, r4, #1
 8015366:	42a9      	cmp	r1, r5
 8015368:	d208      	bcs.n	801537c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801536a:	180e      	adds	r6, r1, r0
 801536c:	460a      	mov	r2, r1
 801536e:	42b2      	cmp	r2, r6
 8015370:	d202      	bcs.n	8015378 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8015372:	f842 3b04 	str.w	r3, [r2], #4
 8015376:	e7fa      	b.n	801536e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 8015378:	4421      	add	r1, r4
 801537a:	e7f4      	b.n	8015366 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 801537c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015380:	00fff800 	.word	0x00fff800

08015384 <_ZN8touchgfx8LCD16bppC1Ev>:
 8015384:	2200      	movs	r2, #0
 8015386:	4912      	ldr	r1, [pc, #72]	@ (80153d0 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8015388:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801538c:	6001      	str	r1, [r0, #0]
 801538e:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8015392:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8015396:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801539a:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801539e:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 80153a2:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 80153a6:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 80153aa:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 80153ae:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 80153b2:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 80153b6:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 80153ba:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 80153be:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 80153c2:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 80153c6:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 80153ca:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 80153ce:	4770      	bx	lr
 80153d0:	08021568 	.word	0x08021568

080153d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80153d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153d8:	b08d      	sub	sp, #52	@ 0x34
 80153da:	460d      	mov	r5, r1
 80153dc:	4604      	mov	r4, r0
 80153de:	4699      	mov	r9, r3
 80153e0:	6808      	ldr	r0, [r1, #0]
 80153e2:	ab08      	add	r3, sp, #32
 80153e4:	6849      	ldr	r1, [r1, #4]
 80153e6:	c303      	stmia	r3!, {r0, r1}
 80153e8:	6810      	ldr	r0, [r2, #0]
 80153ea:	ab0a      	add	r3, sp, #40	@ 0x28
 80153ec:	6851      	ldr	r1, [r2, #4]
 80153ee:	c303      	stmia	r3!, {r0, r1}
 80153f0:	a808      	add	r0, sp, #32
 80153f2:	f7f8 faf9 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80153f6:	4629      	mov	r1, r5
 80153f8:	a80a      	add	r0, sp, #40	@ 0x28
 80153fa:	4d67      	ldr	r5, [pc, #412]	@ (8015598 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80153fc:	f7f8 fb1c 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015400:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8015404:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8015408:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801540c:	6828      	ldr	r0, [r5, #0]
 801540e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015412:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8015416:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801541a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801541e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8015422:	440a      	add	r2, r1
 8015424:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8015428:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801542c:	4413      	add	r3, r2
 801542e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8015432:	6803      	ldr	r3, [r0, #0]
 8015434:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015436:	4798      	blx	r3
 8015438:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801543c:	d119      	bne.n	8015472 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801543e:	f010 0f20 	tst.w	r0, #32
 8015442:	6828      	ldr	r0, [r5, #0]
 8015444:	d018      	beq.n	8015478 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8015446:	2500      	movs	r5, #0
 8015448:	6801      	ldr	r1, [r0, #0]
 801544a:	b2b6      	uxth	r6, r6
 801544c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8015450:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8015454:	9601      	str	r6, [sp, #4]
 8015456:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801545a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801545e:	9502      	str	r5, [sp, #8]
 8015460:	fa1f f588 	uxth.w	r5, r8
 8015464:	9500      	str	r5, [sp, #0]
 8015466:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 8015468:	4621      	mov	r1, r4
 801546a:	47a8      	blx	r5
 801546c:	b00d      	add	sp, #52	@ 0x34
 801546e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015472:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8015476:	e7e4      	b.n	8015442 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8015478:	6803      	ldr	r3, [r0, #0]
 801547a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801547c:	4798      	blx	r3
 801547e:	4947      	ldr	r1, [pc, #284]	@ (801559c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8015480:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8015484:	880b      	ldrh	r3, [r1, #0]
 8015486:	468a      	mov	sl, r1
 8015488:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801548c:	fb03 5202 	mla	r2, r3, r2, r5
 8015490:	4373      	muls	r3, r6
 8015492:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015496:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801549a:	9307      	str	r3, [sp, #28]
 801549c:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80154a0:	9306      	str	r3, [sp, #24]
 80154a2:	9b07      	ldr	r3, [sp, #28]
 80154a4:	4298      	cmp	r0, r3
 80154a6:	d270      	bcs.n	801558a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80154a8:	9b06      	ldr	r3, [sp, #24]
 80154aa:	4621      	mov	r1, r4
 80154ac:	eb00 0b03 	add.w	fp, r0, r3
 80154b0:	4558      	cmp	r0, fp
 80154b2:	d25d      	bcs.n	8015570 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80154b4:	f851 4b04 	ldr.w	r4, [r1], #4
 80154b8:	0e23      	lsrs	r3, r4, #24
 80154ba:	d014      	beq.n	80154e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80154bc:	2bff      	cmp	r3, #255	@ 0xff
 80154be:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80154c2:	d112      	bne.n	80154ea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80154c4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80154c8:	d10f      	bne.n	80154ea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80154ca:	0963      	lsrs	r3, r4, #5
 80154cc:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80154d0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80154d4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80154d8:	f02c 0c07 	bic.w	ip, ip, #7
 80154dc:	ea43 0c0c 	orr.w	ip, r3, ip
 80154e0:	ea4c 0404 	orr.w	r4, ip, r4
 80154e4:	8004      	strh	r4, [r0, #0]
 80154e6:	3002      	adds	r0, #2
 80154e8:	e7e2      	b.n	80154b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80154ea:	fb09 f303 	mul.w	r3, r9, r3
 80154ee:	8807      	ldrh	r7, [r0, #0]
 80154f0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80154f4:	fa5f fc8c 	uxtb.w	ip, ip
 80154f8:	1c5a      	adds	r2, r3, #1
 80154fa:	123e      	asrs	r6, r7, #8
 80154fc:	10fd      	asrs	r5, r7, #3
 80154fe:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8015502:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015506:	00ff      	lsls	r7, r7, #3
 8015508:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801550c:	1212      	asrs	r2, r2, #8
 801550e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8015512:	b293      	uxth	r3, r2
 8015514:	43d2      	mvns	r2, r2
 8015516:	b2ff      	uxtb	r7, r7
 8015518:	fb1e fe03 	smulbb	lr, lr, r3
 801551c:	b2d2      	uxtb	r2, r2
 801551e:	fb1c fc03 	smulbb	ip, ip, r3
 8015522:	b2e4      	uxtb	r4, r4
 8015524:	fb06 e602 	mla	r6, r6, r2, lr
 8015528:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801552c:	fb14 f403 	smulbb	r4, r4, r3
 8015530:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8015534:	b2b6      	uxth	r6, r6
 8015536:	fb05 c502 	mla	r5, r5, r2, ip
 801553a:	fb07 4702 	mla	r7, r7, r2, r4
 801553e:	f106 0e01 	add.w	lr, r6, #1
 8015542:	b2ad      	uxth	r5, r5
 8015544:	b2bf      	uxth	r7, r7
 8015546:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801554a:	f105 0c01 	add.w	ip, r5, #1
 801554e:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8015552:	1c7e      	adds	r6, r7, #1
 8015554:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8015558:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801555c:	096d      	lsrs	r5, r5, #5
 801555e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015562:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015566:	ea46 060e 	orr.w	r6, r6, lr
 801556a:	432e      	orrs	r6, r5
 801556c:	8006      	strh	r6, [r0, #0]
 801556e:	e7ba      	b.n	80154e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8015570:	f8ba 3000 	ldrh.w	r3, [sl]
 8015574:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8015578:	eba3 0308 	sub.w	r3, r3, r8
 801557c:	eba4 0408 	sub.w	r4, r4, r8
 8015580:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015584:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8015588:	e78b      	b.n	80154a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801558a:	4b03      	ldr	r3, [pc, #12]	@ (8015598 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801558c:	6818      	ldr	r0, [r3, #0]
 801558e:	6803      	ldr	r3, [r0, #0]
 8015590:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015592:	4798      	blx	r3
 8015594:	e76a      	b.n	801546c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8015596:	bf00      	nop
 8015598:	200150ac 	.word	0x200150ac
 801559c:	200150a6 	.word	0x200150a6

080155a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80155a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80155a4:	b085      	sub	sp, #20
 80155a6:	6810      	ldr	r0, [r2, #0]
 80155a8:	460c      	mov	r4, r1
 80155aa:	6851      	ldr	r1, [r2, #4]
 80155ac:	466d      	mov	r5, sp
 80155ae:	4616      	mov	r6, r2
 80155b0:	c503      	stmia	r5!, {r0, r1}
 80155b2:	6818      	ldr	r0, [r3, #0]
 80155b4:	6859      	ldr	r1, [r3, #4]
 80155b6:	c503      	stmia	r5!, {r0, r1}
 80155b8:	4668      	mov	r0, sp
 80155ba:	4d2e      	ldr	r5, [pc, #184]	@ (8015674 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80155bc:	f7f8 fa14 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80155c0:	4631      	mov	r1, r6
 80155c2:	a802      	add	r0, sp, #8
 80155c4:	4e2c      	ldr	r6, [pc, #176]	@ (8015678 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80155c6:	f7f8 fa37 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80155ca:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80155ce:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80155d2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80155d6:	6828      	ldr	r0, [r5, #0]
 80155d8:	fb11 2103 	smlabb	r1, r1, r3, r2
 80155dc:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80155e0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80155e4:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80155e8:	f8bd 1000 	ldrh.w	r1, [sp]
 80155ec:	440a      	add	r2, r1
 80155ee:	f8ad 2008 	strh.w	r2, [sp, #8]
 80155f2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80155f6:	4413      	add	r3, r2
 80155f8:	f8ad 300a 	strh.w	r3, [sp, #10]
 80155fc:	6803      	ldr	r3, [r0, #0]
 80155fe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015600:	4798      	blx	r3
 8015602:	8833      	ldrh	r3, [r6, #0]
 8015604:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8015608:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801560c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8015610:	f8df e068 	ldr.w	lr, [pc, #104]	@ 801567c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8015614:	fb03 1202 	mla	r2, r3, r2, r1
 8015618:	fb08 f303 	mul.w	r3, r8, r3
 801561c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015620:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015624:	4298      	cmp	r0, r3
 8015626:	d21d      	bcs.n	8015664 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8015628:	eb00 080c 	add.w	r8, r0, ip
 801562c:	4540      	cmp	r0, r8
 801562e:	d20f      	bcs.n	8015650 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8015630:	f854 1b04 	ldr.w	r1, [r4], #4
 8015634:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8015638:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801563c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8015640:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8015644:	ea42 0209 	orr.w	r2, r2, r9
 8015648:	430a      	orrs	r2, r1
 801564a:	f820 2b02 	strh.w	r2, [r0], #2
 801564e:	e7ed      	b.n	801562c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8015650:	8832      	ldrh	r2, [r6, #0]
 8015652:	1bd2      	subs	r2, r2, r7
 8015654:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015658:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801565c:	1bd2      	subs	r2, r2, r7
 801565e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8015662:	e7df      	b.n	8015624 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8015664:	6828      	ldr	r0, [r5, #0]
 8015666:	6803      	ldr	r3, [r0, #0]
 8015668:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801566a:	4798      	blx	r3
 801566c:	b005      	add	sp, #20
 801566e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015672:	bf00      	nop
 8015674:	200150ac 	.word	0x200150ac
 8015678:	200150a6 	.word	0x200150a6
 801567c:	fffff800 	.word	0xfffff800

08015680 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8015680:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015684:	b08e      	sub	sp, #56	@ 0x38
 8015686:	460e      	mov	r6, r1
 8015688:	4604      	mov	r4, r0
 801568a:	461d      	mov	r5, r3
 801568c:	6808      	ldr	r0, [r1, #0]
 801568e:	ab0a      	add	r3, sp, #40	@ 0x28
 8015690:	6849      	ldr	r1, [r1, #4]
 8015692:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 8015868 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8015696:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 801586c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801569a:	c303      	stmia	r3!, {r0, r1}
 801569c:	6810      	ldr	r0, [r2, #0]
 801569e:	ab0c      	add	r3, sp, #48	@ 0x30
 80156a0:	6851      	ldr	r1, [r2, #4]
 80156a2:	c303      	stmia	r3!, {r0, r1}
 80156a4:	a80a      	add	r0, sp, #40	@ 0x28
 80156a6:	f7f8 f99f 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80156aa:	4631      	mov	r1, r6
 80156ac:	a80c      	add	r0, sp, #48	@ 0x30
 80156ae:	f7f8 f9c3 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80156b2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80156b6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80156ba:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80156be:	f8d8 0000 	ldr.w	r0, [r8]
 80156c2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80156c6:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 80156ca:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80156ce:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80156d2:	440c      	add	r4, r1
 80156d4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 80156d8:	440a      	add	r2, r1
 80156da:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80156de:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80156e2:	4413      	add	r3, r2
 80156e4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80156e8:	6803      	ldr	r3, [r0, #0]
 80156ea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80156ec:	4798      	blx	r3
 80156ee:	2dff      	cmp	r5, #255	@ 0xff
 80156f0:	d124      	bne.n	801573c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80156f2:	f010 0f01 	tst.w	r0, #1
 80156f6:	f8d8 0000 	ldr.w	r0, [r8]
 80156fa:	d022      	beq.n	8015742 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80156fc:	2100      	movs	r1, #0
 80156fe:	f04f 0e01 	mov.w	lr, #1
 8015702:	f8d0 c000 	ldr.w	ip, [r0]
 8015706:	b2b6      	uxth	r6, r6
 8015708:	f8cd e018 	str.w	lr, [sp, #24]
 801570c:	b2bf      	uxth	r7, r7
 801570e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8015712:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8015716:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801571a:	f8b9 e000 	ldrh.w	lr, [r9]
 801571e:	9503      	str	r5, [sp, #12]
 8015720:	9601      	str	r6, [sp, #4]
 8015722:	9700      	str	r7, [sp, #0]
 8015724:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8015728:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801572c:	9102      	str	r1, [sp, #8]
 801572e:	4621      	mov	r1, r4
 8015730:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 8015734:	47a8      	blx	r5
 8015736:	b00e      	add	sp, #56	@ 0x38
 8015738:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801573c:	f010 0f04 	tst.w	r0, #4
 8015740:	e7d9      	b.n	80156f6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8015742:	6803      	ldr	r3, [r0, #0]
 8015744:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015746:	4798      	blx	r3
 8015748:	f8b9 3000 	ldrh.w	r3, [r9]
 801574c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015750:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8015754:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8015758:	435e      	muls	r6, r3
 801575a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801575e:	2dff      	cmp	r5, #255	@ 0xff
 8015760:	fb03 1202 	mla	r2, r3, r2, r1
 8015764:	ebac 0c07 	sub.w	ip, ip, r7
 8015768:	eba3 0707 	sub.w	r7, r3, r7
 801576c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015770:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8015774:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015778:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801577c:	d049      	beq.n	8015812 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801577e:	43eb      	mvns	r3, r5
 8015780:	fa1f f985 	uxth.w	r9, r5
 8015784:	b2db      	uxtb	r3, r3
 8015786:	42b0      	cmp	r0, r6
 8015788:	d266      	bcs.n	8015858 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801578a:	eb00 0a0e 	add.w	sl, r0, lr
 801578e:	4550      	cmp	r0, sl
 8015790:	4621      	mov	r1, r4
 8015792:	f104 0403 	add.w	r4, r4, #3
 8015796:	d25b      	bcs.n	8015850 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8015798:	8802      	ldrh	r2, [r0, #0]
 801579a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801579e:	ea4f 2822 	mov.w	r8, r2, asr #8
 80157a2:	fb11 f109 	smulbb	r1, r1, r9
 80157a6:	10d5      	asrs	r5, r2, #3
 80157a8:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80157ac:	00d2      	lsls	r2, r2, #3
 80157ae:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80157b2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80157b6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80157ba:	fb08 1803 	mla	r8, r8, r3, r1
 80157be:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80157c2:	b2d2      	uxtb	r2, r2
 80157c4:	fb11 f109 	smulbb	r1, r1, r9
 80157c8:	fa1f f888 	uxth.w	r8, r8
 80157cc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80157d0:	fb05 1503 	mla	r5, r5, r3, r1
 80157d4:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80157d8:	fb11 f109 	smulbb	r1, r1, r9
 80157dc:	b2ad      	uxth	r5, r5
 80157de:	fb02 1203 	mla	r2, r2, r3, r1
 80157e2:	f108 0101 	add.w	r1, r8, #1
 80157e6:	b292      	uxth	r2, r2
 80157e8:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80157ec:	1c51      	adds	r1, r2, #1
 80157ee:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 80157f2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80157f6:	1c69      	adds	r1, r5, #1
 80157f8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80157fc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015800:	096d      	lsrs	r5, r5, #5
 8015802:	ea42 0208 	orr.w	r2, r2, r8
 8015806:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801580a:	432a      	orrs	r2, r5
 801580c:	f820 2b02 	strh.w	r2, [r0], #2
 8015810:	e7bd      	b.n	801578e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8015812:	4a14      	ldr	r2, [pc, #80]	@ (8015864 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8015814:	42b0      	cmp	r0, r6
 8015816:	d21f      	bcs.n	8015858 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8015818:	eb00 050e 	add.w	r5, r0, lr
 801581c:	42a8      	cmp	r0, r5
 801581e:	4621      	mov	r1, r4
 8015820:	f104 0403 	add.w	r4, r4, #3
 8015824:	d210      	bcs.n	8015848 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8015826:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801582a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801582e:	00db      	lsls	r3, r3, #3
 8015830:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8015834:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8015838:	430b      	orrs	r3, r1
 801583a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801583e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8015842:	f820 3b02 	strh.w	r3, [r0], #2
 8015846:	e7e9      	b.n	801581c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8015848:	4438      	add	r0, r7
 801584a:	eb01 040c 	add.w	r4, r1, ip
 801584e:	e7e1      	b.n	8015814 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8015850:	4438      	add	r0, r7
 8015852:	eb01 040c 	add.w	r4, r1, ip
 8015856:	e796      	b.n	8015786 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8015858:	4b03      	ldr	r3, [pc, #12]	@ (8015868 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801585a:	6818      	ldr	r0, [r3, #0]
 801585c:	6803      	ldr	r3, [r0, #0]
 801585e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015860:	4798      	blx	r3
 8015862:	e768      	b.n	8015736 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8015864:	fffff800 	.word	0xfffff800
 8015868:	200150ac 	.word	0x200150ac
 801586c:	200150a6 	.word	0x200150a6

08015870 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8015870:	b4f0      	push	{r4, r5, r6, r7}
 8015872:	4616      	mov	r6, r2
 8015874:	461c      	mov	r4, r3
 8015876:	460d      	mov	r5, r1
 8015878:	9a04      	ldr	r2, [sp, #16]
 801587a:	2e01      	cmp	r6, #1
 801587c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015880:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8015884:	d012      	beq.n	80158ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8015886:	d303      	bcc.n	8015890 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8015888:	2e02      	cmp	r6, #2
 801588a:	d00a      	beq.n	80158a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801588c:	bcf0      	pop	{r4, r5, r6, r7}
 801588e:	4770      	bx	lr
 8015890:	6805      	ldr	r5, [r0, #0]
 8015892:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8015896:	68ed      	ldr	r5, [r5, #12]
 8015898:	4613      	mov	r3, r2
 801589a:	4622      	mov	r2, r4
 801589c:	46ac      	mov	ip, r5
 801589e:	bcf0      	pop	{r4, r5, r6, r7}
 80158a0:	4760      	bx	ip
 80158a2:	4621      	mov	r1, r4
 80158a4:	4628      	mov	r0, r5
 80158a6:	bcf0      	pop	{r4, r5, r6, r7}
 80158a8:	f7ff bd94 	b.w	80153d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80158ac:	4621      	mov	r1, r4
 80158ae:	4628      	mov	r0, r5
 80158b0:	bcf0      	pop	{r4, r5, r6, r7}
 80158b2:	f7ff bee5 	b.w	8015680 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080158b8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80158b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158bc:	b093      	sub	sp, #76	@ 0x4c
 80158be:	4681      	mov	r9, r0
 80158c0:	4688      	mov	r8, r1
 80158c2:	6810      	ldr	r0, [r2, #0]
 80158c4:	6851      	ldr	r1, [r2, #4]
 80158c6:	ac0e      	add	r4, sp, #56	@ 0x38
 80158c8:	4616      	mov	r6, r2
 80158ca:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 80158ce:	4f6b      	ldr	r7, [pc, #428]	@ (8015a7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80158d0:	c403      	stmia	r4!, {r0, r1}
 80158d2:	6818      	ldr	r0, [r3, #0]
 80158d4:	ac10      	add	r4, sp, #64	@ 0x40
 80158d6:	6859      	ldr	r1, [r3, #4]
 80158d8:	c403      	stmia	r4!, {r0, r1}
 80158da:	a80e      	add	r0, sp, #56	@ 0x38
 80158dc:	f7f8 f884 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80158e0:	4631      	mov	r1, r6
 80158e2:	a810      	add	r0, sp, #64	@ 0x40
 80158e4:	4e66      	ldr	r6, [pc, #408]	@ (8015a80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80158e6:	f7f8 f8a7 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80158ea:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 80158ee:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80158f2:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 80158f6:	6830      	ldr	r0, [r6, #0]
 80158f8:	fb11 2103 	smlabb	r1, r1, r3, r2
 80158fc:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8015900:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8015904:	4489      	add	r9, r1
 8015906:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801590a:	440a      	add	r2, r1
 801590c:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8015910:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8015914:	4413      	add	r3, r2
 8015916:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801591a:	6803      	ldr	r3, [r0, #0]
 801591c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801591e:	4798      	blx	r3
 8015920:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8015924:	6830      	ldr	r0, [r6, #0]
 8015926:	d01d      	beq.n	8015964 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8015928:	2200      	movs	r2, #0
 801592a:	6801      	ldr	r1, [r0, #0]
 801592c:	b2a4      	uxth	r4, r4
 801592e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8015932:	b2ad      	uxth	r5, r5
 8015934:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8015938:	220b      	movs	r2, #11
 801593a:	9207      	str	r2, [sp, #28]
 801593c:	883a      	ldrh	r2, [r7, #0]
 801593e:	9502      	str	r5, [sp, #8]
 8015940:	9206      	str	r2, [sp, #24]
 8015942:	2201      	movs	r2, #1
 8015944:	9401      	str	r4, [sp, #4]
 8015946:	e9cd a204 	strd	sl, r2, [sp, #16]
 801594a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801594e:	9203      	str	r2, [sp, #12]
 8015950:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8015954:	9200      	str	r2, [sp, #0]
 8015956:	4642      	mov	r2, r8
 8015958:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 801595a:	4649      	mov	r1, r9
 801595c:	47a0      	blx	r4
 801595e:	b013      	add	sp, #76	@ 0x4c
 8015960:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015964:	6803      	ldr	r3, [r0, #0]
 8015966:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015968:	4798      	blx	r3
 801596a:	883b      	ldrh	r3, [r7, #0]
 801596c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8015970:	f04f 0e04 	mov.w	lr, #4
 8015974:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8015978:	435d      	muls	r5, r3
 801597a:	fb03 1202 	mla	r2, r3, r2, r1
 801597e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015982:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8015986:	920c      	str	r2, [sp, #48]	@ 0x30
 8015988:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801598c:	1b12      	subs	r2, r2, r4
 801598e:	920d      	str	r2, [sp, #52]	@ 0x34
 8015990:	0062      	lsls	r2, r4, #1
 8015992:	1b1c      	subs	r4, r3, r4
 8015994:	920a      	str	r2, [sp, #40]	@ 0x28
 8015996:	0063      	lsls	r3, r4, #1
 8015998:	930b      	str	r3, [sp, #44]	@ 0x2c
 801599a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801599c:	4298      	cmp	r0, r3
 801599e:	d266      	bcs.n	8015a6e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 80159a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80159a2:	eb00 0b03 	add.w	fp, r0, r3
 80159a6:	4558      	cmp	r0, fp
 80159a8:	d25c      	bcs.n	8015a64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 80159aa:	f819 3b01 	ldrb.w	r3, [r9], #1
 80159ae:	fb1e e303 	smlabb	r3, lr, r3, lr
 80159b2:	f858 2003 	ldr.w	r2, [r8, r3]
 80159b6:	0e11      	lsrs	r1, r2, #24
 80159b8:	d012      	beq.n	80159e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80159ba:	29ff      	cmp	r1, #255	@ 0xff
 80159bc:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80159c0:	d110      	bne.n	80159e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80159c2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80159c6:	d10d      	bne.n	80159e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80159c8:	0953      	lsrs	r3, r2, #5
 80159ca:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 80159ce:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80159d2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80159d6:	f027 0707 	bic.w	r7, r7, #7
 80159da:	431f      	orrs	r7, r3
 80159dc:	433a      	orrs	r2, r7
 80159de:	8002      	strh	r2, [r0, #0]
 80159e0:	3002      	adds	r0, #2
 80159e2:	e7e0      	b.n	80159a6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 80159e4:	fb0a f101 	mul.w	r1, sl, r1
 80159e8:	8806      	ldrh	r6, [r0, #0]
 80159ea:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80159ee:	b2d2      	uxtb	r2, r2
 80159f0:	1c4b      	adds	r3, r1, #1
 80159f2:	1235      	asrs	r5, r6, #8
 80159f4:	10f4      	asrs	r4, r6, #3
 80159f6:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80159fa:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80159fe:	00f6      	lsls	r6, r6, #3
 8015a00:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8015a04:	121b      	asrs	r3, r3, #8
 8015a06:	b2f6      	uxtb	r6, r6
 8015a08:	b299      	uxth	r1, r3
 8015a0a:	43db      	mvns	r3, r3
 8015a0c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8015a10:	fb1c fc01 	smulbb	ip, ip, r1
 8015a14:	b2db      	uxtb	r3, r3
 8015a16:	fb12 f201 	smulbb	r2, r2, r1
 8015a1a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8015a1e:	fb05 c503 	mla	r5, r5, r3, ip
 8015a22:	b2ff      	uxtb	r7, r7
 8015a24:	fb06 2203 	mla	r2, r6, r3, r2
 8015a28:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8015a2c:	fb17 f701 	smulbb	r7, r7, r1
 8015a30:	b2ad      	uxth	r5, r5
 8015a32:	b292      	uxth	r2, r2
 8015a34:	fb04 7403 	mla	r4, r4, r3, r7
 8015a38:	f105 0c01 	add.w	ip, r5, #1
 8015a3c:	1c57      	adds	r7, r2, #1
 8015a3e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8015a42:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8015a46:	b2a4      	uxth	r4, r4
 8015a48:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8015a4c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015a50:	433d      	orrs	r5, r7
 8015a52:	1c67      	adds	r7, r4, #1
 8015a54:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8015a58:	0964      	lsrs	r4, r4, #5
 8015a5a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8015a5e:	4325      	orrs	r5, r4
 8015a60:	8005      	strh	r5, [r0, #0]
 8015a62:	e7bd      	b.n	80159e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8015a64:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015a66:	4418      	add	r0, r3
 8015a68:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015a6a:	4499      	add	r9, r3
 8015a6c:	e795      	b.n	801599a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8015a6e:	4b04      	ldr	r3, [pc, #16]	@ (8015a80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8015a70:	6818      	ldr	r0, [r3, #0]
 8015a72:	6803      	ldr	r3, [r0, #0]
 8015a74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015a76:	4798      	blx	r3
 8015a78:	e771      	b.n	801595e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8015a7a:	bf00      	nop
 8015a7c:	200150a6 	.word	0x200150a6
 8015a80:	200150ac 	.word	0x200150ac

08015a84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8015a84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a88:	b087      	sub	sp, #28
 8015a8a:	4680      	mov	r8, r0
 8015a8c:	460d      	mov	r5, r1
 8015a8e:	4614      	mov	r4, r2
 8015a90:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8015a94:	2e00      	cmp	r6, #0
 8015a96:	f000 80b9 	beq.w	8015c0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8015a9a:	6810      	ldr	r0, [r2, #0]
 8015a9c:	af02      	add	r7, sp, #8
 8015a9e:	6851      	ldr	r1, [r2, #4]
 8015aa0:	c703      	stmia	r7!, {r0, r1}
 8015aa2:	6818      	ldr	r0, [r3, #0]
 8015aa4:	af04      	add	r7, sp, #16
 8015aa6:	6859      	ldr	r1, [r3, #4]
 8015aa8:	c703      	stmia	r7!, {r0, r1}
 8015aaa:	a802      	add	r0, sp, #8
 8015aac:	f7f7 ff9c 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015ab0:	4621      	mov	r1, r4
 8015ab2:	a804      	add	r0, sp, #16
 8015ab4:	f7f7 ffc0 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015ab8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015abc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015ac0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8015ac4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8015ac8:	fb14 2103 	smlabb	r1, r4, r3, r2
 8015acc:	eb08 0401 	add.w	r4, r8, r1
 8015ad0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015ad4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8015ad8:	440a      	add	r2, r1
 8015ada:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8015ade:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015ae2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015ae6:	4413      	add	r3, r2
 8015ae8:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015aec:	4b49      	ldr	r3, [pc, #292]	@ (8015c14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8015aee:	6818      	ldr	r0, [r3, #0]
 8015af0:	6803      	ldr	r3, [r0, #0]
 8015af2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015af4:	4798      	blx	r3
 8015af6:	4b48      	ldr	r3, [pc, #288]	@ (8015c18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8015af8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8015afc:	2eff      	cmp	r6, #255	@ 0xff
 8015afe:	881a      	ldrh	r2, [r3, #0]
 8015b00:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8015b04:	fb02 c101 	mla	r1, r2, r1, ip
 8015b08:	fb02 f207 	mul.w	r2, r2, r7
 8015b0c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015b10:	f105 0104 	add.w	r1, r5, #4
 8015b14:	461d      	mov	r5, r3
 8015b16:	d05a      	beq.n	8015bce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8015b18:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8015b1c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8015b20:	b2b6      	uxth	r6, r6
 8015b22:	9301      	str	r3, [sp, #4]
 8015b24:	fa1f fe8e 	uxth.w	lr, lr
 8015b28:	4282      	cmp	r2, r0
 8015b2a:	d96a      	bls.n	8015c02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8015b2c:	eb00 0b0a 	add.w	fp, r0, sl
 8015b30:	4583      	cmp	fp, r0
 8015b32:	d940      	bls.n	8015bb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8015b34:	8805      	ldrh	r5, [r0, #0]
 8015b36:	f814 3b01 	ldrb.w	r3, [r4], #1
 8015b3a:	122f      	asrs	r7, r5, #8
 8015b3c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8015b40:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015b44:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015b48:	00ed      	lsls	r5, r5, #3
 8015b4a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015b4e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8015b52:	fb17 f70e 	smulbb	r7, r7, lr
 8015b56:	b2ed      	uxtb	r5, r5
 8015b58:	fb19 f90e 	smulbb	r9, r9, lr
 8015b5c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015b60:	fb15 f50e 	smulbb	r5, r5, lr
 8015b64:	fb0c 7c06 	mla	ip, ip, r6, r7
 8015b68:	10df      	asrs	r7, r3, #3
 8015b6a:	00db      	lsls	r3, r3, #3
 8015b6c:	fa1f fc8c 	uxth.w	ip, ip
 8015b70:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015b74:	b2db      	uxtb	r3, r3
 8015b76:	fb07 9706 	mla	r7, r7, r6, r9
 8015b7a:	f10c 0901 	add.w	r9, ip, #1
 8015b7e:	fb03 5306 	mla	r3, r3, r6, r5
 8015b82:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8015b86:	b29b      	uxth	r3, r3
 8015b88:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8015b8c:	b2bf      	uxth	r7, r7
 8015b8e:	f103 0c01 	add.w	ip, r3, #1
 8015b92:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015b96:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015b9a:	ea4c 0c09 	orr.w	ip, ip, r9
 8015b9e:	f107 0901 	add.w	r9, r7, #1
 8015ba2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8015ba6:	097f      	lsrs	r7, r7, #5
 8015ba8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8015bac:	ea4c 0c07 	orr.w	ip, ip, r7
 8015bb0:	f820 cb02 	strh.w	ip, [r0], #2
 8015bb4:	e7bc      	b.n	8015b30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8015bb6:	9b01      	ldr	r3, [sp, #4]
 8015bb8:	881b      	ldrh	r3, [r3, #0]
 8015bba:	eba3 0308 	sub.w	r3, r3, r8
 8015bbe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015bc2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8015bc6:	eba3 0308 	sub.w	r3, r3, r8
 8015bca:	441c      	add	r4, r3
 8015bcc:	e7ac      	b.n	8015b28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8015bce:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8015bd2:	4282      	cmp	r2, r0
 8015bd4:	d915      	bls.n	8015c02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8015bd6:	eb00 060a 	add.w	r6, r0, sl
 8015bda:	4286      	cmp	r6, r0
 8015bdc:	d906      	bls.n	8015bec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8015bde:	f814 3b01 	ldrb.w	r3, [r4], #1
 8015be2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8015be6:	f820 3b02 	strh.w	r3, [r0], #2
 8015bea:	e7f6      	b.n	8015bda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8015bec:	882b      	ldrh	r3, [r5, #0]
 8015bee:	eba3 0308 	sub.w	r3, r3, r8
 8015bf2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015bf6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8015bfa:	eba3 0308 	sub.w	r3, r3, r8
 8015bfe:	441c      	add	r4, r3
 8015c00:	e7e7      	b.n	8015bd2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8015c02:	4b04      	ldr	r3, [pc, #16]	@ (8015c14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8015c04:	6818      	ldr	r0, [r3, #0]
 8015c06:	6803      	ldr	r3, [r0, #0]
 8015c08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015c0a:	4798      	blx	r3
 8015c0c:	b007      	add	sp, #28
 8015c0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c12:	bf00      	nop
 8015c14:	200150ac 	.word	0x200150ac
 8015c18:	200150a6 	.word	0x200150a6

08015c1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8015c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c20:	b091      	sub	sp, #68	@ 0x44
 8015c22:	4680      	mov	r8, r0
 8015c24:	460f      	mov	r7, r1
 8015c26:	4614      	mov	r4, r2
 8015c28:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8015c2c:	2d00      	cmp	r5, #0
 8015c2e:	d051      	beq.n	8015cd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8015c30:	6810      	ldr	r0, [r2, #0]
 8015c32:	ae0c      	add	r6, sp, #48	@ 0x30
 8015c34:	6851      	ldr	r1, [r2, #4]
 8015c36:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8015e38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8015c3a:	c603      	stmia	r6!, {r0, r1}
 8015c3c:	6818      	ldr	r0, [r3, #0]
 8015c3e:	ae0e      	add	r6, sp, #56	@ 0x38
 8015c40:	6859      	ldr	r1, [r3, #4]
 8015c42:	c603      	stmia	r6!, {r0, r1}
 8015c44:	a80c      	add	r0, sp, #48	@ 0x30
 8015c46:	f7f7 fecf 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015c4a:	4621      	mov	r1, r4
 8015c4c:	a80e      	add	r0, sp, #56	@ 0x38
 8015c4e:	f7f7 fef3 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015c52:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8015c56:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8015c5a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8015c5e:	f8d9 0000 	ldr.w	r0, [r9]
 8015c62:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015c66:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8015c6a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8015c6e:	eb08 0401 	add.w	r4, r8, r1
 8015c72:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8015c76:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8015e3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8015c7a:	440a      	add	r2, r1
 8015c7c:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8015c80:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8015c84:	4413      	add	r3, r2
 8015c86:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8015c8a:	6803      	ldr	r3, [r0, #0]
 8015c8c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015c8e:	4798      	blx	r3
 8015c90:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8015c94:	f8d9 0000 	ldr.w	r0, [r9]
 8015c98:	d01f      	beq.n	8015cda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8015c9a:	2200      	movs	r2, #0
 8015c9c:	6801      	ldr	r1, [r0, #0]
 8015c9e:	b2b6      	uxth	r6, r6
 8015ca0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8015ca4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8015ca8:	220b      	movs	r2, #11
 8015caa:	9207      	str	r2, [sp, #28]
 8015cac:	f8b8 2000 	ldrh.w	r2, [r8]
 8015cb0:	9601      	str	r6, [sp, #4]
 8015cb2:	9206      	str	r2, [sp, #24]
 8015cb4:	2201      	movs	r2, #1
 8015cb6:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8015cba:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8015cbe:	9203      	str	r2, [sp, #12]
 8015cc0:	fa1f f28a 	uxth.w	r2, sl
 8015cc4:	9202      	str	r2, [sp, #8]
 8015cc6:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8015cca:	9200      	str	r2, [sp, #0]
 8015ccc:	463a      	mov	r2, r7
 8015cce:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 8015cd0:	4621      	mov	r1, r4
 8015cd2:	47a8      	blx	r5
 8015cd4:	b011      	add	sp, #68	@ 0x44
 8015cd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015cda:	6803      	ldr	r3, [r0, #0]
 8015cdc:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8015ce0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015ce2:	4798      	blx	r3
 8015ce4:	f8b8 2000 	ldrh.w	r2, [r8]
 8015ce8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8015cec:	2dff      	cmp	r5, #255	@ 0xff
 8015cee:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8015cf2:	fb0a fa02 	mul.w	sl, sl, r2
 8015cf6:	fb02 1303 	mla	r3, r2, r3, r1
 8015cfa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015cfe:	d062      	beq.n	8015dc6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8015d00:	ea6f 0c05 	mvn.w	ip, r5
 8015d04:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8015d08:	b2ad      	uxth	r5, r5
 8015d0a:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8015d0e:	fa5f fc8c 	uxtb.w	ip, ip
 8015d12:	930a      	str	r3, [sp, #40]	@ 0x28
 8015d14:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015d16:	4298      	cmp	r0, r3
 8015d18:	f080 8085 	bcs.w	8015e26 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8015d1c:	eb00 0b09 	add.w	fp, r0, r9
 8015d20:	4558      	cmp	r0, fp
 8015d22:	d246      	bcs.n	8015db2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8015d24:	f814 eb01 	ldrb.w	lr, [r4], #1
 8015d28:	2303      	movs	r3, #3
 8015d2a:	2204      	movs	r2, #4
 8015d2c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8015d30:	8803      	ldrh	r3, [r0, #0]
 8015d32:	eb07 0a0e 	add.w	sl, r7, lr
 8015d36:	1219      	asrs	r1, r3, #8
 8015d38:	10da      	asrs	r2, r3, #3
 8015d3a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8015d3e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8015d42:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8015d46:	00db      	lsls	r3, r3, #3
 8015d48:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8015d4c:	fb18 f805 	smulbb	r8, r8, r5
 8015d50:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8015d54:	fb1e fe05 	smulbb	lr, lr, r5
 8015d58:	b2db      	uxtb	r3, r3
 8015d5a:	fb01 810c 	mla	r1, r1, ip, r8
 8015d5e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8015d62:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8015d66:	fb18 f805 	smulbb	r8, r8, r5
 8015d6a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8015d6e:	b289      	uxth	r1, r1
 8015d70:	fb02 820c 	mla	r2, r2, ip, r8
 8015d74:	fb03 e30c 	mla	r3, r3, ip, lr
 8015d78:	f101 0801 	add.w	r8, r1, #1
 8015d7c:	b292      	uxth	r2, r2
 8015d7e:	b29b      	uxth	r3, r3
 8015d80:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8015d84:	f102 0801 	add.w	r8, r2, #1
 8015d88:	f103 0e01 	add.w	lr, r3, #1
 8015d8c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8015d90:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8015d94:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8015d98:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015d9c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8015da0:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8015da4:	ea4e 0101 	orr.w	r1, lr, r1
 8015da8:	ea41 0108 	orr.w	r1, r1, r8
 8015dac:	f820 1b02 	strh.w	r1, [r0], #2
 8015db0:	e7b6      	b.n	8015d20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8015db2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015db4:	881b      	ldrh	r3, [r3, #0]
 8015db6:	1b9b      	subs	r3, r3, r6
 8015db8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015dbc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8015dc0:	1b9b      	subs	r3, r3, r6
 8015dc2:	441c      	add	r4, r3
 8015dc4:	e7a6      	b.n	8015d14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8015dc6:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8015dca:	2203      	movs	r2, #3
 8015dcc:	2504      	movs	r5, #4
 8015dce:	4919      	ldr	r1, [pc, #100]	@ (8015e34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8015dd0:	4550      	cmp	r0, sl
 8015dd2:	d228      	bcs.n	8015e26 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8015dd4:	eb00 0c09 	add.w	ip, r0, r9
 8015dd8:	4560      	cmp	r0, ip
 8015dda:	4623      	mov	r3, r4
 8015ddc:	d219      	bcs.n	8015e12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8015dde:	f893 e000 	ldrb.w	lr, [r3]
 8015de2:	3401      	adds	r4, #1
 8015de4:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8015de8:	eb07 0b0e 	add.w	fp, r7, lr
 8015dec:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8015df0:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8015df4:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015df8:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8015dfc:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8015e00:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8015e04:	ea43 030b 	orr.w	r3, r3, fp
 8015e08:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8015e0c:	f820 3b02 	strh.w	r3, [r0], #2
 8015e10:	e7e2      	b.n	8015dd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8015e12:	f8b8 3000 	ldrh.w	r3, [r8]
 8015e16:	1b9b      	subs	r3, r3, r6
 8015e18:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015e1c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8015e20:	1b9b      	subs	r3, r3, r6
 8015e22:	441c      	add	r4, r3
 8015e24:	e7d4      	b.n	8015dd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8015e26:	4b04      	ldr	r3, [pc, #16]	@ (8015e38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8015e28:	6818      	ldr	r0, [r3, #0]
 8015e2a:	6803      	ldr	r3, [r0, #0]
 8015e2c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015e2e:	4798      	blx	r3
 8015e30:	e750      	b.n	8015cd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8015e32:	bf00      	nop
 8015e34:	fffff800 	.word	0xfffff800
 8015e38:	200150ac 	.word	0x200150ac
 8015e3c:	200150a6 	.word	0x200150a6

08015e40 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8015e40:	b4f0      	push	{r4, r5, r6, r7}
 8015e42:	460c      	mov	r4, r1
 8015e44:	4611      	mov	r1, r2
 8015e46:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8015e4a:	461a      	mov	r2, r3
 8015e4c:	780f      	ldrb	r7, [r1, #0]
 8015e4e:	9b04      	ldr	r3, [sp, #16]
 8015e50:	2f01      	cmp	r7, #1
 8015e52:	784e      	ldrb	r6, [r1, #1]
 8015e54:	d038      	beq.n	8015ec8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8015e56:	d31f      	bcc.n	8015e98 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8015e58:	2f02      	cmp	r7, #2
 8015e5a:	d14d      	bne.n	8015ef8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8015e5c:	2e03      	cmp	r6, #3
 8015e5e:	d84b      	bhi.n	8015ef8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8015e60:	e8df f006 	tbb	[pc, r6]
 8015e64:	17140702 	.word	0x17140702
 8015e68:	9504      	str	r5, [sp, #16]
 8015e6a:	4620      	mov	r0, r4
 8015e6c:	bcf0      	pop	{r4, r5, r6, r7}
 8015e6e:	f7ff be09 	b.w	8015a84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8015e72:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8015e74:	2800      	cmp	r0, #0
 8015e76:	d03f      	beq.n	8015ef8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8015e78:	6806      	ldr	r6, [r0, #0]
 8015e7a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8015e7e:	68b5      	ldr	r5, [r6, #8]
 8015e80:	4613      	mov	r3, r2
 8015e82:	46ac      	mov	ip, r5
 8015e84:	460a      	mov	r2, r1
 8015e86:	4621      	mov	r1, r4
 8015e88:	bcf0      	pop	{r4, r5, r6, r7}
 8015e8a:	4760      	bx	ip
 8015e8c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8015e90:	e7f0      	b.n	8015e74 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8015e92:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8015e96:	e7ed      	b.n	8015e74 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8015e98:	2e03      	cmp	r6, #3
 8015e9a:	d82d      	bhi.n	8015ef8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8015e9c:	e8df f006 	tbb	[pc, r6]
 8015ea0:	110e0702 	.word	0x110e0702
 8015ea4:	9504      	str	r5, [sp, #16]
 8015ea6:	4620      	mov	r0, r4
 8015ea8:	bcf0      	pop	{r4, r5, r6, r7}
 8015eaa:	f7ff bd05 	b.w	80158b8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8015eae:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8015eb0:	b310      	cbz	r0, 8015ef8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8015eb2:	6806      	ldr	r6, [r0, #0]
 8015eb4:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8015eb8:	68f5      	ldr	r5, [r6, #12]
 8015eba:	e7e1      	b.n	8015e80 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8015ebc:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8015ec0:	e7f6      	b.n	8015eb0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8015ec2:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8015ec6:	e7f3      	b.n	8015eb0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8015ec8:	2e03      	cmp	r6, #3
 8015eca:	d815      	bhi.n	8015ef8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8015ecc:	e8df f006 	tbb	[pc, r6]
 8015ed0:	110e0702 	.word	0x110e0702
 8015ed4:	9504      	str	r5, [sp, #16]
 8015ed6:	4620      	mov	r0, r4
 8015ed8:	bcf0      	pop	{r4, r5, r6, r7}
 8015eda:	f7ff be9f 	b.w	8015c1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8015ede:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8015ee0:	b150      	cbz	r0, 8015ef8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8015ee2:	6806      	ldr	r6, [r0, #0]
 8015ee4:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8015ee8:	6935      	ldr	r5, [r6, #16]
 8015eea:	e7c9      	b.n	8015e80 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8015eec:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8015ef0:	e7f6      	b.n	8015ee0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8015ef2:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8015ef6:	e7f3      	b.n	8015ee0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8015ef8:	bcf0      	pop	{r4, r5, r6, r7}
 8015efa:	4770      	bx	lr

08015efc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8015efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f00:	b087      	sub	sp, #28
 8015f02:	4604      	mov	r4, r0
 8015f04:	460e      	mov	r6, r1
 8015f06:	6810      	ldr	r0, [r2, #0]
 8015f08:	6851      	ldr	r1, [r2, #4]
 8015f0a:	ad02      	add	r5, sp, #8
 8015f0c:	4617      	mov	r7, r2
 8015f0e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 8015f12:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 8016144 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8015f16:	c503      	stmia	r5!, {r0, r1}
 8015f18:	6818      	ldr	r0, [r3, #0]
 8015f1a:	ad04      	add	r5, sp, #16
 8015f1c:	6859      	ldr	r1, [r3, #4]
 8015f1e:	c503      	stmia	r5!, {r0, r1}
 8015f20:	a802      	add	r0, sp, #8
 8015f22:	f7f7 fd61 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015f26:	4639      	mov	r1, r7
 8015f28:	a804      	add	r0, sp, #16
 8015f2a:	f7f7 fd85 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015f2e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015f32:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015f36:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8015f3a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8015f3e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015f42:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8015f46:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8015f4a:	440e      	add	r6, r1
 8015f4c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015f50:	440a      	add	r2, r1
 8015f52:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015f56:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015f5a:	4413      	add	r3, r2
 8015f5c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015f60:	4b77      	ldr	r3, [pc, #476]	@ (8016140 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8015f62:	6818      	ldr	r0, [r3, #0]
 8015f64:	6803      	ldr	r3, [r0, #0]
 8015f66:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015f68:	4798      	blx	r3
 8015f6a:	f8b9 b000 	ldrh.w	fp, [r9]
 8015f6e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015f72:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8015f76:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015f7a:	fb05 f50b 	mul.w	r5, r5, fp
 8015f7e:	fb0b 2303 	mla	r3, fp, r3, r2
 8015f82:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015f86:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8015f8a:	9300      	str	r3, [sp, #0]
 8015f8c:	d069      	beq.n	8016062 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8015f8e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8015f92:	4558      	cmp	r0, fp
 8015f94:	f080 80cc 	bcs.w	8016130 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8015f98:	9b00      	ldr	r3, [sp, #0]
 8015f9a:	4631      	mov	r1, r6
 8015f9c:	18c3      	adds	r3, r0, r3
 8015f9e:	9301      	str	r3, [sp, #4]
 8015fa0:	9b01      	ldr	r3, [sp, #4]
 8015fa2:	4298      	cmp	r0, r3
 8015fa4:	d24f      	bcs.n	8016046 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8015fa6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8015faa:	2a00      	cmp	r2, #0
 8015fac:	d048      	beq.n	8016040 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8015fae:	fb0a f202 	mul.w	r2, sl, r2
 8015fb2:	1c53      	adds	r3, r2, #1
 8015fb4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015fb8:	121b      	asrs	r3, r3, #8
 8015fba:	d041      	beq.n	8016040 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8015fbc:	8802      	ldrh	r2, [r0, #0]
 8015fbe:	b29e      	uxth	r6, r3
 8015fc0:	f8b4 c000 	ldrh.w	ip, [r4]
 8015fc4:	43db      	mvns	r3, r3
 8015fc6:	1215      	asrs	r5, r2, #8
 8015fc8:	b2db      	uxtb	r3, r3
 8015fca:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015fce:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8015fd2:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8015fd6:	fb15 f503 	smulbb	r5, r5, r3
 8015fda:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015fde:	00d2      	lsls	r2, r2, #3
 8015fe0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8015fe4:	fb07 5706 	mla	r7, r7, r6, r5
 8015fe8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8015fec:	b2d2      	uxtb	r2, r2
 8015fee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015ff2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015ff6:	fb1e fe03 	smulbb	lr, lr, r3
 8015ffa:	b2bf      	uxth	r7, r7
 8015ffc:	fb12 f203 	smulbb	r2, r2, r3
 8016000:	fa5f fc8c 	uxtb.w	ip, ip
 8016004:	fb05 e506 	mla	r5, r5, r6, lr
 8016008:	f107 0e01 	add.w	lr, r7, #1
 801600c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8016010:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8016014:	fa1f fc8c 	uxth.w	ip, ip
 8016018:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801601c:	b2ad      	uxth	r5, r5
 801601e:	f10c 0701 	add.w	r7, ip, #1
 8016022:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016026:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801602a:	ea47 070e 	orr.w	r7, r7, lr
 801602e:	f105 0e01 	add.w	lr, r5, #1
 8016032:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8016036:	096d      	lsrs	r5, r5, #5
 8016038:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801603c:	432f      	orrs	r7, r5
 801603e:	8007      	strh	r7, [r0, #0]
 8016040:	3002      	adds	r0, #2
 8016042:	3402      	adds	r4, #2
 8016044:	e7ac      	b.n	8015fa0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8016046:	f8b9 3000 	ldrh.w	r3, [r9]
 801604a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801604e:	eba3 0308 	sub.w	r3, r3, r8
 8016052:	eba6 0608 	sub.w	r6, r6, r8
 8016056:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801605a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801605e:	440e      	add	r6, r1
 8016060:	e797      	b.n	8015f92 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8016062:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8016066:	42a8      	cmp	r0, r5
 8016068:	d262      	bcs.n	8016130 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801606a:	9b00      	ldr	r3, [sp, #0]
 801606c:	4631      	mov	r1, r6
 801606e:	eb00 0b03 	add.w	fp, r0, r3
 8016072:	4558      	cmp	r0, fp
 8016074:	d24e      	bcs.n	8016114 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8016076:	f811 3b01 	ldrb.w	r3, [r1], #1
 801607a:	b12b      	cbz	r3, 8016088 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801607c:	2bff      	cmp	r3, #255	@ 0xff
 801607e:	f8b4 e000 	ldrh.w	lr, [r4]
 8016082:	d104      	bne.n	801608e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8016084:	f8a0 e000 	strh.w	lr, [r0]
 8016088:	3002      	adds	r0, #2
 801608a:	3402      	adds	r4, #2
 801608c:	e7f1      	b.n	8016072 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801608e:	8802      	ldrh	r2, [r0, #0]
 8016090:	b29f      	uxth	r7, r3
 8016092:	43db      	mvns	r3, r3
 8016094:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016098:	1216      	asrs	r6, r2, #8
 801609a:	b2db      	uxtb	r3, r3
 801609c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80160a0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80160a4:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80160a8:	00d2      	lsls	r2, r2, #3
 80160aa:	fb16 f603 	smulbb	r6, r6, r3
 80160ae:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80160b2:	b2d2      	uxtb	r2, r2
 80160b4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80160b8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80160bc:	fb1a fa03 	smulbb	sl, sl, r3
 80160c0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80160c4:	fa1f fc8c 	uxth.w	ip, ip
 80160c8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80160cc:	fb12 f303 	smulbb	r3, r2, r3
 80160d0:	fa5f fe8e 	uxtb.w	lr, lr
 80160d4:	fb06 a607 	mla	r6, r6, r7, sl
 80160d8:	f10c 0201 	add.w	r2, ip, #1
 80160dc:	fb0e 3307 	mla	r3, lr, r7, r3
 80160e0:	b2b6      	uxth	r6, r6
 80160e2:	b29b      	uxth	r3, r3
 80160e4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80160e8:	f106 0a01 	add.w	sl, r6, #1
 80160ec:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 80160f0:	f103 0c01 	add.w	ip, r3, #1
 80160f4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80160f8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80160fc:	0976      	lsrs	r6, r6, #5
 80160fe:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016102:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8016106:	ea4c 0c02 	orr.w	ip, ip, r2
 801610a:	ea4c 0c06 	orr.w	ip, ip, r6
 801610e:	f8a0 c000 	strh.w	ip, [r0]
 8016112:	e7b9      	b.n	8016088 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8016114:	f8b9 3000 	ldrh.w	r3, [r9]
 8016118:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801611c:	eba3 0308 	sub.w	r3, r3, r8
 8016120:	eba6 0608 	sub.w	r6, r6, r8
 8016124:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016128:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801612c:	440e      	add	r6, r1
 801612e:	e79a      	b.n	8016066 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8016130:	4b03      	ldr	r3, [pc, #12]	@ (8016140 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8016132:	6818      	ldr	r0, [r3, #0]
 8016134:	6803      	ldr	r3, [r0, #0]
 8016136:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016138:	4798      	blx	r3
 801613a:	b007      	add	sp, #28
 801613c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016140:	200150ac 	.word	0x200150ac
 8016144:	200150a6 	.word	0x200150a6

08016148 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8016148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801614c:	b089      	sub	sp, #36	@ 0x24
 801614e:	4682      	mov	sl, r0
 8016150:	460f      	mov	r7, r1
 8016152:	4691      	mov	r9, r2
 8016154:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8016158:	4698      	mov	r8, r3
 801615a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801615c:	2e00      	cmp	r6, #0
 801615e:	d03d      	beq.n	80161dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8016160:	4608      	mov	r0, r1
 8016162:	f7fa fe49 	bl	8010df8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016166:	4605      	mov	r5, r0
 8016168:	4638      	mov	r0, r7
 801616a:	f7fa fe79 	bl	8010e60 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801616e:	f8ad 000e 	strh.w	r0, [sp, #14]
 8016172:	4638      	mov	r0, r7
 8016174:	f8ad 9008 	strh.w	r9, [sp, #8]
 8016178:	f8ad 500c 	strh.w	r5, [sp, #12]
 801617c:	f8ad 800a 	strh.w	r8, [sp, #10]
 8016180:	f7fa ff26 	bl	8010fd0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016184:	4605      	mov	r5, r0
 8016186:	4638      	mov	r0, r7
 8016188:	f7fa ff52 	bl	8011030 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801618c:	4681      	mov	r9, r0
 801618e:	4638      	mov	r0, r7
 8016190:	f7fa ffa2 	bl	80110d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016194:	280b      	cmp	r0, #11
 8016196:	d821      	bhi.n	80161dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8016198:	e8df f000 	tbb	[pc, r0]
 801619c:	2006aebe 	.word	0x2006aebe
 80161a0:	20202020 	.word	0x20202020
 80161a4:	b5202020 	.word	0xb5202020
 80161a8:	4bb0      	ldr	r3, [pc, #704]	@ (801646c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80161aa:	6818      	ldr	r0, [r3, #0]
 80161ac:	6803      	ldr	r3, [r0, #0]
 80161ae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80161b0:	4798      	blx	r3
 80161b2:	2eff      	cmp	r6, #255	@ 0xff
 80161b4:	d101      	bne.n	80161ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80161b6:	0683      	lsls	r3, r0, #26
 80161b8:	d506      	bpl.n	80161c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 80161ba:	4633      	mov	r3, r6
 80161bc:	4622      	mov	r2, r4
 80161be:	a902      	add	r1, sp, #8
 80161c0:	4628      	mov	r0, r5
 80161c2:	f7ff f907 	bl	80153d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80161c6:	e009      	b.n	80161dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80161c8:	4638      	mov	r0, r7
 80161ca:	f7fa fec9 	bl	8010f60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80161ce:	b940      	cbnz	r0, 80161e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 80161d0:	4623      	mov	r3, r4
 80161d2:	aa02      	add	r2, sp, #8
 80161d4:	4629      	mov	r1, r5
 80161d6:	4650      	mov	r0, sl
 80161d8:	f7ff f9e2 	bl	80155a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80161dc:	b009      	add	sp, #36	@ 0x24
 80161de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80161e2:	f10d 0818 	add.w	r8, sp, #24
 80161e6:	4639      	mov	r1, r7
 80161e8:	af04      	add	r7, sp, #16
 80161ea:	4640      	mov	r0, r8
 80161ec:	f7fa fe6c 	bl	8010ec8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80161f0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80161f4:	e887 0003 	stmia.w	r7, {r0, r1}
 80161f8:	4638      	mov	r0, r7
 80161fa:	4621      	mov	r1, r4
 80161fc:	f7f4 fa00 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 8016200:	4638      	mov	r0, r7
 8016202:	f7f4 fa40 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016206:	2800      	cmp	r0, #0
 8016208:	d1d7      	bne.n	80161ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801620a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801620e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016212:	4293      	cmp	r3, r2
 8016214:	dd12      	ble.n	801623c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 8016216:	1a9b      	subs	r3, r3, r2
 8016218:	f9b4 0000 	ldrsh.w	r0, [r4]
 801621c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016220:	f8ad 0018 	strh.w	r0, [sp, #24]
 8016224:	4628      	mov	r0, r5
 8016226:	f8ad 201a 	strh.w	r2, [sp, #26]
 801622a:	4642      	mov	r2, r8
 801622c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016230:	a902      	add	r1, sp, #8
 8016232:	f8ad 301e 	strh.w	r3, [sp, #30]
 8016236:	4633      	mov	r3, r6
 8016238:	f7ff f8cc 	bl	80153d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801623c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8016240:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016244:	4293      	cmp	r3, r2
 8016246:	dd12      	ble.n	801626e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8016248:	1a9b      	subs	r3, r3, r2
 801624a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801624e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8016252:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016256:	4642      	mov	r2, r8
 8016258:	f8ad 001a 	strh.w	r0, [sp, #26]
 801625c:	4628      	mov	r0, r5
 801625e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016262:	23ff      	movs	r3, #255	@ 0xff
 8016264:	f8ad 101e 	strh.w	r1, [sp, #30]
 8016268:	a902      	add	r1, sp, #8
 801626a:	f7ff f8b3 	bl	80153d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801626e:	463b      	mov	r3, r7
 8016270:	aa02      	add	r2, sp, #8
 8016272:	4629      	mov	r1, r5
 8016274:	4650      	mov	r0, sl
 8016276:	f7ff f993 	bl	80155a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801627a:	88a2      	ldrh	r2, [r4, #4]
 801627c:	8823      	ldrh	r3, [r4, #0]
 801627e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8016282:	4413      	add	r3, r2
 8016284:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016288:	440a      	add	r2, r1
 801628a:	b29b      	uxth	r3, r3
 801628c:	b292      	uxth	r2, r2
 801628e:	b218      	sxth	r0, r3
 8016290:	b211      	sxth	r1, r2
 8016292:	4288      	cmp	r0, r1
 8016294:	dd12      	ble.n	80162bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8016296:	1a9b      	subs	r3, r3, r2
 8016298:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801629c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80162a0:	4642      	mov	r2, r8
 80162a2:	f8ad 1018 	strh.w	r1, [sp, #24]
 80162a6:	a902      	add	r1, sp, #8
 80162a8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80162ac:	23ff      	movs	r3, #255	@ 0xff
 80162ae:	f8ad 001e 	strh.w	r0, [sp, #30]
 80162b2:	4628      	mov	r0, r5
 80162b4:	f8ad 601a 	strh.w	r6, [sp, #26]
 80162b8:	f7ff f88c 	bl	80153d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80162bc:	88e2      	ldrh	r2, [r4, #6]
 80162be:	8863      	ldrh	r3, [r4, #2]
 80162c0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80162c4:	4413      	add	r3, r2
 80162c6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80162ca:	440a      	add	r2, r1
 80162cc:	b29b      	uxth	r3, r3
 80162ce:	b292      	uxth	r2, r2
 80162d0:	b218      	sxth	r0, r3
 80162d2:	b211      	sxth	r1, r2
 80162d4:	4288      	cmp	r0, r1
 80162d6:	dd81      	ble.n	80161dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80162d8:	1a9b      	subs	r3, r3, r2
 80162da:	f9b4 6000 	ldrsh.w	r6, [r4]
 80162de:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80162e2:	4642      	mov	r2, r8
 80162e4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80162e8:	23ff      	movs	r3, #255	@ 0xff
 80162ea:	f8ad 6018 	strh.w	r6, [sp, #24]
 80162ee:	f8ad 101a 	strh.w	r1, [sp, #26]
 80162f2:	f8ad 001c 	strh.w	r0, [sp, #28]
 80162f6:	e762      	b.n	80161be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 80162f8:	4633      	mov	r3, r6
 80162fa:	4622      	mov	r2, r4
 80162fc:	a902      	add	r1, sp, #8
 80162fe:	4628      	mov	r0, r5
 8016300:	f7ff f9be 	bl	8015680 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8016304:	e76a      	b.n	80161dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8016306:	e9cd 4600 	strd	r4, r6, [sp]
 801630a:	ab02      	add	r3, sp, #8
 801630c:	464a      	mov	r2, r9
 801630e:	4629      	mov	r1, r5
 8016310:	4650      	mov	r0, sl
 8016312:	f7ff fd95 	bl	8015e40 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8016316:	e761      	b.n	80161dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8016318:	4638      	mov	r0, r7
 801631a:	f7fa fe21 	bl	8010f60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801631e:	b950      	cbnz	r0, 8016336 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8016320:	f8da 3000 	ldr.w	r3, [sl]
 8016324:	aa02      	add	r2, sp, #8
 8016326:	4629      	mov	r1, r5
 8016328:	e9cd 6000 	strd	r6, r0, [sp]
 801632c:	4650      	mov	r0, sl
 801632e:	68de      	ldr	r6, [r3, #12]
 8016330:	4623      	mov	r3, r4
 8016332:	47b0      	blx	r6
 8016334:	e752      	b.n	80161dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8016336:	f10d 0818 	add.w	r8, sp, #24
 801633a:	4639      	mov	r1, r7
 801633c:	af04      	add	r7, sp, #16
 801633e:	4640      	mov	r0, r8
 8016340:	f7fa fdc2 	bl	8010ec8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8016344:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016348:	e887 0003 	stmia.w	r7, {r0, r1}
 801634c:	4638      	mov	r0, r7
 801634e:	4621      	mov	r1, r4
 8016350:	f7f4 f956 	bl	800a600 <_ZN8touchgfx4RectaNERKS0_>
 8016354:	4638      	mov	r0, r7
 8016356:	f7f4 f996 	bl	800a686 <_ZNK8touchgfx4Rect7isEmptyEv>
 801635a:	b138      	cbz	r0, 801636c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801635c:	4623      	mov	r3, r4
 801635e:	9600      	str	r6, [sp, #0]
 8016360:	aa02      	add	r2, sp, #8
 8016362:	4649      	mov	r1, r9
 8016364:	4628      	mov	r0, r5
 8016366:	f7ff fdc9 	bl	8015efc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801636a:	e737      	b.n	80161dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801636c:	f8da 3000 	ldr.w	r3, [sl]
 8016370:	aa02      	add	r2, sp, #8
 8016372:	4629      	mov	r1, r5
 8016374:	e9cd 6000 	strd	r6, r0, [sp]
 8016378:	4650      	mov	r0, sl
 801637a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801637e:	463b      	mov	r3, r7
 8016380:	47d8      	blx	fp
 8016382:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016386:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801638a:	4293      	cmp	r3, r2
 801638c:	dd13      	ble.n	80163b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801638e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016392:	1a9b      	subs	r3, r3, r2
 8016394:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016398:	f8ad 0018 	strh.w	r0, [sp, #24]
 801639c:	4628      	mov	r0, r5
 801639e:	f8ad 201a 	strh.w	r2, [sp, #26]
 80163a2:	aa02      	add	r2, sp, #8
 80163a4:	f8ad 101c 	strh.w	r1, [sp, #28]
 80163a8:	4649      	mov	r1, r9
 80163aa:	f8ad 301e 	strh.w	r3, [sp, #30]
 80163ae:	4643      	mov	r3, r8
 80163b0:	9600      	str	r6, [sp, #0]
 80163b2:	f7ff fda3 	bl	8015efc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80163b6:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80163ba:	f9b4 2000 	ldrsh.w	r2, [r4]
 80163be:	4293      	cmp	r3, r2
 80163c0:	dd13      	ble.n	80163ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 80163c2:	1a9b      	subs	r3, r3, r2
 80163c4:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80163c8:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80163cc:	f8ad 2018 	strh.w	r2, [sp, #24]
 80163d0:	aa02      	add	r2, sp, #8
 80163d2:	f8ad 001a 	strh.w	r0, [sp, #26]
 80163d6:	4628      	mov	r0, r5
 80163d8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80163dc:	4643      	mov	r3, r8
 80163de:	f8ad 101e 	strh.w	r1, [sp, #30]
 80163e2:	4649      	mov	r1, r9
 80163e4:	9600      	str	r6, [sp, #0]
 80163e6:	f7ff fd89 	bl	8015efc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80163ea:	88a2      	ldrh	r2, [r4, #4]
 80163ec:	8823      	ldrh	r3, [r4, #0]
 80163ee:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80163f2:	4413      	add	r3, r2
 80163f4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80163f8:	440a      	add	r2, r1
 80163fa:	b29b      	uxth	r3, r3
 80163fc:	b292      	uxth	r2, r2
 80163fe:	b218      	sxth	r0, r3
 8016400:	b211      	sxth	r1, r2
 8016402:	4288      	cmp	r0, r1
 8016404:	dd13      	ble.n	801642e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 8016406:	1a9b      	subs	r3, r3, r2
 8016408:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801640c:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8016410:	aa02      	add	r2, sp, #8
 8016412:	f8ad 1018 	strh.w	r1, [sp, #24]
 8016416:	4649      	mov	r1, r9
 8016418:	f8ad 301c 	strh.w	r3, [sp, #28]
 801641c:	4643      	mov	r3, r8
 801641e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016422:	4628      	mov	r0, r5
 8016424:	9600      	str	r6, [sp, #0]
 8016426:	f8ad 701a 	strh.w	r7, [sp, #26]
 801642a:	f7ff fd67 	bl	8015efc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801642e:	88e2      	ldrh	r2, [r4, #6]
 8016430:	8863      	ldrh	r3, [r4, #2]
 8016432:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8016436:	4413      	add	r3, r2
 8016438:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801643c:	440a      	add	r2, r1
 801643e:	b29b      	uxth	r3, r3
 8016440:	b292      	uxth	r2, r2
 8016442:	b218      	sxth	r0, r3
 8016444:	b211      	sxth	r1, r2
 8016446:	4288      	cmp	r0, r1
 8016448:	f77f aec8 	ble.w	80161dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801644c:	f9b4 7000 	ldrsh.w	r7, [r4]
 8016450:	1a9b      	subs	r3, r3, r2
 8016452:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016456:	f8ad 301e 	strh.w	r3, [sp, #30]
 801645a:	4643      	mov	r3, r8
 801645c:	f8ad 7018 	strh.w	r7, [sp, #24]
 8016460:	f8ad 101a 	strh.w	r1, [sp, #26]
 8016464:	f8ad 001c 	strh.w	r0, [sp, #28]
 8016468:	9600      	str	r6, [sp, #0]
 801646a:	e779      	b.n	8016360 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801646c:	200150ac 	.word	0x200150ac

08016470 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8016470:	b180      	cbz	r0, 8016494 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8016472:	2903      	cmp	r1, #3
 8016474:	d81c      	bhi.n	80164b0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8016476:	e8df f001 	tbb	[pc, r1]
 801647a:	1d02      	.short	0x1d02
 801647c:	1f08      	.short	0x1f08
 801647e:	4b10      	ldr	r3, [pc, #64]	@ (80164c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8016480:	8818      	ldrh	r0, [r3, #0]
 8016482:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8016486:	4240      	negs	r0, r0
 8016488:	4770      	bx	lr
 801648a:	4b0d      	ldr	r3, [pc, #52]	@ (80164c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801648c:	8818      	ldrh	r0, [r3, #0]
 801648e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8016492:	4770      	bx	lr
 8016494:	2903      	cmp	r1, #3
 8016496:	d80b      	bhi.n	80164b0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8016498:	a301      	add	r3, pc, #4	@ (adr r3, 80164a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801649a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801649e:	bf00      	nop
 80164a0:	080164b5 	.word	0x080164b5
 80164a4:	0801648b 	.word	0x0801648b
 80164a8:	080164b9 	.word	0x080164b9
 80164ac:	0801647f 	.word	0x0801647f
 80164b0:	2000      	movs	r0, #0
 80164b2:	4770      	bx	lr
 80164b4:	2001      	movs	r0, #1
 80164b6:	4770      	bx	lr
 80164b8:	f04f 30ff 	mov.w	r0, #4294967295
 80164bc:	4770      	bx	lr
 80164be:	bf00      	nop
 80164c0:	200150a6 	.word	0x200150a6

080164c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80164c4:	b180      	cbz	r0, 80164e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80164c6:	2903      	cmp	r1, #3
 80164c8:	d81c      	bhi.n	8016504 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80164ca:	e8df f001 	tbb	[pc, r1]
 80164ce:	021d      	.short	0x021d
 80164d0:	071f      	.short	0x071f
 80164d2:	4b10      	ldr	r3, [pc, #64]	@ (8016514 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80164d4:	8818      	ldrh	r0, [r3, #0]
 80164d6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80164da:	4770      	bx	lr
 80164dc:	4b0d      	ldr	r3, [pc, #52]	@ (8016514 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80164de:	8818      	ldrh	r0, [r3, #0]
 80164e0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80164e4:	4240      	negs	r0, r0
 80164e6:	4770      	bx	lr
 80164e8:	2903      	cmp	r1, #3
 80164ea:	d80b      	bhi.n	8016504 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80164ec:	a301      	add	r3, pc, #4	@ (adr r3, 80164f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80164ee:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80164f2:	bf00      	nop
 80164f4:	080164d3 	.word	0x080164d3
 80164f8:	0801650d 	.word	0x0801650d
 80164fc:	080164dd 	.word	0x080164dd
 8016500:	08016509 	.word	0x08016509
 8016504:	2000      	movs	r0, #0
 8016506:	4770      	bx	lr
 8016508:	2001      	movs	r0, #1
 801650a:	4770      	bx	lr
 801650c:	f04f 30ff 	mov.w	r0, #4294967295
 8016510:	4770      	bx	lr
 8016512:	bf00      	nop
 8016514:	200150a6 	.word	0x200150a6

08016518 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8016518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801651c:	b099      	sub	sp, #100	@ 0x64
 801651e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016520:	a914      	add	r1, sp, #80	@ 0x50
 8016522:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8016526:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801652a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801652e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 8016532:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8016536:	e881 000c 	stmia.w	r1, {r2, r3}
 801653a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801653e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8016542:	9309      	str	r3, [sp, #36]	@ 0x24
 8016544:	f891 900d 	ldrb.w	r9, [r1, #13]
 8016548:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801654c:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8016550:	9310      	str	r3, [sp, #64]	@ 0x40
 8016552:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8016556:	930c      	str	r3, [sp, #48]	@ 0x30
 8016558:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801655c:	798f      	ldrb	r7, [r1, #6]
 801655e:	431f      	orrs	r7, r3
 8016560:	f000 8195 	beq.w	801688e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8016564:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8016568:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801656c:	f891 9007 	ldrb.w	r9, [r1, #7]
 8016570:	ea59 0903 	orrs.w	r9, r9, r3
 8016574:	f000 818b 	beq.w	801688e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8016578:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801657c:	b29b      	uxth	r3, r3
 801657e:	2d00      	cmp	r5, #0
 8016580:	f000 812e 	beq.w	80167e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8016584:	1aed      	subs	r5, r5, r3
 8016586:	b2ad      	uxth	r5, r5
 8016588:	042b      	lsls	r3, r5, #16
 801658a:	d502      	bpl.n	8016592 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801658c:	1b64      	subs	r4, r4, r5
 801658e:	2500      	movs	r5, #0
 8016590:	b224      	sxth	r4, r4
 8016592:	f9b2 1000 	ldrsh.w	r1, [r2]
 8016596:	a814      	add	r0, sp, #80	@ 0x50
 8016598:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801659c:	428c      	cmp	r4, r1
 801659e:	b28b      	uxth	r3, r1
 80165a0:	bfbf      	itttt	lt
 80165a2:	18ed      	addlt	r5, r5, r3
 80165a4:	1b2c      	sublt	r4, r5, r4
 80165a6:	b2a5      	uxthlt	r5, r4
 80165a8:	460c      	movlt	r4, r1
 80165aa:	8891      	ldrh	r1, [r2, #4]
 80165ac:	440b      	add	r3, r1
 80165ae:	4621      	mov	r1, r4
 80165b0:	b21b      	sxth	r3, r3
 80165b2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80165b4:	88d3      	ldrh	r3, [r2, #6]
 80165b6:	8852      	ldrh	r2, [r2, #2]
 80165b8:	4413      	add	r3, r2
 80165ba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80165bc:	b21b      	sxth	r3, r3
 80165be:	930d      	str	r3, [sp, #52]	@ 0x34
 80165c0:	4bbd      	ldr	r3, [pc, #756]	@ (80168b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80165c2:	f893 b000 	ldrb.w	fp, [r3]
 80165c6:	f10b 3cff 	add.w	ip, fp, #4294967295
 80165ca:	f1dc 0300 	rsbs	r3, ip, #0
 80165ce:	eb43 030c 	adc.w	r3, r3, ip
 80165d2:	930e      	str	r3, [sp, #56]	@ 0x38
 80165d4:	4653      	mov	r3, sl
 80165d6:	f7f7 f87c 	bl	800d6d2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80165da:	4621      	mov	r1, r4
 80165dc:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 80165e0:	4653      	mov	r3, sl
 80165e2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80165e4:	a814      	add	r0, sp, #80	@ 0x50
 80165e6:	f7f7 f891 	bl	800d70c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80165ea:	a918      	add	r1, sp, #96	@ 0x60
 80165ec:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80165f0:	a817      	add	r0, sp, #92	@ 0x5c
 80165f2:	f7f7 f9b7 	bl	800d964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80165f6:	f1ba 0f00 	cmp.w	sl, #0
 80165fa:	f040 80f4 	bne.w	80167e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80165fe:	f1bb 0f01 	cmp.w	fp, #1
 8016602:	f040 80f8 	bne.w	80167f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8016606:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016608:	2b00      	cmp	r3, #0
 801660a:	f040 8145 	bne.w	8016898 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801660e:	b2ba      	uxth	r2, r7
 8016610:	b905      	cbnz	r5, 8016614 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8016612:	b16e      	cbz	r6, 8016630 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8016614:	fb06 5302 	mla	r3, r6, r2, r5
 8016618:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801661a:	4631      	mov	r1, r6
 801661c:	fb08 f303 	mul.w	r3, r8, r3
 8016620:	f003 0607 	and.w	r6, r3, #7
 8016624:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8016628:	9328      	str	r3, [sp, #160]	@ 0xa0
 801662a:	eba9 0301 	sub.w	r3, r9, r1
 801662e:	930a      	str	r3, [sp, #40]	@ 0x28
 8016630:	4651      	mov	r1, sl
 8016632:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8016634:	f7ff ff1c 	bl	8016470 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8016638:	4681      	mov	r9, r0
 801663a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801663c:	f7ff ff42 	bl	80164c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8016640:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016642:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016644:	4683      	mov	fp, r0
 8016646:	eba3 0a01 	sub.w	sl, r3, r1
 801664a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801664c:	459a      	cmp	sl, r3
 801664e:	bfa8      	it	ge
 8016650:	469a      	movge	sl, r3
 8016652:	f1ba 0f00 	cmp.w	sl, #0
 8016656:	f340 811a 	ble.w	801688e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801665a:	1b64      	subs	r4, r4, r5
 801665c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801665e:	1b1c      	subs	r4, r3, r4
 8016660:	42bc      	cmp	r4, r7
 8016662:	bfd4      	ite	le
 8016664:	ebc5 0504 	rsble	r5, r5, r4
 8016668:	ebc5 0507 	rsbgt	r5, r5, r7
 801666c:	2d00      	cmp	r5, #0
 801666e:	f340 810e 	ble.w	801688e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8016672:	1b52      	subs	r2, r2, r5
 8016674:	fb08 f302 	mul.w	r3, r8, r2
 8016678:	930f      	str	r3, [sp, #60]	@ 0x3c
 801667a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801667c:	2b00      	cmp	r3, #0
 801667e:	f040 8116 	bne.w	80168ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8016682:	4b8e      	ldr	r3, [pc, #568]	@ (80168bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8016684:	6818      	ldr	r0, [r3, #0]
 8016686:	6803      	ldr	r3, [r0, #0]
 8016688:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801668a:	4798      	blx	r3
 801668c:	2301      	movs	r3, #1
 801668e:	4a8c      	ldr	r2, [pc, #560]	@ (80168c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8016690:	fa03 f308 	lsl.w	r3, r3, r8
 8016694:	8811      	ldrh	r1, [r2, #0]
 8016696:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801669a:	3b01      	subs	r3, #1
 801669c:	b2db      	uxtb	r3, r3
 801669e:	930e      	str	r3, [sp, #56]	@ 0x38
 80166a0:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 80166a4:	fb01 2303 	mla	r3, r1, r3, r2
 80166a8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80166ac:	930a      	str	r3, [sp, #40]	@ 0x28
 80166ae:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80166b0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80166b4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80166b6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80166b8:	0a19      	lsrs	r1, r3, #8
 80166ba:	b2cb      	uxtb	r3, r1
 80166bc:	9312      	str	r3, [sp, #72]	@ 0x48
 80166be:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80166c0:	b2db      	uxtb	r3, r3
 80166c2:	9311      	str	r3, [sp, #68]	@ 0x44
 80166c4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80166c6:	095a      	lsrs	r2, r3, #5
 80166c8:	4b7e      	ldr	r3, [pc, #504]	@ (80168c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 80166ca:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80166ce:	400b      	ands	r3, r1
 80166d0:	4313      	orrs	r3, r2
 80166d2:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 80166d4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80166d8:	4313      	orrs	r3, r2
 80166da:	b29b      	uxth	r3, r3
 80166dc:	9310      	str	r3, [sp, #64]	@ 0x40
 80166de:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80166e0:	781a      	ldrb	r2, [r3, #0]
 80166e2:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80166e6:	fb05 b919 	mls	r9, r5, r9, fp
 80166ea:	4132      	asrs	r2, r6
 80166ec:	fb03 fb05 	mul.w	fp, r3, r5
 80166f0:	930d      	str	r3, [sp, #52]	@ 0x34
 80166f2:	b2d2      	uxtb	r2, r2
 80166f4:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80166f8:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80166fc:	f0c0 80f5 	bcc.w	80168ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8016700:	46ae      	mov	lr, r5
 8016702:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 8016706:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801670a:	f0c0 80dd 	bcc.w	80168c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801670e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016710:	4013      	ands	r3, r2
 8016712:	d055      	beq.n	80167c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8016714:	20ff      	movs	r0, #255	@ 0xff
 8016716:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016718:	fb90 f1f1 	sdiv	r1, r0, r1
 801671c:	434b      	muls	r3, r1
 801671e:	2bfe      	cmp	r3, #254	@ 0xfe
 8016720:	dd03      	ble.n	801672a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8016722:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016724:	4281      	cmp	r1, r0
 8016726:	f000 80c4 	beq.w	80168b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 801672a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801672c:	f8bc 4000 	ldrh.w	r4, [ip]
 8016730:	fb11 f303 	smulbb	r3, r1, r3
 8016734:	1220      	asrs	r0, r4, #8
 8016736:	b29b      	uxth	r3, r3
 8016738:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801673c:	1c59      	adds	r1, r3, #1
 801673e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8016742:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8016746:	10e1      	asrs	r1, r4, #3
 8016748:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801674c:	00e4      	lsls	r4, r4, #3
 801674e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016752:	b29f      	uxth	r7, r3
 8016754:	43db      	mvns	r3, r3
 8016756:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801675a:	b2db      	uxtb	r3, r3
 801675c:	b2e4      	uxtb	r4, r4
 801675e:	9309      	str	r3, [sp, #36]	@ 0x24
 8016760:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8016762:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8016766:	fb13 f907 	smulbb	r9, r3, r7
 801676a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801676c:	fb00 9003 	mla	r0, r0, r3, r9
 8016770:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8016772:	fb13 f907 	smulbb	r9, r3, r7
 8016776:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016778:	b280      	uxth	r0, r0
 801677a:	fb01 9103 	mla	r1, r1, r3, r9
 801677e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8016780:	fb13 f707 	smulbb	r7, r3, r7
 8016784:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016786:	b289      	uxth	r1, r1
 8016788:	fb04 7403 	mla	r4, r4, r3, r7
 801678c:	1c43      	adds	r3, r0, #1
 801678e:	b2a4      	uxth	r4, r4
 8016790:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016794:	f104 0901 	add.w	r9, r4, #1
 8016798:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801679c:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80167a0:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80167a4:	ea49 0000 	orr.w	r0, r9, r0
 80167a8:	f101 0901 	add.w	r9, r1, #1
 80167ac:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80167b0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80167b4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80167b8:	ea40 0009 	orr.w	r0, r0, r9
 80167bc:	f8ac 0000 	strh.w	r0, [ip]
 80167c0:	4446      	add	r6, r8
 80167c2:	b2b6      	uxth	r6, r6
 80167c4:	2e07      	cmp	r6, #7
 80167c6:	bf89      	itett	hi
 80167c8:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 80167ca:	fa42 f208 	asrls.w	r2, r2, r8
 80167ce:	2600      	movhi	r6, #0
 80167d0:	785a      	ldrbhi	r2, [r3, #1]
 80167d2:	bf8a      	itet	hi
 80167d4:	3301      	addhi	r3, #1
 80167d6:	b2d2      	uxtbls	r2, r2
 80167d8:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 80167da:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80167dc:	449c      	add	ip, r3
 80167de:	e792      	b.n	8016706 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 80167e0:	441c      	add	r4, r3
 80167e2:	b224      	sxth	r4, r4
 80167e4:	e6d5      	b.n	8016592 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80167e6:	f1ba 0f01 	cmp.w	sl, #1
 80167ea:	f47f af0c 	bne.w	8016606 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80167ee:	f1bb 0f01 	cmp.w	fp, #1
 80167f2:	f47f af08 	bne.w	8016606 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80167f6:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 80168bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 80167fa:	f8db 0000 	ldr.w	r0, [fp]
 80167fe:	6803      	ldr	r3, [r0, #0]
 8016800:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016802:	4798      	blx	r3
 8016804:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8016808:	465a      	mov	r2, fp
 801680a:	d006      	beq.n	801681a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801680c:	f1b8 0f04 	cmp.w	r8, #4
 8016810:	d140      	bne.n	8016894 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8016812:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016814:	3300      	adds	r3, #0
 8016816:	bf18      	it	ne
 8016818:	2301      	movne	r3, #1
 801681a:	0580      	lsls	r0, r0, #22
 801681c:	d56e      	bpl.n	80168fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801681e:	f1b8 0f08 	cmp.w	r8, #8
 8016822:	d16b      	bne.n	80168fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8016824:	2b00      	cmp	r3, #0
 8016826:	bf0c      	ite	eq
 8016828:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 801682c:	f44f 7180 	movne.w	r1, #256	@ 0x100
 8016830:	2d00      	cmp	r5, #0
 8016832:	f47f aee8 	bne.w	8016606 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016836:	2e00      	cmp	r6, #0
 8016838:	f47f aee5 	bne.w	8016606 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801683c:	19e3      	adds	r3, r4, r7
 801683e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8016840:	4283      	cmp	r3, r0
 8016842:	f73f aee0 	bgt.w	8016606 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016846:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016848:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801684a:	444b      	add	r3, r9
 801684c:	4283      	cmp	r3, r0
 801684e:	f73f aeda 	bgt.w	8016606 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016852:	b2bf      	uxth	r7, r7
 8016854:	f1b8 0f08 	cmp.w	r8, #8
 8016858:	6810      	ldr	r0, [r2, #0]
 801685a:	f04f 0500 	mov.w	r5, #0
 801685e:	bf18      	it	ne
 8016860:	3701      	addne	r7, #1
 8016862:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 8016866:	6804      	ldr	r4, [r0, #0]
 8016868:	bf18      	it	ne
 801686a:	f027 0701 	bicne.w	r7, r7, #1
 801686e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8016872:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8016876:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016878:	bf18      	it	ne
 801687a:	b2bf      	uxthne	r7, r7
 801687c:	9104      	str	r1, [sp, #16]
 801687e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8016880:	e9cd 7900 	strd	r7, r9, [sp]
 8016884:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8016888:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801688a:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 801688c:	47a0      	blx	r4
 801688e:	b019      	add	sp, #100	@ 0x64
 8016890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016894:	2300      	movs	r3, #0
 8016896:	e7c0      	b.n	801681a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8016898:	2208      	movs	r2, #8
 801689a:	fb92 f3f8 	sdiv	r3, r2, r8
 801689e:	1e5a      	subs	r2, r3, #1
 80168a0:	443a      	add	r2, r7
 80168a2:	fb92 f2f3 	sdiv	r2, r2, r3
 80168a6:	fb12 f203 	smulbb	r2, r2, r3
 80168aa:	b292      	uxth	r2, r2
 80168ac:	e6b0      	b.n	8016610 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 80168ae:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80168b0:	e6ec      	b.n	801668c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 80168b2:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80168b4:	e782      	b.n	80167bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 80168b6:	bf00      	nop
 80168b8:	200150a4 	.word	0x200150a4
 80168bc:	200150ac 	.word	0x200150ac
 80168c0:	200150a6 	.word	0x200150a6
 80168c4:	00fff800 	.word	0x00fff800
 80168c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80168ca:	b153      	cbz	r3, 80168e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 80168cc:	441e      	add	r6, r3
 80168ce:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80168d0:	b2b6      	uxth	r6, r6
 80168d2:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 80168d6:	f006 0607 	and.w	r6, r6, #7
 80168da:	781a      	ldrb	r2, [r3, #0]
 80168dc:	9328      	str	r3, [sp, #160]	@ 0xa0
 80168de:	4132      	asrs	r2, r6
 80168e0:	b2d2      	uxtb	r2, r2
 80168e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80168e4:	445b      	add	r3, fp
 80168e6:	930a      	str	r3, [sp, #40]	@ 0x28
 80168e8:	e706      	b.n	80166f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 80168ea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80168ec:	2b00      	cmp	r3, #0
 80168ee:	d1ce      	bne.n	801688e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80168f0:	4b05      	ldr	r3, [pc, #20]	@ (8016908 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 80168f2:	6818      	ldr	r0, [r3, #0]
 80168f4:	6803      	ldr	r3, [r0, #0]
 80168f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80168f8:	4798      	blx	r3
 80168fa:	e7c8      	b.n	801688e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80168fc:	2b00      	cmp	r3, #0
 80168fe:	f43f ae82 	beq.w	8016606 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016902:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8016906:	e793      	b.n	8016830 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8016908:	200150ac 	.word	0x200150ac

0801690c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801690c:	b538      	push	{r3, r4, r5, lr}
 801690e:	4c15      	ldr	r4, [pc, #84]	@ (8016964 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8016910:	4605      	mov	r5, r0
 8016912:	7823      	ldrb	r3, [r4, #0]
 8016914:	f3bf 8f5b 	dmb	ish
 8016918:	07da      	lsls	r2, r3, #31
 801691a:	d40b      	bmi.n	8016934 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801691c:	4620      	mov	r0, r4
 801691e:	f007 fedd 	bl	801e6dc <__cxa_guard_acquire>
 8016922:	b138      	cbz	r0, 8016934 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8016924:	4620      	mov	r0, r4
 8016926:	f007 fee5 	bl	801e6f4 <__cxa_guard_release>
 801692a:	4a0f      	ldr	r2, [pc, #60]	@ (8016968 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801692c:	490f      	ldr	r1, [pc, #60]	@ (801696c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801692e:	4810      	ldr	r0, [pc, #64]	@ (8016970 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8016930:	f007 fecd 	bl	801e6ce <__aeabi_atexit>
 8016934:	4c0f      	ldr	r4, [pc, #60]	@ (8016974 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8016936:	7823      	ldrb	r3, [r4, #0]
 8016938:	f3bf 8f5b 	dmb	ish
 801693c:	07db      	lsls	r3, r3, #31
 801693e:	d40b      	bmi.n	8016958 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8016940:	4620      	mov	r0, r4
 8016942:	f007 fecb 	bl	801e6dc <__cxa_guard_acquire>
 8016946:	b138      	cbz	r0, 8016958 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8016948:	4620      	mov	r0, r4
 801694a:	f007 fed3 	bl	801e6f4 <__cxa_guard_release>
 801694e:	4a06      	ldr	r2, [pc, #24]	@ (8016968 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8016950:	4909      	ldr	r1, [pc, #36]	@ (8016978 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8016952:	480a      	ldr	r0, [pc, #40]	@ (801697c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8016954:	f007 febb 	bl	801e6ce <__aeabi_atexit>
 8016958:	4b05      	ldr	r3, [pc, #20]	@ (8016970 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801695a:	616b      	str	r3, [r5, #20]
 801695c:	4b07      	ldr	r3, [pc, #28]	@ (801697c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801695e:	61ab      	str	r3, [r5, #24]
 8016960:	bd38      	pop	{r3, r4, r5, pc}
 8016962:	bf00      	nop
 8016964:	20015184 	.word	0x20015184
 8016968:	20000000 	.word	0x20000000
 801696c:	080136ef 	.word	0x080136ef
 8016970:	20000090 	.word	0x20000090
 8016974:	20015188 	.word	0x20015188
 8016978:	080136ed 	.word	0x080136ed
 801697c:	20000094 	.word	0x20000094

08016980 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8016980:	b538      	push	{r3, r4, r5, lr}
 8016982:	4c15      	ldr	r4, [pc, #84]	@ (80169d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8016984:	4605      	mov	r5, r0
 8016986:	7823      	ldrb	r3, [r4, #0]
 8016988:	f3bf 8f5b 	dmb	ish
 801698c:	07da      	lsls	r2, r3, #31
 801698e:	d40b      	bmi.n	80169a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8016990:	4620      	mov	r0, r4
 8016992:	f007 fea3 	bl	801e6dc <__cxa_guard_acquire>
 8016996:	b138      	cbz	r0, 80169a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8016998:	4620      	mov	r0, r4
 801699a:	f007 feab 	bl	801e6f4 <__cxa_guard_release>
 801699e:	4a0f      	ldr	r2, [pc, #60]	@ (80169dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80169a0:	490f      	ldr	r1, [pc, #60]	@ (80169e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80169a2:	4810      	ldr	r0, [pc, #64]	@ (80169e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80169a4:	f007 fe93 	bl	801e6ce <__aeabi_atexit>
 80169a8:	4c0f      	ldr	r4, [pc, #60]	@ (80169e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80169aa:	7823      	ldrb	r3, [r4, #0]
 80169ac:	f3bf 8f5b 	dmb	ish
 80169b0:	07db      	lsls	r3, r3, #31
 80169b2:	d40b      	bmi.n	80169cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80169b4:	4620      	mov	r0, r4
 80169b6:	f007 fe91 	bl	801e6dc <__cxa_guard_acquire>
 80169ba:	b138      	cbz	r0, 80169cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80169bc:	4620      	mov	r0, r4
 80169be:	f007 fe99 	bl	801e6f4 <__cxa_guard_release>
 80169c2:	4a06      	ldr	r2, [pc, #24]	@ (80169dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80169c4:	4909      	ldr	r1, [pc, #36]	@ (80169ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80169c6:	480a      	ldr	r0, [pc, #40]	@ (80169f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80169c8:	f007 fe81 	bl	801e6ce <__aeabi_atexit>
 80169cc:	4b05      	ldr	r3, [pc, #20]	@ (80169e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80169ce:	60eb      	str	r3, [r5, #12]
 80169d0:	4b07      	ldr	r3, [pc, #28]	@ (80169f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80169d2:	612b      	str	r3, [r5, #16]
 80169d4:	bd38      	pop	{r3, r4, r5, pc}
 80169d6:	bf00      	nop
 80169d8:	2001515c 	.word	0x2001515c
 80169dc:	20000000 	.word	0x20000000
 80169e0:	080136f3 	.word	0x080136f3
 80169e4:	20000068 	.word	0x20000068
 80169e8:	20015160 	.word	0x20015160
 80169ec:	080136f1 	.word	0x080136f1
 80169f0:	2000006c 	.word	0x2000006c

080169f4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80169f4:	b510      	push	{r4, lr}
 80169f6:	4604      	mov	r4, r0
 80169f8:	f7ff ff88 	bl	801690c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80169fc:	4620      	mov	r0, r4
 80169fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016a02:	f7ff bfbd 	b.w	8016980 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08016a08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8016a08:	b538      	push	{r3, r4, r5, lr}
 8016a0a:	4c15      	ldr	r4, [pc, #84]	@ (8016a60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8016a0c:	4605      	mov	r5, r0
 8016a0e:	7823      	ldrb	r3, [r4, #0]
 8016a10:	f3bf 8f5b 	dmb	ish
 8016a14:	07da      	lsls	r2, r3, #31
 8016a16:	d40b      	bmi.n	8016a30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8016a18:	4620      	mov	r0, r4
 8016a1a:	f007 fe5f 	bl	801e6dc <__cxa_guard_acquire>
 8016a1e:	b138      	cbz	r0, 8016a30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8016a20:	4620      	mov	r0, r4
 8016a22:	f007 fe67 	bl	801e6f4 <__cxa_guard_release>
 8016a26:	4a0f      	ldr	r2, [pc, #60]	@ (8016a64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8016a28:	490f      	ldr	r1, [pc, #60]	@ (8016a68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8016a2a:	4810      	ldr	r0, [pc, #64]	@ (8016a6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8016a2c:	f007 fe4f 	bl	801e6ce <__aeabi_atexit>
 8016a30:	4c0f      	ldr	r4, [pc, #60]	@ (8016a70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8016a32:	7823      	ldrb	r3, [r4, #0]
 8016a34:	f3bf 8f5b 	dmb	ish
 8016a38:	07db      	lsls	r3, r3, #31
 8016a3a:	d40b      	bmi.n	8016a54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8016a3c:	4620      	mov	r0, r4
 8016a3e:	f007 fe4d 	bl	801e6dc <__cxa_guard_acquire>
 8016a42:	b138      	cbz	r0, 8016a54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8016a44:	4620      	mov	r0, r4
 8016a46:	f007 fe55 	bl	801e6f4 <__cxa_guard_release>
 8016a4a:	4a06      	ldr	r2, [pc, #24]	@ (8016a64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8016a4c:	4909      	ldr	r1, [pc, #36]	@ (8016a74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8016a4e:	480a      	ldr	r0, [pc, #40]	@ (8016a78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8016a50:	f007 fe3d 	bl	801e6ce <__aeabi_atexit>
 8016a54:	4b05      	ldr	r3, [pc, #20]	@ (8016a6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8016a56:	626b      	str	r3, [r5, #36]	@ 0x24
 8016a58:	4b07      	ldr	r3, [pc, #28]	@ (8016a78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8016a5a:	62ab      	str	r3, [r5, #40]	@ 0x28
 8016a5c:	bd38      	pop	{r3, r4, r5, pc}
 8016a5e:	bf00      	nop
 8016a60:	2001518c 	.word	0x2001518c
 8016a64:	20000000 	.word	0x20000000
 8016a68:	080136e7 	.word	0x080136e7
 8016a6c:	20000098 	.word	0x20000098
 8016a70:	20015190 	.word	0x20015190
 8016a74:	080136e5 	.word	0x080136e5
 8016a78:	2000009c 	.word	0x2000009c

08016a7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8016a7c:	b538      	push	{r3, r4, r5, lr}
 8016a7e:	4c15      	ldr	r4, [pc, #84]	@ (8016ad4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8016a80:	4605      	mov	r5, r0
 8016a82:	7823      	ldrb	r3, [r4, #0]
 8016a84:	f3bf 8f5b 	dmb	ish
 8016a88:	07da      	lsls	r2, r3, #31
 8016a8a:	d40b      	bmi.n	8016aa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8016a8c:	4620      	mov	r0, r4
 8016a8e:	f007 fe25 	bl	801e6dc <__cxa_guard_acquire>
 8016a92:	b138      	cbz	r0, 8016aa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8016a94:	4620      	mov	r0, r4
 8016a96:	f007 fe2d 	bl	801e6f4 <__cxa_guard_release>
 8016a9a:	4a0f      	ldr	r2, [pc, #60]	@ (8016ad8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8016a9c:	490f      	ldr	r1, [pc, #60]	@ (8016adc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8016a9e:	4810      	ldr	r0, [pc, #64]	@ (8016ae0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8016aa0:	f007 fe15 	bl	801e6ce <__aeabi_atexit>
 8016aa4:	4c0f      	ldr	r4, [pc, #60]	@ (8016ae4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8016aa6:	7823      	ldrb	r3, [r4, #0]
 8016aa8:	f3bf 8f5b 	dmb	ish
 8016aac:	07db      	lsls	r3, r3, #31
 8016aae:	d40b      	bmi.n	8016ac8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8016ab0:	4620      	mov	r0, r4
 8016ab2:	f007 fe13 	bl	801e6dc <__cxa_guard_acquire>
 8016ab6:	b138      	cbz	r0, 8016ac8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8016ab8:	4620      	mov	r0, r4
 8016aba:	f007 fe1b 	bl	801e6f4 <__cxa_guard_release>
 8016abe:	4a06      	ldr	r2, [pc, #24]	@ (8016ad8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8016ac0:	4909      	ldr	r1, [pc, #36]	@ (8016ae8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8016ac2:	480a      	ldr	r0, [pc, #40]	@ (8016aec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8016ac4:	f007 fe03 	bl	801e6ce <__aeabi_atexit>
 8016ac8:	4b05      	ldr	r3, [pc, #20]	@ (8016ae0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8016aca:	61eb      	str	r3, [r5, #28]
 8016acc:	4b07      	ldr	r3, [pc, #28]	@ (8016aec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8016ace:	622b      	str	r3, [r5, #32]
 8016ad0:	bd38      	pop	{r3, r4, r5, pc}
 8016ad2:	bf00      	nop
 8016ad4:	20015164 	.word	0x20015164
 8016ad8:	20000000 	.word	0x20000000
 8016adc:	080136eb 	.word	0x080136eb
 8016ae0:	20000070 	.word	0x20000070
 8016ae4:	20015168 	.word	0x20015168
 8016ae8:	080136e9 	.word	0x080136e9
 8016aec:	20000074 	.word	0x20000074

08016af0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8016af0:	b510      	push	{r4, lr}
 8016af2:	4604      	mov	r4, r0
 8016af4:	f7ff ff88 	bl	8016a08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8016af8:	4620      	mov	r0, r4
 8016afa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016afe:	f7ff bfbd 	b.w	8016a7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08016b04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8016b04:	b538      	push	{r3, r4, r5, lr}
 8016b06:	4c15      	ldr	r4, [pc, #84]	@ (8016b5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8016b08:	4605      	mov	r5, r0
 8016b0a:	7823      	ldrb	r3, [r4, #0]
 8016b0c:	f3bf 8f5b 	dmb	ish
 8016b10:	07da      	lsls	r2, r3, #31
 8016b12:	d40b      	bmi.n	8016b2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8016b14:	4620      	mov	r0, r4
 8016b16:	f007 fde1 	bl	801e6dc <__cxa_guard_acquire>
 8016b1a:	b138      	cbz	r0, 8016b2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8016b1c:	4620      	mov	r0, r4
 8016b1e:	f007 fde9 	bl	801e6f4 <__cxa_guard_release>
 8016b22:	4a0f      	ldr	r2, [pc, #60]	@ (8016b60 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8016b24:	490f      	ldr	r1, [pc, #60]	@ (8016b64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8016b26:	4810      	ldr	r0, [pc, #64]	@ (8016b68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8016b28:	f007 fdd1 	bl	801e6ce <__aeabi_atexit>
 8016b2c:	4c0f      	ldr	r4, [pc, #60]	@ (8016b6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8016b2e:	7823      	ldrb	r3, [r4, #0]
 8016b30:	f3bf 8f5b 	dmb	ish
 8016b34:	07db      	lsls	r3, r3, #31
 8016b36:	d40b      	bmi.n	8016b50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8016b38:	4620      	mov	r0, r4
 8016b3a:	f007 fdcf 	bl	801e6dc <__cxa_guard_acquire>
 8016b3e:	b138      	cbz	r0, 8016b50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8016b40:	4620      	mov	r0, r4
 8016b42:	f007 fdd7 	bl	801e6f4 <__cxa_guard_release>
 8016b46:	4a06      	ldr	r2, [pc, #24]	@ (8016b60 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8016b48:	4909      	ldr	r1, [pc, #36]	@ (8016b70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8016b4a:	480a      	ldr	r0, [pc, #40]	@ (8016b74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8016b4c:	f007 fdbf 	bl	801e6ce <__aeabi_atexit>
 8016b50:	4b05      	ldr	r3, [pc, #20]	@ (8016b68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8016b52:	636b      	str	r3, [r5, #52]	@ 0x34
 8016b54:	4b07      	ldr	r3, [pc, #28]	@ (8016b74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8016b56:	63ab      	str	r3, [r5, #56]	@ 0x38
 8016b58:	bd38      	pop	{r3, r4, r5, pc}
 8016b5a:	bf00      	nop
 8016b5c:	2001519c 	.word	0x2001519c
 8016b60:	20000000 	.word	0x20000000
 8016b64:	080136df 	.word	0x080136df
 8016b68:	200000a8 	.word	0x200000a8
 8016b6c:	200151a0 	.word	0x200151a0
 8016b70:	080136dd 	.word	0x080136dd
 8016b74:	200000ac 	.word	0x200000ac

08016b78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8016b78:	b538      	push	{r3, r4, r5, lr}
 8016b7a:	4c15      	ldr	r4, [pc, #84]	@ (8016bd0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8016b7c:	4605      	mov	r5, r0
 8016b7e:	7823      	ldrb	r3, [r4, #0]
 8016b80:	f3bf 8f5b 	dmb	ish
 8016b84:	07da      	lsls	r2, r3, #31
 8016b86:	d40b      	bmi.n	8016ba0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8016b88:	4620      	mov	r0, r4
 8016b8a:	f007 fda7 	bl	801e6dc <__cxa_guard_acquire>
 8016b8e:	b138      	cbz	r0, 8016ba0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8016b90:	4620      	mov	r0, r4
 8016b92:	f007 fdaf 	bl	801e6f4 <__cxa_guard_release>
 8016b96:	4a0f      	ldr	r2, [pc, #60]	@ (8016bd4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8016b98:	490f      	ldr	r1, [pc, #60]	@ (8016bd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8016b9a:	4810      	ldr	r0, [pc, #64]	@ (8016bdc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8016b9c:	f007 fd97 	bl	801e6ce <__aeabi_atexit>
 8016ba0:	4c0f      	ldr	r4, [pc, #60]	@ (8016be0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8016ba2:	7823      	ldrb	r3, [r4, #0]
 8016ba4:	f3bf 8f5b 	dmb	ish
 8016ba8:	07db      	lsls	r3, r3, #31
 8016baa:	d40b      	bmi.n	8016bc4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8016bac:	4620      	mov	r0, r4
 8016bae:	f007 fd95 	bl	801e6dc <__cxa_guard_acquire>
 8016bb2:	b138      	cbz	r0, 8016bc4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8016bb4:	4620      	mov	r0, r4
 8016bb6:	f007 fd9d 	bl	801e6f4 <__cxa_guard_release>
 8016bba:	4a06      	ldr	r2, [pc, #24]	@ (8016bd4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8016bbc:	4909      	ldr	r1, [pc, #36]	@ (8016be4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8016bbe:	480a      	ldr	r0, [pc, #40]	@ (8016be8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8016bc0:	f007 fd85 	bl	801e6ce <__aeabi_atexit>
 8016bc4:	4b05      	ldr	r3, [pc, #20]	@ (8016bdc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8016bc6:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8016bc8:	4b07      	ldr	r3, [pc, #28]	@ (8016be8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8016bca:	632b      	str	r3, [r5, #48]	@ 0x30
 8016bcc:	bd38      	pop	{r3, r4, r5, pc}
 8016bce:	bf00      	nop
 8016bd0:	2001516c 	.word	0x2001516c
 8016bd4:	20000000 	.word	0x20000000
 8016bd8:	080136e3 	.word	0x080136e3
 8016bdc:	20000078 	.word	0x20000078
 8016be0:	20015170 	.word	0x20015170
 8016be4:	080136e1 	.word	0x080136e1
 8016be8:	2000007c 	.word	0x2000007c

08016bec <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8016bec:	b510      	push	{r4, lr}
 8016bee:	4604      	mov	r4, r0
 8016bf0:	f7ff ff88 	bl	8016b04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8016bf4:	4620      	mov	r0, r4
 8016bf6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016bfa:	f7ff bfbd 	b.w	8016b78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08016c00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8016c00:	b538      	push	{r3, r4, r5, lr}
 8016c02:	4c15      	ldr	r4, [pc, #84]	@ (8016c58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8016c04:	4605      	mov	r5, r0
 8016c06:	7823      	ldrb	r3, [r4, #0]
 8016c08:	f3bf 8f5b 	dmb	ish
 8016c0c:	07da      	lsls	r2, r3, #31
 8016c0e:	d40b      	bmi.n	8016c28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8016c10:	4620      	mov	r0, r4
 8016c12:	f007 fd63 	bl	801e6dc <__cxa_guard_acquire>
 8016c16:	b138      	cbz	r0, 8016c28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8016c18:	4620      	mov	r0, r4
 8016c1a:	f007 fd6b 	bl	801e6f4 <__cxa_guard_release>
 8016c1e:	4a0f      	ldr	r2, [pc, #60]	@ (8016c5c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8016c20:	490f      	ldr	r1, [pc, #60]	@ (8016c60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8016c22:	4810      	ldr	r0, [pc, #64]	@ (8016c64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8016c24:	f007 fd53 	bl	801e6ce <__aeabi_atexit>
 8016c28:	4c0f      	ldr	r4, [pc, #60]	@ (8016c68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8016c2a:	7823      	ldrb	r3, [r4, #0]
 8016c2c:	f3bf 8f5b 	dmb	ish
 8016c30:	07db      	lsls	r3, r3, #31
 8016c32:	d40b      	bmi.n	8016c4c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8016c34:	4620      	mov	r0, r4
 8016c36:	f007 fd51 	bl	801e6dc <__cxa_guard_acquire>
 8016c3a:	b138      	cbz	r0, 8016c4c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8016c3c:	4620      	mov	r0, r4
 8016c3e:	f007 fd59 	bl	801e6f4 <__cxa_guard_release>
 8016c42:	4a06      	ldr	r2, [pc, #24]	@ (8016c5c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8016c44:	4909      	ldr	r1, [pc, #36]	@ (8016c6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8016c46:	480a      	ldr	r0, [pc, #40]	@ (8016c70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8016c48:	f007 fd41 	bl	801e6ce <__aeabi_atexit>
 8016c4c:	4b05      	ldr	r3, [pc, #20]	@ (8016c64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8016c4e:	656b      	str	r3, [r5, #84]	@ 0x54
 8016c50:	4b07      	ldr	r3, [pc, #28]	@ (8016c70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8016c52:	65ab      	str	r3, [r5, #88]	@ 0x58
 8016c54:	bd38      	pop	{r3, r4, r5, pc}
 8016c56:	bf00      	nop
 8016c58:	200151a4 	.word	0x200151a4
 8016c5c:	20000000 	.word	0x20000000
 8016c60:	080136cf 	.word	0x080136cf
 8016c64:	200000b0 	.word	0x200000b0
 8016c68:	200151a8 	.word	0x200151a8
 8016c6c:	080136cd 	.word	0x080136cd
 8016c70:	200000b4 	.word	0x200000b4

08016c74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8016c74:	b538      	push	{r3, r4, r5, lr}
 8016c76:	4c15      	ldr	r4, [pc, #84]	@ (8016ccc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8016c78:	4605      	mov	r5, r0
 8016c7a:	7823      	ldrb	r3, [r4, #0]
 8016c7c:	f3bf 8f5b 	dmb	ish
 8016c80:	07da      	lsls	r2, r3, #31
 8016c82:	d40b      	bmi.n	8016c9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8016c84:	4620      	mov	r0, r4
 8016c86:	f007 fd29 	bl	801e6dc <__cxa_guard_acquire>
 8016c8a:	b138      	cbz	r0, 8016c9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8016c8c:	4620      	mov	r0, r4
 8016c8e:	f007 fd31 	bl	801e6f4 <__cxa_guard_release>
 8016c92:	4a0f      	ldr	r2, [pc, #60]	@ (8016cd0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8016c94:	490f      	ldr	r1, [pc, #60]	@ (8016cd4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8016c96:	4810      	ldr	r0, [pc, #64]	@ (8016cd8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8016c98:	f007 fd19 	bl	801e6ce <__aeabi_atexit>
 8016c9c:	4c0f      	ldr	r4, [pc, #60]	@ (8016cdc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8016c9e:	7823      	ldrb	r3, [r4, #0]
 8016ca0:	f3bf 8f5b 	dmb	ish
 8016ca4:	07db      	lsls	r3, r3, #31
 8016ca6:	d40b      	bmi.n	8016cc0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8016ca8:	4620      	mov	r0, r4
 8016caa:	f007 fd17 	bl	801e6dc <__cxa_guard_acquire>
 8016cae:	b138      	cbz	r0, 8016cc0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8016cb0:	4620      	mov	r0, r4
 8016cb2:	f007 fd1f 	bl	801e6f4 <__cxa_guard_release>
 8016cb6:	4a06      	ldr	r2, [pc, #24]	@ (8016cd0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8016cb8:	4909      	ldr	r1, [pc, #36]	@ (8016ce0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8016cba:	480a      	ldr	r0, [pc, #40]	@ (8016ce4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8016cbc:	f007 fd07 	bl	801e6ce <__aeabi_atexit>
 8016cc0:	4b05      	ldr	r3, [pc, #20]	@ (8016cd8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8016cc2:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8016cc4:	4b07      	ldr	r3, [pc, #28]	@ (8016ce4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8016cc6:	652b      	str	r3, [r5, #80]	@ 0x50
 8016cc8:	bd38      	pop	{r3, r4, r5, pc}
 8016cca:	bf00      	nop
 8016ccc:	200151ac 	.word	0x200151ac
 8016cd0:	20000000 	.word	0x20000000
 8016cd4:	080136d3 	.word	0x080136d3
 8016cd8:	200000b8 	.word	0x200000b8
 8016cdc:	200151b0 	.word	0x200151b0
 8016ce0:	080136d1 	.word	0x080136d1
 8016ce4:	200000bc 	.word	0x200000bc

08016ce8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8016ce8:	b538      	push	{r3, r4, r5, lr}
 8016cea:	4c15      	ldr	r4, [pc, #84]	@ (8016d40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8016cec:	4605      	mov	r5, r0
 8016cee:	7823      	ldrb	r3, [r4, #0]
 8016cf0:	f3bf 8f5b 	dmb	ish
 8016cf4:	07da      	lsls	r2, r3, #31
 8016cf6:	d40b      	bmi.n	8016d10 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8016cf8:	4620      	mov	r0, r4
 8016cfa:	f007 fcef 	bl	801e6dc <__cxa_guard_acquire>
 8016cfe:	b138      	cbz	r0, 8016d10 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8016d00:	4620      	mov	r0, r4
 8016d02:	f007 fcf7 	bl	801e6f4 <__cxa_guard_release>
 8016d06:	4a0f      	ldr	r2, [pc, #60]	@ (8016d44 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8016d08:	490f      	ldr	r1, [pc, #60]	@ (8016d48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8016d0a:	4810      	ldr	r0, [pc, #64]	@ (8016d4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8016d0c:	f007 fcdf 	bl	801e6ce <__aeabi_atexit>
 8016d10:	4c0f      	ldr	r4, [pc, #60]	@ (8016d50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8016d12:	7823      	ldrb	r3, [r4, #0]
 8016d14:	f3bf 8f5b 	dmb	ish
 8016d18:	07db      	lsls	r3, r3, #31
 8016d1a:	d40b      	bmi.n	8016d34 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8016d1c:	4620      	mov	r0, r4
 8016d1e:	f007 fcdd 	bl	801e6dc <__cxa_guard_acquire>
 8016d22:	b138      	cbz	r0, 8016d34 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8016d24:	4620      	mov	r0, r4
 8016d26:	f007 fce5 	bl	801e6f4 <__cxa_guard_release>
 8016d2a:	4a06      	ldr	r2, [pc, #24]	@ (8016d44 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8016d2c:	4909      	ldr	r1, [pc, #36]	@ (8016d54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8016d2e:	480a      	ldr	r0, [pc, #40]	@ (8016d58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8016d30:	f007 fccd 	bl	801e6ce <__aeabi_atexit>
 8016d34:	4b05      	ldr	r3, [pc, #20]	@ (8016d4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8016d36:	646b      	str	r3, [r5, #68]	@ 0x44
 8016d38:	4b07      	ldr	r3, [pc, #28]	@ (8016d58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8016d3a:	64ab      	str	r3, [r5, #72]	@ 0x48
 8016d3c:	bd38      	pop	{r3, r4, r5, pc}
 8016d3e:	bf00      	nop
 8016d40:	20015174 	.word	0x20015174
 8016d44:	20000000 	.word	0x20000000
 8016d48:	080136d7 	.word	0x080136d7
 8016d4c:	20000080 	.word	0x20000080
 8016d50:	20015178 	.word	0x20015178
 8016d54:	080136d5 	.word	0x080136d5
 8016d58:	20000084 	.word	0x20000084

08016d5c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8016d5c:	b538      	push	{r3, r4, r5, lr}
 8016d5e:	4c15      	ldr	r4, [pc, #84]	@ (8016db4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8016d60:	4605      	mov	r5, r0
 8016d62:	7823      	ldrb	r3, [r4, #0]
 8016d64:	f3bf 8f5b 	dmb	ish
 8016d68:	07da      	lsls	r2, r3, #31
 8016d6a:	d40b      	bmi.n	8016d84 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8016d6c:	4620      	mov	r0, r4
 8016d6e:	f007 fcb5 	bl	801e6dc <__cxa_guard_acquire>
 8016d72:	b138      	cbz	r0, 8016d84 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8016d74:	4620      	mov	r0, r4
 8016d76:	f007 fcbd 	bl	801e6f4 <__cxa_guard_release>
 8016d7a:	4a0f      	ldr	r2, [pc, #60]	@ (8016db8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8016d7c:	490f      	ldr	r1, [pc, #60]	@ (8016dbc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8016d7e:	4810      	ldr	r0, [pc, #64]	@ (8016dc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8016d80:	f007 fca5 	bl	801e6ce <__aeabi_atexit>
 8016d84:	4c0f      	ldr	r4, [pc, #60]	@ (8016dc4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8016d86:	7823      	ldrb	r3, [r4, #0]
 8016d88:	f3bf 8f5b 	dmb	ish
 8016d8c:	07db      	lsls	r3, r3, #31
 8016d8e:	d40b      	bmi.n	8016da8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8016d90:	4620      	mov	r0, r4
 8016d92:	f007 fca3 	bl	801e6dc <__cxa_guard_acquire>
 8016d96:	b138      	cbz	r0, 8016da8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8016d98:	4620      	mov	r0, r4
 8016d9a:	f007 fcab 	bl	801e6f4 <__cxa_guard_release>
 8016d9e:	4a06      	ldr	r2, [pc, #24]	@ (8016db8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8016da0:	4909      	ldr	r1, [pc, #36]	@ (8016dc8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8016da2:	480a      	ldr	r0, [pc, #40]	@ (8016dcc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8016da4:	f007 fc93 	bl	801e6ce <__aeabi_atexit>
 8016da8:	4b05      	ldr	r3, [pc, #20]	@ (8016dc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8016daa:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8016dac:	4b07      	ldr	r3, [pc, #28]	@ (8016dcc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8016dae:	642b      	str	r3, [r5, #64]	@ 0x40
 8016db0:	bd38      	pop	{r3, r4, r5, pc}
 8016db2:	bf00      	nop
 8016db4:	20015194 	.word	0x20015194
 8016db8:	20000000 	.word	0x20000000
 8016dbc:	080136db 	.word	0x080136db
 8016dc0:	200000a0 	.word	0x200000a0
 8016dc4:	20015198 	.word	0x20015198
 8016dc8:	080136d9 	.word	0x080136d9
 8016dcc:	200000a4 	.word	0x200000a4

08016dd0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8016dd0:	b510      	push	{r4, lr}
 8016dd2:	4604      	mov	r4, r0
 8016dd4:	f7ff ff14 	bl	8016c00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8016dd8:	4620      	mov	r0, r4
 8016dda:	f7ff ff85 	bl	8016ce8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8016dde:	4620      	mov	r0, r4
 8016de0:	f7ff ff48 	bl	8016c74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8016de4:	4620      	mov	r0, r4
 8016de6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016dea:	f7ff bfb7 	b.w	8016d5c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08016df0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8016df0:	b538      	push	{r3, r4, r5, lr}
 8016df2:	4c15      	ldr	r4, [pc, #84]	@ (8016e48 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8016df4:	4605      	mov	r5, r0
 8016df6:	7823      	ldrb	r3, [r4, #0]
 8016df8:	f3bf 8f5b 	dmb	ish
 8016dfc:	07da      	lsls	r2, r3, #31
 8016dfe:	d40b      	bmi.n	8016e18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8016e00:	4620      	mov	r0, r4
 8016e02:	f007 fc6b 	bl	801e6dc <__cxa_guard_acquire>
 8016e06:	b138      	cbz	r0, 8016e18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8016e08:	4620      	mov	r0, r4
 8016e0a:	f007 fc73 	bl	801e6f4 <__cxa_guard_release>
 8016e0e:	4a0f      	ldr	r2, [pc, #60]	@ (8016e4c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8016e10:	490f      	ldr	r1, [pc, #60]	@ (8016e50 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8016e12:	4810      	ldr	r0, [pc, #64]	@ (8016e54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8016e14:	f007 fc5b 	bl	801e6ce <__aeabi_atexit>
 8016e18:	4c0f      	ldr	r4, [pc, #60]	@ (8016e58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8016e1a:	7823      	ldrb	r3, [r4, #0]
 8016e1c:	f3bf 8f5b 	dmb	ish
 8016e20:	07db      	lsls	r3, r3, #31
 8016e22:	d40b      	bmi.n	8016e3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8016e24:	4620      	mov	r0, r4
 8016e26:	f007 fc59 	bl	801e6dc <__cxa_guard_acquire>
 8016e2a:	b138      	cbz	r0, 8016e3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8016e2c:	4620      	mov	r0, r4
 8016e2e:	f007 fc61 	bl	801e6f4 <__cxa_guard_release>
 8016e32:	4a06      	ldr	r2, [pc, #24]	@ (8016e4c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8016e34:	4909      	ldr	r1, [pc, #36]	@ (8016e5c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8016e36:	480a      	ldr	r0, [pc, #40]	@ (8016e60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8016e38:	f007 fc49 	bl	801e6ce <__aeabi_atexit>
 8016e3c:	4b05      	ldr	r3, [pc, #20]	@ (8016e54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8016e3e:	666b      	str	r3, [r5, #100]	@ 0x64
 8016e40:	4b07      	ldr	r3, [pc, #28]	@ (8016e60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8016e42:	66ab      	str	r3, [r5, #104]	@ 0x68
 8016e44:	bd38      	pop	{r3, r4, r5, pc}
 8016e46:	bf00      	nop
 8016e48:	2001517c 	.word	0x2001517c
 8016e4c:	20000000 	.word	0x20000000
 8016e50:	080136c7 	.word	0x080136c7
 8016e54:	20000088 	.word	0x20000088
 8016e58:	20015180 	.word	0x20015180
 8016e5c:	080136c5 	.word	0x080136c5
 8016e60:	2000008c 	.word	0x2000008c

08016e64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8016e64:	b538      	push	{r3, r4, r5, lr}
 8016e66:	4c15      	ldr	r4, [pc, #84]	@ (8016ebc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8016e68:	4605      	mov	r5, r0
 8016e6a:	7823      	ldrb	r3, [r4, #0]
 8016e6c:	f3bf 8f5b 	dmb	ish
 8016e70:	07da      	lsls	r2, r3, #31
 8016e72:	d40b      	bmi.n	8016e8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8016e74:	4620      	mov	r0, r4
 8016e76:	f007 fc31 	bl	801e6dc <__cxa_guard_acquire>
 8016e7a:	b138      	cbz	r0, 8016e8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8016e7c:	4620      	mov	r0, r4
 8016e7e:	f007 fc39 	bl	801e6f4 <__cxa_guard_release>
 8016e82:	4a0f      	ldr	r2, [pc, #60]	@ (8016ec0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8016e84:	490f      	ldr	r1, [pc, #60]	@ (8016ec4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8016e86:	4810      	ldr	r0, [pc, #64]	@ (8016ec8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8016e88:	f007 fc21 	bl	801e6ce <__aeabi_atexit>
 8016e8c:	4c0f      	ldr	r4, [pc, #60]	@ (8016ecc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8016e8e:	7823      	ldrb	r3, [r4, #0]
 8016e90:	f3bf 8f5b 	dmb	ish
 8016e94:	07db      	lsls	r3, r3, #31
 8016e96:	d40b      	bmi.n	8016eb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8016e98:	4620      	mov	r0, r4
 8016e9a:	f007 fc1f 	bl	801e6dc <__cxa_guard_acquire>
 8016e9e:	b138      	cbz	r0, 8016eb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8016ea0:	4620      	mov	r0, r4
 8016ea2:	f007 fc27 	bl	801e6f4 <__cxa_guard_release>
 8016ea6:	4a06      	ldr	r2, [pc, #24]	@ (8016ec0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8016ea8:	4909      	ldr	r1, [pc, #36]	@ (8016ed0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8016eaa:	480a      	ldr	r0, [pc, #40]	@ (8016ed4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8016eac:	f007 fc0f 	bl	801e6ce <__aeabi_atexit>
 8016eb0:	4b05      	ldr	r3, [pc, #20]	@ (8016ec8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8016eb2:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8016eb4:	4b07      	ldr	r3, [pc, #28]	@ (8016ed4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8016eb6:	662b      	str	r3, [r5, #96]	@ 0x60
 8016eb8:	bd38      	pop	{r3, r4, r5, pc}
 8016eba:	bf00      	nop
 8016ebc:	20015154 	.word	0x20015154
 8016ec0:	20000000 	.word	0x20000000
 8016ec4:	080136cb 	.word	0x080136cb
 8016ec8:	20000060 	.word	0x20000060
 8016ecc:	20015158 	.word	0x20015158
 8016ed0:	080136c9 	.word	0x080136c9
 8016ed4:	20000064 	.word	0x20000064

08016ed8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8016ed8:	b510      	push	{r4, lr}
 8016eda:	4604      	mov	r4, r0
 8016edc:	f7ff ff88 	bl	8016df0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8016ee0:	4620      	mov	r0, r4
 8016ee2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016ee6:	f7ff bfbd 	b.w	8016e64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08016eec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8016eec:	b538      	push	{r3, r4, r5, lr}
 8016eee:	4c15      	ldr	r4, [pc, #84]	@ (8016f44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8016ef0:	4605      	mov	r5, r0
 8016ef2:	7823      	ldrb	r3, [r4, #0]
 8016ef4:	f3bf 8f5b 	dmb	ish
 8016ef8:	07da      	lsls	r2, r3, #31
 8016efa:	d40b      	bmi.n	8016f14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8016efc:	4620      	mov	r0, r4
 8016efe:	f007 fbed 	bl	801e6dc <__cxa_guard_acquire>
 8016f02:	b138      	cbz	r0, 8016f14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8016f04:	4620      	mov	r0, r4
 8016f06:	f007 fbf5 	bl	801e6f4 <__cxa_guard_release>
 8016f0a:	4a0f      	ldr	r2, [pc, #60]	@ (8016f48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8016f0c:	490f      	ldr	r1, [pc, #60]	@ (8016f4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8016f0e:	4810      	ldr	r0, [pc, #64]	@ (8016f50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8016f10:	f007 fbdd 	bl	801e6ce <__aeabi_atexit>
 8016f14:	4c0f      	ldr	r4, [pc, #60]	@ (8016f54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8016f16:	7823      	ldrb	r3, [r4, #0]
 8016f18:	f3bf 8f5b 	dmb	ish
 8016f1c:	07db      	lsls	r3, r3, #31
 8016f1e:	d40b      	bmi.n	8016f38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8016f20:	4620      	mov	r0, r4
 8016f22:	f007 fbdb 	bl	801e6dc <__cxa_guard_acquire>
 8016f26:	b138      	cbz	r0, 8016f38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8016f28:	4620      	mov	r0, r4
 8016f2a:	f007 fbe3 	bl	801e6f4 <__cxa_guard_release>
 8016f2e:	4a06      	ldr	r2, [pc, #24]	@ (8016f48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8016f30:	4909      	ldr	r1, [pc, #36]	@ (8016f58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8016f32:	480a      	ldr	r0, [pc, #40]	@ (8016f5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8016f34:	f007 fbcb 	bl	801e6ce <__aeabi_atexit>
 8016f38:	4b05      	ldr	r3, [pc, #20]	@ (8016f50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8016f3a:	676b      	str	r3, [r5, #116]	@ 0x74
 8016f3c:	4b07      	ldr	r3, [pc, #28]	@ (8016f5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8016f3e:	67ab      	str	r3, [r5, #120]	@ 0x78
 8016f40:	bd38      	pop	{r3, r4, r5, pc}
 8016f42:	bf00      	nop
 8016f44:	2001514c 	.word	0x2001514c
 8016f48:	20000000 	.word	0x20000000
 8016f4c:	080136bf 	.word	0x080136bf
 8016f50:	20000058 	.word	0x20000058
 8016f54:	20015150 	.word	0x20015150
 8016f58:	080136bd 	.word	0x080136bd
 8016f5c:	2000005c 	.word	0x2000005c

08016f60 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8016f60:	b538      	push	{r3, r4, r5, lr}
 8016f62:	4c15      	ldr	r4, [pc, #84]	@ (8016fb8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8016f64:	4605      	mov	r5, r0
 8016f66:	7823      	ldrb	r3, [r4, #0]
 8016f68:	f3bf 8f5b 	dmb	ish
 8016f6c:	07da      	lsls	r2, r3, #31
 8016f6e:	d40b      	bmi.n	8016f88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8016f70:	4620      	mov	r0, r4
 8016f72:	f007 fbb3 	bl	801e6dc <__cxa_guard_acquire>
 8016f76:	b138      	cbz	r0, 8016f88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8016f78:	4620      	mov	r0, r4
 8016f7a:	f007 fbbb 	bl	801e6f4 <__cxa_guard_release>
 8016f7e:	4a0f      	ldr	r2, [pc, #60]	@ (8016fbc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8016f80:	490f      	ldr	r1, [pc, #60]	@ (8016fc0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8016f82:	4810      	ldr	r0, [pc, #64]	@ (8016fc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8016f84:	f007 fba3 	bl	801e6ce <__aeabi_atexit>
 8016f88:	4c0f      	ldr	r4, [pc, #60]	@ (8016fc8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8016f8a:	7823      	ldrb	r3, [r4, #0]
 8016f8c:	f3bf 8f5b 	dmb	ish
 8016f90:	07db      	lsls	r3, r3, #31
 8016f92:	d40b      	bmi.n	8016fac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8016f94:	4620      	mov	r0, r4
 8016f96:	f007 fba1 	bl	801e6dc <__cxa_guard_acquire>
 8016f9a:	b138      	cbz	r0, 8016fac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8016f9c:	4620      	mov	r0, r4
 8016f9e:	f007 fba9 	bl	801e6f4 <__cxa_guard_release>
 8016fa2:	4a06      	ldr	r2, [pc, #24]	@ (8016fbc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8016fa4:	4909      	ldr	r1, [pc, #36]	@ (8016fcc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8016fa6:	480a      	ldr	r0, [pc, #40]	@ (8016fd0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8016fa8:	f007 fb91 	bl	801e6ce <__aeabi_atexit>
 8016fac:	4b05      	ldr	r3, [pc, #20]	@ (8016fc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8016fae:	66eb      	str	r3, [r5, #108]	@ 0x6c
 8016fb0:	4b07      	ldr	r3, [pc, #28]	@ (8016fd0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8016fb2:	672b      	str	r3, [r5, #112]	@ 0x70
 8016fb4:	bd38      	pop	{r3, r4, r5, pc}
 8016fb6:	bf00      	nop
 8016fb8:	20015144 	.word	0x20015144
 8016fbc:	20000000 	.word	0x20000000
 8016fc0:	080136c3 	.word	0x080136c3
 8016fc4:	20000050 	.word	0x20000050
 8016fc8:	20015148 	.word	0x20015148
 8016fcc:	080136c1 	.word	0x080136c1
 8016fd0:	20000054 	.word	0x20000054

08016fd4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8016fd4:	b510      	push	{r4, lr}
 8016fd6:	4604      	mov	r4, r0
 8016fd8:	f7ff ff88 	bl	8016eec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8016fdc:	4620      	mov	r0, r4
 8016fde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016fe2:	f7ff bfbd 	b.w	8016f60 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08016fe6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8016fe6:	b510      	push	{r4, lr}
 8016fe8:	4604      	mov	r4, r0
 8016fea:	f7ff fff3 	bl	8016fd4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8016fee:	4620      	mov	r0, r4
 8016ff0:	f7ff ff72 	bl	8016ed8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8016ff4:	4620      	mov	r0, r4
 8016ff6:	f7ff fdf9 	bl	8016bec <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8016ffa:	4620      	mov	r0, r4
 8016ffc:	f7ff fcfa 	bl	80169f4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8017000:	4620      	mov	r0, r4
 8017002:	f7ff fd75 	bl	8016af0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8017006:	4620      	mov	r0, r4
 8017008:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801700c:	f7ff bee0 	b.w	8016dd0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08017010 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8017010:	b538      	push	{r3, r4, r5, lr}
 8017012:	4c0b      	ldr	r4, [pc, #44]	@ (8017040 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8017014:	4605      	mov	r5, r0
 8017016:	7823      	ldrb	r3, [r4, #0]
 8017018:	f3bf 8f5b 	dmb	ish
 801701c:	07db      	lsls	r3, r3, #31
 801701e:	d40b      	bmi.n	8017038 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8017020:	4620      	mov	r0, r4
 8017022:	f007 fb5b 	bl	801e6dc <__cxa_guard_acquire>
 8017026:	b138      	cbz	r0, 8017038 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8017028:	4620      	mov	r0, r4
 801702a:	f007 fb63 	bl	801e6f4 <__cxa_guard_release>
 801702e:	4a05      	ldr	r2, [pc, #20]	@ (8017044 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8017030:	4905      	ldr	r1, [pc, #20]	@ (8017048 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8017032:	4806      	ldr	r0, [pc, #24]	@ (801704c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8017034:	f007 fb4b 	bl	801e6ce <__aeabi_atexit>
 8017038:	4b04      	ldr	r3, [pc, #16]	@ (801704c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801703a:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801703c:	bd38      	pop	{r3, r4, r5, pc}
 801703e:	bf00      	nop
 8017040:	20015138 	.word	0x20015138
 8017044:	20000000 	.word	0x20000000
 8017048:	080136bb 	.word	0x080136bb
 801704c:	20000048 	.word	0x20000048

08017050 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8017050:	b538      	push	{r3, r4, r5, lr}
 8017052:	4c0b      	ldr	r4, [pc, #44]	@ (8017080 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8017054:	4605      	mov	r5, r0
 8017056:	7823      	ldrb	r3, [r4, #0]
 8017058:	f3bf 8f5b 	dmb	ish
 801705c:	07db      	lsls	r3, r3, #31
 801705e:	d40b      	bmi.n	8017078 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8017060:	4620      	mov	r0, r4
 8017062:	f007 fb3b 	bl	801e6dc <__cxa_guard_acquire>
 8017066:	b138      	cbz	r0, 8017078 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8017068:	4620      	mov	r0, r4
 801706a:	f007 fb43 	bl	801e6f4 <__cxa_guard_release>
 801706e:	4a05      	ldr	r2, [pc, #20]	@ (8017084 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8017070:	4905      	ldr	r1, [pc, #20]	@ (8017088 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8017072:	4806      	ldr	r0, [pc, #24]	@ (801708c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8017074:	f007 fb2b 	bl	801e6ce <__aeabi_atexit>
 8017078:	4b04      	ldr	r3, [pc, #16]	@ (801708c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801707a:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801707e:	bd38      	pop	{r3, r4, r5, pc}
 8017080:	2001513c 	.word	0x2001513c
 8017084:	20000000 	.word	0x20000000
 8017088:	080136b9 	.word	0x080136b9
 801708c:	2000004c 	.word	0x2000004c

08017090 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8017090:	b570      	push	{r4, r5, r6, lr}
 8017092:	4d0d      	ldr	r5, [pc, #52]	@ (80170c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8017094:	4606      	mov	r6, r0
 8017096:	4c0d      	ldr	r4, [pc, #52]	@ (80170cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8017098:	782b      	ldrb	r3, [r5, #0]
 801709a:	f3bf 8f5b 	dmb	ish
 801709e:	f013 0f01 	tst.w	r3, #1
 80170a2:	d10d      	bne.n	80170c0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80170a4:	4628      	mov	r0, r5
 80170a6:	f007 fb19 	bl	801e6dc <__cxa_guard_acquire>
 80170aa:	b148      	cbz	r0, 80170c0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80170ac:	4b08      	ldr	r3, [pc, #32]	@ (80170d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80170ae:	4628      	mov	r0, r5
 80170b0:	6023      	str	r3, [r4, #0]
 80170b2:	f007 fb1f 	bl	801e6f4 <__cxa_guard_release>
 80170b6:	4a07      	ldr	r2, [pc, #28]	@ (80170d4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80170b8:	4620      	mov	r0, r4
 80170ba:	4907      	ldr	r1, [pc, #28]	@ (80170d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80170bc:	f007 fb07 	bl	801e6ce <__aeabi_atexit>
 80170c0:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 80170c4:	bd70      	pop	{r4, r5, r6, pc}
 80170c6:	bf00      	nop
 80170c8:	20015140 	.word	0x20015140
 80170cc:	200151b4 	.word	0x200151b4
 80170d0:	0802131c 	.word	0x0802131c
 80170d4:	20000000 	.word	0x20000000
 80170d8:	080136b7 	.word	0x080136b7

080170dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80170dc:	b510      	push	{r4, lr}
 80170de:	4604      	mov	r4, r0
 80170e0:	f7ff ff96 	bl	8017010 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 80170e4:	4620      	mov	r0, r4
 80170e6:	f7ff ffb3 	bl	8017050 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 80170ea:	4620      	mov	r0, r4
 80170ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80170f0:	f7ff bfce 	b.w	8017090 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080170f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80170f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170f8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 80170fc:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8017100:	2d00      	cmp	r5, #0
 8017102:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8017106:	fb05 4c0e 	mla	ip, r5, lr, r4
 801710a:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801710e:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8017112:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8017116:	eb02 0a0c 	add.w	sl, r2, ip
 801711a:	8808      	ldrh	r0, [r1, #0]
 801711c:	f2c0 80b0 	blt.w	8017280 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8017120:	45ab      	cmp	fp, r5
 8017122:	f340 80ad 	ble.w	8017280 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8017126:	2c00      	cmp	r4, #0
 8017128:	f2c0 80a8 	blt.w	801727c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801712c:	45a6      	cmp	lr, r4
 801712e:	f340 80a5 	ble.w	801727c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8017132:	f812 200c 	ldrb.w	r2, [r2, ip]
 8017136:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801713a:	1c62      	adds	r2, r4, #1
 801713c:	f100 80a3 	bmi.w	8017286 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8017140:	4596      	cmp	lr, r2
 8017142:	f340 80a0 	ble.w	8017286 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8017146:	f1b9 0f00 	cmp.w	r9, #0
 801714a:	f000 809c 	beq.w	8017286 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801714e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8017152:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8017156:	3501      	adds	r5, #1
 8017158:	f100 8099 	bmi.w	801728e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801715c:	45ab      	cmp	fp, r5
 801715e:	f340 8096 	ble.w	801728e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8017162:	2f00      	cmp	r7, #0
 8017164:	f000 8093 	beq.w	801728e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8017168:	2c00      	cmp	r4, #0
 801716a:	f2c0 808e 	blt.w	801728a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801716e:	45a6      	cmp	lr, r4
 8017170:	f340 808b 	ble.w	801728a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8017174:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8017178:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801717c:	3401      	adds	r4, #1
 801717e:	f100 8089 	bmi.w	8017294 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8017182:	45a6      	cmp	lr, r4
 8017184:	f340 8086 	ble.w	8017294 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8017188:	f1b9 0f00 	cmp.w	r9, #0
 801718c:	f000 8082 	beq.w	8017294 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8017190:	44d6      	add	lr, sl
 8017192:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8017196:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801719a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801719e:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 80171a2:	fb19 fe07 	smulbb	lr, r9, r7
 80171a6:	f1c7 0210 	rsb	r2, r7, #16
 80171aa:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80171ae:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80171b2:	eba2 0209 	sub.w	r2, r2, r9
 80171b6:	ea44 0808 	orr.w	r8, r4, r8
 80171ba:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80171be:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80171c2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80171c6:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80171ca:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80171ce:	ea44 0c0c 	orr.w	ip, r4, ip
 80171d2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80171d6:	fb04 f40c 	mul.w	r4, r4, ip
 80171da:	fb02 4808 	mla	r8, r2, r8, r4
 80171de:	041a      	lsls	r2, r3, #16
 80171e0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80171e4:	b2b4      	uxth	r4, r6
 80171e6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80171ea:	43f6      	mvns	r6, r6
 80171ec:	4313      	orrs	r3, r2
 80171ee:	042a      	lsls	r2, r5, #16
 80171f0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80171f4:	b2f6      	uxtb	r6, r6
 80171f6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80171fa:	fb0e 8303 	mla	r3, lr, r3, r8
 80171fe:	432a      	orrs	r2, r5
 8017200:	fb07 3202 	mla	r2, r7, r2, r3
 8017204:	10c7      	asrs	r7, r0, #3
 8017206:	0d53      	lsrs	r3, r2, #21
 8017208:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801720c:	0952      	lsrs	r2, r2, #5
 801720e:	fb17 f706 	smulbb	r7, r7, r6
 8017212:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017216:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801721a:	431a      	orrs	r2, r3
 801721c:	b293      	uxth	r3, r2
 801721e:	1202      	asrs	r2, r0, #8
 8017220:	121d      	asrs	r5, r3, #8
 8017222:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8017226:	00c0      	lsls	r0, r0, #3
 8017228:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801722c:	fb12 f206 	smulbb	r2, r2, r6
 8017230:	b2c0      	uxtb	r0, r0
 8017232:	fb05 2504 	mla	r5, r5, r4, r2
 8017236:	10da      	asrs	r2, r3, #3
 8017238:	fb10 f006 	smulbb	r0, r0, r6
 801723c:	00db      	lsls	r3, r3, #3
 801723e:	b2ad      	uxth	r5, r5
 8017240:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8017244:	b2db      	uxtb	r3, r3
 8017246:	fb02 7204 	mla	r2, r2, r4, r7
 801724a:	fb03 0004 	mla	r0, r3, r4, r0
 801724e:	1c6b      	adds	r3, r5, #1
 8017250:	b292      	uxth	r2, r2
 8017252:	b280      	uxth	r0, r0
 8017254:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017258:	1c43      	adds	r3, r0, #1
 801725a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801725e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017262:	1c50      	adds	r0, r2, #1
 8017264:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017268:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801726c:	0952      	lsrs	r2, r2, #5
 801726e:	432b      	orrs	r3, r5
 8017270:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017274:	4313      	orrs	r3, r2
 8017276:	800b      	strh	r3, [r1, #0]
 8017278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801727c:	4680      	mov	r8, r0
 801727e:	e75c      	b.n	801713a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8017280:	4684      	mov	ip, r0
 8017282:	4680      	mov	r8, r0
 8017284:	e767      	b.n	8017156 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8017286:	4684      	mov	ip, r0
 8017288:	e765      	b.n	8017156 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801728a:	4605      	mov	r5, r0
 801728c:	e776      	b.n	801717c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801728e:	4603      	mov	r3, r0
 8017290:	4605      	mov	r5, r0
 8017292:	e782      	b.n	801719a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8017294:	4603      	mov	r3, r0
 8017296:	e780      	b.n	801719a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08017298 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801729c:	b099      	sub	sp, #100	@ 0x64
 801729e:	9215      	str	r2, [sp, #84]	@ 0x54
 80172a0:	9309      	str	r3, [sp, #36]	@ 0x24
 80172a2:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 80172a4:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 80172a8:	9016      	str	r0, [sp, #88]	@ 0x58
 80172aa:	930d      	str	r3, [sp, #52]	@ 0x34
 80172ac:	6850      	ldr	r0, [r2, #4]
 80172ae:	910c      	str	r1, [sp, #48]	@ 0x30
 80172b0:	6812      	ldr	r2, [r2, #0]
 80172b2:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 80172b6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 80172ba:	fb00 1303 	mla	r3, r0, r3, r1
 80172be:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80172c2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80172c4:	681b      	ldr	r3, [r3, #0]
 80172c6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80172c8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80172ca:	685e      	ldr	r6, [r3, #4]
 80172cc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80172ce:	3604      	adds	r6, #4
 80172d0:	43db      	mvns	r3, r3
 80172d2:	b2db      	uxtb	r3, r3
 80172d4:	930a      	str	r3, [sp, #40]	@ 0x28
 80172d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80172d8:	2b00      	cmp	r3, #0
 80172da:	dc03      	bgt.n	80172e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80172dc:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80172de:	2b00      	cmp	r3, #0
 80172e0:	f340 8225 	ble.w	801772e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80172e4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80172e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80172ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80172ee:	1e48      	subs	r0, r1, #1
 80172f0:	1e57      	subs	r7, r2, #1
 80172f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80172f4:	2b00      	cmp	r3, #0
 80172f6:	f340 80e3 	ble.w	80174c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80172fa:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80172fe:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017302:	d406      	bmi.n	8017312 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017304:	4584      	cmp	ip, r0
 8017306:	da04      	bge.n	8017312 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017308:	2b00      	cmp	r3, #0
 801730a:	db02      	blt.n	8017312 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801730c:	42bb      	cmp	r3, r7
 801730e:	f2c0 80d8 	blt.w	80174c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8017312:	f11c 0c01 	adds.w	ip, ip, #1
 8017316:	f100 80c9 	bmi.w	80174ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801731a:	4561      	cmp	r1, ip
 801731c:	f2c0 80c6 	blt.w	80174ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8017320:	3301      	adds	r3, #1
 8017322:	f100 80c3 	bmi.w	80174ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8017326:	429a      	cmp	r2, r3
 8017328:	f2c0 80c0 	blt.w	80174ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801732c:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8017330:	4647      	mov	r7, r8
 8017332:	f1bb 0f00 	cmp.w	fp, #0
 8017336:	f340 80e3 	ble.w	8017500 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801733a:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801733c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017340:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8017342:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8017346:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801734a:	ea5f 422a 	movs.w	r2, sl, asr #16
 801734e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017352:	689b      	ldr	r3, [r3, #8]
 8017354:	f100 8121 	bmi.w	801759a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8017358:	f103 39ff 	add.w	r9, r3, #4294967295
 801735c:	454a      	cmp	r2, r9
 801735e:	f280 811c 	bge.w	801759a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8017362:	f1bc 0f00 	cmp.w	ip, #0
 8017366:	f2c0 8118 	blt.w	801759a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801736a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801736e:	45cc      	cmp	ip, r9
 8017370:	f280 8113 	bge.w	801759a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8017374:	b21b      	sxth	r3, r3
 8017376:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8017378:	fb0c 2203 	mla	r2, ip, r3, r2
 801737c:	eb04 0902 	add.w	r9, r4, r2
 8017380:	5ca2      	ldrb	r2, [r4, r2]
 8017382:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8017386:	2800      	cmp	r0, #0
 8017388:	f000 80fe 	beq.w	8017588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801738c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8017390:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8017394:	9211      	str	r2, [sp, #68]	@ 0x44
 8017396:	b151      	cbz	r1, 80173ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8017398:	eb09 0203 	add.w	r2, r9, r3
 801739c:	f819 3003 	ldrb.w	r3, [r9, r3]
 80173a0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80173a4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80173a6:	7853      	ldrb	r3, [r2, #1]
 80173a8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80173ac:	9312      	str	r3, [sp, #72]	@ 0x48
 80173ae:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80173b0:	fb10 f201 	smulbb	r2, r0, r1
 80173b4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80173b6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80173ba:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80173be:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80173c2:	10d2      	asrs	r2, r2, #3
 80173c4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80173c8:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80173cc:	ea4c 0c03 	orr.w	ip, ip, r3
 80173d0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80173d2:	041b      	lsls	r3, r3, #16
 80173d4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80173d8:	4323      	orrs	r3, r4
 80173da:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80173dc:	4353      	muls	r3, r2
 80173de:	fb09 330c 	mla	r3, r9, ip, r3
 80173e2:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80173e6:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80173ea:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80173ee:	ea4c 0e0e 	orr.w	lr, ip, lr
 80173f2:	f1c1 0c10 	rsb	ip, r1, #16
 80173f6:	ebac 0c00 	sub.w	ip, ip, r0
 80173fa:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80173fe:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8017402:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8017406:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017408:	0418      	lsls	r0, r3, #16
 801740a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801740e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8017412:	4318      	orrs	r0, r3
 8017414:	fb02 c200 	mla	r2, r2, r0, ip
 8017418:	8838      	ldrh	r0, [r7, #0]
 801741a:	0d53      	lsrs	r3, r2, #21
 801741c:	0952      	lsrs	r2, r2, #5
 801741e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017422:	1201      	asrs	r1, r0, #8
 8017424:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8017428:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801742c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8017430:	00c0      	lsls	r0, r0, #3
 8017432:	431a      	orrs	r2, r3
 8017434:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8017438:	fb11 f104 	smulbb	r1, r1, r4
 801743c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8017440:	b292      	uxth	r2, r2
 8017442:	fb1e fe04 	smulbb	lr, lr, r4
 8017446:	b2c0      	uxtb	r0, r0
 8017448:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801744c:	fb10 f004 	smulbb	r0, r0, r4
 8017450:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017454:	fb0c 1c03 	mla	ip, ip, r3, r1
 8017458:	10d1      	asrs	r1, r2, #3
 801745a:	00d2      	lsls	r2, r2, #3
 801745c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8017460:	fa1f fc8c 	uxth.w	ip, ip
 8017464:	b2d2      	uxtb	r2, r2
 8017466:	fb01 e103 	mla	r1, r1, r3, lr
 801746a:	fb02 0303 	mla	r3, r2, r3, r0
 801746e:	b289      	uxth	r1, r1
 8017470:	b29a      	uxth	r2, r3
 8017472:	f10c 0301 	add.w	r3, ip, #1
 8017476:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801747a:	1c53      	adds	r3, r2, #1
 801747c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017480:	1c4a      	adds	r2, r1, #1
 8017482:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017486:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801748a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801748e:	0949      	lsrs	r1, r1, #5
 8017490:	ea43 030c 	orr.w	r3, r3, ip
 8017494:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8017498:	430b      	orrs	r3, r1
 801749a:	803b      	strh	r3, [r7, #0]
 801749c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801749e:	3702      	adds	r7, #2
 80174a0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80174a4:	449a      	add	sl, r3
 80174a6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80174a8:	441d      	add	r5, r3
 80174aa:	e742      	b.n	8017332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80174ac:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80174ae:	f108 0802 	add.w	r8, r8, #2
 80174b2:	449a      	add	sl, r3
 80174b4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80174b6:	441d      	add	r5, r3
 80174b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80174ba:	3b01      	subs	r3, #1
 80174bc:	9309      	str	r3, [sp, #36]	@ 0x24
 80174be:	e718      	b.n	80172f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80174c0:	d023      	beq.n	801750a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80174c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80174c4:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80174c6:	3b01      	subs	r3, #1
 80174c8:	fb00 a003 	mla	r0, r0, r3, sl
 80174cc:	1400      	asrs	r0, r0, #16
 80174ce:	f53f af2d 	bmi.w	801732c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80174d2:	3901      	subs	r1, #1
 80174d4:	4288      	cmp	r0, r1
 80174d6:	f6bf af29 	bge.w	801732c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80174da:	9926      	ldr	r1, [sp, #152]	@ 0x98
 80174dc:	fb01 5303 	mla	r3, r1, r3, r5
 80174e0:	141b      	asrs	r3, r3, #16
 80174e2:	f53f af23 	bmi.w	801732c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80174e6:	3a01      	subs	r2, #1
 80174e8:	4293      	cmp	r3, r2
 80174ea:	f6bf af1f 	bge.w	801732c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80174ee:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80174f2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 80174f6:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 80174fa:	f1be 0f00 	cmp.w	lr, #0
 80174fe:	dc6c      	bgt.n	80175da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8017500:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017502:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017506:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801750a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801750c:	2b00      	cmp	r3, #0
 801750e:	f340 810e 	ble.w	801772e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8017512:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017516:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8017518:	ee30 0a04 	vadd.f32	s0, s0, s8
 801751c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017520:	eef0 6a62 	vmov.f32	s13, s5
 8017524:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017528:	ee31 1a05 	vadd.f32	s2, s2, s10
 801752c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017530:	ee16 aa90 	vmov	sl, s13
 8017534:	eef0 6a43 	vmov.f32	s13, s6
 8017538:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801753c:	ee16 5a90 	vmov	r5, s13
 8017540:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017544:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017548:	ee77 2a62 	vsub.f32	s5, s14, s5
 801754c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017550:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017554:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017558:	ee12 2a90 	vmov	r2, s5
 801755c:	eef0 2a47 	vmov.f32	s5, s14
 8017560:	fb92 f3f3 	sdiv	r3, r2, r3
 8017564:	ee13 2a10 	vmov	r2, s6
 8017568:	9325      	str	r3, [sp, #148]	@ 0x94
 801756a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801756c:	eeb0 3a67 	vmov.f32	s6, s15
 8017570:	fb92 f3f3 	sdiv	r3, r2, r3
 8017574:	9326      	str	r3, [sp, #152]	@ 0x98
 8017576:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017578:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801757a:	3b01      	subs	r3, #1
 801757c:	930c      	str	r3, [sp, #48]	@ 0x30
 801757e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8017580:	bf08      	it	eq
 8017582:	4613      	moveq	r3, r2
 8017584:	9309      	str	r3, [sp, #36]	@ 0x24
 8017586:	e6a6      	b.n	80172d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017588:	2900      	cmp	r1, #0
 801758a:	f43f af10 	beq.w	80173ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801758e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8017592:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8017596:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017598:	e709      	b.n	80173ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801759a:	f112 0901 	adds.w	r9, r2, #1
 801759e:	f53f af7d 	bmi.w	801749c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80175a2:	454b      	cmp	r3, r9
 80175a4:	f6ff af7a 	blt.w	801749c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80175a8:	f11c 0901 	adds.w	r9, ip, #1
 80175ac:	f53f af76 	bmi.w	801749c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80175b0:	45ce      	cmp	lr, r9
 80175b2:	f6ff af73 	blt.w	801749c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80175b6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80175b8:	b21b      	sxth	r3, r3
 80175ba:	9202      	str	r2, [sp, #8]
 80175bc:	fa0f f28e 	sxth.w	r2, lr
 80175c0:	9300      	str	r3, [sp, #0]
 80175c2:	4633      	mov	r3, r6
 80175c4:	9201      	str	r2, [sp, #4]
 80175c6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80175c8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80175cc:	e9cd c003 	strd	ip, r0, [sp, #12]
 80175d0:	4639      	mov	r1, r7
 80175d2:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80175d4:	f7ff fd8e 	bl	80170f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80175d8:	e760      	b.n	801749c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80175da:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80175dc:	ea4f 422a 	mov.w	r2, sl, asr #16
 80175e0:	1429      	asrs	r1, r5, #16
 80175e2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80175e4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80175e8:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80175ec:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80175f0:	fb03 2101 	mla	r1, r3, r1, r2
 80175f4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80175f6:	440a      	add	r2, r1
 80175f8:	5c61      	ldrb	r1, [r4, r1]
 80175fa:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80175fe:	f1bc 0f00 	cmp.w	ip, #0
 8017602:	f000 808c 	beq.w	801771e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8017606:	7857      	ldrb	r7, [r2, #1]
 8017608:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801760c:	9413      	str	r4, [sp, #76]	@ 0x4c
 801760e:	b140      	cbz	r0, 8017622 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017610:	18d7      	adds	r7, r2, r3
 8017612:	5cd3      	ldrb	r3, [r2, r3]
 8017614:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8017618:	9310      	str	r3, [sp, #64]	@ 0x40
 801761a:	787b      	ldrb	r3, [r7, #1]
 801761c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8017620:	9314      	str	r3, [sp, #80]	@ 0x50
 8017622:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8017624:	fb1c f200 	smulbb	r2, ip, r0
 8017628:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801762a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801762e:	041f      	lsls	r7, r3, #16
 8017630:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8017634:	10d2      	asrs	r2, r2, #3
 8017636:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801763a:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801763e:	431f      	orrs	r7, r3
 8017640:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8017644:	9317      	str	r3, [sp, #92]	@ 0x5c
 8017646:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8017648:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801764a:	041b      	lsls	r3, r3, #16
 801764c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017650:	ea43 030b 	orr.w	r3, r3, fp
 8017654:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017658:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801765c:	4353      	muls	r3, r2
 801765e:	fb04 3707 	mla	r7, r4, r7, r3
 8017662:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8017666:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8017668:	ea43 0b01 	orr.w	fp, r3, r1
 801766c:	f1c0 0110 	rsb	r1, r0, #16
 8017670:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017672:	eba1 0c0c 	sub.w	ip, r1, ip
 8017676:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801767a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801767e:	fb0c 770b 	mla	r7, ip, fp, r7
 8017682:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017686:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801768a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801768e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8017692:	fb02 770c 	mla	r7, r2, ip, r7
 8017696:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017698:	0d79      	lsrs	r1, r7, #21
 801769a:	8812      	ldrh	r2, [r2, #0]
 801769c:	097f      	lsrs	r7, r7, #5
 801769e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80176a2:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80176a6:	430f      	orrs	r7, r1
 80176a8:	1211      	asrs	r1, r2, #8
 80176aa:	b2bb      	uxth	r3, r7
 80176ac:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80176b0:	10d7      	asrs	r7, r2, #3
 80176b2:	fb11 f104 	smulbb	r1, r1, r4
 80176b6:	1218      	asrs	r0, r3, #8
 80176b8:	00d2      	lsls	r2, r2, #3
 80176ba:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80176be:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80176c2:	fb17 f704 	smulbb	r7, r7, r4
 80176c6:	b2d2      	uxtb	r2, r2
 80176c8:	fb00 1009 	mla	r0, r0, r9, r1
 80176cc:	10d9      	asrs	r1, r3, #3
 80176ce:	fb12 f204 	smulbb	r2, r2, r4
 80176d2:	00db      	lsls	r3, r3, #3
 80176d4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80176d8:	b280      	uxth	r0, r0
 80176da:	b2db      	uxtb	r3, r3
 80176dc:	fb01 7109 	mla	r1, r1, r9, r7
 80176e0:	fb03 2309 	mla	r3, r3, r9, r2
 80176e4:	1c42      	adds	r2, r0, #1
 80176e6:	b289      	uxth	r1, r1
 80176e8:	b29b      	uxth	r3, r3
 80176ea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80176ee:	1c4f      	adds	r7, r1, #1
 80176f0:	1c5a      	adds	r2, r3, #1
 80176f2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80176f6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80176fa:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80176fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017700:	0949      	lsrs	r1, r1, #5
 8017702:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017706:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801770a:	4310      	orrs	r0, r2
 801770c:	4308      	orrs	r0, r1
 801770e:	f823 0b02 	strh.w	r0, [r3], #2
 8017712:	930e      	str	r3, [sp, #56]	@ 0x38
 8017714:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8017716:	449a      	add	sl, r3
 8017718:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801771a:	441d      	add	r5, r3
 801771c:	e6ed      	b.n	80174fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801771e:	2800      	cmp	r0, #0
 8017720:	f43f af7f 	beq.w	8017622 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017724:	5cd3      	ldrb	r3, [r2, r3]
 8017726:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801772a:	9310      	str	r3, [sp, #64]	@ 0x40
 801772c:	e779      	b.n	8017622 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801772e:	b019      	add	sp, #100	@ 0x64
 8017730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017734 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8017734:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017738:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801773c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8017740:	f1b8 0f00 	cmp.w	r8, #0
 8017744:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 8017748:	fb08 470e 	mla	r7, r8, lr, r4
 801774c:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8017750:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8017754:	eb02 0907 	add.w	r9, r2, r7
 8017758:	8808      	ldrh	r0, [r1, #0]
 801775a:	db67      	blt.n	801782c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801775c:	45c2      	cmp	sl, r8
 801775e:	dd65      	ble.n	801782c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8017760:	2c00      	cmp	r4, #0
 8017762:	db61      	blt.n	8017828 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8017764:	45a6      	cmp	lr, r4
 8017766:	dd5f      	ble.n	8017828 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8017768:	5dd2      	ldrb	r2, [r2, r7]
 801776a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801776e:	1c62      	adds	r2, r4, #1
 8017770:	d45f      	bmi.n	8017832 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8017772:	4596      	cmp	lr, r2
 8017774:	dd5d      	ble.n	8017832 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8017776:	2d00      	cmp	r5, #0
 8017778:	d05b      	beq.n	8017832 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801777a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801777e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8017782:	f118 0801 	adds.w	r8, r8, #1
 8017786:	d458      	bmi.n	801783a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8017788:	45c2      	cmp	sl, r8
 801778a:	dd56      	ble.n	801783a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801778c:	2e00      	cmp	r6, #0
 801778e:	d054      	beq.n	801783a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8017790:	2c00      	cmp	r4, #0
 8017792:	db50      	blt.n	8017836 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8017794:	45a6      	cmp	lr, r4
 8017796:	dd4e      	ble.n	8017836 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8017798:	f819 200e 	ldrb.w	r2, [r9, lr]
 801779c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80177a0:	3401      	adds	r4, #1
 80177a2:	d407      	bmi.n	80177b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80177a4:	45a6      	cmp	lr, r4
 80177a6:	dd05      	ble.n	80177b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80177a8:	b125      	cbz	r5, 80177b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80177aa:	44ce      	add	lr, r9
 80177ac:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80177b0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80177b4:	fb15 f406 	smulbb	r4, r5, r6
 80177b8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80177bc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80177c0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80177c4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80177c8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80177cc:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80177d0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80177d4:	ea43 0c0c 	orr.w	ip, r3, ip
 80177d8:	f1c6 0310 	rsb	r3, r6, #16
 80177dc:	ea4e 0707 	orr.w	r7, lr, r7
 80177e0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80177e4:	1b5b      	subs	r3, r3, r5
 80177e6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80177ea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80177ee:	437d      	muls	r5, r7
 80177f0:	fb03 5c0c 	mla	ip, r3, ip, r5
 80177f4:	0403      	lsls	r3, r0, #16
 80177f6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80177fa:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80177fe:	4318      	orrs	r0, r3
 8017800:	0413      	lsls	r3, r2, #16
 8017802:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8017806:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801780a:	fb04 c000 	mla	r0, r4, r0, ip
 801780e:	4313      	orrs	r3, r2
 8017810:	fb06 0003 	mla	r0, r6, r3, r0
 8017814:	0d43      	lsrs	r3, r0, #21
 8017816:	0940      	lsrs	r0, r0, #5
 8017818:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801781c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8017820:	4318      	orrs	r0, r3
 8017822:	8008      	strh	r0, [r1, #0]
 8017824:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017828:	4684      	mov	ip, r0
 801782a:	e7a0      	b.n	801776e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801782c:	4607      	mov	r7, r0
 801782e:	4684      	mov	ip, r0
 8017830:	e7a7      	b.n	8017782 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8017832:	4607      	mov	r7, r0
 8017834:	e7a5      	b.n	8017782 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8017836:	4602      	mov	r2, r0
 8017838:	e7b2      	b.n	80177a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801783a:	4602      	mov	r2, r0
 801783c:	e7ba      	b.n	80177b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801783e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801783e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017842:	b093      	sub	sp, #76	@ 0x4c
 8017844:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017848:	920f      	str	r2, [sp, #60]	@ 0x3c
 801784a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801784c:	9010      	str	r0, [sp, #64]	@ 0x40
 801784e:	9108      	str	r1, [sp, #32]
 8017850:	6850      	ldr	r0, [r2, #4]
 8017852:	9306      	str	r3, [sp, #24]
 8017854:	6812      	ldr	r2, [r2, #0]
 8017856:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801785a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801785e:	fb00 1303 	mla	r3, r0, r3, r1
 8017862:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8017866:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017868:	681b      	ldr	r3, [r3, #0]
 801786a:	9307      	str	r3, [sp, #28]
 801786c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801786e:	685f      	ldr	r7, [r3, #4]
 8017870:	3704      	adds	r7, #4
 8017872:	9b08      	ldr	r3, [sp, #32]
 8017874:	2b00      	cmp	r3, #0
 8017876:	dc03      	bgt.n	8017880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8017878:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801787a:	2b00      	cmp	r3, #0
 801787c:	f340 81b2 	ble.w	8017be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8017880:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017882:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017886:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801788a:	1e48      	subs	r0, r1, #1
 801788c:	f102 3cff 	add.w	ip, r2, #4294967295
 8017890:	9b06      	ldr	r3, [sp, #24]
 8017892:	2b00      	cmp	r3, #0
 8017894:	f340 80a9 	ble.w	80179ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8017898:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801789c:	ea4f 4326 	mov.w	r3, r6, asr #16
 80178a0:	d406      	bmi.n	80178b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80178a2:	4586      	cmp	lr, r0
 80178a4:	da04      	bge.n	80178b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80178a6:	2b00      	cmp	r3, #0
 80178a8:	db02      	blt.n	80178b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80178aa:	4563      	cmp	r3, ip
 80178ac:	f2c0 809e 	blt.w	80179ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80178b0:	f11e 0e01 	adds.w	lr, lr, #1
 80178b4:	f100 808f 	bmi.w	80179d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80178b8:	4571      	cmp	r1, lr
 80178ba:	f2c0 808c 	blt.w	80179d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80178be:	3301      	adds	r3, #1
 80178c0:	f100 8089 	bmi.w	80179d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80178c4:	429a      	cmp	r2, r3
 80178c6:	f2c0 8086 	blt.w	80179d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80178ca:	f8dd b018 	ldr.w	fp, [sp, #24]
 80178ce:	46c8      	mov	r8, r9
 80178d0:	f1bb 0f00 	cmp.w	fp, #0
 80178d4:	f340 80a6 	ble.w	8017a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80178d8:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80178da:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80178de:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80178e0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80178e4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80178e8:	1422      	asrs	r2, r4, #16
 80178ea:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80178ee:	689b      	ldr	r3, [r3, #8]
 80178f0:	f100 80e3 	bmi.w	8017aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80178f4:	f103 3aff 	add.w	sl, r3, #4294967295
 80178f8:	4552      	cmp	r2, sl
 80178fa:	f280 80de 	bge.w	8017aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80178fe:	f1bc 0f00 	cmp.w	ip, #0
 8017902:	f2c0 80da 	blt.w	8017aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8017906:	f10e 3aff 	add.w	sl, lr, #4294967295
 801790a:	45d4      	cmp	ip, sl
 801790c:	f280 80d5 	bge.w	8017aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8017910:	b21b      	sxth	r3, r3
 8017912:	9d07      	ldr	r5, [sp, #28]
 8017914:	fb0c 2203 	mla	r2, ip, r3, r2
 8017918:	eb05 0a02 	add.w	sl, r5, r2
 801791c:	5caa      	ldrb	r2, [r5, r2]
 801791e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8017922:	2800      	cmp	r0, #0
 8017924:	f000 80c0 	beq.w	8017aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8017928:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801792c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8017930:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017932:	b151      	cbz	r1, 801794a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8017934:	eb0a 0203 	add.w	r2, sl, r3
 8017938:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801793c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017940:	9309      	str	r3, [sp, #36]	@ 0x24
 8017942:	7853      	ldrb	r3, [r2, #1]
 8017944:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017948:	930c      	str	r3, [sp, #48]	@ 0x30
 801794a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801794c:	fb10 f201 	smulbb	r2, r0, r1
 8017950:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8017952:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017956:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801795a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801795e:	10d2      	asrs	r2, r2, #3
 8017960:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8017964:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8017968:	ea4c 0c03 	orr.w	ip, ip, r3
 801796c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801796e:	041b      	lsls	r3, r3, #16
 8017970:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017974:	432b      	orrs	r3, r5
 8017976:	4353      	muls	r3, r2
 8017978:	fb0a 330c 	mla	r3, sl, ip, r3
 801797c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8017980:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8017984:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8017988:	ea4c 0e0e 	orr.w	lr, ip, lr
 801798c:	f1c1 0c10 	rsb	ip, r1, #16
 8017990:	ebac 0c00 	sub.w	ip, ip, r0
 8017994:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8017998:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801799c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80179a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80179a2:	0418      	lsls	r0, r3, #16
 80179a4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80179a8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80179ac:	4318      	orrs	r0, r3
 80179ae:	fb02 c200 	mla	r2, r2, r0, ip
 80179b2:	0d53      	lsrs	r3, r2, #21
 80179b4:	0952      	lsrs	r2, r2, #5
 80179b6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80179ba:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80179be:	431a      	orrs	r2, r3
 80179c0:	f8a8 2000 	strh.w	r2, [r8]
 80179c4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80179c6:	f108 0802 	add.w	r8, r8, #2
 80179ca:	f10b 3bff 	add.w	fp, fp, #4294967295
 80179ce:	441c      	add	r4, r3
 80179d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80179d2:	441e      	add	r6, r3
 80179d4:	e77c      	b.n	80178d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80179d6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80179d8:	f109 0902 	add.w	r9, r9, #2
 80179dc:	441c      	add	r4, r3
 80179de:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80179e0:	441e      	add	r6, r3
 80179e2:	9b06      	ldr	r3, [sp, #24]
 80179e4:	3b01      	subs	r3, #1
 80179e6:	9306      	str	r3, [sp, #24]
 80179e8:	e752      	b.n	8017890 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80179ea:	d020      	beq.n	8017a2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80179ec:	9b06      	ldr	r3, [sp, #24]
 80179ee:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80179f0:	3b01      	subs	r3, #1
 80179f2:	fb00 4003 	mla	r0, r0, r3, r4
 80179f6:	1400      	asrs	r0, r0, #16
 80179f8:	f53f af67 	bmi.w	80178ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80179fc:	3901      	subs	r1, #1
 80179fe:	4288      	cmp	r0, r1
 8017a00:	f6bf af63 	bge.w	80178ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017a04:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8017a06:	fb01 6303 	mla	r3, r1, r3, r6
 8017a0a:	141b      	asrs	r3, r3, #16
 8017a0c:	f53f af5d 	bmi.w	80178ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017a10:	3a01      	subs	r2, #1
 8017a12:	4293      	cmp	r3, r2
 8017a14:	f6bf af59 	bge.w	80178ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017a18:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8017a1c:	46ca      	mov	sl, r9
 8017a1e:	f1b8 0f00 	cmp.w	r8, #0
 8017a22:	dc67      	bgt.n	8017af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8017a24:	9b06      	ldr	r3, [sp, #24]
 8017a26:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017a2a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8017a2e:	9b08      	ldr	r3, [sp, #32]
 8017a30:	2b00      	cmp	r3, #0
 8017a32:	f340 80d7 	ble.w	8017be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8017a36:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017a3a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017a3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017a40:	eeb0 6a62 	vmov.f32	s12, s5
 8017a44:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017a48:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017a4c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a50:	ee16 4a10 	vmov	r4, s12
 8017a54:	eeb0 6a43 	vmov.f32	s12, s6
 8017a58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a5c:	ee16 6a10 	vmov	r6, s12
 8017a60:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017a64:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017a68:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017a6c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017a70:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017a74:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017a78:	ee12 2a90 	vmov	r2, s5
 8017a7c:	eef0 2a47 	vmov.f32	s5, s14
 8017a80:	fb92 f3f3 	sdiv	r3, r2, r3
 8017a84:	ee13 2a10 	vmov	r2, s6
 8017a88:	931f      	str	r3, [sp, #124]	@ 0x7c
 8017a8a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017a8c:	eeb0 3a67 	vmov.f32	s6, s15
 8017a90:	fb92 f3f3 	sdiv	r3, r2, r3
 8017a94:	9320      	str	r3, [sp, #128]	@ 0x80
 8017a96:	9b08      	ldr	r3, [sp, #32]
 8017a98:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017a9a:	3b01      	subs	r3, #1
 8017a9c:	9308      	str	r3, [sp, #32]
 8017a9e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017aa0:	bf08      	it	eq
 8017aa2:	4613      	moveq	r3, r2
 8017aa4:	9306      	str	r3, [sp, #24]
 8017aa6:	e6e4      	b.n	8017872 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8017aa8:	2900      	cmp	r1, #0
 8017aaa:	f43f af4e 	beq.w	801794a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8017aae:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8017ab2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017ab6:	9309      	str	r3, [sp, #36]	@ 0x24
 8017ab8:	e747      	b.n	801794a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8017aba:	f112 0a01 	adds.w	sl, r2, #1
 8017abe:	d481      	bmi.n	80179c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017ac0:	4553      	cmp	r3, sl
 8017ac2:	f6ff af7f 	blt.w	80179c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017ac6:	f11c 0a01 	adds.w	sl, ip, #1
 8017aca:	f53f af7b 	bmi.w	80179c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017ace:	45d6      	cmp	lr, sl
 8017ad0:	f6ff af78 	blt.w	80179c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017ad4:	b21b      	sxth	r3, r3
 8017ad6:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8017ada:	fa0f f28e 	sxth.w	r2, lr
 8017ade:	9300      	str	r3, [sp, #0]
 8017ae0:	463b      	mov	r3, r7
 8017ae2:	9201      	str	r2, [sp, #4]
 8017ae4:	9a07      	ldr	r2, [sp, #28]
 8017ae6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8017aea:	4641      	mov	r1, r8
 8017aec:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8017aee:	f7ff fe21 	bl	8017734 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8017af2:	e767      	b.n	80179c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017af4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017af6:	1422      	asrs	r2, r4, #16
 8017af8:	1431      	asrs	r1, r6, #16
 8017afa:	9d07      	ldr	r5, [sp, #28]
 8017afc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8017b00:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8017b04:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017b08:	fb03 2101 	mla	r1, r3, r1, r2
 8017b0c:	9a07      	ldr	r2, [sp, #28]
 8017b0e:	440a      	add	r2, r1
 8017b10:	5c69      	ldrb	r1, [r5, r1]
 8017b12:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8017b16:	f1be 0f00 	cmp.w	lr, #0
 8017b1a:	d05c      	beq.n	8017bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8017b1c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8017b20:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8017b24:	950d      	str	r5, [sp, #52]	@ 0x34
 8017b26:	b150      	cbz	r0, 8017b3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8017b28:	eb02 0c03 	add.w	ip, r2, r3
 8017b2c:	5cd3      	ldrb	r3, [r2, r3]
 8017b2e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017b32:	930a      	str	r3, [sp, #40]	@ 0x28
 8017b34:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8017b38:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017b3c:	930e      	str	r3, [sp, #56]	@ 0x38
 8017b3e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017b40:	fb1e f200 	smulbb	r2, lr, r0
 8017b44:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8017b46:	f108 38ff 	add.w	r8, r8, #4294967295
 8017b4a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017b4e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8017b52:	10d2      	asrs	r2, r2, #3
 8017b54:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 8017b58:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8017b5c:	ea4c 0c03 	orr.w	ip, ip, r3
 8017b60:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8017b64:	9311      	str	r3, [sp, #68]	@ 0x44
 8017b66:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017b68:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8017b6a:	041b      	lsls	r3, r3, #16
 8017b6c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017b70:	ea43 030b 	orr.w	r3, r3, fp
 8017b74:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017b78:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8017b7c:	4353      	muls	r3, r2
 8017b7e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8017b82:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8017b86:	ea43 0b01 	orr.w	fp, r3, r1
 8017b8a:	f1c0 0110 	rsb	r1, r0, #16
 8017b8e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017b90:	eba1 0e0e 	sub.w	lr, r1, lr
 8017b94:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8017b98:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8017b9c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8017ba0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017ba4:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 8017ba8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8017bac:	ea4b 0e0e 	orr.w	lr, fp, lr
 8017bb0:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017bb4:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8017bb8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8017bbc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017bc0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8017bc4:	ea43 0c0c 	orr.w	ip, r3, ip
 8017bc8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017bca:	441c      	add	r4, r3
 8017bcc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017bce:	f82a cb02 	strh.w	ip, [sl], #2
 8017bd2:	441e      	add	r6, r3
 8017bd4:	e723      	b.n	8017a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8017bd6:	2800      	cmp	r0, #0
 8017bd8:	d0b1      	beq.n	8017b3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8017bda:	5cd3      	ldrb	r3, [r2, r3]
 8017bdc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017be0:	930a      	str	r3, [sp, #40]	@ 0x28
 8017be2:	e7ac      	b.n	8017b3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8017be4:	b013      	add	sp, #76	@ 0x4c
 8017be6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017bea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8017bea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bee:	880d      	ldrh	r5, [r1, #0]
 8017bf0:	b087      	sub	sp, #28
 8017bf2:	10ef      	asrs	r7, r5, #3
 8017bf4:	9103      	str	r1, [sp, #12]
 8017bf6:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8017bfa:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 8017bfe:	00ed      	lsls	r5, r5, #3
 8017c00:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017c04:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8017c08:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8017c0c:	b2ed      	uxtb	r5, r5
 8017c0e:	9701      	str	r7, [sp, #4]
 8017c10:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 8017c14:	9502      	str	r5, [sp, #8]
 8017c16:	9d01      	ldr	r5, [sp, #4]
 8017c18:	9902      	ldr	r1, [sp, #8]
 8017c1a:	022d      	lsls	r5, r5, #8
 8017c1c:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 8017c20:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 8017c24:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8017c28:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8017c2c:	430d      	orrs	r5, r1
 8017c2e:	fb06 0709 	mla	r7, r6, r9, r0
 8017c32:	2e00      	cmp	r6, #0
 8017c34:	9505      	str	r5, [sp, #20]
 8017c36:	eb02 0c07 	add.w	ip, r2, r7
 8017c3a:	f2c0 80b6 	blt.w	8017daa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8017c3e:	45b3      	cmp	fp, r6
 8017c40:	f340 80b3 	ble.w	8017daa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8017c44:	2800      	cmp	r0, #0
 8017c46:	f2c0 80ae 	blt.w	8017da6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8017c4a:	4581      	cmp	r9, r0
 8017c4c:	f340 80ab 	ble.w	8017da6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8017c50:	5dd7      	ldrb	r7, [r2, r7]
 8017c52:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8017c56:	441f      	add	r7, r3
 8017c58:	1c42      	adds	r2, r0, #1
 8017c5a:	f100 80a9 	bmi.w	8017db0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8017c5e:	4591      	cmp	r9, r2
 8017c60:	f340 80a6 	ble.w	8017db0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8017c64:	2c00      	cmp	r4, #0
 8017c66:	f000 80a3 	beq.w	8017db0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8017c6a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8017c6e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017c72:	441d      	add	r5, r3
 8017c74:	3601      	adds	r6, #1
 8017c76:	f100 809f 	bmi.w	8017db8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8017c7a:	45b3      	cmp	fp, r6
 8017c7c:	f340 809c 	ble.w	8017db8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8017c80:	f1be 0f00 	cmp.w	lr, #0
 8017c84:	f000 8098 	beq.w	8017db8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8017c88:	2800      	cmp	r0, #0
 8017c8a:	f2c0 8093 	blt.w	8017db4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8017c8e:	4581      	cmp	r9, r0
 8017c90:	f340 8090 	ble.w	8017db4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8017c94:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8017c98:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017c9c:	441e      	add	r6, r3
 8017c9e:	3001      	adds	r0, #1
 8017ca0:	f100 808d 	bmi.w	8017dbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8017ca4:	4581      	cmp	r9, r0
 8017ca6:	f340 808a 	ble.w	8017dbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8017caa:	2c00      	cmp	r4, #0
 8017cac:	f000 8087 	beq.w	8017dbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8017cb0:	44e1      	add	r9, ip
 8017cb2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8017cb6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017cba:	4413      	add	r3, r2
 8017cbc:	b2a4      	uxth	r4, r4
 8017cbe:	f897 c002 	ldrb.w	ip, [r7, #2]
 8017cc2:	fa1f fe8e 	uxth.w	lr, lr
 8017cc6:	9901      	ldr	r1, [sp, #4]
 8017cc8:	fb04 fb0e 	mul.w	fp, r4, lr
 8017ccc:	0124      	lsls	r4, r4, #4
 8017cce:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8017cd2:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 8017cd6:	eba4 040b 	sub.w	r4, r4, fp
 8017cda:	fa1f f08e 	uxth.w	r0, lr
 8017cde:	b2a2      	uxth	r2, r4
 8017ce0:	78ac      	ldrb	r4, [r5, #2]
 8017ce2:	eba9 0900 	sub.w	r9, r9, r0
 8017ce6:	fa1f fe88 	uxth.w	lr, r8
 8017cea:	4354      	muls	r4, r2
 8017cec:	ea6f 0808 	mvn.w	r8, r8
 8017cf0:	fa1f f989 	uxth.w	r9, r9
 8017cf4:	fa5f f888 	uxtb.w	r8, r8
 8017cf8:	fb09 440c 	mla	r4, r9, ip, r4
 8017cfc:	f896 c002 	ldrb.w	ip, [r6, #2]
 8017d00:	fb1a fa08 	smulbb	sl, sl, r8
 8017d04:	fb00 440c 	mla	r4, r0, ip, r4
 8017d08:	f893 c002 	ldrb.w	ip, [r3, #2]
 8017d0c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8017d10:	787c      	ldrb	r4, [r7, #1]
 8017d12:	783f      	ldrb	r7, [r7, #0]
 8017d14:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8017d18:	fb0c ac0e 	mla	ip, ip, lr, sl
 8017d1c:	f895 a001 	ldrb.w	sl, [r5, #1]
 8017d20:	782d      	ldrb	r5, [r5, #0]
 8017d22:	fb02 fa0a 	mul.w	sl, r2, sl
 8017d26:	fa1f fc8c 	uxth.w	ip, ip
 8017d2a:	436a      	muls	r2, r5
 8017d2c:	7835      	ldrb	r5, [r6, #0]
 8017d2e:	fb09 aa04 	mla	sl, r9, r4, sl
 8017d32:	7874      	ldrb	r4, [r6, #1]
 8017d34:	fb09 2207 	mla	r2, r9, r7, r2
 8017d38:	fb00 aa04 	mla	sl, r0, r4, sl
 8017d3c:	785c      	ldrb	r4, [r3, #1]
 8017d3e:	fb00 2005 	mla	r0, r0, r5, r2
 8017d42:	781b      	ldrb	r3, [r3, #0]
 8017d44:	fb0b a404 	mla	r4, fp, r4, sl
 8017d48:	fb11 fa08 	smulbb	sl, r1, r8
 8017d4c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8017d50:	9b02      	ldr	r3, [sp, #8]
 8017d52:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8017d56:	fb13 f808 	smulbb	r8, r3, r8
 8017d5a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8017d5e:	fb04 a40e 	mla	r4, r4, lr, sl
 8017d62:	f10c 0301 	add.w	r3, ip, #1
 8017d66:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8017d6a:	b2a4      	uxth	r4, r4
 8017d6c:	fa1f fe8e 	uxth.w	lr, lr
 8017d70:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8017d74:	f104 0a01 	add.w	sl, r4, #1
 8017d78:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 8017d7c:	f10e 0c01 	add.w	ip, lr, #1
 8017d80:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017d84:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8017d88:	0964      	lsrs	r4, r4, #5
 8017d8a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017d8e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8017d92:	ea4c 0c03 	orr.w	ip, ip, r3
 8017d96:	9b03      	ldr	r3, [sp, #12]
 8017d98:	ea4c 0c04 	orr.w	ip, ip, r4
 8017d9c:	f8a3 c000 	strh.w	ip, [r3]
 8017da0:	b007      	add	sp, #28
 8017da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017da6:	af05      	add	r7, sp, #20
 8017da8:	e756      	b.n	8017c58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8017daa:	ad05      	add	r5, sp, #20
 8017dac:	462f      	mov	r7, r5
 8017dae:	e761      	b.n	8017c74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8017db0:	ad05      	add	r5, sp, #20
 8017db2:	e75f      	b.n	8017c74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8017db4:	ae05      	add	r6, sp, #20
 8017db6:	e772      	b.n	8017c9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8017db8:	ab05      	add	r3, sp, #20
 8017dba:	461e      	mov	r6, r3
 8017dbc:	e77e      	b.n	8017cbc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8017dbe:	ab05      	add	r3, sp, #20
 8017dc0:	e77c      	b.n	8017cbc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08017dc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017dc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017dc6:	b095      	sub	sp, #84	@ 0x54
 8017dc8:	9212      	str	r2, [sp, #72]	@ 0x48
 8017dca:	9309      	str	r3, [sp, #36]	@ 0x24
 8017dcc:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8017dce:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8017dd2:	9013      	str	r0, [sp, #76]	@ 0x4c
 8017dd4:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017dd6:	6850      	ldr	r0, [r2, #4]
 8017dd8:	910e      	str	r1, [sp, #56]	@ 0x38
 8017dda:	6812      	ldr	r2, [r2, #0]
 8017ddc:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 8017de0:	fb00 1303 	mla	r3, r0, r3, r1
 8017de4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017de8:	930a      	str	r3, [sp, #40]	@ 0x28
 8017dea:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8017dec:	681b      	ldr	r3, [r3, #0]
 8017dee:	930d      	str	r3, [sp, #52]	@ 0x34
 8017df0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8017df2:	685c      	ldr	r4, [r3, #4]
 8017df4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017df6:	3404      	adds	r4, #4
 8017df8:	43db      	mvns	r3, r3
 8017dfa:	b2db      	uxtb	r3, r3
 8017dfc:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017dfe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017e00:	2b00      	cmp	r3, #0
 8017e02:	dc03      	bgt.n	8017e0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017e04:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8017e06:	2b00      	cmp	r3, #0
 8017e08:	f340 8255 	ble.w	80182b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8017e0c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8017e0e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017e12:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017e16:	1e48      	subs	r0, r1, #1
 8017e18:	1e55      	subs	r5, r2, #1
 8017e1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017e1c:	2b00      	cmp	r3, #0
 8017e1e:	f340 80f9 	ble.w	8018014 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8017e22:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8017e24:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017e26:	1436      	asrs	r6, r6, #16
 8017e28:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017e2c:	d406      	bmi.n	8017e3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017e2e:	4286      	cmp	r6, r0
 8017e30:	da04      	bge.n	8017e3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017e32:	2b00      	cmp	r3, #0
 8017e34:	db02      	blt.n	8017e3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017e36:	42ab      	cmp	r3, r5
 8017e38:	f2c0 80ed 	blt.w	8018016 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8017e3c:	3601      	adds	r6, #1
 8017e3e:	f100 80da 	bmi.w	8017ff6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8017e42:	42b1      	cmp	r1, r6
 8017e44:	f2c0 80d7 	blt.w	8017ff6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8017e48:	3301      	adds	r3, #1
 8017e4a:	f100 80d4 	bmi.w	8017ff6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8017e4e:	429a      	cmp	r2, r3
 8017e50:	f2c0 80d1 	blt.w	8017ff6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8017e54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017e56:	9311      	str	r3, [sp, #68]	@ 0x44
 8017e58:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017e5a:	930c      	str	r3, [sp, #48]	@ 0x30
 8017e5c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8017e5e:	2b00      	cmp	r3, #0
 8017e60:	f340 80fa 	ble.w	8018058 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8017e64:	9826      	ldr	r0, [sp, #152]	@ 0x98
 8017e66:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017e68:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8017e6a:	68c6      	ldr	r6, [r0, #12]
 8017e6c:	141d      	asrs	r5, r3, #16
 8017e6e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8017e70:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8017e74:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017e76:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8017e78:	1400      	asrs	r0, r0, #16
 8017e7a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8017e7e:	6892      	ldr	r2, [r2, #8]
 8017e80:	f100 813e 	bmi.w	8018100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8017e84:	1e57      	subs	r7, r2, #1
 8017e86:	42b8      	cmp	r0, r7
 8017e88:	f280 813a 	bge.w	8018100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8017e8c:	2d00      	cmp	r5, #0
 8017e8e:	f2c0 8137 	blt.w	8018100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8017e92:	1e77      	subs	r7, r6, #1
 8017e94:	42bd      	cmp	r5, r7
 8017e96:	f280 8133 	bge.w	8018100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8017e9a:	b212      	sxth	r2, r2
 8017e9c:	fb05 0002 	mla	r0, r5, r2, r0
 8017ea0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8017ea2:	f815 a000 	ldrb.w	sl, [r5, r0]
 8017ea6:	182e      	adds	r6, r5, r0
 8017ea8:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8017eac:	eb04 050a 	add.w	r5, r4, sl
 8017eb0:	2b00      	cmp	r3, #0
 8017eb2:	f000 8117 	beq.w	80180e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8017eb6:	f896 c001 	ldrb.w	ip, [r6, #1]
 8017eba:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017ebe:	44a4      	add	ip, r4
 8017ec0:	2900      	cmp	r1, #0
 8017ec2:	f000 8117 	beq.w	80180f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8017ec6:	18b0      	adds	r0, r6, r2
 8017ec8:	5cb2      	ldrb	r2, [r6, r2]
 8017eca:	7840      	ldrb	r0, [r0, #1]
 8017ecc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017ed0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017ed4:	4422      	add	r2, r4
 8017ed6:	4420      	add	r0, r4
 8017ed8:	b29b      	uxth	r3, r3
 8017eda:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8017ede:	b289      	uxth	r1, r1
 8017ee0:	f895 b002 	ldrb.w	fp, [r5, #2]
 8017ee4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8017ee6:	fb03 f901 	mul.w	r9, r3, r1
 8017eea:	011b      	lsls	r3, r3, #4
 8017eec:	f8b6 e000 	ldrh.w	lr, [r6]
 8017ef0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017ef4:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 8017ef8:	eba3 0309 	sub.w	r3, r3, r9
 8017efc:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 8017f00:	b289      	uxth	r1, r1
 8017f02:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8017f06:	b29b      	uxth	r3, r3
 8017f08:	eba8 0801 	sub.w	r8, r8, r1
 8017f0c:	435f      	muls	r7, r3
 8017f0e:	fa1f f888 	uxth.w	r8, r8
 8017f12:	9310      	str	r3, [sp, #64]	@ 0x40
 8017f14:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017f16:	fb08 770b 	mla	r7, r8, fp, r7
 8017f1a:	f892 b002 	ldrb.w	fp, [r2, #2]
 8017f1e:	fb01 770b 	mla	r7, r1, fp, r7
 8017f22:	f890 b002 	ldrb.w	fp, [r0, #2]
 8017f26:	fb09 770b 	mla	r7, r9, fp, r7
 8017f2a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8017f2e:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8017f32:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8017f36:	fb1b fb03 	smulbb	fp, fp, r3
 8017f3a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017f3c:	fb07 b706 	mla	r7, r7, r6, fp
 8017f40:	f895 b001 	ldrb.w	fp, [r5, #1]
 8017f44:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8017f48:	f89c c000 	ldrb.w	ip, [ip]
 8017f4c:	b2bf      	uxth	r7, r7
 8017f4e:	435d      	muls	r5, r3
 8017f50:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017f52:	fb08 550b 	mla	r5, r8, fp, r5
 8017f56:	f892 b001 	ldrb.w	fp, [r2, #1]
 8017f5a:	fb01 550b 	mla	r5, r1, fp, r5
 8017f5e:	f890 b001 	ldrb.w	fp, [r0, #1]
 8017f62:	fb09 550b 	mla	r5, r9, fp, r5
 8017f66:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8017f6a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017f6e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8017f72:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8017f76:	fa5f fe8e 	uxtb.w	lr, lr
 8017f7a:	fb1b fb03 	smulbb	fp, fp, r3
 8017f7e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017f80:	fb03 f30c 	mul.w	r3, r3, ip
 8017f84:	f892 c000 	ldrb.w	ip, [r2]
 8017f88:	fb05 b506 	mla	r5, r5, r6, fp
 8017f8c:	fb08 330a 	mla	r3, r8, sl, r3
 8017f90:	b2ad      	uxth	r5, r5
 8017f92:	fb01 330c 	mla	r3, r1, ip, r3
 8017f96:	f890 c000 	ldrb.w	ip, [r0]
 8017f9a:	f105 0b01 	add.w	fp, r5, #1
 8017f9e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8017fa2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017fa4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8017fa8:	fb1e fe03 	smulbb	lr, lr, r3
 8017fac:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8017fb0:	1c7b      	adds	r3, r7, #1
 8017fb2:	096d      	lsrs	r5, r5, #5
 8017fb4:	fb0c e606 	mla	r6, ip, r6, lr
 8017fb8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8017fbc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017fc0:	b2b6      	uxth	r6, r6
 8017fc2:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 8017fc6:	1c77      	adds	r7, r6, #1
 8017fc8:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8017fcc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017fd0:	431f      	orrs	r7, r3
 8017fd2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017fd4:	433d      	orrs	r5, r7
 8017fd6:	801d      	strh	r5, [r3, #0]
 8017fd8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017fda:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8017fdc:	3302      	adds	r3, #2
 8017fde:	930c      	str	r3, [sp, #48]	@ 0x30
 8017fe0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017fe2:	4413      	add	r3, r2
 8017fe4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8017fe6:	931f      	str	r3, [sp, #124]	@ 0x7c
 8017fe8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017fea:	4413      	add	r3, r2
 8017fec:	9320      	str	r3, [sp, #128]	@ 0x80
 8017fee:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8017ff0:	3b01      	subs	r3, #1
 8017ff2:	9311      	str	r3, [sp, #68]	@ 0x44
 8017ff4:	e732      	b.n	8017e5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017ff6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017ff8:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8017ffa:	4433      	add	r3, r6
 8017ffc:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8017ffe:	931f      	str	r3, [sp, #124]	@ 0x7c
 8018000:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018002:	4433      	add	r3, r6
 8018004:	9320      	str	r3, [sp, #128]	@ 0x80
 8018006:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018008:	3b01      	subs	r3, #1
 801800a:	9309      	str	r3, [sp, #36]	@ 0x24
 801800c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801800e:	3302      	adds	r3, #2
 8018010:	930a      	str	r3, [sp, #40]	@ 0x28
 8018012:	e702      	b.n	8017e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8018014:	d027      	beq.n	8018066 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8018016:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018018:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801801a:	3b01      	subs	r3, #1
 801801c:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801801e:	fb00 5003 	mla	r0, r0, r3, r5
 8018022:	1400      	asrs	r0, r0, #16
 8018024:	f53f af16 	bmi.w	8017e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018028:	3901      	subs	r1, #1
 801802a:	4288      	cmp	r0, r1
 801802c:	f6bf af12 	bge.w	8017e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018030:	9922      	ldr	r1, [sp, #136]	@ 0x88
 8018032:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8018034:	fb01 0303 	mla	r3, r1, r3, r0
 8018038:	141b      	asrs	r3, r3, #16
 801803a:	f53f af0b 	bmi.w	8017e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801803e:	3a01      	subs	r2, #1
 8018040:	4293      	cmp	r3, r2
 8018042:	f6bf af07 	bge.w	8017e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018046:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018048:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801804c:	9311      	str	r3, [sp, #68]	@ 0x44
 801804e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018050:	930c      	str	r3, [sp, #48]	@ 0x30
 8018052:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018054:	2b00      	cmp	r3, #0
 8018056:	dc70      	bgt.n	801813a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8018058:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801805a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801805c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018060:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018064:	930a      	str	r3, [sp, #40]	@ 0x28
 8018066:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018068:	2b00      	cmp	r3, #0
 801806a:	f340 8124 	ble.w	80182b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801806e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018072:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8018074:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018078:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801807c:	eef0 6a62 	vmov.f32	s13, s5
 8018080:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018084:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018088:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801808c:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 8018090:	eef0 6a43 	vmov.f32	s13, s6
 8018094:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018098:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801809c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80180a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80180a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80180a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80180ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80180b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80180b4:	ee12 2a90 	vmov	r2, s5
 80180b8:	eef0 2a47 	vmov.f32	s5, s14
 80180bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80180c0:	ee13 2a10 	vmov	r2, s6
 80180c4:	9321      	str	r3, [sp, #132]	@ 0x84
 80180c6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80180c8:	eeb0 3a67 	vmov.f32	s6, s15
 80180cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80180d0:	9322      	str	r3, [sp, #136]	@ 0x88
 80180d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80180d4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80180d6:	3b01      	subs	r3, #1
 80180d8:	930e      	str	r3, [sp, #56]	@ 0x38
 80180da:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80180dc:	bf08      	it	eq
 80180de:	4613      	moveq	r3, r2
 80180e0:	9309      	str	r3, [sp, #36]	@ 0x24
 80180e2:	e68c      	b.n	8017dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80180e4:	b149      	cbz	r1, 80180fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80180e6:	5cb2      	ldrb	r2, [r6, r2]
 80180e8:	4628      	mov	r0, r5
 80180ea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80180ee:	4422      	add	r2, r4
 80180f0:	46ac      	mov	ip, r5
 80180f2:	e6f1      	b.n	8017ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80180f4:	4628      	mov	r0, r5
 80180f6:	462a      	mov	r2, r5
 80180f8:	e6ee      	b.n	8017ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80180fa:	4628      	mov	r0, r5
 80180fc:	462a      	mov	r2, r5
 80180fe:	e7f7      	b.n	80180f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8018100:	1c47      	adds	r7, r0, #1
 8018102:	f53f af69 	bmi.w	8017fd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8018106:	42ba      	cmp	r2, r7
 8018108:	f6ff af66 	blt.w	8017fd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801810c:	1c6f      	adds	r7, r5, #1
 801810e:	f53f af63 	bmi.w	8017fd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8018112:	42be      	cmp	r6, r7
 8018114:	f6ff af60 	blt.w	8017fd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8018118:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801811a:	b236      	sxth	r6, r6
 801811c:	b212      	sxth	r2, r2
 801811e:	9002      	str	r0, [sp, #8]
 8018120:	9601      	str	r6, [sp, #4]
 8018122:	9200      	str	r2, [sp, #0]
 8018124:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018126:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801812a:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801812e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 8018132:	4623      	mov	r3, r4
 8018134:	f7ff fd59 	bl	8017bea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8018138:	e74e      	b.n	8017fd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801813a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801813c:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801813e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8018142:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8018144:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8018146:	1400      	asrs	r0, r0, #16
 8018148:	142d      	asrs	r5, r5, #16
 801814a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801814c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8018150:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8018154:	fb02 5000 	mla	r0, r2, r0, r5
 8018158:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801815a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801815e:	182e      	adds	r6, r5, r0
 8018160:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8018164:	eb04 0509 	add.w	r5, r4, r9
 8018168:	2b00      	cmp	r3, #0
 801816a:	f000 8096 	beq.w	801829a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801816e:	7877      	ldrb	r7, [r6, #1]
 8018170:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8018174:	4427      	add	r7, r4
 8018176:	2900      	cmp	r1, #0
 8018178:	f000 8097 	beq.w	80182aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801817c:	18b0      	adds	r0, r6, r2
 801817e:	5cb2      	ldrb	r2, [r6, r2]
 8018180:	7840      	ldrb	r0, [r0, #1]
 8018182:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018186:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801818a:	4422      	add	r2, r4
 801818c:	4420      	add	r0, r4
 801818e:	b29b      	uxth	r3, r3
 8018190:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8018192:	b289      	uxth	r1, r1
 8018194:	f895 b002 	ldrb.w	fp, [r5, #2]
 8018198:	f8b6 c000 	ldrh.w	ip, [r6]
 801819c:	fb03 f801 	mul.w	r8, r3, r1
 80181a0:	011b      	lsls	r3, r3, #4
 80181a2:	78be      	ldrb	r6, [r7, #2]
 80181a4:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80181a8:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80181ac:	eba3 0308 	sub.w	r3, r3, r8
 80181b0:	f814 9009 	ldrb.w	r9, [r4, r9]
 80181b4:	b289      	uxth	r1, r1
 80181b6:	b29b      	uxth	r3, r3
 80181b8:	ebae 0e01 	sub.w	lr, lr, r1
 80181bc:	435e      	muls	r6, r3
 80181be:	fa1f fe8e 	uxth.w	lr, lr
 80181c2:	9310      	str	r3, [sp, #64]	@ 0x40
 80181c4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80181c6:	fb0e 660b 	mla	r6, lr, fp, r6
 80181ca:	f892 b002 	ldrb.w	fp, [r2, #2]
 80181ce:	fb01 660b 	mla	r6, r1, fp, r6
 80181d2:	f890 b002 	ldrb.w	fp, [r0, #2]
 80181d6:	fb08 660b 	mla	r6, r8, fp, r6
 80181da:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80181de:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 80181e2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80181e6:	fb1b fb03 	smulbb	fp, fp, r3
 80181ea:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80181ec:	fb06 b60a 	mla	r6, r6, sl, fp
 80181f0:	f895 b001 	ldrb.w	fp, [r5, #1]
 80181f4:	787d      	ldrb	r5, [r7, #1]
 80181f6:	783f      	ldrb	r7, [r7, #0]
 80181f8:	b2b6      	uxth	r6, r6
 80181fa:	435d      	muls	r5, r3
 80181fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80181fe:	fb0e 550b 	mla	r5, lr, fp, r5
 8018202:	f892 b001 	ldrb.w	fp, [r2, #1]
 8018206:	fb01 550b 	mla	r5, r1, fp, r5
 801820a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801820e:	fb08 550b 	mla	r5, r8, fp, r5
 8018212:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8018216:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801821a:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801821e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8018222:	fa5f fc8c 	uxtb.w	ip, ip
 8018226:	fb1b fb03 	smulbb	fp, fp, r3
 801822a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801822c:	437b      	muls	r3, r7
 801822e:	7817      	ldrb	r7, [r2, #0]
 8018230:	fb05 b50a 	mla	r5, r5, sl, fp
 8018234:	fb0e 3309 	mla	r3, lr, r9, r3
 8018238:	b2ad      	uxth	r5, r5
 801823a:	fb01 3307 	mla	r3, r1, r7, r3
 801823e:	7807      	ldrb	r7, [r0, #0]
 8018240:	f105 0b01 	add.w	fp, r5, #1
 8018244:	fb08 3707 	mla	r7, r8, r7, r3
 8018248:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801824a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801824e:	fb1c fc03 	smulbb	ip, ip, r3
 8018252:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8018256:	1c73      	adds	r3, r6, #1
 8018258:	096d      	lsrs	r5, r5, #5
 801825a:	fb07 c70a 	mla	r7, r7, sl, ip
 801825e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8018262:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018266:	b2bf      	uxth	r7, r7
 8018268:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801826a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801826e:	1c7a      	adds	r2, r7, #1
 8018270:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8018274:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018278:	4316      	orrs	r6, r2
 801827a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801827c:	432e      	orrs	r6, r5
 801827e:	f823 6b02 	strh.w	r6, [r3], #2
 8018282:	930c      	str	r3, [sp, #48]	@ 0x30
 8018284:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8018286:	4413      	add	r3, r2
 8018288:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801828a:	931f      	str	r3, [sp, #124]	@ 0x7c
 801828c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801828e:	4413      	add	r3, r2
 8018290:	9320      	str	r3, [sp, #128]	@ 0x80
 8018292:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018294:	3b01      	subs	r3, #1
 8018296:	9311      	str	r3, [sp, #68]	@ 0x44
 8018298:	e6db      	b.n	8018052 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801829a:	b149      	cbz	r1, 80182b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801829c:	5cb2      	ldrb	r2, [r6, r2]
 801829e:	4628      	mov	r0, r5
 80182a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80182a4:	4422      	add	r2, r4
 80182a6:	462f      	mov	r7, r5
 80182a8:	e771      	b.n	801818e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80182aa:	4628      	mov	r0, r5
 80182ac:	462a      	mov	r2, r5
 80182ae:	e76e      	b.n	801818e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80182b0:	4628      	mov	r0, r5
 80182b2:	462a      	mov	r2, r5
 80182b4:	e7f7      	b.n	80182a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80182b6:	b015      	add	sp, #84	@ 0x54
 80182b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080182bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80182bc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182c0:	880f      	ldrh	r7, [r1, #0]
 80182c2:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 80182c6:	023c      	lsls	r4, r7, #8
 80182c8:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80182cc:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 80182d0:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 80182d4:	017c      	lsls	r4, r7, #5
 80182d6:	00ff      	lsls	r7, r7, #3
 80182d8:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80182dc:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 80182e0:	b2ff      	uxtb	r7, r7
 80182e2:	ea4b 0404 	orr.w	r4, fp, r4
 80182e6:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 80182ea:	4327      	orrs	r7, r4
 80182ec:	fb05 ca0e 	mla	sl, r5, lr, ip
 80182f0:	2d00      	cmp	r5, #0
 80182f2:	9701      	str	r7, [sp, #4]
 80182f4:	eb02 080a 	add.w	r8, r2, sl
 80182f8:	db7e      	blt.n	80183f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80182fa:	45a9      	cmp	r9, r5
 80182fc:	dd7c      	ble.n	80183f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80182fe:	f1bc 0f00 	cmp.w	ip, #0
 8018302:	db77      	blt.n	80183f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8018304:	45e6      	cmp	lr, ip
 8018306:	dd75      	ble.n	80183f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8018308:	f812 700a 	ldrb.w	r7, [r2, sl]
 801830c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8018310:	441f      	add	r7, r3
 8018312:	f11c 0201 	adds.w	r2, ip, #1
 8018316:	d472      	bmi.n	80183fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8018318:	4596      	cmp	lr, r2
 801831a:	dd70      	ble.n	80183fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801831c:	2800      	cmp	r0, #0
 801831e:	d06e      	beq.n	80183fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8018320:	f898 4001 	ldrb.w	r4, [r8, #1]
 8018324:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8018328:	441c      	add	r4, r3
 801832a:	3501      	adds	r5, #1
 801832c:	d46b      	bmi.n	8018406 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801832e:	45a9      	cmp	r9, r5
 8018330:	dd69      	ble.n	8018406 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8018332:	2e00      	cmp	r6, #0
 8018334:	d067      	beq.n	8018406 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8018336:	f1bc 0f00 	cmp.w	ip, #0
 801833a:	db62      	blt.n	8018402 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801833c:	45e6      	cmp	lr, ip
 801833e:	dd60      	ble.n	8018402 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8018340:	f818 500e 	ldrb.w	r5, [r8, lr]
 8018344:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018348:	441d      	add	r5, r3
 801834a:	f11c 0201 	adds.w	r2, ip, #1
 801834e:	d45d      	bmi.n	801840c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8018350:	4596      	cmp	lr, r2
 8018352:	dd5b      	ble.n	801840c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8018354:	2800      	cmp	r0, #0
 8018356:	d059      	beq.n	801840c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8018358:	44c6      	add	lr, r8
 801835a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801835e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018362:	4413      	add	r3, r2
 8018364:	b280      	uxth	r0, r0
 8018366:	f897 e002 	ldrb.w	lr, [r7, #2]
 801836a:	b2b2      	uxth	r2, r6
 801836c:	f897 9000 	ldrb.w	r9, [r7]
 8018370:	787f      	ldrb	r7, [r7, #1]
 8018372:	fb00 f602 	mul.w	r6, r0, r2
 8018376:	0100      	lsls	r0, r0, #4
 8018378:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801837c:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 8018380:	1b80      	subs	r0, r0, r6
 8018382:	fa1f fc82 	uxth.w	ip, r2
 8018386:	b282      	uxth	r2, r0
 8018388:	78a0      	ldrb	r0, [r4, #2]
 801838a:	eba8 080c 	sub.w	r8, r8, ip
 801838e:	4350      	muls	r0, r2
 8018390:	fa1f f888 	uxth.w	r8, r8
 8018394:	fb08 0e0e 	mla	lr, r8, lr, r0
 8018398:	78a8      	ldrb	r0, [r5, #2]
 801839a:	fb0c e000 	mla	r0, ip, r0, lr
 801839e:	f893 e002 	ldrb.w	lr, [r3, #2]
 80183a2:	fb06 0e0e 	mla	lr, r6, lr, r0
 80183a6:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 80183aa:	f894 e000 	ldrb.w	lr, [r4]
 80183ae:	fb02 fe0e 	mul.w	lr, r2, lr
 80183b2:	fb08 e909 	mla	r9, r8, r9, lr
 80183b6:	f895 e000 	ldrb.w	lr, [r5]
 80183ba:	fb0c 990e 	mla	r9, ip, lr, r9
 80183be:	f893 e000 	ldrb.w	lr, [r3]
 80183c2:	785b      	ldrb	r3, [r3, #1]
 80183c4:	fb06 9e0e 	mla	lr, r6, lr, r9
 80183c8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80183cc:	ea4e 0e00 	orr.w	lr, lr, r0
 80183d0:	7860      	ldrb	r0, [r4, #1]
 80183d2:	4350      	muls	r0, r2
 80183d4:	786a      	ldrb	r2, [r5, #1]
 80183d6:	fb08 0007 	mla	r0, r8, r7, r0
 80183da:	fb0c 0202 	mla	r2, ip, r2, r0
 80183de:	fb06 2303 	mla	r3, r6, r3, r2
 80183e2:	095b      	lsrs	r3, r3, #5
 80183e4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80183e8:	ea4e 0303 	orr.w	r3, lr, r3
 80183ec:	800b      	strh	r3, [r1, #0]
 80183ee:	b003      	add	sp, #12
 80183f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183f4:	af01      	add	r7, sp, #4
 80183f6:	e78c      	b.n	8018312 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 80183f8:	ac01      	add	r4, sp, #4
 80183fa:	4627      	mov	r7, r4
 80183fc:	e795      	b.n	801832a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80183fe:	ac01      	add	r4, sp, #4
 8018400:	e793      	b.n	801832a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8018402:	ad01      	add	r5, sp, #4
 8018404:	e7a1      	b.n	801834a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8018406:	ab01      	add	r3, sp, #4
 8018408:	461d      	mov	r5, r3
 801840a:	e7ab      	b.n	8018364 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801840c:	ab01      	add	r3, sp, #4
 801840e:	e7a9      	b.n	8018364 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08018410 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018414:	b08f      	sub	sp, #60	@ 0x3c
 8018416:	920c      	str	r2, [sp, #48]	@ 0x30
 8018418:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801841a:	900d      	str	r0, [sp, #52]	@ 0x34
 801841c:	910a      	str	r1, [sp, #40]	@ 0x28
 801841e:	6850      	ldr	r0, [r2, #4]
 8018420:	9306      	str	r3, [sp, #24]
 8018422:	6812      	ldr	r2, [r2, #0]
 8018424:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 8018428:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801842c:	fb00 1303 	mla	r3, r0, r3, r1
 8018430:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018434:	9307      	str	r3, [sp, #28]
 8018436:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018438:	681b      	ldr	r3, [r3, #0]
 801843a:	9308      	str	r3, [sp, #32]
 801843c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801843e:	685c      	ldr	r4, [r3, #4]
 8018440:	3404      	adds	r4, #4
 8018442:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018444:	2b00      	cmp	r3, #0
 8018446:	dc03      	bgt.n	8018450 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8018448:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801844a:	2b00      	cmp	r3, #0
 801844c:	f340 81d5 	ble.w	80187fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8018450:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018452:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018456:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801845a:	1e48      	subs	r0, r1, #1
 801845c:	1e56      	subs	r6, r2, #1
 801845e:	9b06      	ldr	r3, [sp, #24]
 8018460:	2b00      	cmp	r3, #0
 8018462:	f340 80b6 	ble.w	80185d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8018466:	ea5f 472b 	movs.w	r7, fp, asr #16
 801846a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801846e:	d406      	bmi.n	801847e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018470:	4287      	cmp	r7, r0
 8018472:	da04      	bge.n	801847e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018474:	2b00      	cmp	r3, #0
 8018476:	db02      	blt.n	801847e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018478:	42b3      	cmp	r3, r6
 801847a:	f2c0 80ab 	blt.w	80185d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801847e:	3701      	adds	r7, #1
 8018480:	f100 809c 	bmi.w	80185bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8018484:	42b9      	cmp	r1, r7
 8018486:	f2c0 8099 	blt.w	80185bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801848a:	3301      	adds	r3, #1
 801848c:	f100 8096 	bmi.w	80185bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8018490:	429a      	cmp	r2, r3
 8018492:	f2c0 8093 	blt.w	80185bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8018496:	9b06      	ldr	r3, [sp, #24]
 8018498:	930b      	str	r3, [sp, #44]	@ 0x2c
 801849a:	9b07      	ldr	r3, [sp, #28]
 801849c:	9309      	str	r3, [sp, #36]	@ 0x24
 801849e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80184a0:	2b00      	cmp	r3, #0
 80184a2:	f340 80b4 	ble.w	801860e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80184a6:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80184a8:	142e      	asrs	r6, r5, #16
 80184aa:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80184ac:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80184b0:	68c7      	ldr	r7, [r0, #12]
 80184b2:	ea5f 402b 	movs.w	r0, fp, asr #16
 80184b6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80184ba:	6892      	ldr	r2, [r2, #8]
 80184bc:	f100 80fb 	bmi.w	80186b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80184c0:	f102 3cff 	add.w	ip, r2, #4294967295
 80184c4:	4560      	cmp	r0, ip
 80184c6:	f280 80f6 	bge.w	80186b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80184ca:	2e00      	cmp	r6, #0
 80184cc:	f2c0 80f3 	blt.w	80186b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80184d0:	f107 3cff 	add.w	ip, r7, #4294967295
 80184d4:	4566      	cmp	r6, ip
 80184d6:	f280 80ee 	bge.w	80186b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80184da:	b212      	sxth	r2, r2
 80184dc:	fb06 0002 	mla	r0, r6, r2, r0
 80184e0:	9e08      	ldr	r6, [sp, #32]
 80184e2:	1837      	adds	r7, r6, r0
 80184e4:	5c30      	ldrb	r0, [r6, r0]
 80184e6:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80184ea:	eb04 0c08 	add.w	ip, r4, r8
 80184ee:	2b00      	cmp	r3, #0
 80184f0:	f000 80d3 	beq.w	801869a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80184f4:	787e      	ldrb	r6, [r7, #1]
 80184f6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80184fa:	4426      	add	r6, r4
 80184fc:	2900      	cmp	r1, #0
 80184fe:	f000 80d4 	beq.w	80186aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018502:	18b8      	adds	r0, r7, r2
 8018504:	5cba      	ldrb	r2, [r7, r2]
 8018506:	7840      	ldrb	r0, [r0, #1]
 8018508:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801850c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018510:	4422      	add	r2, r4
 8018512:	4420      	add	r0, r4
 8018514:	b29b      	uxth	r3, r3
 8018516:	78b7      	ldrb	r7, [r6, #2]
 8018518:	b289      	uxth	r1, r1
 801851a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801851e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8018522:	fb03 f901 	mul.w	r9, r3, r1
 8018526:	011b      	lsls	r3, r3, #4
 8018528:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801852c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8018530:	eba3 0309 	sub.w	r3, r3, r9
 8018534:	b289      	uxth	r1, r1
 8018536:	b29b      	uxth	r3, r3
 8018538:	ebae 0e01 	sub.w	lr, lr, r1
 801853c:	435f      	muls	r7, r3
 801853e:	fa1f fe8e 	uxth.w	lr, lr
 8018542:	fb0e 770a 	mla	r7, lr, sl, r7
 8018546:	f892 a002 	ldrb.w	sl, [r2, #2]
 801854a:	fb01 770a 	mla	r7, r1, sl, r7
 801854e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8018552:	fb09 7a0a 	mla	sl, r9, sl, r7
 8018556:	f814 7008 	ldrb.w	r7, [r4, r8]
 801855a:	f896 8000 	ldrb.w	r8, [r6]
 801855e:	7876      	ldrb	r6, [r6, #1]
 8018560:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8018564:	fb03 f808 	mul.w	r8, r3, r8
 8018568:	4373      	muls	r3, r6
 801856a:	fb0e 8807 	mla	r8, lr, r7, r8
 801856e:	7817      	ldrb	r7, [r2, #0]
 8018570:	fb0e 330c 	mla	r3, lr, ip, r3
 8018574:	fb01 8807 	mla	r8, r1, r7, r8
 8018578:	7807      	ldrb	r7, [r0, #0]
 801857a:	fb09 8707 	mla	r7, r9, r7, r8
 801857e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018582:	ea47 070a 	orr.w	r7, r7, sl
 8018586:	f892 a001 	ldrb.w	sl, [r2, #1]
 801858a:	fb01 310a 	mla	r1, r1, sl, r3
 801858e:	f890 a001 	ldrb.w	sl, [r0, #1]
 8018592:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018594:	fb09 1a0a 	mla	sl, r9, sl, r1
 8018598:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801859c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80185a0:	ea47 070a 	orr.w	r7, r7, sl
 80185a4:	801f      	strh	r7, [r3, #0]
 80185a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80185a8:	3302      	adds	r3, #2
 80185aa:	9309      	str	r3, [sp, #36]	@ 0x24
 80185ac:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80185ae:	449b      	add	fp, r3
 80185b0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80185b2:	441d      	add	r5, r3
 80185b4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80185b6:	3b01      	subs	r3, #1
 80185b8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80185ba:	e770      	b.n	801849e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80185bc:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80185be:	449b      	add	fp, r3
 80185c0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80185c2:	441d      	add	r5, r3
 80185c4:	9b06      	ldr	r3, [sp, #24]
 80185c6:	3b01      	subs	r3, #1
 80185c8:	9306      	str	r3, [sp, #24]
 80185ca:	9b07      	ldr	r3, [sp, #28]
 80185cc:	3302      	adds	r3, #2
 80185ce:	9307      	str	r3, [sp, #28]
 80185d0:	e745      	b.n	801845e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80185d2:	d023      	beq.n	801861c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 80185d4:	9b06      	ldr	r3, [sp, #24]
 80185d6:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80185d8:	3b01      	subs	r3, #1
 80185da:	fb00 b003 	mla	r0, r0, r3, fp
 80185de:	1400      	asrs	r0, r0, #16
 80185e0:	f53f af59 	bmi.w	8018496 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80185e4:	3901      	subs	r1, #1
 80185e6:	4288      	cmp	r0, r1
 80185e8:	f6bf af55 	bge.w	8018496 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80185ec:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80185ee:	fb01 5303 	mla	r3, r1, r3, r5
 80185f2:	141b      	asrs	r3, r3, #16
 80185f4:	f53f af4f 	bmi.w	8018496 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80185f8:	3a01      	subs	r2, #1
 80185fa:	4293      	cmp	r3, r2
 80185fc:	f6bf af4b 	bge.w	8018496 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018600:	9b06      	ldr	r3, [sp, #24]
 8018602:	9309      	str	r3, [sp, #36]	@ 0x24
 8018604:	9b07      	ldr	r3, [sp, #28]
 8018606:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018608:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801860a:	2b00      	cmp	r3, #0
 801860c:	dc70      	bgt.n	80186f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801860e:	9b06      	ldr	r3, [sp, #24]
 8018610:	9a07      	ldr	r2, [sp, #28]
 8018612:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018616:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801861a:	9307      	str	r3, [sp, #28]
 801861c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801861e:	2b00      	cmp	r3, #0
 8018620:	f340 80eb 	ble.w	80187fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8018624:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018628:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801862a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801862e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018632:	eef0 6a62 	vmov.f32	s13, s5
 8018636:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801863a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801863e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018642:	ee16 ba90 	vmov	fp, s13
 8018646:	eef0 6a43 	vmov.f32	s13, s6
 801864a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801864e:	ee16 5a90 	vmov	r5, s13
 8018652:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018656:	ee61 7a27 	vmul.f32	s15, s2, s15
 801865a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801865e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018662:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018666:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801866a:	ee12 2a90 	vmov	r2, s5
 801866e:	eef0 2a47 	vmov.f32	s5, s14
 8018672:	fb92 f3f3 	sdiv	r3, r2, r3
 8018676:	ee13 2a10 	vmov	r2, s6
 801867a:	931b      	str	r3, [sp, #108]	@ 0x6c
 801867c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801867e:	eeb0 3a67 	vmov.f32	s6, s15
 8018682:	fb92 f3f3 	sdiv	r3, r2, r3
 8018686:	931c      	str	r3, [sp, #112]	@ 0x70
 8018688:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801868a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801868c:	3b01      	subs	r3, #1
 801868e:	930a      	str	r3, [sp, #40]	@ 0x28
 8018690:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8018692:	bf08      	it	eq
 8018694:	4613      	moveq	r3, r2
 8018696:	9306      	str	r3, [sp, #24]
 8018698:	e6d3      	b.n	8018442 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801869a:	b149      	cbz	r1, 80186b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801869c:	5cba      	ldrb	r2, [r7, r2]
 801869e:	4660      	mov	r0, ip
 80186a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80186a4:	4422      	add	r2, r4
 80186a6:	4666      	mov	r6, ip
 80186a8:	e734      	b.n	8018514 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 80186aa:	4660      	mov	r0, ip
 80186ac:	4662      	mov	r2, ip
 80186ae:	e731      	b.n	8018514 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 80186b0:	4660      	mov	r0, ip
 80186b2:	4662      	mov	r2, ip
 80186b4:	e7f7      	b.n	80186a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80186b6:	f110 0c01 	adds.w	ip, r0, #1
 80186ba:	f53f af74 	bmi.w	80185a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80186be:	4562      	cmp	r2, ip
 80186c0:	f6ff af71 	blt.w	80185a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80186c4:	f116 0c01 	adds.w	ip, r6, #1
 80186c8:	f53f af6d 	bmi.w	80185a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80186cc:	4567      	cmp	r7, ip
 80186ce:	f6ff af6a 	blt.w	80185a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80186d2:	b23f      	sxth	r7, r7
 80186d4:	b212      	sxth	r2, r2
 80186d6:	9701      	str	r7, [sp, #4]
 80186d8:	9200      	str	r2, [sp, #0]
 80186da:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80186de:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80186e2:	4623      	mov	r3, r4
 80186e4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80186e6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80186ea:	f7ff fde7 	bl	80182bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80186ee:	e75a      	b.n	80185a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80186f0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80186f2:	ea4f 462b 	mov.w	r6, fp, asr #16
 80186f6:	1428      	asrs	r0, r5, #16
 80186f8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80186fc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8018700:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8018704:	fb02 6000 	mla	r0, r2, r0, r6
 8018708:	9e08      	ldr	r6, [sp, #32]
 801870a:	f816 8000 	ldrb.w	r8, [r6, r0]
 801870e:	1837      	adds	r7, r6, r0
 8018710:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8018714:	eb04 0c08 	add.w	ip, r4, r8
 8018718:	2b00      	cmp	r3, #0
 801871a:	d060      	beq.n	80187de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801871c:	787e      	ldrb	r6, [r7, #1]
 801871e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8018722:	4426      	add	r6, r4
 8018724:	2900      	cmp	r1, #0
 8018726:	d062      	beq.n	80187ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 8018728:	18b8      	adds	r0, r7, r2
 801872a:	5cba      	ldrb	r2, [r7, r2]
 801872c:	7840      	ldrb	r0, [r0, #1]
 801872e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018732:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018736:	4422      	add	r2, r4
 8018738:	4420      	add	r0, r4
 801873a:	b29b      	uxth	r3, r3
 801873c:	78b7      	ldrb	r7, [r6, #2]
 801873e:	b289      	uxth	r1, r1
 8018740:	f89c a002 	ldrb.w	sl, [ip, #2]
 8018744:	f89c c001 	ldrb.w	ip, [ip, #1]
 8018748:	fb03 f901 	mul.w	r9, r3, r1
 801874c:	011b      	lsls	r3, r3, #4
 801874e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018752:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8018756:	eba3 0309 	sub.w	r3, r3, r9
 801875a:	b289      	uxth	r1, r1
 801875c:	b29b      	uxth	r3, r3
 801875e:	ebae 0e01 	sub.w	lr, lr, r1
 8018762:	435f      	muls	r7, r3
 8018764:	fa1f fe8e 	uxth.w	lr, lr
 8018768:	fb0e 770a 	mla	r7, lr, sl, r7
 801876c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8018770:	fb01 770a 	mla	r7, r1, sl, r7
 8018774:	f890 a002 	ldrb.w	sl, [r0, #2]
 8018778:	fb09 7a0a 	mla	sl, r9, sl, r7
 801877c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8018780:	f896 8000 	ldrb.w	r8, [r6]
 8018784:	7876      	ldrb	r6, [r6, #1]
 8018786:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801878a:	fb03 f808 	mul.w	r8, r3, r8
 801878e:	4373      	muls	r3, r6
 8018790:	7856      	ldrb	r6, [r2, #1]
 8018792:	fb0e 8807 	mla	r8, lr, r7, r8
 8018796:	7817      	ldrb	r7, [r2, #0]
 8018798:	fb0e 330c 	mla	r3, lr, ip, r3
 801879c:	fb01 8807 	mla	r8, r1, r7, r8
 80187a0:	7807      	ldrb	r7, [r0, #0]
 80187a2:	fb01 3306 	mla	r3, r1, r6, r3
 80187a6:	fb09 8707 	mla	r7, r9, r7, r8
 80187aa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80187ae:	ea47 070a 	orr.w	r7, r7, sl
 80187b2:	f890 a001 	ldrb.w	sl, [r0, #1]
 80187b6:	fb09 3a0a 	mla	sl, r9, sl, r3
 80187ba:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80187bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80187c0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80187c4:	ea47 070a 	orr.w	r7, r7, sl
 80187c8:	f823 7b02 	strh.w	r7, [r3], #2
 80187cc:	930b      	str	r3, [sp, #44]	@ 0x2c
 80187ce:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80187d0:	449b      	add	fp, r3
 80187d2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80187d4:	441d      	add	r5, r3
 80187d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80187d8:	3b01      	subs	r3, #1
 80187da:	9309      	str	r3, [sp, #36]	@ 0x24
 80187dc:	e714      	b.n	8018608 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 80187de:	b149      	cbz	r1, 80187f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 80187e0:	5cba      	ldrb	r2, [r7, r2]
 80187e2:	4660      	mov	r0, ip
 80187e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80187e8:	4422      	add	r2, r4
 80187ea:	4666      	mov	r6, ip
 80187ec:	e7a5      	b.n	801873a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80187ee:	4660      	mov	r0, ip
 80187f0:	4662      	mov	r2, ip
 80187f2:	e7a2      	b.n	801873a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80187f4:	4660      	mov	r0, ip
 80187f6:	4662      	mov	r2, ip
 80187f8:	e7f7      	b.n	80187ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 80187fa:	b00f      	add	sp, #60	@ 0x3c
 80187fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018800 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8018800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018804:	b085      	sub	sp, #20
 8018806:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801880a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801880e:	9102      	str	r1, [sp, #8]
 8018810:	2c00      	cmp	r4, #0
 8018812:	fb04 710c 	mla	r1, r4, ip, r7
 8018816:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801881a:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801881e:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8018822:	eb02 0e01 	add.w	lr, r2, r1
 8018826:	f2c0 8122 	blt.w	8018a6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801882a:	45a0      	cmp	r8, r4
 801882c:	f340 811f 	ble.w	8018a6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8018830:	2f00      	cmp	r7, #0
 8018832:	f2c0 811a 	blt.w	8018a6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8018836:	45bc      	cmp	ip, r7
 8018838:	f340 8117 	ble.w	8018a6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801883c:	5c52      	ldrb	r2, [r2, r1]
 801883e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8018842:	1c7a      	adds	r2, r7, #1
 8018844:	f100 8116 	bmi.w	8018a74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8018848:	4594      	cmp	ip, r2
 801884a:	f340 8113 	ble.w	8018a74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801884e:	2e00      	cmp	r6, #0
 8018850:	f000 8112 	beq.w	8018a78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8018854:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018858:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801885c:	3401      	adds	r4, #1
 801885e:	f100 810f 	bmi.w	8018a80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8018862:	45a0      	cmp	r8, r4
 8018864:	f340 810c 	ble.w	8018a80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8018868:	2800      	cmp	r0, #0
 801886a:	f000 810c 	beq.w	8018a86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801886e:	2f00      	cmp	r7, #0
 8018870:	f2c0 8104 	blt.w	8018a7c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8018874:	45bc      	cmp	ip, r7
 8018876:	f340 8101 	ble.w	8018a7c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801887a:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801887e:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8018882:	3701      	adds	r7, #1
 8018884:	f100 8102 	bmi.w	8018a8c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8018888:	45bc      	cmp	ip, r7
 801888a:	f340 80ff 	ble.w	8018a8c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801888e:	2e00      	cmp	r6, #0
 8018890:	f000 80fe 	beq.w	8018a90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8018894:	44f4      	add	ip, lr
 8018896:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801889a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801889e:	b2b6      	uxth	r6, r6
 80188a0:	b280      	uxth	r0, r0
 80188a2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80188a6:	fb00 fe06 	mul.w	lr, r0, r6
 80188aa:	0136      	lsls	r6, r6, #4
 80188ac:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80188b0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80188b4:	eba6 070e 	sub.w	r7, r6, lr
 80188b8:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 80188bc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80188c0:	b280      	uxth	r0, r0
 80188c2:	b2bf      	uxth	r7, r7
 80188c4:	1a1b      	subs	r3, r3, r0
 80188c6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80188ca:	fb0a f607 	mul.w	r6, sl, r7
 80188ce:	b29b      	uxth	r3, r3
 80188d0:	fb0b 6603 	mla	r6, fp, r3, r6
 80188d4:	fb00 6609 	mla	r6, r0, r9, r6
 80188d8:	fb0e 6608 	mla	r6, lr, r8, r6
 80188dc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80188e0:	9600      	str	r6, [sp, #0]
 80188e2:	2e00      	cmp	r6, #0
 80188e4:	f000 80be 	beq.w	8018a64 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 80188e8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80188ec:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80188f0:	9e02      	ldr	r6, [sp, #8]
 80188f2:	fb0b fc0c 	mul.w	ip, fp, ip
 80188f6:	fb0b f505 	mul.w	r5, fp, r5
 80188fa:	8836      	ldrh	r6, [r6, #0]
 80188fc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8018900:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8018904:	9501      	str	r5, [sp, #4]
 8018906:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801890a:	44dc      	add	ip, fp
 801890c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018910:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8018914:	9503      	str	r5, [sp, #12]
 8018916:	9d01      	ldr	r5, [sp, #4]
 8018918:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801891c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018920:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8018924:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8018928:	fb0a fc0c 	mul.w	ip, sl, ip
 801892c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8018930:	fb0a fa01 	mul.w	sl, sl, r1
 8018934:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8018938:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801893c:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8018940:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8018944:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8018948:	4465      	add	r5, ip
 801894a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801894e:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8018952:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018956:	fb09 fc0c 	mul.w	ip, r9, ip
 801895a:	0a2d      	lsrs	r5, r5, #8
 801895c:	fb09 f904 	mul.w	r9, r9, r4
 8018960:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018964:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8018968:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801896c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8018970:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8018974:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8018978:	437d      	muls	r5, r7
 801897a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801897e:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8018982:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8018986:	4461      	add	r1, ip
 8018988:	fb08 f404 	mul.w	r4, r8, r4
 801898c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018990:	fb08 f802 	mul.w	r8, r8, r2
 8018994:	0a09      	lsrs	r1, r1, #8
 8018996:	0a22      	lsrs	r2, r4, #8
 8018998:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801899c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80189a0:	fb07 f70a 	mul.w	r7, r7, sl
 80189a4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80189a8:	4414      	add	r4, r2
 80189aa:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80189ae:	0a24      	lsrs	r4, r4, #8
 80189b0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80189b4:	9a03      	ldr	r2, [sp, #12]
 80189b6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80189ba:	fb02 5503 	mla	r5, r2, r3, r5
 80189be:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80189c2:	9a00      	ldr	r2, [sp, #0]
 80189c4:	fb04 540e 	mla	r4, r4, lr, r5
 80189c8:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80189cc:	1235      	asrs	r5, r6, #8
 80189ce:	fb01 4100 	mla	r1, r1, r0, r4
 80189d2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80189d6:	0a09      	lsrs	r1, r1, #8
 80189d8:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 80189dc:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 80189e0:	fb03 7101 	mla	r1, r3, r1, r7
 80189e4:	fb0e 1e08 	mla	lr, lr, r8, r1
 80189e8:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 80189ec:	fb00 e101 	mla	r1, r0, r1, lr
 80189f0:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 80189f4:	b287      	uxth	r7, r0
 80189f6:	0a09      	lsrs	r1, r1, #8
 80189f8:	437a      	muls	r2, r7
 80189fa:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80189fe:	1c53      	adds	r3, r2, #1
 8018a00:	4321      	orrs	r1, r4
 8018a02:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018a06:	0c0a      	lsrs	r2, r1, #16
 8018a08:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8018a0c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8018a10:	b2c8      	uxtb	r0, r1
 8018a12:	fb12 f207 	smulbb	r2, r2, r7
 8018a16:	fb14 f407 	smulbb	r4, r4, r7
 8018a1a:	b2db      	uxtb	r3, r3
 8018a1c:	fb10 f007 	smulbb	r0, r0, r7
 8018a20:	fb05 2503 	mla	r5, r5, r3, r2
 8018a24:	10f2      	asrs	r2, r6, #3
 8018a26:	00f6      	lsls	r6, r6, #3
 8018a28:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8018a2c:	b2ad      	uxth	r5, r5
 8018a2e:	b2f6      	uxtb	r6, r6
 8018a30:	fb02 4203 	mla	r2, r2, r3, r4
 8018a34:	fb06 0303 	mla	r3, r6, r3, r0
 8018a38:	b294      	uxth	r4, r2
 8018a3a:	b299      	uxth	r1, r3
 8018a3c:	1c6b      	adds	r3, r5, #1
 8018a3e:	1c62      	adds	r2, r4, #1
 8018a40:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018a44:	1c4b      	adds	r3, r1, #1
 8018a46:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8018a4a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018a4e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018a52:	0952      	lsrs	r2, r2, #5
 8018a54:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018a58:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018a5c:	432b      	orrs	r3, r5
 8018a5e:	4313      	orrs	r3, r2
 8018a60:	9a02      	ldr	r2, [sp, #8]
 8018a62:	8013      	strh	r3, [r2, #0]
 8018a64:	b005      	add	sp, #20
 8018a66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a6a:	2500      	movs	r5, #0
 8018a6c:	e6e9      	b.n	8018842 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8018a6e:	2100      	movs	r1, #0
 8018a70:	460d      	mov	r5, r1
 8018a72:	e6f3      	b.n	801885c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8018a74:	2100      	movs	r1, #0
 8018a76:	e6f1      	b.n	801885c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8018a78:	4631      	mov	r1, r6
 8018a7a:	e6ef      	b.n	801885c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8018a7c:	2400      	movs	r4, #0
 8018a7e:	e700      	b.n	8018882 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8018a80:	2200      	movs	r2, #0
 8018a82:	4614      	mov	r4, r2
 8018a84:	e70b      	b.n	801889e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8018a86:	4602      	mov	r2, r0
 8018a88:	4604      	mov	r4, r0
 8018a8a:	e708      	b.n	801889e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8018a8c:	2200      	movs	r2, #0
 8018a8e:	e706      	b.n	801889e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8018a90:	4632      	mov	r2, r6
 8018a92:	e704      	b.n	801889e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08018a94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a98:	b09f      	sub	sp, #124	@ 0x7c
 8018a9a:	921b      	str	r2, [sp, #108]	@ 0x6c
 8018a9c:	9309      	str	r3, [sp, #36]	@ 0x24
 8018a9e:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8018aa0:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 8018aa4:	901d      	str	r0, [sp, #116]	@ 0x74
 8018aa6:	931c      	str	r3, [sp, #112]	@ 0x70
 8018aa8:	6850      	ldr	r0, [r2, #4]
 8018aaa:	9119      	str	r1, [sp, #100]	@ 0x64
 8018aac:	6812      	ldr	r2, [r2, #0]
 8018aae:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8018ab0:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 8018ab4:	fb00 1303 	mla	r3, r0, r3, r1
 8018ab8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018abc:	930c      	str	r3, [sp, #48]	@ 0x30
 8018abe:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8018ac0:	681b      	ldr	r3, [r3, #0]
 8018ac2:	9312      	str	r3, [sp, #72]	@ 0x48
 8018ac4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8018ac6:	685e      	ldr	r6, [r3, #4]
 8018ac8:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8018acc:	3604      	adds	r6, #4
 8018ace:	930d      	str	r3, [sp, #52]	@ 0x34
 8018ad0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8018ad2:	2b00      	cmp	r3, #0
 8018ad4:	dc03      	bgt.n	8018ade <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018ad6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8018ad8:	2b00      	cmp	r3, #0
 8018ada:	f340 8387 	ble.w	80191ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 8018ade:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8018ae0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018ae4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018ae8:	1e48      	subs	r0, r1, #1
 8018aea:	1e57      	subs	r7, r2, #1
 8018aec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018aee:	2b00      	cmp	r3, #0
 8018af0:	f340 8194 	ble.w	8018e1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8018af4:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8018af6:	142b      	asrs	r3, r5, #16
 8018af8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8018afc:	d406      	bmi.n	8018b0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018afe:	4584      	cmp	ip, r0
 8018b00:	da04      	bge.n	8018b0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018b02:	2b00      	cmp	r3, #0
 8018b04:	db02      	blt.n	8018b0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018b06:	42bb      	cmp	r3, r7
 8018b08:	f2c0 8189 	blt.w	8018e1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018b0c:	f11c 0c01 	adds.w	ip, ip, #1
 8018b10:	f100 8177 	bmi.w	8018e02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8018b14:	4561      	cmp	r1, ip
 8018b16:	f2c0 8174 	blt.w	8018e02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8018b1a:	3301      	adds	r3, #1
 8018b1c:	f100 8171 	bmi.w	8018e02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8018b20:	429a      	cmp	r2, r3
 8018b22:	f2c0 816e 	blt.w	8018e02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8018b26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018b28:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8018b2a:	931a      	str	r3, [sp, #104]	@ 0x68
 8018b2c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8018b2e:	2b00      	cmp	r3, #0
 8018b30:	f340 8193 	ble.w	8018e5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8018b34:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8018b36:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8018b3a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8018b3e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018b42:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8018b44:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8018b48:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8018b4a:	141b      	asrs	r3, r3, #16
 8018b4c:	f100 81d6 	bmi.w	8018efc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8018b50:	f100 38ff 	add.w	r8, r0, #4294967295
 8018b54:	4543      	cmp	r3, r8
 8018b56:	f280 81d1 	bge.w	8018efc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8018b5a:	f1bc 0f00 	cmp.w	ip, #0
 8018b5e:	f2c0 81cd 	blt.w	8018efc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8018b62:	f10e 38ff 	add.w	r8, lr, #4294967295
 8018b66:	45c4      	cmp	ip, r8
 8018b68:	f280 81c8 	bge.w	8018efc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8018b6c:	b200      	sxth	r0, r0
 8018b6e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018b70:	fb0c 3300 	mla	r3, ip, r0, r3
 8018b74:	eb04 0803 	add.w	r8, r4, r3
 8018b78:	5ce3      	ldrb	r3, [r4, r3]
 8018b7a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018b7e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8018b82:	2a00      	cmp	r2, #0
 8018b84:	f000 81af 	beq.w	8018ee6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8018b88:	f898 c001 	ldrb.w	ip, [r8, #1]
 8018b8c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8018b90:	940e      	str	r4, [sp, #56]	@ 0x38
 8018b92:	0e24      	lsrs	r4, r4, #24
 8018b94:	9415      	str	r4, [sp, #84]	@ 0x54
 8018b96:	b179      	cbz	r1, 8018bb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8018b98:	eb08 0c00 	add.w	ip, r8, r0
 8018b9c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8018ba0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8018ba4:	900a      	str	r0, [sp, #40]	@ 0x28
 8018ba6:	0e00      	lsrs	r0, r0, #24
 8018ba8:	9013      	str	r0, [sp, #76]	@ 0x4c
 8018baa:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8018bae:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8018bb2:	900f      	str	r0, [sp, #60]	@ 0x3c
 8018bb4:	0e00      	lsrs	r0, r0, #24
 8018bb6:	9016      	str	r0, [sp, #88]	@ 0x58
 8018bb8:	b292      	uxth	r2, r2
 8018bba:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8018bbc:	b289      	uxth	r1, r1
 8018bbe:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018bc0:	fb02 f901 	mul.w	r9, r2, r1
 8018bc4:	0112      	lsls	r2, r2, #4
 8018bc6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018bca:	eba2 0809 	sub.w	r8, r2, r9
 8018bce:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8018bd2:	b289      	uxth	r1, r1
 8018bd4:	fa1f f888 	uxth.w	r8, r8
 8018bd8:	1a52      	subs	r2, r2, r1
 8018bda:	fb08 f000 	mul.w	r0, r8, r0
 8018bde:	b292      	uxth	r2, r2
 8018be0:	fb02 000e 	mla	r0, r2, lr, r0
 8018be4:	fb01 0004 	mla	r0, r1, r4, r0
 8018be8:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8018bea:	fb09 0004 	mla	r0, r9, r4, r0
 8018bee:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018bf2:	2800      	cmp	r0, #0
 8018bf4:	f000 80fa 	beq.w	8018dec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8018bf8:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8018bfc:	d01b      	beq.n	8018c36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8018bfe:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8018c02:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018c06:	fb0e fa0a 	mul.w	sl, lr, sl
 8018c0a:	fb0e fe03 	mul.w	lr, lr, r3
 8018c0e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018c12:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8018c16:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8018c1a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018c1e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018c22:	4453      	add	r3, sl
 8018c24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018c28:	0a1b      	lsrs	r3, r3, #8
 8018c2a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8018c2e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018c32:	ea43 030c 	orr.w	r3, r3, ip
 8018c36:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018c38:	2cff      	cmp	r4, #255	@ 0xff
 8018c3a:	d021      	beq.n	8018c80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8018c3c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018c3e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8018c42:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018c44:	fb04 fb0b 	mul.w	fp, r4, fp
 8018c48:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018c4a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018c4e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018c50:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018c54:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8018c58:	fb04 fa0a 	mul.w	sl, r4, sl
 8018c5c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018c60:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8018c64:	44de      	add	lr, fp
 8018c66:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018c6a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018c6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018c72:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018c76:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018c7a:	ea4e 040a 	orr.w	r4, lr, sl
 8018c7e:	940e      	str	r4, [sp, #56]	@ 0x38
 8018c80:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018c82:	2cff      	cmp	r4, #255	@ 0xff
 8018c84:	d021      	beq.n	8018cca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018c86:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018c88:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8018c8c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018c8e:	fb04 fb0b 	mul.w	fp, r4, fp
 8018c92:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018c94:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018c98:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018c9a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018c9e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8018ca2:	fb04 fa0a 	mul.w	sl, r4, sl
 8018ca6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018caa:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8018cae:	44de      	add	lr, fp
 8018cb0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018cb4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018cb8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018cbc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018cc0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018cc4:	ea4e 040a 	orr.w	r4, lr, sl
 8018cc8:	940a      	str	r4, [sp, #40]	@ 0x28
 8018cca:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8018ccc:	2cff      	cmp	r4, #255	@ 0xff
 8018cce:	d021      	beq.n	8018d14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 8018cd0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8018cd2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8018cd6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8018cd8:	fb04 fb0b 	mul.w	fp, r4, fp
 8018cdc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8018cde:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018ce2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8018ce4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018ce8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8018cec:	fb04 fa0a 	mul.w	sl, r4, sl
 8018cf0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018cf4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8018cf8:	44de      	add	lr, fp
 8018cfa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018cfe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018d02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018d06:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018d0a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018d0e:	ea4e 040a 	orr.w	r4, lr, sl
 8018d12:	940f      	str	r4, [sp, #60]	@ 0x3c
 8018d14:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018d16:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8018d1a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018d1e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8018d22:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018d24:	fb08 fc0c 	mul.w	ip, r8, ip
 8018d28:	fb02 cc0e 	mla	ip, r2, lr, ip
 8018d2c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8018d30:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8018d32:	fb01 cc0e 	mla	ip, r1, lr, ip
 8018d36:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8018d3a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018d3c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8018d40:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8018d44:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8018d46:	fb08 f80e 	mul.w	r8, r8, lr
 8018d4a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018d4e:	fb02 8303 	mla	r3, r2, r3, r8
 8018d52:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8018d54:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018d58:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8018d5c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018d5e:	fb01 330a 	mla	r3, r1, sl, r3
 8018d62:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 8018d66:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8018d68:	fb09 3901 	mla	r9, r9, r1, r3
 8018d6c:	883b      	ldrh	r3, [r7, #0]
 8018d6e:	4342      	muls	r2, r0
 8018d70:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018d74:	1c50      	adds	r0, r2, #1
 8018d76:	1219      	asrs	r1, r3, #8
 8018d78:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8018d7c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8018d80:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018d84:	ea4c 0c09 	orr.w	ip, ip, r9
 8018d88:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8018d8c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8018d90:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8018d94:	b2c0      	uxtb	r0, r0
 8018d96:	fb12 f204 	smulbb	r2, r2, r4
 8018d9a:	fa5f fc8c 	uxtb.w	ip, ip
 8018d9e:	fb1e fe04 	smulbb	lr, lr, r4
 8018da2:	fb01 2100 	mla	r1, r1, r0, r2
 8018da6:	10da      	asrs	r2, r3, #3
 8018da8:	fb1c fc04 	smulbb	ip, ip, r4
 8018dac:	00db      	lsls	r3, r3, #3
 8018dae:	b289      	uxth	r1, r1
 8018db0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8018db4:	b2db      	uxtb	r3, r3
 8018db6:	fb02 e200 	mla	r2, r2, r0, lr
 8018dba:	fb03 c300 	mla	r3, r3, r0, ip
 8018dbe:	b292      	uxth	r2, r2
 8018dc0:	fa1f fc83 	uxth.w	ip, r3
 8018dc4:	1c4b      	adds	r3, r1, #1
 8018dc6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018dca:	f10c 0301 	add.w	r3, ip, #1
 8018dce:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8018dd2:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8018dd6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018dda:	430b      	orrs	r3, r1
 8018ddc:	1c51      	adds	r1, r2, #1
 8018dde:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018de2:	0952      	lsrs	r2, r2, #5
 8018de4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018de8:	4313      	orrs	r3, r2
 8018dea:	803b      	strh	r3, [r7, #0]
 8018dec:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8018dee:	3702      	adds	r7, #2
 8018df0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8018df2:	441a      	add	r2, r3
 8018df4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8018df6:	441d      	add	r5, r3
 8018df8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8018dfa:	9229      	str	r2, [sp, #164]	@ 0xa4
 8018dfc:	3b01      	subs	r3, #1
 8018dfe:	931a      	str	r3, [sp, #104]	@ 0x68
 8018e00:	e694      	b.n	8018b2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018e02:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8018e04:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8018e06:	441c      	add	r4, r3
 8018e08:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8018e0a:	441d      	add	r5, r3
 8018e0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018e0e:	9429      	str	r4, [sp, #164]	@ 0xa4
 8018e10:	3b01      	subs	r3, #1
 8018e12:	9309      	str	r3, [sp, #36]	@ 0x24
 8018e14:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018e16:	3302      	adds	r3, #2
 8018e18:	930c      	str	r3, [sp, #48]	@ 0x30
 8018e1a:	e667      	b.n	8018aec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8018e1c:	d024      	beq.n	8018e68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 8018e1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018e20:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8018e22:	3b01      	subs	r3, #1
 8018e24:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8018e26:	fb00 4003 	mla	r0, r0, r3, r4
 8018e2a:	1400      	asrs	r0, r0, #16
 8018e2c:	f53f ae7b 	bmi.w	8018b26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018e30:	3901      	subs	r1, #1
 8018e32:	4288      	cmp	r0, r1
 8018e34:	f6bf ae77 	bge.w	8018b26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018e38:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8018e3a:	fb01 5303 	mla	r3, r1, r3, r5
 8018e3e:	141b      	asrs	r3, r3, #16
 8018e40:	f53f ae71 	bmi.w	8018b26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018e44:	3a01      	subs	r2, #1
 8018e46:	4293      	cmp	r3, r2
 8018e48:	f6bf ae6d 	bge.w	8018b26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018e4c:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8018e50:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 8018e54:	f1bb 0f00 	cmp.w	fp, #0
 8018e58:	dc70      	bgt.n	8018f3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8018e5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018e5c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018e60:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018e62:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018e66:	930c      	str	r3, [sp, #48]	@ 0x30
 8018e68:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8018e6a:	2b00      	cmp	r3, #0
 8018e6c:	f340 81be 	ble.w	80191ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 8018e70:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018e74:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018e76:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018e7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018e7e:	eef0 6a62 	vmov.f32	s13, s5
 8018e82:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018e86:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018e8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018e8e:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8018e92:	eef0 6a43 	vmov.f32	s13, s6
 8018e96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018e9a:	ee16 5a90 	vmov	r5, s13
 8018e9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018ea2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018ea6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018eaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018eae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018eb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018eb6:	ee12 2a90 	vmov	r2, s5
 8018eba:	eef0 2a47 	vmov.f32	s5, s14
 8018ebe:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ec2:	ee13 2a10 	vmov	r2, s6
 8018ec6:	932b      	str	r3, [sp, #172]	@ 0xac
 8018ec8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018eca:	eeb0 3a67 	vmov.f32	s6, s15
 8018ece:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ed2:	932c      	str	r3, [sp, #176]	@ 0xb0
 8018ed4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8018ed6:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8018ed8:	3b01      	subs	r3, #1
 8018eda:	9319      	str	r3, [sp, #100]	@ 0x64
 8018edc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018ede:	bf08      	it	eq
 8018ee0:	4613      	moveq	r3, r2
 8018ee2:	9309      	str	r3, [sp, #36]	@ 0x24
 8018ee4:	e5f4      	b.n	8018ad0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018ee6:	2900      	cmp	r1, #0
 8018ee8:	f43f ae66 	beq.w	8018bb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8018eec:	f818 0000 	ldrb.w	r0, [r8, r0]
 8018ef0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8018ef4:	900a      	str	r0, [sp, #40]	@ 0x28
 8018ef6:	0e00      	lsrs	r0, r0, #24
 8018ef8:	9013      	str	r0, [sp, #76]	@ 0x4c
 8018efa:	e65d      	b.n	8018bb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8018efc:	f113 0801 	adds.w	r8, r3, #1
 8018f00:	f53f af74 	bmi.w	8018dec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8018f04:	4540      	cmp	r0, r8
 8018f06:	f6ff af71 	blt.w	8018dec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8018f0a:	f11c 0801 	adds.w	r8, ip, #1
 8018f0e:	f53f af6d 	bmi.w	8018dec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8018f12:	45c6      	cmp	lr, r8
 8018f14:	f6ff af6a 	blt.w	8018dec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8018f18:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8018f1a:	b200      	sxth	r0, r0
 8018f1c:	9302      	str	r3, [sp, #8]
 8018f1e:	fa0f f38e 	sxth.w	r3, lr
 8018f22:	9000      	str	r0, [sp, #0]
 8018f24:	9301      	str	r3, [sp, #4]
 8018f26:	4633      	mov	r3, r6
 8018f28:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8018f2a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8018f2e:	e9cd c203 	strd	ip, r2, [sp, #12]
 8018f32:	4639      	mov	r1, r7
 8018f34:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018f36:	f7ff fc63 	bl	8018800 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8018f3a:	e757      	b.n	8018dec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8018f3c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8018f3e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018f42:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8018f44:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018f48:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8018f4a:	1427      	asrs	r7, r4, #16
 8018f4c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018f4e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018f52:	142b      	asrs	r3, r5, #16
 8018f54:	fb01 7303 	mla	r3, r1, r3, r7
 8018f58:	18e7      	adds	r7, r4, r3
 8018f5a:	5ce3      	ldrb	r3, [r4, r3]
 8018f5c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018f60:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018f64:	2a00      	cmp	r2, #0
 8018f66:	f000 8137 	beq.w	80191d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 8018f6a:	f897 e001 	ldrb.w	lr, [r7, #1]
 8018f6e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8018f72:	9410      	str	r4, [sp, #64]	@ 0x40
 8018f74:	0e24      	lsrs	r4, r4, #24
 8018f76:	9417      	str	r4, [sp, #92]	@ 0x5c
 8018f78:	b170      	cbz	r0, 8018f98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8018f7a:	eb07 0e01 	add.w	lr, r7, r1
 8018f7e:	5c79      	ldrb	r1, [r7, r1]
 8018f80:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018f84:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018f86:	0e09      	lsrs	r1, r1, #24
 8018f88:	9114      	str	r1, [sp, #80]	@ 0x50
 8018f8a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8018f8e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018f92:	9111      	str	r1, [sp, #68]	@ 0x44
 8018f94:	0e09      	lsrs	r1, r1, #24
 8018f96:	9118      	str	r1, [sp, #96]	@ 0x60
 8018f98:	b292      	uxth	r2, r2
 8018f9a:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8018f9c:	b280      	uxth	r0, r0
 8018f9e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018fa0:	fb02 f800 	mul.w	r8, r2, r0
 8018fa4:	0112      	lsls	r2, r2, #4
 8018fa6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8018faa:	eba2 0e08 	sub.w	lr, r2, r8
 8018fae:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8018fb2:	b280      	uxth	r0, r0
 8018fb4:	fa1f fe8e 	uxth.w	lr, lr
 8018fb8:	1a12      	subs	r2, r2, r0
 8018fba:	fb0e f101 	mul.w	r1, lr, r1
 8018fbe:	b292      	uxth	r2, r2
 8018fc0:	fb02 110c 	mla	r1, r2, ip, r1
 8018fc4:	fb00 1104 	mla	r1, r0, r4, r1
 8018fc8:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8018fca:	fb08 1104 	mla	r1, r8, r4, r1
 8018fce:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018fd2:	2900      	cmp	r1, #0
 8018fd4:	f000 80f5 	beq.w	80191c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 8018fd8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8018fdc:	d019      	beq.n	8019012 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 8018fde:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8018fe2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018fe6:	fb0c fa0a 	mul.w	sl, ip, sl
 8018fea:	fb0c fc03 	mul.w	ip, ip, r3
 8018fee:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018ff2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8018ff6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8018ffa:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018ffe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019002:	4453      	add	r3, sl
 8019004:	0a3f      	lsrs	r7, r7, #8
 8019006:	0a1b      	lsrs	r3, r3, #8
 8019008:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801900c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8019010:	433b      	orrs	r3, r7
 8019012:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8019014:	2cff      	cmp	r4, #255	@ 0xff
 8019016:	d020      	beq.n	801905a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 8019018:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801901a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801901e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8019020:	4367      	muls	r7, r4
 8019022:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8019024:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019028:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801902c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801902e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019032:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019036:	fb04 fa0a 	mul.w	sl, r4, sl
 801903a:	44bc      	add	ip, r7
 801903c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019040:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019044:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019048:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801904c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019050:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019054:	ea4c 040a 	orr.w	r4, ip, sl
 8019058:	9410      	str	r4, [sp, #64]	@ 0x40
 801905a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801905c:	2cff      	cmp	r4, #255	@ 0xff
 801905e:	d020      	beq.n	80190a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 8019060:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019062:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019066:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019068:	4367      	muls	r7, r4
 801906a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801906c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019070:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019074:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019076:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801907a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801907e:	fb04 fa0a 	mul.w	sl, r4, sl
 8019082:	44bc      	add	ip, r7
 8019084:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019088:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801908c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019090:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019094:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019098:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801909c:	ea4c 040a 	orr.w	r4, ip, sl
 80190a0:	940b      	str	r4, [sp, #44]	@ 0x2c
 80190a2:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80190a4:	2cff      	cmp	r4, #255	@ 0xff
 80190a6:	d020      	beq.n	80190ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 80190a8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80190aa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80190ae:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80190b0:	4367      	muls	r7, r4
 80190b2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80190b4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80190b8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80190bc:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80190be:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80190c2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80190c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80190ca:	44bc      	add	ip, r7
 80190cc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80190d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80190d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80190d8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80190dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80190e0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80190e4:	ea4c 040a 	orr.w	r4, ip, sl
 80190e8:	9411      	str	r4, [sp, #68]	@ 0x44
 80190ea:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80190ec:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80190f0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80190f4:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80190f8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80190fa:	fb0e f707 	mul.w	r7, lr, r7
 80190fe:	fb02 770c 	mla	r7, r2, ip, r7
 8019102:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8019106:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019108:	fb00 770c 	mla	r7, r0, ip, r7
 801910c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8019110:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8019112:	fb08 770c 	mla	r7, r8, ip, r7
 8019116:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801911a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801911c:	fb0e fe0c 	mul.w	lr, lr, ip
 8019120:	0a3f      	lsrs	r7, r7, #8
 8019122:	fb02 e303 	mla	r3, r2, r3, lr
 8019126:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019128:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801912c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8019130:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019132:	fb00 330a 	mla	r3, r0, sl, r3
 8019136:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801913a:	f8b9 0000 	ldrh.w	r0, [r9]
 801913e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019142:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019144:	1202      	asrs	r2, r0, #8
 8019146:	434b      	muls	r3, r1
 8019148:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801914c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019150:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8019154:	1c59      	adds	r1, r3, #1
 8019156:	ea47 070c 	orr.w	r7, r7, ip
 801915a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801915e:	0c3b      	lsrs	r3, r7, #16
 8019160:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019164:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8019168:	b2ff      	uxtb	r7, r7
 801916a:	fb13 f304 	smulbb	r3, r3, r4
 801916e:	b2c9      	uxtb	r1, r1
 8019170:	fb1c fc04 	smulbb	ip, ip, r4
 8019174:	fb02 3201 	mla	r2, r2, r1, r3
 8019178:	10c3      	asrs	r3, r0, #3
 801917a:	fb17 f704 	smulbb	r7, r7, r4
 801917e:	00c0      	lsls	r0, r0, #3
 8019180:	b292      	uxth	r2, r2
 8019182:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8019186:	b2c0      	uxtb	r0, r0
 8019188:	fb03 c301 	mla	r3, r3, r1, ip
 801918c:	f102 0c01 	add.w	ip, r2, #1
 8019190:	fb00 7001 	mla	r0, r0, r1, r7
 8019194:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8019198:	b280      	uxth	r0, r0
 801919a:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801919e:	b29b      	uxth	r3, r3
 80191a0:	1c42      	adds	r2, r0, #1
 80191a2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80191a6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80191aa:	ea42 020c 	orr.w	r2, r2, ip
 80191ae:	f103 0c01 	add.w	ip, r3, #1
 80191b2:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80191b6:	095b      	lsrs	r3, r3, #5
 80191b8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80191bc:	431a      	orrs	r2, r3
 80191be:	f8a9 2000 	strh.w	r2, [r9]
 80191c2:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 80191c4:	f109 0902 	add.w	r9, r9, #2
 80191c8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80191ca:	f10b 3bff 	add.w	fp, fp, #4294967295
 80191ce:	441a      	add	r2, r3
 80191d0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80191d2:	9229      	str	r2, [sp, #164]	@ 0xa4
 80191d4:	441d      	add	r5, r3
 80191d6:	e63d      	b.n	8018e54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 80191d8:	2800      	cmp	r0, #0
 80191da:	f43f aedd 	beq.w	8018f98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 80191de:	5c79      	ldrb	r1, [r7, r1]
 80191e0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80191e4:	910b      	str	r1, [sp, #44]	@ 0x2c
 80191e6:	0e09      	lsrs	r1, r1, #24
 80191e8:	9114      	str	r1, [sp, #80]	@ 0x50
 80191ea:	e6d5      	b.n	8018f98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 80191ec:	b01f      	add	sp, #124	@ 0x7c
 80191ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080191f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80191f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191f6:	b089      	sub	sp, #36	@ 0x24
 80191f8:	9101      	str	r1, [sp, #4]
 80191fa:	9801      	ldr	r0, [sp, #4]
 80191fc:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 8019200:	8800      	ldrh	r0, [r0, #0]
 8019202:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 8019206:	1206      	asrs	r6, r0, #8
 8019208:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801920c:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 8019210:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8019214:	9602      	str	r6, [sp, #8]
 8019216:	10c6      	asrs	r6, r0, #3
 8019218:	00c0      	lsls	r0, r0, #3
 801921a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801921e:	b2c0      	uxtb	r0, r0
 8019220:	9603      	str	r6, [sp, #12]
 8019222:	9004      	str	r0, [sp, #16]
 8019224:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 8019228:	fb07 100c 	mla	r0, r7, ip, r1
 801922c:	2f00      	cmp	r7, #0
 801922e:	eb02 0e00 	add.w	lr, r2, r0
 8019232:	f2c0 810a 	blt.w	801944a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8019236:	45b8      	cmp	r8, r7
 8019238:	f340 8107 	ble.w	801944a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801923c:	2900      	cmp	r1, #0
 801923e:	f2c0 8102 	blt.w	8019446 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8019242:	458c      	cmp	ip, r1
 8019244:	f340 80ff 	ble.w	8019446 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8019248:	5c12      	ldrb	r2, [r2, r0]
 801924a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801924e:	1c4a      	adds	r2, r1, #1
 8019250:	f100 80fe 	bmi.w	8019450 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8019254:	4594      	cmp	ip, r2
 8019256:	f340 80fb 	ble.w	8019450 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801925a:	2d00      	cmp	r5, #0
 801925c:	f000 80fa 	beq.w	8019454 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8019260:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019264:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8019268:	3701      	adds	r7, #1
 801926a:	f100 80f7 	bmi.w	801945c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801926e:	45b8      	cmp	r8, r7
 8019270:	f340 80f4 	ble.w	801945c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8019274:	2c00      	cmp	r4, #0
 8019276:	f000 80f4 	beq.w	8019462 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801927a:	2900      	cmp	r1, #0
 801927c:	eb0e 020c 	add.w	r2, lr, ip
 8019280:	f2c0 80ea 	blt.w	8019458 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8019284:	458c      	cmp	ip, r1
 8019286:	f340 80e7 	ble.w	8019458 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801928a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801928e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8019292:	3101      	adds	r1, #1
 8019294:	f100 80e8 	bmi.w	8019468 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8019298:	458c      	cmp	ip, r1
 801929a:	f340 80e5 	ble.w	8019468 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801929e:	2d00      	cmp	r5, #0
 80192a0:	f000 80e4 	beq.w	801946c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80192a4:	7852      	ldrb	r2, [r2, #1]
 80192a6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80192aa:	0e0b      	lsrs	r3, r1, #24
 80192ac:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 80192b0:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80192b4:	9300      	str	r3, [sp, #0]
 80192b6:	b2a4      	uxth	r4, r4
 80192b8:	b2ab      	uxth	r3, r5
 80192ba:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 80192be:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80192c2:	fb03 f904 	mul.w	r9, r3, r4
 80192c6:	011b      	lsls	r3, r3, #4
 80192c8:	fb0a f505 	mul.w	r5, sl, r5
 80192cc:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80192d0:	eba3 0e09 	sub.w	lr, r3, r9
 80192d4:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 80192d8:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 80192dc:	0a28      	lsrs	r0, r5, #8
 80192de:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 80192e2:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80192e6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80192ea:	fb0a f303 	mul.w	r3, sl, r3
 80192ee:	fb08 f707 	mul.w	r7, r8, r7
 80192f2:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80192f6:	4405      	add	r5, r0
 80192f8:	fb08 fc0c 	mul.w	ip, r8, ip
 80192fc:	b2a4      	uxth	r4, r4
 80192fe:	0a2d      	lsrs	r5, r5, #8
 8019300:	fa1f fe8e 	uxth.w	lr, lr
 8019304:	1b12      	subs	r2, r2, r4
 8019306:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801930a:	b292      	uxth	r2, r2
 801930c:	9005      	str	r0, [sp, #20]
 801930e:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8019312:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8019316:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801931a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801931e:	0a1b      	lsrs	r3, r3, #8
 8019320:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8019324:	9306      	str	r3, [sp, #24]
 8019326:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801932a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801932e:	4460      	add	r0, ip
 8019330:	fb0b f303 	mul.w	r3, fp, r3
 8019334:	fb0b f606 	mul.w	r6, fp, r6
 8019338:	0a00      	lsrs	r0, r0, #8
 801933a:	0a1d      	lsrs	r5, r3, #8
 801933c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8019340:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8019344:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8019348:	441d      	add	r5, r3
 801934a:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801934e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8019352:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 8019356:	0a2d      	lsrs	r5, r5, #8
 8019358:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801935c:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8019360:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8019364:	0a36      	lsrs	r6, r6, #8
 8019366:	0a1b      	lsrs	r3, r3, #8
 8019368:	fb05 f50e 	mul.w	r5, r5, lr
 801936c:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8019370:	9307      	str	r3, [sp, #28]
 8019372:	0e0b      	lsrs	r3, r1, #24
 8019374:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8019378:	fb0e f606 	mul.w	r6, lr, r6
 801937c:	435f      	muls	r7, r3
 801937e:	4359      	muls	r1, r3
 8019380:	9b05      	ldr	r3, [sp, #20]
 8019382:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019386:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801938a:	fb03 5502 	mla	r5, r3, r2, r5
 801938e:	9b06      	ldr	r3, [sp, #24]
 8019390:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019394:	fb0e fe0b 	mul.w	lr, lr, fp
 8019398:	44bc      	add	ip, r7
 801939a:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801939e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80193a2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80193a6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80193aa:	0a09      	lsrs	r1, r1, #8
 80193ac:	fb0c 5509 	mla	r5, ip, r9, r5
 80193b0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80193b4:	fb00 5504 	mla	r5, r0, r4, r5
 80193b8:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 80193bc:	9b07      	ldr	r3, [sp, #28]
 80193be:	fb02 6000 	mla	r0, r2, r0, r6
 80193c2:	0a2d      	lsrs	r5, r5, #8
 80193c4:	fb02 e20a 	mla	r2, r2, sl, lr
 80193c8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80193cc:	fb09 0001 	mla	r0, r9, r1, r0
 80193d0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80193d4:	fb04 0003 	mla	r0, r4, r3, r0
 80193d8:	9b00      	ldr	r3, [sp, #0]
 80193da:	fb04 2408 	mla	r4, r4, r8, r2
 80193de:	9a04      	ldr	r2, [sp, #16]
 80193e0:	0a00      	lsrs	r0, r0, #8
 80193e2:	fb09 4903 	mla	r9, r9, r3, r4
 80193e6:	9b02      	ldr	r3, [sp, #8]
 80193e8:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80193ec:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80193f0:	4305      	orrs	r5, r0
 80193f2:	fa5f f989 	uxtb.w	r9, r9
 80193f6:	fb03 f109 	mul.w	r1, r3, r9
 80193fa:	9b03      	ldr	r3, [sp, #12]
 80193fc:	fb03 f309 	mul.w	r3, r3, r9
 8019400:	fb02 f909 	mul.w	r9, r2, r9
 8019404:	1c4a      	adds	r2, r1, #1
 8019406:	1c58      	adds	r0, r3, #1
 8019408:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801940c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019410:	0c2a      	lsrs	r2, r5, #16
 8019412:	0a2b      	lsrs	r3, r5, #8
 8019414:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8019418:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801941c:	0212      	lsls	r2, r2, #8
 801941e:	00db      	lsls	r3, r3, #3
 8019420:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8019424:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019428:	4313      	orrs	r3, r2
 801942a:	f109 0201 	add.w	r2, r9, #1
 801942e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8019432:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8019436:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801943a:	431d      	orrs	r5, r3
 801943c:	9b01      	ldr	r3, [sp, #4]
 801943e:	801d      	strh	r5, [r3, #0]
 8019440:	b009      	add	sp, #36	@ 0x24
 8019442:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019446:	2000      	movs	r0, #0
 8019448:	e701      	b.n	801924e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801944a:	2600      	movs	r6, #0
 801944c:	4630      	mov	r0, r6
 801944e:	e70b      	b.n	8019268 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8019450:	2600      	movs	r6, #0
 8019452:	e709      	b.n	8019268 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8019454:	462e      	mov	r6, r5
 8019456:	e707      	b.n	8019268 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8019458:	2700      	movs	r7, #0
 801945a:	e71a      	b.n	8019292 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801945c:	2100      	movs	r1, #0
 801945e:	460f      	mov	r7, r1
 8019460:	e723      	b.n	80192aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8019462:	4621      	mov	r1, r4
 8019464:	4627      	mov	r7, r4
 8019466:	e720      	b.n	80192aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8019468:	2100      	movs	r1, #0
 801946a:	e71e      	b.n	80192aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801946c:	4629      	mov	r1, r5
 801946e:	e71c      	b.n	80192aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08019470 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019470:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019474:	b09b      	sub	sp, #108	@ 0x6c
 8019476:	9218      	str	r2, [sp, #96]	@ 0x60
 8019478:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801947a:	9019      	str	r0, [sp, #100]	@ 0x64
 801947c:	9116      	str	r1, [sp, #88]	@ 0x58
 801947e:	6850      	ldr	r0, [r2, #4]
 8019480:	9307      	str	r3, [sp, #28]
 8019482:	6812      	ldr	r2, [r2, #0]
 8019484:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 8019486:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801948a:	fb00 1303 	mla	r3, r0, r3, r1
 801948e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019492:	930a      	str	r3, [sp, #40]	@ 0x28
 8019494:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8019496:	681b      	ldr	r3, [r3, #0]
 8019498:	930f      	str	r3, [sp, #60]	@ 0x3c
 801949a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801949c:	685e      	ldr	r6, [r3, #4]
 801949e:	3604      	adds	r6, #4
 80194a0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80194a2:	2b00      	cmp	r3, #0
 80194a4:	dc03      	bgt.n	80194ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80194a6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80194a8:	2b00      	cmp	r3, #0
 80194aa:	f340 8373 	ble.w	8019b94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80194ae:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80194b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80194b4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80194b8:	1e48      	subs	r0, r1, #1
 80194ba:	1e57      	subs	r7, r2, #1
 80194bc:	9b07      	ldr	r3, [sp, #28]
 80194be:	2b00      	cmp	r3, #0
 80194c0:	f340 818f 	ble.w	80197e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80194c4:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80194c6:	142b      	asrs	r3, r5, #16
 80194c8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80194cc:	d406      	bmi.n	80194dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80194ce:	4584      	cmp	ip, r0
 80194d0:	da04      	bge.n	80194dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80194d2:	2b00      	cmp	r3, #0
 80194d4:	db02      	blt.n	80194dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80194d6:	42bb      	cmp	r3, r7
 80194d8:	f2c0 8184 	blt.w	80197e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80194dc:	f11c 0c01 	adds.w	ip, ip, #1
 80194e0:	f100 8172 	bmi.w	80197c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80194e4:	4561      	cmp	r1, ip
 80194e6:	f2c0 816f 	blt.w	80197c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80194ea:	3301      	adds	r3, #1
 80194ec:	f100 816c 	bmi.w	80197c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80194f0:	429a      	cmp	r2, r3
 80194f2:	f2c0 8169 	blt.w	80197c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80194f6:	9b07      	ldr	r3, [sp, #28]
 80194f8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80194fa:	9317      	str	r3, [sp, #92]	@ 0x5c
 80194fc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80194fe:	2b00      	cmp	r3, #0
 8019500:	f340 818e 	ble.w	8019820 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8019504:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019506:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801950a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801950e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019512:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8019514:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8019518:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801951a:	141b      	asrs	r3, r3, #16
 801951c:	f100 81d1 	bmi.w	80198c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019520:	f101 38ff 	add.w	r8, r1, #4294967295
 8019524:	4543      	cmp	r3, r8
 8019526:	f280 81cc 	bge.w	80198c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801952a:	f1bc 0f00 	cmp.w	ip, #0
 801952e:	f2c0 81c8 	blt.w	80198c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019532:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019536:	45c4      	cmp	ip, r8
 8019538:	f280 81c3 	bge.w	80198c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801953c:	b209      	sxth	r1, r1
 801953e:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8019540:	fb0c 3301 	mla	r3, ip, r1, r3
 8019544:	eb04 0803 	add.w	r8, r4, r3
 8019548:	5ce3      	ldrb	r3, [r4, r3]
 801954a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801954e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8019552:	2a00      	cmp	r2, #0
 8019554:	f000 81aa 	beq.w	80198ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 8019558:	f898 c001 	ldrb.w	ip, [r8, #1]
 801955c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8019560:	940b      	str	r4, [sp, #44]	@ 0x2c
 8019562:	0e24      	lsrs	r4, r4, #24
 8019564:	9412      	str	r4, [sp, #72]	@ 0x48
 8019566:	b178      	cbz	r0, 8019588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8019568:	eb08 0c01 	add.w	ip, r8, r1
 801956c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8019570:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019574:	9108      	str	r1, [sp, #32]
 8019576:	0e09      	lsrs	r1, r1, #24
 8019578:	9110      	str	r1, [sp, #64]	@ 0x40
 801957a:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801957e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019582:	910c      	str	r1, [sp, #48]	@ 0x30
 8019584:	0e09      	lsrs	r1, r1, #24
 8019586:	9113      	str	r1, [sp, #76]	@ 0x4c
 8019588:	b292      	uxth	r2, r2
 801958a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801958c:	b280      	uxth	r0, r0
 801958e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8019590:	fb02 f900 	mul.w	r9, r2, r0
 8019594:	0112      	lsls	r2, r2, #4
 8019596:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801959a:	eba2 0809 	sub.w	r8, r2, r9
 801959e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80195a2:	b280      	uxth	r0, r0
 80195a4:	fa1f f888 	uxth.w	r8, r8
 80195a8:	1a12      	subs	r2, r2, r0
 80195aa:	fb08 f101 	mul.w	r1, r8, r1
 80195ae:	b292      	uxth	r2, r2
 80195b0:	fb02 110e 	mla	r1, r2, lr, r1
 80195b4:	fb00 1104 	mla	r1, r0, r4, r1
 80195b8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80195ba:	fb09 1104 	mla	r1, r9, r4, r1
 80195be:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80195c2:	2900      	cmp	r1, #0
 80195c4:	f000 80f5 	beq.w	80197b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80195c8:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80195cc:	d01b      	beq.n	8019606 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80195ce:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80195d2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80195d6:	fb0e fa0a 	mul.w	sl, lr, sl
 80195da:	fb0e fe03 	mul.w	lr, lr, r3
 80195de:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80195e2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80195e6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80195ea:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80195ee:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80195f2:	4453      	add	r3, sl
 80195f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80195f8:	0a1b      	lsrs	r3, r3, #8
 80195fa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80195fe:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8019602:	ea43 030c 	orr.w	r3, r3, ip
 8019606:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019608:	2cff      	cmp	r4, #255	@ 0xff
 801960a:	d021      	beq.n	8019650 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801960c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801960e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8019612:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019614:	fb04 fb0b 	mul.w	fp, r4, fp
 8019618:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801961a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801961e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019620:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019624:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8019628:	fb04 fa0a 	mul.w	sl, r4, sl
 801962c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019630:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8019634:	44de      	add	lr, fp
 8019636:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801963a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801963e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019642:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019646:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801964a:	ea4e 040a 	orr.w	r4, lr, sl
 801964e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8019650:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8019652:	2cff      	cmp	r4, #255	@ 0xff
 8019654:	d021      	beq.n	801969a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019656:	9c08      	ldr	r4, [sp, #32]
 8019658:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801965c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801965e:	fb04 fb0b 	mul.w	fp, r4, fp
 8019662:	9c08      	ldr	r4, [sp, #32]
 8019664:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019668:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801966a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801966e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8019672:	fb04 fa0a 	mul.w	sl, r4, sl
 8019676:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801967a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801967e:	44de      	add	lr, fp
 8019680:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019684:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019688:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801968c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019690:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019694:	ea4e 040a 	orr.w	r4, lr, sl
 8019698:	9408      	str	r4, [sp, #32]
 801969a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801969c:	2cff      	cmp	r4, #255	@ 0xff
 801969e:	d021      	beq.n	80196e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80196a0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80196a2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80196a6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80196a8:	fb04 fb0b 	mul.w	fp, r4, fp
 80196ac:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80196ae:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80196b2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80196b4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80196b8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80196bc:	fb04 fa0a 	mul.w	sl, r4, sl
 80196c0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80196c4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80196c8:	44de      	add	lr, fp
 80196ca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80196ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80196d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80196d6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80196da:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80196de:	ea4e 040a 	orr.w	r4, lr, sl
 80196e2:	940c      	str	r4, [sp, #48]	@ 0x30
 80196e4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80196e6:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 80196ea:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80196ee:	43c9      	mvns	r1, r1
 80196f0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80196f4:	9c08      	ldr	r4, [sp, #32]
 80196f6:	fb08 fc0c 	mul.w	ip, r8, ip
 80196fa:	fb02 cc0e 	mla	ip, r2, lr, ip
 80196fe:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8019702:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8019704:	fb00 cc0e 	mla	ip, r0, lr, ip
 8019708:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801970c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801970e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019712:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8019716:	fb08 f80e 	mul.w	r8, r8, lr
 801971a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801971e:	fa5f fe81 	uxtb.w	lr, r1
 8019722:	fb02 8303 	mla	r3, r2, r3, r8
 8019726:	9a08      	ldr	r2, [sp, #32]
 8019728:	f8b7 8000 	ldrh.w	r8, [r7]
 801972c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019730:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8019734:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8019736:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801973a:	fb00 330a 	mla	r3, r0, sl, r3
 801973e:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 8019742:	ea4f 2228 	mov.w	r2, r8, asr #8
 8019746:	fb09 3900 	mla	r9, r9, r0, r3
 801974a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801974e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019752:	b2c9      	uxtb	r1, r1
 8019754:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019758:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801975c:	fb02 f20e 	mul.w	r2, r2, lr
 8019760:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8019764:	fb00 f00e 	mul.w	r0, r0, lr
 8019768:	1c53      	adds	r3, r2, #1
 801976a:	fb01 f10e 	mul.w	r1, r1, lr
 801976e:	ea4c 0c09 	orr.w	ip, ip, r9
 8019772:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8019776:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801977a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801977e:	4a60      	ldr	r2, [pc, #384]	@ (8019900 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8019780:	b2db      	uxtb	r3, r3
 8019782:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8019786:	1c43      	adds	r3, r0, #1
 8019788:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801978c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8019790:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019794:	00db      	lsls	r3, r3, #3
 8019796:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801979a:	4313      	orrs	r3, r2
 801979c:	1c4a      	adds	r2, r1, #1
 801979e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80197a2:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80197a6:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80197aa:	ea4c 0c03 	orr.w	ip, ip, r3
 80197ae:	f8a7 c000 	strh.w	ip, [r7]
 80197b2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80197b4:	3702      	adds	r7, #2
 80197b6:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80197b8:	441a      	add	r2, r3
 80197ba:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80197bc:	441d      	add	r5, r3
 80197be:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80197c0:	9225      	str	r2, [sp, #148]	@ 0x94
 80197c2:	3b01      	subs	r3, #1
 80197c4:	9317      	str	r3, [sp, #92]	@ 0x5c
 80197c6:	e699      	b.n	80194fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80197c8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80197ca:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80197cc:	441c      	add	r4, r3
 80197ce:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80197d0:	441d      	add	r5, r3
 80197d2:	9b07      	ldr	r3, [sp, #28]
 80197d4:	9425      	str	r4, [sp, #148]	@ 0x94
 80197d6:	3b01      	subs	r3, #1
 80197d8:	9307      	str	r3, [sp, #28]
 80197da:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80197dc:	3302      	adds	r3, #2
 80197de:	930a      	str	r3, [sp, #40]	@ 0x28
 80197e0:	e66c      	b.n	80194bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80197e2:	d024      	beq.n	801982e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 80197e4:	9b07      	ldr	r3, [sp, #28]
 80197e6:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80197e8:	3b01      	subs	r3, #1
 80197ea:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80197ec:	fb00 4003 	mla	r0, r0, r3, r4
 80197f0:	1400      	asrs	r0, r0, #16
 80197f2:	f53f ae80 	bmi.w	80194f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80197f6:	3901      	subs	r1, #1
 80197f8:	4288      	cmp	r0, r1
 80197fa:	f6bf ae7c 	bge.w	80194f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80197fe:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8019800:	fb01 5303 	mla	r3, r1, r3, r5
 8019804:	141b      	asrs	r3, r3, #16
 8019806:	f53f ae76 	bmi.w	80194f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801980a:	3a01      	subs	r2, #1
 801980c:	4293      	cmp	r3, r2
 801980e:	f6bf ae72 	bge.w	80194f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019812:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019816:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801981a:	f1bb 0f00 	cmp.w	fp, #0
 801981e:	dc71      	bgt.n	8019904 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8019820:	9b07      	ldr	r3, [sp, #28]
 8019822:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019826:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019828:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801982c:	930a      	str	r3, [sp, #40]	@ 0x28
 801982e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8019830:	2b00      	cmp	r3, #0
 8019832:	f340 81af 	ble.w	8019b94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8019836:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801983a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801983c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019840:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019844:	eef0 6a62 	vmov.f32	s13, s5
 8019848:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801984c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019850:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019854:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8019858:	eef0 6a43 	vmov.f32	s13, s6
 801985c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019860:	ee16 5a90 	vmov	r5, s13
 8019864:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019868:	ee61 7a27 	vmul.f32	s15, s2, s15
 801986c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019870:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019874:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019878:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801987c:	ee12 2a90 	vmov	r2, s5
 8019880:	eef0 2a47 	vmov.f32	s5, s14
 8019884:	fb92 f3f3 	sdiv	r3, r2, r3
 8019888:	ee13 2a10 	vmov	r2, s6
 801988c:	9327      	str	r3, [sp, #156]	@ 0x9c
 801988e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019890:	eeb0 3a67 	vmov.f32	s6, s15
 8019894:	fb92 f3f3 	sdiv	r3, r2, r3
 8019898:	9328      	str	r3, [sp, #160]	@ 0xa0
 801989a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801989c:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801989e:	3b01      	subs	r3, #1
 80198a0:	9316      	str	r3, [sp, #88]	@ 0x58
 80198a2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80198a4:	bf08      	it	eq
 80198a6:	4613      	moveq	r3, r2
 80198a8:	9307      	str	r3, [sp, #28]
 80198aa:	e5f9      	b.n	80194a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80198ac:	2800      	cmp	r0, #0
 80198ae:	f43f ae6b 	beq.w	8019588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 80198b2:	f818 1001 	ldrb.w	r1, [r8, r1]
 80198b6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80198ba:	9108      	str	r1, [sp, #32]
 80198bc:	0e09      	lsrs	r1, r1, #24
 80198be:	9110      	str	r1, [sp, #64]	@ 0x40
 80198c0:	e662      	b.n	8019588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 80198c2:	f113 0801 	adds.w	r8, r3, #1
 80198c6:	f53f af74 	bmi.w	80197b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80198ca:	4541      	cmp	r1, r8
 80198cc:	f6ff af71 	blt.w	80197b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80198d0:	f11c 0801 	adds.w	r8, ip, #1
 80198d4:	f53f af6d 	bmi.w	80197b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80198d8:	45c6      	cmp	lr, r8
 80198da:	f6ff af6a 	blt.w	80197b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80198de:	b209      	sxth	r1, r1
 80198e0:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80198e4:	fa0f f38e 	sxth.w	r3, lr
 80198e8:	9100      	str	r1, [sp, #0]
 80198ea:	4639      	mov	r1, r7
 80198ec:	9301      	str	r3, [sp, #4]
 80198ee:	4633      	mov	r3, r6
 80198f0:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80198f4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80198f6:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80198f8:	f7ff fc7b 	bl	80191f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80198fc:	e759      	b.n	80197b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80198fe:	bf00      	nop
 8019900:	fffff800 	.word	0xfffff800
 8019904:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019906:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801990a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801990c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019910:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8019912:	1427      	asrs	r7, r4, #16
 8019914:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8019916:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801991a:	142b      	asrs	r3, r5, #16
 801991c:	fb01 7303 	mla	r3, r1, r3, r7
 8019920:	18e7      	adds	r7, r4, r3
 8019922:	5ce3      	ldrb	r3, [r4, r3]
 8019924:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019928:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801992c:	2a00      	cmp	r2, #0
 801992e:	f000 8127 	beq.w	8019b80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8019932:	f897 e001 	ldrb.w	lr, [r7, #1]
 8019936:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801993a:	940d      	str	r4, [sp, #52]	@ 0x34
 801993c:	0e24      	lsrs	r4, r4, #24
 801993e:	9414      	str	r4, [sp, #80]	@ 0x50
 8019940:	b170      	cbz	r0, 8019960 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8019942:	eb07 0e01 	add.w	lr, r7, r1
 8019946:	5c79      	ldrb	r1, [r7, r1]
 8019948:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801994c:	9109      	str	r1, [sp, #36]	@ 0x24
 801994e:	0e09      	lsrs	r1, r1, #24
 8019950:	9111      	str	r1, [sp, #68]	@ 0x44
 8019952:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8019956:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801995a:	910e      	str	r1, [sp, #56]	@ 0x38
 801995c:	0e09      	lsrs	r1, r1, #24
 801995e:	9115      	str	r1, [sp, #84]	@ 0x54
 8019960:	b292      	uxth	r2, r2
 8019962:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019964:	b280      	uxth	r0, r0
 8019966:	fb02 f800 	mul.w	r8, r2, r0
 801996a:	0112      	lsls	r2, r2, #4
 801996c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019970:	eba2 0e08 	sub.w	lr, r2, r8
 8019974:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8019978:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801997a:	b280      	uxth	r0, r0
 801997c:	fa1f fe8e 	uxth.w	lr, lr
 8019980:	1a09      	subs	r1, r1, r0
 8019982:	fb0e f202 	mul.w	r2, lr, r2
 8019986:	b289      	uxth	r1, r1
 8019988:	fb01 220c 	mla	r2, r1, ip, r2
 801998c:	fb00 2204 	mla	r2, r0, r4, r2
 8019990:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019992:	fb08 2204 	mla	r2, r8, r4, r2
 8019996:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801999a:	2a00      	cmp	r2, #0
 801999c:	f000 80e5 	beq.w	8019b6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80199a0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80199a4:	d019      	beq.n	80199da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 80199a6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80199aa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80199ae:	fb0c fa0a 	mul.w	sl, ip, sl
 80199b2:	fb0c fc03 	mul.w	ip, ip, r3
 80199b6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80199ba:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80199be:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80199c2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80199c6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80199ca:	4453      	add	r3, sl
 80199cc:	0a3f      	lsrs	r7, r7, #8
 80199ce:	0a1b      	lsrs	r3, r3, #8
 80199d0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80199d4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80199d8:	433b      	orrs	r3, r7
 80199da:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80199dc:	2cff      	cmp	r4, #255	@ 0xff
 80199de:	d020      	beq.n	8019a22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 80199e0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80199e2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80199e6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80199e8:	4367      	muls	r7, r4
 80199ea:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80199ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80199f0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80199f4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80199f6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80199fa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80199fe:	fb04 fa0a 	mul.w	sl, r4, sl
 8019a02:	44bc      	add	ip, r7
 8019a04:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019a08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019a0c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019a10:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019a14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a18:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019a1c:	ea4c 040a 	orr.w	r4, ip, sl
 8019a20:	940d      	str	r4, [sp, #52]	@ 0x34
 8019a22:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019a24:	2cff      	cmp	r4, #255	@ 0xff
 8019a26:	d020      	beq.n	8019a6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8019a28:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8019a2a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019a2e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019a30:	4367      	muls	r7, r4
 8019a32:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8019a34:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019a38:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019a3c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019a3e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019a42:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019a46:	fb04 fa0a 	mul.w	sl, r4, sl
 8019a4a:	44bc      	add	ip, r7
 8019a4c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019a50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019a54:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019a58:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019a5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a60:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019a64:	ea4c 040a 	orr.w	r4, ip, sl
 8019a68:	9409      	str	r4, [sp, #36]	@ 0x24
 8019a6a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019a6c:	2cff      	cmp	r4, #255	@ 0xff
 8019a6e:	d020      	beq.n	8019ab2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8019a70:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019a72:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019a76:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019a78:	4367      	muls	r7, r4
 8019a7a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019a7c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019a80:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019a84:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019a86:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019a8a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019a8e:	fb04 fa0a 	mul.w	sl, r4, sl
 8019a92:	44bc      	add	ip, r7
 8019a94:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019a98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019a9c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019aa0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019aa4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019aa8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019aac:	ea4c 040a 	orr.w	r4, ip, sl
 8019ab0:	940e      	str	r4, [sp, #56]	@ 0x38
 8019ab2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019ab4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8019ab8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8019abc:	43d2      	mvns	r2, r2
 8019abe:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019ac2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8019ac4:	b2d2      	uxtb	r2, r2
 8019ac6:	fb0e f707 	mul.w	r7, lr, r7
 8019aca:	fb01 770c 	mla	r7, r1, ip, r7
 8019ace:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8019ad2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019ad4:	fb00 770c 	mla	r7, r0, ip, r7
 8019ad8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8019adc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019ade:	fb08 770c 	mla	r7, r8, ip, r7
 8019ae2:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8019ae6:	fb0e fe0c 	mul.w	lr, lr, ip
 8019aea:	0a3f      	lsrs	r7, r7, #8
 8019aec:	fb01 e303 	mla	r3, r1, r3, lr
 8019af0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019af2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8019af6:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8019afa:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8019afc:	fb00 330a 	mla	r3, r0, sl, r3
 8019b00:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8019b04:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019b08:	f8b9 3000 	ldrh.w	r3, [r9]
 8019b0c:	1218      	asrs	r0, r3, #8
 8019b0e:	10d9      	asrs	r1, r3, #3
 8019b10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019b14:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019b18:	00db      	lsls	r3, r3, #3
 8019b1a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019b1e:	4350      	muls	r0, r2
 8019b20:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8019b24:	b2db      	uxtb	r3, r3
 8019b26:	4351      	muls	r1, r2
 8019b28:	ea47 070c 	orr.w	r7, r7, ip
 8019b2c:	4353      	muls	r3, r2
 8019b2e:	1c42      	adds	r2, r0, #1
 8019b30:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019b34:	0c3a      	lsrs	r2, r7, #16
 8019b36:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019b3a:	4a18      	ldr	r2, [pc, #96]	@ (8019b9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8019b3c:	b2c0      	uxtb	r0, r0
 8019b3e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8019b42:	1c4a      	adds	r2, r1, #1
 8019b44:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019b48:	0a3a      	lsrs	r2, r7, #8
 8019b4a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019b4e:	00c9      	lsls	r1, r1, #3
 8019b50:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019b54:	4301      	orrs	r1, r0
 8019b56:	1c58      	adds	r0, r3, #1
 8019b58:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019b5c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8019b60:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8019b64:	4308      	orrs	r0, r1
 8019b66:	f8a9 0000 	strh.w	r0, [r9]
 8019b6a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8019b6c:	f109 0902 	add.w	r9, r9, #2
 8019b70:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8019b72:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019b76:	441a      	add	r2, r3
 8019b78:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019b7a:	9225      	str	r2, [sp, #148]	@ 0x94
 8019b7c:	441d      	add	r5, r3
 8019b7e:	e64c      	b.n	801981a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8019b80:	2800      	cmp	r0, #0
 8019b82:	f43f aeed 	beq.w	8019960 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8019b86:	5c79      	ldrb	r1, [r7, r1]
 8019b88:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019b8c:	9109      	str	r1, [sp, #36]	@ 0x24
 8019b8e:	0e09      	lsrs	r1, r1, #24
 8019b90:	9111      	str	r1, [sp, #68]	@ 0x44
 8019b92:	e6e5      	b.n	8019960 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8019b94:	b01b      	add	sp, #108	@ 0x6c
 8019b96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b9a:	bf00      	nop
 8019b9c:	fffff800 	.word	0xfffff800

08019ba0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8019ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ba4:	b085      	sub	sp, #20
 8019ba6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8019baa:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8019bae:	2800      	cmp	r0, #0
 8019bb0:	9103      	str	r1, [sp, #12]
 8019bb2:	fb00 7406 	mla	r4, r0, r6, r7
 8019bb6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8019bba:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8019bbe:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8019bc2:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8019bc6:	eb03 0904 	add.w	r9, r3, r4
 8019bca:	9501      	str	r5, [sp, #4]
 8019bcc:	f2c0 8150 	blt.w	8019e70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8019bd0:	4583      	cmp	fp, r0
 8019bd2:	f340 814d 	ble.w	8019e70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8019bd6:	2f00      	cmp	r7, #0
 8019bd8:	f2c0 8146 	blt.w	8019e68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8019bdc:	42be      	cmp	r6, r7
 8019bde:	f340 8143 	ble.w	8019e68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8019be2:	f813 c004 	ldrb.w	ip, [r3, r4]
 8019be6:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8019bea:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8019bee:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019bf2:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8019bf6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019bfa:	4355      	muls	r5, r2
 8019bfc:	fb0c f203 	mul.w	r2, ip, r3
 8019c00:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8019c04:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8019c08:	441d      	add	r5, r3
 8019c0a:	f102 0320 	add.w	r3, r2, #32
 8019c0e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019c12:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8019c16:	0a1b      	lsrs	r3, r3, #8
 8019c18:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019c1c:	431c      	orrs	r4, r3
 8019c1e:	1c7b      	adds	r3, r7, #1
 8019c20:	f100 812b 	bmi.w	8019e7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8019c24:	429e      	cmp	r6, r3
 8019c26:	f340 8128 	ble.w	8019e7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8019c2a:	2900      	cmp	r1, #0
 8019c2c:	f000 8128 	beq.w	8019e80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8019c30:	9a01      	ldr	r2, [sp, #4]
 8019c32:	f899 3001 	ldrb.w	r3, [r9, #1]
 8019c36:	8855      	ldrh	r5, [r2, #2]
 8019c38:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8019c3c:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8019c40:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019c44:	fb08 f802 	mul.w	r8, r8, r2
 8019c48:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8019c4c:	435d      	muls	r5, r3
 8019c4e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8019c52:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019c56:	44d0      	add	r8, sl
 8019c58:	f105 0a20 	add.w	sl, r5, #32
 8019c5c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8019c60:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8019c64:	0a2d      	lsrs	r5, r5, #8
 8019c66:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019c6a:	432a      	orrs	r2, r5
 8019c6c:	3001      	adds	r0, #1
 8019c6e:	f100 810d 	bmi.w	8019e8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8019c72:	4583      	cmp	fp, r0
 8019c74:	f340 810a 	ble.w	8019e8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8019c78:	f1be 0f00 	cmp.w	lr, #0
 8019c7c:	f000 810b 	beq.w	8019e96 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8019c80:	2f00      	cmp	r7, #0
 8019c82:	f2c0 8100 	blt.w	8019e86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8019c86:	42be      	cmp	r6, r7
 8019c88:	f340 80fd 	ble.w	8019e86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8019c8c:	9801      	ldr	r0, [sp, #4]
 8019c8e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8019c92:	f819 5006 	ldrb.w	r5, [r9, r6]
 8019c96:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8019c9a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019c9e:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8019ca2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8019ca6:	fb0a fa00 	mul.w	sl, sl, r0
 8019caa:	fb05 f808 	mul.w	r8, r5, r8
 8019cae:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8019cb2:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8019cb6:	4482      	add	sl, r0
 8019cb8:	f108 0020 	add.w	r0, r8, #32
 8019cbc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019cc0:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8019cc4:	0a00      	lsrs	r0, r0, #8
 8019cc6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019cca:	ea4b 0b00 	orr.w	fp, fp, r0
 8019cce:	3701      	adds	r7, #1
 8019cd0:	f100 80e6 	bmi.w	8019ea0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8019cd4:	42be      	cmp	r6, r7
 8019cd6:	f340 80e3 	ble.w	8019ea0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8019cda:	2900      	cmp	r1, #0
 8019cdc:	f000 80e3 	beq.w	8019ea6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8019ce0:	3601      	adds	r6, #1
 8019ce2:	9801      	ldr	r0, [sp, #4]
 8019ce4:	f819 7006 	ldrb.w	r7, [r9, r6]
 8019ce8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8019cec:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8019cf0:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8019cf4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019cf8:	fb09 f906 	mul.w	r9, r9, r6
 8019cfc:	fb07 f800 	mul.w	r8, r7, r0
 8019d00:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8019d04:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8019d08:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8019d0c:	44d1      	add	r9, sl
 8019d0e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8019d12:	f108 0020 	add.w	r0, r8, #32
 8019d16:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019d1a:	0a00      	lsrs	r0, r0, #8
 8019d1c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019d20:	4330      	orrs	r0, r6
 8019d22:	b28e      	uxth	r6, r1
 8019d24:	fa1f f98e 	uxth.w	r9, lr
 8019d28:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8019d2c:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8019d30:	fb06 f809 	mul.w	r8, r6, r9
 8019d34:	0136      	lsls	r6, r6, #4
 8019d36:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019d3a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8019d3e:	9601      	str	r6, [sp, #4]
 8019d40:	ea4a 0404 	orr.w	r4, sl, r4
 8019d44:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019d48:	fa1f f689 	uxth.w	r6, r9
 8019d4c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019d50:	fb11 f90e 	smulbb	r9, r1, lr
 8019d54:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019d58:	9602      	str	r6, [sp, #8]
 8019d5a:	4626      	mov	r6, r4
 8019d5c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8019d60:	f1ce 0410 	rsb	r4, lr, #16
 8019d64:	ea4a 0202 	orr.w	r2, sl, r2
 8019d68:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019d6c:	1a64      	subs	r4, r4, r1
 8019d6e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8019d72:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019d76:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8019d7a:	434a      	muls	r2, r1
 8019d7c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8019d80:	ea4a 0000 	orr.w	r0, sl, r0
 8019d84:	9903      	ldr	r1, [sp, #12]
 8019d86:	fb04 2406 	mla	r4, r4, r6, r2
 8019d8a:	9e02      	ldr	r6, [sp, #8]
 8019d8c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8019d90:	fb09 4200 	mla	r2, r9, r0, r4
 8019d94:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8019d98:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8019d9c:	8808      	ldrh	r0, [r1, #0]
 8019d9e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019da2:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 8019da6:	ea44 0b0b 	orr.w	fp, r4, fp
 8019daa:	9c01      	ldr	r4, [sp, #4]
 8019dac:	b289      	uxth	r1, r1
 8019dae:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 8019db2:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8019db6:	1ba4      	subs	r4, r4, r6
 8019db8:	9e01      	ldr	r6, [sp, #4]
 8019dba:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019dbe:	eba6 0608 	sub.w	r6, r6, r8
 8019dc2:	b2a4      	uxth	r4, r4
 8019dc4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019dc8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019dcc:	b2b6      	uxth	r6, r6
 8019dce:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019dd2:	4373      	muls	r3, r6
 8019dd4:	ea42 0e0e 	orr.w	lr, r2, lr
 8019dd8:	fb0c 3304 	mla	r3, ip, r4, r3
 8019ddc:	9c02      	ldr	r4, [sp, #8]
 8019dde:	fa1f f28e 	uxth.w	r2, lr
 8019de2:	fb04 3505 	mla	r5, r4, r5, r3
 8019de6:	10d4      	asrs	r4, r2, #3
 8019de8:	fb08 5707 	mla	r7, r8, r7, r5
 8019dec:	1215      	asrs	r5, r2, #8
 8019dee:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8019df2:	00d2      	lsls	r2, r2, #3
 8019df4:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8019df8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019dfc:	b2d2      	uxtb	r2, r2
 8019dfe:	434f      	muls	r7, r1
 8019e00:	1c7b      	adds	r3, r7, #1
 8019e02:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8019e06:	1203      	asrs	r3, r0, #8
 8019e08:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8019e0c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8019e10:	b2ff      	uxtb	r7, r7
 8019e12:	fb13 f307 	smulbb	r3, r3, r7
 8019e16:	fb05 3501 	mla	r5, r5, r1, r3
 8019e1a:	10c3      	asrs	r3, r0, #3
 8019e1c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8019e20:	b2ad      	uxth	r5, r5
 8019e22:	fb13 f307 	smulbb	r3, r3, r7
 8019e26:	fb04 3401 	mla	r4, r4, r1, r3
 8019e2a:	00c3      	lsls	r3, r0, #3
 8019e2c:	b2db      	uxtb	r3, r3
 8019e2e:	b2a4      	uxth	r4, r4
 8019e30:	fb13 f307 	smulbb	r3, r3, r7
 8019e34:	fb02 3101 	mla	r1, r2, r1, r3
 8019e38:	1c6b      	adds	r3, r5, #1
 8019e3a:	1c62      	adds	r2, r4, #1
 8019e3c:	b289      	uxth	r1, r1
 8019e3e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019e42:	1c4b      	adds	r3, r1, #1
 8019e44:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8019e48:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019e4c:	9a03      	ldr	r2, [sp, #12]
 8019e4e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8019e52:	0964      	lsrs	r4, r4, #5
 8019e54:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019e58:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8019e5c:	432b      	orrs	r3, r5
 8019e5e:	4323      	orrs	r3, r4
 8019e60:	8013      	strh	r3, [r2, #0]
 8019e62:	b005      	add	sp, #20
 8019e64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e68:	f04f 0c00 	mov.w	ip, #0
 8019e6c:	4664      	mov	r4, ip
 8019e6e:	e6d6      	b.n	8019c1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8019e70:	2300      	movs	r3, #0
 8019e72:	469c      	mov	ip, r3
 8019e74:	461a      	mov	r2, r3
 8019e76:	461c      	mov	r4, r3
 8019e78:	e6f8      	b.n	8019c6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8019e7a:	2300      	movs	r3, #0
 8019e7c:	461a      	mov	r2, r3
 8019e7e:	e6f5      	b.n	8019c6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8019e80:	460b      	mov	r3, r1
 8019e82:	460a      	mov	r2, r1
 8019e84:	e6f2      	b.n	8019c6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8019e86:	2500      	movs	r5, #0
 8019e88:	46ab      	mov	fp, r5
 8019e8a:	e720      	b.n	8019cce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8019e8c:	2700      	movs	r7, #0
 8019e8e:	463d      	mov	r5, r7
 8019e90:	4638      	mov	r0, r7
 8019e92:	46bb      	mov	fp, r7
 8019e94:	e745      	b.n	8019d22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8019e96:	4677      	mov	r7, lr
 8019e98:	4675      	mov	r5, lr
 8019e9a:	4670      	mov	r0, lr
 8019e9c:	46f3      	mov	fp, lr
 8019e9e:	e740      	b.n	8019d22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8019ea0:	2700      	movs	r7, #0
 8019ea2:	4638      	mov	r0, r7
 8019ea4:	e73d      	b.n	8019d22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8019ea6:	460f      	mov	r7, r1
 8019ea8:	4608      	mov	r0, r1
 8019eaa:	e73a      	b.n	8019d22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08019eac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019eb0:	b097      	sub	sp, #92	@ 0x5c
 8019eb2:	9214      	str	r2, [sp, #80]	@ 0x50
 8019eb4:	9308      	str	r3, [sp, #32]
 8019eb6:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8019eb8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8019ebc:	9015      	str	r0, [sp, #84]	@ 0x54
 8019ebe:	9312      	str	r3, [sp, #72]	@ 0x48
 8019ec0:	6850      	ldr	r0, [r2, #4]
 8019ec2:	9111      	str	r1, [sp, #68]	@ 0x44
 8019ec4:	6812      	ldr	r2, [r2, #0]
 8019ec6:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8019eca:	fb00 1303 	mla	r3, r0, r3, r1
 8019ece:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019ed2:	9309      	str	r3, [sp, #36]	@ 0x24
 8019ed4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019ed6:	681b      	ldr	r3, [r3, #0]
 8019ed8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019eda:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019edc:	685b      	ldr	r3, [r3, #4]
 8019ede:	930c      	str	r3, [sp, #48]	@ 0x30
 8019ee0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8019ee4:	930a      	str	r3, [sp, #40]	@ 0x28
 8019ee6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019ee8:	2b00      	cmp	r3, #0
 8019eea:	dc03      	bgt.n	8019ef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019eec:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8019eee:	2b00      	cmp	r3, #0
 8019ef0:	f340 83cd 	ble.w	801a68e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 8019ef4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019ef6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019efa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019efe:	1e48      	subs	r0, r1, #1
 8019f00:	1e55      	subs	r5, r2, #1
 8019f02:	9b08      	ldr	r3, [sp, #32]
 8019f04:	2b00      	cmp	r3, #0
 8019f06:	f340 81a5 	ble.w	801a254 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 8019f0a:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8019f0c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019f0e:	1436      	asrs	r6, r6, #16
 8019f10:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019f14:	d406      	bmi.n	8019f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019f16:	4286      	cmp	r6, r0
 8019f18:	da04      	bge.n	8019f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019f1a:	2b00      	cmp	r3, #0
 8019f1c:	db02      	blt.n	8019f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019f1e:	42ab      	cmp	r3, r5
 8019f20:	f2c0 8199 	blt.w	801a256 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8019f24:	3601      	adds	r6, #1
 8019f26:	f100 8186 	bmi.w	801a236 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019f2a:	42b1      	cmp	r1, r6
 8019f2c:	f2c0 8183 	blt.w	801a236 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019f30:	3301      	adds	r3, #1
 8019f32:	f100 8180 	bmi.w	801a236 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019f36:	429a      	cmp	r2, r3
 8019f38:	f2c0 817d 	blt.w	801a236 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019f3c:	9b08      	ldr	r3, [sp, #32]
 8019f3e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8019f42:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8019f44:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019f46:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019f48:	2b00      	cmp	r3, #0
 8019f4a:	f340 81a6 	ble.w	801a29a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 8019f4e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019f50:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8019f52:	1418      	asrs	r0, r3, #16
 8019f54:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8019f56:	142d      	asrs	r5, r5, #16
 8019f58:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8019f5c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019f5e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8019f62:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019f64:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8019f68:	f100 81fa 	bmi.w	801a360 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8019f6c:	f102 3eff 	add.w	lr, r2, #4294967295
 8019f70:	4575      	cmp	r5, lr
 8019f72:	f280 81f5 	bge.w	801a360 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8019f76:	2800      	cmp	r0, #0
 8019f78:	f2c0 81f2 	blt.w	801a360 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8019f7c:	f103 3eff 	add.w	lr, r3, #4294967295
 8019f80:	4570      	cmp	r0, lr
 8019f82:	f280 81ed 	bge.w	801a360 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8019f86:	b212      	sxth	r2, r2
 8019f88:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019f8a:	fa1f fe81 	uxth.w	lr, r1
 8019f8e:	fb00 5002 	mla	r0, r0, r2, r5
 8019f92:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8019f96:	eb03 0a00 	add.w	sl, r3, r0
 8019f9a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8019f9e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8019fa2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019fa6:	b29b      	uxth	r3, r3
 8019fa8:	f1bc 0f00 	cmp.w	ip, #0
 8019fac:	f000 81bb 	beq.w	801a326 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8019fb0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8019fb4:	eb0a 0b02 	add.w	fp, sl, r2
 8019fb8:	fa1f fa8c 	uxth.w	sl, ip
 8019fbc:	940d      	str	r4, [sp, #52]	@ 0x34
 8019fbe:	fb0a fe0e 	mul.w	lr, sl, lr
 8019fc2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019fc6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8019fca:	eba5 050e 	sub.w	r5, r5, lr
 8019fce:	940e      	str	r4, [sp, #56]	@ 0x38
 8019fd0:	fa1f fa8a 	uxth.w	sl, sl
 8019fd4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019fd6:	b2ad      	uxth	r5, r5
 8019fd8:	eba3 030a 	sub.w	r3, r3, sl
 8019fdc:	fb08 f505 	mul.w	r5, r8, r5
 8019fe0:	b29b      	uxth	r3, r3
 8019fe2:	fb09 5303 	mla	r3, r9, r3, r5
 8019fe6:	fb0a 3304 	mla	r3, sl, r4, r3
 8019fea:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019fec:	fb0e 3304 	mla	r3, lr, r4, r3
 8019ff0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019ff4:	2b00      	cmp	r3, #0
 8019ff6:	f000 8111 	beq.w	801a21c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019ffa:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019ffc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801a000:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801a004:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801a008:	f000 8192 	beq.w	801a330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801a00c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801a010:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801a014:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a018:	fb0a fe0e 	mul.w	lr, sl, lr
 801a01c:	fb09 f000 	mul.w	r0, r9, r0
 801a020:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801a024:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801a028:	f100 0b20 	add.w	fp, r0, #32
 801a02c:	44ce      	add	lr, r9
 801a02e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801a032:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801a036:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a03a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801a03e:	ea4e 0909 	orr.w	r9, lr, r9
 801a042:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801a046:	8868      	ldrh	r0, [r5, #2]
 801a048:	d019      	beq.n	801a07e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a04a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801a04e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801a052:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a056:	fb0a fe0e 	mul.w	lr, sl, lr
 801a05a:	fb08 f800 	mul.w	r8, r8, r0
 801a05e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801a062:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801a066:	f108 0b20 	add.w	fp, r8, #32
 801a06a:	4486      	add	lr, r0
 801a06c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801a070:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801a074:	0a00      	lsrs	r0, r0, #8
 801a076:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a07a:	ea4e 0000 	orr.w	r0, lr, r0
 801a07e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801a082:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801a086:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801a08a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a08e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801a092:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a096:	ea4e 0909 	orr.w	r9, lr, r9
 801a09a:	ea4a 0000 	orr.w	r0, sl, r0
 801a09e:	f1bc 0f00 	cmp.w	ip, #0
 801a0a2:	f000 8147 	beq.w	801a334 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801a0a6:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801a0aa:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a0ac:	3a01      	subs	r2, #1
 801a0ae:	2cff      	cmp	r4, #255	@ 0xff
 801a0b0:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801a0b4:	f102 0202 	add.w	r2, r2, #2
 801a0b8:	eb05 0e02 	add.w	lr, r5, r2
 801a0bc:	5aaa      	ldrh	r2, [r5, r2]
 801a0be:	d018      	beq.n	801a0f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a0c0:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801a0c4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a0c8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a0cc:	fb04 fa02 	mul.w	sl, r4, r2
 801a0d0:	fb08 f805 	mul.w	r8, r8, r5
 801a0d4:	f10a 0520 	add.w	r5, sl, #32
 801a0d8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801a0dc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a0e0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801a0e4:	4442      	add	r2, r8
 801a0e6:	0a2d      	lsrs	r5, r5, #8
 801a0e8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801a0ec:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a0f0:	432a      	orrs	r2, r5
 801a0f2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801a0f4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801a0f8:	2cff      	cmp	r4, #255	@ 0xff
 801a0fa:	d01a      	beq.n	801a132 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801a0fc:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801a100:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a104:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a108:	fb04 fa05 	mul.w	sl, r4, r5
 801a10c:	fb08 f80e 	mul.w	r8, r8, lr
 801a110:	f10a 0e20 	add.w	lr, sl, #32
 801a114:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801a118:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a11c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801a120:	4445      	add	r5, r8
 801a122:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a126:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801a12a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801a12e:	ea45 050e 	orr.w	r5, r5, lr
 801a132:	fb1c fe01 	smulbb	lr, ip, r1
 801a136:	f1cc 0810 	rsb	r8, ip, #16
 801a13a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801a13e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a142:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801a146:	eba8 0801 	sub.w	r8, r8, r1
 801a14a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801a14e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a152:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801a156:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a15a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801a15e:	ea4a 0202 	orr.w	r2, sl, r2
 801a162:	4341      	muls	r1, r0
 801a164:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801a168:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a16c:	fb09 1108 	mla	r1, r9, r8, r1
 801a170:	ea4b 0505 	orr.w	r5, fp, r5
 801a174:	fb0c 1102 	mla	r1, ip, r2, r1
 801a178:	fb0e 1e05 	mla	lr, lr, r5, r1
 801a17c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801a180:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801a184:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a188:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a18c:	ea42 0e0e 	orr.w	lr, r2, lr
 801a190:	fa1f f28e 	uxth.w	r2, lr
 801a194:	2bff      	cmp	r3, #255	@ 0xff
 801a196:	d103      	bne.n	801a1a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a198:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801a19a:	29ff      	cmp	r1, #255	@ 0xff
 801a19c:	f000 80de 	beq.w	801a35c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801a1a0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801a1a2:	1215      	asrs	r5, r2, #8
 801a1a4:	8838      	ldrh	r0, [r7, #0]
 801a1a6:	434b      	muls	r3, r1
 801a1a8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a1ac:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a1ae:	f103 0c01 	add.w	ip, r3, #1
 801a1b2:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801a1b6:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801a1ba:	fa5f fc83 	uxtb.w	ip, r3
 801a1be:	1203      	asrs	r3, r0, #8
 801a1c0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801a1c4:	fb13 f30c 	smulbb	r3, r3, ip
 801a1c8:	fb05 3501 	mla	r5, r5, r1, r3
 801a1cc:	10c3      	asrs	r3, r0, #3
 801a1ce:	10d1      	asrs	r1, r2, #3
 801a1d0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801a1d4:	00d2      	lsls	r2, r2, #3
 801a1d6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a1da:	b2ad      	uxth	r5, r5
 801a1dc:	fb13 f30c 	smulbb	r3, r3, ip
 801a1e0:	b2d2      	uxtb	r2, r2
 801a1e2:	fb01 3104 	mla	r1, r1, r4, r3
 801a1e6:	00c3      	lsls	r3, r0, #3
 801a1e8:	b2db      	uxtb	r3, r3
 801a1ea:	b289      	uxth	r1, r1
 801a1ec:	fb13 f30c 	smulbb	r3, r3, ip
 801a1f0:	fb02 3304 	mla	r3, r2, r4, r3
 801a1f4:	b29a      	uxth	r2, r3
 801a1f6:	1c6b      	adds	r3, r5, #1
 801a1f8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a1fc:	1c53      	adds	r3, r2, #1
 801a1fe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a202:	1c4a      	adds	r2, r1, #1
 801a204:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a208:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a20c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a210:	0949      	lsrs	r1, r1, #5
 801a212:	432b      	orrs	r3, r5
 801a214:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a218:	430b      	orrs	r3, r1
 801a21a:	803b      	strh	r3, [r7, #0]
 801a21c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a21e:	3702      	adds	r7, #2
 801a220:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a222:	4413      	add	r3, r2
 801a224:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a226:	9321      	str	r3, [sp, #132]	@ 0x84
 801a228:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a22a:	441a      	add	r2, r3
 801a22c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a22e:	3b01      	subs	r3, #1
 801a230:	9222      	str	r2, [sp, #136]	@ 0x88
 801a232:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a234:	e687      	b.n	8019f46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a236:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a238:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801a23a:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801a23c:	4433      	add	r3, r6
 801a23e:	9321      	str	r3, [sp, #132]	@ 0x84
 801a240:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a242:	441c      	add	r4, r3
 801a244:	9b08      	ldr	r3, [sp, #32]
 801a246:	3b01      	subs	r3, #1
 801a248:	9422      	str	r4, [sp, #136]	@ 0x88
 801a24a:	9308      	str	r3, [sp, #32]
 801a24c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a24e:	3302      	adds	r3, #2
 801a250:	9309      	str	r3, [sp, #36]	@ 0x24
 801a252:	e656      	b.n	8019f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801a254:	d028      	beq.n	801a2a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801a256:	9b08      	ldr	r3, [sp, #32]
 801a258:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801a25a:	3b01      	subs	r3, #1
 801a25c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801a25e:	fb00 5003 	mla	r0, r0, r3, r5
 801a262:	1400      	asrs	r0, r0, #16
 801a264:	f53f ae6a 	bmi.w	8019f3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a268:	3901      	subs	r1, #1
 801a26a:	4288      	cmp	r0, r1
 801a26c:	f6bf ae66 	bge.w	8019f3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a270:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801a272:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801a274:	fb01 0303 	mla	r3, r1, r3, r0
 801a278:	141b      	asrs	r3, r3, #16
 801a27a:	f53f ae5f 	bmi.w	8019f3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a27e:	3a01      	subs	r2, #1
 801a280:	4293      	cmp	r3, r2
 801a282:	f6bf ae5b 	bge.w	8019f3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a286:	9b08      	ldr	r3, [sp, #32]
 801a288:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801a28c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801a290:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a292:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a294:	2b00      	cmp	r3, #0
 801a296:	f300 8082 	bgt.w	801a39e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801a29a:	9b08      	ldr	r3, [sp, #32]
 801a29c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a2a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a2a2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a2a6:	9309      	str	r3, [sp, #36]	@ 0x24
 801a2a8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a2aa:	2b00      	cmp	r3, #0
 801a2ac:	f340 81ef 	ble.w	801a68e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801a2b0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a2b4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a2b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a2ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a2be:	eef0 6a62 	vmov.f32	s13, s5
 801a2c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a2c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a2ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a2ce:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801a2d2:	eef0 6a43 	vmov.f32	s13, s6
 801a2d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a2da:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801a2de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a2e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a2e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a2ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a2ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a2f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a2f6:	ee12 2a90 	vmov	r2, s5
 801a2fa:	eef0 2a47 	vmov.f32	s5, s14
 801a2fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801a302:	ee13 2a10 	vmov	r2, s6
 801a306:	9323      	str	r3, [sp, #140]	@ 0x8c
 801a308:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a30a:	eeb0 3a67 	vmov.f32	s6, s15
 801a30e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a312:	9324      	str	r3, [sp, #144]	@ 0x90
 801a314:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a316:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a318:	3b01      	subs	r3, #1
 801a31a:	9311      	str	r3, [sp, #68]	@ 0x44
 801a31c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a31e:	bf08      	it	eq
 801a320:	4613      	moveq	r3, r2
 801a322:	9308      	str	r3, [sp, #32]
 801a324:	e5df      	b.n	8019ee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a326:	fb08 f505 	mul.w	r5, r8, r5
 801a32a:	fb09 5303 	mla	r3, r9, r3, r5
 801a32e:	e65f      	b.n	8019ff0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801a330:	4681      	mov	r9, r0
 801a332:	e686      	b.n	801a042 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a334:	f1c1 0210 	rsb	r2, r1, #16
 801a338:	4341      	muls	r1, r0
 801a33a:	fb09 1902 	mla	r9, r9, r2, r1
 801a33e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a342:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801a346:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a34a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a34e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801a352:	ea42 0909 	orr.w	r9, r2, r9
 801a356:	fa1f f289 	uxth.w	r2, r9
 801a35a:	e71b      	b.n	801a194 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801a35c:	803a      	strh	r2, [r7, #0]
 801a35e:	e75d      	b.n	801a21c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a360:	f115 0e01 	adds.w	lr, r5, #1
 801a364:	f53f af5a 	bmi.w	801a21c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a368:	4572      	cmp	r2, lr
 801a36a:	f6ff af57 	blt.w	801a21c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a36e:	f110 0e01 	adds.w	lr, r0, #1
 801a372:	f53f af53 	bmi.w	801a21c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a376:	4573      	cmp	r3, lr
 801a378:	f6ff af50 	blt.w	801a21c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a37c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a37e:	b21b      	sxth	r3, r3
 801a380:	b212      	sxth	r2, r2
 801a382:	9502      	str	r5, [sp, #8]
 801a384:	9301      	str	r3, [sp, #4]
 801a386:	9200      	str	r2, [sp, #0]
 801a388:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801a38c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801a390:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801a394:	4639      	mov	r1, r7
 801a396:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801a398:	f7ff fc02 	bl	8019ba0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801a39c:	e73e      	b.n	801a21c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a39e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a3a0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a3a4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a3a6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801a3aa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a3ac:	fa1f fc82 	uxth.w	ip, r2
 801a3b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a3b4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a3b6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801a3ba:	141f      	asrs	r7, r3, #16
 801a3bc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a3be:	141b      	asrs	r3, r3, #16
 801a3c0:	fb01 3707 	mla	r7, r1, r7, r3
 801a3c4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a3c6:	eb03 0a07 	add.w	sl, r3, r7
 801a3ca:	f813 9007 	ldrb.w	r9, [r3, r7]
 801a3ce:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801a3d2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a3d6:	b29b      	uxth	r3, r3
 801a3d8:	2d00      	cmp	r5, #0
 801a3da:	f000 813d 	beq.w	801a658 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801a3de:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801a3e2:	eb0a 0b01 	add.w	fp, sl, r1
 801a3e6:	fa1f fa85 	uxth.w	sl, r5
 801a3ea:	940f      	str	r4, [sp, #60]	@ 0x3c
 801a3ec:	fb0a fc0c 	mul.w	ip, sl, ip
 801a3f0:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801a3f4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801a3f8:	eba0 000c 	sub.w	r0, r0, ip
 801a3fc:	9410      	str	r4, [sp, #64]	@ 0x40
 801a3fe:	fa1f fa8a 	uxth.w	sl, sl
 801a402:	b280      	uxth	r0, r0
 801a404:	eba3 030a 	sub.w	r3, r3, sl
 801a408:	fb08 f000 	mul.w	r0, r8, r0
 801a40c:	b29b      	uxth	r3, r3
 801a40e:	fb09 0303 	mla	r3, r9, r3, r0
 801a412:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801a414:	fb0a 3300 	mla	r3, sl, r0, r3
 801a418:	fb0c 3304 	mla	r3, ip, r4, r3
 801a41c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a420:	2b00      	cmp	r3, #0
 801a422:	f000 810b 	beq.w	801a63c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801a426:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801a428:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801a42c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a42e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801a432:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801a436:	f000 8114 	beq.w	801a662 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801a43a:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801a43e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801a442:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a446:	fb0a fc0c 	mul.w	ip, sl, ip
 801a44a:	fb09 f707 	mul.w	r7, r9, r7
 801a44e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801a452:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801a456:	f107 0b20 	add.w	fp, r7, #32
 801a45a:	44cc      	add	ip, r9
 801a45c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801a460:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a464:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a468:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801a46c:	ea4c 0909 	orr.w	r9, ip, r9
 801a470:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801a474:	8847      	ldrh	r7, [r0, #2]
 801a476:	d019      	beq.n	801a4ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801a478:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801a47c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801a480:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a484:	fb0a fc0c 	mul.w	ip, sl, ip
 801a488:	fb08 f807 	mul.w	r8, r8, r7
 801a48c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801a490:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801a494:	f108 0b20 	add.w	fp, r8, #32
 801a498:	44bc      	add	ip, r7
 801a49a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801a49e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a4a2:	0a3f      	lsrs	r7, r7, #8
 801a4a4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a4a8:	ea4c 0707 	orr.w	r7, ip, r7
 801a4ac:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801a4b0:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801a4b4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801a4b8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a4bc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a4c0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a4c4:	ea4c 0909 	orr.w	r9, ip, r9
 801a4c8:	ea4a 0707 	orr.w	r7, sl, r7
 801a4cc:	2d00      	cmp	r5, #0
 801a4ce:	f000 80ca 	beq.w	801a666 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801a4d2:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801a4d6:	3901      	subs	r1, #1
 801a4d8:	0049      	lsls	r1, r1, #1
 801a4da:	3102      	adds	r1, #2
 801a4dc:	eb00 0c01 	add.w	ip, r0, r1
 801a4e0:	5a41      	ldrh	r1, [r0, r1]
 801a4e2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801a4e4:	28ff      	cmp	r0, #255	@ 0xff
 801a4e6:	d019      	beq.n	801a51c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801a4e8:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801a4ec:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801a4ee:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a4f2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a4f6:	fb04 fa01 	mul.w	sl, r4, r1
 801a4fa:	fb08 f800 	mul.w	r8, r8, r0
 801a4fe:	f10a 0020 	add.w	r0, sl, #32
 801a502:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801a506:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a50a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801a50e:	4441      	add	r1, r8
 801a510:	0a00      	lsrs	r0, r0, #8
 801a512:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801a516:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a51a:	4301      	orrs	r1, r0
 801a51c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801a51e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801a522:	2cff      	cmp	r4, #255	@ 0xff
 801a524:	d01a      	beq.n	801a55c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801a526:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801a52a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a52e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a532:	fb04 fa00 	mul.w	sl, r4, r0
 801a536:	fb08 f80c 	mul.w	r8, r8, ip
 801a53a:	f10a 0c20 	add.w	ip, sl, #32
 801a53e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801a542:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a546:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801a54a:	4440      	add	r0, r8
 801a54c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a550:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801a554:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801a558:	ea40 000c 	orr.w	r0, r0, ip
 801a55c:	fb15 fc02 	smulbb	ip, r5, r2
 801a560:	f1c5 0810 	rsb	r8, r5, #16
 801a564:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a568:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a56c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801a570:	eba8 0802 	sub.w	r8, r8, r2
 801a574:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801a578:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a57c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801a580:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a584:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801a588:	ea4a 0101 	orr.w	r1, sl, r1
 801a58c:	437a      	muls	r2, r7
 801a58e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801a592:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a596:	fb09 2208 	mla	r2, r9, r8, r2
 801a59a:	ea4b 0000 	orr.w	r0, fp, r0
 801a59e:	fb05 2201 	mla	r2, r5, r1, r2
 801a5a2:	fb0c 2200 	mla	r2, ip, r0, r2
 801a5a6:	0d57      	lsrs	r7, r2, #21
 801a5a8:	0952      	lsrs	r2, r2, #5
 801a5aa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a5ae:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a5b2:	433a      	orrs	r2, r7
 801a5b4:	2bff      	cmp	r3, #255	@ 0xff
 801a5b6:	b292      	uxth	r2, r2
 801a5b8:	d102      	bne.n	801a5c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801a5ba:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801a5bc:	29ff      	cmp	r1, #255	@ 0xff
 801a5be:	d063      	beq.n	801a688 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801a5c0:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801a5c2:	1215      	asrs	r5, r2, #8
 801a5c4:	f8be 1000 	ldrh.w	r1, [lr]
 801a5c8:	4343      	muls	r3, r0
 801a5ca:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a5cc:	10cf      	asrs	r7, r1, #3
 801a5ce:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a5d2:	1c58      	adds	r0, r3, #1
 801a5d4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a5d8:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801a5dc:	1208      	asrs	r0, r1, #8
 801a5de:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801a5e2:	00c9      	lsls	r1, r1, #3
 801a5e4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a5e8:	b2db      	uxtb	r3, r3
 801a5ea:	b2c9      	uxtb	r1, r1
 801a5ec:	fb10 f003 	smulbb	r0, r0, r3
 801a5f0:	fb11 f103 	smulbb	r1, r1, r3
 801a5f4:	fb05 0504 	mla	r5, r5, r4, r0
 801a5f8:	10d0      	asrs	r0, r2, #3
 801a5fa:	fb17 f703 	smulbb	r7, r7, r3
 801a5fe:	00d2      	lsls	r2, r2, #3
 801a600:	b2ad      	uxth	r5, r5
 801a602:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801a606:	b2d2      	uxtb	r2, r2
 801a608:	fb00 7004 	mla	r0, r0, r4, r7
 801a60c:	1c6b      	adds	r3, r5, #1
 801a60e:	fb02 1204 	mla	r2, r2, r4, r1
 801a612:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a616:	b292      	uxth	r2, r2
 801a618:	b280      	uxth	r0, r0
 801a61a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a61e:	1c57      	adds	r7, r2, #1
 801a620:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a624:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a628:	433d      	orrs	r5, r7
 801a62a:	1c47      	adds	r7, r0, #1
 801a62c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801a630:	097f      	lsrs	r7, r7, #5
 801a632:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a636:	433d      	orrs	r5, r7
 801a638:	f8ae 5000 	strh.w	r5, [lr]
 801a63c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a63e:	f10e 0e02 	add.w	lr, lr, #2
 801a642:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a644:	4413      	add	r3, r2
 801a646:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a648:	9321      	str	r3, [sp, #132]	@ 0x84
 801a64a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a64c:	441a      	add	r2, r3
 801a64e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a650:	3b01      	subs	r3, #1
 801a652:	9222      	str	r2, [sp, #136]	@ 0x88
 801a654:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a656:	e61c      	b.n	801a292 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a658:	fb08 f000 	mul.w	r0, r8, r0
 801a65c:	fb09 0303 	mla	r3, r9, r3, r0
 801a660:	e6dc      	b.n	801a41c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801a662:	46b9      	mov	r9, r7
 801a664:	e704      	b.n	801a470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801a666:	f1c2 0110 	rsb	r1, r2, #16
 801a66a:	437a      	muls	r2, r7
 801a66c:	fb09 2901 	mla	r9, r9, r1, r2
 801a670:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a674:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801a678:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801a67c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a680:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a684:	4302      	orrs	r2, r0
 801a686:	e795      	b.n	801a5b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801a688:	f8ae 2000 	strh.w	r2, [lr]
 801a68c:	e7d6      	b.n	801a63c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801a68e:	b017      	add	sp, #92	@ 0x5c
 801a690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a694 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a698:	b085      	sub	sp, #20
 801a69a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801a69e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801a6a2:	2800      	cmp	r0, #0
 801a6a4:	9103      	str	r1, [sp, #12]
 801a6a6:	fb00 7406 	mla	r4, r0, r6, r7
 801a6aa:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801a6ae:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801a6b2:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801a6b6:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801a6ba:	eb02 0904 	add.w	r9, r2, r4
 801a6be:	9501      	str	r5, [sp, #4]
 801a6c0:	f2c0 8141 	blt.w	801a946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801a6c4:	4583      	cmp	fp, r0
 801a6c6:	f340 813e 	ble.w	801a946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801a6ca:	2f00      	cmp	r7, #0
 801a6cc:	f2c0 8137 	blt.w	801a93e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801a6d0:	42be      	cmp	r6, r7
 801a6d2:	f340 8134 	ble.w	801a93e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801a6d6:	f812 c004 	ldrb.w	ip, [r2, r4]
 801a6da:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801a6de:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801a6e2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801a6e6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801a6ea:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a6ee:	4355      	muls	r5, r2
 801a6f0:	fb0c f203 	mul.w	r2, ip, r3
 801a6f4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801a6f8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801a6fc:	441d      	add	r5, r3
 801a6fe:	f102 0320 	add.w	r3, r2, #32
 801a702:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a706:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801a70a:	0a1b      	lsrs	r3, r3, #8
 801a70c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a710:	431c      	orrs	r4, r3
 801a712:	1c7b      	adds	r3, r7, #1
 801a714:	f100 811c 	bmi.w	801a950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801a718:	429e      	cmp	r6, r3
 801a71a:	f340 8119 	ble.w	801a950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801a71e:	2900      	cmp	r1, #0
 801a720:	f000 8119 	beq.w	801a956 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801a724:	9a01      	ldr	r2, [sp, #4]
 801a726:	f899 3001 	ldrb.w	r3, [r9, #1]
 801a72a:	8855      	ldrh	r5, [r2, #2]
 801a72c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801a730:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801a734:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a738:	fb08 f802 	mul.w	r8, r8, r2
 801a73c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801a740:	435d      	muls	r5, r3
 801a742:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801a746:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a74a:	44d0      	add	r8, sl
 801a74c:	f105 0a20 	add.w	sl, r5, #32
 801a750:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801a754:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801a758:	0a2d      	lsrs	r5, r5, #8
 801a75a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a75e:	432a      	orrs	r2, r5
 801a760:	3001      	adds	r0, #1
 801a762:	f100 80fe 	bmi.w	801a962 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801a766:	4583      	cmp	fp, r0
 801a768:	f340 80fb 	ble.w	801a962 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801a76c:	f1be 0f00 	cmp.w	lr, #0
 801a770:	f000 80fc 	beq.w	801a96c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801a774:	2f00      	cmp	r7, #0
 801a776:	f2c0 80f1 	blt.w	801a95c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801a77a:	42be      	cmp	r6, r7
 801a77c:	f340 80ee 	ble.w	801a95c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801a780:	9801      	ldr	r0, [sp, #4]
 801a782:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801a786:	f819 5006 	ldrb.w	r5, [r9, r6]
 801a78a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801a78e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a792:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801a796:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801a79a:	fb0a fa00 	mul.w	sl, sl, r0
 801a79e:	fb05 f808 	mul.w	r8, r5, r8
 801a7a2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801a7a6:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801a7aa:	4482      	add	sl, r0
 801a7ac:	f108 0020 	add.w	r0, r8, #32
 801a7b0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801a7b4:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801a7b8:	0a00      	lsrs	r0, r0, #8
 801a7ba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a7be:	ea4b 0b00 	orr.w	fp, fp, r0
 801a7c2:	3701      	adds	r7, #1
 801a7c4:	f100 80d7 	bmi.w	801a976 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801a7c8:	42be      	cmp	r6, r7
 801a7ca:	f340 80d4 	ble.w	801a976 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801a7ce:	2900      	cmp	r1, #0
 801a7d0:	f000 80d4 	beq.w	801a97c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801a7d4:	3601      	adds	r6, #1
 801a7d6:	9801      	ldr	r0, [sp, #4]
 801a7d8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801a7dc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801a7e0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801a7e4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801a7e8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a7ec:	fb09 f906 	mul.w	r9, r9, r6
 801a7f0:	fb07 f800 	mul.w	r8, r7, r0
 801a7f4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801a7f8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801a7fc:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801a800:	44d1      	add	r9, sl
 801a802:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801a806:	f108 0020 	add.w	r0, r8, #32
 801a80a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801a80e:	0a00      	lsrs	r0, r0, #8
 801a810:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a814:	4330      	orrs	r0, r6
 801a816:	b28e      	uxth	r6, r1
 801a818:	fa1f f98e 	uxth.w	r9, lr
 801a81c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801a820:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801a824:	fb06 f809 	mul.w	r8, r6, r9
 801a828:	0136      	lsls	r6, r6, #4
 801a82a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a82e:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801a832:	9601      	str	r6, [sp, #4]
 801a834:	ea4a 0404 	orr.w	r4, sl, r4
 801a838:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801a83c:	fa1f f689 	uxth.w	r6, r9
 801a840:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a844:	fb11 f90e 	smulbb	r9, r1, lr
 801a848:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a84c:	9602      	str	r6, [sp, #8]
 801a84e:	4626      	mov	r6, r4
 801a850:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801a854:	f1ce 0410 	rsb	r4, lr, #16
 801a858:	ea4a 0202 	orr.w	r2, sl, r2
 801a85c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801a860:	1a64      	subs	r4, r4, r1
 801a862:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801a866:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a86a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a86e:	434a      	muls	r2, r1
 801a870:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801a874:	ea4a 0000 	orr.w	r0, sl, r0
 801a878:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801a87c:	fb04 2406 	mla	r4, r4, r6, r2
 801a880:	9903      	ldr	r1, [sp, #12]
 801a882:	fb09 4200 	mla	r2, r9, r0, r4
 801a886:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801a88a:	9801      	ldr	r0, [sp, #4]
 801a88c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801a890:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801a894:	8809      	ldrh	r1, [r1, #0]
 801a896:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801a89a:	ea44 0b0b 	orr.w	fp, r4, fp
 801a89e:	9c02      	ldr	r4, [sp, #8]
 801a8a0:	1b00      	subs	r0, r0, r4
 801a8a2:	9c01      	ldr	r4, [sp, #4]
 801a8a4:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801a8a8:	eba4 0608 	sub.w	r6, r4, r8
 801a8ac:	b280      	uxth	r0, r0
 801a8ae:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801a8b2:	b2b6      	uxth	r6, r6
 801a8b4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801a8b8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a8bc:	4373      	muls	r3, r6
 801a8be:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a8c2:	fb0c 3300 	mla	r3, ip, r0, r3
 801a8c6:	9802      	ldr	r0, [sp, #8]
 801a8c8:	ea42 0e0e 	orr.w	lr, r2, lr
 801a8cc:	fb00 3505 	mla	r5, r0, r5, r3
 801a8d0:	120b      	asrs	r3, r1, #8
 801a8d2:	10c8      	asrs	r0, r1, #3
 801a8d4:	fb08 5707 	mla	r7, r8, r7, r5
 801a8d8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801a8dc:	00c9      	lsls	r1, r1, #3
 801a8de:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801a8e2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801a8e6:	fa1f f28e 	uxth.w	r2, lr
 801a8ea:	b2c9      	uxtb	r1, r1
 801a8ec:	b2ff      	uxtb	r7, r7
 801a8ee:	437b      	muls	r3, r7
 801a8f0:	4378      	muls	r0, r7
 801a8f2:	434f      	muls	r7, r1
 801a8f4:	1c59      	adds	r1, r3, #1
 801a8f6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a8fa:	1213      	asrs	r3, r2, #8
 801a8fc:	f023 0307 	bic.w	r3, r3, #7
 801a900:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a904:	1c41      	adds	r1, r0, #1
 801a906:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801a90a:	10d1      	asrs	r1, r2, #3
 801a90c:	021b      	lsls	r3, r3, #8
 801a90e:	f021 0103 	bic.w	r1, r1, #3
 801a912:	00d2      	lsls	r2, r2, #3
 801a914:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801a918:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801a91c:	00c9      	lsls	r1, r1, #3
 801a91e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a922:	430b      	orrs	r3, r1
 801a924:	1c79      	adds	r1, r7, #1
 801a926:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801a92a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a92e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a932:	431a      	orrs	r2, r3
 801a934:	9b03      	ldr	r3, [sp, #12]
 801a936:	801a      	strh	r2, [r3, #0]
 801a938:	b005      	add	sp, #20
 801a93a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a93e:	f04f 0c00 	mov.w	ip, #0
 801a942:	4664      	mov	r4, ip
 801a944:	e6e5      	b.n	801a712 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801a946:	2300      	movs	r3, #0
 801a948:	469c      	mov	ip, r3
 801a94a:	461a      	mov	r2, r3
 801a94c:	461c      	mov	r4, r3
 801a94e:	e707      	b.n	801a760 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801a950:	2300      	movs	r3, #0
 801a952:	461a      	mov	r2, r3
 801a954:	e704      	b.n	801a760 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801a956:	460b      	mov	r3, r1
 801a958:	460a      	mov	r2, r1
 801a95a:	e701      	b.n	801a760 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801a95c:	2500      	movs	r5, #0
 801a95e:	46ab      	mov	fp, r5
 801a960:	e72f      	b.n	801a7c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801a962:	2700      	movs	r7, #0
 801a964:	463d      	mov	r5, r7
 801a966:	4638      	mov	r0, r7
 801a968:	46bb      	mov	fp, r7
 801a96a:	e754      	b.n	801a816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801a96c:	4677      	mov	r7, lr
 801a96e:	4675      	mov	r5, lr
 801a970:	4670      	mov	r0, lr
 801a972:	46f3      	mov	fp, lr
 801a974:	e74f      	b.n	801a816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801a976:	2700      	movs	r7, #0
 801a978:	4638      	mov	r0, r7
 801a97a:	e74c      	b.n	801a816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801a97c:	460f      	mov	r7, r1
 801a97e:	4608      	mov	r0, r1
 801a980:	e749      	b.n	801a816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801a984 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a988:	b093      	sub	sp, #76	@ 0x4c
 801a98a:	9210      	str	r2, [sp, #64]	@ 0x40
 801a98c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a98e:	9011      	str	r0, [sp, #68]	@ 0x44
 801a990:	910e      	str	r1, [sp, #56]	@ 0x38
 801a992:	6850      	ldr	r0, [r2, #4]
 801a994:	9306      	str	r3, [sp, #24]
 801a996:	6812      	ldr	r2, [r2, #0]
 801a998:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801a99c:	fb00 1303 	mla	r3, r0, r3, r1
 801a9a0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a9a4:	9307      	str	r3, [sp, #28]
 801a9a6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a9a8:	681b      	ldr	r3, [r3, #0]
 801a9aa:	9308      	str	r3, [sp, #32]
 801a9ac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a9ae:	685b      	ldr	r3, [r3, #4]
 801a9b0:	9309      	str	r3, [sp, #36]	@ 0x24
 801a9b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a9b4:	2b00      	cmp	r3, #0
 801a9b6:	dc03      	bgt.n	801a9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a9b8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a9ba:	2b00      	cmp	r3, #0
 801a9bc:	f340 83b6 	ble.w	801b12c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801a9c0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a9c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a9c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a9ca:	1e48      	subs	r0, r1, #1
 801a9cc:	1e55      	subs	r5, r2, #1
 801a9ce:	9b06      	ldr	r3, [sp, #24]
 801a9d0:	2b00      	cmp	r3, #0
 801a9d2:	f340 8165 	ble.w	801aca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a9d6:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801a9d8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a9da:	1436      	asrs	r6, r6, #16
 801a9dc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a9e0:	d406      	bmi.n	801a9f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a9e2:	4286      	cmp	r6, r0
 801a9e4:	da04      	bge.n	801a9f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a9e6:	2b00      	cmp	r3, #0
 801a9e8:	db02      	blt.n	801a9f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a9ea:	42ab      	cmp	r3, r5
 801a9ec:	f2c0 8159 	blt.w	801aca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801a9f0:	3601      	adds	r6, #1
 801a9f2:	f100 8146 	bmi.w	801ac82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801a9f6:	42b1      	cmp	r1, r6
 801a9f8:	f2c0 8143 	blt.w	801ac82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801a9fc:	3301      	adds	r3, #1
 801a9fe:	f100 8140 	bmi.w	801ac82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801aa02:	429a      	cmp	r2, r3
 801aa04:	f2c0 813d 	blt.w	801ac82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801aa08:	9b06      	ldr	r3, [sp, #24]
 801aa0a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801aa0e:	9f07      	ldr	r7, [sp, #28]
 801aa10:	930f      	str	r3, [sp, #60]	@ 0x3c
 801aa12:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801aa14:	2b00      	cmp	r3, #0
 801aa16:	f340 8166 	ble.w	801ace6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801aa1a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801aa1c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801aa1e:	1418      	asrs	r0, r3, #16
 801aa20:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801aa22:	142d      	asrs	r5, r5, #16
 801aa24:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801aa28:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801aa2a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801aa2e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801aa30:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801aa34:	f100 81f0 	bmi.w	801ae18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801aa38:	f102 3eff 	add.w	lr, r2, #4294967295
 801aa3c:	4575      	cmp	r5, lr
 801aa3e:	f280 81eb 	bge.w	801ae18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801aa42:	2800      	cmp	r0, #0
 801aa44:	f2c0 81e8 	blt.w	801ae18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801aa48:	f103 3eff 	add.w	lr, r3, #4294967295
 801aa4c:	4570      	cmp	r0, lr
 801aa4e:	f280 81e3 	bge.w	801ae18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801aa52:	b212      	sxth	r2, r2
 801aa54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aa56:	fa1f fe81 	uxth.w	lr, r1
 801aa5a:	fb00 5002 	mla	r0, r0, r2, r5
 801aa5e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801aa62:	eb03 0a00 	add.w	sl, r3, r0
 801aa66:	f813 9000 	ldrb.w	r9, [r3, r0]
 801aa6a:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801aa6e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801aa72:	b29b      	uxth	r3, r3
 801aa74:	f1bc 0f00 	cmp.w	ip, #0
 801aa78:	f000 817b 	beq.w	801ad72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801aa7c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801aa80:	eb0a 0b02 	add.w	fp, sl, r2
 801aa84:	fa1f fa8c 	uxth.w	sl, ip
 801aa88:	940a      	str	r4, [sp, #40]	@ 0x28
 801aa8a:	fb0a fe0e 	mul.w	lr, sl, lr
 801aa8e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801aa92:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801aa96:	eba5 050e 	sub.w	r5, r5, lr
 801aa9a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801aa9c:	fa1f fa8a 	uxth.w	sl, sl
 801aaa0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801aaa2:	b2ad      	uxth	r5, r5
 801aaa4:	eba3 030a 	sub.w	r3, r3, sl
 801aaa8:	fb08 f505 	mul.w	r5, r8, r5
 801aaac:	b29b      	uxth	r3, r3
 801aaae:	fb09 5303 	mla	r3, r9, r3, r5
 801aab2:	fb0a 3304 	mla	r3, sl, r4, r3
 801aab6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801aab8:	fb0e 3304 	mla	r3, lr, r4, r3
 801aabc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801aac0:	2b00      	cmp	r3, #0
 801aac2:	f000 80d1 	beq.w	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801aac6:	9c08      	ldr	r4, [sp, #32]
 801aac8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801aacc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801aad0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801aad4:	f000 8152 	beq.w	801ad7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801aad8:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801aadc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801aae0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801aae4:	fb0a fe0e 	mul.w	lr, sl, lr
 801aae8:	fb09 f000 	mul.w	r0, r9, r0
 801aaec:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801aaf0:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801aaf4:	f100 0b20 	add.w	fp, r0, #32
 801aaf8:	44ce      	add	lr, r9
 801aafa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801aafe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ab02:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ab06:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801ab0a:	ea4e 0909 	orr.w	r9, lr, r9
 801ab0e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801ab12:	8868      	ldrh	r0, [r5, #2]
 801ab14:	d019      	beq.n	801ab4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ab16:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801ab1a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ab1e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ab22:	fb0a fe0e 	mul.w	lr, sl, lr
 801ab26:	fb08 f800 	mul.w	r8, r8, r0
 801ab2a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801ab2e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801ab32:	f108 0b20 	add.w	fp, r8, #32
 801ab36:	4486      	add	lr, r0
 801ab38:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801ab3c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ab40:	0a00      	lsrs	r0, r0, #8
 801ab42:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ab46:	ea4e 0000 	orr.w	r0, lr, r0
 801ab4a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801ab4e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ab52:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ab56:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ab5a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801ab5e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ab62:	ea4e 0909 	orr.w	r9, lr, r9
 801ab66:	ea4a 0000 	orr.w	r0, sl, r0
 801ab6a:	f1bc 0f00 	cmp.w	ip, #0
 801ab6e:	f000 8107 	beq.w	801ad80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801ab72:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801ab76:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ab78:	3a01      	subs	r2, #1
 801ab7a:	2cff      	cmp	r4, #255	@ 0xff
 801ab7c:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801ab80:	f102 0202 	add.w	r2, r2, #2
 801ab84:	eb05 0e02 	add.w	lr, r5, r2
 801ab88:	5aaa      	ldrh	r2, [r5, r2]
 801ab8a:	d018      	beq.n	801abbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801ab8c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801ab90:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ab94:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ab98:	fb04 fa02 	mul.w	sl, r4, r2
 801ab9c:	fb08 f805 	mul.w	r8, r8, r5
 801aba0:	f10a 0520 	add.w	r5, sl, #32
 801aba4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801aba8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801abac:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801abb0:	4442      	add	r2, r8
 801abb2:	0a2d      	lsrs	r5, r5, #8
 801abb4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801abb8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801abbc:	432a      	orrs	r2, r5
 801abbe:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801abc0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801abc4:	2cff      	cmp	r4, #255	@ 0xff
 801abc6:	d01a      	beq.n	801abfe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801abc8:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801abcc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801abd0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801abd4:	fb04 fa05 	mul.w	sl, r4, r5
 801abd8:	fb08 f80e 	mul.w	r8, r8, lr
 801abdc:	f10a 0e20 	add.w	lr, sl, #32
 801abe0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801abe4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801abe8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801abec:	4445      	add	r5, r8
 801abee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801abf2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801abf6:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801abfa:	ea45 050e 	orr.w	r5, r5, lr
 801abfe:	fb1c fe01 	smulbb	lr, ip, r1
 801ac02:	f1cc 0810 	rsb	r8, ip, #16
 801ac06:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ac0a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ac0e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ac12:	eba8 0801 	sub.w	r8, r8, r1
 801ac16:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ac1a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ac1e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ac22:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ac26:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ac2a:	ea4a 0202 	orr.w	r2, sl, r2
 801ac2e:	4341      	muls	r1, r0
 801ac30:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801ac34:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ac38:	fb09 1108 	mla	r1, r9, r8, r1
 801ac3c:	ea4b 0505 	orr.w	r5, fp, r5
 801ac40:	fb0c 1102 	mla	r1, ip, r2, r1
 801ac44:	fb0e 1e05 	mla	lr, lr, r5, r1
 801ac48:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ac4c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ac50:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ac54:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ac58:	ea42 0e0e 	orr.w	lr, r2, lr
 801ac5c:	fa1f f28e 	uxth.w	r2, lr
 801ac60:	2bff      	cmp	r3, #255	@ 0xff
 801ac62:	f040 80a1 	bne.w	801ada8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801ac66:	803a      	strh	r2, [r7, #0]
 801ac68:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ac6a:	3702      	adds	r7, #2
 801ac6c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801ac6e:	4413      	add	r3, r2
 801ac70:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801ac72:	931d      	str	r3, [sp, #116]	@ 0x74
 801ac74:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ac76:	441a      	add	r2, r3
 801ac78:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ac7a:	3b01      	subs	r3, #1
 801ac7c:	921e      	str	r2, [sp, #120]	@ 0x78
 801ac7e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ac80:	e6c7      	b.n	801aa12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ac82:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ac84:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801ac86:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801ac88:	4433      	add	r3, r6
 801ac8a:	931d      	str	r3, [sp, #116]	@ 0x74
 801ac8c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ac8e:	441c      	add	r4, r3
 801ac90:	9b06      	ldr	r3, [sp, #24]
 801ac92:	3b01      	subs	r3, #1
 801ac94:	941e      	str	r4, [sp, #120]	@ 0x78
 801ac96:	9306      	str	r3, [sp, #24]
 801ac98:	9b07      	ldr	r3, [sp, #28]
 801ac9a:	3302      	adds	r3, #2
 801ac9c:	9307      	str	r3, [sp, #28]
 801ac9e:	e696      	b.n	801a9ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801aca0:	d028      	beq.n	801acf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801aca2:	9b06      	ldr	r3, [sp, #24]
 801aca4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801aca6:	3b01      	subs	r3, #1
 801aca8:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801acaa:	fb00 5003 	mla	r0, r0, r3, r5
 801acae:	1400      	asrs	r0, r0, #16
 801acb0:	f53f aeaa 	bmi.w	801aa08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801acb4:	3901      	subs	r1, #1
 801acb6:	4288      	cmp	r0, r1
 801acb8:	f6bf aea6 	bge.w	801aa08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801acbc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801acbe:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801acc0:	fb01 0303 	mla	r3, r1, r3, r0
 801acc4:	141b      	asrs	r3, r3, #16
 801acc6:	f53f ae9f 	bmi.w	801aa08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801acca:	3a01      	subs	r2, #1
 801accc:	4293      	cmp	r3, r2
 801acce:	f6bf ae9b 	bge.w	801aa08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801acd2:	9b06      	ldr	r3, [sp, #24]
 801acd4:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801acd8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801acdc:	930f      	str	r3, [sp, #60]	@ 0x3c
 801acde:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ace0:	2b00      	cmp	r3, #0
 801ace2:	f300 80b6 	bgt.w	801ae52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801ace6:	9b06      	ldr	r3, [sp, #24]
 801ace8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801acec:	9b07      	ldr	r3, [sp, #28]
 801acee:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801acf2:	9307      	str	r3, [sp, #28]
 801acf4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801acf6:	2b00      	cmp	r3, #0
 801acf8:	f340 8218 	ble.w	801b12c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801acfc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ad00:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ad02:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad0a:	eef0 6a62 	vmov.f32	s13, s5
 801ad0e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ad12:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad1a:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801ad1e:	eef0 6a43 	vmov.f32	s13, s6
 801ad22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad26:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801ad2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad32:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad3a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad42:	ee12 2a90 	vmov	r2, s5
 801ad46:	eef0 2a47 	vmov.f32	s5, s14
 801ad4a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad4e:	ee13 2a10 	vmov	r2, s6
 801ad52:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ad54:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ad56:	eeb0 3a67 	vmov.f32	s6, s15
 801ad5a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad5e:	9320      	str	r3, [sp, #128]	@ 0x80
 801ad60:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ad62:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801ad64:	3b01      	subs	r3, #1
 801ad66:	930e      	str	r3, [sp, #56]	@ 0x38
 801ad68:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ad6a:	bf08      	it	eq
 801ad6c:	4613      	moveq	r3, r2
 801ad6e:	9306      	str	r3, [sp, #24]
 801ad70:	e61f      	b.n	801a9b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801ad72:	fb08 f505 	mul.w	r5, r8, r5
 801ad76:	fb09 5303 	mla	r3, r9, r3, r5
 801ad7a:	e69f      	b.n	801aabc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801ad7c:	4681      	mov	r9, r0
 801ad7e:	e6c6      	b.n	801ab0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801ad80:	f1c1 0210 	rsb	r2, r1, #16
 801ad84:	4341      	muls	r1, r0
 801ad86:	fb09 1902 	mla	r9, r9, r2, r1
 801ad8a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ad8e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801ad92:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ad96:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ad9a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ad9e:	ea42 0909 	orr.w	r9, r2, r9
 801ada2:	fa1f f289 	uxth.w	r2, r9
 801ada6:	e75b      	b.n	801ac60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 801ada8:	f8b7 c000 	ldrh.w	ip, [r7]
 801adac:	43db      	mvns	r3, r3
 801adae:	ea4f 202c 	mov.w	r0, ip, asr #8
 801adb2:	fa5f fe83 	uxtb.w	lr, r3
 801adb6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801adba:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801adbe:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801adc2:	fb00 f00e 	mul.w	r0, r0, lr
 801adc6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801adca:	b2db      	uxtb	r3, r3
 801adcc:	1c41      	adds	r1, r0, #1
 801adce:	fb05 f50e 	mul.w	r5, r5, lr
 801add2:	fb03 f30e 	mul.w	r3, r3, lr
 801add6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801adda:	1211      	asrs	r1, r2, #8
 801addc:	f021 0107 	bic.w	r1, r1, #7
 801ade0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ade4:	48d3      	ldr	r0, [pc, #844]	@ (801b134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801ade6:	b2c9      	uxtb	r1, r1
 801ade8:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801adec:	1c69      	adds	r1, r5, #1
 801adee:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801adf2:	10d1      	asrs	r1, r2, #3
 801adf4:	00d2      	lsls	r2, r2, #3
 801adf6:	f021 0103 	bic.w	r1, r1, #3
 801adfa:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801adfe:	00c9      	lsls	r1, r1, #3
 801ae00:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ae04:	4301      	orrs	r1, r0
 801ae06:	1c58      	adds	r0, r3, #1
 801ae08:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801ae0c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ae10:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ae14:	430a      	orrs	r2, r1
 801ae16:	e726      	b.n	801ac66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801ae18:	f115 0e01 	adds.w	lr, r5, #1
 801ae1c:	f53f af24 	bmi.w	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801ae20:	4572      	cmp	r2, lr
 801ae22:	f6ff af21 	blt.w	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801ae26:	f110 0e01 	adds.w	lr, r0, #1
 801ae2a:	f53f af1d 	bmi.w	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801ae2e:	4573      	cmp	r3, lr
 801ae30:	f6ff af1a 	blt.w	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801ae34:	b21b      	sxth	r3, r3
 801ae36:	b212      	sxth	r2, r2
 801ae38:	9301      	str	r3, [sp, #4]
 801ae3a:	9200      	str	r2, [sp, #0]
 801ae3c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801ae40:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801ae44:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801ae48:	4639      	mov	r1, r7
 801ae4a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801ae4c:	f7ff fc22 	bl	801a694 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801ae50:	e70a      	b.n	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801ae52:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ae54:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ae58:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ae5a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801ae5e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ae60:	fa1f fc82 	uxth.w	ip, r2
 801ae64:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ae68:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ae6a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801ae6e:	141f      	asrs	r7, r3, #16
 801ae70:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ae72:	141b      	asrs	r3, r3, #16
 801ae74:	fb01 3707 	mla	r7, r1, r7, r3
 801ae78:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ae7a:	eb03 0a07 	add.w	sl, r3, r7
 801ae7e:	f813 9007 	ldrb.w	r9, [r3, r7]
 801ae82:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801ae86:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ae8a:	b29b      	uxth	r3, r3
 801ae8c:	2d00      	cmp	r5, #0
 801ae8e:	f000 80fe 	beq.w	801b08e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801ae92:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801ae96:	eb0a 0b01 	add.w	fp, sl, r1
 801ae9a:	fa1f fa85 	uxth.w	sl, r5
 801ae9e:	940c      	str	r4, [sp, #48]	@ 0x30
 801aea0:	fb0a fc0c 	mul.w	ip, sl, ip
 801aea4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801aea8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801aeac:	eba0 000c 	sub.w	r0, r0, ip
 801aeb0:	940d      	str	r4, [sp, #52]	@ 0x34
 801aeb2:	fa1f fa8a 	uxth.w	sl, sl
 801aeb6:	b280      	uxth	r0, r0
 801aeb8:	eba3 030a 	sub.w	r3, r3, sl
 801aebc:	fb08 f000 	mul.w	r0, r8, r0
 801aec0:	b29b      	uxth	r3, r3
 801aec2:	fb09 0303 	mla	r3, r9, r3, r0
 801aec6:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801aec8:	fb0a 3300 	mla	r3, sl, r0, r3
 801aecc:	fb0c 3304 	mla	r3, ip, r4, r3
 801aed0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801aed4:	2b00      	cmp	r3, #0
 801aed6:	f000 80cc 	beq.w	801b072 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801aeda:	9808      	ldr	r0, [sp, #32]
 801aedc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801aee0:	9c08      	ldr	r4, [sp, #32]
 801aee2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801aee6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801aeea:	f000 80d5 	beq.w	801b098 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801aeee:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801aef2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801aef6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801aefa:	fb0a fc0c 	mul.w	ip, sl, ip
 801aefe:	fb09 f707 	mul.w	r7, r9, r7
 801af02:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801af06:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801af0a:	f107 0b20 	add.w	fp, r7, #32
 801af0e:	44cc      	add	ip, r9
 801af10:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801af14:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801af18:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801af1c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801af20:	ea4c 0909 	orr.w	r9, ip, r9
 801af24:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801af28:	8847      	ldrh	r7, [r0, #2]
 801af2a:	d019      	beq.n	801af60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 801af2c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801af30:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801af34:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801af38:	fb0a fc0c 	mul.w	ip, sl, ip
 801af3c:	fb08 f807 	mul.w	r8, r8, r7
 801af40:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801af44:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801af48:	f108 0b20 	add.w	fp, r8, #32
 801af4c:	44bc      	add	ip, r7
 801af4e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801af52:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801af56:	0a3f      	lsrs	r7, r7, #8
 801af58:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801af5c:	ea4c 0707 	orr.w	r7, ip, r7
 801af60:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801af64:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801af68:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801af6c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801af70:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801af74:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801af78:	ea4c 0909 	orr.w	r9, ip, r9
 801af7c:	ea4a 0707 	orr.w	r7, sl, r7
 801af80:	2d00      	cmp	r5, #0
 801af82:	f000 808b 	beq.w	801b09c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801af86:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801af8a:	3901      	subs	r1, #1
 801af8c:	0049      	lsls	r1, r1, #1
 801af8e:	3102      	adds	r1, #2
 801af90:	eb00 0c01 	add.w	ip, r0, r1
 801af94:	5a41      	ldrh	r1, [r0, r1]
 801af96:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801af98:	28ff      	cmp	r0, #255	@ 0xff
 801af9a:	d019      	beq.n	801afd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 801af9c:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801afa0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801afa2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801afa6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801afaa:	fb04 fa01 	mul.w	sl, r4, r1
 801afae:	fb08 f800 	mul.w	r8, r8, r0
 801afb2:	f10a 0020 	add.w	r0, sl, #32
 801afb6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801afba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801afbe:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801afc2:	4441      	add	r1, r8
 801afc4:	0a00      	lsrs	r0, r0, #8
 801afc6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801afca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801afce:	4301      	orrs	r1, r0
 801afd0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801afd2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801afd6:	2cff      	cmp	r4, #255	@ 0xff
 801afd8:	d01a      	beq.n	801b010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 801afda:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801afde:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801afe2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801afe6:	fb04 fa00 	mul.w	sl, r4, r0
 801afea:	fb08 f80c 	mul.w	r8, r8, ip
 801afee:	f10a 0c20 	add.w	ip, sl, #32
 801aff2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801aff6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801affa:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801affe:	4440      	add	r0, r8
 801b000:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b004:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801b008:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801b00c:	ea40 000c 	orr.w	r0, r0, ip
 801b010:	fb15 fc02 	smulbb	ip, r5, r2
 801b014:	f1c5 0810 	rsb	r8, r5, #16
 801b018:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801b01c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801b020:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801b024:	eba8 0802 	sub.w	r8, r8, r2
 801b028:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801b02c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b030:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801b034:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b038:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801b03c:	ea4a 0101 	orr.w	r1, sl, r1
 801b040:	437a      	muls	r2, r7
 801b042:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801b046:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b04a:	fb09 2208 	mla	r2, r9, r8, r2
 801b04e:	ea4b 0000 	orr.w	r0, fp, r0
 801b052:	fb05 2201 	mla	r2, r5, r1, r2
 801b056:	fb0c 2200 	mla	r2, ip, r0, r2
 801b05a:	0d57      	lsrs	r7, r2, #21
 801b05c:	0952      	lsrs	r2, r2, #5
 801b05e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b062:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b066:	433a      	orrs	r2, r7
 801b068:	2bff      	cmp	r3, #255	@ 0xff
 801b06a:	b292      	uxth	r2, r2
 801b06c:	d127      	bne.n	801b0be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 801b06e:	f8ae 2000 	strh.w	r2, [lr]
 801b072:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801b074:	f10e 0e02 	add.w	lr, lr, #2
 801b078:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801b07a:	4413      	add	r3, r2
 801b07c:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801b07e:	931d      	str	r3, [sp, #116]	@ 0x74
 801b080:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b082:	441a      	add	r2, r3
 801b084:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b086:	3b01      	subs	r3, #1
 801b088:	921e      	str	r2, [sp, #120]	@ 0x78
 801b08a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b08c:	e627      	b.n	801acde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b08e:	fb08 f000 	mul.w	r0, r8, r0
 801b092:	fb09 0303 	mla	r3, r9, r3, r0
 801b096:	e71b      	b.n	801aed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 801b098:	46b9      	mov	r9, r7
 801b09a:	e743      	b.n	801af24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 801b09c:	f1c2 0110 	rsb	r1, r2, #16
 801b0a0:	437a      	muls	r2, r7
 801b0a2:	fb09 2901 	mla	r9, r9, r1, r2
 801b0a6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b0aa:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801b0ae:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801b0b2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b0b6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b0ba:	4302      	orrs	r2, r0
 801b0bc:	e7d4      	b.n	801b068 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 801b0be:	f8be 7000 	ldrh.w	r7, [lr]
 801b0c2:	43db      	mvns	r3, r3
 801b0c4:	4c1b      	ldr	r4, [pc, #108]	@ (801b134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801b0c6:	1238      	asrs	r0, r7, #8
 801b0c8:	fa5f fc83 	uxtb.w	ip, r3
 801b0cc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b0d0:	10fd      	asrs	r5, r7, #3
 801b0d2:	00fb      	lsls	r3, r7, #3
 801b0d4:	fb00 f00c 	mul.w	r0, r0, ip
 801b0d8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b0dc:	b2db      	uxtb	r3, r3
 801b0de:	fb05 f10c 	mul.w	r1, r5, ip
 801b0e2:	1c45      	adds	r5, r0, #1
 801b0e4:	fb03 f30c 	mul.w	r3, r3, ip
 801b0e8:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801b0ec:	1215      	asrs	r5, r2, #8
 801b0ee:	f025 0507 	bic.w	r5, r5, #7
 801b0f2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801b0f6:	1c4d      	adds	r5, r1, #1
 801b0f8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801b0fc:	10d1      	asrs	r1, r2, #3
 801b0fe:	b2c0      	uxtb	r0, r0
 801b100:	f021 0103 	bic.w	r1, r1, #3
 801b104:	00d2      	lsls	r2, r2, #3
 801b106:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801b10a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801b10e:	00c9      	lsls	r1, r1, #3
 801b110:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b114:	4308      	orrs	r0, r1
 801b116:	1c59      	adds	r1, r3, #1
 801b118:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b11c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b120:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801b124:	4318      	orrs	r0, r3
 801b126:	f8ae 0000 	strh.w	r0, [lr]
 801b12a:	e7a2      	b.n	801b072 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801b12c:	b013      	add	sp, #76	@ 0x4c
 801b12e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b132:	bf00      	nop
 801b134:	fffff800 	.word	0xfffff800

0801b138 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801b138:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b13c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801b140:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801b144:	fb05 4c03 	mla	ip, r5, r3, r4
 801b148:	2d00      	cmp	r5, #0
 801b14a:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801b14e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801b152:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801b156:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801b15a:	8808      	ldrh	r0, [r1, #0]
 801b15c:	f2c0 80a7 	blt.w	801b2ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801b160:	45aa      	cmp	sl, r5
 801b162:	f340 80a4 	ble.w	801b2ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801b166:	2c00      	cmp	r4, #0
 801b168:	f2c0 809f 	blt.w	801b2aa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801b16c:	42a3      	cmp	r3, r4
 801b16e:	f340 809c 	ble.w	801b2aa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801b172:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801b176:	1c62      	adds	r2, r4, #1
 801b178:	f100 809c 	bmi.w	801b2b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801b17c:	4293      	cmp	r3, r2
 801b17e:	f340 8099 	ble.w	801b2b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801b182:	f1b9 0f00 	cmp.w	r9, #0
 801b186:	f000 8095 	beq.w	801b2b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801b18a:	f8be c002 	ldrh.w	ip, [lr, #2]
 801b18e:	3501      	adds	r5, #1
 801b190:	f100 8094 	bmi.w	801b2bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801b194:	45aa      	cmp	sl, r5
 801b196:	f340 8091 	ble.w	801b2bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801b19a:	2f00      	cmp	r7, #0
 801b19c:	f000 808e 	beq.w	801b2bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801b1a0:	2c00      	cmp	r4, #0
 801b1a2:	f2c0 8089 	blt.w	801b2b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801b1a6:	42a3      	cmp	r3, r4
 801b1a8:	f340 8086 	ble.w	801b2b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801b1ac:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801b1b0:	3401      	adds	r4, #1
 801b1b2:	f100 8086 	bmi.w	801b2c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801b1b6:	42a3      	cmp	r3, r4
 801b1b8:	f340 8083 	ble.w	801b2c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801b1bc:	f1b9 0f00 	cmp.w	r9, #0
 801b1c0:	d07f      	beq.n	801b2c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801b1c2:	3301      	adds	r3, #1
 801b1c4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801b1c8:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801b1cc:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801b1d0:	fb19 fe07 	smulbb	lr, r9, r7
 801b1d4:	f1c7 0210 	rsb	r2, r7, #16
 801b1d8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801b1dc:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801b1e0:	eba2 0209 	sub.w	r2, r2, r9
 801b1e4:	ea44 0808 	orr.w	r8, r4, r8
 801b1e8:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801b1ec:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801b1f0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801b1f4:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801b1f8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801b1fc:	ea44 0c0c 	orr.w	ip, r4, ip
 801b200:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801b204:	fb04 f40c 	mul.w	r4, r4, ip
 801b208:	fb02 4808 	mla	r8, r2, r8, r4
 801b20c:	041a      	lsls	r2, r3, #16
 801b20e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b212:	b2b4      	uxth	r4, r6
 801b214:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b218:	43f6      	mvns	r6, r6
 801b21a:	4313      	orrs	r3, r2
 801b21c:	042a      	lsls	r2, r5, #16
 801b21e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801b222:	b2f6      	uxtb	r6, r6
 801b224:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b228:	fb0e 8303 	mla	r3, lr, r3, r8
 801b22c:	432a      	orrs	r2, r5
 801b22e:	fb07 3202 	mla	r2, r7, r2, r3
 801b232:	10c7      	asrs	r7, r0, #3
 801b234:	0d53      	lsrs	r3, r2, #21
 801b236:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b23a:	0952      	lsrs	r2, r2, #5
 801b23c:	fb17 f706 	smulbb	r7, r7, r6
 801b240:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b244:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b248:	431a      	orrs	r2, r3
 801b24a:	b293      	uxth	r3, r2
 801b24c:	1202      	asrs	r2, r0, #8
 801b24e:	121d      	asrs	r5, r3, #8
 801b250:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b254:	00c0      	lsls	r0, r0, #3
 801b256:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b25a:	fb12 f206 	smulbb	r2, r2, r6
 801b25e:	b2c0      	uxtb	r0, r0
 801b260:	fb05 2504 	mla	r5, r5, r4, r2
 801b264:	10da      	asrs	r2, r3, #3
 801b266:	fb10 f006 	smulbb	r0, r0, r6
 801b26a:	00db      	lsls	r3, r3, #3
 801b26c:	b2ad      	uxth	r5, r5
 801b26e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b272:	b2db      	uxtb	r3, r3
 801b274:	fb02 7204 	mla	r2, r2, r4, r7
 801b278:	fb03 0004 	mla	r0, r3, r4, r0
 801b27c:	1c6b      	adds	r3, r5, #1
 801b27e:	b292      	uxth	r2, r2
 801b280:	b280      	uxth	r0, r0
 801b282:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b286:	1c43      	adds	r3, r0, #1
 801b288:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b28c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b290:	1c50      	adds	r0, r2, #1
 801b292:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801b296:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b29a:	0952      	lsrs	r2, r2, #5
 801b29c:	432b      	orrs	r3, r5
 801b29e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b2a2:	4313      	orrs	r3, r2
 801b2a4:	800b      	strh	r3, [r1, #0]
 801b2a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b2aa:	4680      	mov	r8, r0
 801b2ac:	e763      	b.n	801b176 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801b2ae:	4684      	mov	ip, r0
 801b2b0:	4680      	mov	r8, r0
 801b2b2:	e76c      	b.n	801b18e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801b2b4:	4684      	mov	ip, r0
 801b2b6:	e76a      	b.n	801b18e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801b2b8:	4605      	mov	r5, r0
 801b2ba:	e779      	b.n	801b1b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801b2bc:	4603      	mov	r3, r0
 801b2be:	4605      	mov	r5, r0
 801b2c0:	e782      	b.n	801b1c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801b2c2:	4603      	mov	r3, r0
 801b2c4:	e780      	b.n	801b1c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801b2c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b2c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2ca:	b093      	sub	sp, #76	@ 0x4c
 801b2cc:	461d      	mov	r5, r3
 801b2ce:	9210      	str	r2, [sp, #64]	@ 0x40
 801b2d0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801b2d2:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801b2d6:	910a      	str	r1, [sp, #40]	@ 0x28
 801b2d8:	920b      	str	r2, [sp, #44]	@ 0x2c
 801b2da:	6859      	ldr	r1, [r3, #4]
 801b2dc:	681b      	ldr	r3, [r3, #0]
 801b2de:	9011      	str	r0, [sp, #68]	@ 0x44
 801b2e0:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801b2e4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801b2e8:	fb01 2707 	mla	r7, r1, r7, r2
 801b2ec:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801b2f0:	9307      	str	r3, [sp, #28]
 801b2f2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b2f4:	681b      	ldr	r3, [r3, #0]
 801b2f6:	9309      	str	r3, [sp, #36]	@ 0x24
 801b2f8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b2fa:	43db      	mvns	r3, r3
 801b2fc:	b2db      	uxtb	r3, r3
 801b2fe:	9308      	str	r3, [sp, #32]
 801b300:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b302:	2b00      	cmp	r3, #0
 801b304:	dc03      	bgt.n	801b30e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b306:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b308:	2b00      	cmp	r3, #0
 801b30a:	f340 8205 	ble.w	801b718 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b30e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b310:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b314:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b318:	1e48      	subs	r0, r1, #1
 801b31a:	f102 3cff 	add.w	ip, r2, #4294967295
 801b31e:	2d00      	cmp	r5, #0
 801b320:	f340 80da 	ble.w	801b4d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801b324:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b328:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b32c:	d406      	bmi.n	801b33c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b32e:	4586      	cmp	lr, r0
 801b330:	da04      	bge.n	801b33c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b332:	2b00      	cmp	r3, #0
 801b334:	db02      	blt.n	801b33c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b336:	4563      	cmp	r3, ip
 801b338:	f2c0 80cf 	blt.w	801b4da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b33c:	f11e 0e01 	adds.w	lr, lr, #1
 801b340:	f100 80c1 	bmi.w	801b4c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b344:	4571      	cmp	r1, lr
 801b346:	f2c0 80be 	blt.w	801b4c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b34a:	3301      	adds	r3, #1
 801b34c:	f100 80bb 	bmi.w	801b4c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b350:	429a      	cmp	r2, r3
 801b352:	f2c0 80b8 	blt.w	801b4c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b356:	46a9      	mov	r9, r5
 801b358:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801b35c:	f1b9 0f00 	cmp.w	r9, #0
 801b360:	f340 80d8 	ble.w	801b514 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801b364:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b366:	1421      	asrs	r1, r4, #16
 801b368:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b36c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b370:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b374:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801b378:	f100 8112 	bmi.w	801b5a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801b37c:	f10e 3aff 	add.w	sl, lr, #4294967295
 801b380:	4551      	cmp	r1, sl
 801b382:	f280 810d 	bge.w	801b5a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801b386:	2800      	cmp	r0, #0
 801b388:	f2c0 810a 	blt.w	801b5a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801b38c:	f103 3aff 	add.w	sl, r3, #4294967295
 801b390:	4550      	cmp	r0, sl
 801b392:	f280 8105 	bge.w	801b5a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801b396:	fa0f f38e 	sxth.w	r3, lr
 801b39a:	fb00 1103 	mla	r1, r0, r3, r1
 801b39e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801b3a0:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801b3a4:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801b3a8:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801b3ac:	f1bc 0f00 	cmp.w	ip, #0
 801b3b0:	d007      	beq.n	801b3c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801b3b2:	005b      	lsls	r3, r3, #1
 801b3b4:	eb0a 0003 	add.w	r0, sl, r3
 801b3b8:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801b3bc:	930c      	str	r3, [sp, #48]	@ 0x30
 801b3be:	8843      	ldrh	r3, [r0, #2]
 801b3c0:	930d      	str	r3, [sp, #52]	@ 0x34
 801b3c2:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801b3c6:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801b3ca:	fb12 f30c 	smulbb	r3, r2, ip
 801b3ce:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801b3d2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801b3d6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801b3da:	10db      	asrs	r3, r3, #3
 801b3dc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b3e0:	ea40 000e 	orr.w	r0, r0, lr
 801b3e4:	f1cc 0e10 	rsb	lr, ip, #16
 801b3e8:	ea4a 0101 	orr.w	r1, sl, r1
 801b3ec:	9f08      	ldr	r7, [sp, #32]
 801b3ee:	ebae 0e02 	sub.w	lr, lr, r2
 801b3f2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801b3f6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801b3fa:	4351      	muls	r1, r2
 801b3fc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801b3fe:	fb0e 1e00 	mla	lr, lr, r0, r1
 801b402:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801b404:	0410      	lsls	r0, r2, #16
 801b406:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b40a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801b40e:	4310      	orrs	r0, r2
 801b410:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801b412:	0412      	lsls	r2, r2, #16
 801b414:	fb03 e000 	mla	r0, r3, r0, lr
 801b418:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801b41c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801b420:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b424:	ea42 020e 	orr.w	r2, r2, lr
 801b428:	fb03 0302 	mla	r3, r3, r2, r0
 801b42c:	f8b8 0000 	ldrh.w	r0, [r8]
 801b430:	0d5a      	lsrs	r2, r3, #21
 801b432:	095b      	lsrs	r3, r3, #5
 801b434:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b438:	1201      	asrs	r1, r0, #8
 801b43a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b43e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801b442:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b446:	00c0      	lsls	r0, r0, #3
 801b448:	4313      	orrs	r3, r2
 801b44a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801b44e:	fb11 f107 	smulbb	r1, r1, r7
 801b452:	b2c0      	uxtb	r0, r0
 801b454:	b29b      	uxth	r3, r3
 801b456:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b45a:	fb10 f007 	smulbb	r0, r0, r7
 801b45e:	fb1e fe07 	smulbb	lr, lr, r7
 801b462:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b466:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b46a:	fb0c 1c02 	mla	ip, ip, r2, r1
 801b46e:	10d9      	asrs	r1, r3, #3
 801b470:	00db      	lsls	r3, r3, #3
 801b472:	fa1f fc8c 	uxth.w	ip, ip
 801b476:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b47a:	b2db      	uxtb	r3, r3
 801b47c:	fb01 e102 	mla	r1, r1, r2, lr
 801b480:	fb03 0302 	mla	r3, r3, r2, r0
 801b484:	b289      	uxth	r1, r1
 801b486:	b29a      	uxth	r2, r3
 801b488:	f10c 0301 	add.w	r3, ip, #1
 801b48c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b490:	1c53      	adds	r3, r2, #1
 801b492:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b496:	1c4a      	adds	r2, r1, #1
 801b498:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b49c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b4a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b4a4:	0949      	lsrs	r1, r1, #5
 801b4a6:	ea43 030c 	orr.w	r3, r3, ip
 801b4aa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b4ae:	430b      	orrs	r3, r1
 801b4b0:	f8a8 3000 	strh.w	r3, [r8]
 801b4b4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b4b6:	f108 0802 	add.w	r8, r8, #2
 801b4ba:	f109 39ff 	add.w	r9, r9, #4294967295
 801b4be:	441c      	add	r4, r3
 801b4c0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b4c2:	441e      	add	r6, r3
 801b4c4:	e74a      	b.n	801b35c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b4c6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b4c8:	3d01      	subs	r5, #1
 801b4ca:	441c      	add	r4, r3
 801b4cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b4ce:	441e      	add	r6, r3
 801b4d0:	9b07      	ldr	r3, [sp, #28]
 801b4d2:	3302      	adds	r3, #2
 801b4d4:	9307      	str	r3, [sp, #28]
 801b4d6:	e722      	b.n	801b31e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b4d8:	d022      	beq.n	801b520 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801b4da:	1e6b      	subs	r3, r5, #1
 801b4dc:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801b4de:	fb00 4003 	mla	r0, r0, r3, r4
 801b4e2:	1400      	asrs	r0, r0, #16
 801b4e4:	f53f af37 	bmi.w	801b356 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b4e8:	3901      	subs	r1, #1
 801b4ea:	4288      	cmp	r0, r1
 801b4ec:	f6bf af33 	bge.w	801b356 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b4f0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801b4f2:	fb01 6303 	mla	r3, r1, r3, r6
 801b4f6:	141b      	asrs	r3, r3, #16
 801b4f8:	f53f af2d 	bmi.w	801b356 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b4fc:	3a01      	subs	r2, #1
 801b4fe:	4293      	cmp	r3, r2
 801b500:	f6bf af29 	bge.w	801b356 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b504:	46a8      	mov	r8, r5
 801b506:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801b50a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801b50e:	f1b8 0f00 	cmp.w	r8, #0
 801b512:	dc60      	bgt.n	801b5d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801b514:	9b07      	ldr	r3, [sp, #28]
 801b516:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b51a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b51e:	9307      	str	r3, [sp, #28]
 801b520:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b522:	2b00      	cmp	r3, #0
 801b524:	f340 80f8 	ble.w	801b718 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b528:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b52c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b52e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b532:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b536:	eef0 6a62 	vmov.f32	s13, s5
 801b53a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b53e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b542:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b546:	ee16 4a90 	vmov	r4, s13
 801b54a:	eef0 6a43 	vmov.f32	s13, s6
 801b54e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b552:	ee16 6a90 	vmov	r6, s13
 801b556:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b55a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b55e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b562:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b566:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b56a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b56e:	ee12 2a90 	vmov	r2, s5
 801b572:	eef0 2a47 	vmov.f32	s5, s14
 801b576:	fb92 f3f3 	sdiv	r3, r2, r3
 801b57a:	ee13 2a10 	vmov	r2, s6
 801b57e:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b580:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b582:	eeb0 3a67 	vmov.f32	s6, s15
 801b586:	fb92 f3f3 	sdiv	r3, r2, r3
 801b58a:	9320      	str	r3, [sp, #128]	@ 0x80
 801b58c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b58e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b590:	3b01      	subs	r3, #1
 801b592:	930a      	str	r3, [sp, #40]	@ 0x28
 801b594:	bf08      	it	eq
 801b596:	4615      	moveq	r5, r2
 801b598:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b59a:	bf18      	it	ne
 801b59c:	461d      	movne	r5, r3
 801b59e:	e6af      	b.n	801b300 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b5a0:	f111 0a01 	adds.w	sl, r1, #1
 801b5a4:	d486      	bmi.n	801b4b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b5a6:	45d6      	cmp	lr, sl
 801b5a8:	db84      	blt.n	801b4b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b5aa:	f110 0a01 	adds.w	sl, r0, #1
 801b5ae:	d481      	bmi.n	801b4b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b5b0:	4553      	cmp	r3, sl
 801b5b2:	f6ff af7f 	blt.w	801b4b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b5b6:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801b5b8:	b21b      	sxth	r3, r3
 801b5ba:	9101      	str	r1, [sp, #4]
 801b5bc:	4641      	mov	r1, r8
 801b5be:	9300      	str	r3, [sp, #0]
 801b5c0:	fa0f f38e 	sxth.w	r3, lr
 801b5c4:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801b5c8:	e9cd c704 	strd	ip, r7, [sp, #16]
 801b5cc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b5ce:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b5d0:	f7ff fdb2 	bl	801b138 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801b5d4:	e76e      	b.n	801b4b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b5d6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b5d8:	1430      	asrs	r0, r6, #16
 801b5da:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801b5dc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801b5e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b5e4:	1423      	asrs	r3, r4, #16
 801b5e6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b5ea:	fb01 3000 	mla	r0, r1, r0, r3
 801b5ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b5f0:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801b5f4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801b5f8:	8858      	ldrh	r0, [r3, #2]
 801b5fa:	f1be 0f00 	cmp.w	lr, #0
 801b5fe:	d00b      	beq.n	801b618 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801b600:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801b604:	3901      	subs	r1, #1
 801b606:	0049      	lsls	r1, r1, #1
 801b608:	3102      	adds	r1, #2
 801b60a:	eb03 0b01 	add.w	fp, r3, r1
 801b60e:	5a5b      	ldrh	r3, [r3, r1]
 801b610:	930e      	str	r3, [sp, #56]	@ 0x38
 801b612:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801b616:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b618:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801b61c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801b620:	fb12 f30e 	smulbb	r3, r2, lr
 801b624:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801b628:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801b62c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b630:	10db      	asrs	r3, r3, #3
 801b632:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b636:	ea41 010c 	orr.w	r1, r1, ip
 801b63a:	f1ce 0c10 	rsb	ip, lr, #16
 801b63e:	ea4b 0000 	orr.w	r0, fp, r0
 801b642:	9f08      	ldr	r7, [sp, #32]
 801b644:	ebac 0c02 	sub.w	ip, ip, r2
 801b648:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801b64c:	f108 38ff 	add.w	r8, r8, #4294967295
 801b650:	4350      	muls	r0, r2
 801b652:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801b656:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b658:	fb0c 0c01 	mla	ip, ip, r1, r0
 801b65c:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801b65e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801b662:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801b666:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801b668:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b66c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b670:	0412      	lsls	r2, r2, #16
 801b672:	ea4b 0101 	orr.w	r1, fp, r1
 801b676:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b67a:	fb03 c101 	mla	r1, r3, r1, ip
 801b67e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801b682:	4302      	orrs	r2, r0
 801b684:	fb03 1202 	mla	r2, r3, r2, r1
 801b688:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801b68c:	0952      	lsrs	r2, r2, #5
 801b68e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801b692:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801b696:	f8b9 2000 	ldrh.w	r2, [r9]
 801b69a:	ea4b 0303 	orr.w	r3, fp, r3
 801b69e:	1211      	asrs	r1, r2, #8
 801b6a0:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801b6a4:	b29b      	uxth	r3, r3
 801b6a6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b6aa:	00d2      	lsls	r2, r2, #3
 801b6ac:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801b6b0:	fb11 f107 	smulbb	r1, r1, r7
 801b6b4:	1218      	asrs	r0, r3, #8
 801b6b6:	fb1c fc07 	smulbb	ip, ip, r7
 801b6ba:	b2d2      	uxtb	r2, r2
 801b6bc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b6c0:	fb12 f207 	smulbb	r2, r2, r7
 801b6c4:	fb00 100a 	mla	r0, r0, sl, r1
 801b6c8:	10d9      	asrs	r1, r3, #3
 801b6ca:	00db      	lsls	r3, r3, #3
 801b6cc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b6d0:	b280      	uxth	r0, r0
 801b6d2:	b2db      	uxtb	r3, r3
 801b6d4:	fb01 c10a 	mla	r1, r1, sl, ip
 801b6d8:	fb03 230a 	mla	r3, r3, sl, r2
 801b6dc:	1c42      	adds	r2, r0, #1
 801b6de:	b289      	uxth	r1, r1
 801b6e0:	b29b      	uxth	r3, r3
 801b6e2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b6e6:	f101 0c01 	add.w	ip, r1, #1
 801b6ea:	1c5a      	adds	r2, r3, #1
 801b6ec:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b6f0:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801b6f4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b6f8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b6fa:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b6fe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b702:	441c      	add	r4, r3
 801b704:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801b708:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b70a:	4310      	orrs	r0, r2
 801b70c:	441e      	add	r6, r3
 801b70e:	ea40 000c 	orr.w	r0, r0, ip
 801b712:	f829 0b02 	strh.w	r0, [r9], #2
 801b716:	e6fa      	b.n	801b50e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801b718:	b013      	add	sp, #76	@ 0x4c
 801b71a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b71e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801b71e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b722:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801b726:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801b72a:	fb0e 4703 	mla	r7, lr, r3, r4
 801b72e:	f1be 0f00 	cmp.w	lr, #0
 801b732:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801b736:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801b73a:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801b73e:	8808      	ldrh	r0, [r1, #0]
 801b740:	db60      	blt.n	801b804 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801b742:	45f1      	cmp	r9, lr
 801b744:	dd5e      	ble.n	801b804 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801b746:	2c00      	cmp	r4, #0
 801b748:	db5a      	blt.n	801b800 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801b74a:	42a3      	cmp	r3, r4
 801b74c:	dd58      	ble.n	801b800 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801b74e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801b752:	1c62      	adds	r2, r4, #1
 801b754:	d459      	bmi.n	801b80a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801b756:	4293      	cmp	r3, r2
 801b758:	dd57      	ble.n	801b80a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801b75a:	2d00      	cmp	r5, #0
 801b75c:	d055      	beq.n	801b80a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801b75e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801b762:	f11e 0e01 	adds.w	lr, lr, #1
 801b766:	d454      	bmi.n	801b812 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801b768:	45f1      	cmp	r9, lr
 801b76a:	dd52      	ble.n	801b812 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801b76c:	2e00      	cmp	r6, #0
 801b76e:	d050      	beq.n	801b812 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801b770:	2c00      	cmp	r4, #0
 801b772:	db4c      	blt.n	801b80e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801b774:	42a3      	cmp	r3, r4
 801b776:	dd4a      	ble.n	801b80e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801b778:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801b77c:	3401      	adds	r4, #1
 801b77e:	d405      	bmi.n	801b78c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801b780:	42a3      	cmp	r3, r4
 801b782:	dd03      	ble.n	801b78c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801b784:	b115      	cbz	r5, 801b78c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801b786:	3301      	adds	r3, #1
 801b788:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801b78c:	fb15 f406 	smulbb	r4, r5, r6
 801b790:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801b794:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801b798:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801b79c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b7a0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801b7a4:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801b7a8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801b7ac:	ea43 0c0c 	orr.w	ip, r3, ip
 801b7b0:	f1c6 0310 	rsb	r3, r6, #16
 801b7b4:	ea4e 0707 	orr.w	r7, lr, r7
 801b7b8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801b7bc:	1b5b      	subs	r3, r3, r5
 801b7be:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801b7c2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b7c6:	437d      	muls	r5, r7
 801b7c8:	fb03 5c0c 	mla	ip, r3, ip, r5
 801b7cc:	0403      	lsls	r3, r0, #16
 801b7ce:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b7d2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b7d6:	4318      	orrs	r0, r3
 801b7d8:	0413      	lsls	r3, r2, #16
 801b7da:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b7de:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b7e2:	fb04 c000 	mla	r0, r4, r0, ip
 801b7e6:	4313      	orrs	r3, r2
 801b7e8:	fb06 0003 	mla	r0, r6, r3, r0
 801b7ec:	0d43      	lsrs	r3, r0, #21
 801b7ee:	0940      	lsrs	r0, r0, #5
 801b7f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b7f4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b7f8:	4318      	orrs	r0, r3
 801b7fa:	8008      	strh	r0, [r1, #0]
 801b7fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b800:	4684      	mov	ip, r0
 801b802:	e7a6      	b.n	801b752 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801b804:	4607      	mov	r7, r0
 801b806:	4684      	mov	ip, r0
 801b808:	e7ab      	b.n	801b762 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801b80a:	4607      	mov	r7, r0
 801b80c:	e7a9      	b.n	801b762 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801b80e:	4602      	mov	r2, r0
 801b810:	e7b4      	b.n	801b77c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801b812:	4602      	mov	r2, r0
 801b814:	e7ba      	b.n	801b78c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801b816 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b816:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b81a:	b08f      	sub	sp, #60	@ 0x3c
 801b81c:	461d      	mov	r5, r3
 801b81e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801b820:	9107      	str	r1, [sp, #28]
 801b822:	920c      	str	r2, [sp, #48]	@ 0x30
 801b824:	6859      	ldr	r1, [r3, #4]
 801b826:	681b      	ldr	r3, [r3, #0]
 801b828:	900d      	str	r0, [sp, #52]	@ 0x34
 801b82a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801b82e:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801b832:	fb01 2707 	mla	r7, r1, r7, r2
 801b836:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801b83a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b83c:	f8d3 8000 	ldr.w	r8, [r3]
 801b840:	9b07      	ldr	r3, [sp, #28]
 801b842:	2b00      	cmp	r3, #0
 801b844:	dc03      	bgt.n	801b84e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b846:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b848:	2b00      	cmp	r3, #0
 801b84a:	f340 8182 	ble.w	801bb52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801b84e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b850:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b854:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b858:	1e48      	subs	r0, r1, #1
 801b85a:	f102 3cff 	add.w	ip, r2, #4294967295
 801b85e:	2d00      	cmp	r5, #0
 801b860:	f340 809b 	ble.w	801b99a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801b864:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b868:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b86c:	d406      	bmi.n	801b87c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b86e:	4586      	cmp	lr, r0
 801b870:	da04      	bge.n	801b87c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b872:	2b00      	cmp	r3, #0
 801b874:	db02      	blt.n	801b87c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b876:	4563      	cmp	r3, ip
 801b878:	f2c0 8090 	blt.w	801b99c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b87c:	f11e 0e01 	adds.w	lr, lr, #1
 801b880:	f100 8084 	bmi.w	801b98c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801b884:	4571      	cmp	r1, lr
 801b886:	f2c0 8081 	blt.w	801b98c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801b88a:	3301      	adds	r3, #1
 801b88c:	d47e      	bmi.n	801b98c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801b88e:	429a      	cmp	r2, r3
 801b890:	db7c      	blt.n	801b98c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801b892:	46aa      	mov	sl, r5
 801b894:	46b9      	mov	r9, r7
 801b896:	f1ba 0f00 	cmp.w	sl, #0
 801b89a:	f340 8099 	ble.w	801b9d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801b89e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b8a0:	1421      	asrs	r1, r4, #16
 801b8a2:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b8a6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b8aa:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b8ae:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801b8b2:	f100 80d1 	bmi.w	801ba58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b8b6:	f10e 3bff 	add.w	fp, lr, #4294967295
 801b8ba:	4559      	cmp	r1, fp
 801b8bc:	f280 80cc 	bge.w	801ba58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b8c0:	2800      	cmp	r0, #0
 801b8c2:	f2c0 80c9 	blt.w	801ba58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b8c6:	f103 3bff 	add.w	fp, r3, #4294967295
 801b8ca:	4558      	cmp	r0, fp
 801b8cc:	f280 80c4 	bge.w	801ba58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b8d0:	fa0f fe8e 	sxth.w	lr, lr
 801b8d4:	fb00 110e 	mla	r1, r0, lr, r1
 801b8d8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801b8dc:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801b8e0:	8841      	ldrh	r1, [r0, #2]
 801b8e2:	f1bc 0f00 	cmp.w	ip, #0
 801b8e6:	d00b      	beq.n	801b900 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801b8e8:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801b8ec:	3b01      	subs	r3, #1
 801b8ee:	005b      	lsls	r3, r3, #1
 801b8f0:	3302      	adds	r3, #2
 801b8f2:	eb00 0e03 	add.w	lr, r0, r3
 801b8f6:	5ac3      	ldrh	r3, [r0, r3]
 801b8f8:	9308      	str	r3, [sp, #32]
 801b8fa:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801b8fe:	9309      	str	r3, [sp, #36]	@ 0x24
 801b900:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801b904:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801b908:	fb12 f30c 	smulbb	r3, r2, ip
 801b90c:	f1cc 0e10 	rsb	lr, ip, #16
 801b910:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801b914:	10db      	asrs	r3, r3, #3
 801b916:	ebae 0e02 	sub.w	lr, lr, r2
 801b91a:	ea40 000b 	orr.w	r0, r0, fp
 801b91e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801b922:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801b926:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801b92a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b92e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801b932:	ea4b 0101 	orr.w	r1, fp, r1
 801b936:	4351      	muls	r1, r2
 801b938:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b93a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801b93e:	0410      	lsls	r0, r2, #16
 801b940:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b944:	9908      	ldr	r1, [sp, #32]
 801b946:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801b94a:	4310      	orrs	r0, r2
 801b94c:	9a08      	ldr	r2, [sp, #32]
 801b94e:	0412      	lsls	r2, r2, #16
 801b950:	fb03 e000 	mla	r0, r3, r0, lr
 801b954:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801b958:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801b95c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b960:	ea42 020e 	orr.w	r2, r2, lr
 801b964:	fb03 0302 	mla	r3, r3, r2, r0
 801b968:	0d5a      	lsrs	r2, r3, #21
 801b96a:	095b      	lsrs	r3, r3, #5
 801b96c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b970:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b974:	4313      	orrs	r3, r2
 801b976:	f8a9 3000 	strh.w	r3, [r9]
 801b97a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b97c:	f109 0902 	add.w	r9, r9, #2
 801b980:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b984:	441c      	add	r4, r3
 801b986:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b988:	441e      	add	r6, r3
 801b98a:	e784      	b.n	801b896 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b98c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b98e:	3d01      	subs	r5, #1
 801b990:	3702      	adds	r7, #2
 801b992:	441c      	add	r4, r3
 801b994:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b996:	441e      	add	r6, r3
 801b998:	e761      	b.n	801b85e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b99a:	d01d      	beq.n	801b9d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801b99c:	1e6b      	subs	r3, r5, #1
 801b99e:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801b9a0:	fb00 4003 	mla	r0, r0, r3, r4
 801b9a4:	1400      	asrs	r0, r0, #16
 801b9a6:	f53f af74 	bmi.w	801b892 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b9aa:	3901      	subs	r1, #1
 801b9ac:	4288      	cmp	r0, r1
 801b9ae:	f6bf af70 	bge.w	801b892 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b9b2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801b9b4:	fb01 6303 	mla	r3, r1, r3, r6
 801b9b8:	141b      	asrs	r3, r3, #16
 801b9ba:	f53f af6a 	bmi.w	801b892 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b9be:	3a01      	subs	r2, #1
 801b9c0:	4293      	cmp	r3, r2
 801b9c2:	f6bf af66 	bge.w	801b892 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b9c6:	46a9      	mov	r9, r5
 801b9c8:	46ba      	mov	sl, r7
 801b9ca:	f1b9 0f00 	cmp.w	r9, #0
 801b9ce:	dc5b      	bgt.n	801ba88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801b9d0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b9d4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801b9d8:	9b07      	ldr	r3, [sp, #28]
 801b9da:	2b00      	cmp	r3, #0
 801b9dc:	f340 80b9 	ble.w	801bb52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801b9e0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b9e4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b9e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b9ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b9ee:	eef0 6a62 	vmov.f32	s13, s5
 801b9f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b9f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b9fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b9fe:	ee16 4a90 	vmov	r4, s13
 801ba02:	eef0 6a43 	vmov.f32	s13, s6
 801ba06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba0a:	ee16 6a90 	vmov	r6, s13
 801ba0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba12:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba16:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba26:	ee12 2a90 	vmov	r2, s5
 801ba2a:	eef0 2a47 	vmov.f32	s5, s14
 801ba2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba32:	ee13 2a10 	vmov	r2, s6
 801ba36:	931b      	str	r3, [sp, #108]	@ 0x6c
 801ba38:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ba3a:	eeb0 3a67 	vmov.f32	s6, s15
 801ba3e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba42:	931c      	str	r3, [sp, #112]	@ 0x70
 801ba44:	9b07      	ldr	r3, [sp, #28]
 801ba46:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ba48:	3b01      	subs	r3, #1
 801ba4a:	9307      	str	r3, [sp, #28]
 801ba4c:	bf08      	it	eq
 801ba4e:	4615      	moveq	r5, r2
 801ba50:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ba52:	bf18      	it	ne
 801ba54:	461d      	movne	r5, r3
 801ba56:	e6f3      	b.n	801b840 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ba58:	f111 0b01 	adds.w	fp, r1, #1
 801ba5c:	d48d      	bmi.n	801b97a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ba5e:	45de      	cmp	lr, fp
 801ba60:	db8b      	blt.n	801b97a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ba62:	f110 0b01 	adds.w	fp, r0, #1
 801ba66:	d488      	bmi.n	801b97a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ba68:	455b      	cmp	r3, fp
 801ba6a:	db86      	blt.n	801b97a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ba6c:	b21b      	sxth	r3, r3
 801ba6e:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801ba72:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801ba76:	9300      	str	r3, [sp, #0]
 801ba78:	4642      	mov	r2, r8
 801ba7a:	fa0f f38e 	sxth.w	r3, lr
 801ba7e:	4649      	mov	r1, r9
 801ba80:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801ba82:	f7ff fe4c 	bl	801b71e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801ba86:	e778      	b.n	801b97a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ba88:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ba8a:	1420      	asrs	r0, r4, #16
 801ba8c:	1431      	asrs	r1, r6, #16
 801ba8e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801ba92:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ba96:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ba9a:	fb03 0101 	mla	r1, r3, r1, r0
 801ba9e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801baa2:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801baa6:	8841      	ldrh	r1, [r0, #2]
 801baa8:	f1be 0f00 	cmp.w	lr, #0
 801baac:	d00b      	beq.n	801bac6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801baae:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801bab2:	3b01      	subs	r3, #1
 801bab4:	005b      	lsls	r3, r3, #1
 801bab6:	3302      	adds	r3, #2
 801bab8:	eb00 0b03 	add.w	fp, r0, r3
 801babc:	5ac3      	ldrh	r3, [r0, r3]
 801babe:	930a      	str	r3, [sp, #40]	@ 0x28
 801bac0:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801bac4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801bac6:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801baca:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801bace:	fb12 f30e 	smulbb	r3, r2, lr
 801bad2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801bad6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801bada:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801bade:	10db      	asrs	r3, r3, #3
 801bae0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801bae4:	ea40 000c 	orr.w	r0, r0, ip
 801bae8:	f1ce 0c10 	rsb	ip, lr, #16
 801baec:	ea4b 0101 	orr.w	r1, fp, r1
 801baf0:	f109 39ff 	add.w	r9, r9, #4294967295
 801baf4:	ebac 0c02 	sub.w	ip, ip, r2
 801baf8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801bafc:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801bb00:	4351      	muls	r1, r2
 801bb02:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bb04:	fb0c 1c00 	mla	ip, ip, r0, r1
 801bb08:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801bb0a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801bb0e:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801bb12:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801bb14:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801bb18:	0412      	lsls	r2, r2, #16
 801bb1a:	ea4b 0000 	orr.w	r0, fp, r0
 801bb1e:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801bb22:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801bb26:	fb03 c000 	mla	r0, r3, r0, ip
 801bb2a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801bb2e:	ea42 0b0b 	orr.w	fp, r2, fp
 801bb32:	fb03 000b 	mla	r0, r3, fp, r0
 801bb36:	0d43      	lsrs	r3, r0, #21
 801bb38:	0940      	lsrs	r0, r0, #5
 801bb3a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bb3e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801bb42:	4318      	orrs	r0, r3
 801bb44:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801bb46:	441c      	add	r4, r3
 801bb48:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bb4a:	f82a 0b02 	strh.w	r0, [sl], #2
 801bb4e:	441e      	add	r6, r3
 801bb50:	e73b      	b.n	801b9ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801bb52:	b00f      	add	sp, #60	@ 0x3c
 801bb54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bb58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801bb58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb5c:	b085      	sub	sp, #20
 801bb5e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801bb62:	9102      	str	r1, [sp, #8]
 801bb64:	2c00      	cmp	r4, #0
 801bb66:	fb04 7103 	mla	r1, r4, r3, r7
 801bb6a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801bb6e:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801bb72:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801bb76:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801bb7a:	f2c0 811b 	blt.w	801bdb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801bb7e:	45a6      	cmp	lr, r4
 801bb80:	f340 8118 	ble.w	801bdb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801bb84:	2f00      	cmp	r7, #0
 801bb86:	f2c0 8113 	blt.w	801bdb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801bb8a:	42bb      	cmp	r3, r7
 801bb8c:	f340 8110 	ble.w	801bdb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801bb90:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801bb94:	1c7a      	adds	r2, r7, #1
 801bb96:	f100 8110 	bmi.w	801bdba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801bb9a:	4293      	cmp	r3, r2
 801bb9c:	f340 810d 	ble.w	801bdba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801bba0:	2e00      	cmp	r6, #0
 801bba2:	f000 810c 	beq.w	801bdbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801bba6:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801bbaa:	3401      	adds	r4, #1
 801bbac:	f100 810b 	bmi.w	801bdc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801bbb0:	45a6      	cmp	lr, r4
 801bbb2:	f340 8108 	ble.w	801bdc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801bbb6:	2800      	cmp	r0, #0
 801bbb8:	f000 8108 	beq.w	801bdcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801bbbc:	2f00      	cmp	r7, #0
 801bbbe:	f2c0 8100 	blt.w	801bdc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801bbc2:	42bb      	cmp	r3, r7
 801bbc4:	f340 80fd 	ble.w	801bdc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801bbc8:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801bbcc:	3701      	adds	r7, #1
 801bbce:	f100 8100 	bmi.w	801bdd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801bbd2:	42bb      	cmp	r3, r7
 801bbd4:	f340 80fd 	ble.w	801bdd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801bbd8:	2e00      	cmp	r6, #0
 801bbda:	f000 80fc 	beq.w	801bdd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801bbde:	3301      	adds	r3, #1
 801bbe0:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801bbe4:	b2b6      	uxth	r6, r6
 801bbe6:	b280      	uxth	r0, r0
 801bbe8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801bbec:	fb00 fe06 	mul.w	lr, r0, r6
 801bbf0:	0136      	lsls	r6, r6, #4
 801bbf2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801bbf6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801bbfa:	eba6 070e 	sub.w	r7, r6, lr
 801bbfe:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801bc02:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801bc06:	b280      	uxth	r0, r0
 801bc08:	b2bf      	uxth	r7, r7
 801bc0a:	1a1b      	subs	r3, r3, r0
 801bc0c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801bc10:	fb0a f607 	mul.w	r6, sl, r7
 801bc14:	b29b      	uxth	r3, r3
 801bc16:	fb0b 6603 	mla	r6, fp, r3, r6
 801bc1a:	fb00 6609 	mla	r6, r0, r9, r6
 801bc1e:	fb0e 6608 	mla	r6, lr, r8, r6
 801bc22:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801bc26:	9600      	str	r6, [sp, #0]
 801bc28:	2e00      	cmp	r6, #0
 801bc2a:	f000 80be 	beq.w	801bdaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801bc2e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801bc32:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801bc36:	9e02      	ldr	r6, [sp, #8]
 801bc38:	fb0b fc0c 	mul.w	ip, fp, ip
 801bc3c:	fb0b f505 	mul.w	r5, fp, r5
 801bc40:	8836      	ldrh	r6, [r6, #0]
 801bc42:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801bc46:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bc4a:	9501      	str	r5, [sp, #4]
 801bc4c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801bc50:	44dc      	add	ip, fp
 801bc52:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc56:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801bc5a:	9503      	str	r5, [sp, #12]
 801bc5c:	9d01      	ldr	r5, [sp, #4]
 801bc5e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801bc62:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801bc66:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801bc6a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bc6e:	fb0a fc0c 	mul.w	ip, sl, ip
 801bc72:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801bc76:	fb0a fa01 	mul.w	sl, sl, r1
 801bc7a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801bc7e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bc82:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801bc86:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bc8a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801bc8e:	4465      	add	r5, ip
 801bc90:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bc94:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801bc98:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc9c:	fb09 fc0c 	mul.w	ip, r9, ip
 801bca0:	0a2d      	lsrs	r5, r5, #8
 801bca2:	fb09 f904 	mul.w	r9, r9, r4
 801bca6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bcaa:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801bcae:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bcb2:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801bcb6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bcba:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801bcbe:	437d      	muls	r5, r7
 801bcc0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801bcc4:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801bcc8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801bccc:	4461      	add	r1, ip
 801bcce:	fb08 f404 	mul.w	r4, r8, r4
 801bcd2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bcd6:	fb08 f802 	mul.w	r8, r8, r2
 801bcda:	0a09      	lsrs	r1, r1, #8
 801bcdc:	0a22      	lsrs	r2, r4, #8
 801bcde:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801bce2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801bce6:	fb07 f70a 	mul.w	r7, r7, sl
 801bcea:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801bcee:	4414      	add	r4, r2
 801bcf0:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801bcf4:	0a24      	lsrs	r4, r4, #8
 801bcf6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801bcfa:	9a03      	ldr	r2, [sp, #12]
 801bcfc:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801bd00:	fb02 5503 	mla	r5, r2, r3, r5
 801bd04:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801bd08:	9a00      	ldr	r2, [sp, #0]
 801bd0a:	fb04 540e 	mla	r4, r4, lr, r5
 801bd0e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801bd12:	1235      	asrs	r5, r6, #8
 801bd14:	fb01 4100 	mla	r1, r1, r0, r4
 801bd18:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801bd1c:	0a09      	lsrs	r1, r1, #8
 801bd1e:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801bd22:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801bd26:	fb03 7101 	mla	r1, r3, r1, r7
 801bd2a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801bd2e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801bd32:	fb00 e101 	mla	r1, r0, r1, lr
 801bd36:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801bd3a:	b287      	uxth	r7, r0
 801bd3c:	0a09      	lsrs	r1, r1, #8
 801bd3e:	437a      	muls	r2, r7
 801bd40:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bd44:	1c53      	adds	r3, r2, #1
 801bd46:	4321      	orrs	r1, r4
 801bd48:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bd4c:	0c0a      	lsrs	r2, r1, #16
 801bd4e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801bd52:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801bd56:	b2c8      	uxtb	r0, r1
 801bd58:	fb12 f207 	smulbb	r2, r2, r7
 801bd5c:	fb14 f407 	smulbb	r4, r4, r7
 801bd60:	b2db      	uxtb	r3, r3
 801bd62:	fb10 f007 	smulbb	r0, r0, r7
 801bd66:	fb05 2503 	mla	r5, r5, r3, r2
 801bd6a:	10f2      	asrs	r2, r6, #3
 801bd6c:	00f6      	lsls	r6, r6, #3
 801bd6e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801bd72:	b2ad      	uxth	r5, r5
 801bd74:	b2f6      	uxtb	r6, r6
 801bd76:	fb02 4203 	mla	r2, r2, r3, r4
 801bd7a:	fb06 0303 	mla	r3, r6, r3, r0
 801bd7e:	b294      	uxth	r4, r2
 801bd80:	b299      	uxth	r1, r3
 801bd82:	1c6b      	adds	r3, r5, #1
 801bd84:	1c62      	adds	r2, r4, #1
 801bd86:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bd8a:	1c4b      	adds	r3, r1, #1
 801bd8c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801bd90:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bd94:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801bd98:	0952      	lsrs	r2, r2, #5
 801bd9a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bd9e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bda2:	432b      	orrs	r3, r5
 801bda4:	4313      	orrs	r3, r2
 801bda6:	9a02      	ldr	r2, [sp, #8]
 801bda8:	8013      	strh	r3, [r2, #0]
 801bdaa:	b005      	add	sp, #20
 801bdac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bdb0:	2500      	movs	r5, #0
 801bdb2:	e6ef      	b.n	801bb94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801bdb4:	2100      	movs	r1, #0
 801bdb6:	460d      	mov	r5, r1
 801bdb8:	e6f7      	b.n	801bbaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801bdba:	2100      	movs	r1, #0
 801bdbc:	e6f5      	b.n	801bbaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801bdbe:	4631      	mov	r1, r6
 801bdc0:	e6f3      	b.n	801bbaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801bdc2:	2400      	movs	r4, #0
 801bdc4:	e702      	b.n	801bbcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801bdc6:	2200      	movs	r2, #0
 801bdc8:	4614      	mov	r4, r2
 801bdca:	e70b      	b.n	801bbe4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801bdcc:	4602      	mov	r2, r0
 801bdce:	4604      	mov	r4, r0
 801bdd0:	e708      	b.n	801bbe4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801bdd2:	2200      	movs	r2, #0
 801bdd4:	e706      	b.n	801bbe4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801bdd6:	4632      	mov	r2, r6
 801bdd8:	e704      	b.n	801bbe4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801bdda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bdda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdde:	b09d      	sub	sp, #116	@ 0x74
 801bde0:	9219      	str	r2, [sp, #100]	@ 0x64
 801bde2:	9307      	str	r3, [sp, #28]
 801bde4:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801bde6:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801bdea:	901b      	str	r0, [sp, #108]	@ 0x6c
 801bdec:	931a      	str	r3, [sp, #104]	@ 0x68
 801bdee:	6850      	ldr	r0, [r2, #4]
 801bdf0:	9117      	str	r1, [sp, #92]	@ 0x5c
 801bdf2:	6812      	ldr	r2, [r2, #0]
 801bdf4:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801bdf8:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801bdfc:	fb00 1303 	mla	r3, r0, r3, r1
 801be00:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801be04:	930a      	str	r3, [sp, #40]	@ 0x28
 801be06:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801be08:	681b      	ldr	r3, [r3, #0]
 801be0a:	9310      	str	r3, [sp, #64]	@ 0x40
 801be0c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801be10:	930b      	str	r3, [sp, #44]	@ 0x2c
 801be12:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801be14:	2b00      	cmp	r3, #0
 801be16:	dc03      	bgt.n	801be20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801be18:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801be1a:	2b00      	cmp	r3, #0
 801be1c:	f340 8375 	ble.w	801c50a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801be20:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801be22:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801be26:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801be2a:	1e48      	subs	r0, r1, #1
 801be2c:	1e57      	subs	r7, r2, #1
 801be2e:	9b07      	ldr	r3, [sp, #28]
 801be30:	2b00      	cmp	r3, #0
 801be32:	f340 818e 	ble.w	801c152 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801be36:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801be3a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801be3e:	d406      	bmi.n	801be4e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801be40:	4584      	cmp	ip, r0
 801be42:	da04      	bge.n	801be4e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801be44:	2b00      	cmp	r3, #0
 801be46:	db02      	blt.n	801be4e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801be48:	42bb      	cmp	r3, r7
 801be4a:	f2c0 8183 	blt.w	801c154 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801be4e:	f11c 0c01 	adds.w	ip, ip, #1
 801be52:	f100 8173 	bmi.w	801c13c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801be56:	4561      	cmp	r1, ip
 801be58:	f2c0 8170 	blt.w	801c13c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801be5c:	3301      	adds	r3, #1
 801be5e:	f100 816d 	bmi.w	801c13c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801be62:	429a      	cmp	r2, r3
 801be64:	f2c0 816a 	blt.w	801c13c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801be68:	9b07      	ldr	r3, [sp, #28]
 801be6a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801be6c:	9318      	str	r3, [sp, #96]	@ 0x60
 801be6e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801be70:	2b00      	cmp	r3, #0
 801be72:	f340 818c 	ble.w	801c18e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801be76:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801be78:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801be7c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801be7e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801be82:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801be86:	1422      	asrs	r2, r4, #16
 801be88:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801be8c:	689b      	ldr	r3, [r3, #8]
 801be8e:	f100 81cd 	bmi.w	801c22c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801be92:	f103 38ff 	add.w	r8, r3, #4294967295
 801be96:	4542      	cmp	r2, r8
 801be98:	f280 81c8 	bge.w	801c22c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801be9c:	f1bc 0f00 	cmp.w	ip, #0
 801bea0:	f2c0 81c4 	blt.w	801c22c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801bea4:	f10e 38ff 	add.w	r8, lr, #4294967295
 801bea8:	45c4      	cmp	ip, r8
 801beaa:	f280 81bf 	bge.w	801c22c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801beae:	b21b      	sxth	r3, r3
 801beb0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801beb2:	fb0c 2203 	mla	r2, ip, r3, r2
 801beb6:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801beba:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801bebe:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801bec2:	2800      	cmp	r0, #0
 801bec4:	f000 81a9 	beq.w	801c21a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801bec8:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801becc:	950c      	str	r5, [sp, #48]	@ 0x30
 801bece:	0e2d      	lsrs	r5, r5, #24
 801bed0:	9513      	str	r5, [sp, #76]	@ 0x4c
 801bed2:	b181      	cbz	r1, 801bef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801bed4:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801bed8:	3b01      	subs	r3, #1
 801beda:	009b      	lsls	r3, r3, #2
 801bedc:	3304      	adds	r3, #4
 801bede:	eb08 0c03 	add.w	ip, r8, r3
 801bee2:	f858 3003 	ldr.w	r3, [r8, r3]
 801bee6:	9308      	str	r3, [sp, #32]
 801bee8:	0e1b      	lsrs	r3, r3, #24
 801beea:	9311      	str	r3, [sp, #68]	@ 0x44
 801beec:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801bef0:	930d      	str	r3, [sp, #52]	@ 0x34
 801bef2:	0e1b      	lsrs	r3, r3, #24
 801bef4:	9314      	str	r3, [sp, #80]	@ 0x50
 801bef6:	b280      	uxth	r0, r0
 801bef8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801befa:	b289      	uxth	r1, r1
 801befc:	fb00 f901 	mul.w	r9, r0, r1
 801bf00:	0100      	lsls	r0, r0, #4
 801bf02:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801bf06:	eba0 0809 	sub.w	r8, r0, r9
 801bf0a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801bf0e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bf10:	b289      	uxth	r1, r1
 801bf12:	fa1f f888 	uxth.w	r8, r8
 801bf16:	1a5b      	subs	r3, r3, r1
 801bf18:	fb08 f000 	mul.w	r0, r8, r0
 801bf1c:	b29b      	uxth	r3, r3
 801bf1e:	fb03 000e 	mla	r0, r3, lr, r0
 801bf22:	fb01 0005 	mla	r0, r1, r5, r0
 801bf26:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801bf28:	fb09 0005 	mla	r0, r9, r5, r0
 801bf2c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801bf30:	2800      	cmp	r0, #0
 801bf32:	f000 80fa 	beq.w	801c12a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801bf36:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801bf3a:	d01b      	beq.n	801bf74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801bf3c:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801bf40:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801bf44:	fb0e fa0a 	mul.w	sl, lr, sl
 801bf48:	fb0e fe02 	mul.w	lr, lr, r2
 801bf4c:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801bf50:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bf54:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801bf58:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801bf5c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bf60:	4452      	add	r2, sl
 801bf62:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf66:	0a12      	lsrs	r2, r2, #8
 801bf68:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bf6c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801bf70:	ea42 020c 	orr.w	r2, r2, ip
 801bf74:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801bf76:	2dff      	cmp	r5, #255	@ 0xff
 801bf78:	d021      	beq.n	801bfbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801bf7a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801bf7c:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801bf80:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801bf82:	fb05 fb0b 	mul.w	fp, r5, fp
 801bf86:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801bf88:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801bf8c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801bf8e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bf92:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bf96:	fb05 fa0a 	mul.w	sl, r5, sl
 801bf9a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf9e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bfa2:	44de      	add	lr, fp
 801bfa4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bfa8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bfac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bfb0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bfb4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bfb8:	ea4e 050a 	orr.w	r5, lr, sl
 801bfbc:	950c      	str	r5, [sp, #48]	@ 0x30
 801bfbe:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bfc0:	2dff      	cmp	r5, #255	@ 0xff
 801bfc2:	d021      	beq.n	801c008 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801bfc4:	9d08      	ldr	r5, [sp, #32]
 801bfc6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801bfca:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bfcc:	fb05 fb0b 	mul.w	fp, r5, fp
 801bfd0:	9d08      	ldr	r5, [sp, #32]
 801bfd2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801bfd6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bfd8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bfdc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bfe0:	fb05 fa0a 	mul.w	sl, r5, sl
 801bfe4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bfe8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bfec:	44de      	add	lr, fp
 801bfee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bff2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bff6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bffa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bffe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c002:	ea4e 050a 	orr.w	r5, lr, sl
 801c006:	9508      	str	r5, [sp, #32]
 801c008:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c00a:	2dff      	cmp	r5, #255	@ 0xff
 801c00c:	d021      	beq.n	801c052 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801c00e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c010:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801c014:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c016:	fb05 fb0b 	mul.w	fp, r5, fp
 801c01a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c01c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c020:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c022:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c026:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c02a:	fb05 fa0a 	mul.w	sl, r5, sl
 801c02e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c032:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c036:	44de      	add	lr, fp
 801c038:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c03c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c040:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c044:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c048:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c04c:	ea4e 050a 	orr.w	r5, lr, sl
 801c050:	950d      	str	r5, [sp, #52]	@ 0x34
 801c052:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801c054:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801c058:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801c05c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c060:	9d08      	ldr	r5, [sp, #32]
 801c062:	fb08 fc0c 	mul.w	ip, r8, ip
 801c066:	fb03 cc0e 	mla	ip, r3, lr, ip
 801c06a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801c06e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c070:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c074:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801c078:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801c07a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c07e:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801c082:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801c084:	fb08 f80e 	mul.w	r8, r8, lr
 801c088:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c08c:	fb03 8202 	mla	r2, r3, r2, r8
 801c090:	9b08      	ldr	r3, [sp, #32]
 801c092:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c096:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801c09a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c09c:	fb01 220a 	mla	r2, r1, sl, r2
 801c0a0:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801c0a4:	883b      	ldrh	r3, [r7, #0]
 801c0a6:	fb09 2901 	mla	r9, r9, r1, r2
 801c0aa:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c0ac:	1219      	asrs	r1, r3, #8
 801c0ae:	4342      	muls	r2, r0
 801c0b0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c0b4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801c0b8:	1c50      	adds	r0, r2, #1
 801c0ba:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c0be:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801c0c2:	ea4c 0c09 	orr.w	ip, ip, r9
 801c0c6:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801c0ca:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801c0ce:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801c0d2:	fa5f fc8c 	uxtb.w	ip, ip
 801c0d6:	fb12 f205 	smulbb	r2, r2, r5
 801c0da:	b2c0      	uxtb	r0, r0
 801c0dc:	fb1c fc05 	smulbb	ip, ip, r5
 801c0e0:	fb01 2100 	mla	r1, r1, r0, r2
 801c0e4:	10da      	asrs	r2, r3, #3
 801c0e6:	fb1e fe05 	smulbb	lr, lr, r5
 801c0ea:	00db      	lsls	r3, r3, #3
 801c0ec:	b289      	uxth	r1, r1
 801c0ee:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c0f2:	b2db      	uxtb	r3, r3
 801c0f4:	fb02 e200 	mla	r2, r2, r0, lr
 801c0f8:	fb03 c300 	mla	r3, r3, r0, ip
 801c0fc:	b292      	uxth	r2, r2
 801c0fe:	fa1f fc83 	uxth.w	ip, r3
 801c102:	1c4b      	adds	r3, r1, #1
 801c104:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c108:	f10c 0301 	add.w	r3, ip, #1
 801c10c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801c110:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801c114:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c118:	430b      	orrs	r3, r1
 801c11a:	1c51      	adds	r1, r2, #1
 801c11c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c120:	0952      	lsrs	r2, r2, #5
 801c122:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c126:	4313      	orrs	r3, r2
 801c128:	803b      	strh	r3, [r7, #0]
 801c12a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c12c:	3702      	adds	r7, #2
 801c12e:	441c      	add	r4, r3
 801c130:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c132:	441e      	add	r6, r3
 801c134:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c136:	3b01      	subs	r3, #1
 801c138:	9318      	str	r3, [sp, #96]	@ 0x60
 801c13a:	e698      	b.n	801be6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c13c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c13e:	441c      	add	r4, r3
 801c140:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c142:	441e      	add	r6, r3
 801c144:	9b07      	ldr	r3, [sp, #28]
 801c146:	3b01      	subs	r3, #1
 801c148:	9307      	str	r3, [sp, #28]
 801c14a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c14c:	3302      	adds	r3, #2
 801c14e:	930a      	str	r3, [sp, #40]	@ 0x28
 801c150:	e66d      	b.n	801be2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801c152:	d023      	beq.n	801c19c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801c154:	9b07      	ldr	r3, [sp, #28]
 801c156:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801c158:	3b01      	subs	r3, #1
 801c15a:	fb00 4003 	mla	r0, r0, r3, r4
 801c15e:	1400      	asrs	r0, r0, #16
 801c160:	f53f ae82 	bmi.w	801be68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c164:	3901      	subs	r1, #1
 801c166:	4288      	cmp	r0, r1
 801c168:	f6bf ae7e 	bge.w	801be68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c16c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801c16e:	fb01 6303 	mla	r3, r1, r3, r6
 801c172:	141b      	asrs	r3, r3, #16
 801c174:	f53f ae78 	bmi.w	801be68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c178:	3a01      	subs	r2, #1
 801c17a:	4293      	cmp	r3, r2
 801c17c:	f6bf ae74 	bge.w	801be68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c180:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c184:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801c188:	f1bb 0f00 	cmp.w	fp, #0
 801c18c:	dc6c      	bgt.n	801c268 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801c18e:	9b07      	ldr	r3, [sp, #28]
 801c190:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801c194:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c196:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801c19a:	930a      	str	r3, [sp, #40]	@ 0x28
 801c19c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c19e:	2b00      	cmp	r3, #0
 801c1a0:	f340 81b3 	ble.w	801c50a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801c1a4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c1a8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c1aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c1ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c1b2:	eef0 6a62 	vmov.f32	s13, s5
 801c1b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c1ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c1be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1c2:	ee16 4a90 	vmov	r4, s13
 801c1c6:	eef0 6a43 	vmov.f32	s13, s6
 801c1ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1ce:	ee16 6a90 	vmov	r6, s13
 801c1d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c1d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c1da:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c1de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c1e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c1e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c1ea:	ee12 2a90 	vmov	r2, s5
 801c1ee:	eef0 2a47 	vmov.f32	s5, s14
 801c1f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1f6:	ee13 2a10 	vmov	r2, s6
 801c1fa:	9329      	str	r3, [sp, #164]	@ 0xa4
 801c1fc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c1fe:	eeb0 3a67 	vmov.f32	s6, s15
 801c202:	fb92 f3f3 	sdiv	r3, r2, r3
 801c206:	932a      	str	r3, [sp, #168]	@ 0xa8
 801c208:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c20a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801c20c:	3b01      	subs	r3, #1
 801c20e:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c210:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c212:	bf08      	it	eq
 801c214:	4613      	moveq	r3, r2
 801c216:	9307      	str	r3, [sp, #28]
 801c218:	e5fb      	b.n	801be12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c21a:	2900      	cmp	r1, #0
 801c21c:	f43f ae6b 	beq.w	801bef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c220:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801c224:	9308      	str	r3, [sp, #32]
 801c226:	0e1b      	lsrs	r3, r3, #24
 801c228:	9311      	str	r3, [sp, #68]	@ 0x44
 801c22a:	e664      	b.n	801bef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c22c:	f112 0801 	adds.w	r8, r2, #1
 801c230:	f53f af7b 	bmi.w	801c12a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c234:	4543      	cmp	r3, r8
 801c236:	f6ff af78 	blt.w	801c12a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c23a:	f11c 0801 	adds.w	r8, ip, #1
 801c23e:	f53f af74 	bmi.w	801c12a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c242:	45c6      	cmp	lr, r8
 801c244:	f6ff af71 	blt.w	801c12a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c248:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801c24a:	b21b      	sxth	r3, r3
 801c24c:	9201      	str	r2, [sp, #4]
 801c24e:	fa0f f28e 	sxth.w	r2, lr
 801c252:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801c256:	e9cd c002 	strd	ip, r0, [sp, #8]
 801c25a:	9200      	str	r2, [sp, #0]
 801c25c:	4639      	mov	r1, r7
 801c25e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c260:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801c262:	f7ff fc79 	bl	801bb58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801c266:	e760      	b.n	801c12a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c268:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801c26a:	1427      	asrs	r7, r4, #16
 801c26c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c26e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c272:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c276:	1433      	asrs	r3, r6, #16
 801c278:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c27c:	fb01 7303 	mla	r3, r1, r3, r7
 801c280:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801c284:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801c288:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c28c:	2a00      	cmp	r2, #0
 801c28e:	f000 8133 	beq.w	801c4f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801c292:	687d      	ldr	r5, [r7, #4]
 801c294:	950e      	str	r5, [sp, #56]	@ 0x38
 801c296:	0e2d      	lsrs	r5, r5, #24
 801c298:	9515      	str	r5, [sp, #84]	@ 0x54
 801c29a:	b178      	cbz	r0, 801c2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801c29c:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801c2a0:	3901      	subs	r1, #1
 801c2a2:	0089      	lsls	r1, r1, #2
 801c2a4:	3104      	adds	r1, #4
 801c2a6:	eb07 0e01 	add.w	lr, r7, r1
 801c2aa:	5879      	ldr	r1, [r7, r1]
 801c2ac:	9109      	str	r1, [sp, #36]	@ 0x24
 801c2ae:	0e09      	lsrs	r1, r1, #24
 801c2b0:	9112      	str	r1, [sp, #72]	@ 0x48
 801c2b2:	f8de 1004 	ldr.w	r1, [lr, #4]
 801c2b6:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c2b8:	0e09      	lsrs	r1, r1, #24
 801c2ba:	9116      	str	r1, [sp, #88]	@ 0x58
 801c2bc:	b292      	uxth	r2, r2
 801c2be:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801c2c0:	b280      	uxth	r0, r0
 801c2c2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c2c4:	fb02 f800 	mul.w	r8, r2, r0
 801c2c8:	0112      	lsls	r2, r2, #4
 801c2ca:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c2ce:	eba2 0e08 	sub.w	lr, r2, r8
 801c2d2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c2d6:	b280      	uxth	r0, r0
 801c2d8:	fa1f fe8e 	uxth.w	lr, lr
 801c2dc:	1a12      	subs	r2, r2, r0
 801c2de:	fb0e f101 	mul.w	r1, lr, r1
 801c2e2:	b292      	uxth	r2, r2
 801c2e4:	fb02 110c 	mla	r1, r2, ip, r1
 801c2e8:	fb00 1105 	mla	r1, r0, r5, r1
 801c2ec:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c2ee:	fb08 1105 	mla	r1, r8, r5, r1
 801c2f2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c2f6:	2900      	cmp	r1, #0
 801c2f8:	f000 80f5 	beq.w	801c4e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801c2fc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801c300:	d019      	beq.n	801c336 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801c302:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c306:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c30a:	fb0c fa0a 	mul.w	sl, ip, sl
 801c30e:	fb0c fc03 	mul.w	ip, ip, r3
 801c312:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c316:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c31a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801c31e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c322:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c326:	4453      	add	r3, sl
 801c328:	0a3f      	lsrs	r7, r7, #8
 801c32a:	0a1b      	lsrs	r3, r3, #8
 801c32c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c330:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c334:	433b      	orrs	r3, r7
 801c336:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801c338:	2dff      	cmp	r5, #255	@ 0xff
 801c33a:	d020      	beq.n	801c37e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801c33c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c33e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c342:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801c344:	436f      	muls	r7, r5
 801c346:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c348:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c34c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c350:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801c352:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c356:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c35a:	fb05 fa0a 	mul.w	sl, r5, sl
 801c35e:	44bc      	add	ip, r7
 801c360:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c364:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c368:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c36c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c370:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c374:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c378:	ea4c 050a 	orr.w	r5, ip, sl
 801c37c:	950e      	str	r5, [sp, #56]	@ 0x38
 801c37e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c380:	2dff      	cmp	r5, #255	@ 0xff
 801c382:	d020      	beq.n	801c3c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801c384:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c386:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c38a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c38c:	436f      	muls	r7, r5
 801c38e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c390:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c394:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c398:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c39a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c39e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3a2:	fb05 fa0a 	mul.w	sl, r5, sl
 801c3a6:	44bc      	add	ip, r7
 801c3a8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c3ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c3b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c3b4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c3bc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c3c0:	ea4c 050a 	orr.w	r5, ip, sl
 801c3c4:	9509      	str	r5, [sp, #36]	@ 0x24
 801c3c6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c3c8:	2dff      	cmp	r5, #255	@ 0xff
 801c3ca:	d020      	beq.n	801c40e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801c3cc:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c3ce:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c3d2:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c3d4:	436f      	muls	r7, r5
 801c3d6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c3d8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c3dc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c3e0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c3e2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c3e6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3ea:	fb05 fa0a 	mul.w	sl, r5, sl
 801c3ee:	44bc      	add	ip, r7
 801c3f0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c3f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c3f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c3fc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c400:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c404:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c408:	ea4c 050a 	orr.w	r5, ip, sl
 801c40c:	950f      	str	r5, [sp, #60]	@ 0x3c
 801c40e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c410:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c414:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c418:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c41c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c41e:	fb0e f707 	mul.w	r7, lr, r7
 801c422:	fb02 770c 	mla	r7, r2, ip, r7
 801c426:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c42a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c42c:	fb00 770c 	mla	r7, r0, ip, r7
 801c430:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c434:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c436:	fb08 770c 	mla	r7, r8, ip, r7
 801c43a:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801c43e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801c440:	fb0e fe0c 	mul.w	lr, lr, ip
 801c444:	0a3f      	lsrs	r7, r7, #8
 801c446:	fb02 e303 	mla	r3, r2, r3, lr
 801c44a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c44c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c450:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c454:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c456:	fb00 330a 	mla	r3, r0, sl, r3
 801c45a:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801c45e:	f8b9 0000 	ldrh.w	r0, [r9]
 801c462:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c466:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c468:	1202      	asrs	r2, r0, #8
 801c46a:	4359      	muls	r1, r3
 801c46c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c470:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c474:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c478:	1c4b      	adds	r3, r1, #1
 801c47a:	ea47 070c 	orr.w	r7, r7, ip
 801c47e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c482:	0c3b      	lsrs	r3, r7, #16
 801c484:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801c488:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801c48c:	b2ff      	uxtb	r7, r7
 801c48e:	fb13 f305 	smulbb	r3, r3, r5
 801c492:	b2c9      	uxtb	r1, r1
 801c494:	fb17 f705 	smulbb	r7, r7, r5
 801c498:	fb02 3201 	mla	r2, r2, r1, r3
 801c49c:	10c3      	asrs	r3, r0, #3
 801c49e:	fb1c fc05 	smulbb	ip, ip, r5
 801c4a2:	00c0      	lsls	r0, r0, #3
 801c4a4:	b292      	uxth	r2, r2
 801c4a6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c4aa:	b2c0      	uxtb	r0, r0
 801c4ac:	fb03 c301 	mla	r3, r3, r1, ip
 801c4b0:	fb00 7001 	mla	r0, r0, r1, r7
 801c4b4:	1c51      	adds	r1, r2, #1
 801c4b6:	b29b      	uxth	r3, r3
 801c4b8:	b280      	uxth	r0, r0
 801c4ba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c4be:	f100 0c01 	add.w	ip, r0, #1
 801c4c2:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801c4c6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801c4ca:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c4ce:	ea4c 0202 	orr.w	r2, ip, r2
 801c4d2:	f103 0c01 	add.w	ip, r3, #1
 801c4d6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801c4da:	095b      	lsrs	r3, r3, #5
 801c4dc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c4e0:	431a      	orrs	r2, r3
 801c4e2:	f8a9 2000 	strh.w	r2, [r9]
 801c4e6:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c4e8:	f109 0902 	add.w	r9, r9, #2
 801c4ec:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c4f0:	441c      	add	r4, r3
 801c4f2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c4f4:	441e      	add	r6, r3
 801c4f6:	e647      	b.n	801c188 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801c4f8:	2800      	cmp	r0, #0
 801c4fa:	f43f aedf 	beq.w	801c2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801c4fe:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801c502:	9109      	str	r1, [sp, #36]	@ 0x24
 801c504:	0e09      	lsrs	r1, r1, #24
 801c506:	9112      	str	r1, [sp, #72]	@ 0x48
 801c508:	e6d8      	b.n	801c2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801c50a:	b01d      	add	sp, #116	@ 0x74
 801c50c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c510 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801c510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c514:	b085      	sub	sp, #20
 801c516:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801c51a:	9102      	str	r1, [sp, #8]
 801c51c:	2c00      	cmp	r4, #0
 801c51e:	fb04 7103 	mla	r1, r4, r3, r7
 801c522:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801c526:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801c52a:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801c52e:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801c532:	f2c0 810c 	blt.w	801c74e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801c536:	45a6      	cmp	lr, r4
 801c538:	f340 8109 	ble.w	801c74e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801c53c:	2f00      	cmp	r7, #0
 801c53e:	f2c0 8104 	blt.w	801c74a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801c542:	42bb      	cmp	r3, r7
 801c544:	f340 8101 	ble.w	801c74a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801c548:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801c54c:	1c7a      	adds	r2, r7, #1
 801c54e:	f100 8101 	bmi.w	801c754 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801c552:	4293      	cmp	r3, r2
 801c554:	f340 80fe 	ble.w	801c754 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801c558:	2e00      	cmp	r6, #0
 801c55a:	f000 80fd 	beq.w	801c758 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801c55e:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801c562:	3401      	adds	r4, #1
 801c564:	f100 80fc 	bmi.w	801c760 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801c568:	45a6      	cmp	lr, r4
 801c56a:	f340 80f9 	ble.w	801c760 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801c56e:	2800      	cmp	r0, #0
 801c570:	f000 80f9 	beq.w	801c766 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801c574:	2f00      	cmp	r7, #0
 801c576:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801c57a:	f2c0 80ef 	blt.w	801c75c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801c57e:	42bb      	cmp	r3, r7
 801c580:	f340 80ec 	ble.w	801c75c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801c584:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801c588:	3701      	adds	r7, #1
 801c58a:	f100 80ef 	bmi.w	801c76c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801c58e:	42bb      	cmp	r3, r7
 801c590:	f340 80ec 	ble.w	801c76c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801c594:	2e00      	cmp	r6, #0
 801c596:	f000 80eb 	beq.w	801c770 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801c59a:	6852      	ldr	r2, [r2, #4]
 801c59c:	b2b6      	uxth	r6, r6
 801c59e:	b280      	uxth	r0, r0
 801c5a0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801c5a4:	fb00 fe06 	mul.w	lr, r0, r6
 801c5a8:	0136      	lsls	r6, r6, #4
 801c5aa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801c5ae:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801c5b2:	eba6 070e 	sub.w	r7, r6, lr
 801c5b6:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801c5ba:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801c5be:	b280      	uxth	r0, r0
 801c5c0:	b2bf      	uxth	r7, r7
 801c5c2:	1a1b      	subs	r3, r3, r0
 801c5c4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801c5c8:	fb07 f60a 	mul.w	r6, r7, sl
 801c5cc:	b29b      	uxth	r3, r3
 801c5ce:	fb0b 6603 	mla	r6, fp, r3, r6
 801c5d2:	fb00 6609 	mla	r6, r0, r9, r6
 801c5d6:	fb0e 6608 	mla	r6, lr, r8, r6
 801c5da:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801c5de:	9600      	str	r6, [sp, #0]
 801c5e0:	2e00      	cmp	r6, #0
 801c5e2:	f000 80af 	beq.w	801c744 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801c5e6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c5ea:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801c5ee:	9e02      	ldr	r6, [sp, #8]
 801c5f0:	fb0b fc0c 	mul.w	ip, fp, ip
 801c5f4:	fb0b f505 	mul.w	r5, fp, r5
 801c5f8:	8836      	ldrh	r6, [r6, #0]
 801c5fa:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801c5fe:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c602:	9501      	str	r5, [sp, #4]
 801c604:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801c608:	44dc      	add	ip, fp
 801c60a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c60e:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801c612:	9503      	str	r5, [sp, #12]
 801c614:	9d01      	ldr	r5, [sp, #4]
 801c616:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801c61a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c61e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801c622:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c626:	fb0a fc0c 	mul.w	ip, sl, ip
 801c62a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801c62e:	fb0a fa01 	mul.w	sl, sl, r1
 801c632:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801c636:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c63a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801c63e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c642:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801c646:	4465      	add	r5, ip
 801c648:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c64c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801c650:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c654:	fb09 fc0c 	mul.w	ip, r9, ip
 801c658:	0a2d      	lsrs	r5, r5, #8
 801c65a:	fb09 f904 	mul.w	r9, r9, r4
 801c65e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c662:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801c666:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c66a:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801c66e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c672:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801c676:	437d      	muls	r5, r7
 801c678:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801c67c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801c680:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801c684:	4461      	add	r1, ip
 801c686:	fb08 f404 	mul.w	r4, r8, r4
 801c68a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c68e:	fb08 f802 	mul.w	r8, r8, r2
 801c692:	0a09      	lsrs	r1, r1, #8
 801c694:	0a22      	lsrs	r2, r4, #8
 801c696:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801c69a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801c69e:	fb07 f70a 	mul.w	r7, r7, sl
 801c6a2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801c6a6:	4414      	add	r4, r2
 801c6a8:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801c6ac:	0a24      	lsrs	r4, r4, #8
 801c6ae:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801c6b2:	9a03      	ldr	r2, [sp, #12]
 801c6b4:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801c6b8:	fb02 5503 	mla	r5, r2, r3, r5
 801c6bc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801c6c0:	fb04 540e 	mla	r4, r4, lr, r5
 801c6c4:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801c6c8:	fb01 4100 	mla	r1, r1, r0, r4
 801c6cc:	0a09      	lsrs	r1, r1, #8
 801c6ce:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801c6d2:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801c6d6:	fb03 7101 	mla	r1, r3, r1, r7
 801c6da:	9b00      	ldr	r3, [sp, #0]
 801c6dc:	fb0e 1e08 	mla	lr, lr, r8, r1
 801c6e0:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801c6e4:	43da      	mvns	r2, r3
 801c6e6:	1233      	asrs	r3, r6, #8
 801c6e8:	fb00 e101 	mla	r1, r0, r1, lr
 801c6ec:	10f0      	asrs	r0, r6, #3
 801c6ee:	b2d2      	uxtb	r2, r2
 801c6f0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c6f4:	0a09      	lsrs	r1, r1, #8
 801c6f6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c6fa:	00f6      	lsls	r6, r6, #3
 801c6fc:	4353      	muls	r3, r2
 801c6fe:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c702:	4350      	muls	r0, r2
 801c704:	b2f6      	uxtb	r6, r6
 801c706:	4321      	orrs	r1, r4
 801c708:	4356      	muls	r6, r2
 801c70a:	1c5a      	adds	r2, r3, #1
 801c70c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c710:	0c0b      	lsrs	r3, r1, #16
 801c712:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c716:	1c42      	adds	r2, r0, #1
 801c718:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c71c:	0a0a      	lsrs	r2, r1, #8
 801c71e:	021b      	lsls	r3, r3, #8
 801c720:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801c724:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801c728:	00d2      	lsls	r2, r2, #3
 801c72a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c72e:	4313      	orrs	r3, r2
 801c730:	1c72      	adds	r2, r6, #1
 801c732:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801c736:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801c73a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801c73e:	4319      	orrs	r1, r3
 801c740:	9b02      	ldr	r3, [sp, #8]
 801c742:	8019      	strh	r1, [r3, #0]
 801c744:	b005      	add	sp, #20
 801c746:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c74a:	2500      	movs	r5, #0
 801c74c:	e6fe      	b.n	801c54c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801c74e:	2100      	movs	r1, #0
 801c750:	460d      	mov	r5, r1
 801c752:	e706      	b.n	801c562 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801c754:	2100      	movs	r1, #0
 801c756:	e704      	b.n	801c562 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801c758:	4631      	mov	r1, r6
 801c75a:	e702      	b.n	801c562 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801c75c:	2400      	movs	r4, #0
 801c75e:	e713      	b.n	801c588 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801c760:	2200      	movs	r2, #0
 801c762:	4614      	mov	r4, r2
 801c764:	e71a      	b.n	801c59c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801c766:	4602      	mov	r2, r0
 801c768:	4604      	mov	r4, r0
 801c76a:	e717      	b.n	801c59c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801c76c:	2200      	movs	r2, #0
 801c76e:	e715      	b.n	801c59c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801c770:	4632      	mov	r2, r6
 801c772:	e713      	b.n	801c59c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

0801c774 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c778:	b09b      	sub	sp, #108	@ 0x6c
 801c77a:	9218      	str	r2, [sp, #96]	@ 0x60
 801c77c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c77e:	9019      	str	r0, [sp, #100]	@ 0x64
 801c780:	9116      	str	r1, [sp, #88]	@ 0x58
 801c782:	6850      	ldr	r0, [r2, #4]
 801c784:	9307      	str	r3, [sp, #28]
 801c786:	6812      	ldr	r2, [r2, #0]
 801c788:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801c78c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801c790:	fb00 1303 	mla	r3, r0, r3, r1
 801c794:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c798:	930a      	str	r3, [sp, #40]	@ 0x28
 801c79a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c79c:	681b      	ldr	r3, [r3, #0]
 801c79e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c7a0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c7a2:	2b00      	cmp	r3, #0
 801c7a4:	dc03      	bgt.n	801c7ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c7a6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c7a8:	2b00      	cmp	r3, #0
 801c7aa:	f340 8387 	ble.w	801cebc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801c7ae:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c7b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c7b4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c7b8:	1e48      	subs	r0, r1, #1
 801c7ba:	1e57      	subs	r7, r2, #1
 801c7bc:	9b07      	ldr	r3, [sp, #28]
 801c7be:	2b00      	cmp	r3, #0
 801c7c0:	f340 8166 	ble.w	801ca90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c7c4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c7c8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c7cc:	d406      	bmi.n	801c7dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c7ce:	4584      	cmp	ip, r0
 801c7d0:	da04      	bge.n	801c7dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c7d2:	2b00      	cmp	r3, #0
 801c7d4:	db02      	blt.n	801c7dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c7d6:	42bb      	cmp	r3, r7
 801c7d8:	f2c0 815b 	blt.w	801ca92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801c7dc:	f11c 0c01 	adds.w	ip, ip, #1
 801c7e0:	f100 814b 	bmi.w	801ca7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801c7e4:	4561      	cmp	r1, ip
 801c7e6:	f2c0 8148 	blt.w	801ca7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801c7ea:	3301      	adds	r3, #1
 801c7ec:	f100 8145 	bmi.w	801ca7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801c7f0:	429a      	cmp	r2, r3
 801c7f2:	f2c0 8142 	blt.w	801ca7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801c7f6:	9b07      	ldr	r3, [sp, #28]
 801c7f8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801c7fa:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c7fc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c7fe:	2b00      	cmp	r3, #0
 801c800:	f340 8165 	ble.w	801cace <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c804:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801c806:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801c80a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c80c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801c810:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801c814:	1422      	asrs	r2, r4, #16
 801c816:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c81a:	689b      	ldr	r3, [r3, #8]
 801c81c:	f100 81d5 	bmi.w	801cbca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801c820:	f103 38ff 	add.w	r8, r3, #4294967295
 801c824:	4542      	cmp	r2, r8
 801c826:	f280 81d0 	bge.w	801cbca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801c82a:	f1bc 0f00 	cmp.w	ip, #0
 801c82e:	f2c0 81cc 	blt.w	801cbca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801c832:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c836:	45c4      	cmp	ip, r8
 801c838:	f280 81c7 	bge.w	801cbca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801c83c:	b21b      	sxth	r3, r3
 801c83e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c840:	fb0c 2203 	mla	r2, ip, r3, r2
 801c844:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801c848:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801c84c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801c850:	2900      	cmp	r1, #0
 801c852:	f000 8182 	beq.w	801cb5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801c856:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801c85a:	950b      	str	r5, [sp, #44]	@ 0x2c
 801c85c:	0e2d      	lsrs	r5, r5, #24
 801c85e:	9512      	str	r5, [sp, #72]	@ 0x48
 801c860:	b180      	cbz	r0, 801c884 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801c862:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801c866:	3b01      	subs	r3, #1
 801c868:	009b      	lsls	r3, r3, #2
 801c86a:	3304      	adds	r3, #4
 801c86c:	eb08 0c03 	add.w	ip, r8, r3
 801c870:	f858 3003 	ldr.w	r3, [r8, r3]
 801c874:	9308      	str	r3, [sp, #32]
 801c876:	0e1b      	lsrs	r3, r3, #24
 801c878:	9310      	str	r3, [sp, #64]	@ 0x40
 801c87a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801c87e:	930c      	str	r3, [sp, #48]	@ 0x30
 801c880:	0e1b      	lsrs	r3, r3, #24
 801c882:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c884:	b289      	uxth	r1, r1
 801c886:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801c888:	b280      	uxth	r0, r0
 801c88a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c88c:	fb01 f900 	mul.w	r9, r1, r0
 801c890:	0109      	lsls	r1, r1, #4
 801c892:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c896:	eba1 0809 	sub.w	r8, r1, r9
 801c89a:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801c89e:	b280      	uxth	r0, r0
 801c8a0:	fa1f f888 	uxth.w	r8, r8
 801c8a4:	1a09      	subs	r1, r1, r0
 801c8a6:	fb08 f303 	mul.w	r3, r8, r3
 801c8aa:	b289      	uxth	r1, r1
 801c8ac:	fb01 330e 	mla	r3, r1, lr, r3
 801c8b0:	fb00 3305 	mla	r3, r0, r5, r3
 801c8b4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801c8b6:	fb09 3305 	mla	r3, r9, r5, r3
 801c8ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c8be:	2b00      	cmp	r3, #0
 801c8c0:	f000 80d2 	beq.w	801ca68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801c8c4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801c8c8:	d01b      	beq.n	801c902 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801c8ca:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801c8ce:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801c8d2:	fb0e fa0a 	mul.w	sl, lr, sl
 801c8d6:	fb0e fe02 	mul.w	lr, lr, r2
 801c8da:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801c8de:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c8e2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801c8e6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801c8ea:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c8ee:	4452      	add	r2, sl
 801c8f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c8f4:	0a12      	lsrs	r2, r2, #8
 801c8f6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c8fa:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801c8fe:	ea42 020c 	orr.w	r2, r2, ip
 801c902:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c904:	2dff      	cmp	r5, #255	@ 0xff
 801c906:	d021      	beq.n	801c94c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801c908:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801c90a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801c90e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c910:	fb05 fb0b 	mul.w	fp, r5, fp
 801c914:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801c916:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c91a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c91c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c920:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c924:	fb05 fa0a 	mul.w	sl, r5, sl
 801c928:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c92c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c930:	44de      	add	lr, fp
 801c932:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c936:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c93a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c93e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c942:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c946:	ea4e 050a 	orr.w	r5, lr, sl
 801c94a:	950b      	str	r5, [sp, #44]	@ 0x2c
 801c94c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c94e:	2dff      	cmp	r5, #255	@ 0xff
 801c950:	d021      	beq.n	801c996 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801c952:	9d08      	ldr	r5, [sp, #32]
 801c954:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801c958:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c95a:	fb05 fb0b 	mul.w	fp, r5, fp
 801c95e:	9d08      	ldr	r5, [sp, #32]
 801c960:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801c964:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c966:	fb05 fa0e 	mul.w	sl, r5, lr
 801c96a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c96e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c972:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c976:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c97a:	44de      	add	lr, fp
 801c97c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c980:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c984:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c988:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c98c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c990:	ea4e 050a 	orr.w	r5, lr, sl
 801c994:	9508      	str	r5, [sp, #32]
 801c996:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801c998:	2dff      	cmp	r5, #255	@ 0xff
 801c99a:	d021      	beq.n	801c9e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801c99c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801c99e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801c9a2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801c9a4:	fb05 fb0b 	mul.w	fp, r5, fp
 801c9a8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801c9aa:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c9ae:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801c9b0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c9b4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c9b8:	fb05 fa0a 	mul.w	sl, r5, sl
 801c9bc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c9c0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c9c4:	44de      	add	lr, fp
 801c9c6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c9ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c9ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c9d2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c9d6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c9da:	ea4e 050a 	orr.w	r5, lr, sl
 801c9de:	950c      	str	r5, [sp, #48]	@ 0x30
 801c9e0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801c9e2:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801c9e6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801c9ea:	2bff      	cmp	r3, #255	@ 0xff
 801c9ec:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c9f0:	9d08      	ldr	r5, [sp, #32]
 801c9f2:	fb08 fc0c 	mul.w	ip, r8, ip
 801c9f6:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c9fa:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801c9fe:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ca00:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ca04:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ca08:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ca0a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ca0e:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801ca12:	fb08 f80e 	mul.w	r8, r8, lr
 801ca16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ca1a:	fb01 8202 	mla	r2, r1, r2, r8
 801ca1e:	9908      	ldr	r1, [sp, #32]
 801ca20:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ca24:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801ca28:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801ca2a:	fb00 220a 	mla	r2, r0, sl, r2
 801ca2e:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801ca32:	fb09 2900 	mla	r9, r9, r0, r2
 801ca36:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ca3a:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801ca3e:	ea4c 0c09 	orr.w	ip, ip, r9
 801ca42:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801ca46:	f040 8091 	bne.w	801cb6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ca4a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801ca4e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801ca52:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ca56:	f022 0207 	bic.w	r2, r2, #7
 801ca5a:	431a      	orrs	r2, r3
 801ca5c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ca60:	ea4c 0c02 	orr.w	ip, ip, r2
 801ca64:	f8a7 c000 	strh.w	ip, [r7]
 801ca68:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ca6a:	3702      	adds	r7, #2
 801ca6c:	441c      	add	r4, r3
 801ca6e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ca70:	441e      	add	r6, r3
 801ca72:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ca74:	3b01      	subs	r3, #1
 801ca76:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ca78:	e6c0      	b.n	801c7fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ca7a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ca7c:	441c      	add	r4, r3
 801ca7e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ca80:	441e      	add	r6, r3
 801ca82:	9b07      	ldr	r3, [sp, #28]
 801ca84:	3b01      	subs	r3, #1
 801ca86:	9307      	str	r3, [sp, #28]
 801ca88:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ca8a:	3302      	adds	r3, #2
 801ca8c:	930a      	str	r3, [sp, #40]	@ 0x28
 801ca8e:	e695      	b.n	801c7bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ca90:	d024      	beq.n	801cadc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ca92:	9b07      	ldr	r3, [sp, #28]
 801ca94:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801ca96:	3b01      	subs	r3, #1
 801ca98:	fb00 4003 	mla	r0, r0, r3, r4
 801ca9c:	1400      	asrs	r0, r0, #16
 801ca9e:	f53f aeaa 	bmi.w	801c7f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801caa2:	3901      	subs	r1, #1
 801caa4:	4288      	cmp	r0, r1
 801caa6:	f6bf aea6 	bge.w	801c7f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801caaa:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801caac:	fb01 6303 	mla	r3, r1, r3, r6
 801cab0:	141b      	asrs	r3, r3, #16
 801cab2:	f53f aea0 	bmi.w	801c7f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801cab6:	3a01      	subs	r2, #1
 801cab8:	4293      	cmp	r3, r2
 801caba:	f6bf ae9c 	bge.w	801c7f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801cabe:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801cac2:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801cac6:	f1bb 0f00 	cmp.w	fp, #0
 801caca:	f300 809a 	bgt.w	801cc02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801cace:	9b07      	ldr	r3, [sp, #28]
 801cad0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801cad4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cad6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801cada:	930a      	str	r3, [sp, #40]	@ 0x28
 801cadc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801cade:	2b00      	cmp	r3, #0
 801cae0:	f340 81ec 	ble.w	801cebc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801cae4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cae8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801caea:	ee30 0a04 	vadd.f32	s0, s0, s8
 801caee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801caf2:	eef0 6a62 	vmov.f32	s13, s5
 801caf6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cafa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cafe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb02:	ee16 4a90 	vmov	r4, s13
 801cb06:	eef0 6a43 	vmov.f32	s13, s6
 801cb0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb0e:	ee16 6a90 	vmov	r6, s13
 801cb12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb16:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cb1a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cb1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cb22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cb26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cb2a:	ee12 2a90 	vmov	r2, s5
 801cb2e:	eef0 2a47 	vmov.f32	s5, s14
 801cb32:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb36:	ee13 2a10 	vmov	r2, s6
 801cb3a:	9327      	str	r3, [sp, #156]	@ 0x9c
 801cb3c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb3e:	eeb0 3a67 	vmov.f32	s6, s15
 801cb42:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb46:	9328      	str	r3, [sp, #160]	@ 0xa0
 801cb48:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801cb4a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801cb4c:	3b01      	subs	r3, #1
 801cb4e:	9316      	str	r3, [sp, #88]	@ 0x58
 801cb50:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb52:	bf08      	it	eq
 801cb54:	4613      	moveq	r3, r2
 801cb56:	9307      	str	r3, [sp, #28]
 801cb58:	e622      	b.n	801c7a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801cb5a:	2800      	cmp	r0, #0
 801cb5c:	f43f ae92 	beq.w	801c884 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801cb60:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801cb64:	9308      	str	r3, [sp, #32]
 801cb66:	0e1b      	lsrs	r3, r3, #24
 801cb68:	9310      	str	r3, [sp, #64]	@ 0x40
 801cb6a:	e68b      	b.n	801c884 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801cb6c:	8839      	ldrh	r1, [r7, #0]
 801cb6e:	43db      	mvns	r3, r3
 801cb70:	4dd4      	ldr	r5, [pc, #848]	@ (801cec4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801cb72:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801cb76:	fa5f f883 	uxtb.w	r8, r3
 801cb7a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801cb7e:	10c8      	asrs	r0, r1, #3
 801cb80:	00cb      	lsls	r3, r1, #3
 801cb82:	fb0e fe08 	mul.w	lr, lr, r8
 801cb86:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801cb8a:	b2db      	uxtb	r3, r3
 801cb8c:	f10e 0101 	add.w	r1, lr, #1
 801cb90:	fb00 f008 	mul.w	r0, r0, r8
 801cb94:	fb03 f308 	mul.w	r3, r3, r8
 801cb98:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801cb9c:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801cba0:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801cba4:	f100 0e01 	add.w	lr, r0, #1
 801cba8:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801cbac:	b2c9      	uxtb	r1, r1
 801cbae:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801cbb2:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801cbb6:	00d2      	lsls	r2, r2, #3
 801cbb8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cbbc:	430a      	orrs	r2, r1
 801cbbe:	1c59      	adds	r1, r3, #1
 801cbc0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801cbc4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801cbc8:	e748      	b.n	801ca5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801cbca:	f112 0801 	adds.w	r8, r2, #1
 801cbce:	f53f af4b 	bmi.w	801ca68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cbd2:	4543      	cmp	r3, r8
 801cbd4:	f6ff af48 	blt.w	801ca68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cbd8:	f11c 0801 	adds.w	r8, ip, #1
 801cbdc:	f53f af44 	bmi.w	801ca68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cbe0:	45c6      	cmp	lr, r8
 801cbe2:	f6ff af41 	blt.w	801ca68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cbe6:	b21b      	sxth	r3, r3
 801cbe8:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801cbec:	fa0f f28e 	sxth.w	r2, lr
 801cbf0:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801cbf4:	9200      	str	r2, [sp, #0]
 801cbf6:	4639      	mov	r1, r7
 801cbf8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801cbfa:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801cbfc:	f7ff fc88 	bl	801c510 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801cc00:	e732      	b.n	801ca68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cc02:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801cc04:	1421      	asrs	r1, r4, #16
 801cc06:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801cc08:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cc0c:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801cc10:	1433      	asrs	r3, r6, #16
 801cc12:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801cc16:	fb07 1303 	mla	r3, r7, r3, r1
 801cc1a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801cc1c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801cc20:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801cc24:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801cc28:	2a00      	cmp	r2, #0
 801cc2a:	f000 8108 	beq.w	801ce3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 801cc2e:	684d      	ldr	r5, [r1, #4]
 801cc30:	950d      	str	r5, [sp, #52]	@ 0x34
 801cc32:	0e2d      	lsrs	r5, r5, #24
 801cc34:	9514      	str	r5, [sp, #80]	@ 0x50
 801cc36:	b178      	cbz	r0, 801cc58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801cc38:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801cc3c:	3f01      	subs	r7, #1
 801cc3e:	00bf      	lsls	r7, r7, #2
 801cc40:	3704      	adds	r7, #4
 801cc42:	eb01 0e07 	add.w	lr, r1, r7
 801cc46:	59c9      	ldr	r1, [r1, r7]
 801cc48:	9109      	str	r1, [sp, #36]	@ 0x24
 801cc4a:	0e09      	lsrs	r1, r1, #24
 801cc4c:	9111      	str	r1, [sp, #68]	@ 0x44
 801cc4e:	f8de 1004 	ldr.w	r1, [lr, #4]
 801cc52:	910e      	str	r1, [sp, #56]	@ 0x38
 801cc54:	0e09      	lsrs	r1, r1, #24
 801cc56:	9115      	str	r1, [sp, #84]	@ 0x54
 801cc58:	b292      	uxth	r2, r2
 801cc5a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801cc5c:	b280      	uxth	r0, r0
 801cc5e:	fb02 f900 	mul.w	r9, r2, r0
 801cc62:	0112      	lsls	r2, r2, #4
 801cc64:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801cc68:	eba2 0e09 	sub.w	lr, r2, r9
 801cc6c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801cc70:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cc72:	b280      	uxth	r0, r0
 801cc74:	fa1f fe8e 	uxth.w	lr, lr
 801cc78:	1a09      	subs	r1, r1, r0
 801cc7a:	fb0e f202 	mul.w	r2, lr, r2
 801cc7e:	b289      	uxth	r1, r1
 801cc80:	fb01 220c 	mla	r2, r1, ip, r2
 801cc84:	fb00 2205 	mla	r2, r0, r5, r2
 801cc88:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801cc8a:	fb09 2205 	mla	r2, r9, r5, r2
 801cc8e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801cc92:	2a00      	cmp	r2, #0
 801cc94:	f000 80ca 	beq.w	801ce2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801cc98:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801cc9c:	d019      	beq.n	801ccd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801cc9e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801cca2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801cca6:	fb0c fa0a 	mul.w	sl, ip, sl
 801ccaa:	fb0c fc03 	mul.w	ip, ip, r3
 801ccae:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ccb2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ccb6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ccba:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ccbe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ccc2:	4453      	add	r3, sl
 801ccc4:	0a3f      	lsrs	r7, r7, #8
 801ccc6:	0a1b      	lsrs	r3, r3, #8
 801ccc8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801cccc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ccd0:	433b      	orrs	r3, r7
 801ccd2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ccd4:	2dff      	cmp	r5, #255	@ 0xff
 801ccd6:	d020      	beq.n	801cd1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801ccd8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ccda:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ccde:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801cce0:	436f      	muls	r7, r5
 801cce2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801cce4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cce8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ccec:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ccee:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ccf2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ccf6:	fb05 fa0a 	mul.w	sl, r5, sl
 801ccfa:	44bc      	add	ip, r7
 801ccfc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cd00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd04:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cd08:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cd10:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cd14:	ea4c 050a 	orr.w	r5, ip, sl
 801cd18:	950d      	str	r5, [sp, #52]	@ 0x34
 801cd1a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801cd1c:	2dff      	cmp	r5, #255	@ 0xff
 801cd1e:	d020      	beq.n	801cd62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801cd20:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801cd22:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801cd26:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801cd28:	436f      	muls	r7, r5
 801cd2a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801cd2c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801cd30:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801cd32:	fb05 fa0c 	mul.w	sl, r5, ip
 801cd36:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cd3a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cd3e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd42:	44bc      	add	ip, r7
 801cd44:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cd48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cd4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cd54:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd58:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cd5c:	ea4c 050a 	orr.w	r5, ip, sl
 801cd60:	9509      	str	r5, [sp, #36]	@ 0x24
 801cd62:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801cd64:	2dff      	cmp	r5, #255	@ 0xff
 801cd66:	d020      	beq.n	801cdaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801cd68:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801cd6a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801cd6e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801cd70:	436f      	muls	r7, r5
 801cd72:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801cd74:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cd78:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801cd7c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801cd7e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cd82:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd86:	fb05 fa0a 	mul.w	sl, r5, sl
 801cd8a:	44bc      	add	ip, r7
 801cd8c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cd90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd94:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cd98:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cda0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cda4:	ea4c 050a 	orr.w	r5, ip, sl
 801cda8:	950e      	str	r5, [sp, #56]	@ 0x38
 801cdaa:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801cdac:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801cdb0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801cdb4:	2aff      	cmp	r2, #255	@ 0xff
 801cdb6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801cdba:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801cdbc:	fb0e f707 	mul.w	r7, lr, r7
 801cdc0:	fb01 770c 	mla	r7, r1, ip, r7
 801cdc4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801cdc8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801cdca:	fb00 770c 	mla	r7, r0, ip, r7
 801cdce:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801cdd2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801cdd4:	fb09 770c 	mla	r7, r9, ip, r7
 801cdd8:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801cddc:	fb0e fe0c 	mul.w	lr, lr, ip
 801cde0:	ea4f 2717 	mov.w	r7, r7, lsr #8
 801cde4:	fb01 e303 	mla	r3, r1, r3, lr
 801cde8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801cdea:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801cdee:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801cdf2:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801cdf4:	fb00 330a 	mla	r3, r0, sl, r3
 801cdf8:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801cdfc:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ce00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ce04:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ce08:	ea47 070c 	orr.w	r7, r7, ip
 801ce0c:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801ce10:	d11e      	bne.n	801ce50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 801ce12:	097a      	lsrs	r2, r7, #5
 801ce14:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801ce18:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ce1c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ce20:	f023 0307 	bic.w	r3, r3, #7
 801ce24:	4313      	orrs	r3, r2
 801ce26:	431f      	orrs	r7, r3
 801ce28:	f8a8 7000 	strh.w	r7, [r8]
 801ce2c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ce2e:	f108 0802 	add.w	r8, r8, #2
 801ce32:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ce36:	441c      	add	r4, r3
 801ce38:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ce3a:	441e      	add	r6, r3
 801ce3c:	e643      	b.n	801cac6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801ce3e:	2800      	cmp	r0, #0
 801ce40:	f43f af0a 	beq.w	801cc58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ce44:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801ce48:	9109      	str	r1, [sp, #36]	@ 0x24
 801ce4a:	0e09      	lsrs	r1, r1, #24
 801ce4c:	9111      	str	r1, [sp, #68]	@ 0x44
 801ce4e:	e703      	b.n	801cc58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ce50:	f8b8 1000 	ldrh.w	r1, [r8]
 801ce54:	43d2      	mvns	r2, r2
 801ce56:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801ce5a:	fa5f fe82 	uxtb.w	lr, r2
 801ce5e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ce62:	10c8      	asrs	r0, r1, #3
 801ce64:	00ca      	lsls	r2, r1, #3
 801ce66:	fb0c fc0e 	mul.w	ip, ip, lr
 801ce6a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ce6e:	b2d2      	uxtb	r2, r2
 801ce70:	f10c 0101 	add.w	r1, ip, #1
 801ce74:	fb00 f00e 	mul.w	r0, r0, lr
 801ce78:	fb02 f20e 	mul.w	r2, r2, lr
 801ce7c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ce80:	0c39      	lsrs	r1, r7, #16
 801ce82:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ce86:	490f      	ldr	r1, [pc, #60]	@ (801cec4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801ce88:	fa5f fc8c 	uxtb.w	ip, ip
 801ce8c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801ce90:	1c41      	adds	r1, r0, #1
 801ce92:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ce96:	1c51      	adds	r1, r2, #1
 801ce98:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ce9c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cea0:	00c0      	lsls	r0, r0, #3
 801cea2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cea6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ceaa:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ceae:	ea4c 0c00 	orr.w	ip, ip, r0
 801ceb2:	ea47 0c0c 	orr.w	ip, r7, ip
 801ceb6:	f8a8 c000 	strh.w	ip, [r8]
 801ceba:	e7b7      	b.n	801ce2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801cebc:	b01b      	add	sp, #108	@ 0x6c
 801cebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cec2:	bf00      	nop
 801cec4:	fffff800 	.word	0xfffff800

0801cec8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801cec8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cecc:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801ced0:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ced4:	2d00      	cmp	r5, #0
 801ced6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801ceda:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801cede:	fb05 0e03 	mla	lr, r5, r3, r0
 801cee2:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801cee6:	f2c0 808c 	blt.w	801d002 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801ceea:	45a9      	cmp	r9, r5
 801ceec:	f340 8089 	ble.w	801d002 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801cef0:	2800      	cmp	r0, #0
 801cef2:	f2c0 8084 	blt.w	801cffe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801cef6:	4580      	cmp	r8, r0
 801cef8:	f340 8081 	ble.w	801cffe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801cefc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801cf00:	f01e 0f01 	tst.w	lr, #1
 801cf04:	5d16      	ldrb	r6, [r2, r4]
 801cf06:	bf0c      	ite	eq
 801cf08:	f006 060f 	andeq.w	r6, r6, #15
 801cf0c:	1136      	asrne	r6, r6, #4
 801cf0e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801cf12:	b2f6      	uxtb	r6, r6
 801cf14:	1c44      	adds	r4, r0, #1
 801cf16:	d477      	bmi.n	801d008 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801cf18:	45a0      	cmp	r8, r4
 801cf1a:	dd75      	ble.n	801d008 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801cf1c:	2f00      	cmp	r7, #0
 801cf1e:	d075      	beq.n	801d00c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801cf20:	f10e 0a01 	add.w	sl, lr, #1
 801cf24:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801cf28:	f01a 0f01 	tst.w	sl, #1
 801cf2c:	5d14      	ldrb	r4, [r2, r4]
 801cf2e:	bf0c      	ite	eq
 801cf30:	f004 040f 	andeq.w	r4, r4, #15
 801cf34:	1124      	asrne	r4, r4, #4
 801cf36:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801cf3a:	b2e4      	uxtb	r4, r4
 801cf3c:	3501      	adds	r5, #1
 801cf3e:	d469      	bmi.n	801d014 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801cf40:	45a9      	cmp	r9, r5
 801cf42:	dd67      	ble.n	801d014 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801cf44:	f1bc 0f00 	cmp.w	ip, #0
 801cf48:	d067      	beq.n	801d01a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801cf4a:	2800      	cmp	r0, #0
 801cf4c:	db60      	blt.n	801d010 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801cf4e:	4580      	cmp	r8, r0
 801cf50:	dd5e      	ble.n	801d010 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801cf52:	eb03 090e 	add.w	r9, r3, lr
 801cf56:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801cf5a:	f019 0f01 	tst.w	r9, #1
 801cf5e:	5d55      	ldrb	r5, [r2, r5]
 801cf60:	bf0c      	ite	eq
 801cf62:	f005 050f 	andeq.w	r5, r5, #15
 801cf66:	112d      	asrne	r5, r5, #4
 801cf68:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801cf6c:	b2ed      	uxtb	r5, r5
 801cf6e:	3001      	adds	r0, #1
 801cf70:	d456      	bmi.n	801d020 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801cf72:	4580      	cmp	r8, r0
 801cf74:	dd54      	ble.n	801d020 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801cf76:	2f00      	cmp	r7, #0
 801cf78:	d054      	beq.n	801d024 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801cf7a:	3301      	adds	r3, #1
 801cf7c:	449e      	add	lr, r3
 801cf7e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801cf82:	f01e 0f01 	tst.w	lr, #1
 801cf86:	5cd0      	ldrb	r0, [r2, r3]
 801cf88:	bf0c      	ite	eq
 801cf8a:	f000 000f 	andeq.w	r0, r0, #15
 801cf8e:	1100      	asrne	r0, r0, #4
 801cf90:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801cf94:	b2c3      	uxtb	r3, r0
 801cf96:	b2ba      	uxth	r2, r7
 801cf98:	fa1f fc8c 	uxth.w	ip, ip
 801cf9c:	fb02 f00c 	mul.w	r0, r2, ip
 801cfa0:	0112      	lsls	r2, r2, #4
 801cfa2:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801cfa6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801cfaa:	1a12      	subs	r2, r2, r0
 801cfac:	fa1f fc8c 	uxth.w	ip, ip
 801cfb0:	b292      	uxth	r2, r2
 801cfb2:	eba7 070c 	sub.w	r7, r7, ip
 801cfb6:	4362      	muls	r2, r4
 801cfb8:	b2bf      	uxth	r7, r7
 801cfba:	fb06 2207 	mla	r2, r6, r7, r2
 801cfbe:	fb0c 2505 	mla	r5, ip, r5, r2
 801cfc2:	fb00 5303 	mla	r3, r0, r3, r5
 801cfc6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cfca:	b1b3      	cbz	r3, 801cffa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801cfcc:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801cfd0:	435a      	muls	r2, r3
 801cfd2:	1c53      	adds	r3, r2, #1
 801cfd4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cfd8:	4a2d      	ldr	r2, [pc, #180]	@ (801d090 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801cfda:	121b      	asrs	r3, r3, #8
 801cfdc:	6812      	ldr	r2, [r2, #0]
 801cfde:	2bff      	cmp	r3, #255	@ 0xff
 801cfe0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801cfe4:	d120      	bne.n	801d028 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801cfe6:	0950      	lsrs	r0, r2, #5
 801cfe8:	4b2a      	ldr	r3, [pc, #168]	@ (801d094 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801cfea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cfee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cff2:	4033      	ands	r3, r6
 801cff4:	4318      	orrs	r0, r3
 801cff6:	4302      	orrs	r2, r0
 801cff8:	800a      	strh	r2, [r1, #0]
 801cffa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cffe:	2600      	movs	r6, #0
 801d000:	e788      	b.n	801cf14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801d002:	2400      	movs	r4, #0
 801d004:	4626      	mov	r6, r4
 801d006:	e799      	b.n	801cf3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801d008:	2400      	movs	r4, #0
 801d00a:	e797      	b.n	801cf3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801d00c:	463c      	mov	r4, r7
 801d00e:	e795      	b.n	801cf3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801d010:	2500      	movs	r5, #0
 801d012:	e7ac      	b.n	801cf6e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801d014:	2300      	movs	r3, #0
 801d016:	461d      	mov	r5, r3
 801d018:	e7bd      	b.n	801cf96 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801d01a:	4663      	mov	r3, ip
 801d01c:	4665      	mov	r5, ip
 801d01e:	e7ba      	b.n	801cf96 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801d020:	2300      	movs	r3, #0
 801d022:	e7b8      	b.n	801cf96 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801d024:	463b      	mov	r3, r7
 801d026:	e7b6      	b.n	801cf96 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801d028:	880d      	ldrh	r5, [r1, #0]
 801d02a:	b29f      	uxth	r7, r3
 801d02c:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801d030:	43db      	mvns	r3, r3
 801d032:	122c      	asrs	r4, r5, #8
 801d034:	fb10 f007 	smulbb	r0, r0, r7
 801d038:	b2db      	uxtb	r3, r3
 801d03a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801d03e:	b2f6      	uxtb	r6, r6
 801d040:	b2d2      	uxtb	r2, r2
 801d042:	fb04 0403 	mla	r4, r4, r3, r0
 801d046:	10e8      	asrs	r0, r5, #3
 801d048:	fb12 f207 	smulbb	r2, r2, r7
 801d04c:	00ed      	lsls	r5, r5, #3
 801d04e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d052:	b2a4      	uxth	r4, r4
 801d054:	fb16 f607 	smulbb	r6, r6, r7
 801d058:	b2ed      	uxtb	r5, r5
 801d05a:	fb00 6603 	mla	r6, r0, r3, r6
 801d05e:	fb05 2303 	mla	r3, r5, r3, r2
 801d062:	b2b0      	uxth	r0, r6
 801d064:	b29a      	uxth	r2, r3
 801d066:	1c63      	adds	r3, r4, #1
 801d068:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801d06c:	1c53      	adds	r3, r2, #1
 801d06e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d072:	1c42      	adds	r2, r0, #1
 801d074:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801d078:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d07c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d080:	0940      	lsrs	r0, r0, #5
 801d082:	4323      	orrs	r3, r4
 801d084:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d088:	4303      	orrs	r3, r0
 801d08a:	800b      	strh	r3, [r1, #0]
 801d08c:	e7b5      	b.n	801cffa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801d08e:	bf00      	nop
 801d090:	200150b4 	.word	0x200150b4
 801d094:	00fff800 	.word	0x00fff800

0801d098 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d09c:	b097      	sub	sp, #92	@ 0x5c
 801d09e:	9214      	str	r2, [sp, #80]	@ 0x50
 801d0a0:	9309      	str	r3, [sp, #36]	@ 0x24
 801d0a2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801d0a4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801d0a8:	9015      	str	r0, [sp, #84]	@ 0x54
 801d0aa:	910d      	str	r1, [sp, #52]	@ 0x34
 801d0ac:	6850      	ldr	r0, [r2, #4]
 801d0ae:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d0b0:	6812      	ldr	r2, [r2, #0]
 801d0b2:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801d0b6:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801d0ba:	fb00 1303 	mla	r3, r0, r3, r1
 801d0be:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801d0c2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d0c4:	689b      	ldr	r3, [r3, #8]
 801d0c6:	3301      	adds	r3, #1
 801d0c8:	f023 0301 	bic.w	r3, r3, #1
 801d0cc:	930a      	str	r3, [sp, #40]	@ 0x28
 801d0ce:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d0d0:	681f      	ldr	r7, [r3, #0]
 801d0d2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d0d4:	2b00      	cmp	r3, #0
 801d0d6:	dc03      	bgt.n	801d0e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d0d8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801d0da:	2b00      	cmp	r3, #0
 801d0dc:	f340 8289 	ble.w	801d5f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801d0e0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d0e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d0e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d0ea:	1e48      	subs	r0, r1, #1
 801d0ec:	f102 3cff 	add.w	ip, r2, #4294967295
 801d0f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d0f2:	2b00      	cmp	r3, #0
 801d0f4:	f340 80c5 	ble.w	801d282 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801d0f8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d0fc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d100:	d406      	bmi.n	801d110 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d102:	4586      	cmp	lr, r0
 801d104:	da04      	bge.n	801d110 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d106:	2b00      	cmp	r3, #0
 801d108:	db02      	blt.n	801d110 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d10a:	4563      	cmp	r3, ip
 801d10c:	f2c0 80ba 	blt.w	801d284 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801d110:	f11e 0e01 	adds.w	lr, lr, #1
 801d114:	f100 80ab 	bmi.w	801d26e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801d118:	4571      	cmp	r1, lr
 801d11a:	f2c0 80a8 	blt.w	801d26e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801d11e:	3301      	adds	r3, #1
 801d120:	f100 80a5 	bmi.w	801d26e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801d124:	429a      	cmp	r2, r3
 801d126:	f2c0 80a2 	blt.w	801d26e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801d12a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d12c:	46c8      	mov	r8, r9
 801d12e:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801d132:	930e      	str	r3, [sp, #56]	@ 0x38
 801d134:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d136:	2b00      	cmp	r3, #0
 801d138:	f340 80c4 	ble.w	801d2c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801d13c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d13e:	1430      	asrs	r0, r6, #16
 801d140:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d144:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d148:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801d14c:	1423      	asrs	r3, r4, #16
 801d14e:	f100 814f 	bmi.w	801d3f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d152:	f10c 3bff 	add.w	fp, ip, #4294967295
 801d156:	455b      	cmp	r3, fp
 801d158:	f280 814a 	bge.w	801d3f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d15c:	2800      	cmp	r0, #0
 801d15e:	f2c0 8147 	blt.w	801d3f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d162:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d166:	4558      	cmp	r0, fp
 801d168:	f280 8142 	bge.w	801d3f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d16c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801d16e:	fb00 3305 	mla	r3, r0, r5, r3
 801d172:	0858      	lsrs	r0, r3, #1
 801d174:	07dd      	lsls	r5, r3, #31
 801d176:	f817 c000 	ldrb.w	ip, [r7, r0]
 801d17a:	bf54      	ite	pl
 801d17c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d180:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d184:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d188:	fa5f fc8c 	uxtb.w	ip, ip
 801d18c:	2a00      	cmp	r2, #0
 801d18e:	f000 80dd 	beq.w	801d34c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801d192:	1c58      	adds	r0, r3, #1
 801d194:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801d198:	07c0      	lsls	r0, r0, #31
 801d19a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d19e:	bf54      	ite	pl
 801d1a0:	f00e 0e0f 	andpl.w	lr, lr, #15
 801d1a4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801d1a8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801d1ac:	fa5f f08e 	uxtb.w	r0, lr
 801d1b0:	9010      	str	r0, [sp, #64]	@ 0x40
 801d1b2:	b1d9      	cbz	r1, 801d1ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801d1b4:	4453      	add	r3, sl
 801d1b6:	0858      	lsrs	r0, r3, #1
 801d1b8:	07dd      	lsls	r5, r3, #31
 801d1ba:	f103 0301 	add.w	r3, r3, #1
 801d1be:	5c38      	ldrb	r0, [r7, r0]
 801d1c0:	bf54      	ite	pl
 801d1c2:	f000 000f 	andpl.w	r0, r0, #15
 801d1c6:	1100      	asrmi	r0, r0, #4
 801d1c8:	07dd      	lsls	r5, r3, #31
 801d1ca:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801d1ce:	b2c0      	uxtb	r0, r0
 801d1d0:	900b      	str	r0, [sp, #44]	@ 0x2c
 801d1d2:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801d1d6:	f817 e000 	ldrb.w	lr, [r7, r0]
 801d1da:	bf54      	ite	pl
 801d1dc:	f00e 030f 	andpl.w	r3, lr, #15
 801d1e0:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801d1e4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d1e8:	b2db      	uxtb	r3, r3
 801d1ea:	9311      	str	r3, [sp, #68]	@ 0x44
 801d1ec:	b292      	uxth	r2, r2
 801d1ee:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801d1f0:	b289      	uxth	r1, r1
 801d1f2:	fb02 f301 	mul.w	r3, r2, r1
 801d1f6:	0112      	lsls	r2, r2, #4
 801d1f8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801d1fc:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801d200:	1ad2      	subs	r2, r2, r3
 801d202:	b289      	uxth	r1, r1
 801d204:	b292      	uxth	r2, r2
 801d206:	1a40      	subs	r0, r0, r1
 801d208:	436a      	muls	r2, r5
 801d20a:	b280      	uxth	r0, r0
 801d20c:	fb0c 2c00 	mla	ip, ip, r0, r2
 801d210:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801d212:	fb01 c102 	mla	r1, r1, r2, ip
 801d216:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801d218:	fb03 1302 	mla	r3, r3, r2, r1
 801d21c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d220:	b1db      	cbz	r3, 801d25a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d222:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d224:	4353      	muls	r3, r2
 801d226:	1c5a      	adds	r2, r3, #1
 801d228:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d22c:	4ac6      	ldr	r2, [pc, #792]	@ (801d548 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801d22e:	121b      	asrs	r3, r3, #8
 801d230:	6812      	ldr	r2, [r2, #0]
 801d232:	2bff      	cmp	r3, #255	@ 0xff
 801d234:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801d238:	f040 8099 	bne.w	801d36e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801d23c:	0953      	lsrs	r3, r2, #5
 801d23e:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801d242:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d246:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d24a:	f02c 0c07 	bic.w	ip, ip, #7
 801d24e:	ea43 0c0c 	orr.w	ip, r3, ip
 801d252:	ea4c 0202 	orr.w	r2, ip, r2
 801d256:	f8a8 2000 	strh.w	r2, [r8]
 801d25a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d25c:	f108 0802 	add.w	r8, r8, #2
 801d260:	441c      	add	r4, r3
 801d262:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d264:	441e      	add	r6, r3
 801d266:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d268:	3b01      	subs	r3, #1
 801d26a:	930e      	str	r3, [sp, #56]	@ 0x38
 801d26c:	e762      	b.n	801d134 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d26e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d270:	f109 0902 	add.w	r9, r9, #2
 801d274:	441c      	add	r4, r3
 801d276:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d278:	441e      	add	r6, r3
 801d27a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d27c:	3b01      	subs	r3, #1
 801d27e:	9309      	str	r3, [sp, #36]	@ 0x24
 801d280:	e736      	b.n	801d0f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d282:	d024      	beq.n	801d2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d284:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d286:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801d288:	3b01      	subs	r3, #1
 801d28a:	fb00 4003 	mla	r0, r0, r3, r4
 801d28e:	1400      	asrs	r0, r0, #16
 801d290:	f53f af4b 	bmi.w	801d12a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d294:	3901      	subs	r1, #1
 801d296:	4288      	cmp	r0, r1
 801d298:	f6bf af47 	bge.w	801d12a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d29c:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801d29e:	fb01 6303 	mla	r3, r1, r3, r6
 801d2a2:	141b      	asrs	r3, r3, #16
 801d2a4:	f53f af41 	bmi.w	801d12a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d2a8:	3a01      	subs	r2, #1
 801d2aa:	4293      	cmp	r3, r2
 801d2ac:	f6bf af3d 	bge.w	801d12a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d2b0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801d2b4:	46c8      	mov	r8, r9
 801d2b6:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801d2ba:	930e      	str	r3, [sp, #56]	@ 0x38
 801d2bc:	f1bb 0f00 	cmp.w	fp, #0
 801d2c0:	f300 80b7 	bgt.w	801d432 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 801d2c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d2c6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801d2ca:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801d2ce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d2d0:	2b00      	cmp	r3, #0
 801d2d2:	f340 818e 	ble.w	801d5f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801d2d6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d2da:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d2dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d2e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d2e4:	eef0 6a62 	vmov.f32	s13, s5
 801d2e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d2ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d2f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d2f4:	ee16 4a90 	vmov	r4, s13
 801d2f8:	eef0 6a43 	vmov.f32	s13, s6
 801d2fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d300:	ee16 6a90 	vmov	r6, s13
 801d304:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d308:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d30c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d310:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d314:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d318:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d31c:	ee12 2a90 	vmov	r2, s5
 801d320:	eef0 2a47 	vmov.f32	s5, s14
 801d324:	fb92 f3f3 	sdiv	r3, r2, r3
 801d328:	ee13 2a10 	vmov	r2, s6
 801d32c:	9323      	str	r3, [sp, #140]	@ 0x8c
 801d32e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d330:	eeb0 3a67 	vmov.f32	s6, s15
 801d334:	fb92 f3f3 	sdiv	r3, r2, r3
 801d338:	9324      	str	r3, [sp, #144]	@ 0x90
 801d33a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d33c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d33e:	3b01      	subs	r3, #1
 801d340:	930d      	str	r3, [sp, #52]	@ 0x34
 801d342:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d344:	bf08      	it	eq
 801d346:	4613      	moveq	r3, r2
 801d348:	9309      	str	r3, [sp, #36]	@ 0x24
 801d34a:	e6c2      	b.n	801d0d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d34c:	2900      	cmp	r1, #0
 801d34e:	f43f af4d 	beq.w	801d1ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801d352:	eb0a 0003 	add.w	r0, sl, r3
 801d356:	0843      	lsrs	r3, r0, #1
 801d358:	07c0      	lsls	r0, r0, #31
 801d35a:	5cfb      	ldrb	r3, [r7, r3]
 801d35c:	bf54      	ite	pl
 801d35e:	f003 030f 	andpl.w	r3, r3, #15
 801d362:	111b      	asrmi	r3, r3, #4
 801d364:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d368:	b2db      	uxtb	r3, r3
 801d36a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d36c:	e73e      	b.n	801d1ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801d36e:	f8b8 e000 	ldrh.w	lr, [r8]
 801d372:	fa1f fb83 	uxth.w	fp, r3
 801d376:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801d37a:	43db      	mvns	r3, r3
 801d37c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801d380:	fb11 f10b 	smulbb	r1, r1, fp
 801d384:	b2db      	uxtb	r3, r3
 801d386:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d38a:	fa5f fc8c 	uxtb.w	ip, ip
 801d38e:	b2d2      	uxtb	r2, r2
 801d390:	fb00 1003 	mla	r0, r0, r3, r1
 801d394:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801d398:	fb1c fc0b 	smulbb	ip, ip, fp
 801d39c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d3a0:	b280      	uxth	r0, r0
 801d3a2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d3a6:	fb12 fb0b 	smulbb	fp, r2, fp
 801d3aa:	fa5f fe8e 	uxtb.w	lr, lr
 801d3ae:	fb01 cc03 	mla	ip, r1, r3, ip
 801d3b2:	fb0e bb03 	mla	fp, lr, r3, fp
 801d3b6:	1c43      	adds	r3, r0, #1
 801d3b8:	fa1f fc8c 	uxth.w	ip, ip
 801d3bc:	fa1f fb8b 	uxth.w	fp, fp
 801d3c0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d3c4:	f10c 0101 	add.w	r1, ip, #1
 801d3c8:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801d3cc:	f10b 0001 	add.w	r0, fp, #1
 801d3d0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801d3d4:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801d3d8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d3dc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801d3e0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d3e4:	4318      	orrs	r0, r3
 801d3e6:	ea40 000c 	orr.w	r0, r0, ip
 801d3ea:	f8a8 0000 	strh.w	r0, [r8]
 801d3ee:	e734      	b.n	801d25a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d3f0:	f113 0b01 	adds.w	fp, r3, #1
 801d3f4:	f53f af31 	bmi.w	801d25a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d3f8:	45dc      	cmp	ip, fp
 801d3fa:	f6ff af2e 	blt.w	801d25a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d3fe:	f110 0b01 	adds.w	fp, r0, #1
 801d402:	f53f af2a 	bmi.w	801d25a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d406:	45de      	cmp	lr, fp
 801d408:	f6ff af27 	blt.w	801d25a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d40c:	9302      	str	r3, [sp, #8]
 801d40e:	fa0f f38e 	sxth.w	r3, lr
 801d412:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801d414:	9301      	str	r3, [sp, #4]
 801d416:	fa0f f38c 	sxth.w	r3, ip
 801d41a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801d41e:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801d422:	9300      	str	r3, [sp, #0]
 801d424:	463a      	mov	r2, r7
 801d426:	4653      	mov	r3, sl
 801d428:	4641      	mov	r1, r8
 801d42a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801d42c:	f7ff fd4c 	bl	801cec8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801d430:	e713      	b.n	801d25a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d432:	1422      	asrs	r2, r4, #16
 801d434:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801d436:	1433      	asrs	r3, r6, #16
 801d438:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801d43c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d440:	fb05 2303 	mla	r3, r5, r3, r2
 801d444:	085a      	lsrs	r2, r3, #1
 801d446:	07dd      	lsls	r5, r3, #31
 801d448:	5cba      	ldrb	r2, [r7, r2]
 801d44a:	bf54      	ite	pl
 801d44c:	f002 020f 	andpl.w	r2, r2, #15
 801d450:	1112      	asrmi	r2, r2, #4
 801d452:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d456:	b2d2      	uxtb	r2, r2
 801d458:	2900      	cmp	r1, #0
 801d45a:	d077      	beq.n	801d54c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801d45c:	f103 0e01 	add.w	lr, r3, #1
 801d460:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801d464:	f01e 0f01 	tst.w	lr, #1
 801d468:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d46c:	bf0c      	ite	eq
 801d46e:	f00c 0c0f 	andeq.w	ip, ip, #15
 801d472:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801d476:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d47a:	fa5f f58c 	uxtb.w	r5, ip
 801d47e:	9512      	str	r5, [sp, #72]	@ 0x48
 801d480:	b308      	cbz	r0, 801d4c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801d482:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d484:	442b      	add	r3, r5
 801d486:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801d48a:	07dd      	lsls	r5, r3, #31
 801d48c:	f103 0301 	add.w	r3, r3, #1
 801d490:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d494:	bf54      	ite	pl
 801d496:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d49a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d49e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d4a2:	fa5f f58c 	uxtb.w	r5, ip
 801d4a6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801d4aa:	950c      	str	r5, [sp, #48]	@ 0x30
 801d4ac:	07dd      	lsls	r5, r3, #31
 801d4ae:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d4b2:	bf54      	ite	pl
 801d4b4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d4b8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d4bc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d4c0:	fa5f f38c 	uxtb.w	r3, ip
 801d4c4:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d4c6:	b289      	uxth	r1, r1
 801d4c8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801d4ca:	b280      	uxth	r0, r0
 801d4cc:	fb01 f300 	mul.w	r3, r1, r0
 801d4d0:	0109      	lsls	r1, r1, #4
 801d4d2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801d4d6:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801d4da:	1ac9      	subs	r1, r1, r3
 801d4dc:	b280      	uxth	r0, r0
 801d4de:	b289      	uxth	r1, r1
 801d4e0:	ebac 0c00 	sub.w	ip, ip, r0
 801d4e4:	4369      	muls	r1, r5
 801d4e6:	fa1f fc8c 	uxth.w	ip, ip
 801d4ea:	fb02 120c 	mla	r2, r2, ip, r1
 801d4ee:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801d4f0:	fb00 2001 	mla	r0, r0, r1, r2
 801d4f4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801d4f6:	fb03 0302 	mla	r3, r3, r2, r0
 801d4fa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d4fe:	b1d3      	cbz	r3, 801d536 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801d500:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d502:	4353      	muls	r3, r2
 801d504:	1c5a      	adds	r2, r3, #1
 801d506:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d50a:	4a0f      	ldr	r2, [pc, #60]	@ (801d548 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801d50c:	121b      	asrs	r3, r3, #8
 801d50e:	6812      	ldr	r2, [r2, #0]
 801d510:	2bff      	cmp	r3, #255	@ 0xff
 801d512:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801d516:	d12d      	bne.n	801d574 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 801d518:	0953      	lsrs	r3, r2, #5
 801d51a:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801d51e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d522:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d526:	f02c 0c07 	bic.w	ip, ip, #7
 801d52a:	ea43 0c0c 	orr.w	ip, r3, ip
 801d52e:	ea4c 0202 	orr.w	r2, ip, r2
 801d532:	f8a8 2000 	strh.w	r2, [r8]
 801d536:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d538:	f108 0802 	add.w	r8, r8, #2
 801d53c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d540:	441c      	add	r4, r3
 801d542:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d544:	441e      	add	r6, r3
 801d546:	e6b9      	b.n	801d2bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801d548:	200150b4 	.word	0x200150b4
 801d54c:	2800      	cmp	r0, #0
 801d54e:	d0ba      	beq.n	801d4c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801d550:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d552:	442b      	add	r3, r5
 801d554:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801d558:	07db      	lsls	r3, r3, #31
 801d55a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d55e:	bf54      	ite	pl
 801d560:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d564:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d568:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d56c:	fa5f f38c 	uxtb.w	r3, ip
 801d570:	930c      	str	r3, [sp, #48]	@ 0x30
 801d572:	e7a8      	b.n	801d4c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801d574:	f8b8 e000 	ldrh.w	lr, [r8]
 801d578:	fa1f fa83 	uxth.w	sl, r3
 801d57c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801d580:	43db      	mvns	r3, r3
 801d582:	ea4f 202e 	mov.w	r0, lr, asr #8
 801d586:	fb11 f10a 	smulbb	r1, r1, sl
 801d58a:	b2db      	uxtb	r3, r3
 801d58c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d590:	b2d2      	uxtb	r2, r2
 801d592:	fa5f fc8c 	uxtb.w	ip, ip
 801d596:	fb00 1003 	mla	r0, r0, r3, r1
 801d59a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801d59e:	fb12 f20a 	smulbb	r2, r2, sl
 801d5a2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d5a6:	b280      	uxth	r0, r0
 801d5a8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d5ac:	fb1c fc0a 	smulbb	ip, ip, sl
 801d5b0:	fa5f fe8e 	uxtb.w	lr, lr
 801d5b4:	fb0e 2203 	mla	r2, lr, r3, r2
 801d5b8:	fb01 cc03 	mla	ip, r1, r3, ip
 801d5bc:	1c43      	adds	r3, r0, #1
 801d5be:	b292      	uxth	r2, r2
 801d5c0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d5c4:	1c51      	adds	r1, r2, #1
 801d5c6:	fa1f fc8c 	uxth.w	ip, ip
 801d5ca:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801d5ce:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801d5d2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801d5d6:	4308      	orrs	r0, r1
 801d5d8:	f10c 0101 	add.w	r1, ip, #1
 801d5dc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801d5e0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d5e4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d5e8:	ea40 000c 	orr.w	r0, r0, ip
 801d5ec:	f8a8 0000 	strh.w	r0, [r8]
 801d5f0:	e7a1      	b.n	801d536 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801d5f2:	b017      	add	sp, #92	@ 0x5c
 801d5f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d5f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801d5f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d5fc:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801d600:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801d604:	2d00      	cmp	r5, #0
 801d606:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801d60a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801d60e:	fb05 0e03 	mla	lr, r5, r3, r0
 801d612:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801d616:	f2c0 80b0 	blt.w	801d77a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801d61a:	45a9      	cmp	r9, r5
 801d61c:	f340 80ad 	ble.w	801d77a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801d620:	2800      	cmp	r0, #0
 801d622:	f2c0 80a8 	blt.w	801d776 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801d626:	4580      	cmp	r8, r0
 801d628:	f340 80a5 	ble.w	801d776 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801d62c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801d630:	f01e 0f01 	tst.w	lr, #1
 801d634:	5d16      	ldrb	r6, [r2, r4]
 801d636:	bf0c      	ite	eq
 801d638:	f006 060f 	andeq.w	r6, r6, #15
 801d63c:	1136      	asrne	r6, r6, #4
 801d63e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801d642:	b2f6      	uxtb	r6, r6
 801d644:	1c44      	adds	r4, r0, #1
 801d646:	f100 809b 	bmi.w	801d780 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801d64a:	45a0      	cmp	r8, r4
 801d64c:	f340 8098 	ble.w	801d780 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801d650:	2f00      	cmp	r7, #0
 801d652:	f000 8097 	beq.w	801d784 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801d656:	f10e 0a01 	add.w	sl, lr, #1
 801d65a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801d65e:	f01a 0f01 	tst.w	sl, #1
 801d662:	5d14      	ldrb	r4, [r2, r4]
 801d664:	bf0c      	ite	eq
 801d666:	f004 040f 	andeq.w	r4, r4, #15
 801d66a:	1124      	asrne	r4, r4, #4
 801d66c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801d670:	b2e4      	uxtb	r4, r4
 801d672:	3501      	adds	r5, #1
 801d674:	f100 808a 	bmi.w	801d78c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801d678:	45a9      	cmp	r9, r5
 801d67a:	f340 8087 	ble.w	801d78c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801d67e:	f1bc 0f00 	cmp.w	ip, #0
 801d682:	f000 8086 	beq.w	801d792 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801d686:	2800      	cmp	r0, #0
 801d688:	db7e      	blt.n	801d788 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801d68a:	4580      	cmp	r8, r0
 801d68c:	dd7c      	ble.n	801d788 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801d68e:	eb03 090e 	add.w	r9, r3, lr
 801d692:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801d696:	f019 0f01 	tst.w	r9, #1
 801d69a:	5d55      	ldrb	r5, [r2, r5]
 801d69c:	bf0c      	ite	eq
 801d69e:	f005 050f 	andeq.w	r5, r5, #15
 801d6a2:	112d      	asrne	r5, r5, #4
 801d6a4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801d6a8:	b2ed      	uxtb	r5, r5
 801d6aa:	3001      	adds	r0, #1
 801d6ac:	d474      	bmi.n	801d798 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801d6ae:	4580      	cmp	r8, r0
 801d6b0:	dd72      	ble.n	801d798 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801d6b2:	2f00      	cmp	r7, #0
 801d6b4:	d072      	beq.n	801d79c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801d6b6:	3301      	adds	r3, #1
 801d6b8:	449e      	add	lr, r3
 801d6ba:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801d6be:	f01e 0f01 	tst.w	lr, #1
 801d6c2:	5cd0      	ldrb	r0, [r2, r3]
 801d6c4:	bf0c      	ite	eq
 801d6c6:	f000 000f 	andeq.w	r0, r0, #15
 801d6ca:	1100      	asrne	r0, r0, #4
 801d6cc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801d6d0:	b2c3      	uxtb	r3, r0
 801d6d2:	b2ba      	uxth	r2, r7
 801d6d4:	fa1f fc8c 	uxth.w	ip, ip
 801d6d8:	fb02 f00c 	mul.w	r0, r2, ip
 801d6dc:	0112      	lsls	r2, r2, #4
 801d6de:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801d6e2:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801d6e6:	1a12      	subs	r2, r2, r0
 801d6e8:	fa1f fc8c 	uxth.w	ip, ip
 801d6ec:	b292      	uxth	r2, r2
 801d6ee:	eba7 070c 	sub.w	r7, r7, ip
 801d6f2:	4362      	muls	r2, r4
 801d6f4:	b2bf      	uxth	r7, r7
 801d6f6:	fb06 2207 	mla	r2, r6, r7, r2
 801d6fa:	fb0c 2505 	mla	r5, ip, r5, r2
 801d6fe:	fb00 5303 	mla	r3, r0, r3, r5
 801d702:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d706:	b3a3      	cbz	r3, 801d772 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801d708:	4a25      	ldr	r2, [pc, #148]	@ (801d7a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801d70a:	880e      	ldrh	r6, [r1, #0]
 801d70c:	6815      	ldr	r5, [r2, #0]
 801d70e:	b29a      	uxth	r2, r3
 801d710:	1234      	asrs	r4, r6, #8
 801d712:	43db      	mvns	r3, r3
 801d714:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801d718:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801d71c:	b2db      	uxtb	r3, r3
 801d71e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801d722:	fb10 f002 	smulbb	r0, r0, r2
 801d726:	b2ed      	uxtb	r5, r5
 801d728:	fb17 f702 	smulbb	r7, r7, r2
 801d72c:	fb04 0403 	mla	r4, r4, r3, r0
 801d730:	10f0      	asrs	r0, r6, #3
 801d732:	fb15 f202 	smulbb	r2, r5, r2
 801d736:	00f6      	lsls	r6, r6, #3
 801d738:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d73c:	b2a4      	uxth	r4, r4
 801d73e:	b2f6      	uxtb	r6, r6
 801d740:	fb00 7003 	mla	r0, r0, r3, r7
 801d744:	fb06 2303 	mla	r3, r6, r3, r2
 801d748:	b280      	uxth	r0, r0
 801d74a:	b29a      	uxth	r2, r3
 801d74c:	1c63      	adds	r3, r4, #1
 801d74e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801d752:	1c53      	adds	r3, r2, #1
 801d754:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d758:	1c42      	adds	r2, r0, #1
 801d75a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801d75e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d762:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d766:	0940      	lsrs	r0, r0, #5
 801d768:	4323      	orrs	r3, r4
 801d76a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d76e:	4303      	orrs	r3, r0
 801d770:	800b      	strh	r3, [r1, #0]
 801d772:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d776:	2600      	movs	r6, #0
 801d778:	e764      	b.n	801d644 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801d77a:	2400      	movs	r4, #0
 801d77c:	4626      	mov	r6, r4
 801d77e:	e778      	b.n	801d672 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801d780:	2400      	movs	r4, #0
 801d782:	e776      	b.n	801d672 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801d784:	463c      	mov	r4, r7
 801d786:	e774      	b.n	801d672 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801d788:	2500      	movs	r5, #0
 801d78a:	e78e      	b.n	801d6aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801d78c:	2300      	movs	r3, #0
 801d78e:	461d      	mov	r5, r3
 801d790:	e79f      	b.n	801d6d2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801d792:	4663      	mov	r3, ip
 801d794:	4665      	mov	r5, ip
 801d796:	e79c      	b.n	801d6d2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801d798:	2300      	movs	r3, #0
 801d79a:	e79a      	b.n	801d6d2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801d79c:	463b      	mov	r3, r7
 801d79e:	e798      	b.n	801d6d2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801d7a0:	200150b4 	.word	0x200150b4

0801d7a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d7a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d7a8:	b093      	sub	sp, #76	@ 0x4c
 801d7aa:	461d      	mov	r5, r3
 801d7ac:	920c      	str	r2, [sp, #48]	@ 0x30
 801d7ae:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d7b0:	9011      	str	r0, [sp, #68]	@ 0x44
 801d7b2:	9107      	str	r1, [sp, #28]
 801d7b4:	6850      	ldr	r0, [r2, #4]
 801d7b6:	6812      	ldr	r2, [r2, #0]
 801d7b8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801d7bc:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801d7c0:	fb00 1303 	mla	r3, r0, r3, r1
 801d7c4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801d7c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d7ca:	689b      	ldr	r3, [r3, #8]
 801d7cc:	3301      	adds	r3, #1
 801d7ce:	f023 0301 	bic.w	r3, r3, #1
 801d7d2:	9306      	str	r3, [sp, #24]
 801d7d4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d7d6:	681f      	ldr	r7, [r3, #0]
 801d7d8:	9b07      	ldr	r3, [sp, #28]
 801d7da:	2b00      	cmp	r3, #0
 801d7dc:	dc03      	bgt.n	801d7e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801d7de:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d7e0:	2b00      	cmp	r3, #0
 801d7e2:	f340 8267 	ble.w	801dcb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801d7e6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d7e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d7ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d7f0:	1e48      	subs	r0, r1, #1
 801d7f2:	f102 3cff 	add.w	ip, r2, #4294967295
 801d7f6:	2d00      	cmp	r5, #0
 801d7f8:	f340 80b7 	ble.w	801d96a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d7fc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d800:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d804:	d406      	bmi.n	801d814 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d806:	4586      	cmp	lr, r0
 801d808:	da04      	bge.n	801d814 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d80a:	2b00      	cmp	r3, #0
 801d80c:	db02      	blt.n	801d814 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d80e:	4563      	cmp	r3, ip
 801d810:	f2c0 80ac 	blt.w	801d96c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d814:	f11e 0e01 	adds.w	lr, lr, #1
 801d818:	f100 809f 	bmi.w	801d95a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801d81c:	4571      	cmp	r1, lr
 801d81e:	f2c0 809c 	blt.w	801d95a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801d822:	3301      	adds	r3, #1
 801d824:	f100 8099 	bmi.w	801d95a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801d828:	429a      	cmp	r2, r3
 801d82a:	f2c0 8096 	blt.w	801d95a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801d82e:	46c8      	mov	r8, r9
 801d830:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801d834:	9509      	str	r5, [sp, #36]	@ 0x24
 801d836:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d838:	2b00      	cmp	r3, #0
 801d83a:	f340 80b5 	ble.w	801d9a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d83e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801d842:	1430      	asrs	r0, r6, #16
 801d844:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d848:	9308      	str	r3, [sp, #32]
 801d84a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d84c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801d850:	1423      	asrs	r3, r4, #16
 801d852:	f100 813f 	bmi.w	801dad4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801d856:	f10c 3bff 	add.w	fp, ip, #4294967295
 801d85a:	455b      	cmp	r3, fp
 801d85c:	f280 813a 	bge.w	801dad4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801d860:	2800      	cmp	r0, #0
 801d862:	f2c0 8137 	blt.w	801dad4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801d866:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d86a:	4558      	cmp	r0, fp
 801d86c:	f280 8132 	bge.w	801dad4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801d870:	9a06      	ldr	r2, [sp, #24]
 801d872:	fb00 3302 	mla	r3, r0, r2, r3
 801d876:	0858      	lsrs	r0, r3, #1
 801d878:	07da      	lsls	r2, r3, #31
 801d87a:	9a08      	ldr	r2, [sp, #32]
 801d87c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801d880:	bf54      	ite	pl
 801d882:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d886:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d88a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d88e:	fa5f fc8c 	uxtb.w	ip, ip
 801d892:	2a00      	cmp	r2, #0
 801d894:	f000 80cc 	beq.w	801da30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801d898:	1c58      	adds	r0, r3, #1
 801d89a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801d89e:	07c0      	lsls	r0, r0, #31
 801d8a0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d8a4:	bf54      	ite	pl
 801d8a6:	f00e 0e0f 	andpl.w	lr, lr, #15
 801d8aa:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801d8ae:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801d8b2:	fa5f fe8e 	uxtb.w	lr, lr
 801d8b6:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 801d8ba:	b1b9      	cbz	r1, 801d8ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801d8bc:	4453      	add	r3, sl
 801d8be:	0858      	lsrs	r0, r3, #1
 801d8c0:	07da      	lsls	r2, r3, #31
 801d8c2:	5c38      	ldrb	r0, [r7, r0]
 801d8c4:	bf54      	ite	pl
 801d8c6:	f000 000f 	andpl.w	r0, r0, #15
 801d8ca:	1100      	asrmi	r0, r0, #4
 801d8cc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801d8d0:	b2c0      	uxtb	r0, r0
 801d8d2:	900a      	str	r0, [sp, #40]	@ 0x28
 801d8d4:	1c58      	adds	r0, r3, #1
 801d8d6:	0843      	lsrs	r3, r0, #1
 801d8d8:	07c2      	lsls	r2, r0, #31
 801d8da:	5cfb      	ldrb	r3, [r7, r3]
 801d8dc:	bf54      	ite	pl
 801d8de:	f003 030f 	andpl.w	r3, r3, #15
 801d8e2:	111b      	asrmi	r3, r3, #4
 801d8e4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d8e8:	b2db      	uxtb	r3, r3
 801d8ea:	930e      	str	r3, [sp, #56]	@ 0x38
 801d8ec:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801d8f0:	b289      	uxth	r1, r1
 801d8f2:	fb02 f301 	mul.w	r3, r2, r1
 801d8f6:	0112      	lsls	r2, r2, #4
 801d8f8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801d8fc:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801d900:	1ad2      	subs	r2, r2, r3
 801d902:	b289      	uxth	r1, r1
 801d904:	b292      	uxth	r2, r2
 801d906:	1a40      	subs	r0, r0, r1
 801d908:	fa1f fe80 	uxth.w	lr, r0
 801d90c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801d90e:	4342      	muls	r2, r0
 801d910:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801d914:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d916:	fb01 c102 	mla	r1, r1, r2, ip
 801d91a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801d91c:	fb03 1302 	mla	r3, r3, r2, r1
 801d920:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d924:	2bff      	cmp	r3, #255	@ 0xff
 801d926:	f040 8094 	bne.w	801da52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801d92a:	4bbf      	ldr	r3, [pc, #764]	@ (801dc28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801d92c:	681a      	ldr	r2, [r3, #0]
 801d92e:	4bbf      	ldr	r3, [pc, #764]	@ (801dc2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801d930:	0951      	lsrs	r1, r2, #5
 801d932:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801d936:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d93a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d93e:	430b      	orrs	r3, r1
 801d940:	4313      	orrs	r3, r2
 801d942:	f8a8 3000 	strh.w	r3, [r8]
 801d946:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d948:	f108 0802 	add.w	r8, r8, #2
 801d94c:	441c      	add	r4, r3
 801d94e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d950:	441e      	add	r6, r3
 801d952:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d954:	3b01      	subs	r3, #1
 801d956:	9309      	str	r3, [sp, #36]	@ 0x24
 801d958:	e76d      	b.n	801d836 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d95a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d95c:	3d01      	subs	r5, #1
 801d95e:	f109 0902 	add.w	r9, r9, #2
 801d962:	441c      	add	r4, r3
 801d964:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d966:	441e      	add	r6, r3
 801d968:	e745      	b.n	801d7f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d96a:	d021      	beq.n	801d9b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801d96c:	1e6b      	subs	r3, r5, #1
 801d96e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d970:	fb00 4003 	mla	r0, r0, r3, r4
 801d974:	1400      	asrs	r0, r0, #16
 801d976:	f53f af5a 	bmi.w	801d82e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801d97a:	3901      	subs	r1, #1
 801d97c:	4288      	cmp	r0, r1
 801d97e:	f6bf af56 	bge.w	801d82e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801d982:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801d984:	fb01 6303 	mla	r3, r1, r3, r6
 801d988:	141b      	asrs	r3, r3, #16
 801d98a:	f53f af50 	bmi.w	801d82e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801d98e:	3a01      	subs	r2, #1
 801d990:	4293      	cmp	r3, r2
 801d992:	f6bf af4c 	bge.w	801d82e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801d996:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801d99a:	46a8      	mov	r8, r5
 801d99c:	46ce      	mov	lr, r9
 801d99e:	9308      	str	r3, [sp, #32]
 801d9a0:	f1b8 0f00 	cmp.w	r8, #0
 801d9a4:	f300 80b6 	bgt.w	801db14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d9a8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d9ac:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801d9b0:	9b07      	ldr	r3, [sp, #28]
 801d9b2:	2b00      	cmp	r3, #0
 801d9b4:	f340 817e 	ble.w	801dcb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801d9b8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d9bc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d9be:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d9c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d9c6:	eef0 6a62 	vmov.f32	s13, s5
 801d9ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d9ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d9d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d9d6:	ee16 4a90 	vmov	r4, s13
 801d9da:	eef0 6a43 	vmov.f32	s13, s6
 801d9de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d9e2:	ee16 6a90 	vmov	r6, s13
 801d9e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d9ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d9ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d9f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d9f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d9fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d9fe:	ee12 2a90 	vmov	r2, s5
 801da02:	eef0 2a47 	vmov.f32	s5, s14
 801da06:	fb92 f3f3 	sdiv	r3, r2, r3
 801da0a:	ee13 2a10 	vmov	r2, s6
 801da0e:	931f      	str	r3, [sp, #124]	@ 0x7c
 801da10:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801da12:	eeb0 3a67 	vmov.f32	s6, s15
 801da16:	fb92 f3f3 	sdiv	r3, r2, r3
 801da1a:	9320      	str	r3, [sp, #128]	@ 0x80
 801da1c:	9b07      	ldr	r3, [sp, #28]
 801da1e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801da20:	3b01      	subs	r3, #1
 801da22:	9307      	str	r3, [sp, #28]
 801da24:	bf08      	it	eq
 801da26:	4615      	moveq	r5, r2
 801da28:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801da2a:	bf18      	it	ne
 801da2c:	461d      	movne	r5, r3
 801da2e:	e6d3      	b.n	801d7d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801da30:	2900      	cmp	r1, #0
 801da32:	f43f af5b 	beq.w	801d8ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801da36:	eb0a 0003 	add.w	r0, sl, r3
 801da3a:	0843      	lsrs	r3, r0, #1
 801da3c:	07c0      	lsls	r0, r0, #31
 801da3e:	5cfb      	ldrb	r3, [r7, r3]
 801da40:	bf54      	ite	pl
 801da42:	f003 030f 	andpl.w	r3, r3, #15
 801da46:	111b      	asrmi	r3, r3, #4
 801da48:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801da4c:	b2db      	uxtb	r3, r3
 801da4e:	930a      	str	r3, [sp, #40]	@ 0x28
 801da50:	e74c      	b.n	801d8ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801da52:	2b00      	cmp	r3, #0
 801da54:	f43f af77 	beq.w	801d946 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801da58:	4a73      	ldr	r2, [pc, #460]	@ (801dc28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801da5a:	fa1f fe83 	uxth.w	lr, r3
 801da5e:	f8b8 c000 	ldrh.w	ip, [r8]
 801da62:	43db      	mvns	r3, r3
 801da64:	6810      	ldr	r0, [r2, #0]
 801da66:	ea4f 212c 	mov.w	r1, ip, asr #8
 801da6a:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801da6e:	b2db      	uxtb	r3, r3
 801da70:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801da74:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801da78:	fb12 f20e 	smulbb	r2, r2, lr
 801da7c:	b2c0      	uxtb	r0, r0
 801da7e:	fb1b fb0e 	smulbb	fp, fp, lr
 801da82:	fb01 2103 	mla	r1, r1, r3, r2
 801da86:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801da8a:	fb10 fe0e 	smulbb	lr, r0, lr
 801da8e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801da92:	b289      	uxth	r1, r1
 801da94:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801da98:	fa5f fc8c 	uxtb.w	ip, ip
 801da9c:	fb02 b203 	mla	r2, r2, r3, fp
 801daa0:	1c48      	adds	r0, r1, #1
 801daa2:	fb0c e303 	mla	r3, ip, r3, lr
 801daa6:	b292      	uxth	r2, r2
 801daa8:	b29b      	uxth	r3, r3
 801daaa:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801daae:	f102 0b01 	add.w	fp, r2, #1
 801dab2:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 801dab6:	1c59      	adds	r1, r3, #1
 801dab8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801dabc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801dac0:	0952      	lsrs	r2, r2, #5
 801dac2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801dac6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801daca:	4301      	orrs	r1, r0
 801dacc:	4311      	orrs	r1, r2
 801dace:	f8a8 1000 	strh.w	r1, [r8]
 801dad2:	e738      	b.n	801d946 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801dad4:	f113 0b01 	adds.w	fp, r3, #1
 801dad8:	f53f af35 	bmi.w	801d946 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801dadc:	45dc      	cmp	ip, fp
 801dade:	f6ff af32 	blt.w	801d946 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801dae2:	f110 0b01 	adds.w	fp, r0, #1
 801dae6:	f53f af2e 	bmi.w	801d946 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801daea:	45de      	cmp	lr, fp
 801daec:	f6ff af2b 	blt.w	801d946 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801daf0:	9302      	str	r3, [sp, #8]
 801daf2:	fa0f f38e 	sxth.w	r3, lr
 801daf6:	9a08      	ldr	r2, [sp, #32]
 801daf8:	9301      	str	r3, [sp, #4]
 801dafa:	fa0f f38c 	sxth.w	r3, ip
 801dafe:	9105      	str	r1, [sp, #20]
 801db00:	4641      	mov	r1, r8
 801db02:	9300      	str	r3, [sp, #0]
 801db04:	4653      	mov	r3, sl
 801db06:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801db0a:	463a      	mov	r2, r7
 801db0c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801db0e:	f7ff fd73 	bl	801d5f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801db12:	e718      	b.n	801d946 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801db14:	1422      	asrs	r2, r4, #16
 801db16:	9906      	ldr	r1, [sp, #24]
 801db18:	1433      	asrs	r3, r6, #16
 801db1a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801db1e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801db22:	fb01 2303 	mla	r3, r1, r3, r2
 801db26:	085a      	lsrs	r2, r3, #1
 801db28:	07d9      	lsls	r1, r3, #31
 801db2a:	5cba      	ldrb	r2, [r7, r2]
 801db2c:	bf54      	ite	pl
 801db2e:	f002 020f 	andpl.w	r2, r2, #15
 801db32:	1112      	asrmi	r2, r2, #4
 801db34:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801db38:	b2d2      	uxtb	r2, r2
 801db3a:	2800      	cmp	r0, #0
 801db3c:	d063      	beq.n	801dc06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 801db3e:	f103 0a01 	add.w	sl, r3, #1
 801db42:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801db46:	f01a 0f01 	tst.w	sl, #1
 801db4a:	5c79      	ldrb	r1, [r7, r1]
 801db4c:	bf0c      	ite	eq
 801db4e:	f001 010f 	andeq.w	r1, r1, #15
 801db52:	1109      	asrne	r1, r1, #4
 801db54:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801db58:	b2c9      	uxtb	r1, r1
 801db5a:	910f      	str	r1, [sp, #60]	@ 0x3c
 801db5c:	f1bc 0f00 	cmp.w	ip, #0
 801db60:	d01a      	beq.n	801db98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801db62:	9908      	ldr	r1, [sp, #32]
 801db64:	440b      	add	r3, r1
 801db66:	0859      	lsrs	r1, r3, #1
 801db68:	f013 0f01 	tst.w	r3, #1
 801db6c:	f103 0301 	add.w	r3, r3, #1
 801db70:	5c79      	ldrb	r1, [r7, r1]
 801db72:	bf0c      	ite	eq
 801db74:	f001 010f 	andeq.w	r1, r1, #15
 801db78:	1109      	asrne	r1, r1, #4
 801db7a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801db7e:	b2c9      	uxtb	r1, r1
 801db80:	910b      	str	r1, [sp, #44]	@ 0x2c
 801db82:	0859      	lsrs	r1, r3, #1
 801db84:	07db      	lsls	r3, r3, #31
 801db86:	5c79      	ldrb	r1, [r7, r1]
 801db88:	bf54      	ite	pl
 801db8a:	f001 010f 	andpl.w	r1, r1, #15
 801db8e:	1109      	asrmi	r1, r1, #4
 801db90:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801db94:	b2c9      	uxtb	r1, r1
 801db96:	9110      	str	r1, [sp, #64]	@ 0x40
 801db98:	b280      	uxth	r0, r0
 801db9a:	fa1f fc8c 	uxth.w	ip, ip
 801db9e:	fb00 f30c 	mul.w	r3, r0, ip
 801dba2:	0100      	lsls	r0, r0, #4
 801dba4:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801dba8:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 801dbac:	1ac0      	subs	r0, r0, r3
 801dbae:	fa1f fc8c 	uxth.w	ip, ip
 801dbb2:	b280      	uxth	r0, r0
 801dbb4:	eba1 010c 	sub.w	r1, r1, ip
 801dbb8:	fa1f fa81 	uxth.w	sl, r1
 801dbbc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801dbbe:	4348      	muls	r0, r1
 801dbc0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801dbc2:	fb02 020a 	mla	r2, r2, sl, r0
 801dbc6:	fb0c 2c01 	mla	ip, ip, r1, r2
 801dbca:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801dbcc:	fb03 c302 	mla	r3, r3, r2, ip
 801dbd0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dbd4:	2bff      	cmp	r3, #255	@ 0xff
 801dbd6:	d12b      	bne.n	801dc30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801dbd8:	4b13      	ldr	r3, [pc, #76]	@ (801dc28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801dbda:	681a      	ldr	r2, [r3, #0]
 801dbdc:	4b13      	ldr	r3, [pc, #76]	@ (801dc2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801dbde:	0951      	lsrs	r1, r2, #5
 801dbe0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801dbe4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dbe8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801dbec:	430b      	orrs	r3, r1
 801dbee:	4313      	orrs	r3, r2
 801dbf0:	f8ae 3000 	strh.w	r3, [lr]
 801dbf4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801dbf6:	f10e 0e02 	add.w	lr, lr, #2
 801dbfa:	f108 38ff 	add.w	r8, r8, #4294967295
 801dbfe:	441c      	add	r4, r3
 801dc00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dc02:	441e      	add	r6, r3
 801dc04:	e6cc      	b.n	801d9a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801dc06:	f1bc 0f00 	cmp.w	ip, #0
 801dc0a:	d0c5      	beq.n	801db98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801dc0c:	9908      	ldr	r1, [sp, #32]
 801dc0e:	440b      	add	r3, r1
 801dc10:	0859      	lsrs	r1, r3, #1
 801dc12:	07db      	lsls	r3, r3, #31
 801dc14:	5c79      	ldrb	r1, [r7, r1]
 801dc16:	bf54      	ite	pl
 801dc18:	f001 010f 	andpl.w	r1, r1, #15
 801dc1c:	1109      	asrmi	r1, r1, #4
 801dc1e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801dc22:	b2c9      	uxtb	r1, r1
 801dc24:	910b      	str	r1, [sp, #44]	@ 0x2c
 801dc26:	e7b7      	b.n	801db98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801dc28:	200150b4 	.word	0x200150b4
 801dc2c:	fffff800 	.word	0xfffff800
 801dc30:	2b00      	cmp	r3, #0
 801dc32:	d0df      	beq.n	801dbf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801dc34:	4a21      	ldr	r2, [pc, #132]	@ (801dcbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801dc36:	fa1f fa83 	uxth.w	sl, r3
 801dc3a:	f8be c000 	ldrh.w	ip, [lr]
 801dc3e:	43db      	mvns	r3, r3
 801dc40:	6810      	ldr	r0, [r2, #0]
 801dc42:	ea4f 212c 	mov.w	r1, ip, asr #8
 801dc46:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801dc4a:	b2db      	uxtb	r3, r3
 801dc4c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801dc50:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801dc54:	fb12 f20a 	smulbb	r2, r2, sl
 801dc58:	b2c0      	uxtb	r0, r0
 801dc5a:	fb1b fb0a 	smulbb	fp, fp, sl
 801dc5e:	fb01 2103 	mla	r1, r1, r3, r2
 801dc62:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801dc66:	fb10 f00a 	smulbb	r0, r0, sl
 801dc6a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801dc6e:	b289      	uxth	r1, r1
 801dc70:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801dc74:	fa5f fc8c 	uxtb.w	ip, ip
 801dc78:	fb02 b203 	mla	r2, r2, r3, fp
 801dc7c:	fb0c 0003 	mla	r0, ip, r3, r0
 801dc80:	1c4b      	adds	r3, r1, #1
 801dc82:	b292      	uxth	r2, r2
 801dc84:	b280      	uxth	r0, r0
 801dc86:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801dc8a:	f100 0b01 	add.w	fp, r0, #1
 801dc8e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801dc92:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801dc96:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801dc9a:	ea4b 0101 	orr.w	r1, fp, r1
 801dc9e:	f102 0b01 	add.w	fp, r2, #1
 801dca2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801dca6:	0952      	lsrs	r2, r2, #5
 801dca8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dcac:	4311      	orrs	r1, r2
 801dcae:	f8ae 1000 	strh.w	r1, [lr]
 801dcb2:	e79f      	b.n	801dbf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801dcb4:	b013      	add	sp, #76	@ 0x4c
 801dcb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dcba:	bf00      	nop
 801dcbc:	200150b4 	.word	0x200150b4

0801dcc0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801dcc0:	b570      	push	{r4, r5, r6, lr}
 801dcc2:	1208      	asrs	r0, r1, #8
 801dcc4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801dcc8:	b29e      	uxth	r6, r3
 801dcca:	1213      	asrs	r3, r2, #8
 801dccc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801dcd0:	10cc      	asrs	r4, r1, #3
 801dcd2:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801dcd6:	00c9      	lsls	r1, r1, #3
 801dcd8:	fb10 f006 	smulbb	r0, r0, r6
 801dcdc:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801dce0:	fb13 f305 	smulbb	r3, r3, r5
 801dce4:	fb14 f406 	smulbb	r4, r4, r6
 801dce8:	4418      	add	r0, r3
 801dcea:	10d3      	asrs	r3, r2, #3
 801dcec:	00d2      	lsls	r2, r2, #3
 801dcee:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801dcf2:	b280      	uxth	r0, r0
 801dcf4:	b2d2      	uxtb	r2, r2
 801dcf6:	fb13 f305 	smulbb	r3, r3, r5
 801dcfa:	fb12 f205 	smulbb	r2, r2, r5
 801dcfe:	441c      	add	r4, r3
 801dd00:	b2cb      	uxtb	r3, r1
 801dd02:	fb13 f306 	smulbb	r3, r3, r6
 801dd06:	b2a4      	uxth	r4, r4
 801dd08:	4413      	add	r3, r2
 801dd0a:	1c42      	adds	r2, r0, #1
 801dd0c:	b29b      	uxth	r3, r3
 801dd0e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801dd12:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 801dd16:	1c58      	adds	r0, r3, #1
 801dd18:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801dd1c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801dd20:	4310      	orrs	r0, r2
 801dd22:	1c62      	adds	r2, r4, #1
 801dd24:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801dd28:	0964      	lsrs	r4, r4, #5
 801dd2a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801dd2e:	4320      	orrs	r0, r4
 801dd30:	bd70      	pop	{r4, r5, r6, pc}
	...

0801dd34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801dd34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd38:	b08f      	sub	sp, #60	@ 0x3c
 801dd3a:	461c      	mov	r4, r3
 801dd3c:	460d      	mov	r5, r1
 801dd3e:	4616      	mov	r6, r2
 801dd40:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801dd44:	9004      	str	r0, [sp, #16]
 801dd46:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801dd48:	2f00      	cmp	r7, #0
 801dd4a:	f000 80f6 	beq.w	801df3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801dd4e:	6820      	ldr	r0, [r4, #0]
 801dd50:	aa0a      	add	r2, sp, #40	@ 0x28
 801dd52:	6861      	ldr	r1, [r4, #4]
 801dd54:	f04f 0802 	mov.w	r8, #2
 801dd58:	3604      	adds	r6, #4
 801dd5a:	c203      	stmia	r2!, {r0, r1}
 801dd5c:	6818      	ldr	r0, [r3, #0]
 801dd5e:	aa0c      	add	r2, sp, #48	@ 0x30
 801dd60:	6859      	ldr	r1, [r3, #4]
 801dd62:	c203      	stmia	r2!, {r0, r1}
 801dd64:	a80a      	add	r0, sp, #40	@ 0x28
 801dd66:	f7ef fe3f 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dd6a:	4621      	mov	r1, r4
 801dd6c:	a80c      	add	r0, sp, #48	@ 0x30
 801dd6e:	f7ef fe63 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dd72:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801dd76:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801dd7a:	f002 0301 	and.w	r3, r2, #1
 801dd7e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801dd82:	9306      	str	r3, [sp, #24]
 801dd84:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801dd88:	f003 0101 	and.w	r1, r3, #1
 801dd8c:	9105      	str	r1, [sp, #20]
 801dd8e:	9805      	ldr	r0, [sp, #20]
 801dd90:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801dd94:	4403      	add	r3, r0
 801dd96:	fb01 2303 	mla	r3, r1, r3, r2
 801dd9a:	fb93 f3f8 	sdiv	r3, r3, r8
 801dd9e:	441d      	add	r5, r3
 801dda0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801dda4:	441a      	add	r2, r3
 801dda6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801ddaa:	4419      	add	r1, r3
 801ddac:	4b64      	ldr	r3, [pc, #400]	@ (801df40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801ddae:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801ddb2:	6818      	ldr	r0, [r3, #0]
 801ddb4:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801ddb8:	6803      	ldr	r3, [r0, #0]
 801ddba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ddbc:	4798      	blx	r3
 801ddbe:	4a61      	ldr	r2, [pc, #388]	@ (801df44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801ddc0:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801ddc4:	2fff      	cmp	r7, #255	@ 0xff
 801ddc6:	8813      	ldrh	r3, [r2, #0]
 801ddc8:	4611      	mov	r1, r2
 801ddca:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 801ddce:	fb03 fb0b 	mul.w	fp, r3, fp
 801ddd2:	fb03 a404 	mla	r4, r3, r4, sl
 801ddd6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ddda:	d06b      	beq.n	801deb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 801dddc:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 801dde0:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801dde4:	9303      	str	r3, [sp, #12]
 801dde6:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801ddea:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801ddee:	9b07      	ldr	r3, [sp, #28]
 801ddf0:	42a3      	cmp	r3, r4
 801ddf2:	f240 809d 	bls.w	801df30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801ddf6:	9b06      	ldr	r3, [sp, #24]
 801ddf8:	2b00      	cmp	r3, #0
 801ddfa:	d039      	beq.n	801de70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 801ddfc:	782b      	ldrb	r3, [r5, #0]
 801ddfe:	f105 0801 	add.w	r8, r5, #1
 801de02:	f109 3bff 	add.w	fp, r9, #4294967295
 801de06:	8822      	ldrh	r2, [r4, #0]
 801de08:	f003 030f 	and.w	r3, r3, #15
 801de0c:	9804      	ldr	r0, [sp, #16]
 801de0e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801de12:	9b03      	ldr	r3, [sp, #12]
 801de14:	9300      	str	r3, [sp, #0]
 801de16:	463b      	mov	r3, r7
 801de18:	f7ff ff52 	bl	801dcc0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801de1c:	f824 0b02 	strh.w	r0, [r4], #2
 801de20:	f1bb 0f01 	cmp.w	fp, #1
 801de24:	46a2      	mov	sl, r4
 801de26:	f104 0404 	add.w	r4, r4, #4
 801de2a:	dd24      	ble.n	801de76 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 801de2c:	f898 3000 	ldrb.w	r3, [r8]
 801de30:	f1ab 0b02 	sub.w	fp, fp, #2
 801de34:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801de38:	091b      	lsrs	r3, r3, #4
 801de3a:	9804      	ldr	r0, [sp, #16]
 801de3c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801de40:	9b03      	ldr	r3, [sp, #12]
 801de42:	9300      	str	r3, [sp, #0]
 801de44:	463b      	mov	r3, r7
 801de46:	f7ff ff3b 	bl	801dcc0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801de4a:	f824 0c04 	strh.w	r0, [r4, #-4]
 801de4e:	f818 3b01 	ldrb.w	r3, [r8], #1
 801de52:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801de56:	f003 030f 	and.w	r3, r3, #15
 801de5a:	9804      	ldr	r0, [sp, #16]
 801de5c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801de60:	9b03      	ldr	r3, [sp, #12]
 801de62:	9300      	str	r3, [sp, #0]
 801de64:	463b      	mov	r3, r7
 801de66:	f7ff ff2b 	bl	801dcc0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801de6a:	f824 0c02 	strh.w	r0, [r4, #-2]
 801de6e:	e7d7      	b.n	801de20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 801de70:	46a8      	mov	r8, r5
 801de72:	46cb      	mov	fp, r9
 801de74:	e7d4      	b.n	801de20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 801de76:	d10e      	bne.n	801de96 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 801de78:	f898 3000 	ldrb.w	r3, [r8]
 801de7c:	f8ba 2000 	ldrh.w	r2, [sl]
 801de80:	091b      	lsrs	r3, r3, #4
 801de82:	9804      	ldr	r0, [sp, #16]
 801de84:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801de88:	9b03      	ldr	r3, [sp, #12]
 801de8a:	9300      	str	r3, [sp, #0]
 801de8c:	463b      	mov	r3, r7
 801de8e:	f7ff ff17 	bl	801dcc0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801de92:	f82a 0b02 	strh.w	r0, [sl], #2
 801de96:	9b08      	ldr	r3, [sp, #32]
 801de98:	9a05      	ldr	r2, [sp, #20]
 801de9a:	881c      	ldrh	r4, [r3, #0]
 801de9c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801dea0:	eba4 0409 	sub.w	r4, r4, r9
 801dea4:	4413      	add	r3, r2
 801dea6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801dea8:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801deac:	fb93 f3f2 	sdiv	r3, r3, r2
 801deb0:	441d      	add	r5, r3
 801deb2:	e79c      	b.n	801ddee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 801deb4:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801deb8:	45a3      	cmp	fp, r4
 801deba:	d939      	bls.n	801df30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801debc:	9b06      	ldr	r3, [sp, #24]
 801debe:	b1fb      	cbz	r3, 801df00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801dec0:	782b      	ldrb	r3, [r5, #0]
 801dec2:	1c6a      	adds	r2, r5, #1
 801dec4:	f109 30ff 	add.w	r0, r9, #4294967295
 801dec8:	3402      	adds	r4, #2
 801deca:	f003 030f 	and.w	r3, r3, #15
 801dece:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ded2:	f824 3c02 	strh.w	r3, [r4, #-2]
 801ded6:	2801      	cmp	r0, #1
 801ded8:	4623      	mov	r3, r4
 801deda:	f104 0404 	add.w	r4, r4, #4
 801dede:	dd12      	ble.n	801df06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 801dee0:	7813      	ldrb	r3, [r2, #0]
 801dee2:	3802      	subs	r0, #2
 801dee4:	091b      	lsrs	r3, r3, #4
 801dee6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801deea:	f824 3c04 	strh.w	r3, [r4, #-4]
 801deee:	f812 3b01 	ldrb.w	r3, [r2], #1
 801def2:	f003 030f 	and.w	r3, r3, #15
 801def6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801defa:	f824 3c02 	strh.w	r3, [r4, #-2]
 801defe:	e7ea      	b.n	801ded6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801df00:	462a      	mov	r2, r5
 801df02:	4648      	mov	r0, r9
 801df04:	e7e7      	b.n	801ded6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801df06:	d106      	bne.n	801df16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 801df08:	7812      	ldrb	r2, [r2, #0]
 801df0a:	3302      	adds	r3, #2
 801df0c:	0912      	lsrs	r2, r2, #4
 801df0e:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801df12:	f823 2c02 	strh.w	r2, [r3, #-2]
 801df16:	880c      	ldrh	r4, [r1, #0]
 801df18:	9a05      	ldr	r2, [sp, #20]
 801df1a:	eba4 0409 	sub.w	r4, r4, r9
 801df1e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801df22:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801df26:	4413      	add	r3, r2
 801df28:	fb93 f3f8 	sdiv	r3, r3, r8
 801df2c:	441d      	add	r5, r3
 801df2e:	e7c3      	b.n	801deb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 801df30:	4b03      	ldr	r3, [pc, #12]	@ (801df40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801df32:	6818      	ldr	r0, [r3, #0]
 801df34:	6803      	ldr	r3, [r0, #0]
 801df36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801df38:	4798      	blx	r3
 801df3a:	b00f      	add	sp, #60	@ 0x3c
 801df3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df40:	200150ac 	.word	0x200150ac
 801df44:	200150a6 	.word	0x200150a6

0801df48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 801df48:	b5f0      	push	{r4, r5, r6, r7, lr}
 801df4a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801df4e:	0a0f      	lsrs	r7, r1, #8
 801df50:	2dff      	cmp	r5, #255	@ 0xff
 801df52:	d10c      	bne.n	801df6e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801df54:	2bff      	cmp	r3, #255	@ 0xff
 801df56:	d10a      	bne.n	801df6e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801df58:	0948      	lsrs	r0, r1, #5
 801df5a:	4b25      	ldr	r3, [pc, #148]	@ (801dff0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 801df5c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801df60:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801df64:	403b      	ands	r3, r7
 801df66:	4318      	orrs	r0, r3
 801df68:	4308      	orrs	r0, r1
 801df6a:	b280      	uxth	r0, r0
 801df6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801df6e:	fb15 f503 	smulbb	r5, r5, r3
 801df72:	1214      	asrs	r4, r2, #8
 801df74:	10d6      	asrs	r6, r2, #3
 801df76:	b2ab      	uxth	r3, r5
 801df78:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801df7c:	00d0      	lsls	r0, r2, #3
 801df7e:	f3c1 4207 	ubfx	r2, r1, #16, #8
 801df82:	1c5d      	adds	r5, r3, #1
 801df84:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801df88:	b2c0      	uxtb	r0, r0
 801df8a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801df8e:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 801df92:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801df96:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801df9a:	fa1f fc85 	uxth.w	ip, r5
 801df9e:	43ed      	mvns	r5, r5
 801dfa0:	fb12 f20c 	smulbb	r2, r2, ip
 801dfa4:	b2eb      	uxtb	r3, r5
 801dfa6:	b2fd      	uxtb	r5, r7
 801dfa8:	fb04 2403 	mla	r4, r4, r3, r2
 801dfac:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 801dfb0:	fb15 f50c 	smulbb	r5, r5, ip
 801dfb4:	b2c8      	uxtb	r0, r1
 801dfb6:	b2a4      	uxth	r4, r4
 801dfb8:	fb10 f00c 	smulbb	r0, r0, ip
 801dfbc:	fb06 5503 	mla	r5, r6, r3, r5
 801dfc0:	fb02 0003 	mla	r0, r2, r3, r0
 801dfc4:	b2ad      	uxth	r5, r5
 801dfc6:	b283      	uxth	r3, r0
 801dfc8:	1c60      	adds	r0, r4, #1
 801dfca:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 801dfce:	1c58      	adds	r0, r3, #1
 801dfd0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801dfd4:	1c6b      	adds	r3, r5, #1
 801dfd6:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801dfda:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dfde:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801dfe2:	096d      	lsrs	r5, r5, #5
 801dfe4:	4320      	orrs	r0, r4
 801dfe6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801dfea:	4328      	orrs	r0, r5
 801dfec:	e7be      	b.n	801df6c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 801dfee:	bf00      	nop
 801dff0:	00fff800 	.word	0x00fff800

0801dff4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801dff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dff8:	461c      	mov	r4, r3
 801dffa:	b08d      	sub	sp, #52	@ 0x34
 801dffc:	460d      	mov	r5, r1
 801dffe:	4616      	mov	r6, r2
 801e000:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801e002:	4680      	mov	r8, r0
 801e004:	6861      	ldr	r1, [r4, #4]
 801e006:	aa08      	add	r2, sp, #32
 801e008:	6820      	ldr	r0, [r4, #0]
 801e00a:	f04f 0a02 	mov.w	sl, #2
 801e00e:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 801e012:	3604      	adds	r6, #4
 801e014:	c203      	stmia	r2!, {r0, r1}
 801e016:	6818      	ldr	r0, [r3, #0]
 801e018:	aa0a      	add	r2, sp, #40	@ 0x28
 801e01a:	6859      	ldr	r1, [r3, #4]
 801e01c:	c203      	stmia	r2!, {r0, r1}
 801e01e:	a808      	add	r0, sp, #32
 801e020:	f7ef fce2 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e024:	4621      	mov	r1, r4
 801e026:	a80a      	add	r0, sp, #40	@ 0x28
 801e028:	f7ef fd06 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e02c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801e030:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 801e034:	f002 0301 	and.w	r3, r2, #1
 801e038:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 801e03c:	9303      	str	r3, [sp, #12]
 801e03e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801e042:	f003 0101 	and.w	r1, r3, #1
 801e046:	9102      	str	r1, [sp, #8]
 801e048:	9802      	ldr	r0, [sp, #8]
 801e04a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801e04e:	4403      	add	r3, r0
 801e050:	fb01 2303 	mla	r3, r1, r3, r2
 801e054:	fb93 f3fa 	sdiv	r3, r3, sl
 801e058:	441d      	add	r5, r3
 801e05a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801e05e:	441a      	add	r2, r3
 801e060:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801e064:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801e068:	4419      	add	r1, r3
 801e06a:	4a3e      	ldr	r2, [pc, #248]	@ (801e164 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 801e06c:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 801e070:	6810      	ldr	r0, [r2, #0]
 801e072:	9205      	str	r2, [sp, #20]
 801e074:	6803      	ldr	r3, [r0, #0]
 801e076:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e078:	4798      	blx	r3
 801e07a:	4b3b      	ldr	r3, [pc, #236]	@ (801e168 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 801e07c:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 801e080:	8819      	ldrh	r1, [r3, #0]
 801e082:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 801e086:	434f      	muls	r7, r1
 801e088:	fb01 c404 	mla	r4, r1, r4, ip
 801e08c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e090:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 801e094:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 801e098:	9204      	str	r2, [sp, #16]
 801e09a:	9b04      	ldr	r3, [sp, #16]
 801e09c:	429c      	cmp	r4, r3
 801e09e:	d258      	bcs.n	801e152 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 801e0a0:	9b03      	ldr	r3, [sp, #12]
 801e0a2:	2b00      	cmp	r3, #0
 801e0a4:	d034      	beq.n	801e110 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 801e0a6:	782b      	ldrb	r3, [r5, #0]
 801e0a8:	1c6f      	adds	r7, r5, #1
 801e0aa:	f003 030f 	and.w	r3, r3, #15
 801e0ae:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801e0b2:	0e0b      	lsrs	r3, r1, #24
 801e0b4:	d006      	beq.n	801e0c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 801e0b6:	8822      	ldrh	r2, [r4, #0]
 801e0b8:	4640      	mov	r0, r8
 801e0ba:	9300      	str	r3, [sp, #0]
 801e0bc:	464b      	mov	r3, r9
 801e0be:	f7ff ff43 	bl	801df48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801e0c2:	8020      	strh	r0, [r4, #0]
 801e0c4:	3402      	adds	r4, #2
 801e0c6:	f10b 3aff 	add.w	sl, fp, #4294967295
 801e0ca:	f1ba 0f01 	cmp.w	sl, #1
 801e0ce:	dd22      	ble.n	801e116 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801e0d0:	783b      	ldrb	r3, [r7, #0]
 801e0d2:	091b      	lsrs	r3, r3, #4
 801e0d4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801e0d8:	0e0b      	lsrs	r3, r1, #24
 801e0da:	d006      	beq.n	801e0ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 801e0dc:	8822      	ldrh	r2, [r4, #0]
 801e0de:	4640      	mov	r0, r8
 801e0e0:	9300      	str	r3, [sp, #0]
 801e0e2:	464b      	mov	r3, r9
 801e0e4:	f7ff ff30 	bl	801df48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801e0e8:	8020      	strh	r0, [r4, #0]
 801e0ea:	f817 3b01 	ldrb.w	r3, [r7], #1
 801e0ee:	f003 030f 	and.w	r3, r3, #15
 801e0f2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801e0f6:	0e0b      	lsrs	r3, r1, #24
 801e0f8:	d006      	beq.n	801e108 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 801e0fa:	8862      	ldrh	r2, [r4, #2]
 801e0fc:	4640      	mov	r0, r8
 801e0fe:	9300      	str	r3, [sp, #0]
 801e100:	464b      	mov	r3, r9
 801e102:	f7ff ff21 	bl	801df48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801e106:	8060      	strh	r0, [r4, #2]
 801e108:	3404      	adds	r4, #4
 801e10a:	f1aa 0a02 	sub.w	sl, sl, #2
 801e10e:	e7dc      	b.n	801e0ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801e110:	462f      	mov	r7, r5
 801e112:	46da      	mov	sl, fp
 801e114:	e7d9      	b.n	801e0ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801e116:	d10d      	bne.n	801e134 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 801e118:	783b      	ldrb	r3, [r7, #0]
 801e11a:	091b      	lsrs	r3, r3, #4
 801e11c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801e120:	0e0b      	lsrs	r3, r1, #24
 801e122:	d006      	beq.n	801e132 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 801e124:	8822      	ldrh	r2, [r4, #0]
 801e126:	4640      	mov	r0, r8
 801e128:	9300      	str	r3, [sp, #0]
 801e12a:	464b      	mov	r3, r9
 801e12c:	f7ff ff0c 	bl	801df48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801e130:	8020      	strh	r0, [r4, #0]
 801e132:	3402      	adds	r4, #2
 801e134:	9b06      	ldr	r3, [sp, #24]
 801e136:	9a02      	ldr	r2, [sp, #8]
 801e138:	881b      	ldrh	r3, [r3, #0]
 801e13a:	eba3 030b 	sub.w	r3, r3, fp
 801e13e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e142:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801e146:	4413      	add	r3, r2
 801e148:	9a07      	ldr	r2, [sp, #28]
 801e14a:	fb93 f3f2 	sdiv	r3, r3, r2
 801e14e:	441d      	add	r5, r3
 801e150:	e7a3      	b.n	801e09a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 801e152:	9b05      	ldr	r3, [sp, #20]
 801e154:	6818      	ldr	r0, [r3, #0]
 801e156:	6803      	ldr	r3, [r0, #0]
 801e158:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e15a:	4798      	blx	r3
 801e15c:	b00d      	add	sp, #52	@ 0x34
 801e15e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e162:	bf00      	nop
 801e164:	200150ac 	.word	0x200150ac
 801e168:	200150a6 	.word	0x200150a6

0801e16c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 801e16c:	b570      	push	{r4, r5, r6, lr}
 801e16e:	1214      	asrs	r4, r2, #8
 801e170:	788d      	ldrb	r5, [r1, #2]
 801e172:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801e176:	10d0      	asrs	r0, r2, #3
 801e178:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801e17c:	00d2      	lsls	r2, r2, #3
 801e17e:	fb15 f503 	smulbb	r5, r5, r3
 801e182:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e186:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e18a:	b2d2      	uxtb	r2, r2
 801e18c:	fb04 5506 	mla	r5, r4, r6, r5
 801e190:	784c      	ldrb	r4, [r1, #1]
 801e192:	7809      	ldrb	r1, [r1, #0]
 801e194:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 801e198:	fb14 f403 	smulbb	r4, r4, r3
 801e19c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e1a0:	fb11 f303 	smulbb	r3, r1, r3
 801e1a4:	b2ad      	uxth	r5, r5
 801e1a6:	fb00 4406 	mla	r4, r0, r6, r4
 801e1aa:	fb02 3306 	mla	r3, r2, r6, r3
 801e1ae:	1c68      	adds	r0, r5, #1
 801e1b0:	b2a4      	uxth	r4, r4
 801e1b2:	b29b      	uxth	r3, r3
 801e1b4:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801e1b8:	1c62      	adds	r2, r4, #1
 801e1ba:	1c58      	adds	r0, r3, #1
 801e1bc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801e1c0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e1c4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e1c8:	0964      	lsrs	r4, r4, #5
 801e1ca:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801e1ce:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801e1d2:	4328      	orrs	r0, r5
 801e1d4:	4320      	orrs	r0, r4
 801e1d6:	bd70      	pop	{r4, r5, r6, pc}

0801e1d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801e1d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1dc:	b08f      	sub	sp, #60	@ 0x3c
 801e1de:	461c      	mov	r4, r3
 801e1e0:	4682      	mov	sl, r0
 801e1e2:	460e      	mov	r6, r1
 801e1e4:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801e1e8:	4615      	mov	r5, r2
 801e1ea:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e1ec:	2f00      	cmp	r7, #0
 801e1ee:	f000 8141 	beq.w	801e474 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 801e1f2:	6820      	ldr	r0, [r4, #0]
 801e1f4:	aa0a      	add	r2, sp, #40	@ 0x28
 801e1f6:	6861      	ldr	r1, [r4, #4]
 801e1f8:	f04f 0802 	mov.w	r8, #2
 801e1fc:	3504      	adds	r5, #4
 801e1fe:	c203      	stmia	r2!, {r0, r1}
 801e200:	6818      	ldr	r0, [r3, #0]
 801e202:	aa0c      	add	r2, sp, #48	@ 0x30
 801e204:	6859      	ldr	r1, [r3, #4]
 801e206:	c203      	stmia	r2!, {r0, r1}
 801e208:	a80a      	add	r0, sp, #40	@ 0x28
 801e20a:	f7ef fbed 	bl	800d9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e20e:	4621      	mov	r1, r4
 801e210:	a80c      	add	r0, sp, #48	@ 0x30
 801e212:	f7ef fc11 	bl	800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e216:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801e21a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801e21e:	f002 0301 	and.w	r3, r2, #1
 801e222:	9306      	str	r3, [sp, #24]
 801e224:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801e228:	f003 0101 	and.w	r1, r3, #1
 801e22c:	9105      	str	r1, [sp, #20]
 801e22e:	9805      	ldr	r0, [sp, #20]
 801e230:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801e234:	4403      	add	r3, r0
 801e236:	fb01 2303 	mla	r3, r1, r3, r2
 801e23a:	fb93 f3f8 	sdiv	r3, r3, r8
 801e23e:	441e      	add	r6, r3
 801e240:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801e244:	441a      	add	r2, r3
 801e246:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801e24a:	4419      	add	r1, r3
 801e24c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801e250:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801e254:	9303      	str	r3, [sp, #12]
 801e256:	4b89      	ldr	r3, [pc, #548]	@ (801e47c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801e258:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801e25c:	6818      	ldr	r0, [r3, #0]
 801e25e:	6803      	ldr	r3, [r0, #0]
 801e260:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e262:	4798      	blx	r3
 801e264:	4a86      	ldr	r2, [pc, #536]	@ (801e480 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 801e266:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801e26a:	2fff      	cmp	r7, #255	@ 0xff
 801e26c:	8813      	ldrh	r3, [r2, #0]
 801e26e:	4694      	mov	ip, r2
 801e270:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 801e274:	fb03 9404 	mla	r4, r3, r4, r9
 801e278:	fb03 f30b 	mul.w	r3, r3, fp
 801e27c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e280:	d071      	beq.n	801e366 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 801e282:	43f9      	mvns	r1, r7
 801e284:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e288:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801e28c:	b2c9      	uxtb	r1, r1
 801e28e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801e292:	9104      	str	r1, [sp, #16]
 801e294:	9b07      	ldr	r3, [sp, #28]
 801e296:	42a3      	cmp	r3, r4
 801e298:	f240 80e7 	bls.w	801e46a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 801e29c:	9b06      	ldr	r3, [sp, #24]
 801e29e:	2b00      	cmp	r3, #0
 801e2a0:	d03d      	beq.n	801e31e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 801e2a2:	7831      	ldrb	r1, [r6, #0]
 801e2a4:	4650      	mov	r0, sl
 801e2a6:	9b04      	ldr	r3, [sp, #16]
 801e2a8:	f106 0801 	add.w	r8, r6, #1
 801e2ac:	f001 010f 	and.w	r1, r1, #15
 801e2b0:	8822      	ldrh	r2, [r4, #0]
 801e2b2:	9300      	str	r3, [sp, #0]
 801e2b4:	463b      	mov	r3, r7
 801e2b6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e2ba:	4429      	add	r1, r5
 801e2bc:	f7ff ff56 	bl	801e16c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801e2c0:	9b03      	ldr	r3, [sp, #12]
 801e2c2:	f824 0b02 	strh.w	r0, [r4], #2
 801e2c6:	f103 3bff 	add.w	fp, r3, #4294967295
 801e2ca:	f1bb 0f01 	cmp.w	fp, #1
 801e2ce:	46a1      	mov	r9, r4
 801e2d0:	f104 0404 	add.w	r4, r4, #4
 801e2d4:	dd27      	ble.n	801e326 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 801e2d6:	f898 1000 	ldrb.w	r1, [r8]
 801e2da:	4650      	mov	r0, sl
 801e2dc:	9b04      	ldr	r3, [sp, #16]
 801e2de:	f1ab 0b02 	sub.w	fp, fp, #2
 801e2e2:	0909      	lsrs	r1, r1, #4
 801e2e4:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801e2e8:	9300      	str	r3, [sp, #0]
 801e2ea:	463b      	mov	r3, r7
 801e2ec:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e2f0:	4429      	add	r1, r5
 801e2f2:	f7ff ff3b 	bl	801e16c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801e2f6:	f824 0c04 	strh.w	r0, [r4, #-4]
 801e2fa:	f818 1b01 	ldrb.w	r1, [r8], #1
 801e2fe:	4650      	mov	r0, sl
 801e300:	9b04      	ldr	r3, [sp, #16]
 801e302:	f001 010f 	and.w	r1, r1, #15
 801e306:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801e30a:	9300      	str	r3, [sp, #0]
 801e30c:	463b      	mov	r3, r7
 801e30e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e312:	4429      	add	r1, r5
 801e314:	f7ff ff2a 	bl	801e16c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801e318:	f824 0c02 	strh.w	r0, [r4, #-2]
 801e31c:	e7d5      	b.n	801e2ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 801e31e:	46b0      	mov	r8, r6
 801e320:	f8dd b00c 	ldr.w	fp, [sp, #12]
 801e324:	e7d1      	b.n	801e2ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 801e326:	d10f      	bne.n	801e348 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 801e328:	f898 1000 	ldrb.w	r1, [r8]
 801e32c:	4650      	mov	r0, sl
 801e32e:	9b04      	ldr	r3, [sp, #16]
 801e330:	0909      	lsrs	r1, r1, #4
 801e332:	f8b9 2000 	ldrh.w	r2, [r9]
 801e336:	9300      	str	r3, [sp, #0]
 801e338:	463b      	mov	r3, r7
 801e33a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e33e:	4429      	add	r1, r5
 801e340:	f7ff ff14 	bl	801e16c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801e344:	f829 0b02 	strh.w	r0, [r9], #2
 801e348:	9b08      	ldr	r3, [sp, #32]
 801e34a:	9a05      	ldr	r2, [sp, #20]
 801e34c:	881c      	ldrh	r4, [r3, #0]
 801e34e:	9b03      	ldr	r3, [sp, #12]
 801e350:	1ae4      	subs	r4, r4, r3
 801e352:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801e356:	4413      	add	r3, r2
 801e358:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e35a:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801e35e:	fb93 f3f2 	sdiv	r3, r3, r2
 801e362:	441e      	add	r6, r3
 801e364:	e796      	b.n	801e294 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 801e366:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e36a:	4f46      	ldr	r7, [pc, #280]	@ (801e484 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 801e36c:	42a3      	cmp	r3, r4
 801e36e:	d97c      	bls.n	801e46a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 801e370:	9a06      	ldr	r2, [sp, #24]
 801e372:	2a00      	cmp	r2, #0
 801e374:	d054      	beq.n	801e420 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 801e376:	7830      	ldrb	r0, [r6, #0]
 801e378:	1c71      	adds	r1, r6, #1
 801e37a:	f000 000f 	and.w	r0, r0, #15
 801e37e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e382:	eb05 0e00 	add.w	lr, r5, r0
 801e386:	5c28      	ldrb	r0, [r5, r0]
 801e388:	f89e 2002 	ldrb.w	r2, [lr, #2]
 801e38c:	f89e e001 	ldrb.w	lr, [lr, #1]
 801e390:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801e394:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e398:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801e39c:	ea42 020e 	orr.w	r2, r2, lr
 801e3a0:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 801e3a4:	f824 2b02 	strh.w	r2, [r4], #2
 801e3a8:	9a03      	ldr	r2, [sp, #12]
 801e3aa:	f102 3eff 	add.w	lr, r2, #4294967295
 801e3ae:	f1be 0f01 	cmp.w	lr, #1
 801e3b2:	4620      	mov	r0, r4
 801e3b4:	f104 0404 	add.w	r4, r4, #4
 801e3b8:	dd36      	ble.n	801e428 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 801e3ba:	7808      	ldrb	r0, [r1, #0]
 801e3bc:	f1ae 0e02 	sub.w	lr, lr, #2
 801e3c0:	0900      	lsrs	r0, r0, #4
 801e3c2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e3c6:	eb05 0a00 	add.w	sl, r5, r0
 801e3ca:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e3ce:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e3d2:	00d2      	lsls	r2, r2, #3
 801e3d4:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801e3d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e3dc:	ea49 0202 	orr.w	r2, r9, r2
 801e3e0:	f815 9000 	ldrb.w	r9, [r5, r0]
 801e3e4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e3e8:	f824 2c04 	strh.w	r2, [r4, #-4]
 801e3ec:	f811 0b01 	ldrb.w	r0, [r1], #1
 801e3f0:	f000 000f 	and.w	r0, r0, #15
 801e3f4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e3f8:	eb05 0a00 	add.w	sl, r5, r0
 801e3fc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e400:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e404:	00d2      	lsls	r2, r2, #3
 801e406:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801e40a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e40e:	ea49 0202 	orr.w	r2, r9, r2
 801e412:	f815 9000 	ldrb.w	r9, [r5, r0]
 801e416:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e41a:	f824 2c02 	strh.w	r2, [r4, #-2]
 801e41e:	e7c6      	b.n	801e3ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801e420:	4631      	mov	r1, r6
 801e422:	f8dd e00c 	ldr.w	lr, [sp, #12]
 801e426:	e7c2      	b.n	801e3ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801e428:	d111      	bne.n	801e44e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801e42a:	7809      	ldrb	r1, [r1, #0]
 801e42c:	0909      	lsrs	r1, r1, #4
 801e42e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e432:	186c      	adds	r4, r5, r1
 801e434:	5c69      	ldrb	r1, [r5, r1]
 801e436:	78a2      	ldrb	r2, [r4, #2]
 801e438:	7864      	ldrb	r4, [r4, #1]
 801e43a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801e43e:	00e4      	lsls	r4, r4, #3
 801e440:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801e444:	4322      	orrs	r2, r4
 801e446:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 801e44a:	f820 2b02 	strh.w	r2, [r0], #2
 801e44e:	9a03      	ldr	r2, [sp, #12]
 801e450:	f8bc 4000 	ldrh.w	r4, [ip]
 801e454:	9905      	ldr	r1, [sp, #20]
 801e456:	1aa4      	subs	r4, r4, r2
 801e458:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801e45c:	440a      	add	r2, r1
 801e45e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e462:	fb92 f2f8 	sdiv	r2, r2, r8
 801e466:	4416      	add	r6, r2
 801e468:	e780      	b.n	801e36c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 801e46a:	4b04      	ldr	r3, [pc, #16]	@ (801e47c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801e46c:	6818      	ldr	r0, [r3, #0]
 801e46e:	6803      	ldr	r3, [r0, #0]
 801e470:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e472:	4798      	blx	r3
 801e474:	b00f      	add	sp, #60	@ 0x3c
 801e476:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e47a:	bf00      	nop
 801e47c:	200150ac 	.word	0x200150ac
 801e480:	200150a6 	.word	0x200150a6
 801e484:	fffff800 	.word	0xfffff800

0801e488 <CRC_Lock>:
 801e488:	4a20      	ldr	r2, [pc, #128]	@ (801e50c <CRC_Lock+0x84>)
 801e48a:	b530      	push	{r4, r5, lr}
 801e48c:	6813      	ldr	r3, [r2, #0]
 801e48e:	f64f 74f0 	movw	r4, #65520	@ 0xfff0
 801e492:	f24c 2540 	movw	r5, #49728	@ 0xc240
 801e496:	f023 0301 	bic.w	r3, r3, #1
 801e49a:	6013      	str	r3, [r2, #0]
 801e49c:	4b1c      	ldr	r3, [pc, #112]	@ (801e510 <CRC_Lock+0x88>)
 801e49e:	681a      	ldr	r2, [r3, #0]
 801e4a0:	4022      	ands	r2, r4
 801e4a2:	42aa      	cmp	r2, r5
 801e4a4:	d005      	beq.n	801e4b2 <CRC_Lock+0x2a>
 801e4a6:	681b      	ldr	r3, [r3, #0]
 801e4a8:	f24c 2270 	movw	r2, #49776	@ 0xc270
 801e4ac:	4023      	ands	r3, r4
 801e4ae:	4293      	cmp	r3, r2
 801e4b0:	d124      	bne.n	801e4fc <CRC_Lock+0x74>
 801e4b2:	4b18      	ldr	r3, [pc, #96]	@ (801e514 <CRC_Lock+0x8c>)
 801e4b4:	681b      	ldr	r3, [r3, #0]
 801e4b6:	bb0b      	cbnz	r3, 801e4fc <CRC_Lock+0x74>
 801e4b8:	4b17      	ldr	r3, [pc, #92]	@ (801e518 <CRC_Lock+0x90>)
 801e4ba:	681a      	ldr	r2, [r3, #0]
 801e4bc:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801e4c0:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 801e4c4:	d00d      	beq.n	801e4e2 <CRC_Lock+0x5a>
 801e4c6:	681a      	ldr	r2, [r3, #0]
 801e4c8:	f240 4483 	movw	r4, #1155	@ 0x483
 801e4cc:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801e4d0:	42a2      	cmp	r2, r4
 801e4d2:	d006      	beq.n	801e4e2 <CRC_Lock+0x5a>
 801e4d4:	681b      	ldr	r3, [r3, #0]
 801e4d6:	f240 4285 	movw	r2, #1157	@ 0x485
 801e4da:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801e4de:	4293      	cmp	r3, r2
 801e4e0:	d10c      	bne.n	801e4fc <CRC_Lock+0x74>
 801e4e2:	4b0e      	ldr	r3, [pc, #56]	@ (801e51c <CRC_Lock+0x94>)
 801e4e4:	2201      	movs	r2, #1
 801e4e6:	601a      	str	r2, [r3, #0]
 801e4e8:	681a      	ldr	r2, [r3, #0]
 801e4ea:	2a00      	cmp	r2, #0
 801e4ec:	d1fc      	bne.n	801e4e8 <CRC_Lock+0x60>
 801e4ee:	4b0c      	ldr	r3, [pc, #48]	@ (801e520 <CRC_Lock+0x98>)
 801e4f0:	6018      	str	r0, [r3, #0]
 801e4f2:	6818      	ldr	r0, [r3, #0]
 801e4f4:	1a43      	subs	r3, r0, r1
 801e4f6:	4258      	negs	r0, r3
 801e4f8:	4158      	adcs	r0, r3
 801e4fa:	bd30      	pop	{r4, r5, pc}
 801e4fc:	4b09      	ldr	r3, [pc, #36]	@ (801e524 <CRC_Lock+0x9c>)
 801e4fe:	2201      	movs	r2, #1
 801e500:	601a      	str	r2, [r3, #0]
 801e502:	681a      	ldr	r2, [r3, #0]
 801e504:	2a00      	cmp	r2, #0
 801e506:	d1fc      	bne.n	801e502 <CRC_Lock+0x7a>
 801e508:	4b07      	ldr	r3, [pc, #28]	@ (801e528 <CRC_Lock+0xa0>)
 801e50a:	e7f1      	b.n	801e4f0 <CRC_Lock+0x68>
 801e50c:	e0002000 	.word	0xe0002000
 801e510:	e000ed00 	.word	0xe000ed00
 801e514:	e0042000 	.word	0xe0042000
 801e518:	5c001000 	.word	0x5c001000
 801e51c:	58024c08 	.word	0x58024c08
 801e520:	58024c00 	.word	0x58024c00
 801e524:	40023008 	.word	0x40023008
 801e528:	40023000 	.word	0x40023000

0801e52c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801e52c:	6101      	str	r1, [r0, #16]
 801e52e:	4770      	bx	lr

0801e530 <_ZN8touchgfx8Gestures4tickEv>:
 801e530:	7b83      	ldrb	r3, [r0, #14]
 801e532:	b14b      	cbz	r3, 801e548 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801e534:	8903      	ldrh	r3, [r0, #8]
 801e536:	3301      	adds	r3, #1
 801e538:	b29b      	uxth	r3, r3
 801e53a:	2b07      	cmp	r3, #7
 801e53c:	8103      	strh	r3, [r0, #8]
 801e53e:	bf81      	itttt	hi
 801e540:	2300      	movhi	r3, #0
 801e542:	8143      	strhhi	r3, [r0, #10]
 801e544:	8183      	strhhi	r3, [r0, #12]
 801e546:	7383      	strbhi	r3, [r0, #14]
 801e548:	4770      	bx	lr
	...

0801e54c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801e54c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801e550:	4698      	mov	r8, r3
 801e552:	8883      	ldrh	r3, [r0, #4]
 801e554:	4604      	mov	r4, r0
 801e556:	4617      	mov	r7, r2
 801e558:	f8ad 3006 	strh.w	r3, [sp, #6]
 801e55c:	eba8 0303 	sub.w	r3, r8, r3
 801e560:	4a19      	ldr	r2, [pc, #100]	@ (801e5c8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801e562:	460e      	mov	r6, r1
 801e564:	b21b      	sxth	r3, r3
 801e566:	88c1      	ldrh	r1, [r0, #6]
 801e568:	9200      	str	r2, [sp, #0]
 801e56a:	2000      	movs	r0, #0
 801e56c:	2b00      	cmp	r3, #0
 801e56e:	8aa2      	ldrh	r2, [r4, #20]
 801e570:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 801e574:	bfb8      	it	lt
 801e576:	425b      	neglt	r3, r3
 801e578:	f88d 0004 	strb.w	r0, [sp, #4]
 801e57c:	f8ad 1008 	strh.w	r1, [sp, #8]
 801e580:	b21b      	sxth	r3, r3
 801e582:	f8ad 800a 	strh.w	r8, [sp, #10]
 801e586:	f8ad 500c 	strh.w	r5, [sp, #12]
 801e58a:	4293      	cmp	r3, r2
 801e58c:	dc07      	bgt.n	801e59e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 801e58e:	1a69      	subs	r1, r5, r1
 801e590:	b209      	sxth	r1, r1
 801e592:	2900      	cmp	r1, #0
 801e594:	bfb8      	it	lt
 801e596:	4249      	neglt	r1, r1
 801e598:	b209      	sxth	r1, r1
 801e59a:	428a      	cmp	r2, r1
 801e59c:	da10      	bge.n	801e5c0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 801e59e:	6920      	ldr	r0, [r4, #16]
 801e5a0:	4669      	mov	r1, sp
 801e5a2:	eba8 0606 	sub.w	r6, r8, r6
 801e5a6:	1bef      	subs	r7, r5, r7
 801e5a8:	6803      	ldr	r3, [r0, #0]
 801e5aa:	685b      	ldr	r3, [r3, #4]
 801e5ac:	4798      	blx	r3
 801e5ae:	2300      	movs	r3, #0
 801e5b0:	2001      	movs	r0, #1
 801e5b2:	8166      	strh	r6, [r4, #10]
 801e5b4:	8123      	strh	r3, [r4, #8]
 801e5b6:	81a7      	strh	r7, [r4, #12]
 801e5b8:	f8a4 8004 	strh.w	r8, [r4, #4]
 801e5bc:	80e5      	strh	r5, [r4, #6]
 801e5be:	73a0      	strb	r0, [r4, #14]
 801e5c0:	b004      	add	sp, #16
 801e5c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e5c6:	bf00      	nop
 801e5c8:	08021288 	.word	0x08021288

0801e5cc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801e5cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e5ce:	461e      	mov	r6, r3
 801e5d0:	1e4b      	subs	r3, r1, #1
 801e5d2:	b085      	sub	sp, #20
 801e5d4:	4604      	mov	r4, r0
 801e5d6:	2b01      	cmp	r3, #1
 801e5d8:	460d      	mov	r5, r1
 801e5da:	4617      	mov	r7, r2
 801e5dc:	d84b      	bhi.n	801e676 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801e5de:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801e5e2:	1cd3      	adds	r3, r2, #3
 801e5e4:	b29b      	uxth	r3, r3
 801e5e6:	2b06      	cmp	r3, #6
 801e5e8:	d916      	bls.n	801e618 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801e5ea:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 801e68c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801e5ee:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e5f2:	f8cd c004 	str.w	ip, [sp, #4]
 801e5f6:	f04f 0c00 	mov.w	ip, #0
 801e5fa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801e5fe:	6900      	ldr	r0, [r0, #16]
 801e600:	f8ad 100c 	strh.w	r1, [sp, #12]
 801e604:	a901      	add	r1, sp, #4
 801e606:	f88d c008 	strb.w	ip, [sp, #8]
 801e60a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801e60e:	f8ad 300e 	strh.w	r3, [sp, #14]
 801e612:	6803      	ldr	r3, [r0, #0]
 801e614:	689b      	ldr	r3, [r3, #8]
 801e616:	4798      	blx	r3
 801e618:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801e61c:	1cd3      	adds	r3, r2, #3
 801e61e:	b29b      	uxth	r3, r3
 801e620:	2b06      	cmp	r3, #6
 801e622:	d916      	bls.n	801e652 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801e624:	f8df c064 	ldr.w	ip, [pc, #100]	@ 801e68c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801e628:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e62c:	f8cd c004 	str.w	ip, [sp, #4]
 801e630:	f04f 0c01 	mov.w	ip, #1
 801e634:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801e638:	6920      	ldr	r0, [r4, #16]
 801e63a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801e63e:	a901      	add	r1, sp, #4
 801e640:	f88d c008 	strb.w	ip, [sp, #8]
 801e644:	f8ad 200a 	strh.w	r2, [sp, #10]
 801e648:	f8ad 300e 	strh.w	r3, [sp, #14]
 801e64c:	6803      	ldr	r3, [r0, #0]
 801e64e:	689b      	ldr	r3, [r3, #8]
 801e650:	4798      	blx	r3
 801e652:	4b0d      	ldr	r3, [pc, #52]	@ (801e688 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801e654:	a901      	add	r1, sp, #4
 801e656:	6920      	ldr	r0, [r4, #16]
 801e658:	9301      	str	r3, [sp, #4]
 801e65a:	2300      	movs	r3, #0
 801e65c:	f88d 5008 	strb.w	r5, [sp, #8]
 801e660:	f8ad 700a 	strh.w	r7, [sp, #10]
 801e664:	f8ad 600c 	strh.w	r6, [sp, #12]
 801e668:	f8ad 300e 	strh.w	r3, [sp, #14]
 801e66c:	6803      	ldr	r3, [r0, #0]
 801e66e:	681b      	ldr	r3, [r3, #0]
 801e670:	4798      	blx	r3
 801e672:	b005      	add	sp, #20
 801e674:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e676:	2900      	cmp	r1, #0
 801e678:	d1eb      	bne.n	801e652 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801e67a:	80a2      	strh	r2, [r4, #4]
 801e67c:	80c6      	strh	r6, [r0, #6]
 801e67e:	60a1      	str	r1, [r4, #8]
 801e680:	81a1      	strh	r1, [r4, #12]
 801e682:	73a1      	strb	r1, [r4, #14]
 801e684:	e7e5      	b.n	801e652 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801e686:	bf00      	nop
 801e688:	08021274 	.word	0x08021274
 801e68c:	0802129c 	.word	0x0802129c

0801e690 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801e690:	790b      	ldrb	r3, [r1, #4]
 801e692:	2b00      	cmp	r3, #0
 801e694:	bf0c      	ite	eq
 801e696:	2301      	moveq	r3, #1
 801e698:	2300      	movne	r3, #0
 801e69a:	b570      	push	{r4, r5, r6, lr}
 801e69c:	4604      	mov	r4, r0
 801e69e:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 801e6a2:	460e      	mov	r6, r1
 801e6a4:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 801e6a8:	d109      	bne.n	801e6be <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801e6aa:	b14d      	cbz	r5, 801e6c0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801e6ac:	7933      	ldrb	r3, [r6, #4]
 801e6ae:	2b01      	cmp	r3, #1
 801e6b0:	d10c      	bne.n	801e6cc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801e6b2:	6823      	ldr	r3, [r4, #0]
 801e6b4:	4620      	mov	r0, r4
 801e6b6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 801e6b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801e6bc:	4718      	bx	r3
 801e6be:	b12d      	cbz	r5, 801e6cc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801e6c0:	6823      	ldr	r3, [r4, #0]
 801e6c2:	4620      	mov	r0, r4
 801e6c4:	695b      	ldr	r3, [r3, #20]
 801e6c6:	4798      	blx	r3
 801e6c8:	2d00      	cmp	r5, #0
 801e6ca:	d1ef      	bne.n	801e6ac <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801e6cc:	bd70      	pop	{r4, r5, r6, pc}

0801e6ce <__aeabi_atexit>:
 801e6ce:	460b      	mov	r3, r1
 801e6d0:	4601      	mov	r1, r0
 801e6d2:	4618      	mov	r0, r3
 801e6d4:	f000 b910 	b.w	801e8f8 <__cxa_atexit>

0801e6d8 <_ZdlPvj>:
 801e6d8:	f000 b812 	b.w	801e700 <_ZdlPv>

0801e6dc <__cxa_guard_acquire>:
 801e6dc:	6802      	ldr	r2, [r0, #0]
 801e6de:	07d2      	lsls	r2, r2, #31
 801e6e0:	4603      	mov	r3, r0
 801e6e2:	d405      	bmi.n	801e6f0 <__cxa_guard_acquire+0x14>
 801e6e4:	7842      	ldrb	r2, [r0, #1]
 801e6e6:	b102      	cbz	r2, 801e6ea <__cxa_guard_acquire+0xe>
 801e6e8:	deff      	udf	#255	@ 0xff
 801e6ea:	2001      	movs	r0, #1
 801e6ec:	7058      	strb	r0, [r3, #1]
 801e6ee:	4770      	bx	lr
 801e6f0:	2000      	movs	r0, #0
 801e6f2:	4770      	bx	lr

0801e6f4 <__cxa_guard_release>:
 801e6f4:	2301      	movs	r3, #1
 801e6f6:	6003      	str	r3, [r0, #0]
 801e6f8:	4770      	bx	lr

0801e6fa <__cxa_pure_virtual>:
 801e6fa:	b508      	push	{r3, lr}
 801e6fc:	f000 f80e 	bl	801e71c <_ZSt9terminatev>

0801e700 <_ZdlPv>:
 801e700:	f000 b844 	b.w	801e78c <free>

0801e704 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801e704:	b508      	push	{r3, lr}
 801e706:	4780      	blx	r0
 801e708:	f000 f80d 	bl	801e726 <abort>

0801e70c <_ZSt13get_terminatev>:
 801e70c:	4b02      	ldr	r3, [pc, #8]	@ (801e718 <_ZSt13get_terminatev+0xc>)
 801e70e:	6818      	ldr	r0, [r3, #0]
 801e710:	f3bf 8f5b 	dmb	ish
 801e714:	4770      	bx	lr
 801e716:	bf00      	nop
 801e718:	200000c0 	.word	0x200000c0

0801e71c <_ZSt9terminatev>:
 801e71c:	b508      	push	{r3, lr}
 801e71e:	f7ff fff5 	bl	801e70c <_ZSt13get_terminatev>
 801e722:	f7ff ffef 	bl	801e704 <_ZN10__cxxabiv111__terminateEPFvvE>

0801e726 <abort>:
 801e726:	b508      	push	{r3, lr}
 801e728:	2006      	movs	r0, #6
 801e72a:	f000 faf5 	bl	801ed18 <raise>
 801e72e:	2001      	movs	r0, #1
 801e730:	f7e2 fda8 	bl	8001284 <_exit>

0801e734 <__assert_func>:
 801e734:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801e736:	4614      	mov	r4, r2
 801e738:	461a      	mov	r2, r3
 801e73a:	4b09      	ldr	r3, [pc, #36]	@ (801e760 <__assert_func+0x2c>)
 801e73c:	681b      	ldr	r3, [r3, #0]
 801e73e:	4605      	mov	r5, r0
 801e740:	68d8      	ldr	r0, [r3, #12]
 801e742:	b954      	cbnz	r4, 801e75a <__assert_func+0x26>
 801e744:	4b07      	ldr	r3, [pc, #28]	@ (801e764 <__assert_func+0x30>)
 801e746:	461c      	mov	r4, r3
 801e748:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801e74c:	9100      	str	r1, [sp, #0]
 801e74e:	462b      	mov	r3, r5
 801e750:	4905      	ldr	r1, [pc, #20]	@ (801e768 <__assert_func+0x34>)
 801e752:	f000 f983 	bl	801ea5c <fiprintf>
 801e756:	f7ff ffe6 	bl	801e726 <abort>
 801e75a:	4b04      	ldr	r3, [pc, #16]	@ (801e76c <__assert_func+0x38>)
 801e75c:	e7f4      	b.n	801e748 <__assert_func+0x14>
 801e75e:	bf00      	nop
 801e760:	200000d0 	.word	0x200000d0
 801e764:	080215f3 	.word	0x080215f3
 801e768:	080215c5 	.word	0x080215c5
 801e76c:	080215b8 	.word	0x080215b8

0801e770 <atexit>:
 801e770:	2300      	movs	r3, #0
 801e772:	4601      	mov	r1, r0
 801e774:	461a      	mov	r2, r3
 801e776:	4618      	mov	r0, r3
 801e778:	f000 bb7c 	b.w	801ee74 <__register_exitproc>

0801e77c <malloc>:
 801e77c:	4b02      	ldr	r3, [pc, #8]	@ (801e788 <malloc+0xc>)
 801e77e:	4601      	mov	r1, r0
 801e780:	6818      	ldr	r0, [r3, #0]
 801e782:	f000 b82d 	b.w	801e7e0 <_malloc_r>
 801e786:	bf00      	nop
 801e788:	200000d0 	.word	0x200000d0

0801e78c <free>:
 801e78c:	4b02      	ldr	r3, [pc, #8]	@ (801e798 <free+0xc>)
 801e78e:	4601      	mov	r1, r0
 801e790:	6818      	ldr	r0, [r3, #0]
 801e792:	f000 bbcb 	b.w	801ef2c <_free_r>
 801e796:	bf00      	nop
 801e798:	200000d0 	.word	0x200000d0

0801e79c <sbrk_aligned>:
 801e79c:	b570      	push	{r4, r5, r6, lr}
 801e79e:	4e0f      	ldr	r6, [pc, #60]	@ (801e7dc <sbrk_aligned+0x40>)
 801e7a0:	460c      	mov	r4, r1
 801e7a2:	6831      	ldr	r1, [r6, #0]
 801e7a4:	4605      	mov	r5, r0
 801e7a6:	b911      	cbnz	r1, 801e7ae <sbrk_aligned+0x12>
 801e7a8:	f000 fb06 	bl	801edb8 <_sbrk_r>
 801e7ac:	6030      	str	r0, [r6, #0]
 801e7ae:	4621      	mov	r1, r4
 801e7b0:	4628      	mov	r0, r5
 801e7b2:	f000 fb01 	bl	801edb8 <_sbrk_r>
 801e7b6:	1c43      	adds	r3, r0, #1
 801e7b8:	d103      	bne.n	801e7c2 <sbrk_aligned+0x26>
 801e7ba:	f04f 34ff 	mov.w	r4, #4294967295
 801e7be:	4620      	mov	r0, r4
 801e7c0:	bd70      	pop	{r4, r5, r6, pc}
 801e7c2:	1cc4      	adds	r4, r0, #3
 801e7c4:	f024 0403 	bic.w	r4, r4, #3
 801e7c8:	42a0      	cmp	r0, r4
 801e7ca:	d0f8      	beq.n	801e7be <sbrk_aligned+0x22>
 801e7cc:	1a21      	subs	r1, r4, r0
 801e7ce:	4628      	mov	r0, r5
 801e7d0:	f000 faf2 	bl	801edb8 <_sbrk_r>
 801e7d4:	3001      	adds	r0, #1
 801e7d6:	d1f2      	bne.n	801e7be <sbrk_aligned+0x22>
 801e7d8:	e7ef      	b.n	801e7ba <sbrk_aligned+0x1e>
 801e7da:	bf00      	nop
 801e7dc:	200159f8 	.word	0x200159f8

0801e7e0 <_malloc_r>:
 801e7e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801e7e4:	1ccd      	adds	r5, r1, #3
 801e7e6:	f025 0503 	bic.w	r5, r5, #3
 801e7ea:	3508      	adds	r5, #8
 801e7ec:	2d0c      	cmp	r5, #12
 801e7ee:	bf38      	it	cc
 801e7f0:	250c      	movcc	r5, #12
 801e7f2:	2d00      	cmp	r5, #0
 801e7f4:	4606      	mov	r6, r0
 801e7f6:	db01      	blt.n	801e7fc <_malloc_r+0x1c>
 801e7f8:	42a9      	cmp	r1, r5
 801e7fa:	d904      	bls.n	801e806 <_malloc_r+0x26>
 801e7fc:	230c      	movs	r3, #12
 801e7fe:	6033      	str	r3, [r6, #0]
 801e800:	2000      	movs	r0, #0
 801e802:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801e806:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 801e8dc <_malloc_r+0xfc>
 801e80a:	f000 f869 	bl	801e8e0 <__malloc_lock>
 801e80e:	f8d8 3000 	ldr.w	r3, [r8]
 801e812:	461c      	mov	r4, r3
 801e814:	bb44      	cbnz	r4, 801e868 <_malloc_r+0x88>
 801e816:	4629      	mov	r1, r5
 801e818:	4630      	mov	r0, r6
 801e81a:	f7ff ffbf 	bl	801e79c <sbrk_aligned>
 801e81e:	1c43      	adds	r3, r0, #1
 801e820:	4604      	mov	r4, r0
 801e822:	d158      	bne.n	801e8d6 <_malloc_r+0xf6>
 801e824:	f8d8 4000 	ldr.w	r4, [r8]
 801e828:	4627      	mov	r7, r4
 801e82a:	2f00      	cmp	r7, #0
 801e82c:	d143      	bne.n	801e8b6 <_malloc_r+0xd6>
 801e82e:	2c00      	cmp	r4, #0
 801e830:	d04b      	beq.n	801e8ca <_malloc_r+0xea>
 801e832:	6823      	ldr	r3, [r4, #0]
 801e834:	4639      	mov	r1, r7
 801e836:	4630      	mov	r0, r6
 801e838:	eb04 0903 	add.w	r9, r4, r3
 801e83c:	f000 fabc 	bl	801edb8 <_sbrk_r>
 801e840:	4581      	cmp	r9, r0
 801e842:	d142      	bne.n	801e8ca <_malloc_r+0xea>
 801e844:	6821      	ldr	r1, [r4, #0]
 801e846:	1a6d      	subs	r5, r5, r1
 801e848:	4629      	mov	r1, r5
 801e84a:	4630      	mov	r0, r6
 801e84c:	f7ff ffa6 	bl	801e79c <sbrk_aligned>
 801e850:	3001      	adds	r0, #1
 801e852:	d03a      	beq.n	801e8ca <_malloc_r+0xea>
 801e854:	6823      	ldr	r3, [r4, #0]
 801e856:	442b      	add	r3, r5
 801e858:	6023      	str	r3, [r4, #0]
 801e85a:	f8d8 3000 	ldr.w	r3, [r8]
 801e85e:	685a      	ldr	r2, [r3, #4]
 801e860:	bb62      	cbnz	r2, 801e8bc <_malloc_r+0xdc>
 801e862:	f8c8 7000 	str.w	r7, [r8]
 801e866:	e00f      	b.n	801e888 <_malloc_r+0xa8>
 801e868:	6822      	ldr	r2, [r4, #0]
 801e86a:	1b52      	subs	r2, r2, r5
 801e86c:	d420      	bmi.n	801e8b0 <_malloc_r+0xd0>
 801e86e:	2a0b      	cmp	r2, #11
 801e870:	d917      	bls.n	801e8a2 <_malloc_r+0xc2>
 801e872:	1961      	adds	r1, r4, r5
 801e874:	42a3      	cmp	r3, r4
 801e876:	6025      	str	r5, [r4, #0]
 801e878:	bf18      	it	ne
 801e87a:	6059      	strne	r1, [r3, #4]
 801e87c:	6863      	ldr	r3, [r4, #4]
 801e87e:	bf08      	it	eq
 801e880:	f8c8 1000 	streq.w	r1, [r8]
 801e884:	5162      	str	r2, [r4, r5]
 801e886:	604b      	str	r3, [r1, #4]
 801e888:	4630      	mov	r0, r6
 801e88a:	f000 f82f 	bl	801e8ec <__malloc_unlock>
 801e88e:	f104 000b 	add.w	r0, r4, #11
 801e892:	1d23      	adds	r3, r4, #4
 801e894:	f020 0007 	bic.w	r0, r0, #7
 801e898:	1ac2      	subs	r2, r0, r3
 801e89a:	bf1c      	itt	ne
 801e89c:	1a1b      	subne	r3, r3, r0
 801e89e:	50a3      	strne	r3, [r4, r2]
 801e8a0:	e7af      	b.n	801e802 <_malloc_r+0x22>
 801e8a2:	6862      	ldr	r2, [r4, #4]
 801e8a4:	42a3      	cmp	r3, r4
 801e8a6:	bf0c      	ite	eq
 801e8a8:	f8c8 2000 	streq.w	r2, [r8]
 801e8ac:	605a      	strne	r2, [r3, #4]
 801e8ae:	e7eb      	b.n	801e888 <_malloc_r+0xa8>
 801e8b0:	4623      	mov	r3, r4
 801e8b2:	6864      	ldr	r4, [r4, #4]
 801e8b4:	e7ae      	b.n	801e814 <_malloc_r+0x34>
 801e8b6:	463c      	mov	r4, r7
 801e8b8:	687f      	ldr	r7, [r7, #4]
 801e8ba:	e7b6      	b.n	801e82a <_malloc_r+0x4a>
 801e8bc:	461a      	mov	r2, r3
 801e8be:	685b      	ldr	r3, [r3, #4]
 801e8c0:	42a3      	cmp	r3, r4
 801e8c2:	d1fb      	bne.n	801e8bc <_malloc_r+0xdc>
 801e8c4:	2300      	movs	r3, #0
 801e8c6:	6053      	str	r3, [r2, #4]
 801e8c8:	e7de      	b.n	801e888 <_malloc_r+0xa8>
 801e8ca:	230c      	movs	r3, #12
 801e8cc:	6033      	str	r3, [r6, #0]
 801e8ce:	4630      	mov	r0, r6
 801e8d0:	f000 f80c 	bl	801e8ec <__malloc_unlock>
 801e8d4:	e794      	b.n	801e800 <_malloc_r+0x20>
 801e8d6:	6005      	str	r5, [r0, #0]
 801e8d8:	e7d6      	b.n	801e888 <_malloc_r+0xa8>
 801e8da:	bf00      	nop
 801e8dc:	200159fc 	.word	0x200159fc

0801e8e0 <__malloc_lock>:
 801e8e0:	4801      	ldr	r0, [pc, #4]	@ (801e8e8 <__malloc_lock+0x8>)
 801e8e2:	f000 bab6 	b.w	801ee52 <__retarget_lock_acquire_recursive>
 801e8e6:	bf00      	nop
 801e8e8:	20015b40 	.word	0x20015b40

0801e8ec <__malloc_unlock>:
 801e8ec:	4801      	ldr	r0, [pc, #4]	@ (801e8f4 <__malloc_unlock+0x8>)
 801e8ee:	f000 bab1 	b.w	801ee54 <__retarget_lock_release_recursive>
 801e8f2:	bf00      	nop
 801e8f4:	20015b40 	.word	0x20015b40

0801e8f8 <__cxa_atexit>:
 801e8f8:	b510      	push	{r4, lr}
 801e8fa:	4604      	mov	r4, r0
 801e8fc:	4804      	ldr	r0, [pc, #16]	@ (801e910 <__cxa_atexit+0x18>)
 801e8fe:	4613      	mov	r3, r2
 801e900:	b120      	cbz	r0, 801e90c <__cxa_atexit+0x14>
 801e902:	460a      	mov	r2, r1
 801e904:	2002      	movs	r0, #2
 801e906:	4621      	mov	r1, r4
 801e908:	f000 fab4 	bl	801ee74 <__register_exitproc>
 801e90c:	bd10      	pop	{r4, pc}
 801e90e:	bf00      	nop
 801e910:	0801ee75 	.word	0x0801ee75

0801e914 <std>:
 801e914:	2300      	movs	r3, #0
 801e916:	b510      	push	{r4, lr}
 801e918:	4604      	mov	r4, r0
 801e91a:	e9c0 3300 	strd	r3, r3, [r0]
 801e91e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801e922:	6083      	str	r3, [r0, #8]
 801e924:	8181      	strh	r1, [r0, #12]
 801e926:	6643      	str	r3, [r0, #100]	@ 0x64
 801e928:	81c2      	strh	r2, [r0, #14]
 801e92a:	6183      	str	r3, [r0, #24]
 801e92c:	4619      	mov	r1, r3
 801e92e:	2208      	movs	r2, #8
 801e930:	305c      	adds	r0, #92	@ 0x5c
 801e932:	f000 f99b 	bl	801ec6c <memset>
 801e936:	4b0d      	ldr	r3, [pc, #52]	@ (801e96c <std+0x58>)
 801e938:	6263      	str	r3, [r4, #36]	@ 0x24
 801e93a:	4b0d      	ldr	r3, [pc, #52]	@ (801e970 <std+0x5c>)
 801e93c:	62a3      	str	r3, [r4, #40]	@ 0x28
 801e93e:	4b0d      	ldr	r3, [pc, #52]	@ (801e974 <std+0x60>)
 801e940:	62e3      	str	r3, [r4, #44]	@ 0x2c
 801e942:	4b0d      	ldr	r3, [pc, #52]	@ (801e978 <std+0x64>)
 801e944:	6323      	str	r3, [r4, #48]	@ 0x30
 801e946:	4b0d      	ldr	r3, [pc, #52]	@ (801e97c <std+0x68>)
 801e948:	6224      	str	r4, [r4, #32]
 801e94a:	429c      	cmp	r4, r3
 801e94c:	d006      	beq.n	801e95c <std+0x48>
 801e94e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 801e952:	4294      	cmp	r4, r2
 801e954:	d002      	beq.n	801e95c <std+0x48>
 801e956:	33d0      	adds	r3, #208	@ 0xd0
 801e958:	429c      	cmp	r4, r3
 801e95a:	d105      	bne.n	801e968 <std+0x54>
 801e95c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 801e960:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e964:	f000 ba74 	b.w	801ee50 <__retarget_lock_init_recursive>
 801e968:	bd10      	pop	{r4, pc}
 801e96a:	bf00      	nop
 801e96c:	0801eabd 	.word	0x0801eabd
 801e970:	0801eadf 	.word	0x0801eadf
 801e974:	0801eb17 	.word	0x0801eb17
 801e978:	0801eb3b 	.word	0x0801eb3b
 801e97c:	20015a00 	.word	0x20015a00

0801e980 <stdio_exit_handler>:
 801e980:	4a02      	ldr	r2, [pc, #8]	@ (801e98c <stdio_exit_handler+0xc>)
 801e982:	4903      	ldr	r1, [pc, #12]	@ (801e990 <stdio_exit_handler+0x10>)
 801e984:	4803      	ldr	r0, [pc, #12]	@ (801e994 <stdio_exit_handler+0x14>)
 801e986:	f000 b87b 	b.w	801ea80 <_fwalk_sglue>
 801e98a:	bf00      	nop
 801e98c:	200000c4 	.word	0x200000c4
 801e990:	0801f669 	.word	0x0801f669
 801e994:	200000d4 	.word	0x200000d4

0801e998 <cleanup_stdio>:
 801e998:	6841      	ldr	r1, [r0, #4]
 801e99a:	4b0c      	ldr	r3, [pc, #48]	@ (801e9cc <cleanup_stdio+0x34>)
 801e99c:	4299      	cmp	r1, r3
 801e99e:	b510      	push	{r4, lr}
 801e9a0:	4604      	mov	r4, r0
 801e9a2:	d001      	beq.n	801e9a8 <cleanup_stdio+0x10>
 801e9a4:	f000 fe60 	bl	801f668 <_fflush_r>
 801e9a8:	68a1      	ldr	r1, [r4, #8]
 801e9aa:	4b09      	ldr	r3, [pc, #36]	@ (801e9d0 <cleanup_stdio+0x38>)
 801e9ac:	4299      	cmp	r1, r3
 801e9ae:	d002      	beq.n	801e9b6 <cleanup_stdio+0x1e>
 801e9b0:	4620      	mov	r0, r4
 801e9b2:	f000 fe59 	bl	801f668 <_fflush_r>
 801e9b6:	68e1      	ldr	r1, [r4, #12]
 801e9b8:	4b06      	ldr	r3, [pc, #24]	@ (801e9d4 <cleanup_stdio+0x3c>)
 801e9ba:	4299      	cmp	r1, r3
 801e9bc:	d004      	beq.n	801e9c8 <cleanup_stdio+0x30>
 801e9be:	4620      	mov	r0, r4
 801e9c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e9c4:	f000 be50 	b.w	801f668 <_fflush_r>
 801e9c8:	bd10      	pop	{r4, pc}
 801e9ca:	bf00      	nop
 801e9cc:	20015a00 	.word	0x20015a00
 801e9d0:	20015a68 	.word	0x20015a68
 801e9d4:	20015ad0 	.word	0x20015ad0

0801e9d8 <global_stdio_init.part.0>:
 801e9d8:	b510      	push	{r4, lr}
 801e9da:	4b0b      	ldr	r3, [pc, #44]	@ (801ea08 <global_stdio_init.part.0+0x30>)
 801e9dc:	4c0b      	ldr	r4, [pc, #44]	@ (801ea0c <global_stdio_init.part.0+0x34>)
 801e9de:	4a0c      	ldr	r2, [pc, #48]	@ (801ea10 <global_stdio_init.part.0+0x38>)
 801e9e0:	601a      	str	r2, [r3, #0]
 801e9e2:	4620      	mov	r0, r4
 801e9e4:	2200      	movs	r2, #0
 801e9e6:	2104      	movs	r1, #4
 801e9e8:	f7ff ff94 	bl	801e914 <std>
 801e9ec:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 801e9f0:	2201      	movs	r2, #1
 801e9f2:	2109      	movs	r1, #9
 801e9f4:	f7ff ff8e 	bl	801e914 <std>
 801e9f8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 801e9fc:	2202      	movs	r2, #2
 801e9fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ea02:	2112      	movs	r1, #18
 801ea04:	f7ff bf86 	b.w	801e914 <std>
 801ea08:	20015b38 	.word	0x20015b38
 801ea0c:	20015a00 	.word	0x20015a00
 801ea10:	0801e981 	.word	0x0801e981

0801ea14 <__sfp_lock_acquire>:
 801ea14:	4801      	ldr	r0, [pc, #4]	@ (801ea1c <__sfp_lock_acquire+0x8>)
 801ea16:	f000 ba1c 	b.w	801ee52 <__retarget_lock_acquire_recursive>
 801ea1a:	bf00      	nop
 801ea1c:	20015b42 	.word	0x20015b42

0801ea20 <__sfp_lock_release>:
 801ea20:	4801      	ldr	r0, [pc, #4]	@ (801ea28 <__sfp_lock_release+0x8>)
 801ea22:	f000 ba17 	b.w	801ee54 <__retarget_lock_release_recursive>
 801ea26:	bf00      	nop
 801ea28:	20015b42 	.word	0x20015b42

0801ea2c <__sinit>:
 801ea2c:	b510      	push	{r4, lr}
 801ea2e:	4604      	mov	r4, r0
 801ea30:	f7ff fff0 	bl	801ea14 <__sfp_lock_acquire>
 801ea34:	6a23      	ldr	r3, [r4, #32]
 801ea36:	b11b      	cbz	r3, 801ea40 <__sinit+0x14>
 801ea38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ea3c:	f7ff bff0 	b.w	801ea20 <__sfp_lock_release>
 801ea40:	4b04      	ldr	r3, [pc, #16]	@ (801ea54 <__sinit+0x28>)
 801ea42:	6223      	str	r3, [r4, #32]
 801ea44:	4b04      	ldr	r3, [pc, #16]	@ (801ea58 <__sinit+0x2c>)
 801ea46:	681b      	ldr	r3, [r3, #0]
 801ea48:	2b00      	cmp	r3, #0
 801ea4a:	d1f5      	bne.n	801ea38 <__sinit+0xc>
 801ea4c:	f7ff ffc4 	bl	801e9d8 <global_stdio_init.part.0>
 801ea50:	e7f2      	b.n	801ea38 <__sinit+0xc>
 801ea52:	bf00      	nop
 801ea54:	0801e999 	.word	0x0801e999
 801ea58:	20015b38 	.word	0x20015b38

0801ea5c <fiprintf>:
 801ea5c:	b40e      	push	{r1, r2, r3}
 801ea5e:	b503      	push	{r0, r1, lr}
 801ea60:	4601      	mov	r1, r0
 801ea62:	ab03      	add	r3, sp, #12
 801ea64:	4805      	ldr	r0, [pc, #20]	@ (801ea7c <fiprintf+0x20>)
 801ea66:	f853 2b04 	ldr.w	r2, [r3], #4
 801ea6a:	6800      	ldr	r0, [r0, #0]
 801ea6c:	9301      	str	r3, [sp, #4]
 801ea6e:	f000 fad1 	bl	801f014 <_vfiprintf_r>
 801ea72:	b002      	add	sp, #8
 801ea74:	f85d eb04 	ldr.w	lr, [sp], #4
 801ea78:	b003      	add	sp, #12
 801ea7a:	4770      	bx	lr
 801ea7c:	200000d0 	.word	0x200000d0

0801ea80 <_fwalk_sglue>:
 801ea80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ea84:	4607      	mov	r7, r0
 801ea86:	4688      	mov	r8, r1
 801ea88:	4614      	mov	r4, r2
 801ea8a:	2600      	movs	r6, #0
 801ea8c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801ea90:	f1b9 0901 	subs.w	r9, r9, #1
 801ea94:	d505      	bpl.n	801eaa2 <_fwalk_sglue+0x22>
 801ea96:	6824      	ldr	r4, [r4, #0]
 801ea98:	2c00      	cmp	r4, #0
 801ea9a:	d1f7      	bne.n	801ea8c <_fwalk_sglue+0xc>
 801ea9c:	4630      	mov	r0, r6
 801ea9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801eaa2:	89ab      	ldrh	r3, [r5, #12]
 801eaa4:	2b01      	cmp	r3, #1
 801eaa6:	d907      	bls.n	801eab8 <_fwalk_sglue+0x38>
 801eaa8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801eaac:	3301      	adds	r3, #1
 801eaae:	d003      	beq.n	801eab8 <_fwalk_sglue+0x38>
 801eab0:	4629      	mov	r1, r5
 801eab2:	4638      	mov	r0, r7
 801eab4:	47c0      	blx	r8
 801eab6:	4306      	orrs	r6, r0
 801eab8:	3568      	adds	r5, #104	@ 0x68
 801eaba:	e7e9      	b.n	801ea90 <_fwalk_sglue+0x10>

0801eabc <__sread>:
 801eabc:	b510      	push	{r4, lr}
 801eabe:	460c      	mov	r4, r1
 801eac0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801eac4:	f000 f952 	bl	801ed6c <_read_r>
 801eac8:	2800      	cmp	r0, #0
 801eaca:	bfab      	itete	ge
 801eacc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 801eace:	89a3      	ldrhlt	r3, [r4, #12]
 801ead0:	181b      	addge	r3, r3, r0
 801ead2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801ead6:	bfac      	ite	ge
 801ead8:	6563      	strge	r3, [r4, #84]	@ 0x54
 801eada:	81a3      	strhlt	r3, [r4, #12]
 801eadc:	bd10      	pop	{r4, pc}

0801eade <__swrite>:
 801eade:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801eae2:	461f      	mov	r7, r3
 801eae4:	898b      	ldrh	r3, [r1, #12]
 801eae6:	05db      	lsls	r3, r3, #23
 801eae8:	4605      	mov	r5, r0
 801eaea:	460c      	mov	r4, r1
 801eaec:	4616      	mov	r6, r2
 801eaee:	d505      	bpl.n	801eafc <__swrite+0x1e>
 801eaf0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801eaf4:	2302      	movs	r3, #2
 801eaf6:	2200      	movs	r2, #0
 801eaf8:	f000 f926 	bl	801ed48 <_lseek_r>
 801eafc:	89a3      	ldrh	r3, [r4, #12]
 801eafe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801eb02:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801eb06:	81a3      	strh	r3, [r4, #12]
 801eb08:	4632      	mov	r2, r6
 801eb0a:	463b      	mov	r3, r7
 801eb0c:	4628      	mov	r0, r5
 801eb0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801eb12:	f000 b961 	b.w	801edd8 <_write_r>

0801eb16 <__sseek>:
 801eb16:	b510      	push	{r4, lr}
 801eb18:	460c      	mov	r4, r1
 801eb1a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801eb1e:	f000 f913 	bl	801ed48 <_lseek_r>
 801eb22:	1c43      	adds	r3, r0, #1
 801eb24:	89a3      	ldrh	r3, [r4, #12]
 801eb26:	bf15      	itete	ne
 801eb28:	6560      	strne	r0, [r4, #84]	@ 0x54
 801eb2a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 801eb2e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 801eb32:	81a3      	strheq	r3, [r4, #12]
 801eb34:	bf18      	it	ne
 801eb36:	81a3      	strhne	r3, [r4, #12]
 801eb38:	bd10      	pop	{r4, pc}

0801eb3a <__sclose>:
 801eb3a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801eb3e:	f000 b8f3 	b.w	801ed28 <_close_r>

0801eb42 <__swbuf_r>:
 801eb42:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801eb44:	460e      	mov	r6, r1
 801eb46:	4614      	mov	r4, r2
 801eb48:	4605      	mov	r5, r0
 801eb4a:	b118      	cbz	r0, 801eb54 <__swbuf_r+0x12>
 801eb4c:	6a03      	ldr	r3, [r0, #32]
 801eb4e:	b90b      	cbnz	r3, 801eb54 <__swbuf_r+0x12>
 801eb50:	f7ff ff6c 	bl	801ea2c <__sinit>
 801eb54:	69a3      	ldr	r3, [r4, #24]
 801eb56:	60a3      	str	r3, [r4, #8]
 801eb58:	89a3      	ldrh	r3, [r4, #12]
 801eb5a:	071a      	lsls	r2, r3, #28
 801eb5c:	d501      	bpl.n	801eb62 <__swbuf_r+0x20>
 801eb5e:	6923      	ldr	r3, [r4, #16]
 801eb60:	b943      	cbnz	r3, 801eb74 <__swbuf_r+0x32>
 801eb62:	4621      	mov	r1, r4
 801eb64:	4628      	mov	r0, r5
 801eb66:	f000 f82b 	bl	801ebc0 <__swsetup_r>
 801eb6a:	b118      	cbz	r0, 801eb74 <__swbuf_r+0x32>
 801eb6c:	f04f 37ff 	mov.w	r7, #4294967295
 801eb70:	4638      	mov	r0, r7
 801eb72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801eb74:	6823      	ldr	r3, [r4, #0]
 801eb76:	6922      	ldr	r2, [r4, #16]
 801eb78:	1a98      	subs	r0, r3, r2
 801eb7a:	6963      	ldr	r3, [r4, #20]
 801eb7c:	b2f6      	uxtb	r6, r6
 801eb7e:	4283      	cmp	r3, r0
 801eb80:	4637      	mov	r7, r6
 801eb82:	dc05      	bgt.n	801eb90 <__swbuf_r+0x4e>
 801eb84:	4621      	mov	r1, r4
 801eb86:	4628      	mov	r0, r5
 801eb88:	f000 fd6e 	bl	801f668 <_fflush_r>
 801eb8c:	2800      	cmp	r0, #0
 801eb8e:	d1ed      	bne.n	801eb6c <__swbuf_r+0x2a>
 801eb90:	68a3      	ldr	r3, [r4, #8]
 801eb92:	3b01      	subs	r3, #1
 801eb94:	60a3      	str	r3, [r4, #8]
 801eb96:	6823      	ldr	r3, [r4, #0]
 801eb98:	1c5a      	adds	r2, r3, #1
 801eb9a:	6022      	str	r2, [r4, #0]
 801eb9c:	701e      	strb	r6, [r3, #0]
 801eb9e:	6962      	ldr	r2, [r4, #20]
 801eba0:	1c43      	adds	r3, r0, #1
 801eba2:	429a      	cmp	r2, r3
 801eba4:	d004      	beq.n	801ebb0 <__swbuf_r+0x6e>
 801eba6:	89a3      	ldrh	r3, [r4, #12]
 801eba8:	07db      	lsls	r3, r3, #31
 801ebaa:	d5e1      	bpl.n	801eb70 <__swbuf_r+0x2e>
 801ebac:	2e0a      	cmp	r6, #10
 801ebae:	d1df      	bne.n	801eb70 <__swbuf_r+0x2e>
 801ebb0:	4621      	mov	r1, r4
 801ebb2:	4628      	mov	r0, r5
 801ebb4:	f000 fd58 	bl	801f668 <_fflush_r>
 801ebb8:	2800      	cmp	r0, #0
 801ebba:	d0d9      	beq.n	801eb70 <__swbuf_r+0x2e>
 801ebbc:	e7d6      	b.n	801eb6c <__swbuf_r+0x2a>
	...

0801ebc0 <__swsetup_r>:
 801ebc0:	b538      	push	{r3, r4, r5, lr}
 801ebc2:	4b29      	ldr	r3, [pc, #164]	@ (801ec68 <__swsetup_r+0xa8>)
 801ebc4:	4605      	mov	r5, r0
 801ebc6:	6818      	ldr	r0, [r3, #0]
 801ebc8:	460c      	mov	r4, r1
 801ebca:	b118      	cbz	r0, 801ebd4 <__swsetup_r+0x14>
 801ebcc:	6a03      	ldr	r3, [r0, #32]
 801ebce:	b90b      	cbnz	r3, 801ebd4 <__swsetup_r+0x14>
 801ebd0:	f7ff ff2c 	bl	801ea2c <__sinit>
 801ebd4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ebd8:	0719      	lsls	r1, r3, #28
 801ebda:	d422      	bmi.n	801ec22 <__swsetup_r+0x62>
 801ebdc:	06da      	lsls	r2, r3, #27
 801ebde:	d407      	bmi.n	801ebf0 <__swsetup_r+0x30>
 801ebe0:	2209      	movs	r2, #9
 801ebe2:	602a      	str	r2, [r5, #0]
 801ebe4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801ebe8:	81a3      	strh	r3, [r4, #12]
 801ebea:	f04f 30ff 	mov.w	r0, #4294967295
 801ebee:	e033      	b.n	801ec58 <__swsetup_r+0x98>
 801ebf0:	0758      	lsls	r0, r3, #29
 801ebf2:	d512      	bpl.n	801ec1a <__swsetup_r+0x5a>
 801ebf4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801ebf6:	b141      	cbz	r1, 801ec0a <__swsetup_r+0x4a>
 801ebf8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801ebfc:	4299      	cmp	r1, r3
 801ebfe:	d002      	beq.n	801ec06 <__swsetup_r+0x46>
 801ec00:	4628      	mov	r0, r5
 801ec02:	f000 f993 	bl	801ef2c <_free_r>
 801ec06:	2300      	movs	r3, #0
 801ec08:	6363      	str	r3, [r4, #52]	@ 0x34
 801ec0a:	89a3      	ldrh	r3, [r4, #12]
 801ec0c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 801ec10:	81a3      	strh	r3, [r4, #12]
 801ec12:	2300      	movs	r3, #0
 801ec14:	6063      	str	r3, [r4, #4]
 801ec16:	6923      	ldr	r3, [r4, #16]
 801ec18:	6023      	str	r3, [r4, #0]
 801ec1a:	89a3      	ldrh	r3, [r4, #12]
 801ec1c:	f043 0308 	orr.w	r3, r3, #8
 801ec20:	81a3      	strh	r3, [r4, #12]
 801ec22:	6923      	ldr	r3, [r4, #16]
 801ec24:	b94b      	cbnz	r3, 801ec3a <__swsetup_r+0x7a>
 801ec26:	89a3      	ldrh	r3, [r4, #12]
 801ec28:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 801ec2c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 801ec30:	d003      	beq.n	801ec3a <__swsetup_r+0x7a>
 801ec32:	4621      	mov	r1, r4
 801ec34:	4628      	mov	r0, r5
 801ec36:	f000 fd65 	bl	801f704 <__smakebuf_r>
 801ec3a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ec3e:	f013 0201 	ands.w	r2, r3, #1
 801ec42:	d00a      	beq.n	801ec5a <__swsetup_r+0x9a>
 801ec44:	2200      	movs	r2, #0
 801ec46:	60a2      	str	r2, [r4, #8]
 801ec48:	6962      	ldr	r2, [r4, #20]
 801ec4a:	4252      	negs	r2, r2
 801ec4c:	61a2      	str	r2, [r4, #24]
 801ec4e:	6922      	ldr	r2, [r4, #16]
 801ec50:	b942      	cbnz	r2, 801ec64 <__swsetup_r+0xa4>
 801ec52:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801ec56:	d1c5      	bne.n	801ebe4 <__swsetup_r+0x24>
 801ec58:	bd38      	pop	{r3, r4, r5, pc}
 801ec5a:	0799      	lsls	r1, r3, #30
 801ec5c:	bf58      	it	pl
 801ec5e:	6962      	ldrpl	r2, [r4, #20]
 801ec60:	60a2      	str	r2, [r4, #8]
 801ec62:	e7f4      	b.n	801ec4e <__swsetup_r+0x8e>
 801ec64:	2000      	movs	r0, #0
 801ec66:	e7f7      	b.n	801ec58 <__swsetup_r+0x98>
 801ec68:	200000d0 	.word	0x200000d0

0801ec6c <memset>:
 801ec6c:	4402      	add	r2, r0
 801ec6e:	4603      	mov	r3, r0
 801ec70:	4293      	cmp	r3, r2
 801ec72:	d100      	bne.n	801ec76 <memset+0xa>
 801ec74:	4770      	bx	lr
 801ec76:	f803 1b01 	strb.w	r1, [r3], #1
 801ec7a:	e7f9      	b.n	801ec70 <memset+0x4>

0801ec7c <strncmp>:
 801ec7c:	b510      	push	{r4, lr}
 801ec7e:	b16a      	cbz	r2, 801ec9c <strncmp+0x20>
 801ec80:	3901      	subs	r1, #1
 801ec82:	1884      	adds	r4, r0, r2
 801ec84:	f810 2b01 	ldrb.w	r2, [r0], #1
 801ec88:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 801ec8c:	429a      	cmp	r2, r3
 801ec8e:	d103      	bne.n	801ec98 <strncmp+0x1c>
 801ec90:	42a0      	cmp	r0, r4
 801ec92:	d001      	beq.n	801ec98 <strncmp+0x1c>
 801ec94:	2a00      	cmp	r2, #0
 801ec96:	d1f5      	bne.n	801ec84 <strncmp+0x8>
 801ec98:	1ad0      	subs	r0, r2, r3
 801ec9a:	bd10      	pop	{r4, pc}
 801ec9c:	4610      	mov	r0, r2
 801ec9e:	e7fc      	b.n	801ec9a <strncmp+0x1e>

0801eca0 <strncpy>:
 801eca0:	b510      	push	{r4, lr}
 801eca2:	3901      	subs	r1, #1
 801eca4:	4603      	mov	r3, r0
 801eca6:	b132      	cbz	r2, 801ecb6 <strncpy+0x16>
 801eca8:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 801ecac:	f803 4b01 	strb.w	r4, [r3], #1
 801ecb0:	3a01      	subs	r2, #1
 801ecb2:	2c00      	cmp	r4, #0
 801ecb4:	d1f7      	bne.n	801eca6 <strncpy+0x6>
 801ecb6:	441a      	add	r2, r3
 801ecb8:	2100      	movs	r1, #0
 801ecba:	4293      	cmp	r3, r2
 801ecbc:	d100      	bne.n	801ecc0 <strncpy+0x20>
 801ecbe:	bd10      	pop	{r4, pc}
 801ecc0:	f803 1b01 	strb.w	r1, [r3], #1
 801ecc4:	e7f9      	b.n	801ecba <strncpy+0x1a>

0801ecc6 <_raise_r>:
 801ecc6:	291f      	cmp	r1, #31
 801ecc8:	b538      	push	{r3, r4, r5, lr}
 801ecca:	4605      	mov	r5, r0
 801eccc:	460c      	mov	r4, r1
 801ecce:	d904      	bls.n	801ecda <_raise_r+0x14>
 801ecd0:	2316      	movs	r3, #22
 801ecd2:	6003      	str	r3, [r0, #0]
 801ecd4:	f04f 30ff 	mov.w	r0, #4294967295
 801ecd8:	bd38      	pop	{r3, r4, r5, pc}
 801ecda:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 801ecdc:	b112      	cbz	r2, 801ece4 <_raise_r+0x1e>
 801ecde:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801ece2:	b94b      	cbnz	r3, 801ecf8 <_raise_r+0x32>
 801ece4:	4628      	mov	r0, r5
 801ece6:	f000 f865 	bl	801edb4 <_getpid_r>
 801ecea:	4622      	mov	r2, r4
 801ecec:	4601      	mov	r1, r0
 801ecee:	4628      	mov	r0, r5
 801ecf0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801ecf4:	f000 b84c 	b.w	801ed90 <_kill_r>
 801ecf8:	2b01      	cmp	r3, #1
 801ecfa:	d00a      	beq.n	801ed12 <_raise_r+0x4c>
 801ecfc:	1c59      	adds	r1, r3, #1
 801ecfe:	d103      	bne.n	801ed08 <_raise_r+0x42>
 801ed00:	2316      	movs	r3, #22
 801ed02:	6003      	str	r3, [r0, #0]
 801ed04:	2001      	movs	r0, #1
 801ed06:	e7e7      	b.n	801ecd8 <_raise_r+0x12>
 801ed08:	2100      	movs	r1, #0
 801ed0a:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 801ed0e:	4620      	mov	r0, r4
 801ed10:	4798      	blx	r3
 801ed12:	2000      	movs	r0, #0
 801ed14:	e7e0      	b.n	801ecd8 <_raise_r+0x12>
	...

0801ed18 <raise>:
 801ed18:	4b02      	ldr	r3, [pc, #8]	@ (801ed24 <raise+0xc>)
 801ed1a:	4601      	mov	r1, r0
 801ed1c:	6818      	ldr	r0, [r3, #0]
 801ed1e:	f7ff bfd2 	b.w	801ecc6 <_raise_r>
 801ed22:	bf00      	nop
 801ed24:	200000d0 	.word	0x200000d0

0801ed28 <_close_r>:
 801ed28:	b538      	push	{r3, r4, r5, lr}
 801ed2a:	4d06      	ldr	r5, [pc, #24]	@ (801ed44 <_close_r+0x1c>)
 801ed2c:	2300      	movs	r3, #0
 801ed2e:	4604      	mov	r4, r0
 801ed30:	4608      	mov	r0, r1
 801ed32:	602b      	str	r3, [r5, #0]
 801ed34:	f7e2 fac8 	bl	80012c8 <_close>
 801ed38:	1c43      	adds	r3, r0, #1
 801ed3a:	d102      	bne.n	801ed42 <_close_r+0x1a>
 801ed3c:	682b      	ldr	r3, [r5, #0]
 801ed3e:	b103      	cbz	r3, 801ed42 <_close_r+0x1a>
 801ed40:	6023      	str	r3, [r4, #0]
 801ed42:	bd38      	pop	{r3, r4, r5, pc}
 801ed44:	20015b3c 	.word	0x20015b3c

0801ed48 <_lseek_r>:
 801ed48:	b538      	push	{r3, r4, r5, lr}
 801ed4a:	4d07      	ldr	r5, [pc, #28]	@ (801ed68 <_lseek_r+0x20>)
 801ed4c:	4604      	mov	r4, r0
 801ed4e:	4608      	mov	r0, r1
 801ed50:	4611      	mov	r1, r2
 801ed52:	2200      	movs	r2, #0
 801ed54:	602a      	str	r2, [r5, #0]
 801ed56:	461a      	mov	r2, r3
 801ed58:	f7e2 fac0 	bl	80012dc <_lseek>
 801ed5c:	1c43      	adds	r3, r0, #1
 801ed5e:	d102      	bne.n	801ed66 <_lseek_r+0x1e>
 801ed60:	682b      	ldr	r3, [r5, #0]
 801ed62:	b103      	cbz	r3, 801ed66 <_lseek_r+0x1e>
 801ed64:	6023      	str	r3, [r4, #0]
 801ed66:	bd38      	pop	{r3, r4, r5, pc}
 801ed68:	20015b3c 	.word	0x20015b3c

0801ed6c <_read_r>:
 801ed6c:	b538      	push	{r3, r4, r5, lr}
 801ed6e:	4d07      	ldr	r5, [pc, #28]	@ (801ed8c <_read_r+0x20>)
 801ed70:	4604      	mov	r4, r0
 801ed72:	4608      	mov	r0, r1
 801ed74:	4611      	mov	r1, r2
 801ed76:	2200      	movs	r2, #0
 801ed78:	602a      	str	r2, [r5, #0]
 801ed7a:	461a      	mov	r2, r3
 801ed7c:	f7e2 fa88 	bl	8001290 <_read>
 801ed80:	1c43      	adds	r3, r0, #1
 801ed82:	d102      	bne.n	801ed8a <_read_r+0x1e>
 801ed84:	682b      	ldr	r3, [r5, #0]
 801ed86:	b103      	cbz	r3, 801ed8a <_read_r+0x1e>
 801ed88:	6023      	str	r3, [r4, #0]
 801ed8a:	bd38      	pop	{r3, r4, r5, pc}
 801ed8c:	20015b3c 	.word	0x20015b3c

0801ed90 <_kill_r>:
 801ed90:	b538      	push	{r3, r4, r5, lr}
 801ed92:	4d07      	ldr	r5, [pc, #28]	@ (801edb0 <_kill_r+0x20>)
 801ed94:	2300      	movs	r3, #0
 801ed96:	4604      	mov	r4, r0
 801ed98:	4608      	mov	r0, r1
 801ed9a:	4611      	mov	r1, r2
 801ed9c:	602b      	str	r3, [r5, #0]
 801ed9e:	f7e2 fa69 	bl	8001274 <_kill>
 801eda2:	1c43      	adds	r3, r0, #1
 801eda4:	d102      	bne.n	801edac <_kill_r+0x1c>
 801eda6:	682b      	ldr	r3, [r5, #0]
 801eda8:	b103      	cbz	r3, 801edac <_kill_r+0x1c>
 801edaa:	6023      	str	r3, [r4, #0]
 801edac:	bd38      	pop	{r3, r4, r5, pc}
 801edae:	bf00      	nop
 801edb0:	20015b3c 	.word	0x20015b3c

0801edb4 <_getpid_r>:
 801edb4:	f7e2 ba5c 	b.w	8001270 <_getpid>

0801edb8 <_sbrk_r>:
 801edb8:	b538      	push	{r3, r4, r5, lr}
 801edba:	4d06      	ldr	r5, [pc, #24]	@ (801edd4 <_sbrk_r+0x1c>)
 801edbc:	2300      	movs	r3, #0
 801edbe:	4604      	mov	r4, r0
 801edc0:	4608      	mov	r0, r1
 801edc2:	602b      	str	r3, [r5, #0]
 801edc4:	f7e2 fa8c 	bl	80012e0 <_sbrk>
 801edc8:	1c43      	adds	r3, r0, #1
 801edca:	d102      	bne.n	801edd2 <_sbrk_r+0x1a>
 801edcc:	682b      	ldr	r3, [r5, #0]
 801edce:	b103      	cbz	r3, 801edd2 <_sbrk_r+0x1a>
 801edd0:	6023      	str	r3, [r4, #0]
 801edd2:	bd38      	pop	{r3, r4, r5, pc}
 801edd4:	20015b3c 	.word	0x20015b3c

0801edd8 <_write_r>:
 801edd8:	b538      	push	{r3, r4, r5, lr}
 801edda:	4d07      	ldr	r5, [pc, #28]	@ (801edf8 <_write_r+0x20>)
 801eddc:	4604      	mov	r4, r0
 801edde:	4608      	mov	r0, r1
 801ede0:	4611      	mov	r1, r2
 801ede2:	2200      	movs	r2, #0
 801ede4:	602a      	str	r2, [r5, #0]
 801ede6:	461a      	mov	r2, r3
 801ede8:	f7e2 fa60 	bl	80012ac <_write>
 801edec:	1c43      	adds	r3, r0, #1
 801edee:	d102      	bne.n	801edf6 <_write_r+0x1e>
 801edf0:	682b      	ldr	r3, [r5, #0]
 801edf2:	b103      	cbz	r3, 801edf6 <_write_r+0x1e>
 801edf4:	6023      	str	r3, [r4, #0]
 801edf6:	bd38      	pop	{r3, r4, r5, pc}
 801edf8:	20015b3c 	.word	0x20015b3c

0801edfc <__errno>:
 801edfc:	4b01      	ldr	r3, [pc, #4]	@ (801ee04 <__errno+0x8>)
 801edfe:	6818      	ldr	r0, [r3, #0]
 801ee00:	4770      	bx	lr
 801ee02:	bf00      	nop
 801ee04:	200000d0 	.word	0x200000d0

0801ee08 <__libc_init_array>:
 801ee08:	b570      	push	{r4, r5, r6, lr}
 801ee0a:	4d0d      	ldr	r5, [pc, #52]	@ (801ee40 <__libc_init_array+0x38>)
 801ee0c:	4c0d      	ldr	r4, [pc, #52]	@ (801ee44 <__libc_init_array+0x3c>)
 801ee0e:	1b64      	subs	r4, r4, r5
 801ee10:	10a4      	asrs	r4, r4, #2
 801ee12:	2600      	movs	r6, #0
 801ee14:	42a6      	cmp	r6, r4
 801ee16:	d109      	bne.n	801ee2c <__libc_init_array+0x24>
 801ee18:	4d0b      	ldr	r5, [pc, #44]	@ (801ee48 <__libc_init_array+0x40>)
 801ee1a:	4c0c      	ldr	r4, [pc, #48]	@ (801ee4c <__libc_init_array+0x44>)
 801ee1c:	f000 fcd0 	bl	801f7c0 <_init>
 801ee20:	1b64      	subs	r4, r4, r5
 801ee22:	10a4      	asrs	r4, r4, #2
 801ee24:	2600      	movs	r6, #0
 801ee26:	42a6      	cmp	r6, r4
 801ee28:	d105      	bne.n	801ee36 <__libc_init_array+0x2e>
 801ee2a:	bd70      	pop	{r4, r5, r6, pc}
 801ee2c:	f855 3b04 	ldr.w	r3, [r5], #4
 801ee30:	4798      	blx	r3
 801ee32:	3601      	adds	r6, #1
 801ee34:	e7ee      	b.n	801ee14 <__libc_init_array+0xc>
 801ee36:	f855 3b04 	ldr.w	r3, [r5], #4
 801ee3a:	4798      	blx	r3
 801ee3c:	3601      	adds	r6, #1
 801ee3e:	e7f2      	b.n	801ee26 <__libc_init_array+0x1e>
 801ee40:	0802168c 	.word	0x0802168c
 801ee44:	0802168c 	.word	0x0802168c
 801ee48:	0802168c 	.word	0x0802168c
 801ee4c:	080216a4 	.word	0x080216a4

0801ee50 <__retarget_lock_init_recursive>:
 801ee50:	4770      	bx	lr

0801ee52 <__retarget_lock_acquire_recursive>:
 801ee52:	4770      	bx	lr

0801ee54 <__retarget_lock_release_recursive>:
 801ee54:	4770      	bx	lr

0801ee56 <memcpy>:
 801ee56:	440a      	add	r2, r1
 801ee58:	4291      	cmp	r1, r2
 801ee5a:	f100 33ff 	add.w	r3, r0, #4294967295
 801ee5e:	d100      	bne.n	801ee62 <memcpy+0xc>
 801ee60:	4770      	bx	lr
 801ee62:	b510      	push	{r4, lr}
 801ee64:	f811 4b01 	ldrb.w	r4, [r1], #1
 801ee68:	f803 4f01 	strb.w	r4, [r3, #1]!
 801ee6c:	4291      	cmp	r1, r2
 801ee6e:	d1f9      	bne.n	801ee64 <memcpy+0xe>
 801ee70:	bd10      	pop	{r4, pc}
	...

0801ee74 <__register_exitproc>:
 801ee74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ee78:	4d27      	ldr	r5, [pc, #156]	@ (801ef18 <__register_exitproc+0xa4>)
 801ee7a:	4607      	mov	r7, r0
 801ee7c:	6828      	ldr	r0, [r5, #0]
 801ee7e:	4691      	mov	r9, r2
 801ee80:	460e      	mov	r6, r1
 801ee82:	4698      	mov	r8, r3
 801ee84:	f7ff ffe5 	bl	801ee52 <__retarget_lock_acquire_recursive>
 801ee88:	4a24      	ldr	r2, [pc, #144]	@ (801ef1c <__register_exitproc+0xa8>)
 801ee8a:	6814      	ldr	r4, [r2, #0]
 801ee8c:	b93c      	cbnz	r4, 801ee9e <__register_exitproc+0x2a>
 801ee8e:	4b24      	ldr	r3, [pc, #144]	@ (801ef20 <__register_exitproc+0xac>)
 801ee90:	6013      	str	r3, [r2, #0]
 801ee92:	4a24      	ldr	r2, [pc, #144]	@ (801ef24 <__register_exitproc+0xb0>)
 801ee94:	b112      	cbz	r2, 801ee9c <__register_exitproc+0x28>
 801ee96:	6812      	ldr	r2, [r2, #0]
 801ee98:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 801ee9c:	4c20      	ldr	r4, [pc, #128]	@ (801ef20 <__register_exitproc+0xac>)
 801ee9e:	6863      	ldr	r3, [r4, #4]
 801eea0:	2b1f      	cmp	r3, #31
 801eea2:	dd06      	ble.n	801eeb2 <__register_exitproc+0x3e>
 801eea4:	6828      	ldr	r0, [r5, #0]
 801eea6:	f7ff ffd5 	bl	801ee54 <__retarget_lock_release_recursive>
 801eeaa:	f04f 30ff 	mov.w	r0, #4294967295
 801eeae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801eeb2:	b32f      	cbz	r7, 801ef00 <__register_exitproc+0x8c>
 801eeb4:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 801eeb8:	b968      	cbnz	r0, 801eed6 <__register_exitproc+0x62>
 801eeba:	4b1b      	ldr	r3, [pc, #108]	@ (801ef28 <__register_exitproc+0xb4>)
 801eebc:	2b00      	cmp	r3, #0
 801eebe:	d0f1      	beq.n	801eea4 <__register_exitproc+0x30>
 801eec0:	f44f 7084 	mov.w	r0, #264	@ 0x108
 801eec4:	f7ff fc5a 	bl	801e77c <malloc>
 801eec8:	2800      	cmp	r0, #0
 801eeca:	d0eb      	beq.n	801eea4 <__register_exitproc+0x30>
 801eecc:	2300      	movs	r3, #0
 801eece:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 801eed2:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 801eed6:	6863      	ldr	r3, [r4, #4]
 801eed8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801eedc:	2201      	movs	r2, #1
 801eede:	409a      	lsls	r2, r3
 801eee0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801eee4:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 801eee8:	4313      	orrs	r3, r2
 801eeea:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 801eeee:	2f02      	cmp	r7, #2
 801eef0:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 801eef4:	bf02      	ittt	eq
 801eef6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 801eefa:	4313      	orreq	r3, r2
 801eefc:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 801ef00:	6863      	ldr	r3, [r4, #4]
 801ef02:	6828      	ldr	r0, [r5, #0]
 801ef04:	1c5a      	adds	r2, r3, #1
 801ef06:	3302      	adds	r3, #2
 801ef08:	6062      	str	r2, [r4, #4]
 801ef0a:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801ef0e:	f7ff ffa1 	bl	801ee54 <__retarget_lock_release_recursive>
 801ef12:	2000      	movs	r0, #0
 801ef14:	e7cb      	b.n	801eeae <__register_exitproc+0x3a>
 801ef16:	bf00      	nop
 801ef18:	20000120 	.word	0x20000120
 801ef1c:	20015bd0 	.word	0x20015bd0
 801ef20:	20015b44 	.word	0x20015b44
 801ef24:	080215f4 	.word	0x080215f4
 801ef28:	0801e77d 	.word	0x0801e77d

0801ef2c <_free_r>:
 801ef2c:	b538      	push	{r3, r4, r5, lr}
 801ef2e:	4605      	mov	r5, r0
 801ef30:	2900      	cmp	r1, #0
 801ef32:	d041      	beq.n	801efb8 <_free_r+0x8c>
 801ef34:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801ef38:	1f0c      	subs	r4, r1, #4
 801ef3a:	2b00      	cmp	r3, #0
 801ef3c:	bfb8      	it	lt
 801ef3e:	18e4      	addlt	r4, r4, r3
 801ef40:	f7ff fcce 	bl	801e8e0 <__malloc_lock>
 801ef44:	4a1d      	ldr	r2, [pc, #116]	@ (801efbc <_free_r+0x90>)
 801ef46:	6813      	ldr	r3, [r2, #0]
 801ef48:	b933      	cbnz	r3, 801ef58 <_free_r+0x2c>
 801ef4a:	6063      	str	r3, [r4, #4]
 801ef4c:	6014      	str	r4, [r2, #0]
 801ef4e:	4628      	mov	r0, r5
 801ef50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801ef54:	f7ff bcca 	b.w	801e8ec <__malloc_unlock>
 801ef58:	42a3      	cmp	r3, r4
 801ef5a:	d908      	bls.n	801ef6e <_free_r+0x42>
 801ef5c:	6820      	ldr	r0, [r4, #0]
 801ef5e:	1821      	adds	r1, r4, r0
 801ef60:	428b      	cmp	r3, r1
 801ef62:	bf01      	itttt	eq
 801ef64:	6819      	ldreq	r1, [r3, #0]
 801ef66:	685b      	ldreq	r3, [r3, #4]
 801ef68:	1809      	addeq	r1, r1, r0
 801ef6a:	6021      	streq	r1, [r4, #0]
 801ef6c:	e7ed      	b.n	801ef4a <_free_r+0x1e>
 801ef6e:	461a      	mov	r2, r3
 801ef70:	685b      	ldr	r3, [r3, #4]
 801ef72:	b10b      	cbz	r3, 801ef78 <_free_r+0x4c>
 801ef74:	42a3      	cmp	r3, r4
 801ef76:	d9fa      	bls.n	801ef6e <_free_r+0x42>
 801ef78:	6811      	ldr	r1, [r2, #0]
 801ef7a:	1850      	adds	r0, r2, r1
 801ef7c:	42a0      	cmp	r0, r4
 801ef7e:	d10b      	bne.n	801ef98 <_free_r+0x6c>
 801ef80:	6820      	ldr	r0, [r4, #0]
 801ef82:	4401      	add	r1, r0
 801ef84:	1850      	adds	r0, r2, r1
 801ef86:	4283      	cmp	r3, r0
 801ef88:	6011      	str	r1, [r2, #0]
 801ef8a:	d1e0      	bne.n	801ef4e <_free_r+0x22>
 801ef8c:	6818      	ldr	r0, [r3, #0]
 801ef8e:	685b      	ldr	r3, [r3, #4]
 801ef90:	6053      	str	r3, [r2, #4]
 801ef92:	4408      	add	r0, r1
 801ef94:	6010      	str	r0, [r2, #0]
 801ef96:	e7da      	b.n	801ef4e <_free_r+0x22>
 801ef98:	d902      	bls.n	801efa0 <_free_r+0x74>
 801ef9a:	230c      	movs	r3, #12
 801ef9c:	602b      	str	r3, [r5, #0]
 801ef9e:	e7d6      	b.n	801ef4e <_free_r+0x22>
 801efa0:	6820      	ldr	r0, [r4, #0]
 801efa2:	1821      	adds	r1, r4, r0
 801efa4:	428b      	cmp	r3, r1
 801efa6:	bf04      	itt	eq
 801efa8:	6819      	ldreq	r1, [r3, #0]
 801efaa:	685b      	ldreq	r3, [r3, #4]
 801efac:	6063      	str	r3, [r4, #4]
 801efae:	bf04      	itt	eq
 801efb0:	1809      	addeq	r1, r1, r0
 801efb2:	6021      	streq	r1, [r4, #0]
 801efb4:	6054      	str	r4, [r2, #4]
 801efb6:	e7ca      	b.n	801ef4e <_free_r+0x22>
 801efb8:	bd38      	pop	{r3, r4, r5, pc}
 801efba:	bf00      	nop
 801efbc:	200159fc 	.word	0x200159fc

0801efc0 <__sfputc_r>:
 801efc0:	6893      	ldr	r3, [r2, #8]
 801efc2:	3b01      	subs	r3, #1
 801efc4:	2b00      	cmp	r3, #0
 801efc6:	b410      	push	{r4}
 801efc8:	6093      	str	r3, [r2, #8]
 801efca:	da08      	bge.n	801efde <__sfputc_r+0x1e>
 801efcc:	6994      	ldr	r4, [r2, #24]
 801efce:	42a3      	cmp	r3, r4
 801efd0:	db01      	blt.n	801efd6 <__sfputc_r+0x16>
 801efd2:	290a      	cmp	r1, #10
 801efd4:	d103      	bne.n	801efde <__sfputc_r+0x1e>
 801efd6:	f85d 4b04 	ldr.w	r4, [sp], #4
 801efda:	f7ff bdb2 	b.w	801eb42 <__swbuf_r>
 801efde:	6813      	ldr	r3, [r2, #0]
 801efe0:	1c58      	adds	r0, r3, #1
 801efe2:	6010      	str	r0, [r2, #0]
 801efe4:	7019      	strb	r1, [r3, #0]
 801efe6:	4608      	mov	r0, r1
 801efe8:	f85d 4b04 	ldr.w	r4, [sp], #4
 801efec:	4770      	bx	lr

0801efee <__sfputs_r>:
 801efee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801eff0:	4606      	mov	r6, r0
 801eff2:	460f      	mov	r7, r1
 801eff4:	4614      	mov	r4, r2
 801eff6:	18d5      	adds	r5, r2, r3
 801eff8:	42ac      	cmp	r4, r5
 801effa:	d101      	bne.n	801f000 <__sfputs_r+0x12>
 801effc:	2000      	movs	r0, #0
 801effe:	e007      	b.n	801f010 <__sfputs_r+0x22>
 801f000:	f814 1b01 	ldrb.w	r1, [r4], #1
 801f004:	463a      	mov	r2, r7
 801f006:	4630      	mov	r0, r6
 801f008:	f7ff ffda 	bl	801efc0 <__sfputc_r>
 801f00c:	1c43      	adds	r3, r0, #1
 801f00e:	d1f3      	bne.n	801eff8 <__sfputs_r+0xa>
 801f010:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801f014 <_vfiprintf_r>:
 801f014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f018:	460d      	mov	r5, r1
 801f01a:	b09d      	sub	sp, #116	@ 0x74
 801f01c:	4614      	mov	r4, r2
 801f01e:	4698      	mov	r8, r3
 801f020:	4606      	mov	r6, r0
 801f022:	b118      	cbz	r0, 801f02c <_vfiprintf_r+0x18>
 801f024:	6a03      	ldr	r3, [r0, #32]
 801f026:	b90b      	cbnz	r3, 801f02c <_vfiprintf_r+0x18>
 801f028:	f7ff fd00 	bl	801ea2c <__sinit>
 801f02c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801f02e:	07d9      	lsls	r1, r3, #31
 801f030:	d405      	bmi.n	801f03e <_vfiprintf_r+0x2a>
 801f032:	89ab      	ldrh	r3, [r5, #12]
 801f034:	059a      	lsls	r2, r3, #22
 801f036:	d402      	bmi.n	801f03e <_vfiprintf_r+0x2a>
 801f038:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801f03a:	f7ff ff0a 	bl	801ee52 <__retarget_lock_acquire_recursive>
 801f03e:	89ab      	ldrh	r3, [r5, #12]
 801f040:	071b      	lsls	r3, r3, #28
 801f042:	d501      	bpl.n	801f048 <_vfiprintf_r+0x34>
 801f044:	692b      	ldr	r3, [r5, #16]
 801f046:	b99b      	cbnz	r3, 801f070 <_vfiprintf_r+0x5c>
 801f048:	4629      	mov	r1, r5
 801f04a:	4630      	mov	r0, r6
 801f04c:	f7ff fdb8 	bl	801ebc0 <__swsetup_r>
 801f050:	b170      	cbz	r0, 801f070 <_vfiprintf_r+0x5c>
 801f052:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801f054:	07dc      	lsls	r4, r3, #31
 801f056:	d504      	bpl.n	801f062 <_vfiprintf_r+0x4e>
 801f058:	f04f 30ff 	mov.w	r0, #4294967295
 801f05c:	b01d      	add	sp, #116	@ 0x74
 801f05e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f062:	89ab      	ldrh	r3, [r5, #12]
 801f064:	0598      	lsls	r0, r3, #22
 801f066:	d4f7      	bmi.n	801f058 <_vfiprintf_r+0x44>
 801f068:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801f06a:	f7ff fef3 	bl	801ee54 <__retarget_lock_release_recursive>
 801f06e:	e7f3      	b.n	801f058 <_vfiprintf_r+0x44>
 801f070:	2300      	movs	r3, #0
 801f072:	9309      	str	r3, [sp, #36]	@ 0x24
 801f074:	2320      	movs	r3, #32
 801f076:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801f07a:	f8cd 800c 	str.w	r8, [sp, #12]
 801f07e:	2330      	movs	r3, #48	@ 0x30
 801f080:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 801f230 <_vfiprintf_r+0x21c>
 801f084:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 801f088:	f04f 0901 	mov.w	r9, #1
 801f08c:	4623      	mov	r3, r4
 801f08e:	469a      	mov	sl, r3
 801f090:	f813 2b01 	ldrb.w	r2, [r3], #1
 801f094:	b10a      	cbz	r2, 801f09a <_vfiprintf_r+0x86>
 801f096:	2a25      	cmp	r2, #37	@ 0x25
 801f098:	d1f9      	bne.n	801f08e <_vfiprintf_r+0x7a>
 801f09a:	ebba 0b04 	subs.w	fp, sl, r4
 801f09e:	d00b      	beq.n	801f0b8 <_vfiprintf_r+0xa4>
 801f0a0:	465b      	mov	r3, fp
 801f0a2:	4622      	mov	r2, r4
 801f0a4:	4629      	mov	r1, r5
 801f0a6:	4630      	mov	r0, r6
 801f0a8:	f7ff ffa1 	bl	801efee <__sfputs_r>
 801f0ac:	3001      	adds	r0, #1
 801f0ae:	f000 80a7 	beq.w	801f200 <_vfiprintf_r+0x1ec>
 801f0b2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f0b4:	445a      	add	r2, fp
 801f0b6:	9209      	str	r2, [sp, #36]	@ 0x24
 801f0b8:	f89a 3000 	ldrb.w	r3, [sl]
 801f0bc:	2b00      	cmp	r3, #0
 801f0be:	f000 809f 	beq.w	801f200 <_vfiprintf_r+0x1ec>
 801f0c2:	2300      	movs	r3, #0
 801f0c4:	f04f 32ff 	mov.w	r2, #4294967295
 801f0c8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801f0cc:	f10a 0a01 	add.w	sl, sl, #1
 801f0d0:	9304      	str	r3, [sp, #16]
 801f0d2:	9307      	str	r3, [sp, #28]
 801f0d4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 801f0d8:	931a      	str	r3, [sp, #104]	@ 0x68
 801f0da:	4654      	mov	r4, sl
 801f0dc:	2205      	movs	r2, #5
 801f0de:	f814 1b01 	ldrb.w	r1, [r4], #1
 801f0e2:	4853      	ldr	r0, [pc, #332]	@ (801f230 <_vfiprintf_r+0x21c>)
 801f0e4:	f7e1 f894 	bl	8000210 <memchr>
 801f0e8:	9a04      	ldr	r2, [sp, #16]
 801f0ea:	b9d8      	cbnz	r0, 801f124 <_vfiprintf_r+0x110>
 801f0ec:	06d1      	lsls	r1, r2, #27
 801f0ee:	bf44      	itt	mi
 801f0f0:	2320      	movmi	r3, #32
 801f0f2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801f0f6:	0713      	lsls	r3, r2, #28
 801f0f8:	bf44      	itt	mi
 801f0fa:	232b      	movmi	r3, #43	@ 0x2b
 801f0fc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801f100:	f89a 3000 	ldrb.w	r3, [sl]
 801f104:	2b2a      	cmp	r3, #42	@ 0x2a
 801f106:	d015      	beq.n	801f134 <_vfiprintf_r+0x120>
 801f108:	9a07      	ldr	r2, [sp, #28]
 801f10a:	4654      	mov	r4, sl
 801f10c:	2000      	movs	r0, #0
 801f10e:	f04f 0c0a 	mov.w	ip, #10
 801f112:	4621      	mov	r1, r4
 801f114:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f118:	3b30      	subs	r3, #48	@ 0x30
 801f11a:	2b09      	cmp	r3, #9
 801f11c:	d94b      	bls.n	801f1b6 <_vfiprintf_r+0x1a2>
 801f11e:	b1b0      	cbz	r0, 801f14e <_vfiprintf_r+0x13a>
 801f120:	9207      	str	r2, [sp, #28]
 801f122:	e014      	b.n	801f14e <_vfiprintf_r+0x13a>
 801f124:	eba0 0308 	sub.w	r3, r0, r8
 801f128:	fa09 f303 	lsl.w	r3, r9, r3
 801f12c:	4313      	orrs	r3, r2
 801f12e:	9304      	str	r3, [sp, #16]
 801f130:	46a2      	mov	sl, r4
 801f132:	e7d2      	b.n	801f0da <_vfiprintf_r+0xc6>
 801f134:	9b03      	ldr	r3, [sp, #12]
 801f136:	1d19      	adds	r1, r3, #4
 801f138:	681b      	ldr	r3, [r3, #0]
 801f13a:	9103      	str	r1, [sp, #12]
 801f13c:	2b00      	cmp	r3, #0
 801f13e:	bfbb      	ittet	lt
 801f140:	425b      	neglt	r3, r3
 801f142:	f042 0202 	orrlt.w	r2, r2, #2
 801f146:	9307      	strge	r3, [sp, #28]
 801f148:	9307      	strlt	r3, [sp, #28]
 801f14a:	bfb8      	it	lt
 801f14c:	9204      	strlt	r2, [sp, #16]
 801f14e:	7823      	ldrb	r3, [r4, #0]
 801f150:	2b2e      	cmp	r3, #46	@ 0x2e
 801f152:	d10a      	bne.n	801f16a <_vfiprintf_r+0x156>
 801f154:	7863      	ldrb	r3, [r4, #1]
 801f156:	2b2a      	cmp	r3, #42	@ 0x2a
 801f158:	d132      	bne.n	801f1c0 <_vfiprintf_r+0x1ac>
 801f15a:	9b03      	ldr	r3, [sp, #12]
 801f15c:	1d1a      	adds	r2, r3, #4
 801f15e:	681b      	ldr	r3, [r3, #0]
 801f160:	9203      	str	r2, [sp, #12]
 801f162:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801f166:	3402      	adds	r4, #2
 801f168:	9305      	str	r3, [sp, #20]
 801f16a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 801f240 <_vfiprintf_r+0x22c>
 801f16e:	7821      	ldrb	r1, [r4, #0]
 801f170:	2203      	movs	r2, #3
 801f172:	4650      	mov	r0, sl
 801f174:	f7e1 f84c 	bl	8000210 <memchr>
 801f178:	b138      	cbz	r0, 801f18a <_vfiprintf_r+0x176>
 801f17a:	9b04      	ldr	r3, [sp, #16]
 801f17c:	eba0 000a 	sub.w	r0, r0, sl
 801f180:	2240      	movs	r2, #64	@ 0x40
 801f182:	4082      	lsls	r2, r0
 801f184:	4313      	orrs	r3, r2
 801f186:	3401      	adds	r4, #1
 801f188:	9304      	str	r3, [sp, #16]
 801f18a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801f18e:	4829      	ldr	r0, [pc, #164]	@ (801f234 <_vfiprintf_r+0x220>)
 801f190:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 801f194:	2206      	movs	r2, #6
 801f196:	f7e1 f83b 	bl	8000210 <memchr>
 801f19a:	2800      	cmp	r0, #0
 801f19c:	d03f      	beq.n	801f21e <_vfiprintf_r+0x20a>
 801f19e:	4b26      	ldr	r3, [pc, #152]	@ (801f238 <_vfiprintf_r+0x224>)
 801f1a0:	bb1b      	cbnz	r3, 801f1ea <_vfiprintf_r+0x1d6>
 801f1a2:	9b03      	ldr	r3, [sp, #12]
 801f1a4:	3307      	adds	r3, #7
 801f1a6:	f023 0307 	bic.w	r3, r3, #7
 801f1aa:	3308      	adds	r3, #8
 801f1ac:	9303      	str	r3, [sp, #12]
 801f1ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f1b0:	443b      	add	r3, r7
 801f1b2:	9309      	str	r3, [sp, #36]	@ 0x24
 801f1b4:	e76a      	b.n	801f08c <_vfiprintf_r+0x78>
 801f1b6:	fb0c 3202 	mla	r2, ip, r2, r3
 801f1ba:	460c      	mov	r4, r1
 801f1bc:	2001      	movs	r0, #1
 801f1be:	e7a8      	b.n	801f112 <_vfiprintf_r+0xfe>
 801f1c0:	2300      	movs	r3, #0
 801f1c2:	3401      	adds	r4, #1
 801f1c4:	9305      	str	r3, [sp, #20]
 801f1c6:	4619      	mov	r1, r3
 801f1c8:	f04f 0c0a 	mov.w	ip, #10
 801f1cc:	4620      	mov	r0, r4
 801f1ce:	f810 2b01 	ldrb.w	r2, [r0], #1
 801f1d2:	3a30      	subs	r2, #48	@ 0x30
 801f1d4:	2a09      	cmp	r2, #9
 801f1d6:	d903      	bls.n	801f1e0 <_vfiprintf_r+0x1cc>
 801f1d8:	2b00      	cmp	r3, #0
 801f1da:	d0c6      	beq.n	801f16a <_vfiprintf_r+0x156>
 801f1dc:	9105      	str	r1, [sp, #20]
 801f1de:	e7c4      	b.n	801f16a <_vfiprintf_r+0x156>
 801f1e0:	fb0c 2101 	mla	r1, ip, r1, r2
 801f1e4:	4604      	mov	r4, r0
 801f1e6:	2301      	movs	r3, #1
 801f1e8:	e7f0      	b.n	801f1cc <_vfiprintf_r+0x1b8>
 801f1ea:	ab03      	add	r3, sp, #12
 801f1ec:	9300      	str	r3, [sp, #0]
 801f1ee:	462a      	mov	r2, r5
 801f1f0:	4b12      	ldr	r3, [pc, #72]	@ (801f23c <_vfiprintf_r+0x228>)
 801f1f2:	a904      	add	r1, sp, #16
 801f1f4:	4630      	mov	r0, r6
 801f1f6:	f3af 8000 	nop.w
 801f1fa:	4607      	mov	r7, r0
 801f1fc:	1c78      	adds	r0, r7, #1
 801f1fe:	d1d6      	bne.n	801f1ae <_vfiprintf_r+0x19a>
 801f200:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801f202:	07d9      	lsls	r1, r3, #31
 801f204:	d405      	bmi.n	801f212 <_vfiprintf_r+0x1fe>
 801f206:	89ab      	ldrh	r3, [r5, #12]
 801f208:	059a      	lsls	r2, r3, #22
 801f20a:	d402      	bmi.n	801f212 <_vfiprintf_r+0x1fe>
 801f20c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801f20e:	f7ff fe21 	bl	801ee54 <__retarget_lock_release_recursive>
 801f212:	89ab      	ldrh	r3, [r5, #12]
 801f214:	065b      	lsls	r3, r3, #25
 801f216:	f53f af1f 	bmi.w	801f058 <_vfiprintf_r+0x44>
 801f21a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801f21c:	e71e      	b.n	801f05c <_vfiprintf_r+0x48>
 801f21e:	ab03      	add	r3, sp, #12
 801f220:	9300      	str	r3, [sp, #0]
 801f222:	462a      	mov	r2, r5
 801f224:	4b05      	ldr	r3, [pc, #20]	@ (801f23c <_vfiprintf_r+0x228>)
 801f226:	a904      	add	r1, sp, #16
 801f228:	4630      	mov	r0, r6
 801f22a:	f000 f879 	bl	801f320 <_printf_i>
 801f22e:	e7e4      	b.n	801f1fa <_vfiprintf_r+0x1e6>
 801f230:	080215f8 	.word	0x080215f8
 801f234:	08021602 	.word	0x08021602
 801f238:	00000000 	.word	0x00000000
 801f23c:	0801efef 	.word	0x0801efef
 801f240:	080215fe 	.word	0x080215fe

0801f244 <_printf_common>:
 801f244:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f248:	4616      	mov	r6, r2
 801f24a:	4698      	mov	r8, r3
 801f24c:	688a      	ldr	r2, [r1, #8]
 801f24e:	690b      	ldr	r3, [r1, #16]
 801f250:	f8dd 9020 	ldr.w	r9, [sp, #32]
 801f254:	4293      	cmp	r3, r2
 801f256:	bfb8      	it	lt
 801f258:	4613      	movlt	r3, r2
 801f25a:	6033      	str	r3, [r6, #0]
 801f25c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 801f260:	4607      	mov	r7, r0
 801f262:	460c      	mov	r4, r1
 801f264:	b10a      	cbz	r2, 801f26a <_printf_common+0x26>
 801f266:	3301      	adds	r3, #1
 801f268:	6033      	str	r3, [r6, #0]
 801f26a:	6823      	ldr	r3, [r4, #0]
 801f26c:	0699      	lsls	r1, r3, #26
 801f26e:	bf42      	ittt	mi
 801f270:	6833      	ldrmi	r3, [r6, #0]
 801f272:	3302      	addmi	r3, #2
 801f274:	6033      	strmi	r3, [r6, #0]
 801f276:	6825      	ldr	r5, [r4, #0]
 801f278:	f015 0506 	ands.w	r5, r5, #6
 801f27c:	d106      	bne.n	801f28c <_printf_common+0x48>
 801f27e:	f104 0a19 	add.w	sl, r4, #25
 801f282:	68e3      	ldr	r3, [r4, #12]
 801f284:	6832      	ldr	r2, [r6, #0]
 801f286:	1a9b      	subs	r3, r3, r2
 801f288:	42ab      	cmp	r3, r5
 801f28a:	dc26      	bgt.n	801f2da <_printf_common+0x96>
 801f28c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 801f290:	6822      	ldr	r2, [r4, #0]
 801f292:	3b00      	subs	r3, #0
 801f294:	bf18      	it	ne
 801f296:	2301      	movne	r3, #1
 801f298:	0692      	lsls	r2, r2, #26
 801f29a:	d42b      	bmi.n	801f2f4 <_printf_common+0xb0>
 801f29c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 801f2a0:	4641      	mov	r1, r8
 801f2a2:	4638      	mov	r0, r7
 801f2a4:	47c8      	blx	r9
 801f2a6:	3001      	adds	r0, #1
 801f2a8:	d01e      	beq.n	801f2e8 <_printf_common+0xa4>
 801f2aa:	6823      	ldr	r3, [r4, #0]
 801f2ac:	6922      	ldr	r2, [r4, #16]
 801f2ae:	f003 0306 	and.w	r3, r3, #6
 801f2b2:	2b04      	cmp	r3, #4
 801f2b4:	bf02      	ittt	eq
 801f2b6:	68e5      	ldreq	r5, [r4, #12]
 801f2b8:	6833      	ldreq	r3, [r6, #0]
 801f2ba:	1aed      	subeq	r5, r5, r3
 801f2bc:	68a3      	ldr	r3, [r4, #8]
 801f2be:	bf0c      	ite	eq
 801f2c0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801f2c4:	2500      	movne	r5, #0
 801f2c6:	4293      	cmp	r3, r2
 801f2c8:	bfc4      	itt	gt
 801f2ca:	1a9b      	subgt	r3, r3, r2
 801f2cc:	18ed      	addgt	r5, r5, r3
 801f2ce:	2600      	movs	r6, #0
 801f2d0:	341a      	adds	r4, #26
 801f2d2:	42b5      	cmp	r5, r6
 801f2d4:	d11a      	bne.n	801f30c <_printf_common+0xc8>
 801f2d6:	2000      	movs	r0, #0
 801f2d8:	e008      	b.n	801f2ec <_printf_common+0xa8>
 801f2da:	2301      	movs	r3, #1
 801f2dc:	4652      	mov	r2, sl
 801f2de:	4641      	mov	r1, r8
 801f2e0:	4638      	mov	r0, r7
 801f2e2:	47c8      	blx	r9
 801f2e4:	3001      	adds	r0, #1
 801f2e6:	d103      	bne.n	801f2f0 <_printf_common+0xac>
 801f2e8:	f04f 30ff 	mov.w	r0, #4294967295
 801f2ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f2f0:	3501      	adds	r5, #1
 801f2f2:	e7c6      	b.n	801f282 <_printf_common+0x3e>
 801f2f4:	18e1      	adds	r1, r4, r3
 801f2f6:	1c5a      	adds	r2, r3, #1
 801f2f8:	2030      	movs	r0, #48	@ 0x30
 801f2fa:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 801f2fe:	4422      	add	r2, r4
 801f300:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 801f304:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 801f308:	3302      	adds	r3, #2
 801f30a:	e7c7      	b.n	801f29c <_printf_common+0x58>
 801f30c:	2301      	movs	r3, #1
 801f30e:	4622      	mov	r2, r4
 801f310:	4641      	mov	r1, r8
 801f312:	4638      	mov	r0, r7
 801f314:	47c8      	blx	r9
 801f316:	3001      	adds	r0, #1
 801f318:	d0e6      	beq.n	801f2e8 <_printf_common+0xa4>
 801f31a:	3601      	adds	r6, #1
 801f31c:	e7d9      	b.n	801f2d2 <_printf_common+0x8e>
	...

0801f320 <_printf_i>:
 801f320:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801f324:	7e0f      	ldrb	r7, [r1, #24]
 801f326:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801f328:	2f78      	cmp	r7, #120	@ 0x78
 801f32a:	4691      	mov	r9, r2
 801f32c:	4680      	mov	r8, r0
 801f32e:	460c      	mov	r4, r1
 801f330:	469a      	mov	sl, r3
 801f332:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 801f336:	d807      	bhi.n	801f348 <_printf_i+0x28>
 801f338:	2f62      	cmp	r7, #98	@ 0x62
 801f33a:	d80a      	bhi.n	801f352 <_printf_i+0x32>
 801f33c:	2f00      	cmp	r7, #0
 801f33e:	f000 80d2 	beq.w	801f4e6 <_printf_i+0x1c6>
 801f342:	2f58      	cmp	r7, #88	@ 0x58
 801f344:	f000 80b9 	beq.w	801f4ba <_printf_i+0x19a>
 801f348:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801f34c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 801f350:	e03a      	b.n	801f3c8 <_printf_i+0xa8>
 801f352:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 801f356:	2b15      	cmp	r3, #21
 801f358:	d8f6      	bhi.n	801f348 <_printf_i+0x28>
 801f35a:	a101      	add	r1, pc, #4	@ (adr r1, 801f360 <_printf_i+0x40>)
 801f35c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801f360:	0801f3b9 	.word	0x0801f3b9
 801f364:	0801f3cd 	.word	0x0801f3cd
 801f368:	0801f349 	.word	0x0801f349
 801f36c:	0801f349 	.word	0x0801f349
 801f370:	0801f349 	.word	0x0801f349
 801f374:	0801f349 	.word	0x0801f349
 801f378:	0801f3cd 	.word	0x0801f3cd
 801f37c:	0801f349 	.word	0x0801f349
 801f380:	0801f349 	.word	0x0801f349
 801f384:	0801f349 	.word	0x0801f349
 801f388:	0801f349 	.word	0x0801f349
 801f38c:	0801f4cd 	.word	0x0801f4cd
 801f390:	0801f3f7 	.word	0x0801f3f7
 801f394:	0801f487 	.word	0x0801f487
 801f398:	0801f349 	.word	0x0801f349
 801f39c:	0801f349 	.word	0x0801f349
 801f3a0:	0801f4ef 	.word	0x0801f4ef
 801f3a4:	0801f349 	.word	0x0801f349
 801f3a8:	0801f3f7 	.word	0x0801f3f7
 801f3ac:	0801f349 	.word	0x0801f349
 801f3b0:	0801f349 	.word	0x0801f349
 801f3b4:	0801f48f 	.word	0x0801f48f
 801f3b8:	6833      	ldr	r3, [r6, #0]
 801f3ba:	1d1a      	adds	r2, r3, #4
 801f3bc:	681b      	ldr	r3, [r3, #0]
 801f3be:	6032      	str	r2, [r6, #0]
 801f3c0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801f3c4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 801f3c8:	2301      	movs	r3, #1
 801f3ca:	e09d      	b.n	801f508 <_printf_i+0x1e8>
 801f3cc:	6833      	ldr	r3, [r6, #0]
 801f3ce:	6820      	ldr	r0, [r4, #0]
 801f3d0:	1d19      	adds	r1, r3, #4
 801f3d2:	6031      	str	r1, [r6, #0]
 801f3d4:	0606      	lsls	r6, r0, #24
 801f3d6:	d501      	bpl.n	801f3dc <_printf_i+0xbc>
 801f3d8:	681d      	ldr	r5, [r3, #0]
 801f3da:	e003      	b.n	801f3e4 <_printf_i+0xc4>
 801f3dc:	0645      	lsls	r5, r0, #25
 801f3de:	d5fb      	bpl.n	801f3d8 <_printf_i+0xb8>
 801f3e0:	f9b3 5000 	ldrsh.w	r5, [r3]
 801f3e4:	2d00      	cmp	r5, #0
 801f3e6:	da03      	bge.n	801f3f0 <_printf_i+0xd0>
 801f3e8:	232d      	movs	r3, #45	@ 0x2d
 801f3ea:	426d      	negs	r5, r5
 801f3ec:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801f3f0:	4859      	ldr	r0, [pc, #356]	@ (801f558 <_printf_i+0x238>)
 801f3f2:	230a      	movs	r3, #10
 801f3f4:	e011      	b.n	801f41a <_printf_i+0xfa>
 801f3f6:	6821      	ldr	r1, [r4, #0]
 801f3f8:	6833      	ldr	r3, [r6, #0]
 801f3fa:	0608      	lsls	r0, r1, #24
 801f3fc:	f853 5b04 	ldr.w	r5, [r3], #4
 801f400:	d402      	bmi.n	801f408 <_printf_i+0xe8>
 801f402:	0649      	lsls	r1, r1, #25
 801f404:	bf48      	it	mi
 801f406:	b2ad      	uxthmi	r5, r5
 801f408:	2f6f      	cmp	r7, #111	@ 0x6f
 801f40a:	4853      	ldr	r0, [pc, #332]	@ (801f558 <_printf_i+0x238>)
 801f40c:	6033      	str	r3, [r6, #0]
 801f40e:	bf14      	ite	ne
 801f410:	230a      	movne	r3, #10
 801f412:	2308      	moveq	r3, #8
 801f414:	2100      	movs	r1, #0
 801f416:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 801f41a:	6866      	ldr	r6, [r4, #4]
 801f41c:	60a6      	str	r6, [r4, #8]
 801f41e:	2e00      	cmp	r6, #0
 801f420:	bfa2      	ittt	ge
 801f422:	6821      	ldrge	r1, [r4, #0]
 801f424:	f021 0104 	bicge.w	r1, r1, #4
 801f428:	6021      	strge	r1, [r4, #0]
 801f42a:	b90d      	cbnz	r5, 801f430 <_printf_i+0x110>
 801f42c:	2e00      	cmp	r6, #0
 801f42e:	d04b      	beq.n	801f4c8 <_printf_i+0x1a8>
 801f430:	4616      	mov	r6, r2
 801f432:	fbb5 f1f3 	udiv	r1, r5, r3
 801f436:	fb03 5711 	mls	r7, r3, r1, r5
 801f43a:	5dc7      	ldrb	r7, [r0, r7]
 801f43c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801f440:	462f      	mov	r7, r5
 801f442:	42bb      	cmp	r3, r7
 801f444:	460d      	mov	r5, r1
 801f446:	d9f4      	bls.n	801f432 <_printf_i+0x112>
 801f448:	2b08      	cmp	r3, #8
 801f44a:	d10b      	bne.n	801f464 <_printf_i+0x144>
 801f44c:	6823      	ldr	r3, [r4, #0]
 801f44e:	07df      	lsls	r7, r3, #31
 801f450:	d508      	bpl.n	801f464 <_printf_i+0x144>
 801f452:	6923      	ldr	r3, [r4, #16]
 801f454:	6861      	ldr	r1, [r4, #4]
 801f456:	4299      	cmp	r1, r3
 801f458:	bfde      	ittt	le
 801f45a:	2330      	movle	r3, #48	@ 0x30
 801f45c:	f806 3c01 	strble.w	r3, [r6, #-1]
 801f460:	f106 36ff 	addle.w	r6, r6, #4294967295
 801f464:	1b92      	subs	r2, r2, r6
 801f466:	6122      	str	r2, [r4, #16]
 801f468:	f8cd a000 	str.w	sl, [sp]
 801f46c:	464b      	mov	r3, r9
 801f46e:	aa03      	add	r2, sp, #12
 801f470:	4621      	mov	r1, r4
 801f472:	4640      	mov	r0, r8
 801f474:	f7ff fee6 	bl	801f244 <_printf_common>
 801f478:	3001      	adds	r0, #1
 801f47a:	d14a      	bne.n	801f512 <_printf_i+0x1f2>
 801f47c:	f04f 30ff 	mov.w	r0, #4294967295
 801f480:	b004      	add	sp, #16
 801f482:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f486:	6823      	ldr	r3, [r4, #0]
 801f488:	f043 0320 	orr.w	r3, r3, #32
 801f48c:	6023      	str	r3, [r4, #0]
 801f48e:	4833      	ldr	r0, [pc, #204]	@ (801f55c <_printf_i+0x23c>)
 801f490:	2778      	movs	r7, #120	@ 0x78
 801f492:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 801f496:	6823      	ldr	r3, [r4, #0]
 801f498:	6831      	ldr	r1, [r6, #0]
 801f49a:	061f      	lsls	r7, r3, #24
 801f49c:	f851 5b04 	ldr.w	r5, [r1], #4
 801f4a0:	d402      	bmi.n	801f4a8 <_printf_i+0x188>
 801f4a2:	065f      	lsls	r7, r3, #25
 801f4a4:	bf48      	it	mi
 801f4a6:	b2ad      	uxthmi	r5, r5
 801f4a8:	6031      	str	r1, [r6, #0]
 801f4aa:	07d9      	lsls	r1, r3, #31
 801f4ac:	bf44      	itt	mi
 801f4ae:	f043 0320 	orrmi.w	r3, r3, #32
 801f4b2:	6023      	strmi	r3, [r4, #0]
 801f4b4:	b11d      	cbz	r5, 801f4be <_printf_i+0x19e>
 801f4b6:	2310      	movs	r3, #16
 801f4b8:	e7ac      	b.n	801f414 <_printf_i+0xf4>
 801f4ba:	4827      	ldr	r0, [pc, #156]	@ (801f558 <_printf_i+0x238>)
 801f4bc:	e7e9      	b.n	801f492 <_printf_i+0x172>
 801f4be:	6823      	ldr	r3, [r4, #0]
 801f4c0:	f023 0320 	bic.w	r3, r3, #32
 801f4c4:	6023      	str	r3, [r4, #0]
 801f4c6:	e7f6      	b.n	801f4b6 <_printf_i+0x196>
 801f4c8:	4616      	mov	r6, r2
 801f4ca:	e7bd      	b.n	801f448 <_printf_i+0x128>
 801f4cc:	6833      	ldr	r3, [r6, #0]
 801f4ce:	6825      	ldr	r5, [r4, #0]
 801f4d0:	6961      	ldr	r1, [r4, #20]
 801f4d2:	1d18      	adds	r0, r3, #4
 801f4d4:	6030      	str	r0, [r6, #0]
 801f4d6:	062e      	lsls	r6, r5, #24
 801f4d8:	681b      	ldr	r3, [r3, #0]
 801f4da:	d501      	bpl.n	801f4e0 <_printf_i+0x1c0>
 801f4dc:	6019      	str	r1, [r3, #0]
 801f4de:	e002      	b.n	801f4e6 <_printf_i+0x1c6>
 801f4e0:	0668      	lsls	r0, r5, #25
 801f4e2:	d5fb      	bpl.n	801f4dc <_printf_i+0x1bc>
 801f4e4:	8019      	strh	r1, [r3, #0]
 801f4e6:	2300      	movs	r3, #0
 801f4e8:	6123      	str	r3, [r4, #16]
 801f4ea:	4616      	mov	r6, r2
 801f4ec:	e7bc      	b.n	801f468 <_printf_i+0x148>
 801f4ee:	6833      	ldr	r3, [r6, #0]
 801f4f0:	1d1a      	adds	r2, r3, #4
 801f4f2:	6032      	str	r2, [r6, #0]
 801f4f4:	681e      	ldr	r6, [r3, #0]
 801f4f6:	6862      	ldr	r2, [r4, #4]
 801f4f8:	2100      	movs	r1, #0
 801f4fa:	4630      	mov	r0, r6
 801f4fc:	f7e0 fe88 	bl	8000210 <memchr>
 801f500:	b108      	cbz	r0, 801f506 <_printf_i+0x1e6>
 801f502:	1b80      	subs	r0, r0, r6
 801f504:	6060      	str	r0, [r4, #4]
 801f506:	6863      	ldr	r3, [r4, #4]
 801f508:	6123      	str	r3, [r4, #16]
 801f50a:	2300      	movs	r3, #0
 801f50c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801f510:	e7aa      	b.n	801f468 <_printf_i+0x148>
 801f512:	6923      	ldr	r3, [r4, #16]
 801f514:	4632      	mov	r2, r6
 801f516:	4649      	mov	r1, r9
 801f518:	4640      	mov	r0, r8
 801f51a:	47d0      	blx	sl
 801f51c:	3001      	adds	r0, #1
 801f51e:	d0ad      	beq.n	801f47c <_printf_i+0x15c>
 801f520:	6823      	ldr	r3, [r4, #0]
 801f522:	079b      	lsls	r3, r3, #30
 801f524:	d413      	bmi.n	801f54e <_printf_i+0x22e>
 801f526:	68e0      	ldr	r0, [r4, #12]
 801f528:	9b03      	ldr	r3, [sp, #12]
 801f52a:	4298      	cmp	r0, r3
 801f52c:	bfb8      	it	lt
 801f52e:	4618      	movlt	r0, r3
 801f530:	e7a6      	b.n	801f480 <_printf_i+0x160>
 801f532:	2301      	movs	r3, #1
 801f534:	4632      	mov	r2, r6
 801f536:	4649      	mov	r1, r9
 801f538:	4640      	mov	r0, r8
 801f53a:	47d0      	blx	sl
 801f53c:	3001      	adds	r0, #1
 801f53e:	d09d      	beq.n	801f47c <_printf_i+0x15c>
 801f540:	3501      	adds	r5, #1
 801f542:	68e3      	ldr	r3, [r4, #12]
 801f544:	9903      	ldr	r1, [sp, #12]
 801f546:	1a5b      	subs	r3, r3, r1
 801f548:	42ab      	cmp	r3, r5
 801f54a:	dcf2      	bgt.n	801f532 <_printf_i+0x212>
 801f54c:	e7eb      	b.n	801f526 <_printf_i+0x206>
 801f54e:	2500      	movs	r5, #0
 801f550:	f104 0619 	add.w	r6, r4, #25
 801f554:	e7f5      	b.n	801f542 <_printf_i+0x222>
 801f556:	bf00      	nop
 801f558:	08021609 	.word	0x08021609
 801f55c:	0802161a 	.word	0x0802161a

0801f560 <__sflush_r>:
 801f560:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 801f564:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f568:	0716      	lsls	r6, r2, #28
 801f56a:	4605      	mov	r5, r0
 801f56c:	460c      	mov	r4, r1
 801f56e:	d454      	bmi.n	801f61a <__sflush_r+0xba>
 801f570:	684b      	ldr	r3, [r1, #4]
 801f572:	2b00      	cmp	r3, #0
 801f574:	dc02      	bgt.n	801f57c <__sflush_r+0x1c>
 801f576:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 801f578:	2b00      	cmp	r3, #0
 801f57a:	dd48      	ble.n	801f60e <__sflush_r+0xae>
 801f57c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801f57e:	2e00      	cmp	r6, #0
 801f580:	d045      	beq.n	801f60e <__sflush_r+0xae>
 801f582:	2300      	movs	r3, #0
 801f584:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 801f588:	682f      	ldr	r7, [r5, #0]
 801f58a:	6a21      	ldr	r1, [r4, #32]
 801f58c:	602b      	str	r3, [r5, #0]
 801f58e:	d030      	beq.n	801f5f2 <__sflush_r+0x92>
 801f590:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 801f592:	89a3      	ldrh	r3, [r4, #12]
 801f594:	0759      	lsls	r1, r3, #29
 801f596:	d505      	bpl.n	801f5a4 <__sflush_r+0x44>
 801f598:	6863      	ldr	r3, [r4, #4]
 801f59a:	1ad2      	subs	r2, r2, r3
 801f59c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801f59e:	b10b      	cbz	r3, 801f5a4 <__sflush_r+0x44>
 801f5a0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 801f5a2:	1ad2      	subs	r2, r2, r3
 801f5a4:	2300      	movs	r3, #0
 801f5a6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801f5a8:	6a21      	ldr	r1, [r4, #32]
 801f5aa:	4628      	mov	r0, r5
 801f5ac:	47b0      	blx	r6
 801f5ae:	1c43      	adds	r3, r0, #1
 801f5b0:	89a3      	ldrh	r3, [r4, #12]
 801f5b2:	d106      	bne.n	801f5c2 <__sflush_r+0x62>
 801f5b4:	6829      	ldr	r1, [r5, #0]
 801f5b6:	291d      	cmp	r1, #29
 801f5b8:	d82b      	bhi.n	801f612 <__sflush_r+0xb2>
 801f5ba:	4a2a      	ldr	r2, [pc, #168]	@ (801f664 <__sflush_r+0x104>)
 801f5bc:	410a      	asrs	r2, r1
 801f5be:	07d6      	lsls	r6, r2, #31
 801f5c0:	d427      	bmi.n	801f612 <__sflush_r+0xb2>
 801f5c2:	2200      	movs	r2, #0
 801f5c4:	6062      	str	r2, [r4, #4]
 801f5c6:	04d9      	lsls	r1, r3, #19
 801f5c8:	6922      	ldr	r2, [r4, #16]
 801f5ca:	6022      	str	r2, [r4, #0]
 801f5cc:	d504      	bpl.n	801f5d8 <__sflush_r+0x78>
 801f5ce:	1c42      	adds	r2, r0, #1
 801f5d0:	d101      	bne.n	801f5d6 <__sflush_r+0x76>
 801f5d2:	682b      	ldr	r3, [r5, #0]
 801f5d4:	b903      	cbnz	r3, 801f5d8 <__sflush_r+0x78>
 801f5d6:	6560      	str	r0, [r4, #84]	@ 0x54
 801f5d8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801f5da:	602f      	str	r7, [r5, #0]
 801f5dc:	b1b9      	cbz	r1, 801f60e <__sflush_r+0xae>
 801f5de:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801f5e2:	4299      	cmp	r1, r3
 801f5e4:	d002      	beq.n	801f5ec <__sflush_r+0x8c>
 801f5e6:	4628      	mov	r0, r5
 801f5e8:	f7ff fca0 	bl	801ef2c <_free_r>
 801f5ec:	2300      	movs	r3, #0
 801f5ee:	6363      	str	r3, [r4, #52]	@ 0x34
 801f5f0:	e00d      	b.n	801f60e <__sflush_r+0xae>
 801f5f2:	2301      	movs	r3, #1
 801f5f4:	4628      	mov	r0, r5
 801f5f6:	47b0      	blx	r6
 801f5f8:	4602      	mov	r2, r0
 801f5fa:	1c50      	adds	r0, r2, #1
 801f5fc:	d1c9      	bne.n	801f592 <__sflush_r+0x32>
 801f5fe:	682b      	ldr	r3, [r5, #0]
 801f600:	2b00      	cmp	r3, #0
 801f602:	d0c6      	beq.n	801f592 <__sflush_r+0x32>
 801f604:	2b1d      	cmp	r3, #29
 801f606:	d001      	beq.n	801f60c <__sflush_r+0xac>
 801f608:	2b16      	cmp	r3, #22
 801f60a:	d11e      	bne.n	801f64a <__sflush_r+0xea>
 801f60c:	602f      	str	r7, [r5, #0]
 801f60e:	2000      	movs	r0, #0
 801f610:	e022      	b.n	801f658 <__sflush_r+0xf8>
 801f612:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f616:	b21b      	sxth	r3, r3
 801f618:	e01b      	b.n	801f652 <__sflush_r+0xf2>
 801f61a:	690f      	ldr	r7, [r1, #16]
 801f61c:	2f00      	cmp	r7, #0
 801f61e:	d0f6      	beq.n	801f60e <__sflush_r+0xae>
 801f620:	0793      	lsls	r3, r2, #30
 801f622:	680e      	ldr	r6, [r1, #0]
 801f624:	bf08      	it	eq
 801f626:	694b      	ldreq	r3, [r1, #20]
 801f628:	600f      	str	r7, [r1, #0]
 801f62a:	bf18      	it	ne
 801f62c:	2300      	movne	r3, #0
 801f62e:	eba6 0807 	sub.w	r8, r6, r7
 801f632:	608b      	str	r3, [r1, #8]
 801f634:	f1b8 0f00 	cmp.w	r8, #0
 801f638:	dde9      	ble.n	801f60e <__sflush_r+0xae>
 801f63a:	6a21      	ldr	r1, [r4, #32]
 801f63c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801f63e:	4643      	mov	r3, r8
 801f640:	463a      	mov	r2, r7
 801f642:	4628      	mov	r0, r5
 801f644:	47b0      	blx	r6
 801f646:	2800      	cmp	r0, #0
 801f648:	dc08      	bgt.n	801f65c <__sflush_r+0xfc>
 801f64a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f64e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f652:	81a3      	strh	r3, [r4, #12]
 801f654:	f04f 30ff 	mov.w	r0, #4294967295
 801f658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f65c:	4407      	add	r7, r0
 801f65e:	eba8 0800 	sub.w	r8, r8, r0
 801f662:	e7e7      	b.n	801f634 <__sflush_r+0xd4>
 801f664:	dfbffffe 	.word	0xdfbffffe

0801f668 <_fflush_r>:
 801f668:	b538      	push	{r3, r4, r5, lr}
 801f66a:	690b      	ldr	r3, [r1, #16]
 801f66c:	4605      	mov	r5, r0
 801f66e:	460c      	mov	r4, r1
 801f670:	b913      	cbnz	r3, 801f678 <_fflush_r+0x10>
 801f672:	2500      	movs	r5, #0
 801f674:	4628      	mov	r0, r5
 801f676:	bd38      	pop	{r3, r4, r5, pc}
 801f678:	b118      	cbz	r0, 801f682 <_fflush_r+0x1a>
 801f67a:	6a03      	ldr	r3, [r0, #32]
 801f67c:	b90b      	cbnz	r3, 801f682 <_fflush_r+0x1a>
 801f67e:	f7ff f9d5 	bl	801ea2c <__sinit>
 801f682:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f686:	2b00      	cmp	r3, #0
 801f688:	d0f3      	beq.n	801f672 <_fflush_r+0xa>
 801f68a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 801f68c:	07d0      	lsls	r0, r2, #31
 801f68e:	d404      	bmi.n	801f69a <_fflush_r+0x32>
 801f690:	0599      	lsls	r1, r3, #22
 801f692:	d402      	bmi.n	801f69a <_fflush_r+0x32>
 801f694:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f696:	f7ff fbdc 	bl	801ee52 <__retarget_lock_acquire_recursive>
 801f69a:	4628      	mov	r0, r5
 801f69c:	4621      	mov	r1, r4
 801f69e:	f7ff ff5f 	bl	801f560 <__sflush_r>
 801f6a2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f6a4:	07da      	lsls	r2, r3, #31
 801f6a6:	4605      	mov	r5, r0
 801f6a8:	d4e4      	bmi.n	801f674 <_fflush_r+0xc>
 801f6aa:	89a3      	ldrh	r3, [r4, #12]
 801f6ac:	059b      	lsls	r3, r3, #22
 801f6ae:	d4e1      	bmi.n	801f674 <_fflush_r+0xc>
 801f6b0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f6b2:	f7ff fbcf 	bl	801ee54 <__retarget_lock_release_recursive>
 801f6b6:	e7dd      	b.n	801f674 <_fflush_r+0xc>

0801f6b8 <__swhatbuf_r>:
 801f6b8:	b570      	push	{r4, r5, r6, lr}
 801f6ba:	460c      	mov	r4, r1
 801f6bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f6c0:	2900      	cmp	r1, #0
 801f6c2:	b096      	sub	sp, #88	@ 0x58
 801f6c4:	4615      	mov	r5, r2
 801f6c6:	461e      	mov	r6, r3
 801f6c8:	da0d      	bge.n	801f6e6 <__swhatbuf_r+0x2e>
 801f6ca:	89a3      	ldrh	r3, [r4, #12]
 801f6cc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 801f6d0:	f04f 0100 	mov.w	r1, #0
 801f6d4:	bf14      	ite	ne
 801f6d6:	2340      	movne	r3, #64	@ 0x40
 801f6d8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 801f6dc:	2000      	movs	r0, #0
 801f6de:	6031      	str	r1, [r6, #0]
 801f6e0:	602b      	str	r3, [r5, #0]
 801f6e2:	b016      	add	sp, #88	@ 0x58
 801f6e4:	bd70      	pop	{r4, r5, r6, pc}
 801f6e6:	466a      	mov	r2, sp
 801f6e8:	f000 f848 	bl	801f77c <_fstat_r>
 801f6ec:	2800      	cmp	r0, #0
 801f6ee:	dbec      	blt.n	801f6ca <__swhatbuf_r+0x12>
 801f6f0:	9901      	ldr	r1, [sp, #4]
 801f6f2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 801f6f6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 801f6fa:	4259      	negs	r1, r3
 801f6fc:	4159      	adcs	r1, r3
 801f6fe:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801f702:	e7eb      	b.n	801f6dc <__swhatbuf_r+0x24>

0801f704 <__smakebuf_r>:
 801f704:	898b      	ldrh	r3, [r1, #12]
 801f706:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801f708:	079d      	lsls	r5, r3, #30
 801f70a:	4606      	mov	r6, r0
 801f70c:	460c      	mov	r4, r1
 801f70e:	d507      	bpl.n	801f720 <__smakebuf_r+0x1c>
 801f710:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 801f714:	6023      	str	r3, [r4, #0]
 801f716:	6123      	str	r3, [r4, #16]
 801f718:	2301      	movs	r3, #1
 801f71a:	6163      	str	r3, [r4, #20]
 801f71c:	b003      	add	sp, #12
 801f71e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f720:	ab01      	add	r3, sp, #4
 801f722:	466a      	mov	r2, sp
 801f724:	f7ff ffc8 	bl	801f6b8 <__swhatbuf_r>
 801f728:	9f00      	ldr	r7, [sp, #0]
 801f72a:	4605      	mov	r5, r0
 801f72c:	4639      	mov	r1, r7
 801f72e:	4630      	mov	r0, r6
 801f730:	f7ff f856 	bl	801e7e0 <_malloc_r>
 801f734:	b948      	cbnz	r0, 801f74a <__smakebuf_r+0x46>
 801f736:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f73a:	059a      	lsls	r2, r3, #22
 801f73c:	d4ee      	bmi.n	801f71c <__smakebuf_r+0x18>
 801f73e:	f023 0303 	bic.w	r3, r3, #3
 801f742:	f043 0302 	orr.w	r3, r3, #2
 801f746:	81a3      	strh	r3, [r4, #12]
 801f748:	e7e2      	b.n	801f710 <__smakebuf_r+0xc>
 801f74a:	89a3      	ldrh	r3, [r4, #12]
 801f74c:	6020      	str	r0, [r4, #0]
 801f74e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801f752:	81a3      	strh	r3, [r4, #12]
 801f754:	9b01      	ldr	r3, [sp, #4]
 801f756:	e9c4 0704 	strd	r0, r7, [r4, #16]
 801f75a:	b15b      	cbz	r3, 801f774 <__smakebuf_r+0x70>
 801f75c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801f760:	4630      	mov	r0, r6
 801f762:	f000 f81d 	bl	801f7a0 <_isatty_r>
 801f766:	b128      	cbz	r0, 801f774 <__smakebuf_r+0x70>
 801f768:	89a3      	ldrh	r3, [r4, #12]
 801f76a:	f023 0303 	bic.w	r3, r3, #3
 801f76e:	f043 0301 	orr.w	r3, r3, #1
 801f772:	81a3      	strh	r3, [r4, #12]
 801f774:	89a3      	ldrh	r3, [r4, #12]
 801f776:	431d      	orrs	r5, r3
 801f778:	81a5      	strh	r5, [r4, #12]
 801f77a:	e7cf      	b.n	801f71c <__smakebuf_r+0x18>

0801f77c <_fstat_r>:
 801f77c:	b538      	push	{r3, r4, r5, lr}
 801f77e:	4d07      	ldr	r5, [pc, #28]	@ (801f79c <_fstat_r+0x20>)
 801f780:	2300      	movs	r3, #0
 801f782:	4604      	mov	r4, r0
 801f784:	4608      	mov	r0, r1
 801f786:	4611      	mov	r1, r2
 801f788:	602b      	str	r3, [r5, #0]
 801f78a:	f7e1 fda0 	bl	80012ce <_fstat>
 801f78e:	1c43      	adds	r3, r0, #1
 801f790:	d102      	bne.n	801f798 <_fstat_r+0x1c>
 801f792:	682b      	ldr	r3, [r5, #0]
 801f794:	b103      	cbz	r3, 801f798 <_fstat_r+0x1c>
 801f796:	6023      	str	r3, [r4, #0]
 801f798:	bd38      	pop	{r3, r4, r5, pc}
 801f79a:	bf00      	nop
 801f79c:	20015b3c 	.word	0x20015b3c

0801f7a0 <_isatty_r>:
 801f7a0:	b538      	push	{r3, r4, r5, lr}
 801f7a2:	4d06      	ldr	r5, [pc, #24]	@ (801f7bc <_isatty_r+0x1c>)
 801f7a4:	2300      	movs	r3, #0
 801f7a6:	4604      	mov	r4, r0
 801f7a8:	4608      	mov	r0, r1
 801f7aa:	602b      	str	r3, [r5, #0]
 801f7ac:	f7e1 fd94 	bl	80012d8 <_isatty>
 801f7b0:	1c43      	adds	r3, r0, #1
 801f7b2:	d102      	bne.n	801f7ba <_isatty_r+0x1a>
 801f7b4:	682b      	ldr	r3, [r5, #0]
 801f7b6:	b103      	cbz	r3, 801f7ba <_isatty_r+0x1a>
 801f7b8:	6023      	str	r3, [r4, #0]
 801f7ba:	bd38      	pop	{r3, r4, r5, pc}
 801f7bc:	20015b3c 	.word	0x20015b3c

0801f7c0 <_init>:
 801f7c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f7c2:	bf00      	nop
 801f7c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801f7c6:	bc08      	pop	{r3}
 801f7c8:	469e      	mov	lr, r3
 801f7ca:	4770      	bx	lr

0801f7cc <_fini>:
 801f7cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f7ce:	bf00      	nop
 801f7d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801f7d2:	bc08      	pop	{r3}
 801f7d4:	469e      	mov	lr, r3
 801f7d6:	4770      	bx	lr
