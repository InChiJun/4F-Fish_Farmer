
STM32F746G_DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000232b4  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002a28  08023484  08023484  00024484  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000010  08025eac  08025eac  00026eac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08025ebc  08025ebc  000cf240  2**0
                  CONTENTS
  5 .ARM          00000008  08025ebc  08025ebc  00026ebc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  08025ec4  08025ec4  000cf240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  08025ec4  08025ec4  00026ec4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08025edc  08025edc  00026edc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000124  20000000  08025ee4  00027000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0001779c  20000124  08026008  00027124  2**2
                  ALLOC
 11 ._user_heap_stack 00001400  200178c0  08026008  000278c0  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000cf240  2**0
                  CONTENTS, READONLY
 13 BufferSection 000bf400  c0000000  c0000000  000d0000  2**2
                  ALLOC
 14 ExtFlashSection 000a68f0  90000000  90000000  00028000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 FontFlashSection 000008e4  900a68f0  900a68f0  000ce8f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 0000006c  900a71d4  900a71d4  000cf1d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .debug_info   000d21a0  00000000  00000000  000cf270  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 000154cb  00000000  00000000  001a1410  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003288  00000000  00000000  001b68e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 00003ae4  00000000  00000000  001b9b68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  00037344  00000000  00000000  001bd64c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   0005a183  00000000  00000000  001f4990  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0012d590  00000000  00000000  0024eb13  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000c2  00000000  00000000  0037c0a3  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00008d8c  00000000  00000000  0037c168  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 0001c332  00000000  00000000  00384ef4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000006c  00000000  00000000  003a1226  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000124 	.word	0x20000124
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0802346c 	.word	0x0802346c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000128 	.word	0x20000128
 800020c:	0802346c 	.word	0x0802346c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_uldivmod>:
 80002b0:	b953      	cbnz	r3, 80002c8 <__aeabi_uldivmod+0x18>
 80002b2:	b94a      	cbnz	r2, 80002c8 <__aeabi_uldivmod+0x18>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bf08      	it	eq
 80002b8:	2800      	cmpeq	r0, #0
 80002ba:	bf1c      	itt	ne
 80002bc:	f04f 31ff 	movne.w	r1, #4294967295
 80002c0:	f04f 30ff 	movne.w	r0, #4294967295
 80002c4:	f000 b96a 	b.w	800059c <__aeabi_idiv0>
 80002c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d0:	f000 f806 	bl	80002e0 <__udivmoddi4>
 80002d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002dc:	b004      	add	sp, #16
 80002de:	4770      	bx	lr

080002e0 <__udivmoddi4>:
 80002e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002e4:	9d08      	ldr	r5, [sp, #32]
 80002e6:	460c      	mov	r4, r1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	d14e      	bne.n	800038a <__udivmoddi4+0xaa>
 80002ec:	4694      	mov	ip, r2
 80002ee:	458c      	cmp	ip, r1
 80002f0:	4686      	mov	lr, r0
 80002f2:	fab2 f282 	clz	r2, r2
 80002f6:	d962      	bls.n	80003be <__udivmoddi4+0xde>
 80002f8:	b14a      	cbz	r2, 800030e <__udivmoddi4+0x2e>
 80002fa:	f1c2 0320 	rsb	r3, r2, #32
 80002fe:	4091      	lsls	r1, r2
 8000300:	fa20 f303 	lsr.w	r3, r0, r3
 8000304:	fa0c fc02 	lsl.w	ip, ip, r2
 8000308:	4319      	orrs	r1, r3
 800030a:	fa00 fe02 	lsl.w	lr, r0, r2
 800030e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000312:	fa1f f68c 	uxth.w	r6, ip
 8000316:	fbb1 f4f7 	udiv	r4, r1, r7
 800031a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800031e:	fb07 1114 	mls	r1, r7, r4, r1
 8000322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000326:	fb04 f106 	mul.w	r1, r4, r6
 800032a:	4299      	cmp	r1, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x64>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f104 30ff 	add.w	r0, r4, #4294967295
 8000336:	f080 8112 	bcs.w	800055e <__udivmoddi4+0x27e>
 800033a:	4299      	cmp	r1, r3
 800033c:	f240 810f 	bls.w	800055e <__udivmoddi4+0x27e>
 8000340:	3c02      	subs	r4, #2
 8000342:	4463      	add	r3, ip
 8000344:	1a59      	subs	r1, r3, r1
 8000346:	fa1f f38e 	uxth.w	r3, lr
 800034a:	fbb1 f0f7 	udiv	r0, r1, r7
 800034e:	fb07 1110 	mls	r1, r7, r0, r1
 8000352:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000356:	fb00 f606 	mul.w	r6, r0, r6
 800035a:	429e      	cmp	r6, r3
 800035c:	d90a      	bls.n	8000374 <__udivmoddi4+0x94>
 800035e:	eb1c 0303 	adds.w	r3, ip, r3
 8000362:	f100 31ff 	add.w	r1, r0, #4294967295
 8000366:	f080 80fc 	bcs.w	8000562 <__udivmoddi4+0x282>
 800036a:	429e      	cmp	r6, r3
 800036c:	f240 80f9 	bls.w	8000562 <__udivmoddi4+0x282>
 8000370:	4463      	add	r3, ip
 8000372:	3802      	subs	r0, #2
 8000374:	1b9b      	subs	r3, r3, r6
 8000376:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800037a:	2100      	movs	r1, #0
 800037c:	b11d      	cbz	r5, 8000386 <__udivmoddi4+0xa6>
 800037e:	40d3      	lsrs	r3, r2
 8000380:	2200      	movs	r2, #0
 8000382:	e9c5 3200 	strd	r3, r2, [r5]
 8000386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800038a:	428b      	cmp	r3, r1
 800038c:	d905      	bls.n	800039a <__udivmoddi4+0xba>
 800038e:	b10d      	cbz	r5, 8000394 <__udivmoddi4+0xb4>
 8000390:	e9c5 0100 	strd	r0, r1, [r5]
 8000394:	2100      	movs	r1, #0
 8000396:	4608      	mov	r0, r1
 8000398:	e7f5      	b.n	8000386 <__udivmoddi4+0xa6>
 800039a:	fab3 f183 	clz	r1, r3
 800039e:	2900      	cmp	r1, #0
 80003a0:	d146      	bne.n	8000430 <__udivmoddi4+0x150>
 80003a2:	42a3      	cmp	r3, r4
 80003a4:	d302      	bcc.n	80003ac <__udivmoddi4+0xcc>
 80003a6:	4290      	cmp	r0, r2
 80003a8:	f0c0 80f0 	bcc.w	800058c <__udivmoddi4+0x2ac>
 80003ac:	1a86      	subs	r6, r0, r2
 80003ae:	eb64 0303 	sbc.w	r3, r4, r3
 80003b2:	2001      	movs	r0, #1
 80003b4:	2d00      	cmp	r5, #0
 80003b6:	d0e6      	beq.n	8000386 <__udivmoddi4+0xa6>
 80003b8:	e9c5 6300 	strd	r6, r3, [r5]
 80003bc:	e7e3      	b.n	8000386 <__udivmoddi4+0xa6>
 80003be:	2a00      	cmp	r2, #0
 80003c0:	f040 8090 	bne.w	80004e4 <__udivmoddi4+0x204>
 80003c4:	eba1 040c 	sub.w	r4, r1, ip
 80003c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003cc:	fa1f f78c 	uxth.w	r7, ip
 80003d0:	2101      	movs	r1, #1
 80003d2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003d6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003da:	fb08 4416 	mls	r4, r8, r6, r4
 80003de:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003e2:	fb07 f006 	mul.w	r0, r7, r6
 80003e6:	4298      	cmp	r0, r3
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x11c>
 80003ea:	eb1c 0303 	adds.w	r3, ip, r3
 80003ee:	f106 34ff 	add.w	r4, r6, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x11a>
 80003f4:	4298      	cmp	r0, r3
 80003f6:	f200 80cd 	bhi.w	8000594 <__udivmoddi4+0x2b4>
 80003fa:	4626      	mov	r6, r4
 80003fc:	1a1c      	subs	r4, r3, r0
 80003fe:	fa1f f38e 	uxth.w	r3, lr
 8000402:	fbb4 f0f8 	udiv	r0, r4, r8
 8000406:	fb08 4410 	mls	r4, r8, r0, r4
 800040a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800040e:	fb00 f707 	mul.w	r7, r0, r7
 8000412:	429f      	cmp	r7, r3
 8000414:	d908      	bls.n	8000428 <__udivmoddi4+0x148>
 8000416:	eb1c 0303 	adds.w	r3, ip, r3
 800041a:	f100 34ff 	add.w	r4, r0, #4294967295
 800041e:	d202      	bcs.n	8000426 <__udivmoddi4+0x146>
 8000420:	429f      	cmp	r7, r3
 8000422:	f200 80b0 	bhi.w	8000586 <__udivmoddi4+0x2a6>
 8000426:	4620      	mov	r0, r4
 8000428:	1bdb      	subs	r3, r3, r7
 800042a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800042e:	e7a5      	b.n	800037c <__udivmoddi4+0x9c>
 8000430:	f1c1 0620 	rsb	r6, r1, #32
 8000434:	408b      	lsls	r3, r1
 8000436:	fa22 f706 	lsr.w	r7, r2, r6
 800043a:	431f      	orrs	r7, r3
 800043c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000440:	fa04 f301 	lsl.w	r3, r4, r1
 8000444:	ea43 030c 	orr.w	r3, r3, ip
 8000448:	40f4      	lsrs	r4, r6
 800044a:	fa00 f801 	lsl.w	r8, r0, r1
 800044e:	0c38      	lsrs	r0, r7, #16
 8000450:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000454:	fbb4 fef0 	udiv	lr, r4, r0
 8000458:	fa1f fc87 	uxth.w	ip, r7
 800045c:	fb00 441e 	mls	r4, r0, lr, r4
 8000460:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000464:	fb0e f90c 	mul.w	r9, lr, ip
 8000468:	45a1      	cmp	r9, r4
 800046a:	fa02 f201 	lsl.w	r2, r2, r1
 800046e:	d90a      	bls.n	8000486 <__udivmoddi4+0x1a6>
 8000470:	193c      	adds	r4, r7, r4
 8000472:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000476:	f080 8084 	bcs.w	8000582 <__udivmoddi4+0x2a2>
 800047a:	45a1      	cmp	r9, r4
 800047c:	f240 8081 	bls.w	8000582 <__udivmoddi4+0x2a2>
 8000480:	f1ae 0e02 	sub.w	lr, lr, #2
 8000484:	443c      	add	r4, r7
 8000486:	eba4 0409 	sub.w	r4, r4, r9
 800048a:	fa1f f983 	uxth.w	r9, r3
 800048e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000492:	fb00 4413 	mls	r4, r0, r3, r4
 8000496:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800049a:	fb03 fc0c 	mul.w	ip, r3, ip
 800049e:	45a4      	cmp	ip, r4
 80004a0:	d907      	bls.n	80004b2 <__udivmoddi4+0x1d2>
 80004a2:	193c      	adds	r4, r7, r4
 80004a4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004a8:	d267      	bcs.n	800057a <__udivmoddi4+0x29a>
 80004aa:	45a4      	cmp	ip, r4
 80004ac:	d965      	bls.n	800057a <__udivmoddi4+0x29a>
 80004ae:	3b02      	subs	r3, #2
 80004b0:	443c      	add	r4, r7
 80004b2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004b6:	fba0 9302 	umull	r9, r3, r0, r2
 80004ba:	eba4 040c 	sub.w	r4, r4, ip
 80004be:	429c      	cmp	r4, r3
 80004c0:	46ce      	mov	lr, r9
 80004c2:	469c      	mov	ip, r3
 80004c4:	d351      	bcc.n	800056a <__udivmoddi4+0x28a>
 80004c6:	d04e      	beq.n	8000566 <__udivmoddi4+0x286>
 80004c8:	b155      	cbz	r5, 80004e0 <__udivmoddi4+0x200>
 80004ca:	ebb8 030e 	subs.w	r3, r8, lr
 80004ce:	eb64 040c 	sbc.w	r4, r4, ip
 80004d2:	fa04 f606 	lsl.w	r6, r4, r6
 80004d6:	40cb      	lsrs	r3, r1
 80004d8:	431e      	orrs	r6, r3
 80004da:	40cc      	lsrs	r4, r1
 80004dc:	e9c5 6400 	strd	r6, r4, [r5]
 80004e0:	2100      	movs	r1, #0
 80004e2:	e750      	b.n	8000386 <__udivmoddi4+0xa6>
 80004e4:	f1c2 0320 	rsb	r3, r2, #32
 80004e8:	fa20 f103 	lsr.w	r1, r0, r3
 80004ec:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f0:	fa24 f303 	lsr.w	r3, r4, r3
 80004f4:	4094      	lsls	r4, r2
 80004f6:	430c      	orrs	r4, r1
 80004f8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004fc:	fa00 fe02 	lsl.w	lr, r0, r2
 8000500:	fa1f f78c 	uxth.w	r7, ip
 8000504:	fbb3 f0f8 	udiv	r0, r3, r8
 8000508:	fb08 3110 	mls	r1, r8, r0, r3
 800050c:	0c23      	lsrs	r3, r4, #16
 800050e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000512:	fb00 f107 	mul.w	r1, r0, r7
 8000516:	4299      	cmp	r1, r3
 8000518:	d908      	bls.n	800052c <__udivmoddi4+0x24c>
 800051a:	eb1c 0303 	adds.w	r3, ip, r3
 800051e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000522:	d22c      	bcs.n	800057e <__udivmoddi4+0x29e>
 8000524:	4299      	cmp	r1, r3
 8000526:	d92a      	bls.n	800057e <__udivmoddi4+0x29e>
 8000528:	3802      	subs	r0, #2
 800052a:	4463      	add	r3, ip
 800052c:	1a5b      	subs	r3, r3, r1
 800052e:	b2a4      	uxth	r4, r4
 8000530:	fbb3 f1f8 	udiv	r1, r3, r8
 8000534:	fb08 3311 	mls	r3, r8, r1, r3
 8000538:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800053c:	fb01 f307 	mul.w	r3, r1, r7
 8000540:	42a3      	cmp	r3, r4
 8000542:	d908      	bls.n	8000556 <__udivmoddi4+0x276>
 8000544:	eb1c 0404 	adds.w	r4, ip, r4
 8000548:	f101 36ff 	add.w	r6, r1, #4294967295
 800054c:	d213      	bcs.n	8000576 <__udivmoddi4+0x296>
 800054e:	42a3      	cmp	r3, r4
 8000550:	d911      	bls.n	8000576 <__udivmoddi4+0x296>
 8000552:	3902      	subs	r1, #2
 8000554:	4464      	add	r4, ip
 8000556:	1ae4      	subs	r4, r4, r3
 8000558:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800055c:	e739      	b.n	80003d2 <__udivmoddi4+0xf2>
 800055e:	4604      	mov	r4, r0
 8000560:	e6f0      	b.n	8000344 <__udivmoddi4+0x64>
 8000562:	4608      	mov	r0, r1
 8000564:	e706      	b.n	8000374 <__udivmoddi4+0x94>
 8000566:	45c8      	cmp	r8, r9
 8000568:	d2ae      	bcs.n	80004c8 <__udivmoddi4+0x1e8>
 800056a:	ebb9 0e02 	subs.w	lr, r9, r2
 800056e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000572:	3801      	subs	r0, #1
 8000574:	e7a8      	b.n	80004c8 <__udivmoddi4+0x1e8>
 8000576:	4631      	mov	r1, r6
 8000578:	e7ed      	b.n	8000556 <__udivmoddi4+0x276>
 800057a:	4603      	mov	r3, r0
 800057c:	e799      	b.n	80004b2 <__udivmoddi4+0x1d2>
 800057e:	4630      	mov	r0, r6
 8000580:	e7d4      	b.n	800052c <__udivmoddi4+0x24c>
 8000582:	46d6      	mov	lr, sl
 8000584:	e77f      	b.n	8000486 <__udivmoddi4+0x1a6>
 8000586:	4463      	add	r3, ip
 8000588:	3802      	subs	r0, #2
 800058a:	e74d      	b.n	8000428 <__udivmoddi4+0x148>
 800058c:	4606      	mov	r6, r0
 800058e:	4623      	mov	r3, r4
 8000590:	4608      	mov	r0, r1
 8000592:	e70f      	b.n	80003b4 <__udivmoddi4+0xd4>
 8000594:	3e02      	subs	r6, #2
 8000596:	4463      	add	r3, ip
 8000598:	e730      	b.n	80003fc <__udivmoddi4+0x11c>
 800059a:	bf00      	nop

0800059c <__aeabi_idiv0>:
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop

080005a0 <vApplicationIdleHook>:
   specified, or call vTaskDelay()). If the application makes use of the
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
   vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80005a0:	4901      	ldr	r1, [pc, #4]	@ (80005a8 <vApplicationIdleHook+0x8>)
 80005a2:	2000      	movs	r0, #0
 80005a4:	f009 b81a 	b.w	80095dc <vTaskSetApplicationTaskTag>
 80005a8:	08001821 	.word	0x08001821

080005ac <_Z26Bluetooth_Receive_CallbackPht>:
/* USER CODE END MX_GPIO_Init_2 */
}

/* USER CODE BEGIN 4 */
char rx_data[256];
void Bluetooth_Receive_Callback(uint8_t* data, uint16_t size) {
 80005ac:	b508      	push	{r3, lr}
	if(bt.rx_buffer[0]=='\0'){
 80005ae:	4b09      	ldr	r3, [pc, #36]	@ (80005d4 <_Z26Bluetooth_Receive_CallbackPht+0x28>)
 80005b0:	791a      	ldrb	r2, [r3, #4]
 80005b2:	b90a      	cbnz	r2, 80005b8 <_Z26Bluetooth_Receive_CallbackPht+0xc>
		bt.rx_buffer[0]= bt.rx_buffer[8];
 80005b4:	7b1a      	ldrb	r2, [r3, #12]
 80005b6:	711a      	strb	r2, [r3, #4]
	}
	strncpy(rx_data,(char*)bt.rx_buffer,8);
 80005b8:	2208      	movs	r2, #8
 80005ba:	4907      	ldr	r1, [pc, #28]	@ (80005d8 <_Z26Bluetooth_Receive_CallbackPht+0x2c>)
 80005bc:	4807      	ldr	r0, [pc, #28]	@ (80005dc <_Z26Bluetooth_Receive_CallbackPht+0x30>)
 80005be:	f022 f9c5 	bl	802294c <strncpy>
    //Bluetooth_write_data(&bt, data, size);
	memset(bt.rx_buffer,0,256);
 80005c2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80005c6:	2100      	movs	r1, #0
 80005c8:	4803      	ldr	r0, [pc, #12]	@ (80005d8 <_Z26Bluetooth_Receive_CallbackPht+0x2c>)
}
 80005ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	memset(bt.rx_buffer,0,256);
 80005ce:	f022 b9a3 	b.w	8022918 <memset>
 80005d2:	bf00      	nop
 80005d4:	200038d0 	.word	0x200038d0
 80005d8:	200038d4 	.word	0x200038d4
 80005dc:	20000140 	.word	0x20000140

080005e0 <_Z16StartDefaultTaskPv>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80005e0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
	  osDelay(100);
 80005e2:	2064      	movs	r0, #100	@ 0x64
 80005e4:	f007 fa10 	bl	8007a08 <osDelay>
  for(;;)
 80005e8:	e7fb      	b.n	80005e2 <_Z16StartDefaultTaskPv+0x2>
	...

080005ec <_Z8BLE_TaskPv>:
	Bluetooth_init(&bt, &huart7, Bluetooth_Receive_Callback, Bluetooth_Transmit_Callback);

  for(;;)
  {

	  HAL_UART_Receive_IT(&huart7, (uint8_t *)&bt.rx_buffer[bt.rx_index], 1);
 80005ec:	4c0a      	ldr	r4, [pc, #40]	@ (8000618 <_Z8BLE_TaskPv+0x2c>)
 80005ee:	4d0b      	ldr	r5, [pc, #44]	@ (800061c <_Z8BLE_TaskPv+0x30>)
	Bluetooth_init(&bt, &huart7, Bluetooth_Receive_Callback, Bluetooth_Transmit_Callback);
 80005f0:	4a0b      	ldr	r2, [pc, #44]	@ (8000620 <_Z8BLE_TaskPv+0x34>)
 80005f2:	490a      	ldr	r1, [pc, #40]	@ (800061c <_Z8BLE_TaskPv+0x30>)
 80005f4:	4808      	ldr	r0, [pc, #32]	@ (8000618 <_Z8BLE_TaskPv+0x2c>)
{
 80005f6:	b508      	push	{r3, lr}
	Bluetooth_init(&bt, &huart7, Bluetooth_Receive_Callback, Bluetooth_Transmit_Callback);
 80005f8:	4b0a      	ldr	r3, [pc, #40]	@ (8000624 <_Z8BLE_TaskPv+0x38>)
 80005fa:	f003 fd15 	bl	8004028 <Bluetooth_init>
	  HAL_UART_Receive_IT(&huart7, (uint8_t *)&bt.rx_buffer[bt.rx_index], 1);
 80005fe:	f8b4 1104 	ldrh.w	r1, [r4, #260]	@ 0x104
 8000602:	2201      	movs	r2, #1
 8000604:	4628      	mov	r0, r5
 8000606:	3104      	adds	r1, #4
 8000608:	4421      	add	r1, r4
 800060a:	f007 f8c7 	bl	800779c <HAL_UART_Receive_IT>
    osDelay(25);
 800060e:	2019      	movs	r0, #25
 8000610:	f007 f9fa 	bl	8007a08 <osDelay>
  for(;;)
 8000614:	e7f3      	b.n	80005fe <_Z8BLE_TaskPv+0x12>
 8000616:	bf00      	nop
 8000618:	200038d0 	.word	0x200038d0
 800061c:	20000294 	.word	0x20000294
 8000620:	080005ad 	.word	0x080005ad
 8000624:	08000629 	.word	0x08000629

08000628 <_Z27Bluetooth_Transmit_Callbackv>:
void Bluetooth_Transmit_Callback(void) {
 8000628:	4770      	bx	lr
	...

0800062c <_Z18SystemClock_Configv>:
{
 800062c:	b510      	push	{r4, lr}
 800062e:	b094      	sub	sp, #80	@ 0x50
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000630:	2210      	movs	r2, #16
 8000632:	2100      	movs	r1, #0
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000634:	2402      	movs	r4, #2
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000636:	a80a      	add	r0, sp, #40	@ 0x28
 8000638:	f022 f96e 	bl	8022918 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800063c:	2214      	movs	r2, #20
 800063e:	2100      	movs	r1, #0
 8000640:	a803      	add	r0, sp, #12
 8000642:	f022 f969 	bl	8022918 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8000646:	4b1d      	ldr	r3, [pc, #116]	@ (80006bc <_Z18SystemClock_Configv+0x90>)
  RCC_OscInitStruct.PLL.PLLN = 432;
 8000648:	2119      	movs	r1, #25
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800064a:	a808      	add	r0, sp, #32
  __HAL_RCC_PWR_CLK_ENABLE();
 800064c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800064e:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000652:	641a      	str	r2, [r3, #64]	@ 0x40
 8000654:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000656:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800065a:	9301      	str	r3, [sp, #4]
 800065c:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800065e:	4b18      	ldr	r3, [pc, #96]	@ (80006c0 <_Z18SystemClock_Configv+0x94>)
 8000660:	681a      	ldr	r2, [r3, #0]
 8000662:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8000666:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000668:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000670:	9302      	str	r3, [sp, #8]
 8000672:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000674:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000678:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800067c:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8000680:	e9cd 430e 	strd	r4, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 432;
 8000684:	f44f 73d8 	mov.w	r3, #432	@ 0x1b0
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000688:	e9cd 4412 	strd	r4, r4, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLN = 432;
 800068c:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000690:	f005 fc6c 	bl	8005f6c <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000694:	f005 f908 	bl	80058a8 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000698:	230f      	movs	r3, #15
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800069a:	2000      	movs	r0, #0
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 800069c:	2107      	movs	r1, #7
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800069e:	e9cd 3403 	strd	r3, r4, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80006a2:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80006a6:	e9cd 0305 	strd	r0, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80006aa:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80006ae:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80006b0:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80006b2:	f005 fe43 	bl	800633c <HAL_RCC_ClockConfig>
}
 80006b6:	b014      	add	sp, #80	@ 0x50
 80006b8:	bd10      	pop	{r4, pc}
 80006ba:	bf00      	nop
 80006bc:	40023800 	.word	0x40023800
 80006c0:	40007000 	.word	0x40007000

080006c4 <main>:
{
 80006c4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80006c8:	b09b      	sub	sp, #108	@ 0x6c

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006ca:	2210      	movs	r2, #16
 80006cc:	2100      	movs	r1, #0
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80006ce:	2501      	movs	r5, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006d0:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006d2:	f04f 4a10 	mov.w	sl, #2415919104	@ 0x90000000
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006d6:	f022 f91f 	bl	8022918 <memset>
  MPU_InitStruct.SubRegionDisable = 0x0;
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 80006da:	2400      	movs	r4, #0
  HAL_MPU_Disable();
 80006dc:	f004 f838 	bl	8004750 <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006e0:	4bc7      	ldr	r3, [pc, #796]	@ (8000a00 <main+0x33c>)
  MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006e2:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80006e4:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 80006e8:	9410      	str	r4, [sp, #64]	@ 0x40
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006ea:	e9cd a30e 	strd	sl, r3, [sp, #56]	@ 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006ee:	f004 f84d 	bl	800478c <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 80006f2:	2317      	movs	r3, #23
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006f4:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 80006f6:	f88d 5035 	strb.w	r5, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 80006fa:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 80006fe:	f88d 5042 	strb.w	r5, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000702:	f004 f843 	bl	800478c <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 8000706:	2004      	movs	r0, #4
 8000708:	f004 f830 	bl	800476c <HAL_MPU_Enable>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800070c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000710:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000714:	4abb      	ldr	r2, [pc, #748]	@ (8000a04 <main+0x340>)
 8000716:	f8c2 4250 	str.w	r4, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800071a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800071e:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000722:	6953      	ldr	r3, [r2, #20]
 8000724:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000728:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800072a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800072e:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8000732:	f8c2 4084 	str.w	r4, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8000736:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 800073a:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800073e:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000742:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8000746:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800074a:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800074c:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000750:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000752:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8000756:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000758:	f8c2 5260 	str.w	r5, [r2, #608]	@ 0x260
      } while (ways-- != 0U);
 800075c:	d2f9      	bcs.n	8000752 <main+0x8e>
    } while(sets-- != 0U);
 800075e:	3b20      	subs	r3, #32
 8000760:	f113 0f20 	cmn.w	r3, #32
 8000764:	d1f2      	bne.n	800074c <main+0x88>
 8000766:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 800076a:	6953      	ldr	r3, [r2, #20]
 800076c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000770:	6153      	str	r3, [r2, #20]
 8000772:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000776:	f3bf 8f6f 	isb	sy
  HAL_Init();
 800077a:	f003 ff4f 	bl	800461c <HAL_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800077e:	2400      	movs	r4, #0
  SystemClock_Config();
 8000780:	f7ff ff54 	bl	800062c <_Z18SystemClock_Configv>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000784:	2214      	movs	r2, #20
 8000786:	2100      	movs	r1, #0
 8000788:	a80d      	add	r0, sp, #52	@ 0x34
 800078a:	f022 f8c5 	bl	8022918 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800078e:	4b9e      	ldr	r3, [pc, #632]	@ (8000a08 <main+0x344>)
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000790:	2110      	movs	r1, #16
 8000792:	489e      	ldr	r0, [pc, #632]	@ (8000a0c <main+0x348>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000794:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000796:	2701      	movs	r7, #1
 8000798:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800079c:	f04f 0b03 	mov.w	fp, #3
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007a0:	f042 0210 	orr.w	r2, r2, #16
  GPIO_InitStruct.Pin = LCD_DISP_Pin;
 80007a4:	f44f 5a80 	mov.w	sl, #4096	@ 0x1000
  hdma2d.Instance = DMA2D;
 80007a8:	4d99      	ldr	r5, [pc, #612]	@ (8000a10 <main+0x34c>)
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80007aa:	f04f 0904 	mov.w	r9, #4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007ae:	631a      	str	r2, [r3, #48]	@ 0x30
 80007b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80007b2:	4e98      	ldr	r6, [pc, #608]	@ (8000a14 <main+0x350>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007b4:	f002 0210 	and.w	r2, r2, #16
 80007b8:	9202      	str	r2, [sp, #8]
 80007ba:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80007bc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007be:	f042 0202 	orr.w	r2, r2, #2
 80007c2:	631a      	str	r2, [r3, #48]	@ 0x30
 80007c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007c6:	f002 0202 	and.w	r2, r2, #2
 80007ca:	9203      	str	r2, [sp, #12]
 80007cc:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80007ce:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007d0:	f042 0201 	orr.w	r2, r2, #1
 80007d4:	631a      	str	r2, [r3, #48]	@ 0x30
 80007d6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007d8:	f002 0201 	and.w	r2, r2, #1
 80007dc:	9204      	str	r2, [sp, #16]
 80007de:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80007e0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007e2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80007e6:	631a      	str	r2, [r3, #48]	@ 0x30
 80007e8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007ea:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80007ee:	9205      	str	r2, [sp, #20]
 80007f0:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80007f2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007f4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80007f8:	631a      	str	r2, [r3, #48]	@ 0x30
 80007fa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007fc:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 8000800:	9206      	str	r2, [sp, #24]
 8000802:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000804:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000806:	f042 0208 	orr.w	r2, r2, #8
 800080a:	631a      	str	r2, [r3, #48]	@ 0x30
 800080c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800080e:	f002 0208 	and.w	r2, r2, #8
 8000812:	9207      	str	r2, [sp, #28]
 8000814:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8000816:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000818:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800081c:	631a      	str	r2, [r3, #48]	@ 0x30
 800081e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000820:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
 8000824:	9208      	str	r2, [sp, #32]
 8000826:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000828:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800082a:	f042 0220 	orr.w	r2, r2, #32
 800082e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000830:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000832:	f002 0220 	and.w	r2, r2, #32
 8000836:	9209      	str	r2, [sp, #36]	@ 0x24
 8000838:	9a09      	ldr	r2, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800083a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800083c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000840:	631a      	str	r2, [r3, #48]	@ 0x30
 8000842:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000844:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8000848:	920a      	str	r2, [sp, #40]	@ 0x28
 800084a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800084c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800084e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000852:	631a      	str	r2, [r3, #48]	@ 0x30
 8000854:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000856:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 800085a:	920b      	str	r2, [sp, #44]	@ 0x2c
 800085c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800085e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000860:	f042 0204 	orr.w	r2, r2, #4
 8000864:	631a      	str	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000866:	2200      	movs	r2, #0
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000868:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800086a:	f003 0304 	and.w	r3, r3, #4
 800086e:	930c      	str	r3, [sp, #48]	@ 0x30
 8000870:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000872:	f004 fae9 	bl	8004e48 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000876:	2201      	movs	r2, #1
 8000878:	2108      	movs	r1, #8
 800087a:	4867      	ldr	r0, [pc, #412]	@ (8000a18 <main+0x354>)
 800087c:	f004 fae4 	bl	8004e48 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 8000880:	2201      	movs	r2, #1
 8000882:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000886:	4865      	ldr	r0, [pc, #404]	@ (8000a1c <main+0x358>)
 8000888:	f004 fade 	bl	8004e48 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 800088c:	2200      	movs	r2, #0
 800088e:	21c0      	movs	r1, #192	@ 0xc0
 8000890:	4863      	ldr	r0, [pc, #396]	@ (8000a20 <main+0x35c>)
 8000892:	f004 fad9 	bl	8004e48 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000896:	2200      	movs	r2, #0
 8000898:	2140      	movs	r1, #64	@ 0x40
 800089a:	4862      	ldr	r0, [pc, #392]	@ (8000a24 <main+0x360>)
 800089c:	f004 fad4 	bl	8004e48 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80008a0:	a90d      	add	r1, sp, #52	@ 0x34
 80008a2:	485a      	ldr	r0, [pc, #360]	@ (8000a0c <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008a4:	e9cd 870d 	strd	r8, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008a8:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80008ac:	f004 f948 	bl	8004b40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 80008b0:	2308      	movs	r3, #8
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80008b2:	a90d      	add	r1, sp, #52	@ 0x34
 80008b4:	4858      	ldr	r0, [pc, #352]	@ (8000a18 <main+0x354>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008b6:	e9cd 370d 	strd	r3, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008ba:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80008be:	f004 f93f 	bl	8004b40 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 80008c2:	a90d      	add	r1, sp, #52	@ 0x34
 80008c4:	4855      	ldr	r0, [pc, #340]	@ (8000a1c <main+0x358>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008c6:	e9cd a70d 	strd	sl, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008ca:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 80008ce:	f004 f937 	bl	8004b40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
 80008d2:	22c0      	movs	r2, #192	@ 0xc0
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80008d4:	a90d      	add	r1, sp, #52	@ 0x34
 80008d6:	4852      	ldr	r0, [pc, #328]	@ (8000a20 <main+0x35c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008d8:	e9cd 270d 	strd	r2, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008dc:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80008e0:	f004 f92e 	bl	8004b40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
 80008e4:	2240      	movs	r2, #64	@ 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80008e6:	a90d      	add	r1, sp, #52	@ 0x34
 80008e8:	484e      	ldr	r0, [pc, #312]	@ (8000a24 <main+0x360>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008ea:	e9cd 270d 	strd	r2, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008ee:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80008f2:	f004 f925 	bl	8004b40 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80008f6:	484c      	ldr	r0, [pc, #304]	@ (8000a28 <main+0x364>)
 80008f8:	494c      	ldr	r1, [pc, #304]	@ (8000a2c <main+0x368>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 80008fa:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
 80008fc:	6001      	str	r1, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80008fe:	6207      	str	r7, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000900:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000904:	f003 ff6e 	bl	80047e4 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8000908:	4949      	ldr	r1, [pc, #292]	@ (8000a30 <main+0x36c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800090a:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 800090c:	e9c5 1400 	strd	r1, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8000910:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8000914:	e9c5 440a 	strd	r4, r4, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000918:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800091c:	f004 f811 	bl	8004942 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000920:	4639      	mov	r1, r7
 8000922:	4628      	mov	r0, r5
    Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8000924:	4d43      	ldr	r5, [pc, #268]	@ (8000a34 <main+0x370>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000926:	f004 f8c5 	bl	8004ab4 <HAL_DMA2D_ConfigLayer>
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800092a:	2340      	movs	r3, #64	@ 0x40
 800092c:	f44f 72c0 	mov.w	r2, #384	@ 0x180
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000930:	4941      	ldr	r1, [pc, #260]	@ (8000a38 <main+0x374>)
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000932:	4630      	mov	r0, r6
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000934:	60b4      	str	r4, [r6, #8]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000936:	61f4      	str	r4, [r6, #28]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 8000938:	62b4      	str	r4, [r6, #40]	@ 0x28
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800093a:	e9c6 3205 	strd	r3, r2, [r6, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800093e:	f44f 6200 	mov.w	r2, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8000942:	e9c6 2a08 	strd	r2, sl, [r6, #32]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000946:	f04f 0a02 	mov.w	sl, #2
 800094a:	2207      	movs	r2, #7
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 800094c:	e9c6 1400 	strd	r1, r4, [r6]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000950:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.RCDDelay = 2;
 8000952:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000956:	e9c6 9803 	strd	r9, r8, [r6, #12]
  SdramTiming.RowCycleDelay = 7;
 800095a:	e9cd 920f 	strd	r9, r2, [sp, #60]	@ 0x3c
  SdramTiming.ExitSelfRefreshDelay = 7;
 800095e:	e9cd a20d 	strd	sl, r2, [sp, #52]	@ 0x34
  SdramTiming.RPDelay = 2;
 8000962:	e9cd ba11 	strd	fp, sl, [sp, #68]	@ 0x44
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000966:	f006 f84f 	bl	8006a08 <HAL_SDRAM_Init>
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800096a:	4629      	mov	r1, r5
 800096c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000970:	4630      	mov	r0, r6
  __IO uint32_t tmpmrd = 0;
 8000972:	9401      	str	r4, [sp, #4]
    Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK1;
 8000974:	e9c5 7800 	strd	r7, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 8000978:	e9c5 7402 	strd	r7, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800097c:	f006 f864 	bl	8006a48 <HAL_SDRAM_SendCommand>
    HAL_Delay(1);
 8000980:	4638      	mov	r0, r7
 8000982:	f003 fe6f 	bl	8004664 <HAL_Delay>
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000986:	4629      	mov	r1, r5
 8000988:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800098c:	4630      	mov	r0, r6
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800098e:	e9c5 a800 	strd	sl, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 8000992:	e9c5 7402 	strd	r7, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000996:	f006 f857 	bl	8006a48 <HAL_SDRAM_SendCommand>
    Command.AutoRefreshNumber      = 8;
 800099a:	2308      	movs	r3, #8
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800099c:	4629      	mov	r1, r5
 800099e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80009a2:	4630      	mov	r0, r6
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80009a4:	e9c5 b800 	strd	fp, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 80009a8:	e9c5 3402 	strd	r3, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009ac:	f006 f84c 	bl	8006a48 <HAL_SDRAM_SendCommand>
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 80009b0:	f44f 730c 	mov.w	r3, #560	@ 0x230
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009b4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80009b8:	4629      	mov	r1, r5
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 80009ba:	9301      	str	r3, [sp, #4]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009bc:	4630      	mov	r0, r6
    Command.ModeRegisterDefinition = tmpmrd;
 80009be:	9b01      	ldr	r3, [sp, #4]
    Command.AutoRefreshNumber      = 1;
 80009c0:	60af      	str	r7, [r5, #8]
    Command.ModeRegisterDefinition = tmpmrd;
 80009c2:	60eb      	str	r3, [r5, #12]
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80009c4:	e9c5 9800 	strd	r9, r8, [r5]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009c8:	f006 f83e 	bl	8006a48 <HAL_SDRAM_SendCommand>
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 80009cc:	f240 712b 	movw	r1, #1835	@ 0x72b
 80009d0:	4630      	mov	r0, r6
  hi2c3.Instance = I2C3;
 80009d2:	4d1a      	ldr	r5, [pc, #104]	@ (8000a3c <main+0x378>)
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 80009d4:	f006 f857 	bl	8006a86 <HAL_SDRAM_ProgramRefreshRate>
    FMC_Bank1->BTCR[0] = 0x000030D2;
 80009d8:	f04f 4320 	mov.w	r3, #2684354560	@ 0xa0000000
 80009dc:	f243 02d2 	movw	r2, #12498	@ 0x30d2
  HAL_Delay(100); //Delay to fix initialization issue on some boards 
 80009e0:	2064      	movs	r0, #100	@ 0x64
  hltdc.Init.AccumulatedActiveH = 283;
 80009e2:	f240 2615 	movw	r6, #533	@ 0x215
    FMC_Bank1->BTCR[0] = 0x000030D2;
 80009e6:	601a      	str	r2, [r3, #0]
  HAL_Delay(100); //Delay to fix initialization issue on some boards 
 80009e8:	f003 fe3c 	bl	8004664 <HAL_Delay>
  hi2c3.Init.Timing = 0x20404768;
 80009ec:	4b14      	ldr	r3, [pc, #80]	@ (8000a40 <main+0x37c>)
 80009ee:	4a15      	ldr	r2, [pc, #84]	@ (8000a44 <main+0x380>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80009f0:	4628      	mov	r0, r5
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80009f2:	622c      	str	r4, [r5, #32]
  hi2c3.Init.Timing = 0x20404768;
 80009f4:	e9c5 2300 	strd	r2, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80009f8:	e9c5 4702 	strd	r4, r7, [r5, #8]
 80009fc:	e024      	b.n	8000a48 <main+0x384>
 80009fe:	bf00      	nop
 8000a00:	0300001b 	.word	0x0300001b
 8000a04:	e000ed00 	.word	0xe000ed00
 8000a08:	40023800 	.word	0x40023800
 8000a0c:	40020400 	.word	0x40020400
 8000a10:	20000464 	.word	0x20000464
 8000a14:	20000260 	.word	0x20000260
 8000a18:	40022800 	.word	0x40022800
 8000a1c:	40022000 	.word	0x40022000
 8000a20:	40020800 	.word	0x40020800
 8000a24:	40021800 	.word	0x40021800
 8000a28:	200004a4 	.word	0x200004a4
 8000a2c:	40023000 	.word	0x40023000
 8000a30:	4002b000 	.word	0x4002b000
 8000a34:	20000240 	.word	0x20000240
 8000a38:	a0000140 	.word	0xa0000140
 8000a3c:	20000410 	.word	0x20000410
 8000a40:	20404768 	.word	0x20404768
 8000a44:	40005c00 	.word	0x40005c00
  hi2c3.Init.OwnAddress2 = 0;
 8000a48:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000a4c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000a50:	f004 fb22 	bl	8005098 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000a54:	4621      	mov	r1, r4
 8000a56:	4628      	mov	r0, r5
 8000a58:	f004 fd40 	bl	80054dc <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000a5c:	4621      	mov	r1, r4
 8000a5e:	4628      	mov	r0, r5
  hltdc.Instance = LTDC;
 8000a60:	4d4a      	ldr	r5, [pc, #296]	@ (8000b8c <main+0x4c8>)
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000a62:	f004 fd61 	bl	8005528 <HAL_I2CEx_ConfigDigitalFilter>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000a66:	2234      	movs	r2, #52	@ 0x34
 8000a68:	4621      	mov	r1, r4
 8000a6a:	eb0d 0002 	add.w	r0, sp, r2
 8000a6e:	f021 ff53 	bl	8022918 <memset>
  hltdc.Instance = LTDC;
 8000a72:	4b47      	ldr	r3, [pc, #284]	@ (8000b90 <main+0x4cc>)
  hltdc.Init.VerticalSync = 9;
 8000a74:	2128      	movs	r1, #40	@ 0x28
  hltdc.Init.AccumulatedVBP = 11;
 8000a76:	2035      	movs	r0, #53	@ 0x35
  hltdc.Init.TotalHeigh = 285;
 8000a78:	f240 2c35 	movw	ip, #565	@ 0x235
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000a7c:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Blue = 0;
 8000a7e:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8000a80:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000a84:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.VerticalSync = 9;
 8000a88:	2309      	movs	r3, #9
 8000a8a:	e9c5 1305 	strd	r1, r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
 8000a8e:	230b      	movs	r3, #11
 8000a90:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
 8000a94:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000a98:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
 8000a9a:	e9c5 6309 	strd	r6, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
 8000a9e:	f240 131d 	movw	r3, #285	@ 0x11d
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000aa2:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.TotalHeigh = 285;
 8000aa6:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000aaa:	f004 fde9 	bl	8005680 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8000aae:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ab0:	f44f 6e80 	mov.w	lr, #1024	@ 0x400
  pLayerCfg.WindowX1 = 480;
 8000ab4:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  pLayerCfg.WindowY1 = 272;
 8000ab8:	f44f 7388 	mov.w	r3, #272	@ 0x110
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000abc:	4628      	mov	r0, r5
  pLayerCfg.WindowX0 = 0;
 8000abe:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.ImageHeight = 272;
 8000ac0:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000ac2:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8000ac6:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  pLayerCfg.Alpha0 = 0;
 8000aca:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ace:	2105      	movs	r1, #5
 8000ad0:	e9cd e114 	strd	lr, r1, [sp, #80]	@ 0x50
  pLayerCfg.FBStartAdress = 0xC0000000;
 8000ad4:	f04f 4140 	mov.w	r1, #3221225472	@ 0xc0000000
  pLayerCfg.WindowY0 = 0;
 8000ad8:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.ImageWidth = 480;
 8000adc:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ae0:	4622      	mov	r2, r4
 8000ae2:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000ae4:	e9cd 3a10 	strd	r3, sl, [sp, #64]	@ 0x40
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ae8:	f004 fe95 	bl	8005816 <HAL_LTDC_ConfigLayer>
  hqspi.Instance = QUADSPI;
 8000aec:	4829      	ldr	r0, [pc, #164]	@ (8000b94 <main+0x4d0>)
 8000aee:	4b2a      	ldr	r3, [pc, #168]	@ (8000b98 <main+0x4d4>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8000af0:	6204      	str	r4, [r0, #32]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8000af2:	e9c0 9802 	strd	r9, r8, [r0, #8]
  hqspi.Init.ClockPrescaler = 1;
 8000af6:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 8000afa:	f04f 0818 	mov.w	r8, #24
 8000afe:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
  huart7.Init.BaudRate = 115200;
 8000b02:	f8df 90c8 	ldr.w	r9, [pc, #200]	@ 8000bcc <main+0x508>
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 8000b06:	e9c0 8304 	strd	r8, r3, [r0, #16]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8000b0a:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8000b0e:	f004 ffe5 	bl	8005adc <HAL_QSPI_Init>
  BSP_QSPI_Init();
 8000b12:	f003 fc03 	bl	800431c <BSP_QSPI_Init>
  BSP_QSPI_MemoryMappedMode();
 8000b16:	f003 fb49 	bl	80041ac <BSP_QSPI_EnableMemoryMappedMode>
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8000b1a:	205c      	movs	r0, #92	@ 0x5c
 8000b1c:	f003 fe06 	bl	800472c <HAL_NVIC_DisableIRQ>
  MX_LIBJPEG_Init();
 8000b20:	f000 fbfe 	bl	8001320 <MX_LIBJPEG_Init>
  huart7.Instance = UART7;
 8000b24:	481d      	ldr	r0, [pc, #116]	@ (8000b9c <main+0x4d8>)
  huart7.Init.BaudRate = 115200;
 8000b26:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
  huart7.Init.Parity = UART_PARITY_NONE;
 8000b2a:	6104      	str	r4, [r0, #16]
  huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000b2c:	6244      	str	r4, [r0, #36]	@ 0x24
  huart7.Init.BaudRate = 115200;
 8000b2e:	e9c0 9300 	strd	r9, r3, [r0]
  huart7.Init.Mode = UART_MODE_TX_RX;
 8000b32:	230c      	movs	r3, #12
  huart7.Init.StopBits = UART_STOPBITS_1;
 8000b34:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000b38:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000b3c:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_UART_Init(&huart7) != HAL_OK)
 8000b40:	f006 fda4 	bl	800768c <HAL_UART_Init>
  MX_TouchGFX_Init();
 8000b44:	f000 fc18 	bl	8001378 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000b48:	f000 fc15 	bl	8001376 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8000b4c:	f006 fece 	bl	80078ec <osKernelInitialize>
  bluMutexHandle = osMutexNew(&bluMutex_attributes);
 8000b50:	4813      	ldr	r0, [pc, #76]	@ (8000ba0 <main+0x4dc>)
 8000b52:	f006 ff71 	bl	8007a38 <osMutexNew>
 8000b56:	4b13      	ldr	r3, [pc, #76]	@ (8000ba4 <main+0x4e0>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b58:	4a13      	ldr	r2, [pc, #76]	@ (8000ba8 <main+0x4e4>)
 8000b5a:	4621      	mov	r1, r4
  bluMutexHandle = osMutexNew(&bluMutex_attributes);
 8000b5c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b5e:	4813      	ldr	r0, [pc, #76]	@ (8000bac <main+0x4e8>)
 8000b60:	f006 fefe 	bl	8007960 <osThreadNew>
 8000b64:	4b12      	ldr	r3, [pc, #72]	@ (8000bb0 <main+0x4ec>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b66:	4a13      	ldr	r2, [pc, #76]	@ (8000bb4 <main+0x4f0>)
 8000b68:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b6a:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b6c:	4812      	ldr	r0, [pc, #72]	@ (8000bb8 <main+0x4f4>)
 8000b6e:	f006 fef7 	bl	8007960 <osThreadNew>
 8000b72:	4b12      	ldr	r3, [pc, #72]	@ (8000bbc <main+0x4f8>)
  Bluethooth_taskHandle = osThreadNew(BLE_Task, NULL, &Bluethooth_task_attributes);
 8000b74:	4a12      	ldr	r2, [pc, #72]	@ (8000bc0 <main+0x4fc>)
 8000b76:	4621      	mov	r1, r4
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b78:	6018      	str	r0, [r3, #0]
  Bluethooth_taskHandle = osThreadNew(BLE_Task, NULL, &Bluethooth_task_attributes);
 8000b7a:	4812      	ldr	r0, [pc, #72]	@ (8000bc4 <main+0x500>)
 8000b7c:	f006 fef0 	bl	8007960 <osThreadNew>
 8000b80:	4b11      	ldr	r3, [pc, #68]	@ (8000bc8 <main+0x504>)
 8000b82:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8000b84:	f006 fecc 	bl	8007920 <osKernelStart>
  while (1)
 8000b88:	e7fe      	b.n	8000b88 <main+0x4c4>
 8000b8a:	bf00      	nop
 8000b8c:	20000368 	.word	0x20000368
 8000b90:	40016800 	.word	0x40016800
 8000b94:	2000031c 	.word	0x2000031c
 8000b98:	a0001000 	.word	0xa0001000
 8000b9c:	20000294 	.word	0x20000294
 8000ba0:	080234fc 	.word	0x080234fc
 8000ba4:	20000250 	.word	0x20000250
 8000ba8:	08023554 	.word	0x08023554
 8000bac:	080005e1 	.word	0x080005e1
 8000bb0:	2000025c 	.word	0x2000025c
 8000bb4:	08023530 	.word	0x08023530
 8000bb8:	08001387 	.word	0x08001387
 8000bbc:	20000258 	.word	0x20000258
 8000bc0:	0802350c 	.word	0x0802350c
 8000bc4:	080005ed 	.word	0x080005ed
 8000bc8:	20000254 	.word	0x20000254
 8000bcc:	40007800 	.word	0x40007800

08000bd0 <HAL_UART_TxCpltCallback>:
    if (huart->Instance == UART7) {
 8000bd0:	6802      	ldr	r2, [r0, #0]
 8000bd2:	4b06      	ldr	r3, [pc, #24]	@ (8000bec <HAL_UART_TxCpltCallback+0x1c>)
 8000bd4:	429a      	cmp	r2, r3
 8000bd6:	d107      	bne.n	8000be8 <HAL_UART_TxCpltCallback+0x18>
        bt.tx_complete = 1;
 8000bd8:	4b05      	ldr	r3, [pc, #20]	@ (8000bf0 <HAL_UART_TxCpltCallback+0x20>)
 8000bda:	2201      	movs	r2, #1
 8000bdc:	f883 2106 	strb.w	r2, [r3, #262]	@ 0x106
        if (bt.bluetooth_tx_callback) {
 8000be0:	f8d3 310c 	ldr.w	r3, [r3, #268]	@ 0x10c
 8000be4:	b103      	cbz	r3, 8000be8 <HAL_UART_TxCpltCallback+0x18>
            bt.bluetooth_tx_callback();
 8000be6:	4718      	bx	r3
}
 8000be8:	4770      	bx	lr
 8000bea:	bf00      	nop
 8000bec:	40007800 	.word	0x40007800
 8000bf0:	200038d0 	.word	0x200038d0

08000bf4 <HAL_UART_RxCpltCallback>:
    if (huart->Instance == UART7) {
 8000bf4:	6802      	ldr	r2, [r0, #0]
 8000bf6:	4b03      	ldr	r3, [pc, #12]	@ (8000c04 <HAL_UART_RxCpltCallback+0x10>)
 8000bf8:	429a      	cmp	r2, r3
 8000bfa:	d102      	bne.n	8000c02 <HAL_UART_RxCpltCallback+0xe>
        Bluetooth_handle_rx_interrupt(&bt);
 8000bfc:	4802      	ldr	r0, [pc, #8]	@ (8000c08 <HAL_UART_RxCpltCallback+0x14>)
 8000bfe:	f003 ba45 	b.w	800408c <Bluetooth_handle_rx_interrupt>
}
 8000c02:	4770      	bx	lr
 8000c04:	40007800 	.word	0x40007800
 8000c08:	200038d0 	.word	0x200038d0

08000c0c <_Z14push_bt_buttonv>:
void push_bt_button(void){
 8000c0c:	b513      	push	{r0, r1, r4, lr}
	osStatus_t mutex_status = osMutexAcquire(bluMutexHandle, osWaitForever);
 8000c0e:	4c0c      	ldr	r4, [pc, #48]	@ (8000c40 <_Z14push_bt_buttonv+0x34>)
 8000c10:	f04f 31ff 	mov.w	r1, #4294967295
 8000c14:	6820      	ldr	r0, [r4, #0]
 8000c16:	f006 ff51 	bl	8007abc <osMutexAcquire>
	if (mutex_status == osOK){
 8000c1a:	b950      	cbnz	r0, 8000c32 <_Z14push_bt_buttonv+0x26>
	uint8_t data_[] = "Hello";
 8000c1c:	4b09      	ldr	r3, [pc, #36]	@ (8000c44 <_Z14push_bt_buttonv+0x38>)
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c1e:	2207      	movs	r2, #7
 8000c20:	4669      	mov	r1, sp
	uint8_t data_[] = "Hello";
 8000c22:	6818      	ldr	r0, [r3, #0]
 8000c24:	889b      	ldrh	r3, [r3, #4]
 8000c26:	9000      	str	r0, [sp, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c28:	4807      	ldr	r0, [pc, #28]	@ (8000c48 <_Z14push_bt_buttonv+0x3c>)
	uint8_t data_[] = "Hello";
 8000c2a:	f8ad 3004 	strh.w	r3, [sp, #4]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c2e:	f003 fa21 	bl	8004074 <Bluetooth_write_data>
	 osMutexRelease(bluMutexHandle);
 8000c32:	6820      	ldr	r0, [r4, #0]
}
 8000c34:	b002      	add	sp, #8
 8000c36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	 osMutexRelease(bluMutexHandle);
 8000c3a:	f006 bf6f 	b.w	8007b1c <osMutexRelease>
 8000c3e:	bf00      	nop
 8000c40:	20000250 	.word	0x20000250
 8000c44:	080234c4 	.word	0x080234c4
 8000c48:	200038d0 	.word	0x200038d0

08000c4c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8000c4c:	6802      	ldr	r2, [r0, #0]
 8000c4e:	4b03      	ldr	r3, [pc, #12]	@ (8000c5c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8000c50:	429a      	cmp	r2, r3
 8000c52:	d101      	bne.n	8000c58 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8000c54:	f003 bcf4 	b.w	8004640 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000c58:	4770      	bx	lr
 8000c5a:	bf00      	nop
 8000c5c:	40001000 	.word	0x40001000

08000c60 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8000c60:	4770      	bx	lr
	...

08000c64 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8000c64:	4b0d      	ldr	r3, [pc, #52]	@ (8000c9c <HAL_MspInit+0x38>)
{
 8000c66:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000c68:	210f      	movs	r1, #15
 8000c6a:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 8000c6e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000c70:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000c74:	641a      	str	r2, [r3, #64]	@ 0x40
 8000c76:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000c78:	f002 5280 	and.w	r2, r2, #268435456	@ 0x10000000
 8000c7c:	9200      	str	r2, [sp, #0]
 8000c7e:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000c80:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000c82:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8000c86:	645a      	str	r2, [r3, #68]	@ 0x44
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000c88:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000c8a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c8c:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000c90:	9301      	str	r3, [sp, #4]
 8000c92:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000c94:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000c96:	f003 bd09 	b.w	80046ac <HAL_NVIC_SetPriority>
 8000c9a:	bf00      	nop
 8000c9c:	40023800 	.word	0x40023800

08000ca0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000ca0:	6802      	ldr	r2, [r0, #0]
{
 8000ca2:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8000ca4:	4b08      	ldr	r3, [pc, #32]	@ (8000cc8 <HAL_CRC_MspInit+0x28>)
 8000ca6:	429a      	cmp	r2, r3
 8000ca8:	d10b      	bne.n	8000cc2 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000caa:	f8d3 2830 	ldr.w	r2, [r3, #2096]	@ 0x830
 8000cae:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8000cb2:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8000cb6:	631a      	str	r2, [r3, #48]	@ 0x30
 8000cb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cba:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000cbe:	9301      	str	r3, [sp, #4]
 8000cc0:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000cc2:	b002      	add	sp, #8
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop
 8000cc8:	40023000 	.word	0x40023000

08000ccc <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8000ccc:	4b0e      	ldr	r3, [pc, #56]	@ (8000d08 <HAL_DMA2D_MspInit+0x3c>)
{
 8000cce:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8000cd0:	6802      	ldr	r2, [r0, #0]
 8000cd2:	429a      	cmp	r2, r3
 8000cd4:	d115      	bne.n	8000d02 <HAL_DMA2D_MspInit+0x36>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000cd6:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000cda:	2105      	movs	r1, #5
 8000cdc:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000cde:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000ce0:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000ce4:	631a      	str	r2, [r3, #48]	@ 0x30
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000ce6:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000ce8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cea:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000cee:	9301      	str	r3, [sp, #4]
 8000cf0:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000cf2:	f003 fcdb 	bl	80046ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000cf6:	205a      	movs	r0, #90	@ 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8000cf8:	b003      	add	sp, #12
 8000cfa:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000cfe:	f003 bd07 	b.w	8004710 <HAL_NVIC_EnableIRQ>
}
 8000d02:	b003      	add	sp, #12
 8000d04:	f85d fb04 	ldr.w	pc, [sp], #4
 8000d08:	4002b000 	.word	0x4002b000

08000d0c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000d0c:	b510      	push	{r4, lr}
 8000d0e:	b0a8      	sub	sp, #160	@ 0xa0
 8000d10:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d12:	2214      	movs	r2, #20
 8000d14:	2100      	movs	r1, #0
 8000d16:	a802      	add	r0, sp, #8
 8000d18:	f021 fdfe 	bl	8022918 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000d1c:	2284      	movs	r2, #132	@ 0x84
 8000d1e:	2100      	movs	r1, #0
 8000d20:	a807      	add	r0, sp, #28
 8000d22:	f021 fdf9 	bl	8022918 <memset>
  if(hi2c->Instance==I2C3)
 8000d26:	6822      	ldr	r2, [r4, #0]
 8000d28:	4b17      	ldr	r3, [pc, #92]	@ (8000d88 <HAL_I2C_MspInit+0x7c>)
 8000d2a:	429a      	cmp	r2, r3
 8000d2c:	d12a      	bne.n	8000d84 <HAL_I2C_MspInit+0x78>

  /* USER CODE END I2C3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000d2e:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000d32:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000d34:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000d36:	f005 fbdd 	bl	80064f4 <HAL_RCCEx_PeriphCLKConfig>
 8000d3a:	b108      	cbz	r0, 8000d40 <HAL_I2C_MspInit+0x34>
    {
      Error_Handler();
 8000d3c:	f7ff ff90 	bl	8000c60 <Error_Handler>
    }

    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000d40:	4c12      	ldr	r4, [pc, #72]	@ (8000d8c <HAL_I2C_MspInit+0x80>)
    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000d42:	f44f 72c0 	mov.w	r2, #384	@ 0x180
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d46:	2101      	movs	r1, #1
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000d48:	4811      	ldr	r0, [pc, #68]	@ (8000d90 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000d4a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8000d4c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000d50:	6323      	str	r3, [r4, #48]	@ 0x30
 8000d52:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8000d54:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000d58:	9300      	str	r3, [sp, #0]
 8000d5a:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000d5c:	2312      	movs	r3, #18
 8000d5e:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d62:	2303      	movs	r3, #3
 8000d64:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000d68:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000d6a:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000d6c:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000d6e:	f003 fee7 	bl	8004b40 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8000d72:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000d74:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000d78:	6423      	str	r3, [r4, #64]	@ 0x40
 8000d7a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000d7c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000d80:	9301      	str	r3, [sp, #4]
 8000d82:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8000d84:	b028      	add	sp, #160	@ 0xa0
 8000d86:	bd10      	pop	{r4, pc}
 8000d88:	40005c00 	.word	0x40005c00
 8000d8c:	40023800 	.word	0x40023800
 8000d90:	40021c00 	.word	0x40021c00

08000d94 <HAL_I2C_MspDeInit>:
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
  if(hi2c->Instance==I2C3)
 8000d94:	6802      	ldr	r2, [r0, #0]
{
 8000d96:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C3)
 8000d98:	4b09      	ldr	r3, [pc, #36]	@ (8000dc0 <HAL_I2C_MspDeInit+0x2c>)
 8000d9a:	429a      	cmp	r2, r3
 8000d9c:	d10f      	bne.n	8000dbe <HAL_I2C_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN I2C3_MspDeInit 0 */

  /* USER CODE END I2C3_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000d9e:	4a09      	ldr	r2, [pc, #36]	@ (8000dc4 <HAL_I2C_MspDeInit+0x30>)

    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_7);
 8000da0:	2180      	movs	r1, #128	@ 0x80
 8000da2:	4809      	ldr	r0, [pc, #36]	@ (8000dc8 <HAL_I2C_MspDeInit+0x34>)
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000da4:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8000da6:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8000daa:	6413      	str	r3, [r2, #64]	@ 0x40
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_7);
 8000dac:	f003 ffac 	bl	8004d08 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_8);
 8000db0:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000db4:	4804      	ldr	r0, [pc, #16]	@ (8000dc8 <HAL_I2C_MspDeInit+0x34>)
  /* USER CODE BEGIN I2C3_MspDeInit 1 */

  /* USER CODE END I2C3_MspDeInit 1 */
  }

}
 8000db6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_8);
 8000dba:	f003 bfa5 	b.w	8004d08 <HAL_GPIO_DeInit>
}
 8000dbe:	bd08      	pop	{r3, pc}
 8000dc0:	40005c00 	.word	0x40005c00
 8000dc4:	40023800 	.word	0x40023800
 8000dc8:	40021c00 	.word	0x40021c00

08000dcc <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000dcc:	b570      	push	{r4, r5, r6, lr}
 8000dce:	b0ac      	sub	sp, #176	@ 0xb0
 8000dd0:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000dd2:	2214      	movs	r2, #20
 8000dd4:	2100      	movs	r1, #0
 8000dd6:	a806      	add	r0, sp, #24
 8000dd8:	f021 fd9e 	bl	8022918 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000ddc:	2284      	movs	r2, #132	@ 0x84
 8000dde:	2100      	movs	r1, #0
 8000de0:	a80b      	add	r0, sp, #44	@ 0x2c
 8000de2:	f021 fd99 	bl	8022918 <memset>
  if(hltdc->Instance==LTDC)
 8000de6:	6822      	ldr	r2, [r4, #0]
 8000de8:	4b48      	ldr	r3, [pc, #288]	@ (8000f0c <HAL_LTDC_MspInit+0x140>)
 8000dea:	429a      	cmp	r2, r3
 8000dec:	f040 808c 	bne.w	8000f08 <HAL_LTDC_MspInit+0x13c>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000df0:	2308      	movs	r3, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000df2:	2005      	movs	r0, #5
    PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV2;
    PeriphClkInitStruct.PLLSAIDivQ = 1;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000df4:	2401      	movs	r4, #1
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000df6:	930b      	str	r3, [sp, #44]	@ 0x2c
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
 8000df8:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8000dfc:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000dfe:	2302      	movs	r3, #2
 8000e00:	e9cd 3011 	strd	r3, r0, [sp, #68]	@ 0x44
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000e04:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000e08:	a80b      	add	r0, sp, #44	@ 0x2c
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000e0a:	e9cd 4315 	strd	r4, r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000e0e:	f005 fb71 	bl	80064f4 <HAL_RCCEx_PeriphCLKConfig>
 8000e12:	b108      	cbz	r0, 8000e18 <HAL_LTDC_MspInit+0x4c>
    {
      Error_Handler();
 8000e14:	f7ff ff24 	bl	8000c60 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e18:	4b3d      	ldr	r3, [pc, #244]	@ (8000f10 <HAL_LTDC_MspInit+0x144>)
    PJ0     ------> LTDC_R1
    PJ1     ------> LTDC_R2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e1a:	2400      	movs	r4, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e1c:	2502      	movs	r5, #2
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000e1e:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e20:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000e22:	a906      	add	r1, sp, #24
 8000e24:	483b      	ldr	r0, [pc, #236]	@ (8000f14 <HAL_LTDC_MspInit+0x148>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e26:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8000e2a:	645a      	str	r2, [r3, #68]	@ 0x44
 8000e2c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000e2e:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8000e32:	9200      	str	r2, [sp, #0]
 8000e34:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000e36:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e38:	f042 0210 	orr.w	r2, r2, #16
 8000e3c:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e3e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e40:	f002 0210 	and.w	r2, r2, #16
 8000e44:	9201      	str	r2, [sp, #4]
 8000e46:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000e48:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e4a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000e4e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e50:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e52:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 8000e56:	9202      	str	r2, [sp, #8]
 8000e58:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOK_CLK_ENABLE();
 8000e5a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e5c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8000e60:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e62:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e64:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
 8000e68:	9203      	str	r2, [sp, #12]
 8000e6a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000e6c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e6e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8000e72:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e74:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e76:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8000e7a:	9204      	str	r2, [sp, #16]
 8000e7c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000e7e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e80:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000e84:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e88:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000e8c:	9305      	str	r3, [sp, #20]
 8000e8e:	9b05      	ldr	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e90:	2310      	movs	r3, #16
 8000e92:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e96:	e9cd 4408 	strd	r4, r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000e9a:	960a      	str	r6, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000e9c:	f003 fe50 	bl	8004b40 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_11
 8000ea0:	f64e 73ff 	movw	r3, #61439	@ 0xefff
                          |GPIO_PIN_2|GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000ea4:	a906      	add	r1, sp, #24
 8000ea6:	481c      	ldr	r0, [pc, #112]	@ (8000f18 <HAL_LTDC_MspInit+0x14c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000ea8:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000eaa:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000eae:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000eb2:	f003 fe45 	bl	8004b40 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4
 8000eb6:	23f7      	movs	r3, #247	@ 0xf7
                          |GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000eb8:	a906      	add	r1, sp, #24
 8000eba:	4818      	ldr	r0, [pc, #96]	@ (8000f1c <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000ebc:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ebe:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ec2:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000ec6:	f003 fe3b 	bl	8004b40 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000eca:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000ece:	a906      	add	r1, sp, #24
 8000ed0:	4813      	ldr	r0, [pc, #76]	@ (8000f20 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ed2:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000ed6:	2309      	movs	r3, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ed8:	e9cd 4408 	strd	r4, r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000edc:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000ede:	f003 fe2f 	bl	8004b40 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_15|GPIO_PIN_14;
 8000ee2:	f44f 4346 	mov.w	r3, #50688	@ 0xc600
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000ee6:	a906      	add	r1, sp, #24
 8000ee8:	480e      	ldr	r0, [pc, #56]	@ (8000f24 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000eea:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000eec:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ef0:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000ef4:	f003 fe24 	bl	8004b40 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000ef8:	2058      	movs	r0, #88	@ 0x58
 8000efa:	4622      	mov	r2, r4
 8000efc:	2105      	movs	r1, #5
 8000efe:	f003 fbd5 	bl	80046ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000f02:	2058      	movs	r0, #88	@ 0x58
 8000f04:	f003 fc04 	bl	8004710 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000f08:	b02c      	add	sp, #176	@ 0xb0
 8000f0a:	bd70      	pop	{r4, r5, r6, pc}
 8000f0c:	40016800 	.word	0x40016800
 8000f10:	40023800 	.word	0x40023800
 8000f14:	40021000 	.word	0x40021000
 8000f18:	40022400 	.word	0x40022400
 8000f1c:	40022800 	.word	0x40022800
 8000f20:	40021800 	.word	0x40021800
 8000f24:	40022000 	.word	0x40022000

08000f28 <HAL_QSPI_MspInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f28:	2214      	movs	r2, #20
 8000f2a:	2100      	movs	r1, #0
{
 8000f2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f30:	b08a      	sub	sp, #40	@ 0x28
 8000f32:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f34:	eb0d 0002 	add.w	r0, sp, r2
 8000f38:	f021 fcee 	bl	8022918 <memset>
  if(hqspi->Instance==QUADSPI)
 8000f3c:	6822      	ldr	r2, [r4, #0]
 8000f3e:	4b2c      	ldr	r3, [pc, #176]	@ (8000ff0 <HAL_QSPI_MspInit+0xc8>)
 8000f40:	429a      	cmp	r2, r3
 8000f42:	d151      	bne.n	8000fe8 <HAL_QSPI_MspInit+0xc0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000f44:	4b2b      	ldr	r3, [pc, #172]	@ (8000ff4 <HAL_QSPI_MspInit+0xcc>)
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f46:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000f48:	2403      	movs	r4, #3
 8000f4a:	2609      	movs	r6, #9
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000f4c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f4e:	f04f 0804 	mov.w	r8, #4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000f52:	a905      	add	r1, sp, #20
 8000f54:	4828      	ldr	r0, [pc, #160]	@ (8000ff8 <HAL_QSPI_MspInit+0xd0>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000f56:	f042 0202 	orr.w	r2, r2, #2

    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f5a:	2700      	movs	r7, #0
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000f5c:	639a      	str	r2, [r3, #56]	@ 0x38
 8000f5e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8000f60:	f002 0202 	and.w	r2, r2, #2
 8000f64:	9201      	str	r2, [sp, #4]
 8000f66:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000f68:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f6a:	f042 0210 	orr.w	r2, r2, #16
 8000f6e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f70:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f72:	f002 0210 	and.w	r2, r2, #16
 8000f76:	9202      	str	r2, [sp, #8]
 8000f78:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000f7a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f7c:	f042 0202 	orr.w	r2, r2, #2
 8000f80:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f82:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f84:	f002 0202 	and.w	r2, r2, #2
 8000f88:	9203      	str	r2, [sp, #12]
 8000f8a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000f8c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f8e:	f042 0208 	orr.w	r2, r2, #8
 8000f92:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f96:	f003 0308 	and.w	r3, r3, #8
 8000f9a:	9304      	str	r3, [sp, #16]
 8000f9c:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f9e:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000fa2:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000fa6:	f003 fdcb 	bl	8004b40 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8000faa:	2340      	movs	r3, #64	@ 0x40
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fac:	a905      	add	r1, sp, #20
 8000fae:	4813      	ldr	r0, [pc, #76]	@ (8000ffc <HAL_QSPI_MspInit+0xd4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fb0:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8000fb4:	230a      	movs	r3, #10
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fb6:	e9cd 7407 	strd	r7, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8000fba:	9309      	str	r3, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fbc:	f003 fdc0 	bl	8004b40 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fc0:	a905      	add	r1, sp, #20
 8000fc2:	480e      	ldr	r0, [pc, #56]	@ (8000ffc <HAL_QSPI_MspInit+0xd4>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000fc4:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fc6:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fca:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fce:	f003 fdb7 	bl	8004b40 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11;
 8000fd2:	f44f 5360 	mov.w	r3, #14336	@ 0x3800
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000fd6:	a905      	add	r1, sp, #20
 8000fd8:	4809      	ldr	r0, [pc, #36]	@ (8001000 <HAL_QSPI_MspInit+0xd8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000fda:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fdc:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fe0:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000fe4:	f003 fdac 	bl	8004b40 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8000fe8:	b00a      	add	sp, #40	@ 0x28
 8000fea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000fee:	bf00      	nop
 8000ff0:	a0001000 	.word	0xa0001000
 8000ff4:	40023800 	.word	0x40023800
 8000ff8:	40021000 	.word	0x40021000
 8000ffc:	40020400 	.word	0x40020400
 8001000:	40020c00 	.word	0x40020c00

08001004 <HAL_QSPI_MspDeInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
  if(hqspi->Instance==QUADSPI)
 8001004:	6802      	ldr	r2, [r0, #0]
{
 8001006:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001008:	4b0b      	ldr	r3, [pc, #44]	@ (8001038 <HAL_QSPI_MspDeInit+0x34>)
 800100a:	429a      	cmp	r2, r3
 800100c:	d113      	bne.n	8001036 <HAL_QSPI_MspDeInit+0x32>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 800100e:	4a0b      	ldr	r2, [pc, #44]	@ (800103c <HAL_QSPI_MspDeInit+0x38>)
    PB2     ------> QUADSPI_CLK
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 8001010:	2104      	movs	r1, #4
 8001012:	480b      	ldr	r0, [pc, #44]	@ (8001040 <HAL_QSPI_MspDeInit+0x3c>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001014:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8001016:	f023 0302 	bic.w	r3, r3, #2
 800101a:	6393      	str	r3, [r2, #56]	@ 0x38
    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 800101c:	f003 fe74 	bl	8004d08 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_2);
 8001020:	2144      	movs	r1, #68	@ 0x44
 8001022:	4808      	ldr	r0, [pc, #32]	@ (8001044 <HAL_QSPI_MspDeInit+0x40>)
 8001024:	f003 fe70 	bl	8004d08 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11);
 8001028:	f44f 5160 	mov.w	r1, #14336	@ 0x3800
 800102c:	4806      	ldr	r0, [pc, #24]	@ (8001048 <HAL_QSPI_MspDeInit+0x44>)
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 800102e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11);
 8001032:	f003 be69 	b.w	8004d08 <HAL_GPIO_DeInit>
}
 8001036:	bd08      	pop	{r3, pc}
 8001038:	a0001000 	.word	0xa0001000
 800103c:	40023800 	.word	0x40023800
 8001040:	40021000 	.word	0x40021000
 8001044:	40020400 	.word	0x40020400
 8001048:	40020c00 	.word	0x40020c00

0800104c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800104c:	b510      	push	{r4, lr}
 800104e:	b0a8      	sub	sp, #160	@ 0xa0
 8001050:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001052:	2214      	movs	r2, #20
 8001054:	2100      	movs	r1, #0
 8001056:	a802      	add	r0, sp, #8
 8001058:	f021 fc5e 	bl	8022918 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800105c:	2284      	movs	r2, #132	@ 0x84
 800105e:	2100      	movs	r1, #0
 8001060:	a807      	add	r0, sp, #28
 8001062:	f021 fc59 	bl	8022918 <memset>
  if(huart->Instance==UART7)
 8001066:	6822      	ldr	r2, [r4, #0]
 8001068:	4b17      	ldr	r3, [pc, #92]	@ (80010c8 <HAL_UART_MspInit+0x7c>)
 800106a:	429a      	cmp	r2, r3
 800106c:	d12a      	bne.n	80010c4 <HAL_UART_MspInit+0x78>

  /* USER CODE END UART7_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 800106e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001072:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 8001074:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001076:	f005 fa3d 	bl	80064f4 <HAL_RCCEx_PeriphCLKConfig>
 800107a:	b108      	cbz	r0, 8001080 <HAL_UART_MspInit+0x34>
    {
      Error_Handler();
 800107c:	f7ff fdf0 	bl	8000c60 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_UART7_CLK_ENABLE();
 8001080:	4b12      	ldr	r3, [pc, #72]	@ (80010cc <HAL_UART_MspInit+0x80>)
    PF6     ------> UART7_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001082:	2100      	movs	r1, #0
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001084:	4812      	ldr	r0, [pc, #72]	@ (80010d0 <HAL_UART_MspInit+0x84>)
    __HAL_RCC_UART7_CLK_ENABLE();
 8001086:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001088:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800108c:	641a      	str	r2, [r3, #64]	@ 0x40
 800108e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001090:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 8001094:	9200      	str	r2, [sp, #0]
 8001096:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001098:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800109a:	f042 0220 	orr.w	r2, r2, #32
 800109e:	631a      	str	r2, [r3, #48]	@ 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010a0:	22c0      	movs	r2, #192	@ 0xc0
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80010a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010a4:	f003 0320 	and.w	r3, r3, #32
 80010a8:	9301      	str	r3, [sp, #4]
 80010aa:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010ac:	2302      	movs	r3, #2
 80010ae:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010b2:	2303      	movs	r3, #3
 80010b4:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 80010b8:	2308      	movs	r3, #8
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80010ba:	eb0d 0103 	add.w	r1, sp, r3
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 80010be:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80010c0:	f003 fd3e 	bl	8004b40 <HAL_GPIO_Init>
  /* USER CODE BEGIN UART7_MspInit 1 */

  /* USER CODE END UART7_MspInit 1 */
  }

}
 80010c4:	b028      	add	sp, #160	@ 0xa0
 80010c6:	bd10      	pop	{r4, pc}
 80010c8:	40007800 	.word	0x40007800
 80010cc:	40023800 	.word	0x40023800
 80010d0:	40021400 	.word	0x40021400

080010d4 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80010d4:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80010d6:	2300      	movs	r3, #0
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80010d8:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80010da:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80010dc:	4b29      	ldr	r3, [pc, #164]	@ (8001184 <HAL_SDRAM_MspInit+0xb0>)
 80010de:	681e      	ldr	r6, [r3, #0]
 80010e0:	2e00      	cmp	r6, #0
 80010e2:	d14d      	bne.n	8001180 <HAL_SDRAM_MspInit+0xac>
  FMC_Initialized = 1;
 80010e4:	2201      	movs	r2, #1
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010e6:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80010e8:	2503      	movs	r5, #3
 80010ea:	240c      	movs	r4, #12
  FMC_Initialized = 1;
 80010ec:	601a      	str	r2, [r3, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80010ee:	a901      	add	r1, sp, #4
  __HAL_RCC_FMC_CLK_ENABLE();
 80010f0:	4b25      	ldr	r3, [pc, #148]	@ (8001188 <HAL_SDRAM_MspInit+0xb4>)
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80010f2:	4826      	ldr	r0, [pc, #152]	@ (800118c <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80010f4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80010f6:	f042 0201 	orr.w	r2, r2, #1
 80010fa:	639a      	str	r2, [r3, #56]	@ 0x38
 80010fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80010fe:	f003 0301 	and.w	r3, r3, #1
 8001102:	9300      	str	r3, [sp, #0]
 8001104:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001106:	f64f 7383 	movw	r3, #65411	@ 0xff83
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800110a:	e9cd 5404 	strd	r5, r4, [sp, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800110e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001112:	f003 fd15 	bl	8004b40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001116:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800111a:	a901      	add	r1, sp, #4
 800111c:	481c      	ldr	r0, [pc, #112]	@ (8001190 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800111e:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001120:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001124:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001128:	f003 fd0a 	bl	8004b40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 800112c:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001130:	a901      	add	r1, sp, #4
 8001132:	4818      	ldr	r0, [pc, #96]	@ (8001194 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001134:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001136:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800113a:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800113e:	f003 fcff 	bl	8004b40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001142:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001146:	a901      	add	r1, sp, #4
 8001148:	4813      	ldr	r0, [pc, #76]	@ (8001198 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800114a:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800114c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001150:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001154:	f003 fcf4 	bl	8004b40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_3;
 8001158:	2328      	movs	r3, #40	@ 0x28
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800115a:	a901      	add	r1, sp, #4
 800115c:	480f      	ldr	r0, [pc, #60]	@ (800119c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800115e:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001160:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001164:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001168:	f003 fcea 	bl	8004b40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 800116c:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800116e:	a901      	add	r1, sp, #4
 8001170:	480b      	ldr	r0, [pc, #44]	@ (80011a0 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001172:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001174:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001178:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800117c:	f003 fce0 	bl	8004b40 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001180:	b007      	add	sp, #28
 8001182:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001184:	200004c8 	.word	0x200004c8
 8001188:	40023800 	.word	0x40023800
 800118c:	40021000 	.word	0x40021000
 8001190:	40021800 	.word	0x40021800
 8001194:	40020c00 	.word	0x40020c00
 8001198:	40021400 	.word	0x40021400
 800119c:	40021c00 	.word	0x40021c00
 80011a0:	40020800 	.word	0x40020800

080011a4 <HAL_InitTick>:
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80011a4:	4b21      	ldr	r3, [pc, #132]	@ (800122c <HAL_InitTick+0x88>)
 80011a6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80011a8:	f042 0210 	orr.w	r2, r2, #16
{
 80011ac:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_TIM6_CLK_ENABLE();
 80011ae:	641a      	str	r2, [r3, #64]	@ 0x40
{
 80011b0:	b088      	sub	sp, #32
  __HAL_RCC_TIM6_CLK_ENABLE();
 80011b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
{
 80011b4:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80011b6:	a901      	add	r1, sp, #4
 80011b8:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80011ba:	f003 0310 	and.w	r3, r3, #16
 80011be:	9302      	str	r3, [sp, #8]
 80011c0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80011c2:	f005 f979 	bl	80064b8 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80011c6:	9b06      	ldr	r3, [sp, #24]
 80011c8:	bb4b      	cbnz	r3, 800121e <HAL_InitTick+0x7a>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80011ca:	f005 f955 	bl	8006478 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80011ce:	4e18      	ldr	r6, [pc, #96]	@ (8001230 <HAL_InitTick+0x8c>)
 80011d0:	4b18      	ldr	r3, [pc, #96]	@ (8001234 <HAL_InitTick+0x90>)
 80011d2:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80011d4:	f240 33e7 	movw	r3, #999	@ 0x3e7
 80011d8:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80011da:	4b17      	ldr	r3, [pc, #92]	@ (8001238 <HAL_InitTick+0x94>)
 80011dc:	fbb0 f3f3 	udiv	r3, r0, r3
 80011e0:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80011e2:	4630      	mov	r0, r6
  htim6.Init.Prescaler = uwPrescalerValue;
 80011e4:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
 80011e6:	2300      	movs	r3, #0
 80011e8:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80011ea:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80011ec:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 80011ee:	f005 fdbb 	bl	8006d68 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80011f2:	4604      	mov	r4, r0
 80011f4:	b980      	cbnz	r0, 8001218 <HAL_InitTick+0x74>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 80011f6:	4630      	mov	r0, r6
 80011f8:	f005 fc5e 	bl	8006ab8 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80011fc:	4604      	mov	r4, r0
 80011fe:	b958      	cbnz	r0, 8001218 <HAL_InitTick+0x74>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001200:	2036      	movs	r0, #54	@ 0x36
 8001202:	f003 fa85 	bl	8004710 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001206:	2d0f      	cmp	r5, #15
 8001208:	d80d      	bhi.n	8001226 <HAL_InitTick+0x82>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800120a:	4622      	mov	r2, r4
 800120c:	4629      	mov	r1, r5
 800120e:	2036      	movs	r0, #54	@ 0x36
 8001210:	f003 fa4c 	bl	80046ac <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001214:	4b09      	ldr	r3, [pc, #36]	@ (800123c <HAL_InitTick+0x98>)
 8001216:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8001218:	4620      	mov	r0, r4
 800121a:	b008      	add	sp, #32
 800121c:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800121e:	f005 f92b 	bl	8006478 <HAL_RCC_GetPCLK1Freq>
 8001222:	0040      	lsls	r0, r0, #1
 8001224:	e7d3      	b.n	80011ce <HAL_InitTick+0x2a>
        status = HAL_ERROR;
 8001226:	2401      	movs	r4, #1
 8001228:	e7f6      	b.n	8001218 <HAL_InitTick+0x74>
 800122a:	bf00      	nop
 800122c:	40023800 	.word	0x40023800
 8001230:	200004cc 	.word	0x200004cc
 8001234:	40001000 	.word	0x40001000
 8001238:	000f4240 	.word	0x000f4240
 800123c:	2000003c 	.word	0x2000003c

08001240 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001240:	4770      	bx	lr

08001242 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001242:	e7fe      	b.n	8001242 <HardFault_Handler>

08001244 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001244:	e7fe      	b.n	8001244 <MemManage_Handler>

08001246 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001246:	e7fe      	b.n	8001246 <BusFault_Handler>

08001248 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001248:	e7fe      	b.n	8001248 <UsageFault_Handler>

0800124a <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 800124a:	4770      	bx	lr

0800124c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 800124c:	4801      	ldr	r0, [pc, #4]	@ (8001254 <TIM6_DAC_IRQHandler+0x8>)
 800124e:	f005 bc75 	b.w	8006b3c <HAL_TIM_IRQHandler>
 8001252:	bf00      	nop
 8001254:	200004cc 	.word	0x200004cc

08001258 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001258:	4801      	ldr	r0, [pc, #4]	@ (8001260 <LTDC_IRQHandler+0x8>)
 800125a:	f004 ba7f 	b.w	800575c <HAL_LTDC_IRQHandler>
 800125e:	bf00      	nop
 8001260:	20000368 	.word	0x20000368

08001264 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001264:	4801      	ldr	r0, [pc, #4]	@ (800126c <DMA2D_IRQHandler+0x8>)
 8001266:	f003 bb9a 	b.w	800499e <HAL_DMA2D_IRQHandler>
 800126a:	bf00      	nop
 800126c:	20000464 	.word	0x20000464

08001270 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001270:	2001      	movs	r0, #1
 8001272:	4770      	bx	lr

08001274 <_kill>:

int _kill(int pid, int sig)
{
 8001274:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001276:	f021 fc17 	bl	8022aa8 <__errno>
 800127a:	2316      	movs	r3, #22
 800127c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800127e:	f04f 30ff 	mov.w	r0, #4294967295
 8001282:	bd08      	pop	{r3, pc}

08001284 <_exit>:

void _exit (int status)
{
 8001284:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001286:	f021 fc0f 	bl	8022aa8 <__errno>
 800128a:	2316      	movs	r3, #22
 800128c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800128e:	e7fe      	b.n	800128e <_exit+0xa>

08001290 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001290:	b570      	push	{r4, r5, r6, lr}
 8001292:	460d      	mov	r5, r1
 8001294:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001296:	460e      	mov	r6, r1
 8001298:	1b73      	subs	r3, r6, r5
 800129a:	429c      	cmp	r4, r3
 800129c:	dc01      	bgt.n	80012a2 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800129e:	4620      	mov	r0, r4
 80012a0:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 80012a2:	f3af 8000 	nop.w
 80012a6:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012aa:	e7f5      	b.n	8001298 <_read+0x8>

080012ac <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80012ac:	b570      	push	{r4, r5, r6, lr}
 80012ae:	460d      	mov	r5, r1
 80012b0:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012b2:	460e      	mov	r6, r1
 80012b4:	1b73      	subs	r3, r6, r5
 80012b6:	429c      	cmp	r4, r3
 80012b8:	dc01      	bgt.n	80012be <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80012ba:	4620      	mov	r0, r4
 80012bc:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80012be:	f816 0b01 	ldrb.w	r0, [r6], #1
 80012c2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012c6:	e7f5      	b.n	80012b4 <_write+0x8>

080012c8 <_close>:

int _close(int file)
{
	return -1;
}
 80012c8:	f04f 30ff 	mov.w	r0, #4294967295
 80012cc:	4770      	bx	lr

080012ce <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80012ce:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
 80012d2:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 80012d4:	604b      	str	r3, [r1, #4]
}
 80012d6:	4770      	bx	lr

080012d8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80012d8:	2001      	movs	r0, #1
 80012da:	4770      	bx	lr

080012dc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80012dc:	2000      	movs	r0, #0
 80012de:	4770      	bx	lr

080012e0 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80012e0:	4a0b      	ldr	r2, [pc, #44]	@ (8001310 <_sbrk+0x30>)
{
 80012e2:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 80012e4:	6811      	ldr	r1, [r2, #0]
{
 80012e6:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 80012e8:	b909      	cbnz	r1, 80012ee <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 80012ea:	490a      	ldr	r1, [pc, #40]	@ (8001314 <_sbrk+0x34>)
 80012ec:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80012ee:	6810      	ldr	r0, [r2, #0]
 80012f0:	4909      	ldr	r1, [pc, #36]	@ (8001318 <_sbrk+0x38>)
 80012f2:	4c0a      	ldr	r4, [pc, #40]	@ (800131c <_sbrk+0x3c>)
 80012f4:	4403      	add	r3, r0
 80012f6:	1b09      	subs	r1, r1, r4
 80012f8:	428b      	cmp	r3, r1
 80012fa:	d906      	bls.n	800130a <_sbrk+0x2a>
  {
    errno = ENOMEM;
 80012fc:	f021 fbd4 	bl	8022aa8 <__errno>
 8001300:	230c      	movs	r3, #12
 8001302:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8001304:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8001308:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 800130a:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 800130c:	e7fc      	b.n	8001308 <_sbrk+0x28>
 800130e:	bf00      	nop
 8001310:	20000518 	.word	0x20000518
 8001314:	200178c0 	.word	0x200178c0
 8001318:	20050000 	.word	0x20050000
 800131c:	00000a00 	.word	0x00000a00

08001320 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
 8001320:	4770      	bx	lr
	...

08001324 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8001324:	f8df d034 	ldr.w	sp, [pc, #52]	@ 800135c <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8001328:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800132a:	e003      	b.n	8001334 <LoopCopyDataInit>

0800132c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800132c:	4b0c      	ldr	r3, [pc, #48]	@ (8001360 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800132e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001330:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8001332:	3104      	adds	r1, #4

08001334 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8001334:	480b      	ldr	r0, [pc, #44]	@ (8001364 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8001336:	4b0c      	ldr	r3, [pc, #48]	@ (8001368 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8001338:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800133a:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 800133c:	d3f6      	bcc.n	800132c <CopyDataInit>
  ldr  r2, =_sbss
 800133e:	4a0b      	ldr	r2, [pc, #44]	@ (800136c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001340:	e002      	b.n	8001348 <LoopFillZerobss>

08001342 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8001342:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8001344:	f842 3b04 	str.w	r3, [r2], #4

08001348 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001348:	4b09      	ldr	r3, [pc, #36]	@ (8001370 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800134a:	429a      	cmp	r2, r3
  bcc  FillZerobss
 800134c:	d3f9      	bcc.n	8001342 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 800134e:	f003 f87d 	bl	800444c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001352:	f021 fbaf 	bl	8022ab4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001356:	f7ff f9b5 	bl	80006c4 <main>
  bx  lr    
 800135a:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 800135c:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8001360:	08025ee4 	.word	0x08025ee4
  ldr  r0, =_sdata
 8001364:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001368:	20000124 	.word	0x20000124
  ldr  r2, =_sbss
 800136c:	20000124 	.word	0x20000124
  ldr  r3, = _ebss
 8001370:	200178c0 	.word	0x200178c0

08001374 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001374:	e7fe      	b.n	8001374 <ADC_IRQHandler>

08001376 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001376:	4770      	bx	lr

08001378 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001378:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 800137a:	f000 fd97 	bl	8001eac <touchgfx_components_init>
    touchgfx_init();
}
 800137e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8001382:	f000 bd21 	b.w	8001dc8 <touchgfx_init>

08001386 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8001386:	f000 bd93 	b.w	8001eb0 <touchgfx_taskEntry>

0800138a <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800138a:	6840      	ldr	r0, [r0, #4]
    }
 800138c:	4770      	bx	lr

0800138e <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 800138e:	6041      	str	r1, [r0, #4]
    }
 8001390:	4770      	bx	lr
	...

08001394 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8001394:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8001398:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 800139c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80013a0:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 80013a4:	4b05      	ldr	r3, [pc, #20]	@ (80013bc <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 80013a6:	4a06      	ldr	r2, [pc, #24]	@ (80013c0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 80013a8:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
 80013ac:	430a      	orrs	r2, r1
 80013ae:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 80013b2:	681a      	ldr	r2, [r3, #0]
 80013b4:	f042 0201 	orr.w	r2, r2, #1
 80013b8:	601a      	str	r2, [r3, #0]
}
 80013ba:	4770      	bx	lr
 80013bc:	e0001000 	.word	0xe0001000
 80013c0:	c5acce55 	.word	0xc5acce55

080013c4 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 80013c4:	1a52      	subs	r2, r2, r1
 80013c6:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 80013ca:	fbb2 f0f3 	udiv	r0, r2, r3
 80013ce:	4770      	bx	lr

080013d0 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 80013d0:	4b01      	ldr	r3, [pc, #4]	@ (80013d8 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 80013d2:	6858      	ldr	r0, [r3, #4]
}
 80013d4:	4770      	bx	lr
 80013d6:	bf00      	nop
 80013d8:	e0001000 	.word	0xe0001000

080013dc <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 80013dc:	4770      	bx	lr

080013de <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 80013de:	b510      	push	{r4, lr}
 80013e0:	4604      	mov	r4, r0
 80013e2:	210c      	movs	r1, #12
 80013e4:	f020 fa92 	bl	802190c <_ZdlPvj>
 80013e8:	4620      	mov	r0, r4
 80013ea:	bd10      	pop	{r4, pc}

080013ec <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80013ec:	6803      	ldr	r3, [r0, #0]
{
 80013ee:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80013f0:	691b      	ldr	r3, [r3, #16]
{
 80013f2:	4604      	mov	r4, r0
    if (active) //idle task sched out
 80013f4:	b131      	cbz	r1, 8001404 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80013f6:	4798      	blx	r3
 80013f8:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 80013fa:	6863      	ldr	r3, [r4, #4]
 80013fc:	1a9b      	subs	r3, r3, r2
 80013fe:	4403      	add	r3, r0
 8001400:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8001402:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8001404:	4798      	blx	r3
 8001406:	60a0      	str	r0, [r4, #8]
}
 8001408:	e7fb      	b.n	8001402 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>
	...

0800140c <_ZN20STM32TouchController4initEv>:
extern I2C_HandleTypeDef hi2c3;

void STM32TouchController::init()
{
    /* Initialize the TS driver structure */
    tsDriver = &ft5336_ts_drv;
 800140c:	4b02      	ldr	r3, [pc, #8]	@ (8001418 <_ZN20STM32TouchController4initEv+0xc>)

    /* Initialize the TS driver */
    tsDriver->Start(TS_I2C_ADDRESS);
 800140e:	2070      	movs	r0, #112	@ 0x70
    tsDriver = &ft5336_ts_drv;
 8001410:	4a02      	ldr	r2, [pc, #8]	@ (800141c <_ZN20STM32TouchController4initEv+0x10>)
 8001412:	6013      	str	r3, [r2, #0]
    tsDriver->Start(TS_I2C_ADDRESS);
 8001414:	68db      	ldr	r3, [r3, #12]
 8001416:	4718      	bx	r3
 8001418:	20000010 	.word	0x20000010
 800141c:	2000051c 	.word	0x2000051c

08001420 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001420:	4770      	bx	lr

08001422 <_ZN20STM32TouchControllerD0Ev>:
 8001422:	b510      	push	{r4, lr}
 8001424:	4604      	mov	r4, r0
 8001426:	2104      	movs	r1, #4
 8001428:	f020 fa70 	bl	802190c <_ZdlPvj>
 800142c:	4620      	mov	r0, r4
 800142e:	bd10      	pop	{r4, pc}

08001430 <_ZN20STM32TouchController11sampleTouchERlS0_>:
}

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8001430:	b573      	push	{r0, r1, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (tsDriver)
 8001432:	4e0e      	ldr	r6, [pc, #56]	@ (800146c <_ZN20STM32TouchController11sampleTouchERlS0_+0x3c>)
{
 8001434:	460d      	mov	r5, r1
 8001436:	4614      	mov	r4, r2
    if (tsDriver)
 8001438:	6833      	ldr	r3, [r6, #0]
 800143a:	b913      	cbnz	r3, 8001442 <_ZN20STM32TouchController11sampleTouchERlS0_+0x12>
            x = (int32_t)_x;
            y = (int32_t)_y;
            return true;
        }
    }
    return false;
 800143c:	2000      	movs	r0, #0
}
 800143e:	b002      	add	sp, #8
 8001440:	bd70      	pop	{r4, r5, r6, pc}
        if (tsDriver->DetectTouch(TS_I2C_ADDRESS))
 8001442:	691b      	ldr	r3, [r3, #16]
 8001444:	2070      	movs	r0, #112	@ 0x70
 8001446:	4798      	blx	r3
 8001448:	2800      	cmp	r0, #0
 800144a:	d0f7      	beq.n	800143c <_ZN20STM32TouchController11sampleTouchERlS0_+0xc>
            tsDriver->GetXY(TS_I2C_ADDRESS, &_y, &_x);
 800144c:	6833      	ldr	r3, [r6, #0]
 800144e:	2070      	movs	r0, #112	@ 0x70
 8001450:	aa01      	add	r2, sp, #4
 8001452:	f10d 0106 	add.w	r1, sp, #6
 8001456:	695b      	ldr	r3, [r3, #20]
 8001458:	4798      	blx	r3
            x = (int32_t)_x;
 800145a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800145e:	2001      	movs	r0, #1
 8001460:	602b      	str	r3, [r5, #0]
            y = (int32_t)_y;
 8001462:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001466:	6023      	str	r3, [r4, #0]
            return true;
 8001468:	e7e9      	b.n	800143e <_ZN20STM32TouchController11sampleTouchERlS0_+0xe>
 800146a:	bf00      	nop
 800146c:	2000051c 	.word	0x2000051c

08001470 <TS_IO_Write>:
  * @param  Reg: Reg address
  * @param  Value: Data to be written
  * @retval None
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8001470:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8001472:	2301      	movs	r3, #1
{
 8001474:	f88d 2017 	strb.w	r2, [sp, #23]
    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8001478:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800147c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001480:	f10d 0217 	add.w	r2, sp, #23
 8001484:	9200      	str	r2, [sp, #0]
 8001486:	460a      	mov	r2, r1
 8001488:	4601      	mov	r1, r0
 800148a:	4805      	ldr	r0, [pc, #20]	@ (80014a0 <TS_IO_Write+0x30>)
 800148c:	f003 fe6e 	bl	800516c <HAL_I2C_Mem_Write>
    if (status != HAL_OK)
 8001490:	b110      	cbz	r0, 8001498 <TS_IO_Write+0x28>
    HAL_I2C_DeInit(i2c_handler);
 8001492:	4803      	ldr	r0, [pc, #12]	@ (80014a0 <TS_IO_Write+0x30>)
 8001494:	f003 fe51 	bl	800513a <HAL_I2C_DeInit>
    I2Cx_WriteMultiple(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&Value, 1);
}
 8001498:	b007      	add	sp, #28
 800149a:	f85d fb04 	ldr.w	pc, [sp], #4
 800149e:	bf00      	nop
 80014a0:	20000410 	.word	0x20000410

080014a4 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Reg address
  * @retval Data to be read
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 80014a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    uint8_t read_value = 0;
 80014a6:	2300      	movs	r3, #0
{
 80014a8:	460a      	mov	r2, r1
    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 80014aa:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
    uint8_t read_value = 0;
 80014ae:	f88d 3017 	strb.w	r3, [sp, #23]
    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 80014b2:	2301      	movs	r3, #1
 80014b4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80014b8:	f10d 0117 	add.w	r1, sp, #23
 80014bc:	9100      	str	r1, [sp, #0]
 80014be:	4601      	mov	r1, r0
 80014c0:	4805      	ldr	r0, [pc, #20]	@ (80014d8 <TS_IO_Read+0x34>)
 80014c2:	f003 ff2d 	bl	8005320 <HAL_I2C_Mem_Read>
    if (status != HAL_OK)
 80014c6:	b110      	cbz	r0, 80014ce <TS_IO_Read+0x2a>
    HAL_I2C_DeInit(i2c_handler);
 80014c8:	4803      	ldr	r0, [pc, #12]	@ (80014d8 <TS_IO_Read+0x34>)
 80014ca:	f003 fe36 	bl	800513a <HAL_I2C_DeInit>

    I2Cx_ReadMultiple(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&read_value, 1);

    return read_value;
}
 80014ce:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80014d2:	b007      	add	sp, #28
 80014d4:	f85d fb04 	ldr.w	pc, [sp], #4
 80014d8:	20000410 	.word	0x20000410

080014dc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 80014dc:	2803      	cmp	r0, #3
 80014de:	d823      	bhi.n	8001528 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
 80014e0:	e8df f000 	tbb	[pc, r0]
 80014e4:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 80014e8:	4b10      	ldr	r3, [pc, #64]	@ (800152c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80014ea:	2110      	movs	r1, #16
 80014ec:	4810      	ldr	r0, [pc, #64]	@ (8001530 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 80014ee:	681a      	ldr	r2, [r3, #0]
 80014f0:	fab2 f282 	clz	r2, r2
 80014f4:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80014f6:	f003 bca7 	b.w	8004e48 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 80014fa:	4b0c      	ldr	r3, [pc, #48]	@ (800152c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80014fc:	2140      	movs	r1, #64	@ 0x40
 80014fe:	685a      	ldr	r2, [r3, #4]
 8001500:	fab2 f282 	clz	r2, r2
 8001504:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001506:	480b      	ldr	r0, [pc, #44]	@ (8001534 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 8001508:	e7f5      	b.n	80014f6 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800150a:	4b08      	ldr	r3, [pc, #32]	@ (800152c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800150c:	2180      	movs	r1, #128	@ 0x80
 800150e:	689a      	ldr	r2, [r3, #8]
 8001510:	fab2 f282 	clz	r2, r2
 8001514:	0952      	lsrs	r2, r2, #5
 8001516:	e7f6      	b.n	8001506 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001518:	4b04      	ldr	r3, [pc, #16]	@ (800152c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800151a:	2140      	movs	r1, #64	@ 0x40
 800151c:	4806      	ldr	r0, [pc, #24]	@ (8001538 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
 800151e:	68da      	ldr	r2, [r3, #12]
 8001520:	fab2 f282 	clz	r2, r2
 8001524:	0952      	lsrs	r2, r2, #5
 8001526:	e7e6      	b.n	80014f6 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8001528:	4770      	bx	lr
 800152a:	bf00      	nop
 800152c:	20000520 	.word	0x20000520
 8001530:	40020400 	.word	0x40020400
 8001534:	40020800 	.word	0x40020800
 8001538:	40021800 	.word	0x40021800

0800153c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800153c:	2803      	cmp	r0, #3
 800153e:	d823      	bhi.n	8001588 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
 8001540:	e8df f000 	tbb	[pc, r0]
 8001544:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001548:	4b10      	ldr	r3, [pc, #64]	@ (800158c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800154a:	2110      	movs	r1, #16
 800154c:	4810      	ldr	r0, [pc, #64]	@ (8001590 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 800154e:	681a      	ldr	r2, [r3, #0]
 8001550:	3a00      	subs	r2, #0
 8001552:	bf18      	it	ne
 8001554:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001556:	f003 bc77 	b.w	8004e48 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 800155a:	4b0c      	ldr	r3, [pc, #48]	@ (800158c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800155c:	2140      	movs	r1, #64	@ 0x40
 800155e:	685a      	ldr	r2, [r3, #4]
 8001560:	3a00      	subs	r2, #0
 8001562:	bf18      	it	ne
 8001564:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001566:	480b      	ldr	r0, [pc, #44]	@ (8001594 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 8001568:	e7f5      	b.n	8001556 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 800156a:	4b08      	ldr	r3, [pc, #32]	@ (800158c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800156c:	2180      	movs	r1, #128	@ 0x80
 800156e:	689a      	ldr	r2, [r3, #8]
 8001570:	3a00      	subs	r2, #0
 8001572:	bf18      	it	ne
 8001574:	2201      	movne	r2, #1
 8001576:	e7f6      	b.n	8001566 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001578:	4b04      	ldr	r3, [pc, #16]	@ (800158c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800157a:	2140      	movs	r1, #64	@ 0x40
 800157c:	4806      	ldr	r0, [pc, #24]	@ (8001598 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
 800157e:	68da      	ldr	r2, [r3, #12]
 8001580:	3a00      	subs	r2, #0
 8001582:	bf18      	it	ne
 8001584:	2201      	movne	r2, #1
 8001586:	e7e6      	b.n	8001556 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8001588:	4770      	bx	lr
 800158a:	bf00      	nop
 800158c:	20000520 	.word	0x20000520
 8001590:	40020400 	.word	0x40020400
 8001594:	40020800 	.word	0x40020800
 8001598:	40021800 	.word	0x40021800

0800159c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 800159c:	2803      	cmp	r0, #3
 800159e:	d80f      	bhi.n	80015c0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
 80015a0:	e8df f000 	tbb	[pc, r0]
 80015a4:	0b090602 	.word	0x0b090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80015a8:	2110      	movs	r1, #16
 80015aa:	4806      	ldr	r0, [pc, #24]	@ (80015c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80015ac:	f003 bc51 	b.w	8004e52 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80015b0:	2140      	movs	r1, #64	@ 0x40
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80015b2:	4805      	ldr	r0, [pc, #20]	@ (80015c8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
 80015b4:	e7fa      	b.n	80015ac <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80015b6:	2180      	movs	r1, #128	@ 0x80
 80015b8:	e7fb      	b.n	80015b2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80015ba:	2140      	movs	r1, #64	@ 0x40
 80015bc:	4803      	ldr	r0, [pc, #12]	@ (80015cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
 80015be:	e7f5      	b.n	80015ac <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 80015c0:	4770      	bx	lr
 80015c2:	bf00      	nop
 80015c4:	40020400 	.word	0x40020400
 80015c8:	40020800 	.word	0x40020800
 80015cc:	40021800 	.word	0x40021800

080015d0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80015d0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80015d2:	2803      	cmp	r0, #3
 80015d4:	d813      	bhi.n	80015fe <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 80015d6:	e8df f000 	tbb	[pc, r0]
 80015da:	0a02      	.short	0x0a02
 80015dc:	0f0d      	.short	0x0f0d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80015de:	2110      	movs	r1, #16
 80015e0:	4808      	ldr	r0, [pc, #32]	@ (8001604 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80015e2:	f003 fc2b 	bl	8004e3c <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80015e6:	1e43      	subs	r3, r0, #1
 80015e8:	4258      	negs	r0, r3
 80015ea:	4158      	adcs	r0, r3
 80015ec:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80015ee:	2140      	movs	r1, #64	@ 0x40
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80015f0:	4805      	ldr	r0, [pc, #20]	@ (8001608 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
 80015f2:	e7f6      	b.n	80015e2 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80015f4:	2180      	movs	r1, #128	@ 0x80
 80015f6:	e7fb      	b.n	80015f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80015f8:	2140      	movs	r1, #64	@ 0x40
 80015fa:	4804      	ldr	r0, [pc, #16]	@ (800160c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x3c>)
 80015fc:	e7f1      	b.n	80015e2 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
    switch (id)
 80015fe:	2000      	movs	r0, #0
 8001600:	e7f1      	b.n	80015e6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8001602:	bf00      	nop
 8001604:	40020400 	.word	0x40020400
 8001608:	40020800 	.word	0x40020800
 800160c:	40021800 	.word	0x40021800

08001610 <_ZN8touchgfx4GPIO4initEv>:
{
 8001610:	b570      	push	{r4, r5, r6, lr}
 8001612:	4d08      	ldr	r5, [pc, #32]	@ (8001634 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001614:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001616:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001618:	b2e0      	uxtb	r0, r4
 800161a:	f7ff ffd9 	bl	80015d0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800161e:	b118      	cbz	r0, 8001628 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001620:	682b      	ldr	r3, [r5, #0]
 8001622:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001624:	bf18      	it	ne
 8001626:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001628:	3401      	adds	r4, #1
 800162a:	3504      	adds	r5, #4
 800162c:	2c05      	cmp	r4, #5
 800162e:	d1f3      	bne.n	8001618 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001630:	bd70      	pop	{r4, r5, r6, pc}
 8001632:	bf00      	nop
 8001634:	20000520 	.word	0x20000520

08001638 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001638:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800163a:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800163e:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8001642:	4770      	bx	lr

08001644 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001644:	2000      	movs	r0, #0
 8001646:	4770      	bx	lr

08001648 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001648:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800164a:	3900      	subs	r1, #0
 800164c:	4b02      	ldr	r3, [pc, #8]	@ (8001658 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 800164e:	bf18      	it	ne
 8001650:	2101      	movne	r1, #1
 8001652:	7019      	strb	r1, [r3, #0]
    }
 8001654:	4770      	bx	lr
 8001656:	bf00      	nop
 8001658:	20016c87 	.word	0x20016c87

0800165c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800165c:	2000      	movs	r0, #0
 800165e:	4770      	bx	lr

08001660 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001660:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8001662:	b10b      	cbz	r3, 8001668 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001664:	4608      	mov	r0, r1
 8001666:	4718      	bx	r3
        }
    }
 8001668:	4770      	bx	lr

0800166a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800166a:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800166e:	4770      	bx	lr

08001670 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001670:	6840      	ldr	r0, [r0, #4]
 8001672:	6803      	ldr	r3, [r0, #0]
 8001674:	699b      	ldr	r3, [r3, #24]
 8001676:	4718      	bx	r3

08001678 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001678:	4770      	bx	lr
	...

0800167c <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationBuffer[(480 * 272 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 800167c:	b538      	push	{r3, r4, r5, lr}
 800167e:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001680:	f000 fcde 	bl	8002040 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);  //enable the animation storage to allow slide animations
 8001684:	4908      	ldr	r1, [pc, #32]	@ (80016a8 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
 8001686:	6823      	ldr	r3, [r4, #0]
 8001688:	4620      	mov	r0, r4
    lockDMAToFrontPorch(false);
    instrumentation.init();
 800168a:	4d08      	ldr	r5, [pc, #32]	@ (80016ac <_ZN11TouchGFXHAL10initializeEv+0x30>)
    setAnimationStorage((void*)animationBuffer);  //enable the animation storage to allow slide animations
 800168c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001690:	4798      	blx	r3
        lockDMAToPorch = enableLock;
 8001692:	2300      	movs	r3, #0
    instrumentation.init();
 8001694:	4628      	mov	r0, r5
 8001696:	f884 304a 	strb.w	r3, [r4, #74]	@ 0x4a
 800169a:	f7ff fe7b 	bl	8001394 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 800169e:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 80016a0:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 80016a2:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
}
 80016a6:	bd38      	pop	{r3, r4, r5, pc}
 80016a8:	c0000000 	.word	0xc0000000
 80016ac:	20000530 	.word	0x20000530

080016b0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80016b0:	f000 bc90 	b.w	8001fd4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080016b4 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80016b4:	f000 bc94 	b.w	8001fe0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080016b8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80016b8:	b570      	push	{r4, r5, r6, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80016ba:	f000 fcdf 	bl	800207c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 80016be:	4910      	ldr	r1, [pc, #64]	@ (8001700 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x48>)
 80016c0:	2300      	movs	r3, #0
 80016c2:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80016c6:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 80016ca:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80016ce:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80016d2:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80016d6:	f3c3 334e 	ubfx	r3, r3, #13, #15
 80016da:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80016dc:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80016e0:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80016e2:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 80016e6:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80016e8:	f8c1 5274 	str.w	r5, [r1, #628]	@ 0x274
      } while (ways-- != 0U);
 80016ec:	d2f9      	bcs.n	80016e2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2a>
    } while(sets-- != 0U);
 80016ee:	3b20      	subs	r3, #32
 80016f0:	f113 0f20 	cmn.w	r3, #32
 80016f4:	d1f2      	bne.n	80016dc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x24>
 80016f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80016fa:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
 80016fe:	bd70      	pop	{r4, r5, r6, pc}
 8001700:	e000ed00 	.word	0xe000ed00

08001704 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8001704:	f000 bcbc 	b.w	8002080 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08001708 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001708:	f000 bc40 	b.w	8001f8c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800170c <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800170c:	f000 bcba 	b.w	8002084 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001710 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001710:	f000 bcc2 	b.w	8002098 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001714 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001714:	f000 bc44 	b.w	8001fa0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001718 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001718:	b510      	push	{r4, lr}
 800171a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800171c:	f009 fef8 	bl	800b510 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001720:	6823      	ldr	r3, [r4, #0]
 8001722:	4620      	mov	r0, r4
 8001724:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 8001728:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800172c:	4718      	bx	r3

0800172e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800172e:	f009 b94c 	b.w	800a9ca <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001732 <_ZN11TouchGFXHALD0Ev>:
 8001732:	b510      	push	{r4, lr}
 8001734:	4604      	mov	r4, r0
 8001736:	217c      	movs	r1, #124	@ 0x7c
 8001738:	f020 f8e8 	bl	802190c <_ZdlPvj>
 800173c:	4620      	mov	r0, r4
 800173e:	bd10      	pop	{r4, pc}

08001740 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8001740:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
 8001744:	4b0d      	ldr	r3, [pc, #52]	@ (800177c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
 8001746:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001748:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 800174c:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800174e:	428c      	cmp	r4, r1
 8001750:	d009      	beq.n	8001766 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001752:	b93a      	cbnz	r2, 8001764 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001754:	490a      	ldr	r1, [pc, #40]	@ (8001780 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001756:	4a0b      	ldr	r2, [pc, #44]	@ (8001784 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001758:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800175a:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 800175c:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800175e:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001760:	800c      	strh	r4, [r1, #0]
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
 8001762:	701a      	strb	r2, [r3, #0]
        }
    }
 8001764:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001766:	2a00      	cmp	r2, #0
 8001768:	d0fc      	beq.n	8001764 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800176a:	4a06      	ldr	r2, [pc, #24]	@ (8001784 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800176c:	4904      	ldr	r1, [pc, #16]	@ (8001780 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800176e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001770:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001772:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001774:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 8001776:	2200      	movs	r2, #0
 8001778:	e7f3      	b.n	8001762 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800177a:	bf00      	nop
 800177c:	20016c80 	.word	0x20016c80
 8001780:	20016c7e 	.word	0x20016c7e
 8001784:	20016c7c 	.word	0x20016c7c

08001788 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001788:	b570      	push	{r4, r5, r6, lr}
 800178a:	460d      	mov	r5, r1
 800178c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800178e:	b935      	cbnz	r5, 800179e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001790:	4b09      	ldr	r3, [pc, #36]	@ (80017b8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001792:	f240 21d2 	movw	r1, #722	@ 0x2d2
 8001796:	4a09      	ldr	r2, [pc, #36]	@ (80017bc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001798:	4809      	ldr	r0, [pc, #36]	@ (80017c0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 800179a:	f020 fe21 	bl	80223e0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800179e:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80017a2:	3a00      	subs	r2, #0
 80017a4:	4b07      	ldr	r3, [pc, #28]	@ (80017c4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80017a6:	bf18      	it	ne
 80017a8:	2201      	movne	r2, #1
 80017aa:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80017ac:	6803      	ldr	r3, [r0, #0]
    }
 80017ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80017b2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80017b6:	4718      	bx	r3
 80017b8:	080235b8 	.word	0x080235b8
 80017bc:	080235f0 	.word	0x080235f0
 80017c0:	0802363e 	.word	0x0802363e
 80017c4:	20016c86 	.word	0x20016c86

080017c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80017c8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80017ca:	4b09      	ldr	r3, [pc, #36]	@ (80017f0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80017cc:	881b      	ldrh	r3, [r3, #0]
 80017ce:	428b      	cmp	r3, r1
 80017d0:	d803      	bhi.n	80017da <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80017d2:	4b08      	ldr	r3, [pc, #32]	@ (80017f4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80017d4:	881b      	ldrh	r3, [r3, #0]
 80017d6:	4293      	cmp	r3, r2
 80017d8:	d905      	bls.n	80017e6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80017da:	4b07      	ldr	r3, [pc, #28]	@ (80017f8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80017dc:	219e      	movs	r1, #158	@ 0x9e
 80017de:	4a07      	ldr	r2, [pc, #28]	@ (80017fc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80017e0:	4807      	ldr	r0, [pc, #28]	@ (8001800 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80017e2:	f020 fdfd 	bl	80223e0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80017e6:	4b07      	ldr	r3, [pc, #28]	@ (8001804 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80017e8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80017ea:	4b07      	ldr	r3, [pc, #28]	@ (8001808 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80017ec:	801a      	strh	r2, [r3, #0]
    }
 80017ee:	bd08      	pop	{r3, pc}
 80017f0:	20016c7c 	.word	0x20016c7c
 80017f4:	20016c7e 	.word	0x20016c7e
 80017f8:	08023683 	.word	0x08023683
 80017fc:	080236e6 	.word	0x080236e6
 8001800:	0802363e 	.word	0x0802363e
 8001804:	20016c82 	.word	0x20016c82
 8001808:	20016c84 	.word	0x20016c84

0800180c <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 800180c:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 800180e:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001812:	b118      	cbz	r0, 800181c <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001814:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8001816:	6803      	ldr	r3, [r0, #0]
 8001818:	681b      	ldr	r3, [r3, #0]
 800181a:	4718      	bx	r3
    }
 800181c:	4770      	bx	lr
	...

08001820 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001820:	4601      	mov	r1, r0
 8001822:	b508      	push	{r3, lr}
        return instance;
 8001824:	4b03      	ldr	r3, [pc, #12]	@ (8001834 <IdleTaskHook+0x14>)
 8001826:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8001828:	b101      	cbz	r1, 800182c <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 800182a:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 800182c:	f009 fe8a 	bl	800b544 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001830:	2001      	movs	r0, #1
 8001832:	bd08      	pop	{r3, pc}
 8001834:	20016c88 	.word	0x20016c88

08001838 <_GLOBAL__sub_I_instrumentation>:
        : cc_consumed(0),
 8001838:	4b03      	ldr	r3, [pc, #12]	@ (8001848 <_GLOBAL__sub_I_instrumentation+0x10>)
 800183a:	2200      	movs	r2, #0
 800183c:	605a      	str	r2, [r3, #4]
          cc_in(0)
 800183e:	609a      	str	r2, [r3, #8]
 8001840:	4a02      	ldr	r2, [pc, #8]	@ (800184c <_GLOBAL__sub_I_instrumentation+0x14>)
 8001842:	601a      	str	r2, [r3, #0]
}
 8001844:	4770      	bx	lr
 8001846:	bf00      	nop
 8001848:	20000530 	.word	0x20000530
 800184c:	08023580 	.word	0x08023580

08001850 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001850:	2101      	movs	r1, #1
 8001852:	2200      	movs	r2, #0
{
 8001854:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001856:	4608      	mov	r0, r1
 8001858:	f006 f98c 	bl	8007b74 <osSemaphoreNew>
 800185c:	4b0a      	ldr	r3, [pc, #40]	@ (8001888 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800185e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001860:	b928      	cbnz	r0, 800186e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001862:	4b0a      	ldr	r3, [pc, #40]	@ (800188c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001864:	2128      	movs	r1, #40	@ 0x28
 8001866:	4a0a      	ldr	r2, [pc, #40]	@ (8001890 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001868:	480a      	ldr	r0, [pc, #40]	@ (8001894 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800186a:	f020 fdb9 	bl	80223e0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800186e:	2200      	movs	r2, #0
 8001870:	2104      	movs	r1, #4
 8001872:	2001      	movs	r0, #1
 8001874:	f006 fa48 	bl	8007d08 <osMessageQueueNew>
 8001878:	4b07      	ldr	r3, [pc, #28]	@ (8001898 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800187a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800187c:	b918      	cbnz	r0, 8001886 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 800187e:	4b07      	ldr	r3, [pc, #28]	@ (800189c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001880:	212c      	movs	r1, #44	@ 0x2c
 8001882:	4a03      	ldr	r2, [pc, #12]	@ (8001890 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001884:	e7f0      	b.n	8001868 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001886:	bd08      	pop	{r3, pc}
 8001888:	20000540 	.word	0x20000540
 800188c:	08023804 	.word	0x08023804
 8001890:	0802384d 	.word	0x0802384d
 8001894:	0802387c 	.word	0x0802387c
 8001898:	2000053c 	.word	0x2000053c
 800189c:	080238ca 	.word	0x080238ca

080018a0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 80018a0:	4b02      	ldr	r3, [pc, #8]	@ (80018ac <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 80018a2:	f04f 31ff 	mov.w	r1, #4294967295
 80018a6:	6818      	ldr	r0, [r3, #0]
 80018a8:	f006 b9bc 	b.w	8007c24 <osSemaphoreAcquire>
 80018ac:	20000540 	.word	0x20000540

080018b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80018b0:	4b01      	ldr	r3, [pc, #4]	@ (80018b8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80018b2:	6818      	ldr	r0, [r3, #0]
 80018b4:	f006 b9f2 	b.w	8007c9c <osSemaphoreRelease>
 80018b8:	20000540 	.word	0x20000540

080018bc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80018bc:	4b02      	ldr	r3, [pc, #8]	@ (80018c8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80018be:	2100      	movs	r1, #0
 80018c0:	6818      	ldr	r0, [r3, #0]
 80018c2:	f006 b9af 	b.w	8007c24 <osSemaphoreAcquire>
 80018c6:	bf00      	nop
 80018c8:	20000540 	.word	0x20000540

080018cc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 80018cc:	f7ff bff0 	b.w	80018b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080018d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80018d0:	2300      	movs	r3, #0
 80018d2:	4803      	ldr	r0, [pc, #12]	@ (80018e0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80018d4:	4903      	ldr	r1, [pc, #12]	@ (80018e4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80018d6:	461a      	mov	r2, r3
 80018d8:	6800      	ldr	r0, [r0, #0]
 80018da:	f006 ba5b 	b.w	8007d94 <osMessageQueuePut>
 80018de:	bf00      	nop
 80018e0:	2000053c 	.word	0x2000053c
 80018e4:	20000004 	.word	0x20000004

080018e8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80018e8:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80018ea:	2300      	movs	r3, #0
 80018ec:	4c07      	ldr	r4, [pc, #28]	@ (800190c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80018ee:	a901      	add	r1, sp, #4
 80018f0:	461a      	mov	r2, r3
 80018f2:	6820      	ldr	r0, [r4, #0]
 80018f4:	f006 fa90 	bl	8007e18 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80018f8:	f04f 33ff 	mov.w	r3, #4294967295
 80018fc:	2200      	movs	r2, #0
 80018fe:	a901      	add	r1, sp, #4
 8001900:	6820      	ldr	r0, [r4, #0]
 8001902:	f006 fa89 	bl	8007e18 <osMessageQueueGet>
}
 8001906:	b002      	add	sp, #8
 8001908:	bd10      	pop	{r4, pc}
 800190a:	bf00      	nop
 800190c:	2000053c 	.word	0x2000053c

08001910 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001910:	6803      	ldr	r3, [r0, #0]
 8001912:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001914:	4718      	bx	r3

08001916 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001916:	2001      	movs	r0, #1
 8001918:	4770      	bx	lr

0800191a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800191a:	6803      	ldr	r3, [r0, #0]
 800191c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800191e:	4718      	bx	r3

08001920 <_ZN8STM32DMA10initializeEv>:
}

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001920:	4b0d      	ldr	r3, [pc, #52]	@ (8001958 <_ZN8STM32DMA10initializeEv+0x38>)
{
 8001922:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001924:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001926:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800192a:	631a      	str	r2, [r3, #48]	@ 0x30
 800192c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800192e:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8001932:	9201      	str	r2, [sp, #4]
 8001934:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001936:	691a      	ldr	r2, [r3, #16]
 8001938:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800193c:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800193e:	691a      	ldr	r2, [r3, #16]
 8001940:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8001944:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001946:	4b05      	ldr	r3, [pc, #20]	@ (800195c <_ZN8STM32DMA10initializeEv+0x3c>)
 8001948:	4a05      	ldr	r2, [pc, #20]	@ (8001960 <_ZN8STM32DMA10initializeEv+0x40>)
 800194a:	611a      	str	r2, [r3, #16]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800194c:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001950:	4b04      	ldr	r3, [pc, #16]	@ (8001964 <_ZN8STM32DMA10initializeEv+0x44>)
 8001952:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001954:	b002      	add	sp, #8
 8001956:	4770      	bx	lr
 8001958:	40023800 	.word	0x40023800
 800195c:	20000464 	.word	0x20000464
 8001960:	08001bf1 	.word	0x08001bf1
 8001964:	e000e100 	.word	0xe000e100

08001968 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001968:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 800196c:	4770      	bx	lr
	...

08001970 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001970:	4b05      	ldr	r3, [pc, #20]	@ (8001988 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001972:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001976:	6003      	str	r3, [r0, #0]
 8001978:	4b04      	ldr	r3, [pc, #16]	@ (800198c <_ZN8STM32DMAD1Ev+0x1c>)
 800197a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800197e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001982:	f3bf 8f6f 	isb	sy
}
 8001986:	4770      	bx	lr
 8001988:	08023a68 	.word	0x08023a68
 800198c:	e000e100 	.word	0xe000e100

08001990 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001990:	b510      	push	{r4, lr}
 8001992:	4604      	mov	r4, r0
}
 8001994:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001998:	f7ff ffea 	bl	8001970 <_ZN8STM32DMAD1Ev>
 800199c:	4620      	mov	r0, r4
 800199e:	f01f ffb5 	bl	802190c <_ZdlPvj>
 80019a2:	4620      	mov	r0, r4
 80019a4:	bd10      	pop	{r4, pc}
	...

080019a8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 80019a8:	b508      	push	{r3, lr}
    switch (format)
 80019aa:	280a      	cmp	r0, #10
 80019ac:	d809      	bhi.n	80019c2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 80019ae:	e8df f000 	tbb	[pc, r0]
 80019b2:	1006      	.short	0x1006
 80019b4:	0808080e 	.word	0x0808080e
 80019b8:	10101008 	.word	0x10101008
 80019bc:	10          	.byte	0x10
 80019bd:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80019be:	2002      	movs	r0, #2
}
 80019c0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80019c2:	4b05      	ldr	r3, [pc, #20]	@ (80019d8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 80019c4:	2186      	movs	r1, #134	@ 0x86
 80019c6:	4a05      	ldr	r2, [pc, #20]	@ (80019dc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80019c8:	4805      	ldr	r0, [pc, #20]	@ (80019e0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80019ca:	f020 fd09 	bl	80223e0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 80019ce:	2000      	movs	r0, #0
 80019d0:	e7f6      	b.n	80019c0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 80019d2:	2001      	movs	r0, #1
    return dma2dColorMode;
 80019d4:	e7f4      	b.n	80019c0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80019d6:	bf00      	nop
 80019d8:	0802390c 	.word	0x0802390c
 80019dc:	08023927 	.word	0x08023927
 80019e0:	08023972 	.word	0x08023972

080019e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80019e4:	b538      	push	{r3, r4, r5, lr}
 80019e6:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80019e8:	7f88      	ldrb	r0, [r1, #30]
 80019ea:	f7ff ffdd 	bl	80019a8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80019ee:	4b17      	ldr	r3, [pc, #92]	@ (8001a4c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80019f0:	8aa5      	ldrh	r5, [r4, #20]
 80019f2:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80019f4:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80019f6:	ea42 4205 	orr.w	r2, r2, r5, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80019fa:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80019fc:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80019fe:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001a00:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001a02:	1b52      	subs	r2, r2, r5
 8001a04:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001a06:	6825      	ldr	r5, [r4, #0]
 8001a08:	2d08      	cmp	r5, #8
 8001a0a:	d10e      	bne.n	8001a2a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001a0c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001a0e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001a10:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001a12:	4a0f      	ldr	r2, [pc, #60]	@ (8001a50 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001a14:	7f20      	ldrb	r0, [r4, #28]
 8001a16:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001a1a:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001a1c:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001a1e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001a20:	4a0c      	ldr	r2, [pc, #48]	@ (8001a54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001a22:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001a24:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001a26:	601a      	str	r2, [r3, #0]
    }
}
 8001a28:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001a2a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001a2c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001a2e:	611a      	str	r2, [r3, #16]
 8001a30:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001a32:	0a0a      	lsrs	r2, r1, #8
 8001a34:	0948      	lsrs	r0, r1, #5
 8001a36:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001a3a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8001a3e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8001a42:	4302      	orrs	r2, r0
 8001a44:	430a      	orrs	r2, r1
 8001a46:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001a48:	4a03      	ldr	r2, [pc, #12]	@ (8001a58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001a4a:	e7ec      	b.n	8001a26 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001a4c:	4002b000 	.word	0x4002b000
 8001a50:	00010009 	.word	0x00010009
 8001a54:	00020201 	.word	0x00020201
 8001a58:	00030201 	.word	0x00030201

08001a5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8001a5c:	b508      	push	{r3, lr}
    switch (format)
 8001a5e:	280b      	cmp	r0, #11
 8001a60:	d80b      	bhi.n	8001a7a <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8001a62:	e8df f000 	tbb	[pc, r0]
 8001a66:	1206      	.short	0x1206
 8001a68:	0a0a0a10 	.word	0x0a0a0a10
 8001a6c:	0808080a 	.word	0x0808080a
 8001a70:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001a72:	2002      	movs	r0, #2
}
 8001a74:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001a76:	2005      	movs	r0, #5
        break;
 8001a78:	e7fc      	b.n	8001a74 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8001a7a:	4b05      	ldr	r3, [pc, #20]	@ (8001a90 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001a7c:	2165      	movs	r1, #101	@ 0x65
 8001a7e:	4a05      	ldr	r2, [pc, #20]	@ (8001a94 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001a80:	4805      	ldr	r0, [pc, #20]	@ (8001a98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8001a82:	f020 fcad 	bl	80223e0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001a86:	2000      	movs	r0, #0
 8001a88:	e7f4      	b.n	8001a74 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001a8a:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001a8c:	e7f2      	b.n	8001a74 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001a8e:	bf00      	nop
 8001a90:	0802390c 	.word	0x0802390c
 8001a94:	080239be 	.word	0x080239be
 8001a98:	08023972 	.word	0x08023972

08001a9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8001a9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001aa0:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8001aa4:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001aa6:	4640      	mov	r0, r8
 8001aa8:	f7ff ffd8 	bl	8001a5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001aac:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001aae:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001ab0:	4638      	mov	r0, r7
 8001ab2:	f7ff ffd3 	bl	8001a5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8001ab6:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001ab8:	4638      	mov	r0, r7
 8001aba:	f7ff ff75 	bl	80019a8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001abe:	8aa1      	ldrh	r1, [r4, #20]
 8001ac0:	8b62      	ldrh	r2, [r4, #26]
 8001ac2:	4b43      	ldr	r3, [pc, #268]	@ (8001bd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001ac4:	1a52      	subs	r2, r2, r1
 8001ac6:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001ac8:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001aca:	8b22      	ldrh	r2, [r4, #24]
 8001acc:	1a52      	subs	r2, r2, r1
 8001ace:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ad0:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001ad2:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ad4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ad8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ada:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001adc:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ade:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001ae0:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8001ae2:	6820      	ldr	r0, [r4, #0]
 8001ae4:	2880      	cmp	r0, #128	@ 0x80
 8001ae6:	d028      	beq.n	8001b3a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8001ae8:	7f22      	ldrb	r2, [r4, #28]
 8001aea:	d80f      	bhi.n	8001b0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8001aec:	2820      	cmp	r0, #32
 8001aee:	d066      	beq.n	8001bbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
 8001af0:	2840      	cmp	r0, #64	@ 0x40
 8001af2:	d064      	beq.n	8001bbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
 8001af4:	2804      	cmp	r0, #4
 8001af6:	d01a      	beq.n	8001b2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001af8:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001afc:	4b34      	ldr	r3, [pc, #208]	@ (8001bd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001afe:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b00:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001b04:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001b06:	d060      	beq.n	8001bca <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12e>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001b08:	4a32      	ldr	r2, [pc, #200]	@ (8001bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001b0a:	e044      	b.n	8001b96 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8001b0c:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8001b10:	d004      	beq.n	8001b1c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8001b12:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8001b16:	d1ef      	bne.n	8001af8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b18:	482f      	ldr	r0, [pc, #188]	@ (8001bd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001b1a:	e000      	b.n	8001b1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b1c:	482f      	ldr	r0, [pc, #188]	@ (8001bdc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b1e:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8001b22:	61da      	str	r2, [r3, #28]
 8001b24:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001b26:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001b28:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001b2a:	6159      	str	r1, [r3, #20]
 8001b2c:	e032      	b.n	8001b94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b2e:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001b32:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b36:	61da      	str	r2, [r3, #28]
 8001b38:	e7f6      	b.n	8001b28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001b3a:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001b3c:	1d02      	adds	r2, r0, #4
 8001b3e:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b40:	7f22      	ldrb	r2, [r4, #28]
 8001b42:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001b46:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001b4a:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001b4c:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001b4e:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001b50:	7801      	ldrb	r1, [r0, #0]
 8001b52:	b141      	cbz	r1, 8001b66 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8001b54:	2901      	cmp	r1, #1
 8001b56:	d021      	beq.n	8001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8001b58:	4b21      	ldr	r3, [pc, #132]	@ (8001be0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8001b5a:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8001b5e:	4a21      	ldr	r2, [pc, #132]	@ (8001be4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001b60:	4821      	ldr	r0, [pc, #132]	@ (8001be8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8001b62:	f020 fc3d 	bl	80223e0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001b66:	69da      	ldr	r2, [r3, #28]
 8001b68:	8841      	ldrh	r1, [r0, #2]
 8001b6a:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001b6e:	3901      	subs	r1, #1
 8001b70:	f022 0210 	bic.w	r2, r2, #16
 8001b74:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 8001b78:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001b7a:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001b7c:	4b14      	ldr	r3, [pc, #80]	@ (8001bd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001b7e:	69da      	ldr	r2, [r3, #28]
 8001b80:	f042 0220 	orr.w	r2, r2, #32
 8001b84:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001b86:	69da      	ldr	r2, [r3, #28]
 8001b88:	0692      	lsls	r2, r2, #26
 8001b8a:	d4fc      	bmi.n	8001b86 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001b8c:	2210      	movs	r2, #16
 8001b8e:	609a      	str	r2, [r3, #8]
            if (blend)
 8001b90:	2900      	cmp	r1, #0
 8001b92:	d0b9      	beq.n	8001b08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001b94:	4a15      	ldr	r2, [pc, #84]	@ (8001bec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001b96:	601a      	str	r2, [r3, #0]
}
 8001b98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8001b9c:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001ba0:	69da      	ldr	r2, [r3, #28]
 8001ba2:	8840      	ldrh	r0, [r0, #2]
 8001ba4:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
                if (blitOp.alpha == 255)
 8001ba8:	bf18      	it	ne
 8001baa:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001bac:	3801      	subs	r0, #1
 8001bae:	f022 0210 	bic.w	r2, r2, #16
 8001bb2:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001bb6:	f042 0210 	orr.w	r2, r2, #16
 8001bba:	61da      	str	r2, [r3, #28]
                break;
 8001bbc:	e7de      	b.n	8001b7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bbe:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001bc2:	4b03      	ldr	r3, [pc, #12]	@ (8001bd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001bc4:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001bc8:	e7b5      	b.n	8001b36 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001bca:	f240 2201 	movw	r2, #513	@ 0x201
 8001bce:	e7e2      	b.n	8001b96 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8001bd0:	4002b000 	.word	0x4002b000
 8001bd4:	00010201 	.word	0x00010201
 8001bd8:	00020009 	.word	0x00020009
 8001bdc:	0002000a 	.word	0x0002000a
 8001be0:	08023a08 	.word	0x08023a08
 8001be4:	08023a22 	.word	0x08023a22
 8001be8:	08023972 	.word	0x08023972
 8001bec:	00020201 	.word	0x00020201

08001bf0 <DMA2D_XferCpltCallback>:
 8001bf0:	4b02      	ldr	r3, [pc, #8]	@ (8001bfc <DMA2D_XferCpltCallback+0xc>)
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001bf6:	6803      	ldr	r3, [r0, #0]
 8001bf8:	695b      	ldr	r3, [r3, #20]
 8001bfa:	4718      	bx	r3
 8001bfc:	20016c88 	.word	0x20016c88

08001c00 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001c00:	b570      	push	{r4, r5, r6, lr}
 8001c02:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001c04:	4b0a      	ldr	r3, [pc, #40]	@ (8001c30 <_ZN8STM32DMAC1Ev+0x30>)
 8001c06:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001c08:	2600      	movs	r6, #0
 8001c0a:	4625      	mov	r5, r4
 8001c0c:	2260      	movs	r2, #96	@ 0x60
 8001c0e:	6060      	str	r0, [r4, #4]
 8001c10:	7226      	strb	r6, [r4, #8]
 8001c12:	7266      	strb	r6, [r4, #9]
 8001c14:	f845 3b20 	str.w	r3, [r5], #32
 8001c18:	4629      	mov	r1, r5
 8001c1a:	f009 fde9 	bl	800b7f0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001c1e:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8001c22:	60ee      	str	r6, [r5, #12]
 8001c24:	3524      	adds	r5, #36	@ 0x24
 8001c26:	429d      	cmp	r5, r3
 8001c28:	d1fb      	bne.n	8001c22 <_ZN8STM32DMAC1Ev+0x22>
}
 8001c2a:	4620      	mov	r0, r4
 8001c2c:	bd70      	pop	{r4, r5, r6, pc}
 8001c2e:	bf00      	nop
 8001c30:	08023a68 	.word	0x08023a68

08001c34 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001c34:	4b03      	ldr	r3, [pc, #12]	@ (8001c44 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8001c36:	681a      	ldr	r2, [r3, #0]
 8001c38:	07d2      	lsls	r2, r2, #31
 8001c3a:	d4fc      	bmi.n	8001c36 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001c3c:	2223      	movs	r2, #35	@ 0x23
 8001c3e:	609a      	str	r2, [r3, #8]
}
 8001c40:	4770      	bx	lr
 8001c42:	bf00      	nop
 8001c44:	4002b000 	.word	0x4002b000

08001c48 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8001c48:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001c4a:	4c10      	ldr	r4, [pc, #64]	@ (8001c8c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
 8001c4c:	6825      	ldr	r5, [r4, #0]
 8001c4e:	07ed      	lsls	r5, r5, #31
 8001c50:	d4fc      	bmi.n	8001c4c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001c52:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001c54:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8001c56:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001c58:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001c5a:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001c5e:	f04f 0502 	mov.w	r5, #2
 8001c62:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001c64:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001c66:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8001c68:	d00a      	beq.n	8001c80 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001c6a:	4909      	ldr	r1, [pc, #36]	@ (8001c90 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001c6c:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001c6e:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8001c72:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001c74:	4b07      	ldr	r3, [pc, #28]	@ (8001c94 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8001c76:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8001c78:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8001c7a:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8001c7c:	6023      	str	r3, [r4, #0]
    }
}
 8001c7e:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001c80:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8001c82:	9b03      	ldr	r3, [sp, #12]
 8001c84:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8001c86:	4b04      	ldr	r3, [pc, #16]	@ (8001c98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
 8001c88:	e7f8      	b.n	8001c7c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x34>
 8001c8a:	bf00      	nop
 8001c8c:	4002b000 	.word	0x4002b000
 8001c90:	00010009 	.word	0x00010009
 8001c94:	00020001 	.word	0x00020001
 8001c98:	00030001 	.word	0x00030001

08001c9c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001c9c:	2001      	movs	r0, #1
 8001c9e:	4770      	bx	lr

08001ca0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001ca0:	200c      	movs	r0, #12
 8001ca2:	4770      	bx	lr

08001ca4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001ca4:	230c      	movs	r3, #12
 8001ca6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001caa:	3008      	adds	r0, #8
 8001cac:	4770      	bx	lr

08001cae <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001cae:	230c      	movs	r3, #12
 8001cb0:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001cb4:	3008      	adds	r0, #8
 8001cb6:	4770      	bx	lr

08001cb8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001cb8:	2001      	movs	r0, #1
 8001cba:	4770      	bx	lr

08001cbc <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001cbc:	f242 20b4 	movw	r0, #8884	@ 0x22b4
 8001cc0:	4770      	bx	lr

08001cc2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001cc2:	f242 23b4 	movw	r3, #8884	@ 0x22b4
 8001cc6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001cca:	3008      	adds	r0, #8
 8001ccc:	4770      	bx	lr

08001cce <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001cce:	f242 23b4 	movw	r3, #8884	@ 0x22b4
 8001cd2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001cd6:	3008      	adds	r0, #8
 8001cd8:	4770      	bx	lr

08001cda <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001cda:	2001      	movs	r0, #1
 8001cdc:	4770      	bx	lr

08001cde <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001cde:	2010      	movs	r0, #16
 8001ce0:	4770      	bx	lr

08001ce2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001ce2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001ce6:	3008      	adds	r0, #8
 8001ce8:	4770      	bx	lr

08001cea <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001cea:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001cee:	3008      	adds	r0, #8
 8001cf0:	4770      	bx	lr

08001cf2 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainScreenNoTransition();
 8001cf2:	4608      	mov	r0, r1
 8001cf4:	f000 bc58 	b.w	80025a8 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>

08001cf8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001cf8:	4b03      	ldr	r3, [pc, #12]	@ (8001d08 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001cfa:	b510      	push	{r4, lr}
 8001cfc:	4604      	mov	r4, r0
 8001cfe:	6003      	str	r3, [r0, #0]
 8001d00:	f008 f8ff 	bl	8009f02 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001d04:	4620      	mov	r0, r4
 8001d06:	bd10      	pop	{r4, pc}
 8001d08:	08023b20 	.word	0x08023b20

08001d0c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001d0c:	b510      	push	{r4, lr}
 8001d0e:	4604      	mov	r4, r0
 8001d10:	f7ff fff2 	bl	8001cf8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d14:	2114      	movs	r1, #20
 8001d16:	4620      	mov	r0, r4
 8001d18:	f01f fdf8 	bl	802190c <_ZdlPvj>
 8001d1c:	4620      	mov	r0, r4
 8001d1e:	bd10      	pop	{r4, pc}

08001d20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001d20:	4b03      	ldr	r3, [pc, #12]	@ (8001d30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001d22:	b510      	push	{r4, lr}
 8001d24:	4604      	mov	r4, r0
 8001d26:	6003      	str	r3, [r0, #0]
 8001d28:	f008 f8eb 	bl	8009f02 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001d2c:	4620      	mov	r0, r4
 8001d2e:	bd10      	pop	{r4, pc}
 8001d30:	08023aec 	.word	0x08023aec

08001d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001d34:	b510      	push	{r4, lr}
 8001d36:	4604      	mov	r4, r0
 8001d38:	f7ff fff2 	bl	8001d20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d3c:	f242 21bc 	movw	r1, #8892	@ 0x22bc
 8001d40:	4620      	mov	r0, r4
 8001d42:	f01f fde3 	bl	802190c <_ZdlPvj>
 8001d46:	4620      	mov	r0, r4
 8001d48:	bd10      	pop	{r4, pc}
	...

08001d4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001d4c:	4b03      	ldr	r3, [pc, #12]	@ (8001d5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001d4e:	b510      	push	{r4, lr}
 8001d50:	4604      	mov	r4, r0
 8001d52:	6003      	str	r3, [r0, #0]
 8001d54:	f008 f8d5 	bl	8009f02 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001d58:	4620      	mov	r0, r4
 8001d5a:	bd10      	pop	{r4, pc}
 8001d5c:	08023ab8 	.word	0x08023ab8

08001d60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001d60:	b510      	push	{r4, lr}
 8001d62:	4604      	mov	r4, r0
 8001d64:	f7ff fff2 	bl	8001d4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d68:	2118      	movs	r1, #24
 8001d6a:	4620      	mov	r0, r4
 8001d6c:	f01f fdce 	bl	802190c <_ZdlPvj>
 8001d70:	4620      	mov	r0, r4
 8001d72:	bd10      	pop	{r4, pc}

08001d74 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001d74:	4b09      	ldr	r3, [pc, #36]	@ (8001d9c <_ZN12FrontendHeapD1Ev+0x28>)
 8001d76:	b510      	push	{r4, lr}
 8001d78:	4604      	mov	r4, r0
 8001d7a:	6003      	str	r3, [r0, #0]
 8001d7c:	f500 500b 	add.w	r0, r0, #8896	@ 0x22c0
 8001d80:	3028      	adds	r0, #40	@ 0x28
 8001d82:	f7ff ffb9 	bl	8001cf8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d86:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001d8a:	f7ff ffc9 	bl	8001d20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d8e:	f104 0014 	add.w	r0, r4, #20
 8001d92:	f7ff ffdb 	bl	8001d4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d96:	4620      	mov	r0, r4
 8001d98:	bd10      	pop	{r4, pc}
 8001d9a:	bf00      	nop
 8001d9c:	08023b54 	.word	0x08023b54

08001da0 <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001da0:	b508      	push	{r3, lr}
 8001da2:	4802      	ldr	r0, [pc, #8]	@ (8001dac <__tcf_0+0xc>)
 8001da4:	f7ff ffe6 	bl	8001d74 <_ZN12FrontendHeapD1Ev>
 8001da8:	bd08      	pop	{r3, pc}
 8001daa:	bf00      	nop
 8001dac:	200013f4 	.word	0x200013f4

08001db0 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001db0:	b510      	push	{r4, lr}
 8001db2:	4604      	mov	r4, r0
 8001db4:	f7ff ffde 	bl	8001d74 <_ZN12FrontendHeapD1Ev>
 8001db8:	f242 415c 	movw	r1, #9308	@ 0x245c
 8001dbc:	4620      	mov	r0, r4
 8001dbe:	f01f fda5 	bl	802190c <_ZdlPvj>
 8001dc2:	4620      	mov	r0, r4
 8001dc4:	bd10      	pop	{r4, pc}
	...

08001dc8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
 8001dc8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001dcc:	f000 f9c0 	bl	8002150 <_ZN14BitmapDatabase11getInstanceEv>
 8001dd0:	2400      	movs	r4, #0
 8001dd2:	4605      	mov	r5, r0
 8001dd4:	f000 f9c0 	bl	8002158 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001dd8:	4623      	mov	r3, r4
 8001dda:	4601      	mov	r1, r0
 8001ddc:	4622      	mov	r2, r4
 8001dde:	4628      	mov	r0, r5
 8001de0:	9400      	str	r4, [sp, #0]
 8001de2:	f011 fe1b 	bl	8013a1c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001de6:	4b25      	ldr	r3, [pc, #148]	@ (8001e7c <touchgfx_init+0xb4>)
 8001de8:	4a25      	ldr	r2, [pc, #148]	@ (8001e80 <touchgfx_init+0xb8>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001dea:	4620      	mov	r0, r4
        static FrontendHeap instance;
 8001dec:	4d25      	ldr	r5, [pc, #148]	@ (8001e84 <touchgfx_init+0xbc>)
 8001dee:	601a      	str	r2, [r3, #0]
 8001df0:	f001 fda8 	bl	8003944 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001df4:	4824      	ldr	r0, [pc, #144]	@ (8001e88 <touchgfx_init+0xc0>)
 8001df6:	f011 fd79 	bl	80138ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001dfa:	682b      	ldr	r3, [r5, #0]
 8001dfc:	f3bf 8f5b 	dmb	ish
 8001e00:	07db      	lsls	r3, r3, #31
 8001e02:	d435      	bmi.n	8001e70 <touchgfx_init+0xa8>
 8001e04:	4628      	mov	r0, r5
 8001e06:	f01f fd83 	bl	8021910 <__cxa_guard_acquire>
 8001e0a:	b388      	cbz	r0, 8001e70 <touchgfx_init+0xa8>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001e0c:	4c1f      	ldr	r4, [pc, #124]	@ (8001e8c <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
        app(model, *this)
 8001e0e:	4b20      	ldr	r3, [pc, #128]	@ (8001e90 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001e10:	f504 560c 	add.w	r6, r4, #8960	@ 0x2300
        : presenterStorage(pres),
 8001e14:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8001e18:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 8001e1c:	4f1d      	ldr	r7, [pc, #116]	@ (8001e94 <touchgfx_init+0xcc>)
 8001e1e:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 8001e20:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001e22:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001e26:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001e28:	6126      	str	r6, [r4, #16]
 8001e2a:	f008 f86b 	bl	8009f04 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001e2e:	4b1a      	ldr	r3, [pc, #104]	@ (8001e98 <touchgfx_init+0xd0>)
 8001e30:	4640      	mov	r0, r8
 8001e32:	6163      	str	r3, [r4, #20]
 8001e34:	f008 f866 	bl	8009f04 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001e38:	4b18      	ldr	r3, [pc, #96]	@ (8001e9c <touchgfx_init+0xd4>)
 8001e3a:	4638      	mov	r0, r7
 8001e3c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001e3e:	f008 f861 	bl	8009f04 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001e42:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 8001e46:	4a16      	ldr	r2, [pc, #88]	@ (8001ea0 <touchgfx_init+0xd8>)
 8001e48:	f503 703f 	add.w	r0, r3, #764	@ 0x2fc
 8001e4c:	f8c3 22e8 	str.w	r2, [r3, #744]	@ 0x2e8
 8001e50:	f002 f854 	bl	8003efc <_ZN5ModelC1Ev>
 8001e54:	4622      	mov	r2, r4
 8001e56:	1f31      	subs	r1, r6, #4
 8001e58:	4630      	mov	r0, r6
 8001e5a:	f001 ff5b 	bl	8003d14 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001e5e:	4630      	mov	r0, r6
 8001e60:	f000 fba2 	bl	80025a8 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
        static FrontendHeap instance;
 8001e64:	480f      	ldr	r0, [pc, #60]	@ (8001ea4 <touchgfx_init+0xdc>)
 8001e66:	f020 fad9 	bl	802241c <atexit>
 8001e6a:	4628      	mov	r0, r5
 8001e6c:	f01f fd5c 	bl	8021928 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001e70:	480d      	ldr	r0, [pc, #52]	@ (8001ea8 <touchgfx_init+0xe0>)
}
 8001e72:	b002      	add	sp, #8
 8001e74:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001e78:	f7ff bc00 	b.w	800167c <_ZN11TouchGFXHAL10initializeEv>
 8001e7c:	20016cec 	.word	0x20016cec
 8001e80:	200005c0 	.word	0x200005c0
 8001e84:	200013f0 	.word	0x200013f0
 8001e88:	20000008 	.word	0x20000008
 8001e8c:	200013f4 	.word	0x200013f4
 8001e90:	08023b54 	.word	0x08023b54
 8001e94:	200036dc 	.word	0x200036dc
 8001e98:	08023ab8 	.word	0x08023ab8
 8001e9c:	08023aec 	.word	0x08023aec
 8001ea0:	08023b20 	.word	0x08023b20
 8001ea4:	08001da1 	.word	0x08001da1
 8001ea8:	20000544 	.word	0x20000544

08001eac <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001eac:	4770      	bx	lr
	...

08001eb0 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001eb0:	4801      	ldr	r0, [pc, #4]	@ (8001eb8 <touchgfx_taskEntry+0x8>)
 8001eb2:	f008 bdf4 	b.w	800aa9e <_ZN8touchgfx3HAL9taskEntryEv>
 8001eb6:	bf00      	nop
 8001eb8:	20000544 	.word	0x20000544

08001ebc <_GLOBAL__sub_I_touchgfx_init>:
}
 8001ebc:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001ebe:	4e22      	ldr	r6, [pc, #136]	@ (8001f48 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001ec0:	4b22      	ldr	r3, [pc, #136]	@ (8001f4c <_GLOBAL__sub_I_touchgfx_init+0x90>)
 8001ec2:	4c23      	ldr	r4, [pc, #140]	@ (8001f50 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001ec4:	4630      	mov	r0, r6
static LCD16bpp display;
 8001ec6:	4d23      	ldr	r5, [pc, #140]	@ (8001f54 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001ec8:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001eca:	f7ff fe99 	bl	8001c00 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001ece:	4628      	mov	r0, r5
 8001ed0:	f016 f87e 	bl	8017fd0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8001ed4:	4b20      	ldr	r3, [pc, #128]	@ (8001f58 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
          mcuInstrumentation(0),
 8001ed6:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001ed8:	f44f 7180 	mov.w	r1, #256	@ 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001edc:	481f      	ldr	r0, [pc, #124]	@ (8001f5c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001ede:	861a      	strh	r2, [r3, #48]	@ 0x30
          useAuxiliaryLCD(false),
 8001ee0:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
 8001ee4:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 8001ee6:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 8001eea:	675a      	str	r2, [r3, #116]	@ 0x74
          touchController(touchCtrl),
 8001eec:	60dc      	str	r4, [r3, #12]
          auxiliaryLCD(0),
 8001eee:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001ef2:	491b      	ldr	r1, [pc, #108]	@ (8001f60 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          vSyncCompensationEnabled(false),
 8001ef4:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001ef8:	491a      	ldr	r1, [pc, #104]	@ (8001f64 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001efa:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 8001efc:	491a      	ldr	r1, [pc, #104]	@ (8001f68 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8001efe:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001f00:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8001f04:	8001      	strh	r1, [r0, #0]
 8001f06:	4819      	ldr	r0, [pc, #100]	@ (8001f6c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 8001f08:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001f0a:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8001f0e:	4818      	ldr	r0, [pc, #96]	@ (8001f70 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          buttonController(0),
 8001f10:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001f14:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001f18:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001f1c:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8001f20:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8001f24:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001f28:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 8001f2c:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lcdRef(display),
 8001f30:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001f34:	8001      	strh	r1, [r0, #0]
 8001f36:	480f      	ldr	r0, [pc, #60]	@ (8001f74 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001f38:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001f3c:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001f3e:	490e      	ldr	r1, [pc, #56]	@ (8001f78 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001f40:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001f42:	4a0e      	ldr	r2, [pc, #56]	@ (8001f7c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001f44:	601a      	str	r2, [r3, #0]
}
 8001f46:	bd70      	pop	{r4, r5, r6, pc}
 8001f48:	2000064c 	.word	0x2000064c
 8001f4c:	080235a8 	.word	0x080235a8
 8001f50:	200013ec 	.word	0x200013ec
 8001f54:	200005c4 	.word	0x200005c4
 8001f58:	20000544 	.word	0x20000544
 8001f5c:	20016c7c 	.word	0x20016c7c
 8001f60:	01000001 	.word	0x01000001
 8001f64:	01010000 	.word	0x01010000
 8001f68:	20016c88 	.word	0x20016c88
 8001f6c:	20016c82 	.word	0x20016c82
 8001f70:	20016c7e 	.word	0x20016c7e
 8001f74:	20016c84 	.word	0x20016c84
 8001f78:	20016c80 	.word	0x20016c80
 8001f7c:	08023734 	.word	0x08023734

08001f80 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001f80:	4801      	ldr	r0, [pc, #4]	@ (8001f88 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001f82:	f7ff bcf5 	b.w	8001970 <_ZN8STM32DMAD1Ev>
 8001f86:	bf00      	nop
 8001f88:	2000064c 	.word	0x2000064c

08001f8c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001f8c:	4b03      	ldr	r3, [pc, #12]	@ (8001f9c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001f8e:	2290      	movs	r2, #144	@ 0x90
 8001f90:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8001f94:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001f98:	4770      	bx	lr
 8001f9a:	bf00      	nop
 8001f9c:	e000e100 	.word	0xe000e100

08001fa0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001fa0:	4a09      	ldr	r2, [pc, #36]	@ (8001fc8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001fa2:	490a      	ldr	r1, [pc, #40]	@ (8001fcc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001fa4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001fa6:	480a      	ldr	r0, [pc, #40]	@ (8001fd0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001fa8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001fac:	3b01      	subs	r3, #1
 8001fae:	b29b      	uxth	r3, r3
 8001fb0:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001fb2:	6911      	ldr	r1, [r2, #16]
 8001fb4:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001fb8:	3901      	subs	r1, #1
 8001fba:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001fbc:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001fbe:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001fc0:	f043 0301 	orr.w	r3, r3, #1
 8001fc4:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001fc6:	4770      	bx	lr
 8001fc8:	40016800 	.word	0x40016800
 8001fcc:	20003852 	.word	0x20003852
 8001fd0:	20003850 	.word	0x20003850

08001fd4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001fd4:	4b01      	ldr	r3, [pc, #4]	@ (8001fdc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001fd6:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8001fda:	4770      	bx	lr
 8001fdc:	40016800 	.word	0x40016800

08001fe0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001fe0:	4b02      	ldr	r3, [pc, #8]	@ (8001fec <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001fe2:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001fe4:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001fe8:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001fea:	4770      	bx	lr
 8001fec:	40016800 	.word	0x40016800

08001ff0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8001ff0:	4a12      	ldr	r2, [pc, #72]	@ (800203c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x4c>)
 8001ff2:	6953      	ldr	r3, [r2, #20]
 8001ff4:	03db      	lsls	r3, r3, #15
{
 8001ff6:	b570      	push	{r4, r5, r6, lr}
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8001ff8:	d51e      	bpl.n	8002038 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8001ffa:	2300      	movs	r3, #0
 8001ffc:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8002000:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 8002004:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002008:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800200c:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8002010:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8002014:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002016:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800201a:	4601      	mov	r1, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800201c:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
 8002020:	3901      	subs	r1, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002022:	f8c2 5274 	str.w	r5, [r2, #628]	@ 0x274
      } while (ways-- != 0U);
 8002026:	d2f9      	bcs.n	800201c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>
    } while(sets-- != 0U);
 8002028:	3b20      	subs	r3, #32
 800202a:	f113 0f20 	cmn.w	r3, #32
 800202e:	d1f2      	bne.n	8002016 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x26>
 8002030:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002034:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
 8002038:	bd70      	pop	{r4, r5, r6, pc}
 800203a:	bf00      	nop
 800203c:	e000ed00 	.word	0xe000ed00

08002040 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002040:	b570      	push	{r4, r5, r6, lr}
 8002042:	4604      	mov	r4, r0
    HAL::initialize();
 8002044:	f008 fd17 	bl	800aa76 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002048:	6823      	ldr	r3, [r4, #0]
 800204a:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 800204c:	f00e fbbc 	bl	80107c8 <_ZN8touchgfx11Application11getInstanceEv>
 8002050:	4601      	mov	r1, r0
 8002052:	4620      	mov	r0, r4
 8002054:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002056:	6823      	ldr	r3, [r4, #0]
 8002058:	4a05      	ldr	r2, [pc, #20]	@ (8002070 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800205a:	4620      	mov	r0, r4
 800205c:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 8002060:	2300      	movs	r3, #0
 8002062:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
 8002066:	46ac      	mov	ip, r5
}
 8002068:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800206c:	4760      	bx	ip
 800206e:	bf00      	nop
 8002070:	c007f800 	.word	0xc007f800

08002074 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002074:	f008 bce6 	b.w	800aa44 <_ZN8touchgfx3HAL10beginFrameEv>

08002078 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002078:	f008 bcf0 	b.w	800aa5c <_ZN8touchgfx3HAL8endFrameEv>

0800207c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
    HAL::flushFrameBuffer(rect);
 800207c:	f008 bcab 	b.w	800a9d6 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002080 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
    return HAL::blockCopy(dest, src, numBytes);
 8002080:	f008 be1b 	b.w	800acba <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002084 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002084:	4b03      	ldr	r3, [pc, #12]	@ (8002094 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8002086:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800208a:	609a      	str	r2, [r3, #8]
 800208c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002090:	609a      	str	r2, [r3, #8]
}
 8002092:	4770      	bx	lr
 8002094:	e000e100 	.word	0xe000e100

08002098 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002098:	4b08      	ldr	r3, [pc, #32]	@ (80020bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800209a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800209e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80020a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80020a6:	f3bf 8f6f 	isb	sy
 80020aa:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80020ae:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80020b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80020b6:	f3bf 8f6f 	isb	sy
}
 80020ba:	4770      	bx	lr
 80020bc:	e000e100 	.word	0xe000e100

080020c0 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80020c0:	b510      	push	{r4, lr}
        return instance;
 80020c2:	4c14      	ldr	r4, [pc, #80]	@ (8002114 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80020c4:	6823      	ldr	r3, [r4, #0]
 80020c6:	b323      	cbz	r3, 8002112 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80020c8:	4b13      	ldr	r3, [pc, #76]	@ (8002118 <HAL_LTDC_LineEventCallback+0x58>)
 80020ca:	4a14      	ldr	r2, [pc, #80]	@ (800211c <HAL_LTDC_LineEventCallback+0x5c>)
 80020cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020ce:	8811      	ldrh	r1, [r2, #0]
 80020d0:	428b      	cmp	r3, r1
 80020d2:	d113      	bne.n	80020fc <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80020d4:	4b12      	ldr	r3, [pc, #72]	@ (8002120 <HAL_LTDC_LineEventCallback+0x60>)
 80020d6:	8819      	ldrh	r1, [r3, #0]
 80020d8:	f003 fbca 	bl	8005870 <HAL_LTDC_ProgramLineEvent>
 80020dc:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80020de:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 80020e2:	3301      	adds	r3, #1
 80020e4:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80020e8:	f7ff fbf2 	bl	80018d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80020ec:	6820      	ldr	r0, [r4, #0]
 80020ee:	f009 fa0f 	bl	800b510 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 80020f2:	2000      	movs	r0, #0

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80020f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80020f8:	f7ff b9f0 	b.w	80014dc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80020fc:	f003 fbb8 	bl	8005870 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002100:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8002102:	6803      	ldr	r3, [r0, #0]
 8002104:	6a1b      	ldr	r3, [r3, #32]
 8002106:	4798      	blx	r3
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002108:	2000      	movs	r0, #0
    }
 800210a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800210e:	f7ff ba15 	b.w	800153c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002112:	bd10      	pop	{r4, pc}
 8002114:	20016c88 	.word	0x20016c88
 8002118:	40016800 	.word	0x40016800
 800211c:	20003852 	.word	0x20003852
 8002120:	20003850 	.word	0x20003850

08002124 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LABELS = 0;             // NotoSans_Regular_12_4bpp
    static const touchgfx::FontId T___SINGLEUSE_JOGG = 1; // verdana_18_4bpp
    static const uint16_t NUMBER_OF_FONTS = 2;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002124:	4770      	bx	lr

08002126 <_ZN23ApplicationFontProviderD0Ev>:
 8002126:	b510      	push	{r4, lr}
 8002128:	4604      	mov	r4, r0
 800212a:	2104      	movs	r1, #4
 800212c:	f01f fbee 	bl	802190c <_ZdlPvj>
 8002130:	4620      	mov	r0, r4
 8002132:	bd10      	pop	{r4, pc}

08002134 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002134:	b508      	push	{r3, lr}
    switch (typography)
 8002136:	b119      	cbz	r1, 8002140 <_ZN23ApplicationFontProvider7getFontEt+0xc>
 8002138:	2901      	cmp	r1, #1
 800213a:	d005      	beq.n	8002148 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800213c:	2000      	movs	r0, #0
        // verdana_18_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
    default:
        return 0;
    }
}
 800213e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002140:	f001 fc4c 	bl	80039dc <_ZN17TypedTextDatabase8getFontsEv>
 8002144:	6800      	ldr	r0, [r0, #0]
 8002146:	e7fa      	b.n	800213e <_ZN23ApplicationFontProvider7getFontEt+0xa>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002148:	f001 fc48 	bl	80039dc <_ZN17TypedTextDatabase8getFontsEv>
 800214c:	6840      	ldr	r0, [r0, #4]
 800214e:	e7f6      	b.n	800213e <_ZN23ApplicationFontProvider7getFontEt+0xa>

08002150 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002150:	4800      	ldr	r0, [pc, #0]	@ (8002154 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002152:	4770      	bx	lr
 8002154:	08023b74 	.word	0x08023b74

08002158 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002158:	2009      	movs	r0, #9
 800215a:	4770      	bx	lr

0800215c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800215c:	b513      	push	{r0, r1, r4, lr}
 800215e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002160:	b151      	cbz	r1, 8002178 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002162:	6803      	ldr	r3, [r0, #0]
 8002164:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
 8002166:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002168:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800216c:	689c      	ldr	r4, [r3, #8]
 800216e:	f10d 0303 	add.w	r3, sp, #3
 8002172:	47a0      	blx	r4
        return glyph;
    }
 8002174:	b002      	add	sp, #8
 8002176:	bd10      	pop	{r4, pc}
            return 0;
 8002178:	4608      	mov	r0, r1
 800217a:	e7fb      	b.n	8002174 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800217c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800217c:	89c0      	ldrh	r0, [r0, #14]
 800217e:	4770      	bx	lr

08002180 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002180:	8a00      	ldrh	r0, [r0, #16]
 8002182:	4770      	bx	lr

08002184 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002184:	88c0      	ldrh	r0, [r0, #6]
 8002186:	4770      	bx	lr

08002188 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002188:	8880      	ldrh	r0, [r0, #4]
 800218a:	4770      	bx	lr

0800218c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800218c:	7a80      	ldrb	r0, [r0, #10]
    }
 800218e:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002192:	4770      	bx	lr

08002194 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002194:	7a80      	ldrb	r0, [r0, #10]
    }
 8002196:	09c0      	lsrs	r0, r0, #7
 8002198:	4770      	bx	lr

0800219a <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 800219a:	2000      	movs	r0, #0
 800219c:	4770      	bx	lr
	...

080021a0 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 80021a0:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80021a8 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 80021a4:	4770      	bx	lr
 80021a6:	bf00      	nop
 80021a8:	00000000 	.word	0x00000000

080021ac <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80021ac:	4770      	bx	lr

080021ae <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80021ae:	b510      	push	{r4, lr}
 80021b0:	4604      	mov	r4, r0
    }
 80021b2:	2108      	movs	r1, #8
 80021b4:	f01f fbaa 	bl	802190c <_ZdlPvj>
 80021b8:	4620      	mov	r0, r4
 80021ba:	bd10      	pop	{r4, pc}

080021bc <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80021bc:	4770      	bx	lr

080021be <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80021be:	4770      	bx	lr

080021c0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80021c0:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 80021c4:	6808      	ldr	r0, [r1, #0]
 80021c6:	6849      	ldr	r1, [r1, #4]
 80021c8:	c303      	stmia	r3!, {r0, r1}
    }
 80021ca:	4770      	bx	lr

080021cc <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80021cc:	4770      	bx	lr

080021ce <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80021ce:	4770      	bx	lr

080021d0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80021d0:	6041      	str	r1, [r0, #4]
    }
 80021d2:	4770      	bx	lr

080021d4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80021d4:	4770      	bx	lr
	...

080021d8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80021d8:	4b06      	ldr	r3, [pc, #24]	@ (80021f4 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80021da:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80021de:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80021e2:	2300      	movs	r3, #0
 80021e4:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80021e8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80021ec:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoMainScreenNoTransition();
    }
 80021f0:	4770      	bx	lr
 80021f2:	bf00      	nop
 80021f4:	080023e5 	.word	0x080023e5

080021f8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80021f8:	2301      	movs	r3, #1
 80021fa:	7203      	strb	r3, [r0, #8]
    }
 80021fc:	4770      	bx	lr

080021fe <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80021fe:	4770      	bx	lr

08002200 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002200:	4770      	bx	lr

08002202 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002202:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002204:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
 8002206:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002208:	68c2      	ldr	r2, [r0, #12]
 800220a:	689b      	ldr	r3, [r3, #8]
 800220c:	1054      	asrs	r4, r2, #1
 800220e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002212:	07d2      	lsls	r2, r2, #31
 8002214:	bf48      	it	mi
 8002216:	590a      	ldrmi	r2, [r1, r4]
    }
 8002218:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800221c:	bf48      	it	mi
 800221e:	58d3      	ldrmi	r3, [r2, r3]
 8002220:	4718      	bx	r3

08002222 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002222:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002224:	6840      	ldr	r0, [r0, #4]
 8002226:	b130      	cbz	r0, 8002236 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002228:	689a      	ldr	r2, [r3, #8]
 800222a:	b91a      	cbnz	r2, 8002234 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 800222c:	68d8      	ldr	r0, [r3, #12]
 800222e:	f000 0001 	and.w	r0, r0, #1
 8002232:	4770      	bx	lr
 8002234:	2001      	movs	r0, #1
    }
 8002236:	4770      	bx	lr

08002238 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002238:	b510      	push	{r4, lr}
 800223a:	4604      	mov	r4, r0
 800223c:	210c      	movs	r1, #12
 800223e:	f01f fb65 	bl	802190c <_ZdlPvj>
 8002242:	4620      	mov	r0, r4
 8002244:	bd10      	pop	{r4, pc}

08002246 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002246:	b510      	push	{r4, lr}
 8002248:	4604      	mov	r4, r0
 800224a:	2110      	movs	r1, #16
 800224c:	f01f fb5e 	bl	802190c <_ZdlPvj>
 8002250:	4620      	mov	r0, r4
 8002252:	bd10      	pop	{r4, pc}

08002254 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002254:	b510      	push	{r4, lr}
 8002256:	4604      	mov	r4, r0
 8002258:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800225c:	f01f fb56 	bl	802190c <_ZdlPvj>
 8002260:	4620      	mov	r0, r4
 8002262:	bd10      	pop	{r4, pc}

08002264 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002264:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002266:	f00e faaf 	bl	80107c8 <_ZN8touchgfx11Application11getInstanceEv>
 800226a:	6803      	ldr	r3, [r0, #0]
    }
 800226c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002270:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002272:	4718      	bx	r3

08002274 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002274:	b510      	push	{r4, lr}
 8002276:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002278:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 800227c:	b158      	cbz	r0, 8002296 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800227e:	6803      	ldr	r3, [r0, #0]
 8002280:	68db      	ldr	r3, [r3, #12]
 8002282:	4798      	blx	r3
 8002284:	b138      	cbz	r0, 8002296 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002286:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 800228a:	6803      	ldr	r3, [r0, #0]
 800228c:	689b      	ldr	r3, [r3, #8]
 800228e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002290:	2300      	movs	r3, #0
 8002292:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8002296:	bd10      	pop	{r4, pc}

08002298 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotosensorScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotosensorScreenNoTransitionImpl()
{
 8002298:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<sensorView, sensorPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800229c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80022a0:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022a2:	68b0      	ldr	r0, [r6, #8]
 80022a4:	6803      	ldr	r3, [r0, #0]
 80022a6:	6a1b      	ldr	r3, [r3, #32]
 80022a8:	4798      	blx	r3
 80022aa:	f5b0 7fcc 	cmp.w	r0, #408	@ 0x198
 80022ae:	d205      	bcs.n	80022bc <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x24>
 80022b0:	4b44      	ldr	r3, [pc, #272]	@ (80023c4 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x12c>)
 80022b2:	21a3      	movs	r1, #163	@ 0xa3
 80022b4:	4a44      	ldr	r2, [pc, #272]	@ (80023c8 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x130>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80022b6:	4845      	ldr	r0, [pc, #276]	@ (80023cc <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x134>)
 80022b8:	f020 f892 	bl	80223e0 <__assert_func>
 80022bc:	6870      	ldr	r0, [r6, #4]
 80022be:	6803      	ldr	r3, [r0, #0]
 80022c0:	6a1b      	ldr	r3, [r3, #32]
 80022c2:	4798      	blx	r3
 80022c4:	280f      	cmp	r0, #15
 80022c6:	d803      	bhi.n	80022d0 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x38>
 80022c8:	4b41      	ldr	r3, [pc, #260]	@ (80023d0 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x138>)
 80022ca:	21a4      	movs	r1, #164	@ 0xa4
 80022cc:	4a3e      	ldr	r2, [pc, #248]	@ (80023c8 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x130>)
 80022ce:	e7f2      	b.n	80022b6 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80022d0:	68f0      	ldr	r0, [r6, #12]
 80022d2:	6803      	ldr	r3, [r0, #0]
 80022d4:	6a1b      	ldr	r3, [r3, #32]
 80022d6:	4798      	blx	r3
 80022d8:	280b      	cmp	r0, #11
 80022da:	d803      	bhi.n	80022e4 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x4c>
 80022dc:	4b3d      	ldr	r3, [pc, #244]	@ (80023d4 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x13c>)
 80022de:	21a5      	movs	r1, #165	@ 0xa5
 80022e0:	4a39      	ldr	r2, [pc, #228]	@ (80023c8 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x130>)
 80022e2:	e7e8      	b.n	80022b6 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80022e4:	f8df 90f4 	ldr.w	r9, [pc, #244]	@ 80023dc <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 80022e8:	f00e fa6e 	bl	80107c8 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80022ec:	3004      	adds	r0, #4
 80022ee:	f00e fa90 	bl	8010812 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 80022f2:	f8d9 0000 	ldr.w	r0, [r9]
 80022f6:	b110      	cbz	r0, 80022fe <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80022f8:	6803      	ldr	r3, [r0, #0]
 80022fa:	68db      	ldr	r3, [r3, #12]
 80022fc:	4798      	blx	r3
    if (*currentTrans)
 80022fe:	f8d9 0000 	ldr.w	r0, [r9]
 8002302:	b110      	cbz	r0, 800230a <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002304:	6803      	ldr	r3, [r0, #0]
 8002306:	681b      	ldr	r3, [r3, #0]
 8002308:	4798      	blx	r3
    if (*currentScreen)
 800230a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80023e0 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x148>
 800230e:	f8d8 0000 	ldr.w	r0, [r8]
 8002312:	b110      	cbz	r0, 800231a <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002314:	6803      	ldr	r3, [r0, #0]
 8002316:	695b      	ldr	r3, [r3, #20]
 8002318:	4798      	blx	r3
    if (*currentPresenter)
 800231a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800231e:	b110      	cbz	r0, 8002326 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002320:	6803      	ldr	r3, [r0, #0]
 8002322:	685b      	ldr	r3, [r3, #4]
 8002324:	4798      	blx	r3
    if (*currentScreen)
 8002326:	f8d8 0000 	ldr.w	r0, [r8]
 800232a:	b110      	cbz	r0, 8002332 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 800232c:	6803      	ldr	r3, [r0, #0]
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	4798      	blx	r3
    if (*currentPresenter)
 8002332:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002336:	b110      	cbz	r0, 800233e <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002338:	6803      	ldr	r3, [r0, #0]
 800233a:	689b      	ldr	r3, [r3, #8]
 800233c:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800233e:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002340:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
 8002342:	f04f 0b00 	mov.w	fp, #0
 8002346:	6803      	ldr	r3, [r0, #0]
 8002348:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800234a:	4798      	blx	r3
 800234c:	4b22      	ldr	r3, [pc, #136]	@ (80023d8 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x140>)
 800234e:	4604      	mov	r4, r0
 8002350:	f8c0 b004 	str.w	fp, [r0, #4]
 8002354:	f880 b008 	strb.w	fp, [r0, #8]
 8002358:	4659      	mov	r1, fp
 800235a:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800235c:	68b0      	ldr	r0, [r6, #8]
 800235e:	6803      	ldr	r3, [r0, #0]
 8002360:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002362:	4798      	blx	r3
 8002364:	4605      	mov	r5, r0
 8002366:	f001 fe29 	bl	8003fbc <_ZN10sensorViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800236a:	6870      	ldr	r0, [r6, #4]
 800236c:	4659      	mov	r1, fp
 800236e:	6803      	ldr	r3, [r0, #0]
 8002370:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002372:	4798      	blx	r3
 8002374:	4606      	mov	r6, r0
 8002376:	4629      	mov	r1, r5
 8002378:	f001 fdf6 	bl	8003f68 <_ZN15sensorPresenterC1ER10sensorView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 800237c:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800237e:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 8002382:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 8002384:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002388:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800238c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002390:	682b      	ldr	r3, [r5, #0]

    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002392:	f8c6 a008 	str.w	sl, [r6, #8]
 8002396:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002398:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800239a:	4798      	blx	r3
    newPresenter->activate();
 800239c:	6833      	ldr	r3, [r6, #0]
 800239e:	4630      	mov	r0, r6
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80023a4:	4621      	mov	r1, r4
 80023a6:	4628      	mov	r0, r5
 80023a8:	f00f ffa8 	bl	80122fc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80023ac:	6823      	ldr	r3, [r4, #0]
 80023ae:	4620      	mov	r0, r4
 80023b0:	691b      	ldr	r3, [r3, #16]
 80023b2:	4798      	blx	r3
    newTransition->invalidate();
 80023b4:	6823      	ldr	r3, [r4, #0]
 80023b6:	4620      	mov	r0, r4
 80023b8:	695b      	ldr	r3, [r3, #20]
}
 80023ba:	b001      	add	sp, #4
 80023bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023c0:	4718      	bx	r3
 80023c2:	bf00      	nop
 80023c4:	08023c38 	.word	0x08023c38
 80023c8:	08023cc6 	.word	0x08023cc6
 80023cc:	08023d96 	.word	0x08023d96
 80023d0:	08023ddd 	.word	0x08023ddd
 80023d4:	08023e80 	.word	0x08023e80
 80023d8:	08024064 	.word	0x08024064
 80023dc:	20016cd0 	.word	0x20016cd0
 80023e0:	20016ccc 	.word	0x20016ccc

080023e4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:
{
 80023e4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80023e8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80023ec:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80023ee:	68b0      	ldr	r0, [r6, #8]
 80023f0:	6803      	ldr	r3, [r0, #0]
 80023f2:	6a1b      	ldr	r3, [r3, #32]
 80023f4:	4798      	blx	r3
 80023f6:	f242 23b3 	movw	r3, #8883	@ 0x22b3
 80023fa:	4298      	cmp	r0, r3
 80023fc:	d805      	bhi.n	800240a <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x26>
 80023fe:	4b44      	ldr	r3, [pc, #272]	@ (8002510 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
 8002400:	21a3      	movs	r1, #163	@ 0xa3
 8002402:	4a44      	ldr	r2, [pc, #272]	@ (8002514 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002404:	4844      	ldr	r0, [pc, #272]	@ (8002518 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x134>)
 8002406:	f01f ffeb 	bl	80223e0 <__assert_func>
 800240a:	6870      	ldr	r0, [r6, #4]
 800240c:	6803      	ldr	r3, [r0, #0]
 800240e:	6a1b      	ldr	r3, [r3, #32]
 8002410:	4798      	blx	r3
 8002412:	280f      	cmp	r0, #15
 8002414:	d803      	bhi.n	800241e <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x3a>
 8002416:	4b41      	ldr	r3, [pc, #260]	@ (800251c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>)
 8002418:	21a4      	movs	r1, #164	@ 0xa4
 800241a:	4a3e      	ldr	r2, [pc, #248]	@ (8002514 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
 800241c:	e7f2      	b.n	8002404 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800241e:	68f0      	ldr	r0, [r6, #12]
 8002420:	6803      	ldr	r3, [r0, #0]
 8002422:	6a1b      	ldr	r3, [r3, #32]
 8002424:	4798      	blx	r3
 8002426:	280b      	cmp	r0, #11
 8002428:	d803      	bhi.n	8002432 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x4e>
 800242a:	4b3d      	ldr	r3, [pc, #244]	@ (8002520 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x13c>)
 800242c:	21a5      	movs	r1, #165	@ 0xa5
 800242e:	4a39      	ldr	r2, [pc, #228]	@ (8002514 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
 8002430:	e7e8      	b.n	8002404 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x20>
    if (*currentTrans)
 8002432:	f8df 90f4 	ldr.w	r9, [pc, #244]	@ 8002528 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 8002436:	f00e f9c7 	bl	80107c8 <_ZN8touchgfx11Application11getInstanceEv>
 800243a:	3004      	adds	r0, #4
 800243c:	f00e f9e9 	bl	8010812 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 8002440:	f8d9 0000 	ldr.w	r0, [r9]
 8002444:	b110      	cbz	r0, 800244c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002446:	6803      	ldr	r3, [r0, #0]
 8002448:	68db      	ldr	r3, [r3, #12]
 800244a:	4798      	blx	r3
    if (*currentTrans)
 800244c:	f8d9 0000 	ldr.w	r0, [r9]
 8002450:	b110      	cbz	r0, 8002458 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002452:	6803      	ldr	r3, [r0, #0]
 8002454:	681b      	ldr	r3, [r3, #0]
 8002456:	4798      	blx	r3
    if (*currentScreen)
 8002458:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 800252c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x148>
 800245c:	f8d8 0000 	ldr.w	r0, [r8]
 8002460:	b110      	cbz	r0, 8002468 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002462:	6803      	ldr	r3, [r0, #0]
 8002464:	695b      	ldr	r3, [r3, #20]
 8002466:	4798      	blx	r3
    if (*currentPresenter)
 8002468:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800246c:	b110      	cbz	r0, 8002474 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800246e:	6803      	ldr	r3, [r0, #0]
 8002470:	685b      	ldr	r3, [r3, #4]
 8002472:	4798      	blx	r3
    if (*currentScreen)
 8002474:	f8d8 0000 	ldr.w	r0, [r8]
 8002478:	b110      	cbz	r0, 8002480 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800247a:	6803      	ldr	r3, [r0, #0]
 800247c:	681b      	ldr	r3, [r3, #0]
 800247e:	4798      	blx	r3
    if (*currentPresenter)
 8002480:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002484:	b110      	cbz	r0, 800248c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002486:	6803      	ldr	r3, [r0, #0]
 8002488:	689b      	ldr	r3, [r3, #8]
 800248a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800248c:	68f0      	ldr	r0, [r6, #12]
 800248e:	2100      	movs	r1, #0
 8002490:	f04f 0b00 	mov.w	fp, #0
 8002494:	6803      	ldr	r3, [r0, #0]
 8002496:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002498:	4798      	blx	r3
 800249a:	4b22      	ldr	r3, [pc, #136]	@ (8002524 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x140>)
 800249c:	4604      	mov	r4, r0
 800249e:	f8c0 b004 	str.w	fp, [r0, #4]
 80024a2:	f880 b008 	strb.w	fp, [r0, #8]
 80024a6:	4659      	mov	r1, fp
 80024a8:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80024aa:	68b0      	ldr	r0, [r6, #8]
 80024ac:	6803      	ldr	r3, [r0, #0]
 80024ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80024b0:	4798      	blx	r3
 80024b2:	4605      	mov	r5, r0
 80024b4:	f001 fcd4 	bl	8003e60 <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80024b8:	6870      	ldr	r0, [r6, #4]
 80024ba:	4659      	mov	r1, fp
 80024bc:	6803      	ldr	r3, [r0, #0]
 80024be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80024c0:	4798      	blx	r3
 80024c2:	4606      	mov	r6, r0
 80024c4:	4629      	mov	r1, r5
 80024c6:	f001 fc41 	bl	8003d4c <_ZN13MainPresenterC1ER8MainView>
    model->bind(newPresenter);
 80024ca:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80024cc:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 80024d0:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 80024d2:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80024d6:	f8c8 5000 	str.w	r5, [r8]
 80024da:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80024de:	682b      	ldr	r3, [r5, #0]
 80024e0:	f8c6 a008 	str.w	sl, [r6, #8]
 80024e4:	68db      	ldr	r3, [r3, #12]
 80024e6:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80024e8:	4798      	blx	r3
    newPresenter->activate();
 80024ea:	6833      	ldr	r3, [r6, #0]
 80024ec:	4630      	mov	r0, r6
 80024ee:	681b      	ldr	r3, [r3, #0]
 80024f0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80024f2:	4621      	mov	r1, r4
 80024f4:	4628      	mov	r0, r5
 80024f6:	f00f ff01 	bl	80122fc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80024fa:	6823      	ldr	r3, [r4, #0]
 80024fc:	4620      	mov	r0, r4
 80024fe:	691b      	ldr	r3, [r3, #16]
 8002500:	4798      	blx	r3
    newTransition->invalidate();
 8002502:	6823      	ldr	r3, [r4, #0]
 8002504:	4620      	mov	r0, r4
 8002506:	695b      	ldr	r3, [r3, #20]
}
 8002508:	b001      	add	sp, #4
 800250a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800250e:	4718      	bx	r3
 8002510:	08023c38 	.word	0x08023c38
 8002514:	08023f23 	.word	0x08023f23
 8002518:	08023d96 	.word	0x08023d96
 800251c:	08023ddd 	.word	0x08023ddd
 8002520:	08023e80 	.word	0x08023e80
 8002524:	08024064 	.word	0x08024064
 8002528:	20016cd0 	.word	0x20016cd0
 800252c:	20016ccc 	.word	0x20016ccc

08002530 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002530:	4b04      	ldr	r3, [pc, #16]	@ (8002544 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002538:	b10a      	cbz	r2, 800253e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800253a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800253c:	b900      	cbnz	r0, 8002540 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800253e:	6898      	ldr	r0, [r3, #8]
    }
 8002540:	4770      	bx	lr
 8002542:	bf00      	nop
 8002544:	20016c88 	.word	0x20016c88

08002548 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002548:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800254a:	4604      	mov	r4, r0
 800254c:	4617      	mov	r7, r2
 800254e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002550:	f00e fa00 	bl	8010954 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002554:	4b10      	ldr	r3, [pc, #64]	@ (8002598 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
 8002556:	2500      	movs	r5, #0
        instance = this;
 8002558:	601c      	str	r4, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800255a:	4629      	mov	r1, r5
      model(m)
 800255c:	4b0f      	ldr	r3, [pc, #60]	@ (800259c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800255e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002560:	4b0f      	ldr	r3, [pc, #60]	@ (80025a0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002562:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 8002566:	4b0f      	ldr	r3, [pc, #60]	@ (80025a4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002568:	6818      	ldr	r0, [r3, #0]
 800256a:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800256e:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 8002570:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
 8002574:	689b      	ldr	r3, [r3, #8]
      model(m)
 8002576:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800257a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800257c:	4628      	mov	r0, r5
 800257e:	f001 f9e1 	bl	8003944 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002582:	f7ff ffd5 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 8002586:	f017 fb54 	bl	8019c32 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800258a:	f7ff ffd1 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800258e:	f017 fbcb 	bl	8019d28 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8002592:	4620      	mov	r0, r4
 8002594:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002596:	bf00      	nop
 8002598:	20016cdc 	.word	0x20016cdc
 800259c:	08024010 	.word	0x08024010
 80025a0:	08023ff8 	.word	0x08023ff8
 80025a4:	20016c88 	.word	0x20016c88

080025a8 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80025a8:	4b06      	ldr	r3, [pc, #24]	@ (80025c4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x1c>)
 80025aa:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80025ae:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80025b2:	2300      	movs	r3, #0
 80025b4:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80025b8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80025bc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80025c0:	4770      	bx	lr
 80025c2:	bf00      	nop
 80025c4:	080023e5 	.word	0x080023e5

080025c8 <_ZN23FrontendApplicationBase28gotosensorScreenNoTransitionEv>:
 80025c8:	4b06      	ldr	r3, [pc, #24]	@ (80025e4 <_ZN23FrontendApplicationBase28gotosensorScreenNoTransitionEv+0x1c>)
 80025ca:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80025ce:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80025d2:	2300      	movs	r3, #0
 80025d4:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80025d8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80025dc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80025e0:	4770      	bx	lr
 80025e2:	bf00      	nop
 80025e4:	08002299 	.word	0x08002299

080025e8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80025e8:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 80025ea:	4770      	bx	lr

080025ec <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80025ec:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80025ee:	4770      	bx	lr

080025f0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80025f0:	4770      	bx	lr

080025f2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80025f2:	888b      	ldrh	r3, [r1, #4]
 80025f4:	69c0      	ldr	r0, [r0, #28]
 80025f6:	0adb      	lsrs	r3, r3, #11
 80025f8:	680a      	ldr	r2, [r1, #0]
 80025fa:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80025fe:	4410      	add	r0, r2
 8002600:	4770      	bx	lr

08002602 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002602:	b510      	push	{r4, lr}
 8002604:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8002606:	b1ba      	cbz	r2, 8002638 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002608:	7b10      	ldrb	r0, [r2, #12]
 800260a:	b168      	cbz	r0, 8002628 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800260c:	7b53      	ldrb	r3, [r2, #13]
 800260e:	7ad2      	ldrb	r2, [r2, #11]
 8002610:	021b      	lsls	r3, r3, #8
 8002612:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002616:	431a      	orrs	r2, r3
 8002618:	6a23      	ldr	r3, [r4, #32]
 800261a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 800261e:	881a      	ldrh	r2, [r3, #0]
 8002620:	428a      	cmp	r2, r1
 8002622:	d102      	bne.n	800262a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002624:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8002628:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800262a:	d805      	bhi.n	8002638 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800262c:	3801      	subs	r0, #1
 800262e:	3304      	adds	r3, #4
 8002630:	b280      	uxth	r0, r0
 8002632:	2800      	cmp	r0, #0
 8002634:	d1f3      	bne.n	800261e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002636:	e7f7      	b.n	8002628 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002638:	2000      	movs	r0, #0
 800263a:	e7f5      	b.n	8002628 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800263c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800263c:	b510      	push	{r4, lr}
 800263e:	4604      	mov	r4, r0
 8002640:	212c      	movs	r1, #44	@ 0x2c
 8002642:	f01f f963 	bl	802190c <_ZdlPvj>
 8002646:	4620      	mov	r0, r4
 8002648:	bd10      	pop	{r4, pc}
	...

0800264c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800264c:	b530      	push	{r4, r5, lr}
 800264e:	b08b      	sub	sp, #44	@ 0x2c
 8002650:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002652:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8002656:	9508      	str	r5, [sp, #32]
 8002658:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 800265c:	9507      	str	r5, [sp, #28]
 800265e:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8002662:	9506      	str	r5, [sp, #24]
 8002664:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8002668:	9505      	str	r5, [sp, #20]
 800266a:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800266e:	9504      	str	r5, [sp, #16]
 8002670:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8002674:	9503      	str	r5, [sp, #12]
 8002676:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 800267a:	9502      	str	r5, [sp, #8]
 800267c:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8002680:	9501      	str	r5, [sp, #4]
 8002682:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8002686:	9500      	str	r5, [sp, #0]
 8002688:	f00f f9c4 	bl	8011a14 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800268c:	4b06      	ldr	r3, [pc, #24]	@ (80026a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
}
 800268e:	4620      	mov	r0, r4
      arabicTable(formsTable)
 8002690:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002692:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002694:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002696:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002698:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 800269a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800269c:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 800269e:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80026a0:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80026a2:	b00b      	add	sp, #44	@ 0x2c
 80026a4:	bd30      	pop	{r4, r5, pc}
 80026a6:	bf00      	nop
 80026a8:	08024088 	.word	0x08024088

080026ac <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80026ac:	2000      	movs	r0, #0
 80026ae:	4770      	bx	lr

080026b0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80026b0:	8081      	strh	r1, [r0, #4]
    }
 80026b2:	4770      	bx	lr

080026b4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80026b4:	80c1      	strh	r1, [r0, #6]
    }
 80026b6:	4770      	bx	lr

080026b8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80026b8:	8101      	strh	r1, [r0, #8]
    }
 80026ba:	4770      	bx	lr

080026bc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80026bc:	8141      	strh	r1, [r0, #10]
    }
 80026be:	4770      	bx	lr

080026c0 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80026c0:	4770      	bx	lr

080026c2 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80026c2:	4770      	bx	lr

080026c4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80026c4:	4770      	bx	lr

080026c6 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80026c6:	4770      	bx	lr

080026c8 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80026c8:	4770      	bx	lr

080026ca <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80026ca:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80026cc:	88c4      	ldrh	r4, [r0, #6]
 80026ce:	6803      	ldr	r3, [r0, #0]
 80026d0:	1b12      	subs	r2, r2, r4
 80026d2:	8884      	ldrh	r4, [r0, #4]
 80026d4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80026d6:	1b09      	subs	r1, r1, r4
 80026d8:	b212      	sxth	r2, r2
    }
 80026da:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80026de:	b209      	sxth	r1, r1
 80026e0:	4718      	bx	r3

080026e2 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80026e2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80026e6:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80026e8:	f04f 33ff 	mov.w	r3, #4294967295
 80026ec:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80026ee:	6813      	ldr	r3, [r2, #0]
 80026f0:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80026f2:	6010      	str	r0, [r2, #0]
    }
 80026f4:	4770      	bx	lr

080026f6 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80026f6:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80026f8:	4770      	bx	lr

080026fa <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80026fa:	4770      	bx	lr

080026fc <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80026fc:	4770      	bx	lr

080026fe <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80026fe:	4770      	bx	lr

08002700 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002700:	4770      	bx	lr

08002702 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002702:	4770      	bx	lr

08002704 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002704:	2000      	movs	r0, #0
 8002706:	4770      	bx	lr

08002708 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8002708:	888b      	ldrh	r3, [r1, #4]
 800270a:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800270c:	2001      	movs	r0, #1
 800270e:	4770      	bx	lr

08002710 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002710:	4770      	bx	lr

08002712 <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002712:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
 8002716:	4770      	bx	lr

08002718 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 8002718:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 800271a:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 800271c:	6b04      	ldr	r4, [r0, #48]	@ 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 800271e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8002722:	4362      	muls	r2, r4
 8002724:	4361      	muls	r1, r4
    }
 8002726:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 800272a:	4718      	bx	r3

0800272c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 800272c:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8002730:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002732:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    virtual void setGraphRangeX(float min, float max)
 8002736:	b410      	push	{r4}
        const float fs = f * (float)scale;
 8002738:	ee20 0a27 	vmul.f32	s0, s0, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800273c:	f8d3 40a4 	ldr.w	r4, [r3, #164]	@ 0xa4
        if (fs >= 0)
 8002740:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002748:	db1a      	blt.n	8002780 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x54>
        {
            return (int)(fs + 0.5f);
 800274a:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800274e:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002752:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8002756:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 800275a:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 800275e:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8002762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002766:	db1e      	blt.n	80027a6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x7a>
            return (int)(fs + 0.5f);
 8002768:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800276c:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8002770:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8002774:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8002778:	4623      	mov	r3, r4
    }
 800277a:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800277e:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002780:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8002784:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8002788:	ee17 3a10 	vmov	r3, s14
 800278c:	3b01      	subs	r3, #1
 800278e:	ee30 0a66 	vsub.f32	s0, s0, s13
 8002792:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 8002796:	ee30 0a26 	vadd.f32	s0, s0, s13
 800279a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800279e:	ee10 1a10 	vmov	r1, s0
 80027a2:	4419      	add	r1, r3
 80027a4:	e7d9      	b.n	800275a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2e>
 80027a6:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80027aa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80027ae:	ee17 3a90 	vmov	r3, s15
 80027b2:	3b01      	subs	r3, #1
 80027b4:	ee70 0ac7 	vsub.f32	s1, s1, s14
 80027b8:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80027bc:	ee70 0a87 	vadd.f32	s1, s1, s14
 80027c0:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 80027c4:	ee10 2a90 	vmov	r2, s1
 80027c8:	441a      	add	r2, r3
 80027ca:	e7d5      	b.n	8002778 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>

080027cc <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 80027cc:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 80027ce:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 80027d0:	6b04      	ldr	r4, [r0, #48]	@ 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 80027d2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80027d6:	4362      	muls	r2, r4
    }
 80027d8:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 80027dc:	4718      	bx	r3

080027de <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 80027de:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 80027e2:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80027e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    virtual void setGraphRangeXAuto(bool showYaxis, float margin)
 80027e8:	b410      	push	{r4}
        const float fs = f * (float)scale;
 80027ea:	ee27 0a80 	vmul.f32	s0, s15, s0
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 80027ee:	f8d3 40b0 	ldr.w	r4, [r3, #176]	@ 0xb0
        if (fs >= 0)
 80027f2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80027f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027fa:	db0b      	blt.n	8002814 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x36>
            return (int)(fs + 0.5f);
 80027fc:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8002800:	ee30 0a27 	vadd.f32	s0, s0, s15
 8002804:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002808:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800280c:	4623      	mov	r3, r4
    }
 800280e:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8002812:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002814:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002818:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800281c:	ee17 3a90 	vmov	r3, s15
 8002820:	3b01      	subs	r3, #1
 8002822:	ee30 0a47 	vsub.f32	s0, s0, s14
 8002826:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800282a:	ee30 0a07 	vadd.f32	s0, s0, s14
 800282e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8002832:	ee10 2a10 	vmov	r2, s0
 8002836:	441a      	add	r2, r3
 8002838:	e7e8      	b.n	800280c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>

0800283a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 800283a:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800283c:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 800283e:	6b44      	ldr	r4, [r0, #52]	@ 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8002840:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8002844:	4362      	muls	r2, r4
 8002846:	4361      	muls	r1, r4
    }
 8002848:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800284c:	4718      	bx	r3

0800284e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 800284e:	edd0 7a0d 	vldr	s15, [r0, #52]	@ 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8002852:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002854:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    virtual void setGraphRangeY(float min, float max)
 8002858:	b410      	push	{r4}
        const float fs = f * (float)scale;
 800285a:	ee20 0a27 	vmul.f32	s0, s0, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800285e:	f8d3 40bc 	ldr.w	r4, [r3, #188]	@ 0xbc
        if (fs >= 0)
 8002862:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002866:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800286a:	db1a      	blt.n	80028a2 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x54>
            return (int)(fs + 0.5f);
 800286c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8002870:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002874:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8002878:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 800287c:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8002880:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8002884:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002888:	db1e      	blt.n	80028c8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x7a>
            return (int)(fs + 0.5f);
 800288a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800288e:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8002892:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8002896:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800289a:	4623      	mov	r3, r4
    }
 800289c:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80028a0:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80028a2:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80028a6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80028aa:	ee17 3a10 	vmov	r3, s14
 80028ae:	3b01      	subs	r3, #1
 80028b0:	ee30 0a66 	vsub.f32	s0, s0, s13
 80028b4:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 80028b8:	ee30 0a26 	vadd.f32	s0, s0, s13
 80028bc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80028c0:	ee10 1a10 	vmov	r1, s0
 80028c4:	4419      	add	r1, r3
 80028c6:	e7d9      	b.n	800287c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2e>
 80028c8:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80028cc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80028d0:	ee17 3a90 	vmov	r3, s15
 80028d4:	3b01      	subs	r3, #1
 80028d6:	ee70 0ac7 	vsub.f32	s1, s1, s14
 80028da:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80028de:	ee70 0a87 	vadd.f32	s1, s1, s14
 80028e2:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 80028e6:	ee10 2a90 	vmov	r2, s1
 80028ea:	441a      	add	r2, r3
 80028ec:	e7d5      	b.n	800289a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>

080028ee <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 80028ee:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 80028f0:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 80028f2:	6b44      	ldr	r4, [r0, #52]	@ 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 80028f4:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 80028f8:	4362      	muls	r2, r4
    }
 80028fa:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 80028fe:	4718      	bx	r3

08002900 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 8002900:	edd0 7a0d 	vldr	s15, [r0, #52]	@ 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8002904:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002906:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    virtual void setGraphRangeYAuto(bool showXaxis, float margin)
 800290a:	b410      	push	{r4}
        const float fs = f * (float)scale;
 800290c:	ee27 0a80 	vmul.f32	s0, s15, s0
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8002910:	f8d3 40c0 	ldr.w	r4, [r3, #192]	@ 0xc0
        if (fs >= 0)
 8002914:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002918:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800291c:	db0b      	blt.n	8002936 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x36>
            return (int)(fs + 0.5f);
 800291e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8002922:	ee30 0a27 	vadd.f32	s0, s0, s15
 8002926:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800292a:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800292e:	4623      	mov	r3, r4
    }
 8002930:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8002934:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002936:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800293a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800293e:	ee17 3a90 	vmov	r3, s15
 8002942:	3b01      	subs	r3, #1
 8002944:	ee30 0a47 	vsub.f32	s0, s0, s14
 8002948:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800294c:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002950:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8002954:	ee10 2a10 	vmov	r2, s0
 8002958:	441a      	add	r2, r3
 800295a:	e7e8      	b.n	800292e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>

0800295c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 800295c:	f8d0 312c 	ldr.w	r3, [r0, #300]	@ 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 8002960:	6b02      	ldr	r2, [r0, #48]	@ 0x30
        if (i >= 0)
 8002962:	2b00      	cmp	r3, #0
 8002964:	db07      	blt.n	8002976 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8002966:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 800296a:	fb90 f0f2 	sdiv	r0, r0, r2
 800296e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002972:	1040      	asrs	r0, r0, #1
 8002974:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002976:	f06f 0101 	mvn.w	r1, #1
 800297a:	fb01 2003 	mla	r0, r1, r3, r2
 800297e:	3801      	subs	r0, #1
 8002980:	fb90 f0f2 	sdiv	r0, r0, r2
 8002984:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002988:	1040      	asrs	r0, r0, #1
 800298a:	4240      	negs	r0, r0
    }
 800298c:	4770      	bx	lr

0800298e <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 800298e:	edd0 7a4b 	vldr	s15, [r0, #300]	@ 0x12c
 8002992:	ed90 0a0c 	vldr	s0, [r0, #48]	@ 0x30
 8002996:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800299a:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 800299e:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80029a2:	4770      	bx	lr

080029a4 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 80029a4:	f8d0 012c 	ldr.w	r0, [r0, #300]	@ 0x12c
 80029a8:	4770      	bx	lr

080029aa <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 80029aa:	f8d0 3130 	ldr.w	r3, [r0, #304]	@ 0x130
        return scaled2int(i, xScale);
 80029ae:	6b02      	ldr	r2, [r0, #48]	@ 0x30
        if (i >= 0)
 80029b0:	2b00      	cmp	r3, #0
 80029b2:	db07      	blt.n	80029c4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80029b4:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 80029b8:	fb90 f0f2 	sdiv	r0, r0, r2
 80029bc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80029c0:	1040      	asrs	r0, r0, #1
 80029c2:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80029c4:	f06f 0101 	mvn.w	r1, #1
 80029c8:	fb01 2003 	mla	r0, r1, r3, r2
 80029cc:	3801      	subs	r0, #1
 80029ce:	fb90 f0f2 	sdiv	r0, r0, r2
 80029d2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80029d6:	1040      	asrs	r0, r0, #1
 80029d8:	4240      	negs	r0, r0
    }
 80029da:	4770      	bx	lr

080029dc <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 80029dc:	edd0 7a4c 	vldr	s15, [r0, #304]	@ 0x130
 80029e0:	ed90 0a0c 	vldr	s0, [r0, #48]	@ 0x30
 80029e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80029e8:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 80029ec:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80029f0:	4770      	bx	lr

080029f2 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 80029f2:	f8d0 0130 	ldr.w	r0, [r0, #304]	@ 0x130
 80029f6:	4770      	bx	lr

080029f8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 80029f8:	f8d0 3134 	ldr.w	r3, [r0, #308]	@ 0x134
        return scaled2int(i, yScale);
 80029fc:	6b42      	ldr	r2, [r0, #52]	@ 0x34
        if (i >= 0)
 80029fe:	2b00      	cmp	r3, #0
 8002a00:	db07      	blt.n	8002a12 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8002a02:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 8002a06:	fb90 f0f2 	sdiv	r0, r0, r2
 8002a0a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002a0e:	1040      	asrs	r0, r0, #1
 8002a10:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002a12:	f06f 0101 	mvn.w	r1, #1
 8002a16:	fb01 2003 	mla	r0, r1, r3, r2
 8002a1a:	3801      	subs	r0, #1
 8002a1c:	fb90 f0f2 	sdiv	r0, r0, r2
 8002a20:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002a24:	1040      	asrs	r0, r0, #1
 8002a26:	4240      	negs	r0, r0
    }
 8002a28:	4770      	bx	lr

08002a2a <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 8002a2a:	edd0 7a4d 	vldr	s15, [r0, #308]	@ 0x134
 8002a2e:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
 8002a32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002a36:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 8002a3a:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8002a3e:	4770      	bx	lr

08002a40 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 8002a40:	f8d0 0134 	ldr.w	r0, [r0, #308]	@ 0x134
 8002a44:	4770      	bx	lr

08002a46 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 8002a46:	f8d0 3138 	ldr.w	r3, [r0, #312]	@ 0x138
        return scaled2int(i, yScale);
 8002a4a:	6b42      	ldr	r2, [r0, #52]	@ 0x34
        if (i >= 0)
 8002a4c:	2b00      	cmp	r3, #0
 8002a4e:	db07      	blt.n	8002a60 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8002a50:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 8002a54:	fb90 f0f2 	sdiv	r0, r0, r2
 8002a58:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002a5c:	1040      	asrs	r0, r0, #1
 8002a5e:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002a60:	f06f 0101 	mvn.w	r1, #1
 8002a64:	fb01 2003 	mla	r0, r1, r3, r2
 8002a68:	3801      	subs	r0, #1
 8002a6a:	fb90 f0f2 	sdiv	r0, r0, r2
 8002a6e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002a72:	1040      	asrs	r0, r0, #1
 8002a74:	4240      	negs	r0, r0
    }
 8002a76:	4770      	bx	lr

08002a78 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 8002a78:	edd0 7a4e 	vldr	s15, [r0, #312]	@ 0x138
 8002a7c:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
 8002a80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002a84:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 8002a88:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8002a8c:	4770      	bx	lr

08002a8e <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 8002a8e:	f8d0 0138 	ldr.w	r0, [r0, #312]	@ 0x138
 8002a92:	4770      	bx	lr

08002a94 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
    {
        setScaleX(scale, updateData);
 8002a94:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 8002a96:	b570      	push	{r4, r5, r6, lr}
 8002a98:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 8002a9a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    virtual void setScale(int scale, bool updateData = false)
 8002a9e:	460d      	mov	r5, r1
 8002aa0:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 8002aa2:	4798      	blx	r3
        setScaleY(scale, updateData);
 8002aa4:	6823      	ldr	r3, [r4, #0]
 8002aa6:	4632      	mov	r2, r6
 8002aa8:	4629      	mov	r1, r5
 8002aaa:	4620      	mov	r0, r4
 8002aac:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
    }
 8002ab0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 8002ab4:	4718      	bx	r3

08002ab6 <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 8002ab6:	6803      	ldr	r3, [r0, #0]
 8002ab8:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002abc:	4718      	bx	r3

08002abe <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 8002abe:	6803      	ldr	r3, [r0, #0]
 8002ac0:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8002ac4:	4718      	bx	r3

08002ac6 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 8002ac6:	6803      	ldr	r3, [r0, #0]
 8002ac8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002acc:	4718      	bx	r3

08002ace <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8002ace:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8002ad0:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 8002ad2:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8002ad4:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
        return scaled2int(i, xScale);
 8002ad8:	6b04      	ldr	r4, [r0, #48]	@ 0x30
        if (i >= 0)
 8002ada:	db0e      	blt.n	8002afa <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8002adc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002ae0:	fb92 f1f4 	sdiv	r1, r2, r4
 8002ae4:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002ae8:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8002aea:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	@ 0x11e
    }
 8002aee:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8002af2:	3a01      	subs	r2, #1
 8002af4:	440a      	add	r2, r1
 8002af6:	4249      	negs	r1, r1
 8002af8:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002afa:	f06f 0101 	mvn.w	r1, #1
 8002afe:	fb01 4102 	mla	r1, r1, r2, r4
 8002b02:	3901      	subs	r1, #1
 8002b04:	fb91 f1f4 	sdiv	r1, r1, r4
 8002b08:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002b0c:	1049      	asrs	r1, r1, #1
 8002b0e:	4249      	negs	r1, r1
 8002b10:	e7eb      	b.n	8002aea <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

08002b12 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 8002b12:	6803      	ldr	r3, [r0, #0]
 8002b14:	f8d3 313c 	ldr.w	r3, [r3, #316]	@ 0x13c
 8002b18:	4718      	bx	r3

08002b1a <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8002b1a:	6b02      	ldr	r2, [r0, #48]	@ 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8002b1c:	6803      	ldr	r3, [r0, #0]
 8002b1e:	4351      	muls	r1, r2
 8002b20:	f8d3 3148 	ldr.w	r3, [r3, #328]	@ 0x148
 8002b24:	4718      	bx	r3

08002b26 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 8002b26:	6803      	ldr	r3, [r0, #0]
 8002b28:	f8d3 3144 	ldr.w	r3, [r3, #324]	@ 0x144
 8002b2c:	4718      	bx	r3

08002b2e <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8002b2e:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 8002b32:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002b34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8002b38:	f8d3 2148 	ldr.w	r2, [r3, #328]	@ 0x148
        const float fs = f * (float)scale;
 8002b3c:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8002b40:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002b44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b48:	db08      	blt.n	8002b5c <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 8002b4a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8002b4e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8002b52:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002b56:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8002b5a:	4710      	bx	r2
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002b5c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002b60:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002b64:	ee17 3a90 	vmov	r3, s15
 8002b68:	3b01      	subs	r3, #1
 8002b6a:	ee30 0a47 	vsub.f32	s0, s0, s14
 8002b6e:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8002b72:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002b76:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8002b7a:	ee10 1a10 	vmov	r1, s0
 8002b7e:	4419      	add	r1, r3
 8002b80:	e7eb      	b.n	8002b5a <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08002b82 <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8002b82:	f8c0 113c 	str.w	r1, [r0, #316]	@ 0x13c
    }
 8002b86:	4770      	bx	lr

08002b88 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 8002b88:	6803      	ldr	r3, [r0, #0]
 8002b8a:	f8d3 3150 	ldr.w	r3, [r3, #336]	@ 0x150
 8002b8e:	4718      	bx	r3

08002b90 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8002b90:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8002b92:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8002b94:	f8d3 315c 	ldr.w	r3, [r3, #348]	@ 0x15c
    virtual int getXAxisFactorAsInt() const
 8002b98:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8002b9a:	4798      	blx	r3
        if (i >= 0)
 8002b9c:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8002b9e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        if (i >= 0)
 8002ba0:	db07      	blt.n	8002bb2 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8002ba2:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002ba6:	fb90 f0f3 	sdiv	r0, r0, r3
 8002baa:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002bae:	1040      	asrs	r0, r0, #1
    }
 8002bb0:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002bb2:	f06f 0201 	mvn.w	r2, #1
 8002bb6:	fb02 3000 	mla	r0, r2, r0, r3
 8002bba:	3801      	subs	r0, #1
 8002bbc:	fb90 f0f3 	sdiv	r0, r0, r3
 8002bc0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002bc4:	1040      	asrs	r0, r0, #1
 8002bc6:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8002bc8:	e7f2      	b.n	8002bb0 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08002bca <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8002bca:	6803      	ldr	r3, [r0, #0]
 8002bcc:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8002bd0:	4718      	bx	r3

08002bd2 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8002bd2:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8002bd4:	b510      	push	{r4, lr}
 8002bd6:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8002bd8:	f8d3 315c 	ldr.w	r3, [r3, #348]	@ 0x15c
 8002bdc:	4798      	blx	r3
 8002bde:	ee07 0a90 	vmov	s15, r0
        return (float)i / (float)scale;
 8002be2:	ed94 0a0c 	vldr	s0, [r4, #48]	@ 0x30
 8002be6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002bea:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 8002bee:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8002bf2:	bd10      	pop	{r4, pc}

08002bf4 <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8002bf4:	f8d0 013c 	ldr.w	r0, [r0, #316]	@ 0x13c
 8002bf8:	4770      	bx	lr

08002bfa <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8002bfa:	6b02      	ldr	r2, [r0, #48]	@ 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8002bfc:	6803      	ldr	r3, [r0, #0]
 8002bfe:	4351      	muls	r1, r2
 8002c00:	f8d3 3168 	ldr.w	r3, [r3, #360]	@ 0x168
 8002c04:	4718      	bx	r3

08002c06 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8002c06:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8002c0a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002c0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8002c10:	f8d3 2168 	ldr.w	r2, [r3, #360]	@ 0x168
        const float fs = f * (float)scale;
 8002c14:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8002c18:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002c1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c20:	db08      	blt.n	8002c34 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8002c22:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8002c26:	ee30 0a27 	vadd.f32	s0, s0, s15
 8002c2a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002c2e:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8002c32:	4710      	bx	r2
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002c34:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002c38:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002c3c:	ee17 3a90 	vmov	r3, s15
 8002c40:	3b01      	subs	r3, #1
 8002c42:	ee30 0a47 	vsub.f32	s0, s0, s14
 8002c46:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8002c4a:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002c4e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8002c52:	ee10 1a10 	vmov	r1, s0
 8002c56:	4419      	add	r1, r3
 8002c58:	e7eb      	b.n	8002c32 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08002c5a <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8002c5a:	f8c0 1140 	str.w	r1, [r0, #320]	@ 0x140
    }
 8002c5e:	4770      	bx	lr

08002c60 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8002c60:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8002c62:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8002c64:	f8d3 3174 	ldr.w	r3, [r3, #372]	@ 0x174
    virtual int getXAxisOffsetAsInt() const
 8002c68:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8002c6a:	4798      	blx	r3
        if (i >= 0)
 8002c6c:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8002c6e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        if (i >= 0)
 8002c70:	db07      	blt.n	8002c82 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8002c72:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002c76:	fb90 f0f3 	sdiv	r0, r0, r3
 8002c7a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002c7e:	1040      	asrs	r0, r0, #1
    }
 8002c80:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002c82:	f06f 0201 	mvn.w	r2, #1
 8002c86:	fb02 3000 	mla	r0, r2, r0, r3
 8002c8a:	3801      	subs	r0, #1
 8002c8c:	fb90 f0f3 	sdiv	r0, r0, r3
 8002c90:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002c94:	1040      	asrs	r0, r0, #1
 8002c96:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8002c98:	e7f2      	b.n	8002c80 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08002c9a <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8002c9a:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8002c9c:	b510      	push	{r4, lr}
 8002c9e:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8002ca0:	f8d3 3174 	ldr.w	r3, [r3, #372]	@ 0x174
 8002ca4:	4798      	blx	r3
 8002ca6:	ee07 0a90 	vmov	s15, r0
        return (float)i / (float)scale;
 8002caa:	ed94 0a0c 	vldr	s0, [r4, #48]	@ 0x30
 8002cae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002cb2:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 8002cb6:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8002cba:	bd10      	pop	{r4, pc}

08002cbc <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8002cbc:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002cc0:	4770      	bx	lr

08002cc2 <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
     * @return The index in the yValues array.
     */
    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return screenIndex;
    }
 8002cc2:	4608      	mov	r0, r1
 8002cc4:	4770      	bx	lr

08002cc6 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8002cc6:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8002cc8:	2900      	cmp	r1, #0
        return scaled2int(i, xScale);
 8002cca:	6b02      	ldr	r2, [r0, #48]	@ 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8002ccc:	f8d3 3184 	ldr.w	r3, [r3, #388]	@ 0x184
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8002cd0:	b510      	push	{r4, lr}
 8002cd2:	4604      	mov	r4, r0
        if (i >= 0)
 8002cd4:	db0e      	blt.n	8002cf4 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8002cd6:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8002cda:	fb91 f1f2 	sdiv	r1, r1, r2
 8002cde:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002ce2:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8002ce4:	b209      	sxth	r1, r1
 8002ce6:	4620      	mov	r0, r4
 8002ce8:	4798      	blx	r3
 8002cea:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	@ 0x13c
    }
 8002cee:	fb02 3000 	mla	r0, r2, r0, r3
 8002cf2:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002cf4:	f06f 0001 	mvn.w	r0, #1
 8002cf8:	fb00 2101 	mla	r1, r0, r1, r2
 8002cfc:	3901      	subs	r1, #1
 8002cfe:	fb91 f1f2 	sdiv	r1, r1, r2
 8002d02:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002d06:	1049      	asrs	r1, r1, #1
 8002d08:	4249      	negs	r1, r1
 8002d0a:	e7eb      	b.n	8002ce4 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08002d0c <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8002d0c:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8002d0e:	4770      	bx	lr

08002d10 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8002d10:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8002d12:	4770      	bx	lr

08002d14 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8002d14:	6803      	ldr	r3, [r0, #0]
 8002d16:	f8d3 3148 	ldr.w	r3, [r3, #328]	@ 0x148
 8002d1a:	4718      	bx	r3

08002d1c <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8002d1c:	6803      	ldr	r3, [r0, #0]
 8002d1e:	f8d3 315c 	ldr.w	r3, [r3, #348]	@ 0x15c
 8002d22:	4718      	bx	r3

08002d24 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8002d24:	6b02      	ldr	r2, [r0, #48]	@ 0x30

    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8002d26:	6803      	ldr	r3, [r0, #0]
 8002d28:	4351      	muls	r1, r2
 8002d2a:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 8002d2e:	4718      	bx	r3

08002d30 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8002d30:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8002d32:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8002d34:	f8d3 5118 	ldr.w	r5, [r3, #280]	@ 0x118
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8002d38:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8002d3a:	f8d0 6144 	ldr.w	r6, [r0, #324]	@ 0x144
 8002d3e:	f8d3 3180 	ldr.w	r3, [r3, #384]	@ 0x180
 8002d42:	4798      	blx	r3
 8002d44:	462b      	mov	r3, r5
 8002d46:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8002d4a:	4620      	mov	r0, r4
    }
 8002d4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8002d50:	4718      	bx	r3

08002d52 <_ZNK8touchgfx21GraphWrapAndClearData18indexToGlobalIndexEs>:

    virtual void clear();

    virtual int32_t indexToGlobalIndex(int16_t index) const
    {
        return (this->dataCounter - this->usedCapacity) + index;
 8002d52:	f8d0 3148 	ldr.w	r3, [r0, #328]	@ 0x148
 8002d56:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	@ 0x11e
 8002d5a:	4419      	add	r1, r3
    }
 8002d5c:	1a08      	subs	r0, r1, r0
 8002d5e:	4770      	bx	lr

08002d60 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002d60:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 8002d64:	4770      	bx	lr

08002d66 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8002d66:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8002d6a:	4770      	bx	lr

08002d6c <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d6c:	2200      	movs	r2, #0
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002d6e:	b510      	push	{r4, lr}
        return rect.width;
 8002d70:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002d74:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002d78:	8002      	strh	r2, [r0, #0]
 8002d7a:	8042      	strh	r2, [r0, #2]
 8002d7c:	8084      	strh	r4, [r0, #4]
 8002d7e:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002d80:	bd10      	pop	{r4, pc}

08002d82 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002d82:	2200      	movs	r2, #0
 8002d84:	8002      	strh	r2, [r0, #0]
 8002d86:	8042      	strh	r2, [r0, #2]
 8002d88:	8082      	strh	r2, [r0, #4]
 8002d8a:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002d8c:	4770      	bx	lr

08002d8e <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8002d8e:	62c1      	str	r1, [r0, #44]	@ 0x2c
    }
 8002d90:	4770      	bx	lr

08002d92 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8002d92:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8002d94:	4770      	bx	lr

08002d96 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8002d96:	2001      	movs	r0, #1
 8002d98:	4770      	bx	lr

08002d9a <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8002d9a:	4770      	bx	lr

08002d9c <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8002d9c:	4770      	bx	lr

08002d9e <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8002d9e:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8002da0:	b118      	cbz	r0, 8002daa <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8002da2:	6803      	ldr	r3, [r0, #0]
 8002da4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8002da8:	4718      	bx	r3
    }
 8002daa:	4770      	bx	lr

08002dac <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8002dac:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8002dae:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	@ 0x116
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8002db2:	f8b2 4118 	ldrh.w	r4, [r2, #280]	@ 0x118
 8002db6:	f8b2 1040 	ldrh.w	r1, [r2, #64]	@ 0x40
 8002dba:	442c      	add	r4, r5
 8002dbc:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	@ 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002dc0:	8005      	strh	r5, [r0, #0]
 8002dc2:	1b09      	subs	r1, r1, r4
 8002dc4:	2400      	movs	r4, #0
 8002dc6:	80c2      	strh	r2, [r0, #6]
 8002dc8:	8044      	strh	r4, [r0, #2]
 8002dca:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8002dcc:	bd30      	pop	{r4, r5, pc}

08002dce <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8002dce:	8002      	strh	r2, [r0, #0]
 8002dd0:	8083      	strh	r3, [r0, #4]
 8002dd2:	f9bd 2000 	ldrsh.w	r2, [sp]
 8002dd6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8002dda:	8042      	strh	r2, [r0, #2]
 8002ddc:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8002dde:	4770      	bx	lr

08002de0 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8002de0:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8002de2:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8002de4:	f8d3 30ec 	ldr.w	r3, [r3, #236]	@ 0xec
 8002de8:	4718      	bx	r3

08002dea <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8002dea:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8002dec:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8002dee:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 8002df2:	4718      	bx	r3

08002df4 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8002df4:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	@ 0x116
 8002df8:	4770      	bx	lr

08002dfa <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8002dfa:	f8b1 3116 	ldrh.w	r3, [r1, #278]	@ 0x116
 8002dfe:	f8b1 2118 	ldrh.w	r2, [r1, #280]	@ 0x118
 8002e02:	f8b1 0040 	ldrh.w	r0, [r1, #64]	@ 0x40
 8002e06:	4413      	add	r3, r2
 8002e08:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8002e0a:	b200      	sxth	r0, r0
 8002e0c:	4770      	bx	lr

08002e0e <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8002e0e:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	@ 0x114
 8002e12:	4770      	bx	lr

08002e14 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8002e14:	f8b1 3114 	ldrh.w	r3, [r1, #276]	@ 0x114
 8002e18:	f8b1 211a 	ldrh.w	r2, [r1, #282]	@ 0x11a
 8002e1c:	f8b1 0042 	ldrh.w	r0, [r1, #66]	@ 0x42
 8002e20:	4413      	add	r3, r2
 8002e22:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8002e24:	b200      	sxth	r0, r0
 8002e26:	4770      	bx	lr

08002e28 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8002e28:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8002e2a:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8002e2c:	4611      	mov	r1, r2
 8002e2e:	f8d3 3118 	ldr.w	r3, [r3, #280]	@ 0x118
 8002e32:	4718      	bx	r3

08002e34 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002e34:	b530      	push	{r4, r5, lr}
 8002e36:	b085      	sub	sp, #20
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002e38:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 8002e3a:	4604      	mov	r4, r0
        rect.width = width;
 8002e3c:	8101      	strh	r1, [r0, #8]
        boundingArea = calculateBoundingArea();
 8002e3e:	466d      	mov	r5, sp
 8002e40:	4601      	mov	r1, r0
 8002e42:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002e46:	343c      	adds	r4, #60	@ 0x3c
 8002e48:	4628      	mov	r0, r5
 8002e4a:	4798      	blx	r3
 8002e4c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002e50:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002e54:	b005      	add	sp, #20
 8002e56:	bd30      	pop	{r4, r5, pc}

08002e58 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002e58:	b530      	push	{r4, r5, lr}
 8002e5a:	b085      	sub	sp, #20
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002e5c:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 8002e5e:	4604      	mov	r4, r0
        rect.height = height;
 8002e60:	8141      	strh	r1, [r0, #10]
        boundingArea = calculateBoundingArea();
 8002e62:	466d      	mov	r5, sp
 8002e64:	4601      	mov	r1, r0
 8002e66:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002e6a:	343c      	adds	r4, #60	@ 0x3c
 8002e6c:	4628      	mov	r0, r5
 8002e6e:	4798      	blx	r3
 8002e70:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002e74:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002e78:	b005      	add	sp, #20
 8002e7a:	bd30      	pop	{r4, r5, pc}

08002e7c <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002e7c:	2200      	movs	r2, #0
 8002e7e:	8002      	strh	r2, [r0, #0]
 8002e80:	8042      	strh	r2, [r0, #2]
 8002e82:	8082      	strh	r2, [r0, #4]
 8002e84:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002e86:	4770      	bx	lr

08002e88 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002e88:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 8002e8c:	4770      	bx	lr

08002e8e <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
    {
        setX(x);
 8002e8e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002e90:	b570      	push	{r4, r5, r6, lr}
 8002e92:	4604      	mov	r4, r0
        setX(x);
 8002e94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002e96:	4615      	mov	r5, r2
        setX(x);
 8002e98:	4798      	blx	r3
        setBaselineY(baselineY);
 8002e9a:	6823      	ldr	r3, [r4, #0]
 8002e9c:	4620      	mov	r0, r4
 8002e9e:	4629      	mov	r1, r5
 8002ea0:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 8002ea2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002ea6:	4718      	bx	r3

08002ea8 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002ea8:	2000      	movs	r0, #0
 8002eaa:	4770      	bx	lr

08002eac <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002eac:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8002eae:	4770      	bx	lr

08002eb0 <_ZN12MainViewBase10send_helloEv>:
     * Virtual Action Handlers
     */
    virtual void send_hello()
    {
        // Override and implement this function in Main
    }
 8002eb0:	4770      	bx	lr

08002eb2 <_ZN12MainViewBase11setupScreenEv>:
}

void MainViewBase::setupScreen()
{

}
 8002eb2:	4770      	bx	lr

08002eb4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002eb4:	4770      	bx	lr

08002eb6 <_ZN8touchgfx17GraphWrapAndClearILs100EED1Ev>:
 * be created as new values are added.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphWrapAndClear : public GraphWrapAndClearData
 8002eb6:	4770      	bx	lr

08002eb8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002eb8:	4770      	bx	lr

08002eba <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8002eba:	4770      	bx	lr

08002ebc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002ebc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002ebe:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 8002ec0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002ec2:	68c2      	ldr	r2, [r0, #12]
 8002ec4:	689b      	ldr	r3, [r3, #8]
 8002ec6:	1055      	asrs	r5, r2, #1
 8002ec8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002ecc:	07d2      	lsls	r2, r2, #31
 8002ece:	bf48      	it	mi
 8002ed0:	5962      	ldrmi	r2, [r4, r5]
    }
 8002ed2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002ed4:	bf48      	it	mi
 8002ed6:	58d3      	ldrmi	r3, [r2, r3]
 8002ed8:	4718      	bx	r3

08002eda <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8002eda:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8002edc:	6840      	ldr	r0, [r0, #4]
 8002ede:	b130      	cbz	r0, 8002eee <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002ee0:	689a      	ldr	r2, [r3, #8]
 8002ee2:	b91a      	cbnz	r2, 8002eec <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8002ee4:	68d8      	ldr	r0, [r3, #12]
 8002ee6:	f000 0001 	and.w	r0, r0, #1
 8002eea:	4770      	bx	lr
 8002eec:	2001      	movs	r0, #1
    }
 8002eee:	4770      	bx	lr

08002ef0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002ef0:	b510      	push	{r4, lr}
 8002ef2:	4604      	mov	r4, r0
 8002ef4:	214c      	movs	r1, #76	@ 0x4c
 8002ef6:	f01e fd09 	bl	802190c <_ZdlPvj>
 8002efa:	4620      	mov	r0, r4
 8002efc:	bd10      	pop	{r4, pc}

08002efe <_ZN8touchgfx17GraphElementGridYD0Ev>:
 8002efe:	b510      	push	{r4, lr}
 8002f00:	4604      	mov	r4, r0
 8002f02:	2140      	movs	r1, #64	@ 0x40
 8002f04:	f01e fd02 	bl	802190c <_ZdlPvj>
 8002f08:	4620      	mov	r0, r4
 8002f0a:	bd10      	pop	{r4, pc}

08002f0c <_ZN8touchgfx17GraphWrapAndClearILs100EED0Ev>:
 8002f0c:	b510      	push	{r4, lr}
 8002f0e:	4604      	mov	r4, r0
 8002f10:	f44f 7137 	mov.w	r1, #732	@ 0x2dc
 8002f14:	f01e fcfa 	bl	802190c <_ZdlPvj>
 8002f18:	4620      	mov	r0, r4
 8002f1a:	bd10      	pop	{r4, pc}

08002f1c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f1c:	b510      	push	{r4, lr}
 8002f1e:	4604      	mov	r4, r0
 8002f20:	2110      	movs	r1, #16
 8002f22:	f01e fcf3 	bl	802190c <_ZdlPvj>
 8002f26:	4620      	mov	r0, r4
 8002f28:	bd10      	pop	{r4, pc}

08002f2a <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8002f2a:	b538      	push	{r3, r4, r5, lr}
 8002f2c:	4603      	mov	r3, r0
 8002f2e:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8002f30:	e9d3 540c 	ldrd	r5, r4, [r3, #48]	@ 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8002f34:	680b      	ldr	r3, [r1, #0]
 8002f36:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002f3a:	4798      	blx	r3
 8002f3c:	4629      	mov	r1, r5
 8002f3e:	4602      	mov	r2, r0
 8002f40:	4620      	mov	r0, r4
    }
 8002f42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8002f46:	f009 b95f 	b.w	800c208 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08002f4c <_ZN12MainViewBaseD1Ev>:
MainViewBase::~MainViewBase()
 8002f4c:	4b03      	ldr	r3, [pc, #12]	@ (8002f5c <_ZN12MainViewBaseD1Ev+0x10>)
 8002f4e:	b510      	push	{r4, lr}
 8002f50:	4604      	mov	r4, r0
 8002f52:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002f54:	f00b ff86 	bl	800ee64 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002f58:	4620      	mov	r0, r4
 8002f5a:	bd10      	pop	{r4, pc}
 8002f5c:	0802478c 	.word	0x0802478c

08002f60 <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 8002f60:	4b06      	ldr	r3, [pc, #24]	@ (8002f7c <_ZN12MainViewBaseD0Ev+0x1c>)
 8002f62:	b510      	push	{r4, lr}
 8002f64:	4604      	mov	r4, r0
 8002f66:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002f68:	f00b ff7c 	bl	800ee64 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002f6c:	f242 21b0 	movw	r1, #8880	@ 0x22b0
 8002f70:	4620      	mov	r0, r4
 8002f72:	f01e fccb 	bl	802190c <_ZdlPvj>
 8002f76:	4620      	mov	r0, r4
 8002f78:	bd10      	pop	{r4, pc}
 8002f7a:	bf00      	nop
 8002f7c:	0802478c 	.word	0x0802478c

08002f80 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002f80:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002f84:	b112      	cbz	r2, 8002f8c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002f86:	6803      	ldr	r3, [r0, #0]
 8002f88:	695b      	ldr	r3, [r3, #20]
 8002f8a:	4718      	bx	r3
    }
 8002f8c:	4770      	bx	lr

08002f8e <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
    virtual void invalidateContent() const
 8002f8e:	b508      	push	{r3, lr}
        if (alpha > 0)
 8002f90:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8002f94:	b10b      	cbz	r3, 8002f9a <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xc>
            Container::invalidateContent();
 8002f96:	f7ff fff3 	bl	8002f80 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002f9a:	bd08      	pop	{r3, pc}

08002f9c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002f9c:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002f9e:	f7ff ffef 	bl	8002f80 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002fa2:	bd08      	pop	{r3, pc}

08002fa4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8002fa4:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8002fa6:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8002fa8:	db03      	blt.n	8002fb2 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8002faa:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	@ 0x11e
 8002fae:	4294      	cmp	r4, r2
 8002fb0:	dc06      	bgt.n	8002fc0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8002fb2:	4b08      	ldr	r3, [pc, #32]	@ (8002fd4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8002fb4:	f240 6139 	movw	r1, #1593	@ 0x639
 8002fb8:	4a07      	ldr	r2, [pc, #28]	@ (8002fd8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8002fba:	4808      	ldr	r0, [pc, #32]	@ (8002fdc <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8002fbc:	f01f fa10 	bl	80223e0 <__assert_func>
        return yValues[dataIndex(index)];
 8002fc0:	6803      	ldr	r3, [r0, #0]
 8002fc2:	f8d0 4144 	ldr.w	r4, [r0, #324]	@ 0x144
 8002fc6:	f8d3 3180 	ldr.w	r3, [r3, #384]	@ 0x180
 8002fca:	4798      	blx	r3
    }
 8002fcc:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8002fd0:	bd10      	pop	{r4, pc}
 8002fd2:	bf00      	nop
 8002fd4:	080240e8 	.word	0x080240e8
 8002fd8:	0802410b 	.word	0x0802410b
 8002fdc:	0802415a 	.word	0x0802415a

08002fe0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8002fe0:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8002fe2:	b510      	push	{r4, lr}
 8002fe4:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8002fe6:	db03      	blt.n	8002ff0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8002fe8:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	@ 0x11e
 8002fec:	429a      	cmp	r2, r3
 8002fee:	dc06      	bgt.n	8002ffe <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8002ff0:	4b07      	ldr	r3, [pc, #28]	@ (8003010 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8002ff2:	f240 6133 	movw	r1, #1587	@ 0x633
 8002ff6:	4a07      	ldr	r2, [pc, #28]	@ (8003014 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8002ff8:	4807      	ldr	r0, [pc, #28]	@ (8003018 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8002ffa:	f01f f9f1 	bl	80223e0 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8002ffe:	6803      	ldr	r3, [r0, #0]
 8003000:	f8d3 3184 	ldr.w	r3, [r3, #388]	@ 0x184
 8003004:	4798      	blx	r3
 8003006:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	@ 0x13c
    }
 800300a:	fb02 3000 	mla	r0, r2, r0, r3
 800300e:	bd10      	pop	{r4, pc}
 8003010:	080240e8 	.word	0x080240e8
 8003014:	080241b7 	.word	0x080241b7
 8003018:	0802415a 	.word	0x0802415a

0800301c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800301c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8003020:	b11a      	cbz	r2, 800302a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8003022:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8003026:	b102      	cbz	r2, 800302a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8003028:	6018      	str	r0, [r3, #0]
        }
    }
 800302a:	4770      	bx	lr

0800302c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800302c:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800302e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003030:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
    virtual void setBaselineY(int16_t baselineY)
 8003032:	4604      	mov	r4, r0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003034:	4b11      	ldr	r3, [pc, #68]	@ (800307c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003036:	b28d      	uxth	r5, r1
 8003038:	681b      	ldr	r3, [r3, #0]
 800303a:	b92b      	cbnz	r3, 8003048 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 800303c:	4b10      	ldr	r3, [pc, #64]	@ (8003080 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800303e:	216c      	movs	r1, #108	@ 0x6c
 8003040:	4a10      	ldr	r2, [pc, #64]	@ (8003084 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003042:	4811      	ldr	r0, [pc, #68]	@ (8003088 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003044:	f01f f9cc 	bl	80223e0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003048:	4910      	ldr	r1, [pc, #64]	@ (800308c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800304a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800304c:	8809      	ldrh	r1, [r1, #0]
 800304e:	4291      	cmp	r1, r2
 8003050:	d803      	bhi.n	800305a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8003052:	4b0f      	ldr	r3, [pc, #60]	@ (8003090 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003054:	216d      	movs	r1, #109	@ 0x6d
 8003056:	4a0b      	ldr	r2, [pc, #44]	@ (8003084 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003058:	e7f3      	b.n	8003042 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800305a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800305e:	4b0d      	ldr	r3, [pc, #52]	@ (8003094 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8003060:	681b      	ldr	r3, [r3, #0]
 8003062:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8003066:	6803      	ldr	r3, [r0, #0]
 8003068:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800306a:	4798      	blx	r3
 800306c:	1a29      	subs	r1, r5, r0
 800306e:	4633      	mov	r3, r6
 8003070:	4620      	mov	r0, r4
 8003072:	b209      	sxth	r1, r1
    }
 8003074:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003078:	4718      	bx	r3
 800307a:	bf00      	nop
 800307c:	20016ce0 	.word	0x20016ce0
 8003080:	08024206 	.word	0x08024206
 8003084:	08024248 	.word	0x08024248
 8003088:	08024283 	.word	0x08024283
 800308c:	20016ce4 	.word	0x20016ce4
 8003090:	080242ca 	.word	0x080242ca
 8003094:	20016ce8 	.word	0x20016ce8

08003098 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8003098:	b538      	push	{r3, r4, r5, lr}
    if (&src == &bt_send_hello)
 800309a:	f500 63b7 	add.w	r3, r0, #1464	@ 0x5b8
{
 800309e:	4604      	mov	r4, r0
 80030a0:	460d      	mov	r5, r1
    if (&src == &bt_send_hello)
 80030a2:	4299      	cmp	r1, r3
 80030a4:	d102      	bne.n	80030ac <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    {
        //Interaction1
        //When bt_send_hello clicked call virtual function
        //Call send_hello
        send_hello();
 80030a6:	6803      	ldr	r3, [r0, #0]
 80030a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80030aa:	4798      	blx	r3
    }
    if (&src == &button1)
 80030ac:	f504 64c7 	add.w	r4, r4, #1592	@ 0x638
 80030b0:	42a5      	cmp	r5, r4
 80030b2:	d105      	bne.n	80030c0 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80030b4:	f00d fb88 	bl	80107c8 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When button1 clicked change screen to sensor
        //Go to sensor with no screen transition
        application().gotosensorScreenNoTransition();
    }
}
 80030b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotosensorScreenNoTransition();
 80030bc:	f7ff ba84 	b.w	80025c8 <_ZN23FrontendApplicationBase28gotosensorScreenNoTransitionEv>
}
 80030c0:	bd38      	pop	{r3, r4, r5, pc}

080030c2 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80030c2:	2200      	movs	r2, #0
 80030c4:	f04f 31ff 	mov.w	r1, #4294967295
              text(0)
 80030c8:	6082      	str	r2, [r0, #8]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80030ca:	e9c0 2100 	strd	r2, r1, [r0]
    }
 80030ce:	4770      	bx	lr

080030d0 <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
 80030d0:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80030d2:	b570      	push	{r4, r5, r6, lr}
 80030d4:	4604      	mov	r4, r0
        setX(x);
 80030d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 80030d8:	4615      	mov	r5, r2
        setX(x);
 80030da:	4798      	blx	r3
        setY(y);
 80030dc:	6823      	ldr	r3, [r4, #0]
 80030de:	4620      	mov	r0, r4
 80030e0:	4629      	mov	r1, r5
 80030e2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 80030e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80030e8:	4718      	bx	r3

080030ea <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80030ea:	b570      	push	{r4, r5, r6, lr}
 80030ec:	4604      	mov	r4, r0
 80030ee:	461d      	mov	r5, r3
 80030f0:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80030f4:	f7ff ffec 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80030f8:	6823      	ldr	r3, [r4, #0]
 80030fa:	4629      	mov	r1, r5
 80030fc:	4620      	mov	r0, r4
 80030fe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003100:	4798      	blx	r3
        setHeight(height);
 8003102:	6823      	ldr	r3, [r4, #0]
 8003104:	4631      	mov	r1, r6
 8003106:	4620      	mov	r0, r4
 8003108:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 800310a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800310e:	4718      	bx	r3

08003110 <_ZN8touchgfx6WidgetC1Ev>:
 8003110:	2200      	movs	r2, #0
 8003112:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003116:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800311a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800311e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8003122:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003126:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8003128:	4a01      	ldr	r2, [pc, #4]	@ (8003130 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800312a:	6002      	str	r2, [r0, #0]
 800312c:	4770      	bx	lr
 800312e:	bf00      	nop
 8003130:	0802440c 	.word	0x0802440c

08003134 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8003134:	b510      	push	{r4, lr}
 8003136:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8003138:	2226      	movs	r2, #38	@ 0x26
 800313a:	2100      	movs	r1, #0
 800313c:	f01f fbec 	bl	8022918 <memset>
 8003140:	4620      	mov	r0, r4
 8003142:	f7ff ffe5 	bl	8003110 <_ZN8touchgfx6WidgetC1Ev>
 8003146:	4b04      	ldr	r3, [pc, #16]	@ (8003158 <_ZN8touchgfx3BoxC1Ev+0x24>)
    {
    }
 8003148:	4620      	mov	r0, r4
        : Widget(), alpha(255), color(0)
 800314a:	6023      	str	r3, [r4, #0]
 800314c:	23ff      	movs	r3, #255	@ 0xff
 800314e:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
        : color(col)
 8003152:	2300      	movs	r3, #0
 8003154:	62a3      	str	r3, [r4, #40]	@ 0x28
    }
 8003156:	bd10      	pop	{r4, pc}
 8003158:	0802542c 	.word	0x0802542c

0800315c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 800315c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 800315e:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003160:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003162:	f00e fd55 	bl	8011c10 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8003166:	2800      	cmp	r0, #0
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003168:	462a      	mov	r2, r5
 800316a:	9901      	ldr	r1, [sp, #4]
 800316c:	ea4f 1440 	mov.w	r4, r0, lsl #5
 8003170:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003174:	db04      	blt.n	8003180 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003176:	f00e fd6a 	bl	8011c4e <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 800317a:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 800317c:	b003      	add	sp, #12
 800317e:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003180:	f00e fd65 	bl	8011c4e <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003184:	1a20      	subs	r0, r4, r0
        explicit Q5(int i)
 8003186:	e7f9      	b.n	800317c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08003188 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003188:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 800318a:	f8b0 311a 	ldrh.w	r3, [r0, #282]	@ 0x11a
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 800318e:	460e      	mov	r6, r1
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003190:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	@ 0x114
 8003194:	f8b0 5042 	ldrh.w	r5, [r0, #66]	@ 0x42
 8003198:	4423      	add	r3, r4
 800319a:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 800319c:	b22d      	sxth	r5, r5
 800319e:	442c      	add	r4, r5
 80031a0:	1e69      	subs	r1, r5, #1
 80031a2:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	@ 0x134
 80031a6:	3c01      	subs	r4, #1
 80031a8:	1ad2      	subs	r2, r2, r3
 80031aa:	1af0      	subs	r0, r6, r3
 80031ac:	f7ff ffd6 	bl	800315c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
    }
 80031b0:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 80031b4:	bd70      	pop	{r4, r5, r6, pc}

080031b6 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 80031b6:	b538      	push	{r3, r4, r5, lr}
 80031b8:	4604      	mov	r4, r0
 80031ba:	460d      	mov	r5, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80031bc:	f8b4 3116 	ldrh.w	r3, [r4, #278]	@ 0x116
 80031c0:	f8b4 1118 	ldrh.w	r1, [r4, #280]	@ 0x118
 80031c4:	440b      	add	r3, r1
 80031c6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 80031ca:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80031cc:	e9d0 024b 	ldrd	r0, r2, [r0, #300]	@ 0x12c
 80031d0:	b209      	sxth	r1, r1
 80031d2:	1a12      	subs	r2, r2, r0
 80031d4:	1a28      	subs	r0, r5, r0
 80031d6:	3901      	subs	r1, #1
 80031d8:	f7ff ffc0 	bl	800315c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 80031dc:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	@ 0x116
    }
 80031e0:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 80031e4:	bd38      	pop	{r3, r4, r5, pc}
	...

080031e8 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 80031e8:	b510      	push	{r4, lr}
 80031ea:	4604      	mov	r4, r0
        : CanvasWidget()
 80031ec:	f008 fbe4 	bl	800b9b8 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 80031f0:	4a0a      	ldr	r2, [pc, #40]	@ (800321c <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 80031f2:	2300      	movs	r3, #0
    {
    }
 80031f4:	4620      	mov	r0, r4
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 80031f6:	6022      	str	r2, [r4, #0]
 80031f8:	2201      	movs	r2, #1
 80031fa:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80031fc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8003200:	f8a4 3042 	strh.w	r3, [r4, #66]	@ 0x42
 8003204:	64a3      	str	r3, [r4, #72]	@ 0x48
 8003206:	e9c4 230c 	strd	r2, r3, [r4, #48]	@ 0x30
        : typedTextId(id)
 800320a:	4a05      	ldr	r2, [pc, #20]	@ (8003220 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 800320c:	63a2      	str	r2, [r4, #56]	@ 0x38
 800320e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8003212:	87a2      	strh	r2, [r4, #60]	@ 0x3c
 8003214:	222e      	movs	r2, #46	@ 0x2e
 8003216:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
    }
 800321a:	bd10      	pop	{r4, pc}
 800321c:	080252fc 	.word	0x080252fc
 8003220:	08023c30 	.word	0x08023c30

08003224 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
        : widgetWidth(0)
 8003224:	2300      	movs	r3, #0
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003226:	b570      	push	{r4, r5, r6, lr}
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003228:	4e12      	ldr	r6, [pc, #72]	@ (8003274 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800322a:	4605      	mov	r5, r0
 800322c:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 800322e:	4b12      	ldr	r3, [pc, #72]	@ (8003278 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003230:	6003      	str	r3, [r0, #0]
 8003232:	6833      	ldr	r3, [r6, #0]
 8003234:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8003238:	b10a      	cbz	r2, 800323e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800323a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800323c:	b900      	cbnz	r0, 8003240 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800323e:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003240:	6803      	ldr	r3, [r0, #0]
 8003242:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003244:	4798      	blx	r3
        return auxiliaryLCD;
 8003246:	6833      	ldr	r3, [r6, #0]
 8003248:	fab0 f480 	clz	r4, r0
 800324c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800324e:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003250:	b130      	cbz	r0, 8003260 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003252:	6803      	ldr	r3, [r0, #0]
 8003254:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003256:	4798      	blx	r3
 8003258:	2800      	cmp	r0, #0
 800325a:	bf08      	it	eq
 800325c:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003260:	b92c      	cbnz	r4, 800326e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003262:	4b06      	ldr	r3, [pc, #24]	@ (800327c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003264:	212c      	movs	r1, #44	@ 0x2c
 8003266:	4a06      	ldr	r2, [pc, #24]	@ (8003280 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003268:	4806      	ldr	r0, [pc, #24]	@ (8003284 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800326a:	f01f f8b9 	bl	80223e0 <__assert_func>
    }
 800326e:	4628      	mov	r0, r5
 8003270:	bd70      	pop	{r4, r5, r6, pc}
 8003272:	bf00      	nop
 8003274:	20016c88 	.word	0x20016c88
 8003278:	0802452c 	.word	0x0802452c
 800327c:	08024308 	.word	0x08024308
 8003280:	08024366 	.word	0x08024366
 8003284:	0802439f 	.word	0x0802439f

08003288 <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 8003288:	b510      	push	{r4, lr}
 800328a:	4604      	mov	r4, r0
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 800328c:	2226      	movs	r2, #38	@ 0x26
 800328e:	2100      	movs	r1, #0
 8003290:	f01f fb42 	bl	8022918 <memset>
 8003294:	4620      	mov	r0, r4
 8003296:	f7ff ff3b 	bl	8003110 <_ZN8touchgfx6WidgetC1Ev>
 800329a:	2300      	movs	r3, #0
        : AbstractButton(), up(), down(), alpha(255)
    {
    }
 800329c:	4620      	mov	r0, r4
 800329e:	62a3      	str	r3, [r4, #40]	@ 0x28
 80032a0:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
        touchable = touch;
 80032a4:	2301      	movs	r3, #1
 80032a6:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
        : AbstractButton(), up(), down(), alpha(255)
 80032aa:	4b04      	ldr	r3, [pc, #16]	@ (80032bc <_ZN8touchgfx6ButtonC1Ev+0x34>)
 80032ac:	6023      	str	r3, [r4, #0]
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80032ae:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80032b2:	85e3      	strh	r3, [r4, #46]	@ 0x2e
 80032b4:	8623      	strh	r3, [r4, #48]	@ 0x30
 80032b6:	f884 3032 	strb.w	r3, [r4, #50]	@ 0x32
    }
 80032ba:	bd10      	pop	{r4, pc}
 80032bc:	08025494 	.word	0x08025494

080032c0 <_ZN12MainViewBaseC1Ev>:
MainViewBase::MainViewBase() :
 80032c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032c4:	4604      	mov	r4, r0
 80032c6:	b095      	sub	sp, #84	@ 0x54
        : presenter(0)
 80032c8:	2500      	movs	r5, #0
 80032ca:	f00e fe6b 	bl	8011fa4 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 80032ce:	46a2      	mov	sl, r4
 80032d0:	4be6      	ldr	r3, [pc, #920]	@ (800366c <_ZN12MainViewBaseC1Ev+0x3ac>)
 80032d2:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80032d4:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 80032d8:	f84a 3b40 	str.w	r3, [sl], #64
 80032dc:	4650      	mov	r0, sl
 80032de:	f7ff ff29 	bl	8003134 <_ZN8touchgfx3BoxC1Ev>
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80032e2:	2326      	movs	r3, #38	@ 0x26
 80032e4:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 80032e8:	4629      	mov	r1, r5
 80032ea:	461a      	mov	r2, r3
 80032ec:	4648      	mov	r0, r9
 80032ee:	f8ad 8048 	strh.w	r8, [sp, #72]	@ 0x48
 80032f2:	f01f fb11 	bl	8022918 <memset>
 80032f6:	4648      	mov	r0, r9
 80032f8:	f104 07cc 	add.w	r7, r4, #204	@ 0xcc
 80032fc:	f7ff ff08 	bl	8003110 <_ZN8touchgfx6WidgetC1Ev>
 8003300:	4adb      	ldr	r2, [pc, #876]	@ (8003670 <_ZN12MainViewBaseC1Ev+0x3b0>)
    {
        Image::setBitmap(bmp);
 8003302:	a912      	add	r1, sp, #72	@ 0x48
 8003304:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
 8003306:	66e2      	str	r2, [r4, #108]	@ 0x6c
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003308:	2601      	movs	r6, #1
 800330a:	f8bd 2048 	ldrh.w	r2, [sp, #72]	@ 0x48
 800330e:	f204 4bc4 	addw	fp, r4, #1220	@ 0x4c4
 8003312:	f884 8094 	strb.w	r8, [r4, #148]	@ 0x94
 8003316:	f8a4 2092 	strh.w	r2, [r4, #146]	@ 0x92
        Image::setBitmap(bmp);
 800331a:	f00a fe9d 	bl	800e058 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800331e:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 8003322:	4618      	mov	r0, r3
 8003324:	9306      	str	r3, [sp, #24]
 8003326:	f7ff ff05 	bl	8003134 <_ZN8touchgfx3BoxC1Ev>
 800332a:	4ad2      	ldr	r2, [pc, #840]	@ (8003674 <_ZN12MainViewBaseC1Ev+0x3b4>)
 800332c:	2164      	movs	r1, #100	@ 0x64
 800332e:	4638      	mov	r0, r7
 8003330:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
 8003334:	f8c4 50c4 	str.w	r5, [r4, #196]	@ 0xc4
 8003338:	f8a4 50c8 	strh.w	r5, [r4, #200]	@ 0xc8
 800333c:	f008 ff00 	bl	800c140 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8003340:	4acd      	ldr	r2, [pc, #820]	@ (8003678 <_ZN12MainViewBaseC1Ev+0x3b8>)
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003342:	4629      	mov	r1, r5
 8003344:	4638      	mov	r0, r7
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003346:	f8c4 20cc 	str.w	r2, [r4, #204]	@ 0xcc
{
public:
    GraphWrapAndClear()
        : GraphWrapAndClearData(CAPACITY, y)
 800334a:	f504 7206 	add.w	r2, r4, #536	@ 0x218
 800334e:	e9c4 6582 	strd	r6, r5, [r4, #520]	@ 0x208
 8003352:	e9c4 2584 	strd	r2, r5, [r4, #528]	@ 0x210
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003356:	2263      	movs	r2, #99	@ 0x63
 8003358:	f7ff f9de 	bl	8002718 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 800335c:	f504 736a 	add.w	r3, r4, #936	@ 0x3a8
 8003360:	4ac6      	ldr	r2, [pc, #792]	@ (800367c <_ZN12MainViewBaseC1Ev+0x3bc>)
 8003362:	4618      	mov	r0, r3
 8003364:	9307      	str	r3, [sp, #28]
 8003366:	f8c4 20cc 	str.w	r2, [r4, #204]	@ 0xcc
 800336a:	f008 fb25 	bl	800b9b8 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 800336e:	230a      	movs	r3, #10
class GraphElementGridY : public GraphElementGridBase
 8003370:	4ac3      	ldr	r2, [pc, #780]	@ (8003680 <_ZN12MainViewBaseC1Ev+0x3c0>)
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003372:	f8c4 33dc 	str.w	r3, [r4, #988]	@ 0x3dc
 8003376:	f504 737a 	add.w	r3, r4, #1000	@ 0x3e8
class GraphElementGridY : public GraphElementGridBase
 800337a:	f8c4 23a8 	str.w	r2, [r4, #936]	@ 0x3a8

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 800337e:	4618      	mov	r0, r3
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003380:	f884 63e0 	strb.w	r6, [r4, #992]	@ 0x3e0
 8003384:	f8c4 53e4 	str.w	r5, [r4, #996]	@ 0x3e4
 8003388:	9308      	str	r3, [sp, #32]
 800338a:	e9c4 56f5 	strd	r5, r6, [r4, #980]	@ 0x3d4
 800338e:	f7ff ff2b 	bl	80031e8 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8003392:	f204 4334 	addw	r3, r4, #1076	@ 0x434
 8003396:	4abb      	ldr	r2, [pc, #748]	@ (8003684 <_ZN12MainViewBaseC1Ev+0x3c4>)

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8003398:	4618      	mov	r0, r3
 800339a:	9309      	str	r3, [sp, #36]	@ 0x24
class GraphLabelsX : public GraphLabelsBase
 800339c:	f8c4 23e8 	str.w	r2, [r4, #1000]	@ 0x3e8
class GraphLabelsY : public GraphLabelsBase
 80033a0:	f7ff ff22 	bl	80031e8 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80033a4:	f504 6390 	add.w	r3, r4, #1152	@ 0x480
 80033a8:	4ab7      	ldr	r2, [pc, #732]	@ (8003688 <_ZN12MainViewBaseC1Ev+0x3c8>)
        : CanvasWidget()
 80033aa:	4618      	mov	r0, r3
 80033ac:	930a      	str	r3, [sp, #40]	@ 0x28
 80033ae:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
 80033b2:	f008 fb01 	bl	800b9b8 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 80033b6:	f04f 0302 	mov.w	r3, #2
 80033ba:	4ab4      	ldr	r2, [pc, #720]	@ (800368c <_ZN12MainViewBaseC1Ev+0x3cc>)
 80033bc:	f884 34ac 	strb.w	r3, [r4, #1196]	@ 0x4ac
 80033c0:	f504 6396 	add.w	r3, r4, #1200	@ 0x4b0
 80033c4:	f8c4 2480 	str.w	r2, [r4, #1152]	@ 0x480
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80033c8:	4618      	mov	r0, r3
 80033ca:	930b      	str	r3, [sp, #44]	@ 0x2c
 80033cc:	f7ff ff2a 	bl	8003224 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80033d0:	4aaf      	ldr	r2, [pc, #700]	@ (8003690 <_ZN12MainViewBaseC1Ev+0x3d0>)
 80033d2:	4658      	mov	r0, fp
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80033d4:	f8c4 54bc 	str.w	r5, [r4, #1212]	@ 0x4bc
 80033d8:	f8c4 24b0 	str.w	r2, [r4, #1200]	@ 0x4b0
 80033dc:	3224      	adds	r2, #36	@ 0x24
 80033de:	f8c4 24b8 	str.w	r2, [r4, #1208]	@ 0x4b8
 80033e2:	f007 fa59 	bl	800a898 <_ZN8touchgfx6SliderC1Ev>
 80033e6:	f504 63b7 	add.w	r3, r4, #1464	@ 0x5b8
 80033ea:	4618      	mov	r0, r3
 80033ec:	9304      	str	r3, [sp, #16]
 80033ee:	f7ff ff4b 	bl	8003288 <_ZN8touchgfx6ButtonC1Ev>
 80033f2:	f204 53ec 	addw	r3, r4, #1516	@ 0x5ec
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80033f6:	4629      	mov	r1, r5
 80033f8:	9303      	str	r3, [sp, #12]
 80033fa:	2326      	movs	r3, #38	@ 0x26
 80033fc:	9803      	ldr	r0, [sp, #12]
 80033fe:	461a      	mov	r2, r3
 8003400:	f01f fa8a 	bl	8022918 <memset>
 8003404:	9803      	ldr	r0, [sp, #12]
 8003406:	f7ff fe83 	bl	8003110 <_ZN8touchgfx6WidgetC1Ev>
 800340a:	4ba2      	ldr	r3, [pc, #648]	@ (8003694 <_ZN12MainViewBaseC1Ev+0x3d4>)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800340c:	f04f 32ff 	mov.w	r2, #4294967295
 8003410:	f8a4 8618 	strh.w	r8, [r4, #1560]	@ 0x618
 8003414:	f8c4 3614 	str.w	r3, [r4, #1556]	@ 0x614
 8003418:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
 800341c:	f8c4 262c 	str.w	r2, [r4, #1580]	@ 0x62c
 8003420:	f504 62c7 	add.w	r2, r4, #1592	@ 0x638
 8003424:	f8c4 3620 	str.w	r3, [r4, #1568]	@ 0x620
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003428:	f104 0804 	add.w	r8, r4, #4
        : TextAreaWithWildcardBase(), wc1(0)
 800342c:	4b9a      	ldr	r3, [pc, #616]	@ (8003698 <_ZN12MainViewBaseC1Ev+0x3d8>)
 800342e:	4610      	mov	r0, r2
        : color(col)
 8003430:	f8c4 561c 	str.w	r5, [r4, #1564]	@ 0x61c
 8003434:	f8c4 35ec 	str.w	r3, [r4, #1516]	@ 0x5ec
 8003438:	f8a4 5624 	strh.w	r5, [r4, #1572]	@ 0x624
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800343c:	f8c4 5628 	str.w	r5, [r4, #1576]	@ 0x628
              text(0)
 8003440:	f8c4 5630 	str.w	r5, [r4, #1584]	@ 0x630
 8003444:	f8c4 5634 	str.w	r5, [r4, #1588]	@ 0x634
 8003448:	9205      	str	r2, [sp, #20]
 800344a:	f7ff ff1d 	bl	8003288 <_ZN8touchgfx6ButtonC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800344e:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 8003452:	4a92      	ldr	r2, [pc, #584]	@ (800369c <_ZN12MainViewBaseC1Ev+0x3dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003454:	f504 60d0 	add.w	r0, r4, #1664	@ 0x680
 8003458:	f44f 51e1 	mov.w	r1, #7200	@ 0x1c20
 800345c:	e9c3 24a8 	strd	r2, r4, [r3, #672]	@ 0x2a0
 8003460:	4a8f      	ldr	r2, [pc, #572]	@ (80036a0 <_ZN12MainViewBaseC1Ev+0x3e0>)
 8003462:	e9c3 25aa 	strd	r2, r5, [r3, #680]	@ 0x2a8
 8003466:	f00b fcf3 	bl	800ee50 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 480, 272);
 800346a:	f44f 7388 	mov.w	r3, #272	@ 0x110
 800346e:	462a      	mov	r2, r5
 8003470:	4629      	mov	r1, r5
 8003472:	4650      	mov	r0, sl
 8003474:	9300      	str	r3, [sp, #0]
 8003476:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800347a:	f7ff fe36 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800347e:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 8003482:	4651      	mov	r1, sl
 8003484:	4640      	mov	r0, r8
 8003486:	66a2      	str	r2, [r4, #104]	@ 0x68
    graph.setGraphAreaPadding(2, 6, 0, 6);
 8003488:	f04f 0a06 	mov.w	sl, #6
 800348c:	f006 fd4c 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 8003490:	462a      	mov	r2, r5
 8003492:	4629      	mov	r1, r5
 8003494:	4648      	mov	r0, r9
 8003496:	f7ff fe1b 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
 800349a:	f04f 0103 	mov.w	r1, #3
    background.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_480X272PX_ID));
 800349e:	4648      	mov	r0, r9
 80034a0:	f8ad 1048 	strh.w	r1, [sp, #72]	@ 0x48
 80034a4:	a912      	add	r1, sp, #72	@ 0x48
 80034a6:	f00a fdd7 	bl	800e058 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80034aa:	4649      	mov	r1, r9
    graphBackground.setPosition(15, 24, 389, 224);
 80034ac:	f04f 09e0 	mov.w	r9, #224	@ 0xe0
 80034b0:	4640      	mov	r0, r8
 80034b2:	f006 fd39 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034b6:	9806      	ldr	r0, [sp, #24]
 80034b8:	f8cd 9000 	str.w	r9, [sp]
 80034bc:	f240 1385 	movw	r3, #389	@ 0x185
 80034c0:	2218      	movs	r2, #24
 80034c2:	210f      	movs	r1, #15
 80034c4:	f7ff fe11 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80034c8:	f04f 33ff 	mov.w	r3, #4294967295
 80034cc:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 80034d0:	9906      	ldr	r1, [sp, #24]
 80034d2:	4640      	mov	r0, r8
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 80034d4:	f8a4 60c8 	strh.w	r6, [r4, #200]	@ 0xc8
        borderColor = colorBorder;
 80034d8:	e9c4 3230 	strd	r3, r2, [r4, #192]	@ 0xc0
 80034dc:	f006 fd24 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    graph.setPosition(15, 24, 389, 224);
 80034e0:	f240 1385 	movw	r3, #389	@ 0x185
 80034e4:	4638      	mov	r0, r7
 80034e6:	f8cd 9000 	str.w	r9, [sp]
 80034ea:	2218      	movs	r2, #24
 80034ec:	210f      	movs	r1, #15
 80034ee:	f7ff fdfc 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
    graph.setScale(1);
 80034f2:	462a      	mov	r2, r5
 80034f4:	4631      	mov	r1, r6
 80034f6:	4638      	mov	r0, r7
 80034f8:	f7ff facc 	bl	8002a94 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    graph.setGraphRangeX(0, 100);
 80034fc:	4629      	mov	r1, r5
 80034fe:	4638      	mov	r0, r7
 8003500:	2264      	movs	r2, #100	@ 0x64
 8003502:	f7ff f909 	bl	8002718 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    graph.setGraphAreaMargin(10, 28, 19, 22);
 8003506:	2316      	movs	r3, #22
 8003508:	4638      	mov	r0, r7
 800350a:	221c      	movs	r2, #28
 800350c:	9300      	str	r3, [sp, #0]
 800350e:	210a      	movs	r1, #10
 8003510:	2313      	movs	r3, #19
        setIntervalScaled(abs(interval) * dataScale);
 8003512:	f04f 0914 	mov.w	r9, #20
 8003516:	f008 fdc4 	bl	800c0a2 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    graph.setGraphAreaPadding(2, 6, 0, 6);
 800351a:	462b      	mov	r3, r5
 800351c:	4652      	mov	r2, sl
 800351e:	4638      	mov	r0, r7
 8003520:	2102      	movs	r1, #2
 8003522:	f8cd a000 	str.w	sl, [sp]
 8003526:	f008 fcbf 	bl	800bea8 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    graph.setGraphRangeY(0, 180);
 800352a:	4629      	mov	r1, r5
 800352c:	4638      	mov	r0, r7
 800352e:	22b4      	movs	r2, #180	@ 0xb4
 8003530:	f7ff f983 	bl	800283a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>
 8003534:	f8d4 13d8 	ldr.w	r1, [r4, #984]	@ 0x3d8
        color = newColor;
 8003538:	4b5a      	ldr	r3, [pc, #360]	@ (80036a4 <_ZN12MainViewBaseC1Ev+0x3e4>)
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800353a:	4632      	mov	r2, r6
        setIntervalScaled(abs(interval) * dataScale);
 800353c:	fb09 f001 	mul.w	r0, r9, r1
        color = newColor;
 8003540:	f8c4 33d4 	str.w	r3, [r4, #980]	@ 0x3d4
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 8003544:	2800      	cmp	r0, #0
        lineWidth = width;
 8003546:	f884 63e0 	strb.w	r6, [r4, #992]	@ 0x3e0
 800354a:	bfb8      	it	lt
 800354c:	4240      	neglt	r0, r0
        gridInterval = abs(interval);
 800354e:	f8c4 03dc 	str.w	r0, [r4, #988]	@ 0x3dc
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8003552:	f008 fe59 	bl	800c208 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    graph.addGraphElement(graphMajorYAxisGrid);
 8003556:	9907      	ldr	r1, [sp, #28]
        dataScale = scale;
 8003558:	e9c4 60f6 	strd	r6, r0, [r4, #984]	@ 0x3d8
 800355c:	4638      	mov	r0, r7
 800355e:	f008 fcae 	bl	800bebe <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 8003562:	f8d4 1418 	ldr.w	r1, [r4, #1048]	@ 0x418
class TypedText
 8003566:	f04f 0c05 	mov.w	ip, #5
        color = newColor;
 800356a:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
        return i * scale;
 800356e:	fb09 f001 	mul.w	r0, r9, r1
 8003572:	f8a4 c424 	strh.w	ip, [r4, #1060]	@ 0x424
 8003576:	2800      	cmp	r0, #0
 8003578:	f8c4 2414 	str.w	r2, [r4, #1044]	@ 0x414
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800357c:	4632      	mov	r2, r6
 800357e:	bfb8      	it	lt
 8003580:	4240      	neglt	r0, r0
        labelInterval = abs(interval);
 8003582:	f8c4 041c 	str.w	r0, [r4, #1052]	@ 0x41c
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8003586:	f008 fe3f 	bl	800c208 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    graph.addBottomElement(graphMajorXAxisLabel);
 800358a:	9908      	ldr	r1, [sp, #32]
 800358c:	f8c4 041c 	str.w	r0, [r4, #1052]	@ 0x41c
 8003590:	4638      	mov	r0, r7
        dataScale = scale;
 8003592:	f8c4 6418 	str.w	r6, [r4, #1048]	@ 0x418
 8003596:	f008 fcb6 	bl	800bf06 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 800359a:	f8d4 1464 	ldr.w	r1, [r4, #1124]	@ 0x464
 800359e:	f04f 0e04 	mov.w	lr, #4
 80035a2:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 80035a6:	fb09 f001 	mul.w	r0, r9, r1
 80035aa:	f8a4 e470 	strh.w	lr, [r4, #1136]	@ 0x470
 80035ae:	2800      	cmp	r0, #0
 80035b0:	f8c4 2460 	str.w	r2, [r4, #1120]	@ 0x460
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80035b4:	4632      	mov	r2, r6
 80035b6:	bfb8      	it	lt
 80035b8:	4240      	neglt	r0, r0
        labelInterval = abs(interval);
 80035ba:	f8c4 0468 	str.w	r0, [r4, #1128]	@ 0x468
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80035be:	f008 fe23 	bl	800c208 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    graph.addLeftElement(graphMajorYAxisLabel);
 80035c2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80035c4:	f8c4 0468 	str.w	r0, [r4, #1128]	@ 0x468
 80035c8:	4638      	mov	r0, r7
        dataScale = scale;
 80035ca:	f8c4 6464 	str.w	r6, [r4, #1124]	@ 0x464
 80035ce:	f008 fc88 	bl	800bee2 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 80035d2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80035d4:	4b33      	ldr	r3, [pc, #204]	@ (80036a4 <_ZN12MainViewBaseC1Ev+0x3e4>)
    graph.addGraphElement(graphLine1);
 80035d6:	4638      	mov	r0, r7
 80035d8:	f8c4 24a8 	str.w	r2, [r4, #1192]	@ 0x4a8
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 80035dc:	f04f 0202 	mov.w	r2, #2
 80035e0:	f8c4 34bc 	str.w	r3, [r4, #1212]	@ 0x4bc
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80035e4:	f241 43b8 	movw	r3, #5304	@ 0x14b8
 80035e8:	f884 24ac 	strb.w	r2, [r4, #1196]	@ 0x4ac
 80035ec:	f8a4 34c0 	strh.w	r3, [r4, #1216]	@ 0x4c0
 80035f0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80035f2:	f008 fc64 	bl	800bebe <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
 80035f6:	4639      	mov	r1, r7
 80035f8:	4640      	mov	r0, r8
    sliderResolution.setupVerticalSlider(7, 3, 0, 0, 125);
 80035fa:	277d      	movs	r7, #125	@ 0x7d
 80035fc:	f006 fc94 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sliderResolution.setXY(422, 47);
 8003600:	4658      	mov	r0, fp
 8003602:	222f      	movs	r2, #47	@ 0x2f
 8003604:	f44f 71d3 	mov.w	r1, #422	@ 0x1a6
 8003608:	f7ff fd62 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
    sliderResolution.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
 800360c:	aa12      	add	r2, sp, #72	@ 0x48
 800360e:	f04f 0c05 	mov.w	ip, #5
 8003612:	f04f 0e04 	mov.w	lr, #4
 8003616:	4613      	mov	r3, r2
 8003618:	a910      	add	r1, sp, #64	@ 0x40
 800361a:	aa11      	add	r2, sp, #68	@ 0x44
 800361c:	4658      	mov	r0, fp
 800361e:	f8ad c040 	strh.w	ip, [sp, #64]	@ 0x40
 8003622:	f8ad e048 	strh.w	lr, [sp, #72]	@ 0x48
 8003626:	f8ad a044 	strh.w	sl, [sp, #68]	@ 0x44
 800362a:	f007 f98f 	bl	800a94c <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    sliderResolution.setupVerticalSlider(7, 3, 0, 0, 125);
 800362e:	462b      	mov	r3, r5
 8003630:	4658      	mov	r0, fp
 8003632:	2203      	movs	r2, #3
 8003634:	2107      	movs	r1, #7
 8003636:	e9cd 5700 	strd	r5, r7, [sp]
 800363a:	f007 f8f0 	bl	800a81e <_ZN8touchgfx6Slider19setupVerticalSliderEsssss>
    sliderResolution.setValueRange(20, 250);
 800363e:	22fa      	movs	r2, #250	@ 0xfa
 8003640:	4649      	mov	r1, r9
 8003642:	4658      	mov	r0, fp
 8003644:	f006 ff3d 	bl	800a4c2 <_ZN8touchgfx6Slider13setValueRangeEss>
    bt_send_hello.setAction(buttonCallback);
 8003648:	f504 590a 	add.w	r9, r4, #8832	@ 0x2280
    sliderResolution.setValue(180);
 800364c:	4658      	mov	r0, fp
 800364e:	21b4      	movs	r1, #180	@ 0xb4
 8003650:	f006 feff 	bl	800a452 <_ZN8touchgfx6Slider8setValueEs>
 8003654:	4659      	mov	r1, fp
 8003656:	4640      	mov	r0, r8
 8003658:	f04f 0b02 	mov.w	fp, #2
 800365c:	f006 fc64 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bt_send_hello.setAction(buttonCallback);
 8003660:	f109 0920 	add.w	r9, r9, #32
    bt_send_hello.setXY(199, 201);
 8003664:	9804      	ldr	r0, [sp, #16]
 8003666:	22c9      	movs	r2, #201	@ 0xc9
 8003668:	e01e      	b.n	80036a8 <_ZN12MainViewBaseC1Ev+0x3e8>
 800366a:	bf00      	nop
 800366c:	0802478c 	.word	0x0802478c
 8003670:	08025570 	.word	0x08025570
 8003674:	08025508 	.word	0x08025508
 8003678:	08024e74 	.word	0x08024e74
 800367c:	080245dc 	.word	0x080245dc
 8003680:	08024474 	.word	0x08024474
 8003684:	080251bc 	.word	0x080251bc
 8003688:	0802525c 	.word	0x0802525c
 800368c:	0802513c 	.word	0x0802513c
 8003690:	08024dc4 	.word	0x08024dc4
 8003694:	08023c30 	.word	0x08023c30
 8003698:	0802454c 	.word	0x0802454c
 800369c:	08024774 	.word	0x08024774
 80036a0:	08003099 	.word	0x08003099
 80036a4:	ff1497c5 	.word	0xff1497c5
 80036a8:	21c7      	movs	r1, #199	@ 0xc7
 80036aa:	f7ff fd11 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
    bt_send_hello.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 80036ae:	aa12      	add	r2, sp, #72	@ 0x48
 80036b0:	a911      	add	r1, sp, #68	@ 0x44
 80036b2:	9804      	ldr	r0, [sp, #16]
 80036b4:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 80036b8:	f8ad b048 	strh.w	fp, [sp, #72]	@ 0x48
 80036bc:	f00a fafe 	bl	800dcbc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80036c0:	9904      	ldr	r1, [sp, #16]
 80036c2:	4640      	mov	r0, r8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80036c4:	f8c4 95e0 	str.w	r9, [r4, #1504]	@ 0x5e0
 80036c8:	f006 fc2e 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setPosition(125, 9, 151, 30);
 80036cc:	231e      	movs	r3, #30
 80036ce:	4639      	mov	r1, r7
 80036d0:	9803      	ldr	r0, [sp, #12]
 80036d2:	9300      	str	r3, [sp, #0]
 80036d4:	2209      	movs	r2, #9
 80036d6:	2397      	movs	r3, #151	@ 0x97
        boundingArea = calculateBoundingArea();
 80036d8:	af0c      	add	r7, sp, #48	@ 0x30
 80036da:	f7ff fd06 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80036de:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 80036e2:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	@ 0x5ec
 80036e6:	4638      	mov	r0, r7
 80036e8:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 80036ea:	f8c4 261c 	str.w	r2, [r4, #1564]	@ 0x61c
        boundingArea = calculateBoundingArea();
 80036ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 80036f2:	f8a4 5620 	strh.w	r5, [r4, #1568]	@ 0x620
        boundingArea = calculateBoundingArea();
 80036f6:	4798      	blx	r3
 80036f8:	f504 63c5 	add.w	r3, r4, #1576	@ 0x628
 80036fc:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003700:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setWildcard(textArea1Buffer);
 8003704:	f204 636c 	addw	r3, r4, #1644	@ 0x66c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JOGG));
 8003708:	a912      	add	r1, sp, #72	@ 0x48
 800370a:	9803      	ldr	r0, [sp, #12]
        wc1 = value;
 800370c:	f8c4 3634 	str.w	r3, [r4, #1588]	@ 0x634
        : typedTextId(id)
 8003710:	4b12      	ldr	r3, [pc, #72]	@ (800375c <_ZN12MainViewBaseC1Ev+0x49c>)
    textArea1Buffer[0] = 0;
 8003712:	f8a4 566c 	strh.w	r5, [r4, #1644]	@ 0x66c
 8003716:	9312      	str	r3, [sp, #72]	@ 0x48
 8003718:	f8ad a04c 	strh.w	sl, [sp, #76]	@ 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JOGG));
 800371c:	f00a fa70 	bl	800dc00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003720:	9903      	ldr	r1, [sp, #12]
 8003722:	4640      	mov	r0, r8
 8003724:	f006 fc00 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    button1.setXY(0, -1);
 8003728:	4629      	mov	r1, r5
 800372a:	9805      	ldr	r0, [sp, #20]
 800372c:	f04f 32ff 	mov.w	r2, #4294967295
 8003730:	f7ff fcce 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 8003734:	aa12      	add	r2, sp, #72	@ 0x48
 8003736:	a911      	add	r1, sp, #68	@ 0x44
 8003738:	9805      	ldr	r0, [sp, #20]
 800373a:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 800373e:	f8ad b048 	strh.w	fp, [sp, #72]	@ 0x48
 8003742:	f00a fabb 	bl	800dcbc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003746:	4640      	mov	r0, r8
 8003748:	9905      	ldr	r1, [sp, #20]
 800374a:	f8c4 9660 	str.w	r9, [r4, #1632]	@ 0x660
 800374e:	f006 fbeb 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003752:	4620      	mov	r0, r4
 8003754:	b015      	add	sp, #84	@ 0x54
 8003756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800375a:	bf00      	nop
 800375c:	08023c30 	.word	0x08023c30

08003760 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_NotoSans_Regular_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_NotoSans_Regular_12_4bpp();

touchgfx::GeneratedFont& getFont_NotoSans_Regular_12_4bpp()
{
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 15, 14, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 8003760:	4770      	bx	lr
	...

08003764 <_Z32getFont_NotoSans_Regular_12_4bppv>:
{
 8003764:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 15, 14, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 8003766:	4d17      	ldr	r5, [pc, #92]	@ (80037c4 <_Z32getFont_NotoSans_Regular_12_4bppv+0x60>)
{
 8003768:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 15, 14, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 800376a:	682c      	ldr	r4, [r5, #0]
 800376c:	f3bf 8f5b 	dmb	ish
 8003770:	f014 0401 	ands.w	r4, r4, #1
 8003774:	d122      	bne.n	80037bc <_Z32getFont_NotoSans_Regular_12_4bppv+0x58>
 8003776:	4628      	mov	r0, r5
 8003778:	f01e f8ca 	bl	8021910 <__cxa_guard_acquire>
 800377c:	b1f0      	cbz	r0, 80037bc <_Z32getFont_NotoSans_Regular_12_4bppv+0x58>
 800377e:	233f      	movs	r3, #63	@ 0x3f
 8003780:	2201      	movs	r2, #1
 8003782:	4911      	ldr	r1, [pc, #68]	@ (80037c8 <_Z32getFont_NotoSans_Regular_12_4bppv+0x64>)
 8003784:	9309      	str	r3, [sp, #36]	@ 0x24
 8003786:	4b11      	ldr	r3, [pc, #68]	@ (80037cc <_Z32getFont_NotoSans_Regular_12_4bppv+0x68>)
 8003788:	4811      	ldr	r0, [pc, #68]	@ (80037d0 <_Z32getFont_NotoSans_Regular_12_4bppv+0x6c>)
 800378a:	9308      	str	r3, [sp, #32]
 800378c:	4b11      	ldr	r3, [pc, #68]	@ (80037d4 <_Z32getFont_NotoSans_Regular_12_4bppv+0x70>)
 800378e:	940a      	str	r4, [sp, #40]	@ 0x28
 8003790:	9405      	str	r4, [sp, #20]
 8003792:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003796:	2304      	movs	r3, #4
 8003798:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800379c:	230c      	movs	r3, #12
 800379e:	220f      	movs	r2, #15
 80037a0:	9300      	str	r3, [sp, #0]
 80037a2:	230e      	movs	r3, #14
 80037a4:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80037a8:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80037ac:	f7fe ff4e 	bl	800264c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80037b0:	4809      	ldr	r0, [pc, #36]	@ (80037d8 <_Z32getFont_NotoSans_Regular_12_4bppv+0x74>)
 80037b2:	f01e fe33 	bl	802241c <atexit>
 80037b6:	4628      	mov	r0, r5
 80037b8:	f01e f8b6 	bl	8021928 <__cxa_guard_release>
    return NotoSans_Regular_12_4bpp;
}
 80037bc:	4804      	ldr	r0, [pc, #16]	@ (80037d0 <_Z32getFont_NotoSans_Regular_12_4bppv+0x6c>)
 80037be:	b00f      	add	sp, #60	@ 0x3c
 80037c0:	bd30      	pop	{r4, r5, pc}
 80037c2:	bf00      	nop
 80037c4:	20003854 	.word	0x20003854
 80037c8:	900a6fb0 	.word	0x900a6fb0
 80037cc:	08025eac 	.word	0x08025eac
 80037d0:	20003858 	.word	0x20003858
 80037d4:	08025eb4 	.word	0x08025eb4
 80037d8:	08003761 	.word	0x08003761

080037dc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_18_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_18_4bpp();

touchgfx::GeneratedFont& getFont_verdana_18_4bpp()
{
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 24, 22, 18, 0, 0, 4, 1, 0, 0, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 80037dc:	4770      	bx	lr
	...

080037e0 <_Z23getFont_verdana_18_4bppv>:
{
 80037e0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 24, 22, 18, 0, 0, 4, 1, 0, 0, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 80037e2:	4d17      	ldr	r5, [pc, #92]	@ (8003840 <_Z23getFont_verdana_18_4bppv+0x60>)
{
 80037e4:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 24, 22, 18, 0, 0, 4, 1, 0, 0, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 80037e6:	682c      	ldr	r4, [r5, #0]
 80037e8:	f3bf 8f5b 	dmb	ish
 80037ec:	f014 0401 	ands.w	r4, r4, #1
 80037f0:	d122      	bne.n	8003838 <_Z23getFont_verdana_18_4bppv+0x58>
 80037f2:	4628      	mov	r0, r5
 80037f4:	f01e f88c 	bl	8021910 <__cxa_guard_acquire>
 80037f8:	b1f0      	cbz	r0, 8003838 <_Z23getFont_verdana_18_4bppv+0x58>
 80037fa:	233f      	movs	r3, #63	@ 0x3f
 80037fc:	2201      	movs	r2, #1
 80037fe:	4911      	ldr	r1, [pc, #68]	@ (8003844 <_Z23getFont_verdana_18_4bppv+0x64>)
 8003800:	9309      	str	r3, [sp, #36]	@ 0x24
 8003802:	4b11      	ldr	r3, [pc, #68]	@ (8003848 <_Z23getFont_verdana_18_4bppv+0x68>)
 8003804:	4811      	ldr	r0, [pc, #68]	@ (800384c <_Z23getFont_verdana_18_4bppv+0x6c>)
 8003806:	9308      	str	r3, [sp, #32]
 8003808:	4b11      	ldr	r3, [pc, #68]	@ (8003850 <_Z23getFont_verdana_18_4bppv+0x70>)
 800380a:	940a      	str	r4, [sp, #40]	@ 0x28
 800380c:	9405      	str	r4, [sp, #20]
 800380e:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003812:	2304      	movs	r3, #4
 8003814:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003818:	2312      	movs	r3, #18
 800381a:	2218      	movs	r2, #24
 800381c:	9300      	str	r3, [sp, #0]
 800381e:	2316      	movs	r3, #22
 8003820:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003824:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003828:	f7fe ff10 	bl	800264c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800382c:	4809      	ldr	r0, [pc, #36]	@ (8003854 <_Z23getFont_verdana_18_4bppv+0x74>)
 800382e:	f01e fdf5 	bl	802241c <atexit>
 8003832:	4628      	mov	r0, r5
 8003834:	f01e f878 	bl	8021928 <__cxa_guard_release>
    return verdana_18_4bpp;
}
 8003838:	4804      	ldr	r0, [pc, #16]	@ (800384c <_Z23getFont_verdana_18_4bppv+0x6c>)
 800383a:	b00f      	add	sp, #60	@ 0x3c
 800383c:	bd30      	pop	{r4, r5, pc}
 800383e:	bf00      	nop
 8003840:	20003884 	.word	0x20003884
 8003844:	900a7084 	.word	0x900a7084
 8003848:	08025eb0 	.word	0x08025eb0
 800384c:	20003888 	.word	0x20003888
 8003850:	08025eb8 	.word	0x08025eb8
 8003854:	080037dd 	.word	0x080037dd

08003858 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8003858:	2000      	movs	r0, #0
 800385a:	4770      	bx	lr

0800385c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 800385c:	2000      	movs	r0, #0
 800385e:	4770      	bx	lr

08003860 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003860:	b40e      	push	{r1, r2, r3}
 8003862:	b503      	push	{r0, r1, lr}
 8003864:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003866:	2100      	movs	r1, #0
{
 8003868:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800386c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800386e:	f00d fef9 	bl	8011664 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003872:	b002      	add	sp, #8
 8003874:	f85d eb04 	ldr.w	lr, [sp], #4
 8003878:	b003      	add	sp, #12
 800387a:	4770      	bx	lr

0800387c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800387c:	b40c      	push	{r2, r3}
 800387e:	b507      	push	{r0, r1, r2, lr}
 8003880:	ab04      	add	r3, sp, #16
 8003882:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003886:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003888:	f00d feec 	bl	8011664 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800388c:	b003      	add	sp, #12
 800388e:	f85d eb04 	ldr.w	lr, [sp], #4
 8003892:	b002      	add	sp, #8
 8003894:	4770      	bx	lr
	...

08003898 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003898:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 800389a:	b510      	push	{r4, lr}
 800389c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800389e:	b373      	cbz	r3, 80038fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80038a0:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 80038a2:	b92b      	cbnz	r3, 80038b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80038a4:	4b18      	ldr	r3, [pc, #96]	@ (8003908 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80038a6:	21c5      	movs	r1, #197	@ 0xc5
 80038a8:	4a18      	ldr	r2, [pc, #96]	@ (800390c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80038aa:	4819      	ldr	r0, [pc, #100]	@ (8003910 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80038ac:	f01e fd98 	bl	80223e0 <__assert_func>
            return buffer[pos];
 80038b0:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80038b2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80038b6:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 80038b8:	b30b      	cbz	r3, 80038fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80038ba:	f00f fa4f 	bl	8012d5c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80038be:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80038c0:	2b01      	cmp	r3, #1
 80038c2:	d803      	bhi.n	80038cc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80038c4:	4b13      	ldr	r3, [pc, #76]	@ (8003914 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80038c6:	21cb      	movs	r1, #203	@ 0xcb
 80038c8:	4a13      	ldr	r2, [pc, #76]	@ (8003918 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80038ca:	e7ee      	b.n	80038aa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80038cc:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80038ce:	f640 103f 	movw	r0, #2367	@ 0x93f
 80038d2:	1c53      	adds	r3, r2, #1
 80038d4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80038d6:	2b09      	cmp	r3, #9
 80038d8:	4619      	mov	r1, r3
 80038da:	bf88      	it	hi
 80038dc:	f1a3 010a 	subhi.w	r1, r3, #10
 80038e0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80038e4:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 80038e6:	4281      	cmp	r1, r0
 80038e8:	d109      	bne.n	80038fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80038ea:	2b0a      	cmp	r3, #10
 80038ec:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80038f0:	bf28      	it	cs
 80038f2:	2300      	movcs	r3, #0
            return buffer[pos];
 80038f4:	8c50      	ldrh	r0, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80038f6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80038fa:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 80038fc:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80038fe:	4620      	mov	r0, r4
}
 8003900:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003904:	f00f b92c 	b.w	8012b60 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003908:	080247bc 	.word	0x080247bc
 800390c:	080247c5 	.word	0x080247c5
 8003910:	08024870 	.word	0x08024870
 8003914:	080248ba 	.word	0x080248ba
 8003918:	080248c8 	.word	0x080248c8

0800391c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800391c:	f00f b8e9 	b.w	8012af2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003920 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003920:	b510      	push	{r4, lr}
 8003922:	b086      	sub	sp, #24
 8003924:	ac02      	add	r4, sp, #8
 8003926:	e884 0006 	stmia.w	r4, {r1, r2}
 800392a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800392c:	ab0a      	add	r3, sp, #40	@ 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800392e:	4621      	mov	r1, r4
    va_start(pArg, format);
 8003930:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003932:	9301      	str	r3, [sp, #4]
 8003934:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003936:	9300      	str	r3, [sp, #0]
 8003938:	9b08      	ldr	r3, [sp, #32]
 800393a:	f00c fb29 	bl	800ff90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800393e:	b006      	add	sp, #24
 8003940:	bd10      	pop	{r4, pc}
	...

08003944 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003944:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003946:	bb18      	cbnz	r0, 8003990 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003948:	4b12      	ldr	r3, [pc, #72]	@ (8003994 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800394a:	4813      	ldr	r0, [pc, #76]	@ (8003998 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800394c:	681c      	ldr	r4, [r3, #0]
 800394e:	4913      	ldr	r1, [pc, #76]	@ (800399c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003950:	b1b4      	cbz	r4, 8003980 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003952:	6822      	ldr	r2, [r4, #0]
 8003954:	4422      	add	r2, r4
 8003956:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003958:	6862      	ldr	r2, [r4, #4]
 800395a:	4422      	add	r2, r4
 800395c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800395e:	68a2      	ldr	r2, [r4, #8]
 8003960:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8003962:	4b0f      	ldr	r3, [pc, #60]	@ (80039a0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003964:	2200      	movs	r2, #0
 8003966:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003968:	f000 f838 	bl	80039dc <_ZN17TypedTextDatabase8getFontsEv>
 800396c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800396e:	f000 f833 	bl	80039d8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003972:	4b0c      	ldr	r3, [pc, #48]	@ (80039a4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003974:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003976:	4b0c      	ldr	r3, [pc, #48]	@ (80039a8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003978:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800397a:	4b0c      	ldr	r3, [pc, #48]	@ (80039ac <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800397c:	8018      	strh	r0, [r3, #0]
    }
}
 800397e:	e007      	b.n	8003990 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003980:	4b0b      	ldr	r3, [pc, #44]	@ (80039b0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003982:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003984:	4b0b      	ldr	r3, [pc, #44]	@ (80039b4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003986:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003988:	4b0b      	ldr	r3, [pc, #44]	@ (80039b8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800398a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800398c:	2c00      	cmp	r4, #0
 800398e:	d1e8      	bne.n	8003962 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003990:	bd38      	pop	{r3, r4, r5, pc}
 8003992:	bf00      	nop
 8003994:	200038c0 	.word	0x200038c0
 8003998:	200038b8 	.word	0x200038b8
 800399c:	200038b4 	.word	0x200038b4
 80039a0:	200038bc 	.word	0x200038bc
 80039a4:	20016ce0 	.word	0x20016ce0
 80039a8:	20016ce8 	.word	0x20016ce8
 80039ac:	20016ce4 	.word	0x20016ce4
 80039b0:	900a71f0 	.word	0x900a71f0
 80039b4:	900a71d4 	.word	0x900a71d4
 80039b8:	900a722c 	.word	0x900a722c

080039bc <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80039bc:	4b04      	ldr	r3, [pc, #16]	@ (80039d0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80039be:	681b      	ldr	r3, [r3, #0]
 80039c0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80039c4:	4b03      	ldr	r3, [pc, #12]	@ (80039d4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80039c6:	681b      	ldr	r3, [r3, #0]
}
 80039c8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80039cc:	4770      	bx	lr
 80039ce:	bf00      	nop
 80039d0:	200038b4 	.word	0x200038b4
 80039d4:	200038b8 	.word	0x200038b8

080039d8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80039d8:	2007      	movs	r0, #7
 80039da:	4770      	bx	lr

080039dc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80039dc:	4800      	ldr	r0, [pc, #0]	@ (80039e0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80039de:	4770      	bx	lr
 80039e0:	200038c4 	.word	0x200038c4

080039e4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 1:
        touchgfx_fonts[1] = &(getFont_verdana_18_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80039e4:	b510      	push	{r4, lr}
};
 80039e6:	4c04      	ldr	r4, [pc, #16]	@ (80039f8 <_GLOBAL__sub_I_touchgfx_fonts+0x14>)
    &(getFont_NotoSans_Regular_12_4bpp()),
 80039e8:	f7ff febc 	bl	8003764 <_Z32getFont_NotoSans_Regular_12_4bppv>
};
 80039ec:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_18_4bpp())
 80039ee:	f7ff fef7 	bl	80037e0 <_Z23getFont_verdana_18_4bppv>
};
 80039f2:	6060      	str	r0, [r4, #4]
} // namespace TypedTextDatabase
 80039f4:	bd10      	pop	{r4, pc}
 80039f6:	bf00      	nop
 80039f8:	200038c4 	.word	0x200038c4

080039fc <_ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80039fc:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 80039fe:	4770      	bx	lr

08003a00 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard2Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return wc2;
    }
 8003a00:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8003a02:	4770      	bx	lr

08003a04 <_ZN14sensorViewBaseD1Ev>:
}

sensorViewBase::~sensorViewBase()
{

}
 8003a04:	4770      	bx	lr

08003a06 <_ZN14sensorViewBase11setupScreenEv>:

void sensorViewBase::setupScreen()
{

}
 8003a06:	4770      	bx	lr

08003a08 <_ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev>:
class TextAreaWithTwoWildcards : public TextAreaWithWildcardBase
 8003a08:	4770      	bx	lr

08003a0a <_ZN8touchgfx24TextAreaWithTwoWildcardsD0Ev>:
 8003a0a:	b510      	push	{r4, lr}
 8003a0c:	4604      	mov	r4, r0
 8003a0e:	2150      	movs	r1, #80	@ 0x50
 8003a10:	f01d ff7c 	bl	802190c <_ZdlPvj>
 8003a14:	4620      	mov	r0, r4
 8003a16:	bd10      	pop	{r4, pc}

08003a18 <_ZN14sensorViewBaseD0Ev>:
sensorViewBase::~sensorViewBase()
 8003a18:	b510      	push	{r4, lr}
 8003a1a:	4604      	mov	r4, r0
}
 8003a1c:	f44f 71ca 	mov.w	r1, #404	@ 0x194
 8003a20:	f01d ff74 	bl	802190c <_ZdlPvj>
 8003a24:	4620      	mov	r0, r4
 8003a26:	bd10      	pop	{r4, pc}

08003a28 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8003a28:	b538      	push	{r3, r4, r5, lr}
 8003a2a:	4604      	mov	r4, r0
 8003a2c:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8003a2e:	2226      	movs	r2, #38	@ 0x26
 8003a30:	2100      	movs	r1, #0
 8003a32:	f01e ff71 	bl	8022918 <memset>
 8003a36:	4620      	mov	r0, r4
 8003a38:	f7ff fb6a 	bl	8003110 <_ZN8touchgfx6WidgetC1Ev>
 8003a3c:	4b06      	ldr	r3, [pc, #24]	@ (8003a58 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
        Image::setBitmap(bmp);
 8003a3e:	4620      	mov	r0, r4
 8003a40:	4629      	mov	r1, r5
        : Widget(), bitmap(bmp), alpha(255)
 8003a42:	6023      	str	r3, [r4, #0]
 8003a44:	882b      	ldrh	r3, [r5, #0]
 8003a46:	84e3      	strh	r3, [r4, #38]	@ 0x26
 8003a48:	23ff      	movs	r3, #255	@ 0xff
 8003a4a:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
        Image::setBitmap(bmp);
 8003a4e:	f00a fb03 	bl	800e058 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8003a52:	4620      	mov	r0, r4
 8003a54:	bd38      	pop	{r3, r4, r5, pc}
 8003a56:	bf00      	nop
 8003a58:	08025570 	.word	0x08025570

08003a5c <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8003a5c:	b510      	push	{r4, lr}
 8003a5e:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003a60:	2226      	movs	r2, #38	@ 0x26
 8003a62:	2100      	movs	r1, #0
 8003a64:	f01e ff58 	bl	8022918 <memset>
 8003a68:	4620      	mov	r0, r4
 8003a6a:	f7ff fb51 	bl	8003110 <_ZN8touchgfx6WidgetC1Ev>
 8003a6e:	4b0a      	ldr	r3, [pc, #40]	@ (8003a98 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003a70:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
    }
 8003a74:	4620      	mov	r0, r4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003a76:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8003a78:	4b08      	ldr	r3, [pc, #32]	@ (8003a9c <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8003a7a:	62a3      	str	r3, [r4, #40]	@ 0x28
 8003a7c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003a80:	85a3      	strh	r3, [r4, #44]	@ 0x2c
 8003a82:	2300      	movs	r3, #0
 8003a84:	e9c4 320c 	strd	r3, r2, [r4, #48]	@ 0x30
 8003a88:	f04f 32ff 	mov.w	r2, #4294967295
 8003a8c:	8723      	strh	r3, [r4, #56]	@ 0x38
 8003a8e:	63e3      	str	r3, [r4, #60]	@ 0x3c
              text(0)
 8003a90:	e9c4 2310 	strd	r2, r3, [r4, #64]	@ 0x40
    }
 8003a94:	bd10      	pop	{r4, pc}
 8003a96:	bf00      	nop
 8003a98:	0802539c 	.word	0x0802539c
 8003a9c:	08023c30 	.word	0x08023c30

08003aa0 <_ZN14sensorViewBaseC1Ev>:
sensorViewBase::sensorViewBase()
 8003aa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003aa4:	4604      	mov	r4, r0
 8003aa6:	b08b      	sub	sp, #44	@ 0x2c
 8003aa8:	2500      	movs	r5, #0
 8003aaa:	f00e fa7b 	bl	8011fa4 <_ZN8touchgfx6ScreenC1Ev>
 8003aae:	4627      	mov	r7, r4
 8003ab0:	4b82      	ldr	r3, [pc, #520]	@ (8003cbc <_ZN14sensorViewBaseC1Ev+0x21c>)
        : Widget(), alpha(255), color(0)
 8003ab2:	2226      	movs	r2, #38	@ 0x26
 8003ab4:	4629      	mov	r1, r5
 8003ab6:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003ab8:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 8003abc:	f847 3b40 	str.w	r3, [r7], #64
 8003ac0:	4638      	mov	r0, r7
 8003ac2:	f01e ff29 	bl	8022918 <memset>
 8003ac6:	4638      	mov	r0, r7
 8003ac8:	f7ff fb22 	bl	8003110 <_ZN8touchgfx6WidgetC1Ev>
 8003acc:	4b7c      	ldr	r3, [pc, #496]	@ (8003cc0 <_ZN14sensorViewBaseC1Ev+0x220>)
 8003ace:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 8003ad2:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8003ad6:	6423      	str	r3, [r4, #64]	@ 0x40
 8003ad8:	23ff      	movs	r3, #255	@ 0xff
 8003ada:	f104 08c4 	add.w	r8, r4, #196	@ 0xc4
 8003ade:	a908      	add	r1, sp, #32
 8003ae0:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 8003ae4:	4658      	mov	r0, fp
        : color(col)
 8003ae6:	66a5      	str	r5, [r4, #104]	@ 0x68
 8003ae8:	f504 7986 	add.w	r9, r4, #268	@ 0x10c
 8003aec:	f8ad 6020 	strh.w	r6, [sp, #32]
 8003af0:	f7ff ff9a 	bl	8003a28 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003af4:	a908      	add	r1, sp, #32
 8003af6:	4650      	mov	r0, sl
 8003af8:	f8ad 6020 	strh.w	r6, [sp, #32]
 8003afc:	f7ff ff94 	bl	8003a28 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003b00:	4640      	mov	r0, r8
 8003b02:	f7ff ffab 	bl	8003a5c <_ZN8touchgfx8TextAreaC1Ev>
 8003b06:	a908      	add	r1, sp, #32
 8003b08:	4648      	mov	r0, r9
 8003b0a:	f8ad 6020 	strh.w	r6, [sp, #32]
 8003b0e:	f7ff ff8b 	bl	8003a28 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003b12:	f504 739c 	add.w	r3, r4, #312	@ 0x138
 8003b16:	1d26      	adds	r6, r4, #4
        : TextArea()
 8003b18:	4618      	mov	r0, r3
 8003b1a:	9303      	str	r3, [sp, #12]
 8003b1c:	f7ff ff9e 	bl	8003a5c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0), wc2(0)
 8003b20:	4b68      	ldr	r3, [pc, #416]	@ (8003cc4 <_ZN14sensorViewBaseC1Ev+0x224>)
    __background.setPosition(0, 0, 480, 272);
 8003b22:	462a      	mov	r2, r5
 8003b24:	4638      	mov	r0, r7
 8003b26:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
 8003b2a:	f44f 7388 	mov.w	r3, #272	@ 0x110
 8003b2e:	4629      	mov	r1, r5
 8003b30:	e9c4 5560 	strd	r5, r5, [r4, #384]	@ 0x180
 8003b34:	9300      	str	r3, [sp, #0]
 8003b36:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8003b3a:	f7ff fad6 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003b3e:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003b42:	4639      	mov	r1, r7
 8003b44:	4630      	mov	r0, r6
 8003b46:	66a3      	str	r3, [r4, #104]	@ 0x68
        boundingArea = calculateBoundingArea();
 8003b48:	af04      	add	r7, sp, #16
 8003b4a:	f006 f9ed 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 8003b4e:	462a      	mov	r2, r5
 8003b50:	4658      	mov	r0, fp
 8003b52:	4629      	mov	r1, r5
 8003b54:	f7ff fabc 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_DARK_ID));
 8003b58:	4658      	mov	r0, fp
 8003b5a:	a908      	add	r1, sp, #32
 8003b5c:	f8ad 5020 	strh.w	r5, [sp, #32]
 8003b60:	f00a fa7a 	bl	800e058 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003b64:	4659      	mov	r1, fp
 8003b66:	4630      	mov	r0, r6
 8003b68:	f04f 0b03 	mov.w	fp, #3
 8003b6c:	f006 f9dc 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(54, 34);
 8003b70:	2222      	movs	r2, #34	@ 0x22
 8003b72:	4650      	mov	r0, sl
 8003b74:	2136      	movs	r1, #54	@ 0x36
 8003b76:	f7ff faab 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
 8003b7a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 8003b7c:	4650      	mov	r0, sl
 8003b7e:	a908      	add	r1, sp, #32
 8003b80:	f8ad 3020 	strh.w	r3, [sp, #32]
 8003b84:	f00a fa68 	bl	800e058 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003b88:	4651      	mov	r1, sl
 8003b8a:	4630      	mov	r0, r6
 8003b8c:	f006 f9cc 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 35);
 8003b90:	2223      	movs	r2, #35	@ 0x23
 8003b92:	2136      	movs	r1, #54	@ 0x36
 8003b94:	4640      	mov	r0, r8
 8003b96:	f7ff fa9b 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003b9a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 8003b9e:	4641      	mov	r1, r8
 8003ba0:	4638      	mov	r0, r7
        color = newColor;
 8003ba2:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
    touchgfx::Unicode::snprintf(text_temperatureBuffer1, TEXT_TEMPERATUREBUFFER1_SIZE, "%s", touchgfx::TypedText(T_RESOURCEID1).getText());
 8003ba6:	f504 7ac4 	add.w	sl, r4, #392	@ 0x188
        linespace = space;
 8003baa:	f8a4 50f8 	strh.w	r5, [r4, #248]	@ 0xf8
        boundingArea = calculateBoundingArea();
 8003bae:	f009 fd8d 	bl	800d6cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003bb2:	f504 7c80 	add.w	ip, r4, #256	@ 0x100
 8003bb6:	4b44      	ldr	r3, [pc, #272]	@ (8003cc8 <_ZN14sensorViewBaseC1Ev+0x228>)
 8003bb8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003bbc:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y7C1));
 8003bc0:	a908      	add	r1, sp, #32
 8003bc2:	4640      	mov	r0, r8
 8003bc4:	9308      	str	r3, [sp, #32]
 8003bc6:	f8ad b024 	strh.w	fp, [sp, #36]	@ 0x24
 8003bca:	f00a f819 	bl	800dc00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003bce:	4641      	mov	r1, r8
 8003bd0:	4630      	mov	r0, r6
 8003bd2:	f006 f9a9 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(60, 140);
 8003bd6:	228c      	movs	r2, #140	@ 0x8c
 8003bd8:	4648      	mov	r0, r9
 8003bda:	213c      	movs	r1, #60	@ 0x3c
 8003bdc:	f7ff fa78 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
 8003be0:	2308      	movs	r3, #8
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 8003be2:	4648      	mov	r0, r9
 8003be4:	a908      	add	r1, sp, #32
 8003be6:	f8ad 3020 	strh.w	r3, [sp, #32]
 8003bea:	f00a fa35 	bl	800e058 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003bee:	4649      	mov	r1, r9
 8003bf0:	4630      	mov	r0, r6
 8003bf2:	f006 f999 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_temperature.setPosition(66, 149, 118, 39);
 8003bf6:	2327      	movs	r3, #39	@ 0x27
 8003bf8:	2295      	movs	r2, #149	@ 0x95
 8003bfa:	2142      	movs	r1, #66	@ 0x42
 8003bfc:	9803      	ldr	r0, [sp, #12]
 8003bfe:	9300      	str	r3, [sp, #0]
 8003c00:	2376      	movs	r3, #118	@ 0x76
 8003c02:	f7ff fa72 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003c06:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 8003c0a:	9903      	ldr	r1, [sp, #12]
 8003c0c:	4638      	mov	r0, r7
        color = newColor;
 8003c0e:	f8c4 3168 	str.w	r3, [r4, #360]	@ 0x168
        boundingArea = calculateBoundingArea();
 8003c12:	f8d4 3138 	ldr.w	r3, [r4, #312]	@ 0x138
        linespace = space;
 8003c16:	f8a4 516c 	strh.w	r5, [r4, #364]	@ 0x16c
        boundingArea = calculateBoundingArea();
 8003c1a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003c1e:	4798      	blx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c20:	f8df 90c0 	ldr.w	r9, [pc, #192]	@ 8003ce4 <_ZN14sensorViewBaseC1Ev+0x244>
 8003c24:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 8003c28:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003c2c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003c30:	f8d9 3000 	ldr.w	r3, [r9]
 8003c34:	b92b      	cbnz	r3, 8003c42 <_ZN14sensorViewBaseC1Ev+0x1a2>
 8003c36:	4b25      	ldr	r3, [pc, #148]	@ (8003ccc <_ZN14sensorViewBaseC1Ev+0x22c>)
 8003c38:	2160      	movs	r1, #96	@ 0x60
 8003c3a:	4a25      	ldr	r2, [pc, #148]	@ (8003cd0 <_ZN14sensorViewBaseC1Ev+0x230>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003c3c:	4825      	ldr	r0, [pc, #148]	@ (8003cd4 <_ZN14sensorViewBaseC1Ev+0x234>)
 8003c3e:	f01e fbcf 	bl	80223e0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003c42:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 8003ce8 <_ZN14sensorViewBaseC1Ev+0x248>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003c46:	f8b8 3000 	ldrh.w	r3, [r8]
 8003c4a:	b91b      	cbnz	r3, 8003c54 <_ZN14sensorViewBaseC1Ev+0x1b4>
 8003c4c:	4b22      	ldr	r3, [pc, #136]	@ (8003cd8 <_ZN14sensorViewBaseC1Ev+0x238>)
 8003c4e:	2161      	movs	r1, #97	@ 0x61
 8003c50:	4a1f      	ldr	r2, [pc, #124]	@ (8003cd0 <_ZN14sensorViewBaseC1Ev+0x230>)
 8003c52:	e7f3      	b.n	8003c3c <_ZN14sensorViewBaseC1Ev+0x19c>
        return texts->getText(typedTextId);
 8003c54:	4f21      	ldr	r7, [pc, #132]	@ (8003cdc <_ZN14sensorViewBaseC1Ev+0x23c>)
 8003c56:	4629      	mov	r1, r5
    touchgfx::Unicode::snprintf(text_temperatureBuffer2, TEXT_TEMPERATUREBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IQT9).getText());
 8003c58:	f504 75c7 	add.w	r5, r4, #398	@ 0x18e
 8003c5c:	6838      	ldr	r0, [r7, #0]
 8003c5e:	f7ff fead 	bl	80039bc <_ZNK8touchgfx5Texts7getTextEt>
    touchgfx::Unicode::snprintf(text_temperatureBuffer1, TEXT_TEMPERATUREBUFFER1_SIZE, "%s", touchgfx::TypedText(T_RESOURCEID1).getText());
 8003c62:	4a1f      	ldr	r2, [pc, #124]	@ (8003ce0 <_ZN14sensorViewBaseC1Ev+0x240>)
 8003c64:	4603      	mov	r3, r0
 8003c66:	4659      	mov	r1, fp
 8003c68:	4650      	mov	r0, sl
 8003c6a:	f00f fe31 	bl	80138d0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c6e:	f8d9 3000 	ldr.w	r3, [r9]
        wc1 = value;
 8003c72:	f8c4 a180 	str.w	sl, [r4, #384]	@ 0x180
 8003c76:	2b00      	cmp	r3, #0
 8003c78:	d0dd      	beq.n	8003c36 <_ZN14sensorViewBaseC1Ev+0x196>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003c7a:	f8b8 3000 	ldrh.w	r3, [r8]
 8003c7e:	2b01      	cmp	r3, #1
 8003c80:	d9e4      	bls.n	8003c4c <_ZN14sensorViewBaseC1Ev+0x1ac>
        return texts->getText(typedTextId);
 8003c82:	2101      	movs	r1, #1
 8003c84:	6838      	ldr	r0, [r7, #0]
 8003c86:	f7ff fe99 	bl	80039bc <_ZNK8touchgfx5Texts7getTextEt>
    touchgfx::Unicode::snprintf(text_temperatureBuffer2, TEXT_TEMPERATUREBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IQT9).getText());
 8003c8a:	4a15      	ldr	r2, [pc, #84]	@ (8003ce0 <_ZN14sensorViewBaseC1Ev+0x240>)
 8003c8c:	4603      	mov	r3, r0
 8003c8e:	4659      	mov	r1, fp
 8003c90:	4628      	mov	r0, r5
 8003c92:	f00f fe1d 	bl	80138d0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003c96:	4b0c      	ldr	r3, [pc, #48]	@ (8003cc8 <_ZN14sensorViewBaseC1Ev+0x228>)
    text_temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MTPN));
 8003c98:	a908      	add	r1, sp, #32
 8003c9a:	9803      	ldr	r0, [sp, #12]
 8003c9c:	9308      	str	r3, [sp, #32]
 8003c9e:	2302      	movs	r3, #2
        wc2 = value;
 8003ca0:	f8c4 5184 	str.w	r5, [r4, #388]	@ 0x184
 8003ca4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003ca8:	f009 ffaa 	bl	800dc00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003cac:	4630      	mov	r0, r6
 8003cae:	9903      	ldr	r1, [sp, #12]
 8003cb0:	f006 f93a 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003cb4:	4620      	mov	r0, r4
 8003cb6:	b00b      	add	sp, #44	@ 0x2c
 8003cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003cbc:	08024a80 	.word	0x08024a80
 8003cc0:	0802542c 	.word	0x0802542c
 8003cc4:	080249f0 	.word	0x080249f0
 8003cc8:	08023c30 	.word	0x08023c30
 8003ccc:	08024206 	.word	0x08024206
 8003cd0:	0802499a 	.word	0x0802499a
 8003cd4:	08024283 	.word	0x08024283
 8003cd8:	080242ca 	.word	0x080242ca
 8003cdc:	20016cec 	.word	0x20016cec
 8003ce0:	080249e5 	.word	0x080249e5
 8003ce4:	20016ce0 	.word	0x20016ce0
 8003ce8:	20016ce4 	.word	0x20016ce4

08003cec <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003cec:	4770      	bx	lr

08003cee <_ZN19FrontendApplicationD0Ev>:
 8003cee:	b510      	push	{r4, lr}
 8003cf0:	4604      	mov	r4, r0
 8003cf2:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003cf6:	f01d fe09 	bl	802190c <_ZdlPvj>
 8003cfa:	4620      	mov	r0, r4
 8003cfc:	bd10      	pop	{r4, pc}

08003cfe <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003cfe:	b510      	push	{r4, lr}
 8003d00:	4604      	mov	r4, r0
    {
        model.tick();
 8003d02:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8003d06:	f000 f8fc 	bl	8003f02 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003d0a:	4620      	mov	r0, r4
    }
 8003d0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003d10:	f00c bddc 	b.w	80108cc <_ZN8touchgfx11Application15handleTickEventEv>

08003d14 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003d14:	b510      	push	{r4, lr}
 8003d16:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003d18:	f7fe fc16 	bl	8002548 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003d1c:	4b01      	ldr	r3, [pc, #4]	@ (8003d24 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8003d1e:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 8003d20:	6023      	str	r3, [r4, #0]
}
 8003d22:	bd10      	pop	{r4, pc}
 8003d24:	08024ab4 	.word	0x08024ab4

08003d28 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 8003d28:	4770      	bx	lr

08003d2a <_ZThn4_N13MainPresenterD1Ev>:
 8003d2a:	3804      	subs	r0, #4
 8003d2c:	4770      	bx	lr

08003d2e <_ZN13MainPresenter10deactivateEv>:
}

void MainPresenter::activate()
{

}
 8003d2e:	4770      	bx	lr

08003d30 <_ZN13MainPresenterD0Ev>:
 8003d30:	b510      	push	{r4, lr}
 8003d32:	4604      	mov	r4, r0
 8003d34:	2110      	movs	r1, #16
 8003d36:	f01d fde9 	bl	802190c <_ZdlPvj>
 8003d3a:	4620      	mov	r0, r4
 8003d3c:	bd10      	pop	{r4, pc}

08003d3e <_ZThn4_N13MainPresenterD0Ev>:
 8003d3e:	f1a0 0004 	sub.w	r0, r0, #4
 8003d42:	e7f5      	b.n	8003d30 <_ZN13MainPresenterD0Ev>

08003d44 <_ZN13MainPresenter9con_sh_bcEv>:

}

void MainPresenter::con_sh_bc()
{
	model->push_button();
 8003d44:	6880      	ldr	r0, [r0, #8]
 8003d46:	f000 b8dd 	b.w	8003f04 <_ZN5Model11push_buttonEv>
	...

08003d4c <_ZN13MainPresenterC1ER8MainView>:
    ModelListener() : model(0) {}
 8003d4c:	2200      	movs	r2, #0
    : view(v)
 8003d4e:	60c1      	str	r1, [r0, #12]
 8003d50:	6082      	str	r2, [r0, #8]
 8003d52:	4a02      	ldr	r2, [pc, #8]	@ (8003d5c <_ZN13MainPresenterC1ER8MainView+0x10>)
 8003d54:	6002      	str	r2, [r0, #0]
 8003d56:	3220      	adds	r2, #32
 8003d58:	6042      	str	r2, [r0, #4]
}
 8003d5a:	4770      	bx	lr
 8003d5c:	08024b08 	.word	0x08024b08

08003d60 <_ZN8MainView14tearDownScreenEv>:
}

void MainView::tearDownScreen()
{
    MainViewBase::tearDownScreen();
}
 8003d60:	4770      	bx	lr

08003d62 <_ZN8MainView10send_helloEv>:
    graphMajorYAxisGrid.invalidate();
}

void MainView::send_hello()
{
	presenter->con_sh_bc();
 8003d62:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8003d64:	6803      	ldr	r3, [r0, #0]
 8003d66:	695b      	ldr	r3, [r3, #20]
 8003d68:	4718      	bx	r3
	...

08003d6c <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    virtual ~MainView() {}
 8003d6c:	4b03      	ldr	r3, [pc, #12]	@ (8003d7c <_ZN8MainViewD1Ev+0x10>)
 8003d6e:	b510      	push	{r4, lr}
 8003d70:	4604      	mov	r4, r0
 8003d72:	6003      	str	r3, [r0, #0]
 8003d74:	f7ff f8ea 	bl	8002f4c <_ZN12MainViewBaseD1Ev>
 8003d78:	4620      	mov	r0, r4
 8003d7a:	bd10      	pop	{r4, pc}
 8003d7c:	08024b38 	.word	0x08024b38

08003d80 <_ZN8MainViewD0Ev>:
 8003d80:	b510      	push	{r4, lr}
 8003d82:	4604      	mov	r4, r0
 8003d84:	f7ff fff2 	bl	8003d6c <_ZN8MainViewD1Ev>
 8003d88:	f242 21b4 	movw	r1, #8884	@ 0x22b4
 8003d8c:	4620      	mov	r0, r4
 8003d8e:	f01d fdbd 	bl	802190c <_ZdlPvj>
 8003d92:	4620      	mov	r0, r4
 8003d94:	bd10      	pop	{r4, pc}
	...

08003d98 <_ZN8MainView15handleTickEventEv>:
{
 8003d98:	b570      	push	{r4, r5, r6, lr}
    tickCounter++;
 8003d9a:	f500 5500 	add.w	r5, r0, #8192	@ 0x2000
{
 8003d9e:	4604      	mov	r4, r0
    presenter->tick();
 8003da0:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
    tickCounter++;
 8003da2:	f8d5 32b0 	ldr.w	r3, [r5, #688]	@ 0x2b0
 8003da6:	3301      	adds	r3, #1
{
 8003da8:	ed2d 8b02 	vpush	{d8}
    tickCounter++;
 8003dac:	f8c5 32b0 	str.w	r3, [r5, #688]	@ 0x2b0
    presenter->tick();
 8003db0:	6803      	ldr	r3, [r0, #0]
 8003db2:	691b      	ldr	r3, [r3, #16]
 8003db4:	4798      	blx	r3
    if (tickCounter % 2 == 0)
 8003db6:	f8d5 52b0 	ldr.w	r5, [r5, #688]	@ 0x2b0
 8003dba:	07eb      	lsls	r3, r5, #31
 8003dbc:	d447      	bmi.n	8003e4e <_ZN8MainView15handleTickEventEv+0xb6>
        return scaled2float(i, yScale);
 8003dbe:	f8d4 6100 	ldr.w	r6, [r4, #256]	@ 0x100
        return (float)i / (float)scale;
 8003dc2:	edd4 7a81 	vldr	s15, [r4, #516]	@ 0x204
 8003dc6:	ee07 6a10 	vmov	s14, r6
 8003dca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003dce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8003dd2:	ee87 8a87 	vdiv.f32	s16, s15, s14
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 8003dd6:	ee07 5a90 	vmov	s15, r5
 8003dda:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003dde:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 8003e54 <_ZN8MainView15handleTickEventEv+0xbc>
 8003de2:	ee20 0a27 	vmul.f32	s0, s0, s15
 8003de6:	f01d fdb9 	bl	802195c <sinf>
 8003dea:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8003dee:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 8003e58 <_ZN8MainView15handleTickEventEv+0xc0>
    const uint16_t num = (seed * (1337 + last)) % 0xFFFF;
 8003df2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8003df6:	4919      	ldr	r1, [pc, #100]	@ (8003e5c <_ZN8MainView15handleTickEventEv+0xc4>)
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 8003df8:	ee30 0a27 	vadd.f32	s0, s0, s15
    const uint16_t num = (seed * (1337 + last)) % 0xFFFF;
 8003dfc:	880b      	ldrh	r3, [r1, #0]
 8003dfe:	f203 5339 	addw	r3, r3, #1337	@ 0x539
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 8003e02:	eec8 7a07 	vdiv.f32	s15, s16, s14
    const uint16_t num = (seed * (1337 + last)) % 0xFFFF;
 8003e06:	436b      	muls	r3, r5
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 8003e08:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
    const uint16_t num = (seed * (1337 + last)) % 0xFFFF;
 8003e0c:	fb93 f2f2 	sdiv	r2, r3, r2
 8003e10:	ebc2 4202 	rsb	r2, r2, r2, lsl #16
 8003e14:	1a9b      	subs	r3, r3, r2
 8003e16:	800b      	strh	r3, [r1, #0]
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 8003e18:	b29b      	uxth	r3, r3
 8003e1a:	ee20 0a27 	vmul.f32	s0, s0, s15
 8003e1e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003e22:	ee17 1a90 	vmov	r1, s15
 8003e26:	eec8 7a07 	vdiv.f32	s15, s16, s14
}
 8003e2a:	ecbd 8b02 	vpop	{d8}
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 8003e2e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003e32:	ee17 2a90 	vmov	r2, s15
 8003e36:	fb93 f0f2 	sdiv	r0, r3, r2
 8003e3a:	fb02 3310 	mls	r3, r2, r0, r3
        return addDataPointScaled(int2scaledY(y));
 8003e3e:	f104 00cc 	add.w	r0, r4, #204	@ 0xcc
 8003e42:	4419      	add	r1, r3
 8003e44:	4371      	muls	r1, r6
}
 8003e46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003e4a:	f008 ba36 	b.w	800c2ba <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
 8003e4e:	ecbd 8b02 	vpop	{d8}
 8003e52:	bd70      	pop	{r4, r5, r6, pc}
 8003e54:	3ca3d70a 	.word	0x3ca3d70a
 8003e58:	400ccccd 	.word	0x400ccccd
 8003e5c:	200038cc 	.word	0x200038cc

08003e60 <_ZN8MainViewC1Ev>:
MainView::MainView()
 8003e60:	b510      	push	{r4, lr}
 8003e62:	4604      	mov	r4, r0
 8003e64:	f7ff fa2c 	bl	80032c0 <_ZN12MainViewBaseC1Ev>
 8003e68:	4b04      	ldr	r3, [pc, #16]	@ (8003e7c <_ZN8MainViewC1Ev+0x1c>)
    tickCounter = 0;
 8003e6a:	2200      	movs	r2, #0
}
 8003e6c:	4620      	mov	r0, r4
MainView::MainView()
 8003e6e:	6023      	str	r3, [r4, #0]
    tickCounter = 0;
 8003e70:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 8003e74:	f8c3 22b0 	str.w	r2, [r3, #688]	@ 0x2b0
}
 8003e78:	bd10      	pop	{r4, pc}
 8003e7a:	bf00      	nop
 8003e7c:	08024b38 	.word	0x08024b38

08003e80 <_ZN8MainView11setupScreenEv>:
{
 8003e80:	b510      	push	{r4, lr}
 8003e82:	4604      	mov	r4, r0
    MainViewBase::setupScreen();
 8003e84:	f7ff f815 	bl	8002eb2 <_ZN12MainViewBase11setupScreenEv>
    sliderValueChanged(sliderResolution.getValue());
 8003e88:	6823      	ldr	r3, [r4, #0]
 8003e8a:	4620      	mov	r0, r4
 8003e8c:	f9b4 14f2 	ldrsh.w	r1, [r4, #1266]	@ 0x4f2
 8003e90:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
}
 8003e92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sliderValueChanged(sliderResolution.getValue());
 8003e96:	4718      	bx	r3

08003e98 <_ZN8MainView18sliderValueChangedEi>:
{
 8003e98:	b570      	push	{r4, r5, r6, lr}
        return i * scale;
 8003e9a:	f8d0 2100 	ldr.w	r2, [r0, #256]	@ 0x100
    graph.setGraphRangeY(0, value);
 8003e9e:	f100 06cc 	add.w	r6, r0, #204	@ 0xcc
{
 8003ea2:	4604      	mov	r4, r0
 8003ea4:	460d      	mov	r5, r1
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8003ea6:	434a      	muls	r2, r1
 8003ea8:	4630      	mov	r0, r6
 8003eaa:	2100      	movs	r1, #0
 8003eac:	f007 fdf4 	bl	800ba98 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>
    graph.invalidate();
 8003eb0:	4630      	mov	r0, r6
 8003eb2:	f00d fd02 	bl	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
    if (value > 199)
 8003eb6:	2dc7      	cmp	r5, #199	@ 0xc7
 8003eb8:	f8d4 3464 	ldr.w	r3, [r4, #1124]	@ 0x464
 8003ebc:	f8d4 23d8 	ldr.w	r2, [r4, #984]	@ 0x3d8
 8003ec0:	dd17      	ble.n	8003ef2 <_ZN8MainView18sliderValueChangedEi+0x5a>
        return i * scale;
 8003ec2:	2132      	movs	r1, #50	@ 0x32
 8003ec4:	434b      	muls	r3, r1
    graphMajorYAxisLabel.invalidate();
 8003ec6:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 8003eca:	2b00      	cmp	r3, #0
 8003ecc:	bfb8      	it	lt
 8003ece:	425b      	neglt	r3, r3
        labelInterval = abs(interval);
 8003ed0:	f8c4 3468 	str.w	r3, [r4, #1128]	@ 0x468
        setIntervalScaled(abs(interval) * dataScale);
 8003ed4:	fb01 f302 	mul.w	r3, r1, r2
 8003ed8:	2b00      	cmp	r3, #0
 8003eda:	bfb8      	it	lt
 8003edc:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 8003ede:	f8c4 33dc 	str.w	r3, [r4, #988]	@ 0x3dc
 8003ee2:	f007 fd4d 	bl	800b980 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    graphMajorYAxisGrid.invalidate();
 8003ee6:	f504 706a 	add.w	r0, r4, #936	@ 0x3a8
}
 8003eea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    graphMajorYAxisGrid.invalidate();
 8003eee:	f007 bd47 	b.w	800b980 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    else if (value > 100)
 8003ef2:	2d64      	cmp	r5, #100	@ 0x64
 8003ef4:	bfcc      	ite	gt
 8003ef6:	2114      	movgt	r1, #20
 8003ef8:	210a      	movle	r1, #10
 8003efa:	e7e3      	b.n	8003ec4 <_ZN8MainView18sliderValueChangedEi+0x2c>

08003efc <_ZN5ModelC1Ev>:
#include <gui/model/ModelListener.hpp>
#include "bluetoothinterface.h"

extern void push_bt_button(void);

Model::Model() : modelListener(0)
 8003efc:	2200      	movs	r2, #0
 8003efe:	6002      	str	r2, [r0, #0]
{

}
 8003f00:	4770      	bx	lr

08003f02 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003f02:	4770      	bx	lr

08003f04 <_ZN5Model11push_buttonEv>:

void Model::push_button()
{
	push_bt_button();
 8003f04:	f7fc be82 	b.w	8000c0c <_Z14push_bt_buttonv>

08003f08 <_ZN15sensorPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();
    virtual void tick();
    virtual ~sensorPresenter() {}
 8003f08:	4770      	bx	lr

08003f0a <_ZThn4_N15sensorPresenterD1Ev>:
 8003f0a:	3804      	subs	r0, #4
 8003f0c:	4770      	bx	lr

08003f0e <_ZN15sensorPresenter10deactivateEv>:
}

void sensorPresenter::activate()
{

}
 8003f0e:	4770      	bx	lr

08003f10 <_ZN15sensorPresenterD0Ev>:
 8003f10:	b510      	push	{r4, lr}
 8003f12:	4604      	mov	r4, r0
 8003f14:	2110      	movs	r1, #16
 8003f16:	f01d fcf9 	bl	802190c <_ZdlPvj>
 8003f1a:	4620      	mov	r0, r4
 8003f1c:	bd10      	pop	{r4, pc}

08003f1e <_ZThn4_N15sensorPresenterD0Ev>:
 8003f1e:	f1a0 0004 	sub.w	r0, r0, #4
 8003f22:	e7f5      	b.n	8003f10 <_ZN15sensorPresenterD0Ev>

08003f24 <_ZN15sensorPresenter4tickEv>:
{

}

void sensorPresenter::tick()
{
 8003f24:	b537      	push	{r0, r1, r2, r4, r5, lr}
	if(strncmp(rx_data,"S1",2)==0){
 8003f26:	4c0e      	ldr	r4, [pc, #56]	@ (8003f60 <_ZN15sensorPresenter4tickEv+0x3c>)
{
 8003f28:	4605      	mov	r5, r0
	if(strncmp(rx_data,"S1",2)==0){
 8003f2a:	2202      	movs	r2, #2
 8003f2c:	490d      	ldr	r1, [pc, #52]	@ (8003f64 <_ZN15sensorPresenter4tickEv+0x40>)
 8003f2e:	4620      	mov	r0, r4
 8003f30:	f01e fcfa 	bl	8022928 <strncmp>
 8003f34:	b988      	cbnz	r0, 8003f5a <_ZN15sensorPresenter4tickEv+0x36>
		char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8003f36:	78a3      	ldrb	r3, [r4, #2]
		view.update_text(change_data, 4);
 8003f38:	2204      	movs	r2, #4
 8003f3a:	68e8      	ldr	r0, [r5, #12]
		char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8003f3c:	f88d 3004 	strb.w	r3, [sp, #4]
		view.update_text(change_data, 4);
 8003f40:	eb0d 0102 	add.w	r1, sp, r2
		char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8003f44:	78e3      	ldrb	r3, [r4, #3]
 8003f46:	f88d 3005 	strb.w	r3, [sp, #5]
 8003f4a:	7923      	ldrb	r3, [r4, #4]
 8003f4c:	f88d 3006 	strb.w	r3, [sp, #6]
 8003f50:	7963      	ldrb	r3, [r4, #5]
 8003f52:	f88d 3007 	strb.w	r3, [sp, #7]
		view.update_text(change_data, 4);
 8003f56:	f000 f841 	bl	8003fdc <_ZN10sensorView11update_textEPKct>
	}
}
 8003f5a:	b003      	add	sp, #12
 8003f5c:	bd30      	pop	{r4, r5, pc}
 8003f5e:	bf00      	nop
 8003f60:	20000140 	.word	0x20000140
 8003f64:	08024b6c 	.word	0x08024b6c

08003f68 <_ZN15sensorPresenterC1ER10sensorView>:
 8003f68:	2200      	movs	r2, #0
    : view(v)
 8003f6a:	60c1      	str	r1, [r0, #12]
 8003f6c:	6082      	str	r2, [r0, #8]
 8003f6e:	4a02      	ldr	r2, [pc, #8]	@ (8003f78 <_ZN15sensorPresenterC1ER10sensorView+0x10>)
 8003f70:	6002      	str	r2, [r0, #0]
 8003f72:	321c      	adds	r2, #28
 8003f74:	6042      	str	r2, [r0, #4]
}
 8003f76:	4770      	bx	lr
 8003f78:	08024b78 	.word	0x08024b78

08003f7c <_ZN10sensorView15handleTickEventEv>:
    sensorViewBase::setupScreen();
}

void sensorView::handleTickEvent()
{
    tickCounter++;
 8003f7c:	f8d0 3194 	ldr.w	r3, [r0, #404]	@ 0x194
 8003f80:	3301      	adds	r3, #1
 8003f82:	f8c0 3194 	str.w	r3, [r0, #404]	@ 0x194
    presenter->tick();
 8003f86:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8003f88:	6803      	ldr	r3, [r0, #0]
 8003f8a:	691b      	ldr	r3, [r3, #16]
 8003f8c:	4718      	bx	r3

08003f8e <_ZN10sensorView14tearDownScreenEv>:
}
void sensorView::tearDownScreen()
{
    sensorViewBase::tearDownScreen();
}
 8003f8e:	4770      	bx	lr

08003f90 <_ZN10sensorViewD1Ev>:

class sensorView : public sensorViewBase
{
public:
    sensorView();
    virtual ~sensorView() {}
 8003f90:	4b03      	ldr	r3, [pc, #12]	@ (8003fa0 <_ZN10sensorViewD1Ev+0x10>)
 8003f92:	b510      	push	{r4, lr}
 8003f94:	4604      	mov	r4, r0
 8003f96:	6003      	str	r3, [r0, #0]
 8003f98:	f7ff fd34 	bl	8003a04 <_ZN14sensorViewBaseD1Ev>
 8003f9c:	4620      	mov	r0, r4
 8003f9e:	bd10      	pop	{r4, pc}
 8003fa0:	08024ba4 	.word	0x08024ba4

08003fa4 <_ZN10sensorViewD0Ev>:
 8003fa4:	b510      	push	{r4, lr}
 8003fa6:	4604      	mov	r4, r0
 8003fa8:	f7ff fff2 	bl	8003f90 <_ZN10sensorViewD1Ev>
 8003fac:	f44f 71cc 	mov.w	r1, #408	@ 0x198
 8003fb0:	4620      	mov	r0, r4
 8003fb2:	f01d fcab 	bl	802190c <_ZdlPvj>
 8003fb6:	4620      	mov	r0, r4
 8003fb8:	bd10      	pop	{r4, pc}
	...

08003fbc <_ZN10sensorViewC1Ev>:
sensorView::sensorView()
 8003fbc:	b510      	push	{r4, lr}
 8003fbe:	4604      	mov	r4, r0
 8003fc0:	f7ff fd6e 	bl	8003aa0 <_ZN14sensorViewBaseC1Ev>
 8003fc4:	4b03      	ldr	r3, [pc, #12]	@ (8003fd4 <_ZN10sensorViewC1Ev+0x18>)
}
 8003fc6:	4620      	mov	r0, r4
sensorView::sensorView()
 8003fc8:	6023      	str	r3, [r4, #0]
	tickCounter = 0;
 8003fca:	2300      	movs	r3, #0
 8003fcc:	f8c4 3194 	str.w	r3, [r4, #404]	@ 0x194
}
 8003fd0:	bd10      	pop	{r4, pc}
 8003fd2:	bf00      	nop
 8003fd4:	08024ba4 	.word	0x08024ba4

08003fd8 <_ZN10sensorView11setupScreenEv>:
    sensorViewBase::setupScreen();
 8003fd8:	f7ff bd15 	b.w	8003a06 <_ZN14sensorViewBase11setupScreenEv>

08003fdc <_ZN10sensorView11update_textEPKct>:

void sensorView::update_text(const char* data, uint16_t size)
{
 8003fdc:	b513      	push	{r0, r1, r4, lr}
	Unicode::UnicodeChar ch_data1[2];
	Unicode::UnicodeChar ch_data2[2];
	ch_data1[0]= (uint16_t)data[0];
 8003fde:	780b      	ldrb	r3, [r1, #0]
{
 8003fe0:	4604      	mov	r4, r0
	ch_data1[1]= (uint16_t)data[1];
	ch_data2[0]= (uint16_t)data[2];
	ch_data2[1]= (uint16_t)data[3];
    Unicode::strncpy(text_temperatureBuffer1, ch_data1, 3);
 8003fe2:	2203      	movs	r2, #3
 8003fe4:	f500 70c4 	add.w	r0, r0, #392	@ 0x188
	ch_data1[0]= (uint16_t)data[0];
 8003fe8:	f8ad 3000 	strh.w	r3, [sp]
	ch_data1[1]= (uint16_t)data[1];
 8003fec:	784b      	ldrb	r3, [r1, #1]
 8003fee:	f8ad 3002 	strh.w	r3, [sp, #2]
	ch_data2[0]= (uint16_t)data[2];
 8003ff2:	788b      	ldrb	r3, [r1, #2]
 8003ff4:	f8ad 3004 	strh.w	r3, [sp, #4]
	ch_data2[1]= (uint16_t)data[3];
 8003ff8:	78cb      	ldrb	r3, [r1, #3]
    Unicode::strncpy(text_temperatureBuffer1, ch_data1, 3);
 8003ffa:	4669      	mov	r1, sp
	ch_data2[1]= (uint16_t)data[3];
 8003ffc:	f8ad 3006 	strh.w	r3, [sp, #6]
    Unicode::strncpy(text_temperatureBuffer1, ch_data1, 3);
 8004000:	f00f f8f5 	bl	80131ee <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    Unicode::strncpy(text_temperatureBuffer2, ch_data2, 3);
 8004004:	2203      	movs	r2, #3
 8004006:	a901      	add	r1, sp, #4
 8004008:	f504 70c7 	add.w	r0, r4, #398	@ 0x18e
 800400c:	f00f f8ef 	bl	80131ee <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    text_temperatureBuffer1[2]= '\0';
 8004010:	2300      	movs	r3, #0
    text_temperatureBuffer2[2]= '\0';
    text_temperature.invalidate(); // 화면 갱신
 8004012:	f504 709c 	add.w	r0, r4, #312	@ 0x138
    text_temperatureBuffer1[2]= '\0';
 8004016:	f8a4 318c 	strh.w	r3, [r4, #396]	@ 0x18c
    text_temperatureBuffer2[2]= '\0';
 800401a:	f8a4 3192 	strh.w	r3, [r4, #402]	@ 0x192
    text_temperature.invalidate(); // 화면 갱신
 800401e:	f00d fc4c 	bl	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8004022:	b002      	add	sp, #8
 8004024:	bd10      	pop	{r4, pc}
	...

08004028 <Bluetooth_init>:
#include "cmsis_os.h"
#include <stdlib.h> // malloc과 free를 사용하기 위한 헤더 파일

Bluetooth bt;

void Bluetooth_init(Bluetooth* bt, UART_HandleTypeDef* huart, void (*rx_callback)(uint8_t* data, uint16_t size), void (*tx_callback)(void)) {
 8004028:	b570      	push	{r4, r5, r6, lr}
 800402a:	4605      	mov	r5, r0
    bt->rx_index = 0;
 800402c:	2400      	movs	r4, #0
    bt->huart = huart;
    bt->bluetooth_rx_callback = rx_callback;
    bt->bluetooth_tx_callback = tx_callback;
    bt->tx_complete = 1; // 전송 완료 플래그 초기화
 800402e:	2601      	movs	r6, #1
void Bluetooth_init(Bluetooth* bt, UART_HandleTypeDef* huart, void (*rx_callback)(uint8_t* data, uint16_t size), void (*tx_callback)(void)) {
 8004030:	4608      	mov	r0, r1
    bt->huart = huart;
 8004032:	6029      	str	r1, [r5, #0]
    bt->rx_index = 0;
 8004034:	f8a5 4104 	strh.w	r4, [r5, #260]	@ 0x104
    bt->tx_complete = 1; // 전송 완료 플래그 초기화
 8004038:	f885 6106 	strb.w	r6, [r5, #262]	@ 0x106
    bt->bluetooth_tx_callback = tx_callback;
 800403c:	e9c5 2342 	strd	r2, r3, [r5, #264]	@ 0x108

    // UART 초기화 코드
    huart->Instance = UART7;
    huart->Init.BaudRate = 9600;
 8004040:	4a0b      	ldr	r2, [pc, #44]	@ (8004070 <Bluetooth_init+0x48>)
 8004042:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
    huart->Init.WordLength = UART_WORDLENGTH_8B;
    huart->Init.StopBits = UART_STOPBITS_1;
    huart->Init.Parity = UART_PARITY_NONE;
 8004046:	610c      	str	r4, [r1, #16]
    huart->Init.Mode = UART_MODE_TX_RX;
    huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
    huart->Init.OverSampling = UART_OVERSAMPLING_16;
 8004048:	61cc      	str	r4, [r1, #28]
    huart->Init.BaudRate = 9600;
 800404a:	e9c1 2300 	strd	r2, r3, [r1]
    huart->Init.Mode = UART_MODE_TX_RX;
 800404e:	230c      	movs	r3, #12
    huart->Init.StopBits = UART_STOPBITS_1;
 8004050:	e9c1 4402 	strd	r4, r4, [r1, #8]
    huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004054:	e9c1 3405 	strd	r3, r4, [r1, #20]
    if (HAL_UART_Init(huart) != HAL_OK) {
 8004058:	f003 fb18 	bl	800768c <HAL_UART_Init>
        // 초기화 오류 처리
        // 오류 처리 코드 추가
    }

    // UART 인터럽트 활성화
    HAL_NVIC_SetPriority(UART7_IRQn, 0, 1);
 800405c:	4632      	mov	r2, r6
 800405e:	4621      	mov	r1, r4
 8004060:	2052      	movs	r0, #82	@ 0x52
 8004062:	f000 fb23 	bl	80046ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART7_IRQn);
 8004066:	2052      	movs	r0, #82	@ 0x52

    // 첫 수신 인터럽트 시작
    //HAL_UART_Receive_IT(huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
}
 8004068:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(UART7_IRQn);
 800406c:	f000 bb50 	b.w	8004710 <HAL_NVIC_EnableIRQ>
 8004070:	40007800 	.word	0x40007800

08004074 <Bluetooth_write_data>:


void Bluetooth_write_data(Bluetooth* bt, uint8_t* data, uint16_t size) {
 8004074:	b508      	push	{r3, lr}
    bt->tx_complete = 0; // 전송 완료 플래그 초기화
 8004076:	2300      	movs	r3, #0
 8004078:	f880 3106 	strb.w	r3, [r0, #262]	@ 0x106
#if 0
    if (HAL_UART_Transmit_IT(bt->huart, data, size) != HAL_OK) {
#else
    if (HAL_UART_Transmit(bt->huart, data, size, -1) != HAL_OK) {
 800407c:	f04f 33ff 	mov.w	r3, #4294967295
 8004080:	6800      	ldr	r0, [r0, #0]
 8004082:	f003 fa90 	bl	80075a6 <HAL_UART_Transmit>
 8004086:	b100      	cbz	r0, 800408a <Bluetooth_write_data+0x16>
#endif
        // 전송 오류 처리
        	while(1){
 8004088:	e7fe      	b.n	8004088 <Bluetooth_write_data+0x14>
            // 오류 처리 루프
        	}
    }

}
 800408a:	bd08      	pop	{r3, pc}

0800408c <Bluetooth_handle_rx_interrupt>:
// 전송 완료 콜백 함수


void Bluetooth_handle_rx_interrupt(Bluetooth* bt) {
    // 버퍼 오버플로 방지
    if (bt->rx_index >= sizeof(bt->rx_buffer)) {
 800408c:	f8b0 3104 	ldrh.w	r3, [r0, #260]	@ 0x104
        bt->rx_index = 0;
    }
    bt->rx_index++;
    // 다음 수신을 위한 인터럽트 설정
    HAL_UART_Receive_IT(bt->huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
 8004090:	2201      	movs	r2, #1
    if (bt->rx_index >= sizeof(bt->rx_buffer)) {
 8004092:	2bff      	cmp	r3, #255	@ 0xff
        bt->rx_index = 0;
 8004094:	bf88      	it	hi
 8004096:	2300      	movhi	r3, #0
void Bluetooth_handle_rx_interrupt(Bluetooth* bt) {
 8004098:	b510      	push	{r4, lr}
        bt->rx_index = 0;
 800409a:	bf88      	it	hi
 800409c:	f8a0 3104 	strhhi.w	r3, [r0, #260]	@ 0x104
void Bluetooth_handle_rx_interrupt(Bluetooth* bt) {
 80040a0:	4604      	mov	r4, r0
    bt->rx_index++;
 80040a2:	f8b0 1104 	ldrh.w	r1, [r0, #260]	@ 0x104
 80040a6:	3101      	adds	r1, #1
 80040a8:	b289      	uxth	r1, r1
 80040aa:	f8a0 1104 	strh.w	r1, [r0, #260]	@ 0x104
    HAL_UART_Receive_IT(bt->huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
 80040ae:	3104      	adds	r1, #4
 80040b0:	4401      	add	r1, r0
 80040b2:	6800      	ldr	r0, [r0, #0]
 80040b4:	f003 fb72 	bl	800779c <HAL_UART_Receive_IT>


    // 수신된 문자가 '\n'일 경우, 이전 문자가 '\r'인지 확인
    if (bt->rx_buffer[bt->rx_index - 1] == '\n' && bt->rx_buffer[bt->rx_index - 2] == '\r') {
 80040b8:	f8b4 1104 	ldrh.w	r1, [r4, #260]	@ 0x104
 80040bc:	1863      	adds	r3, r4, r1
 80040be:	78da      	ldrb	r2, [r3, #3]
 80040c0:	2a0a      	cmp	r2, #10
 80040c2:	d10a      	bne.n	80040da <Bluetooth_handle_rx_interrupt+0x4e>
 80040c4:	789b      	ldrb	r3, [r3, #2]
 80040c6:	2b0d      	cmp	r3, #13
 80040c8:	d107      	bne.n	80040da <Bluetooth_handle_rx_interrupt+0x4e>
        // 수신된 데이터를 콜백으로 전달
        if (bt->bluetooth_rx_callback) {
 80040ca:	f8d4 3108 	ldr.w	r3, [r4, #264]	@ 0x108
 80040ce:	b10b      	cbz	r3, 80040d4 <Bluetooth_handle_rx_interrupt+0x48>
            bt->bluetooth_rx_callback(bt->rx_buffer, bt->rx_index);
 80040d0:	1d20      	adds	r0, r4, #4
 80040d2:	4798      	blx	r3
        }
        bt->rx_index = 0;
 80040d4:	2300      	movs	r3, #0
 80040d6:	f8a4 3104 	strh.w	r3, [r4, #260]	@ 0x104
    }
}
 80040da:	bd10      	pop	{r4, pc}

080040dc <UART7_IRQHandler>:

void UART7_IRQHandler(void) {
    HAL_UART_IRQHandler(bt.huart);
 80040dc:	4b01      	ldr	r3, [pc, #4]	@ (80040e4 <UART7_IRQHandler+0x8>)
 80040de:	6818      	ldr	r0, [r3, #0]
 80040e0:	f002 beaa 	b.w	8006e38 <HAL_UART_IRQHandler>
 80040e4:	200038d0 	.word	0x200038d0

080040e8 <QSPI_AutoPollingMemReady.constprop.0>:
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout
  * @retval None
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80040e8:	b500      	push	{lr}
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80040ea:	f44f 7280 	mov.w	r2, #256	@ 0x100
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80040ee:	b095      	sub	sp, #84	@ 0x54
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80040f0:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80040f4:	4603      	mov	r3, r0
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80040f6:	920c      	str	r2, [sp, #48]	@ 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80040f8:	2205      	movs	r2, #5
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80040fa:	910f      	str	r1, [sp, #60]	@ 0x3c
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 80040fc:	2101      	movs	r1, #1
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80040fe:	9206      	str	r2, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004100:	2200      	movs	r2, #0
  s_config.Mask            = N25Q128A_SR_WIP;
 8004102:	9101      	str	r1, [sp, #4]
  s_command.DummyCycles       = 0;
 8004104:	920b      	str	r2, [sp, #44]	@ 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004106:	9213      	str	r2, [sp, #76]	@ 0x4c
  s_config.Match           = 0;
 8004108:	9200      	str	r2, [sp, #0]
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
  s_config.Interval        = 0x10;
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 800410a:	480b      	ldr	r0, [pc, #44]	@ (8004138 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
  s_config.StatusBytesSize = 1;
 800410c:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004110:	e9cd 220d 	strd	r2, r2, [sp, #52]	@ 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004114:	e9cd 2211 	strd	r2, r2, [sp, #68]	@ 0x44
  s_config.Interval        = 0x10;
 8004118:	2210      	movs	r2, #16
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 800411a:	a906      	add	r1, sp, #24
  s_config.Interval        = 0x10;
 800411c:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800411e:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8004122:	9205      	str	r2, [sp, #20]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8004124:	466a      	mov	r2, sp
 8004126:	f001 fd83 	bl	8005c30 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 800412a:	3800      	subs	r0, #0
 800412c:	bf18      	it	ne
 800412e:	2001      	movne	r0, #1
 8004130:	b015      	add	sp, #84	@ 0x54
 8004132:	f85d fb04 	ldr.w	pc, [sp], #4
 8004136:	bf00      	nop
 8004138:	200039e0 	.word	0x200039e0

0800413c <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 800413c:	b500      	push	{lr}
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800413e:	f44f 7380 	mov.w	r3, #256	@ 0x100
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8004142:	b095      	sub	sp, #84	@ 0x54
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004144:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004148:	4817      	ldr	r0, [pc, #92]	@ (80041a8 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800414a:	930c      	str	r3, [sp, #48]	@ 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800414c:	2306      	movs	r3, #6
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800414e:	a906      	add	r1, sp, #24
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8004150:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004152:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004154:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
  s_command.DataMode          = QSPI_DATA_NONE;
 8004158:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.DummyCycles       = 0;
 800415a:	930b      	str	r3, [sp, #44]	@ 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800415c:	9313      	str	r3, [sp, #76]	@ 0x4c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800415e:	e9cd 3311 	strd	r3, r3, [sp, #68]	@ 0x44
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004162:	f001 fd20 	bl	8005ba6 <HAL_QSPI_Command>
 8004166:	b9e0      	cbnz	r0, 80041a2 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8004168:	2302      	movs	r3, #2
  s_config.Interval        = 0x10;
 800416a:	2201      	movs	r2, #1
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800416c:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8004170:	9004      	str	r0, [sp, #16]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004172:	480d      	ldr	r0, [pc, #52]	@ (80041a8 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_config.Mask            = N25Q128A_SR_WREN;
 8004174:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8004178:	2310      	movs	r3, #16
 800417a:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800417e:	2305      	movs	r3, #5
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004180:	466a      	mov	r2, sp
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8004182:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8004186:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800418a:	a906      	add	r1, sp, #24
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800418c:	930f      	str	r3, [sp, #60]	@ 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800418e:	f241 3388 	movw	r3, #5000	@ 0x1388
 8004192:	f001 fd4d 	bl	8005c30 <HAL_QSPI_AutoPolling>
 8004196:	3800      	subs	r0, #0
 8004198:	bf18      	it	ne
 800419a:	2001      	movne	r0, #1
}
 800419c:	b015      	add	sp, #84	@ 0x54
 800419e:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 80041a2:	2001      	movs	r0, #1
 80041a4:	e7fa      	b.n	800419c <QSPI_WriteEnable.constprop.0+0x60>
 80041a6:	bf00      	nop
 80041a8:	200039e0 	.word	0x200039e0

080041ac <BSP_QSPI_EnableMemoryMappedMode>:
{
 80041ac:	b500      	push	{lr}
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80041ae:	f44f 7380 	mov.w	r3, #256	@ 0x100
{
 80041b2:	b091      	sub	sp, #68	@ 0x44
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80041b4:	f04f 7240 	mov.w	r2, #50331648	@ 0x3000000
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80041b8:	480e      	ldr	r0, [pc, #56]	@ (80041f4 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80041ba:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 80041bc:	23eb      	movs	r3, #235	@ 0xeb
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80041be:	a902      	add	r1, sp, #8
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 80041c0:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 80041c2:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 80041c6:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 80041c8:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80041cc:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80041ce:	2300      	movs	r3, #0
 80041d0:	e9cd 320a 	strd	r3, r2, [sp, #40]	@ 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 80041d4:	220a      	movs	r2, #10
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80041d6:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 80041d8:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80041da:	466a      	mov	r2, sp
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80041dc:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 80041e0:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80041e4:	f001 fd75 	bl	8005cd2 <HAL_QSPI_MemoryMapped>
}
 80041e8:	3800      	subs	r0, #0
 80041ea:	bf18      	it	ne
 80041ec:	2001      	movne	r0, #1
 80041ee:	b011      	add	sp, #68	@ 0x44
 80041f0:	f85d fb04 	ldr.w	pc, [sp], #4
 80041f4:	200039e0 	.word	0x200039e0

080041f8 <BSP_QSPI_MspInit>:
  QSPI_CLK_ENABLE();
 80041f8:	4b45      	ldr	r3, [pc, #276]	@ (8004310 <BSP_QSPI_MspInit+0x118>)
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 80041fa:	2101      	movs	r1, #1
  QSPI_CLK_ENABLE();
 80041fc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80041fe:	f042 0202 	orr.w	r2, r2, #2
{
 8004202:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPI_CLK_ENABLE();
 8004204:	639a      	str	r2, [r3, #56]	@ 0x38
{
 8004206:	b08d      	sub	sp, #52	@ 0x34
  QSPI_CLK_ENABLE();
 8004208:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 800420a:	2409      	movs	r4, #9
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800420c:	4d41      	ldr	r5, [pc, #260]	@ (8004314 <BSP_QSPI_MspInit+0x11c>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800420e:	2704      	movs	r7, #4
  QSPI_CLK_ENABLE();
 8004210:	f002 0202 	and.w	r2, r2, #2
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8004214:	2600      	movs	r6, #0
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004216:	4628      	mov	r0, r5
  QSPI_CLK_ENABLE();
 8004218:	9200      	str	r2, [sp, #0]
 800421a:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 800421c:	699a      	ldr	r2, [r3, #24]
 800421e:	f042 0202 	orr.w	r2, r2, #2
 8004222:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8004224:	699a      	ldr	r2, [r3, #24]
 8004226:	f022 0202 	bic.w	r2, r2, #2
 800422a:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 800422c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800422e:	f042 0202 	orr.w	r2, r2, #2
 8004232:	631a      	str	r2, [r3, #48]	@ 0x30
 8004234:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004236:	f002 0202 	and.w	r2, r2, #2
 800423a:	9201      	str	r2, [sp, #4]
 800423c:	9a01      	ldr	r2, [sp, #4]
  QSPI_CLK_GPIO_CLK_ENABLE();
 800423e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004240:	f042 0202 	orr.w	r2, r2, #2
 8004244:	631a      	str	r2, [r3, #48]	@ 0x30
 8004246:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004248:	f002 0202 	and.w	r2, r2, #2
 800424c:	9202      	str	r2, [sp, #8]
 800424e:	9a02      	ldr	r2, [sp, #8]
  QSPI_D0_GPIO_CLK_ENABLE();
 8004250:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004252:	f042 0208 	orr.w	r2, r2, #8
 8004256:	631a      	str	r2, [r3, #48]	@ 0x30
 8004258:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800425a:	f002 0208 	and.w	r2, r2, #8
 800425e:	9203      	str	r2, [sp, #12]
 8004260:	9a03      	ldr	r2, [sp, #12]
  QSPI_D1_GPIO_CLK_ENABLE();
 8004262:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004264:	f042 0208 	orr.w	r2, r2, #8
 8004268:	631a      	str	r2, [r3, #48]	@ 0x30
 800426a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800426c:	f002 0208 	and.w	r2, r2, #8
 8004270:	9204      	str	r2, [sp, #16]
 8004272:	9a04      	ldr	r2, [sp, #16]
  QSPI_D2_GPIO_CLK_ENABLE();
 8004274:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004276:	f042 0210 	orr.w	r2, r2, #16
 800427a:	631a      	str	r2, [r3, #48]	@ 0x30
 800427c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800427e:	f002 0210 	and.w	r2, r2, #16
 8004282:	9205      	str	r2, [sp, #20]
 8004284:	9a05      	ldr	r2, [sp, #20]
  QSPI_D3_GPIO_CLK_ENABLE();
 8004286:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004288:	f042 0208 	orr.w	r2, r2, #8
 800428c:	631a      	str	r2, [r3, #48]	@ 0x30
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 800428e:	2240      	movs	r2, #64	@ 0x40
  QSPI_D3_GPIO_CLK_ENABLE();
 8004290:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004292:	f003 0308 	and.w	r3, r3, #8
 8004296:	9306      	str	r3, [sp, #24]
 8004298:	9b06      	ldr	r3, [sp, #24]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 800429a:	2302      	movs	r3, #2
 800429c:	e9cd 2307 	strd	r2, r3, [sp, #28]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 80042a0:	2303      	movs	r3, #3
 80042a2:	e9cd 1309 	strd	r1, r3, [sp, #36]	@ 0x24
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 80042a6:	230a      	movs	r3, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80042a8:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 80042aa:	930b      	str	r3, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80042ac:	f000 fc48 	bl	8004b40 <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80042b0:	a907      	add	r1, sp, #28
 80042b2:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80042b4:	9707      	str	r7, [sp, #28]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80042b6:	9609      	str	r6, [sp, #36]	@ 0x24
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80042b8:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80042ba:	f000 fc41 	bl	8004b40 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D0_PIN;
 80042be:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 80042c2:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80042c4:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 80042c6:	441d      	add	r5, r3
  gpio_init_structure.Pin       = QSPI_D0_PIN;
 80042c8:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 80042ca:	4628      	mov	r0, r5
 80042cc:	f000 fc38 	bl	8004b40 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D1_PIN;
 80042d0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  HAL_GPIO_Init(QSPI_D1_GPIO_PORT, &gpio_init_structure);
 80042d4:	a907      	add	r1, sp, #28
 80042d6:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = QSPI_D1_PIN;
 80042d8:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80042da:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D1_GPIO_PORT, &gpio_init_structure);
 80042dc:	f000 fc30 	bl	8004b40 <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_D2_GPIO_PORT, &gpio_init_structure);
 80042e0:	a907      	add	r1, sp, #28
 80042e2:	480d      	ldr	r0, [pc, #52]	@ (8004318 <BSP_QSPI_MspInit+0x120>)
  gpio_init_structure.Pin       = QSPI_D2_PIN;
 80042e4:	9707      	str	r7, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80042e6:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D2_GPIO_PORT, &gpio_init_structure);
 80042e8:	f000 fc2a 	bl	8004b40 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D3_PIN;
 80042ec:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(QSPI_D3_GPIO_PORT, &gpio_init_structure);
 80042f0:	a907      	add	r1, sp, #28
 80042f2:	4628      	mov	r0, r5
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80042f4:	940b      	str	r4, [sp, #44]	@ 0x2c
  gpio_init_structure.Pin       = QSPI_D3_PIN;
 80042f6:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(QSPI_D3_GPIO_PORT, &gpio_init_structure);
 80042f8:	f000 fc22 	bl	8004b40 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 80042fc:	4632      	mov	r2, r6
 80042fe:	210f      	movs	r1, #15
 8004300:	205c      	movs	r0, #92	@ 0x5c
 8004302:	f000 f9d3 	bl	80046ac <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8004306:	205c      	movs	r0, #92	@ 0x5c
 8004308:	f000 fa02 	bl	8004710 <HAL_NVIC_EnableIRQ>
}
 800430c:	b00d      	add	sp, #52	@ 0x34
 800430e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004310:	40023800 	.word	0x40023800
 8004314:	40020400 	.word	0x40020400
 8004318:	40021000 	.word	0x40021000

0800431c <BSP_QSPI_Init>:
{ 
 800431c:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 800431e:	4c49      	ldr	r4, [pc, #292]	@ (8004444 <BSP_QSPI_Init+0x128>)
{ 
 8004320:	b091      	sub	sp, #68	@ 0x44
  QSPIHandle.Instance = QUADSPI;
 8004322:	4b49      	ldr	r3, [pc, #292]	@ (8004448 <BSP_QSPI_Init+0x12c>)
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8004324:	4620      	mov	r0, r4
  QSPIHandle.Instance = QUADSPI;
 8004326:	6023      	str	r3, [r4, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8004328:	f001 fc2a 	bl	8005b80 <HAL_QSPI_DeInit>
 800432c:	4605      	mov	r5, r0
 800432e:	b110      	cbz	r0, 8004336 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8004330:	2001      	movs	r0, #1
}
 8004332:	b011      	add	sp, #68	@ 0x44
 8004334:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8004336:	4601      	mov	r1, r0
 8004338:	4620      	mov	r0, r4
 800433a:	f7ff ff5d 	bl	80041f8 <BSP_QSPI_MspInit>
  QSPIHandle.Init.FifoThreshold      = 4;
 800433e:	2601      	movs	r6, #1
 8004340:	2304      	movs	r3, #4
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004342:	f04f 7780 	mov.w	r7, #16777216	@ 0x1000000
 8004346:	e9c4 6301 	strd	r6, r3, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800434a:	2310      	movs	r3, #16
 800434c:	60e3      	str	r3, [r4, #12]
 800434e:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8004352:	fab3 f383 	clz	r3, r3
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8004356:	4620      	mov	r0, r4
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8004358:	3b01      	subs	r3, #1
 800435a:	6123      	str	r3, [r4, #16]
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE; /* Min 50ns for nonRead */
 800435c:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8004360:	e9c4 5507 	strd	r5, r5, [r4, #28]
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8004364:	e9c4 3505 	strd	r3, r5, [r4, #20]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8004368:	f001 fbb8 	bl	8005adc <HAL_QSPI_Init>
 800436c:	2800      	cmp	r0, #0
 800436e:	d1df      	bne.n	8004330 <BSP_QSPI_Init+0x14>
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004370:	f44f 7580 	mov.w	r5, #256	@ 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8004374:	2366      	movs	r3, #102	@ 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8004376:	900b      	str	r0, [sp, #44]	@ 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004378:	f241 3288 	movw	r2, #5000	@ 0x1388
  s_command.DummyCycles       = 0;
 800437c:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800437e:	a902      	add	r1, sp, #8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004380:	900f      	str	r0, [sp, #60]	@ 0x3c
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004382:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8004384:	9302      	str	r3, [sp, #8]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004386:	e9cd 0009 	strd	r0, r0, [sp, #36]	@ 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800438a:	e9cd 000d 	strd	r0, r0, [sp, #52]	@ 0x34
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800438e:	4620      	mov	r0, r4
 8004390:	f001 fc09 	bl	8005ba6 <HAL_QSPI_Command>
 8004394:	b108      	cbz	r0, 800439a <BSP_QSPI_Init+0x7e>
    return QSPI_NOT_SUPPORTED;
 8004396:	2004      	movs	r0, #4
 8004398:	e7cb      	b.n	8004332 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 800439a:	2399      	movs	r3, #153	@ 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800439c:	f241 3288 	movw	r2, #5000	@ 0x1388
 80043a0:	a902      	add	r1, sp, #8
 80043a2:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 80043a4:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80043a6:	f001 fbfe 	bl	8005ba6 <HAL_QSPI_Command>
 80043aa:	2800      	cmp	r0, #0
 80043ac:	d1f3      	bne.n	8004396 <BSP_QSPI_Init+0x7a>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 80043ae:	f241 3088 	movw	r0, #5000	@ 0x1388
 80043b2:	f7ff fe99 	bl	80040e8 <QSPI_AutoPollingMemReady.constprop.0>
 80043b6:	2800      	cmp	r0, #0
 80043b8:	d1ed      	bne.n	8004396 <BSP_QSPI_Init+0x7a>
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80043ba:	2385      	movs	r3, #133	@ 0x85
  s_command.DummyCycles       = 0;
 80043bc:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80043be:	f241 3288 	movw	r2, #5000	@ 0x1388
 80043c2:	a902      	add	r1, sp, #8
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80043c4:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80043c6:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80043c8:	970b      	str	r7, [sp, #44]	@ 0x2c
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80043ca:	e9cd 0009 	strd	r0, r0, [sp, #36]	@ 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 80043ce:	e9cd 600c 	strd	r6, r0, [sp, #48]	@ 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80043d2:	e9cd 000e 	strd	r0, r0, [sp, #56]	@ 0x38
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80043d6:	4620      	mov	r0, r4
 80043d8:	f001 fbe5 	bl	8005ba6 <HAL_QSPI_Command>
 80043dc:	2800      	cmp	r0, #0
 80043de:	d1da      	bne.n	8004396 <BSP_QSPI_Init+0x7a>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80043e0:	f241 3288 	movw	r2, #5000	@ 0x1388
 80043e4:	f10d 0107 	add.w	r1, sp, #7
 80043e8:	4620      	mov	r0, r4
 80043ea:	f001 fd5c 	bl	8005ea6 <HAL_QSPI_Receive>
 80043ee:	2800      	cmp	r0, #0
 80043f0:	d1d1      	bne.n	8004396 <BSP_QSPI_Init+0x7a>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 80043f2:	f7ff fea3 	bl	800413c <QSPI_WriteEnable.constprop.0>
 80043f6:	2800      	cmp	r0, #0
 80043f8:	d1cd      	bne.n	8004396 <BSP_QSPI_Init+0x7a>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 80043fa:	2381      	movs	r3, #129	@ 0x81
 80043fc:	22f0      	movs	r2, #240	@ 0xf0
 80043fe:	9302      	str	r3, [sp, #8]
 8004400:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004404:	210a      	movs	r1, #10
 8004406:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800440a:	fab2 f282 	clz	r2, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800440e:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004410:	f003 030f 	and.w	r3, r3, #15
 8004414:	fa01 f202 	lsl.w	r2, r1, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004418:	a902      	add	r1, sp, #8
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800441a:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800441c:	f241 3288 	movw	r2, #5000	@ 0x1388
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004420:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004424:	f001 fbbf 	bl	8005ba6 <HAL_QSPI_Command>
 8004428:	2800      	cmp	r0, #0
 800442a:	d1b4      	bne.n	8004396 <BSP_QSPI_Init+0x7a>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800442c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004430:	f10d 0107 	add.w	r1, sp, #7
 8004434:	4620      	mov	r0, r4
 8004436:	f001 fcd7 	bl	8005de8 <HAL_QSPI_Transmit>
 800443a:	2800      	cmp	r0, #0
 800443c:	f43f af79 	beq.w	8004332 <BSP_QSPI_Init+0x16>
 8004440:	e7a9      	b.n	8004396 <BSP_QSPI_Init+0x7a>
 8004442:	bf00      	nop
 8004444:	200039e0 	.word	0x200039e0
 8004448:	a0001000 	.word	0xa0001000

0800444c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800444c:	490f      	ldr	r1, [pc, #60]	@ (800448c <SystemInit+0x40>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 800444e:	2000      	movs	r0, #0
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004450:	f8d1 3088 	ldr.w	r3, [r1, #136]	@ 0x88
 8004454:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8004458:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
  RCC->CR |= (uint32_t)0x00000001;
 800445c:	4b0c      	ldr	r3, [pc, #48]	@ (8004490 <SystemInit+0x44>)
 800445e:	681a      	ldr	r2, [r3, #0]
 8004460:	f042 0201 	orr.w	r2, r2, #1
 8004464:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000;
 8004466:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8004468:	681a      	ldr	r2, [r3, #0]
 800446a:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 800446e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8004472:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 8004474:	4a07      	ldr	r2, [pc, #28]	@ (8004494 <SystemInit+0x48>)
 8004476:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8004478:	681a      	ldr	r2, [r3, #0]
 800447a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800447e:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8004480:	60d8      	str	r0, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = RAMDTCM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004482:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8004486:	608b      	str	r3, [r1, #8]
#endif
}
 8004488:	4770      	bx	lr
 800448a:	bf00      	nop
 800448c:	e000ed00 	.word	0xe000ed00
 8004490:	40023800 	.word	0x40023800
 8004494:	24003010 	.word	0x24003010

08004498 <ft5336_Reset>:
  */
void ft5336_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT5336 IC */
}
 8004498:	4770      	bx	lr

0800449a <ft5336_TS_ITStatus>:
  */
uint8_t ft5336_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT5336 */
  return 0;
}
 800449a:	2000      	movs	r0, #0
 800449c:	4770      	bx	lr
	...

080044a0 <ft5336_ReadID>:
  volatile uint8_t ucReadId = 0;
 80044a0:	2300      	movs	r3, #0
{
 80044a2:	b537      	push	{r0, r1, r2, r4, r5, lr}
  volatile uint8_t ucReadId = 0;
 80044a4:	f88d 3007 	strb.w	r3, [sp, #7]
  * @param  None.
  * @retval : I2C initialization status.
  */
static uint8_t ft5336_Get_I2C_InitializedStatus(void)
{
  return(ft5336_handle.i2cInitialized);
 80044a8:	4b0c      	ldr	r3, [pc, #48]	@ (80044dc <ft5336_ReadID+0x3c>)
  * @param  None.
  * @retval : None.
  */
static void ft5336_I2C_InitializeIfRequired(void)
{
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 80044aa:	781a      	ldrb	r2, [r3, #0]
 80044ac:	b90a      	cbnz	r2, 80044b2 <ft5336_ReadID+0x12>
  {
    /* Initialize TS IO BUS layer (I2C) */
    //TS_IO_Init();

    /* Set state to initialized */
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 80044ae:	2201      	movs	r2, #1
 80044b0:	701a      	strb	r2, [r3, #0]
{
 80044b2:	2403      	movs	r4, #3
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 80044b4:	b2c5      	uxtb	r5, r0
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 80044b6:	3c01      	subs	r4, #1
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 80044b8:	21a8      	movs	r1, #168	@ 0xa8
 80044ba:	4628      	mov	r0, r5
 80044bc:	f7fc fff2 	bl	80014a4 <TS_IO_Read>
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 80044c0:	f014 04ff 	ands.w	r4, r4, #255	@ 0xff
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 80044c4:	f88d 0007 	strb.w	r0, [sp, #7]
    if(ucReadId == FT5336_ID_VALUE)
 80044c8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80044cc:	b2db      	uxtb	r3, r3
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 80044ce:	d001      	beq.n	80044d4 <ft5336_ReadID+0x34>
 80044d0:	2b51      	cmp	r3, #81	@ 0x51
 80044d2:	d1f0      	bne.n	80044b6 <ft5336_ReadID+0x16>
  return (ucReadId);
 80044d4:	f89d 0007 	ldrb.w	r0, [sp, #7]
}
 80044d8:	b003      	add	sp, #12
 80044da:	bd30      	pop	{r4, r5, pc}
 80044dc:	20003a2e 	.word	0x20003a2e

080044e0 <ft5336_TS_DetectTouch>:
{
 80044e0:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 80044e2:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 80044e4:	2102      	movs	r1, #2
 80044e6:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 80044e8:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 80044ec:	f7fc ffda 	bl	80014a4 <TS_IO_Read>
 80044f0:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT5336_TD_STAT_MASK;
 80044f4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80044f8:	f003 030f 	and.w	r3, r3, #15
 80044fc:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT5336_MAX_DETECTABLE_TOUCH)
 8004500:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004504:	2b05      	cmp	r3, #5
 8004506:	d901      	bls.n	800450c <ft5336_TS_DetectTouch+0x2c>
    nbTouch = 0;
 8004508:	f88d 4007 	strb.w	r4, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
 800450c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8004510:	4b03      	ldr	r3, [pc, #12]	@ (8004520 <ft5336_TS_DetectTouch+0x40>)
  return(nbTouch);
 8004512:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
 8004516:	705a      	strb	r2, [r3, #1]
  ft5336_handle.currActiveTouchIdx = 0;
 8004518:	2200      	movs	r2, #0
 800451a:	709a      	strb	r2, [r3, #2]
}
 800451c:	b002      	add	sp, #8
 800451e:	bd10      	pop	{r4, pc}
 8004520:	20003a2e 	.word	0x20003a2e

08004524 <ft5336_TS_GetXY>:
{
 8004524:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8004528:	4c2f      	ldr	r4, [pc, #188]	@ (80045e8 <ft5336_TS_GetXY+0xc4>)
{
 800452a:	4615      	mov	r5, r2
  volatile uint8_t ucReadData = 0;
 800452c:	f04f 0800 	mov.w	r8, #0
{
 8004530:	460f      	mov	r7, r1
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8004532:	78a3      	ldrb	r3, [r4, #2]
 8004534:	7862      	ldrb	r2, [r4, #1]
  volatile uint8_t ucReadData = 0;
 8004536:	f88d 8007 	strb.w	r8, [sp, #7]
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 800453a:	429a      	cmp	r2, r3
 800453c:	d94d      	bls.n	80045da <ft5336_TS_GetXY+0xb6>
    switch(ft5336_handle.currActiveTouchIdx)
 800453e:	2b09      	cmp	r3, #9
 8004540:	d84e      	bhi.n	80045e0 <ft5336_TS_GetXY+0xbc>
 8004542:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8004546:	005b      	lsls	r3, r3, #1
 8004548:	b2db      	uxtb	r3, r3
 800454a:	1d19      	adds	r1, r3, #4
 800454c:	f103 0b03 	add.w	fp, r3, #3
 8004550:	f103 0a06 	add.w	sl, r3, #6
 8004554:	3305      	adds	r3, #5
 8004556:	b2c9      	uxtb	r1, r1
 8004558:	fa5f fb8b 	uxtb.w	fp, fp
 800455c:	fa5f fa8a 	uxtb.w	sl, sl
 8004560:	fa5f f883 	uxtb.w	r8, r3
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 8004564:	b2c6      	uxtb	r6, r0
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004566:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 80045ec <ft5336_TS_GetXY+0xc8>
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 800456a:	4630      	mov	r0, r6
 800456c:	f7fc ff9a 	bl	80014a4 <TS_IO_Read>
 8004570:	f88d 0007 	strb.w	r0, [sp, #7]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004574:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8004578:	4659      	mov	r1, fp
 800457a:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 800457c:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8004580:	f7fc ff90 	bl	80014a4 <TS_IO_Read>
 8004584:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8004588:	4651      	mov	r1, sl
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 800458a:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 800458e:	4630      	mov	r0, r6
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004590:	f8b9 2000 	ldrh.w	r2, [r9]
 8004594:	021b      	lsls	r3, r3, #8
 8004596:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 800459a:	4313      	orrs	r3, r2
    *X = coord;
 800459c:	803b      	strh	r3, [r7, #0]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 800459e:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 80045a2:	f7fc ff7f 	bl	80014a4 <TS_IO_Read>
 80045a6:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 80045aa:	4641      	mov	r1, r8
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 80045ac:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 80045b0:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 80045b2:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 80045b6:	f7fc ff75 	bl	80014a4 <TS_IO_Read>
 80045ba:	f88d 0007 	strb.w	r0, [sp, #7]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 80045be:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80045c2:	f8b9 2000 	ldrh.w	r2, [r9]
 80045c6:	021b      	lsls	r3, r3, #8
 80045c8:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 80045cc:	4313      	orrs	r3, r2
 80045ce:	f8a9 3000 	strh.w	r3, [r9]
    *Y = coord;
 80045d2:	802b      	strh	r3, [r5, #0]
    ft5336_handle.currActiveTouchIdx++; /* next call will work on next touch */
 80045d4:	78a3      	ldrb	r3, [r4, #2]
 80045d6:	3301      	adds	r3, #1
 80045d8:	70a3      	strb	r3, [r4, #2]
}
 80045da:	b003      	add	sp, #12
 80045dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 80045e0:	46c2      	mov	sl, r8
 80045e2:	46c3      	mov	fp, r8
 80045e4:	4641      	mov	r1, r8
 80045e6:	e7bd      	b.n	8004564 <ft5336_TS_GetXY+0x40>
 80045e8:	20003a2e 	.word	0x20003a2e
 80045ec:	20003a2c 	.word	0x20003a2c

080045f0 <ft5336_TS_EnableIT>:
   TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 80045f0:	2201      	movs	r2, #1
 80045f2:	21a4      	movs	r1, #164	@ 0xa4
 80045f4:	b2c0      	uxtb	r0, r0
 80045f6:	f7fc bf3b 	b.w	8001470 <TS_IO_Write>

080045fa <ft5336_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 80045fa:	2200      	movs	r2, #0
 80045fc:	21a4      	movs	r1, #164	@ 0xa4
 80045fe:	b2c0      	uxtb	r0, r0
 8004600:	f7fc bf36 	b.w	8001470 <TS_IO_Write>

08004604 <ft5336_TS_Start>:
  ft5336_TS_DisableIT(DeviceAddr);
 8004604:	f7ff bff9 	b.w	80045fa <ft5336_TS_DisableIT>

08004608 <ft5336_TS_ClearIT>:
void ft5336_TS_ClearIT(uint16_t DeviceAddr)
 8004608:	4770      	bx	lr
	...

0800460c <ft5336_Init>:
  return(ft5336_handle.i2cInitialized);
 800460c:	4b02      	ldr	r3, [pc, #8]	@ (8004618 <ft5336_Init+0xc>)
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 800460e:	781a      	ldrb	r2, [r3, #0]
 8004610:	b90a      	cbnz	r2, 8004616 <ft5336_Init+0xa>
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8004612:	2201      	movs	r2, #1
 8004614:	701a      	strb	r2, [r3, #0]
}
 8004616:	4770      	bx	lr
 8004618:	20003a2e 	.word	0x20003a2e

0800461c <HAL_Init>:
  __HAL_FLASH_ART_ENABLE();
#endif /* ART_ACCELERATOR_ENABLE */

  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800461c:	4a07      	ldr	r2, [pc, #28]	@ (800463c <HAL_Init+0x20>)
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800461e:	2003      	movs	r0, #3
{
 8004620:	b508      	push	{r3, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004622:	6813      	ldr	r3, [r2, #0]
 8004624:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004628:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800462a:	f000 f82d 	bl	8004688 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800462e:	2000      	movs	r0, #0
 8004630:	f7fc fdb8 	bl	80011a4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004634:	f7fc fb16 	bl	8000c64 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004638:	2000      	movs	r0, #0
 800463a:	bd08      	pop	{r3, pc}
 800463c:	40023c00 	.word	0x40023c00

08004640 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004640:	4a03      	ldr	r2, [pc, #12]	@ (8004650 <HAL_IncTick+0x10>)
 8004642:	4b04      	ldr	r3, [pc, #16]	@ (8004654 <HAL_IncTick+0x14>)
 8004644:	6811      	ldr	r1, [r2, #0]
 8004646:	781b      	ldrb	r3, [r3, #0]
 8004648:	440b      	add	r3, r1
 800464a:	6013      	str	r3, [r2, #0]
}
 800464c:	4770      	bx	lr
 800464e:	bf00      	nop
 8004650:	20003a34 	.word	0x20003a34
 8004654:	20000038 	.word	0x20000038

08004658 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004658:	4b01      	ldr	r3, [pc, #4]	@ (8004660 <HAL_GetTick+0x8>)
 800465a:	6818      	ldr	r0, [r3, #0]
}
 800465c:	4770      	bx	lr
 800465e:	bf00      	nop
 8004660:	20003a34 	.word	0x20003a34

08004664 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004664:	b538      	push	{r3, r4, r5, lr}
 8004666:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004668:	f7ff fff6 	bl	8004658 <HAL_GetTick>
 800466c:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800466e:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004670:	bf1e      	ittt	ne
 8004672:	4b04      	ldrne	r3, [pc, #16]	@ (8004684 <HAL_Delay+0x20>)
 8004674:	781b      	ldrbne	r3, [r3, #0]
 8004676:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8004678:	f7ff ffee 	bl	8004658 <HAL_GetTick>
 800467c:	1b43      	subs	r3, r0, r5
 800467e:	42a3      	cmp	r3, r4
 8004680:	d3fa      	bcc.n	8004678 <HAL_Delay+0x14>
  {
  }
}
 8004682:	bd38      	pop	{r3, r4, r5, pc}
 8004684:	20000038 	.word	0x20000038

08004688 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004688:	4907      	ldr	r1, [pc, #28]	@ (80046a8 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800468a:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800468c:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800468e:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004692:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8004696:	0412      	lsls	r2, r2, #16
 8004698:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800469a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800469c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80046a0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 80046a4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80046a6:	4770      	bx	lr
 80046a8:	e000ed00 	.word	0xe000ed00

080046ac <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80046ac:	4b16      	ldr	r3, [pc, #88]	@ (8004708 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80046ae:	b530      	push	{r4, r5, lr}
 80046b0:	68dc      	ldr	r4, [r3, #12]
 80046b2:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80046b6:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80046ba:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80046bc:	2b04      	cmp	r3, #4
 80046be:	bf28      	it	cs
 80046c0:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80046c2:	2d06      	cmp	r5, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80046c4:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80046c8:	bf8c      	ite	hi
 80046ca:	3c03      	subhi	r4, #3
 80046cc:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80046ce:	fa05 f303 	lsl.w	r3, r5, r3
  if ((int32_t)(IRQn) >= 0)
 80046d2:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80046d4:	fa05 f504 	lsl.w	r5, r5, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80046d8:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80046dc:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80046e0:	fa03 f304 	lsl.w	r3, r3, r4
 80046e4:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80046e8:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80046ec:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 80046ee:	db06      	blt.n	80046fe <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80046f0:	f100 4060 	add.w	r0, r0, #3758096384	@ 0xe0000000
 80046f4:	f500 4061 	add.w	r0, r0, #57600	@ 0xe100
 80046f8:	f880 3300 	strb.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80046fc:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80046fe:	f000 000f 	and.w	r0, r0, #15
 8004702:	4a02      	ldr	r2, [pc, #8]	@ (800470c <HAL_NVIC_SetPriority+0x60>)
 8004704:	5413      	strb	r3, [r2, r0]
 8004706:	e7f9      	b.n	80046fc <HAL_NVIC_SetPriority+0x50>
 8004708:	e000ed00 	.word	0xe000ed00
 800470c:	e000ed14 	.word	0xe000ed14

08004710 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004710:	2800      	cmp	r0, #0
 8004712:	db07      	blt.n	8004724 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004714:	0941      	lsrs	r1, r0, #5
 8004716:	2301      	movs	r3, #1
 8004718:	f000 001f 	and.w	r0, r0, #31
 800471c:	4a02      	ldr	r2, [pc, #8]	@ (8004728 <HAL_NVIC_EnableIRQ+0x18>)
 800471e:	4083      	lsls	r3, r0
 8004720:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004724:	4770      	bx	lr
 8004726:	bf00      	nop
 8004728:	e000e100 	.word	0xe000e100

0800472c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800472c:	2800      	cmp	r0, #0
 800472e:	db0c      	blt.n	800474a <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004730:	0943      	lsrs	r3, r0, #5
 8004732:	2201      	movs	r2, #1
 8004734:	f000 001f 	and.w	r0, r0, #31
 8004738:	4904      	ldr	r1, [pc, #16]	@ (800474c <HAL_NVIC_DisableIRQ+0x20>)
 800473a:	3320      	adds	r3, #32
 800473c:	4082      	lsls	r2, r0
 800473e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8004742:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004746:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 800474a:	4770      	bx	lr
 800474c:	e000e100 	.word	0xe000e100

08004750 <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 8004750:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 8004754:	4b04      	ldr	r3, [pc, #16]	@ (8004768 <HAL_MPU_Disable+0x18>)
 8004756:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004758:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800475c:	625a      	str	r2, [r3, #36]	@ 0x24
  
  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 800475e:	2200      	movs	r2, #0
 8004760:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
}
 8004764:	4770      	bx	lr
 8004766:	bf00      	nop
 8004768:	e000ed00 	.word	0xe000ed00

0800476c <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 800476c:	4b06      	ldr	r3, [pc, #24]	@ (8004788 <HAL_MPU_Enable+0x1c>)
 800476e:	f040 0001 	orr.w	r0, r0, #1
 8004772:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94
  
  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 8004776:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004778:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 800477c:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 800477e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004782:	f3bf 8f6f 	isb	sy
  
  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 8004786:	4770      	bx	lr
 8004788:	e000ed00 	.word	0xe000ed00

0800478c <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 800478c:	7843      	ldrb	r3, [r0, #1]
 800478e:	4a14      	ldr	r2, [pc, #80]	@ (80047e0 <HAL_MPU_ConfigRegion+0x54>)
{
 8004790:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 8004792:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  if ((MPU_Init->Enable) != RESET)
 8004796:	7801      	ldrb	r1, [r0, #0]
 8004798:	b1e9      	cbz	r1, 80047d6 <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
    
    MPU->RBAR = MPU_Init->BaseAddress;
 800479a:	6843      	ldr	r3, [r0, #4]
 800479c:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 80047a0:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80047a2:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 80047a4:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80047a6:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80047aa:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 80047ac:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80047ae:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 80047b2:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80047b4:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 80047b8:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80047ba:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 80047be:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80047c0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 80047c4:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80047c6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80047ca:	7a01      	ldrb	r1, [r0, #8]
 80047cc:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80047d0:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 80047d4:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 80047d6:	f8c2 109c 	str.w	r1, [r2, #156]	@ 0x9c
    MPU->RASR = 0x00;
 80047da:	f8c2 10a0 	str.w	r1, [r2, #160]	@ 0xa0
}
 80047de:	e7f9      	b.n	80047d4 <HAL_MPU_ConfigRegion+0x48>
 80047e0:	e000ed00 	.word	0xe000ed00

080047e4 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80047e4:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80047e6:	4604      	mov	r4, r0
 80047e8:	b908      	cbnz	r0, 80047ee <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 80047ea:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 80047ec:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 80047ee:	7f43      	ldrb	r3, [r0, #29]
 80047f0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80047f4:	b913      	cbnz	r3, 80047fc <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 80047f6:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 80047f8:	f7fc fa52 	bl	8000ca0 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 80047fc:	2302      	movs	r3, #2
 80047fe:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8004800:	7923      	ldrb	r3, [r4, #4]
 8004802:	b9e3      	cbnz	r3, 800483e <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8004804:	6823      	ldr	r3, [r4, #0]
 8004806:	4a13      	ldr	r2, [pc, #76]	@ (8004854 <HAL_CRC_Init+0x70>)
 8004808:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 800480a:	689a      	ldr	r2, [r3, #8]
 800480c:	f022 0218 	bic.w	r2, r2, #24
 8004810:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004812:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004814:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004816:	b9d2      	cbnz	r2, 800484e <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004818:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 800481c:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 800481e:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004820:	689a      	ldr	r2, [r3, #8]
 8004822:	6961      	ldr	r1, [r4, #20]
 8004824:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8004828:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 800482a:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 800482c:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 800482e:	689a      	ldr	r2, [r3, #8]
 8004830:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004834:	430a      	orrs	r2, r1
 8004836:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8004838:	2301      	movs	r3, #1
 800483a:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 800483c:	e7d6      	b.n	80047ec <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 800483e:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8004842:	4620      	mov	r0, r4
 8004844:	f000 f808 	bl	8004858 <HAL_CRCEx_Polynomial_Set>
 8004848:	2800      	cmp	r0, #0
 800484a:	d0e2      	beq.n	8004812 <HAL_CRC_Init+0x2e>
 800484c:	e7cd      	b.n	80047ea <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 800484e:	6922      	ldr	r2, [r4, #16]
 8004850:	e7e4      	b.n	800481c <HAL_CRC_Init+0x38>
 8004852:	bf00      	nop
 8004854:	04c11db7 	.word	0x04c11db7

08004858 <HAL_CRCEx_Polynomial_Set>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8004858:	231f      	movs	r3, #31
{
 800485a:	b510      	push	{r4, lr}
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 800485c:	3b01      	subs	r3, #1
 800485e:	d31d      	bcc.n	800489c <HAL_CRCEx_Polynomial_Set+0x44>
 8004860:	fa21 f403 	lsr.w	r4, r1, r3
 8004864:	07e4      	lsls	r4, r4, #31
 8004866:	d5f9      	bpl.n	800485c <HAL_CRCEx_Polynomial_Set+0x4>
  {
  }

  switch (PolyLength)
 8004868:	2a10      	cmp	r2, #16
 800486a:	d013      	beq.n	8004894 <HAL_CRCEx_Polynomial_Set+0x3c>
 800486c:	2a10      	cmp	r2, #16
 800486e:	d804      	bhi.n	800487a <HAL_CRCEx_Polynomial_Set+0x22>
 8004870:	b13a      	cbz	r2, 8004882 <HAL_CRCEx_Polynomial_Set+0x2a>
 8004872:	2a08      	cmp	r2, #8
 8004874:	d010      	beq.n	8004898 <HAL_CRCEx_Polynomial_Set+0x40>
 8004876:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8004878:	e00b      	b.n	8004892 <HAL_CRCEx_Polynomial_Set+0x3a>
  switch (PolyLength)
 800487a:	2a18      	cmp	r2, #24
 800487c:	d1fb      	bne.n	8004876 <HAL_CRCEx_Polynomial_Set+0x1e>
      if (msb >= HAL_CRC_LENGTH_7B)
 800487e:	2b06      	cmp	r3, #6
      if (msb >= HAL_CRC_LENGTH_16B)
 8004880:	d8f9      	bhi.n	8004876 <HAL_CRCEx_Polynomial_Set+0x1e>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8004882:	6800      	ldr	r0, [r0, #0]
 8004884:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8004886:	6883      	ldr	r3, [r0, #8]
 8004888:	f023 0318 	bic.w	r3, r3, #24
 800488c:	4313      	orrs	r3, r2
 800488e:	6083      	str	r3, [r0, #8]
 8004890:	2000      	movs	r0, #0
}
 8004892:	bd10      	pop	{r4, pc}
      if (msb >= HAL_CRC_LENGTH_8B)
 8004894:	2b07      	cmp	r3, #7
 8004896:	e7f3      	b.n	8004880 <HAL_CRCEx_Polynomial_Set+0x28>
      if (msb >= HAL_CRC_LENGTH_16B)
 8004898:	2b0f      	cmp	r3, #15
 800489a:	e7f1      	b.n	8004880 <HAL_CRCEx_Polynomial_Set+0x28>
  switch (PolyLength)
 800489c:	2a10      	cmp	r2, #16
 800489e:	d1e5      	bne.n	800486c <HAL_CRCEx_Polynomial_Set+0x14>
 80048a0:	e7e9      	b.n	8004876 <HAL_CRCEx_Polynomial_Set+0x1e>

080048a2 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 80048a2:	b570      	push	{r4, r5, r6, lr}
 80048a4:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80048a6:	6d86      	ldr	r6, [r0, #88]	@ 0x58
  
  uint32_t tickstart = HAL_GetTick();
 80048a8:	f7ff fed6 	bl	8004658 <HAL_GetTick>
 80048ac:	4605      	mov	r5, r0
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80048ae:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
 80048b2:	2b02      	cmp	r3, #2
 80048b4:	d006      	beq.n	80048c4 <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80048b6:	2380      	movs	r3, #128	@ 0x80
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
    
    return HAL_ERROR;
 80048b8:	2001      	movs	r0, #1
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80048ba:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
 80048bc:	2300      	movs	r3, #0
 80048be:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
    
  }
  return HAL_OK;
}
 80048c2:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80048c4:	6823      	ldr	r3, [r4, #0]
 80048c6:	681a      	ldr	r2, [r3, #0]
 80048c8:	f022 0216 	bic.w	r2, r2, #22
 80048cc:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 80048ce:	695a      	ldr	r2, [r3, #20]
 80048d0:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80048d4:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80048d6:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80048d8:	b90a      	cbnz	r2, 80048de <HAL_DMA_Abort+0x3c>
 80048da:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 80048dc:	b11a      	cbz	r2, 80048e6 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 80048de:	681a      	ldr	r2, [r3, #0]
 80048e0:	f022 0208 	bic.w	r2, r2, #8
 80048e4:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 80048e6:	681a      	ldr	r2, [r3, #0]
 80048e8:	f022 0201 	bic.w	r2, r2, #1
 80048ec:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80048ee:	6823      	ldr	r3, [r4, #0]
 80048f0:	6818      	ldr	r0, [r3, #0]
 80048f2:	f010 0001 	ands.w	r0, r0, #1
 80048f6:	d107      	bne.n	8004908 <HAL_DMA_Abort+0x66>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80048f8:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 80048fa:	233f      	movs	r3, #63	@ 0x3f
 80048fc:	4093      	lsls	r3, r2
 80048fe:	60b3      	str	r3, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8004900:	2301      	movs	r3, #1
 8004902:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
  return HAL_OK;
 8004906:	e7d9      	b.n	80048bc <HAL_DMA_Abort+0x1a>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8004908:	f7ff fea6 	bl	8004658 <HAL_GetTick>
 800490c:	1b40      	subs	r0, r0, r5
 800490e:	2805      	cmp	r0, #5
 8004910:	d9ed      	bls.n	80048ee <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004912:	2320      	movs	r3, #32
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004914:	2003      	movs	r0, #3
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004916:	6563      	str	r3, [r4, #84]	@ 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004918:	f884 0035 	strb.w	r0, [r4, #53]	@ 0x35
        return HAL_TIMEOUT;
 800491c:	e7ce      	b.n	80048bc <HAL_DMA_Abort+0x1a>

0800491e <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800491e:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 8004922:	2b02      	cmp	r3, #2
 8004924:	d003      	beq.n	800492e <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004926:	2380      	movs	r3, #128	@ 0x80
 8004928:	6543      	str	r3, [r0, #84]	@ 0x54
    return HAL_ERROR;
 800492a:	2001      	movs	r0, #1
 800492c:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800492e:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8004930:	2305      	movs	r3, #5
 8004932:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
  }

  return HAL_OK;
 8004936:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8004938:	6813      	ldr	r3, [r2, #0]
 800493a:	f023 0301 	bic.w	r3, r3, #1
 800493e:	6013      	str	r3, [r2, #0]
}
 8004940:	4770      	bx	lr

08004942 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004942:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004944:	4604      	mov	r4, r0
 8004946:	b330      	cbz	r0, 8004996 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004948:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800494c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004950:	b91b      	cbnz	r3, 800495a <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004952:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004956:	f7fc f9b9 	bl	8000ccc <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800495a:	6822      	ldr	r2, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800495c:	2302      	movs	r3, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800495e:	6861      	ldr	r1, [r4, #4]
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004960:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004962:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004966:	6813      	ldr	r3, [r2, #0]
 8004968:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800496c:	430b      	orrs	r3, r1
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800496e:	68a1      	ldr	r1, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004970:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004972:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8004974:	f023 0307 	bic.w	r3, r3, #7
 8004978:	430b      	orrs	r3, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800497a:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800497c:	6353      	str	r3, [r2, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800497e:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8004980:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8004984:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8004988:	430b      	orrs	r3, r1
 800498a:	6413      	str	r3, [r2, #64]	@ 0x40

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800498c:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800498e:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004990:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8004994:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004996:	2001      	movs	r0, #1
 8004998:	e7fc      	b.n	8004994 <HAL_DMA2D_Init+0x52>

0800499a <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 800499a:	4770      	bx	lr

0800499c <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 800499c:	4770      	bx	lr

0800499e <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800499e:	6803      	ldr	r3, [r0, #0]
{
 80049a0:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80049a2:	685e      	ldr	r6, [r3, #4]
{
 80049a4:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80049a6:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80049a8:	07f2      	lsls	r2, r6, #31
 80049aa:	d514      	bpl.n	80049d6 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 80049ac:	05e9      	lsls	r1, r5, #23
 80049ae:	d512      	bpl.n	80049d6 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80049b0:	681a      	ldr	r2, [r3, #0]
 80049b2:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80049b6:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80049b8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80049ba:	f042 0201 	orr.w	r2, r2, #1
 80049be:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80049c0:	2201      	movs	r2, #1
 80049c2:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80049c4:	2304      	movs	r3, #4
 80049c6:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80049ca:	2300      	movs	r3, #0
 80049cc:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80049d0:	6943      	ldr	r3, [r0, #20]
 80049d2:	b103      	cbz	r3, 80049d6 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80049d4:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80049d6:	06b2      	lsls	r2, r6, #26
 80049d8:	d516      	bpl.n	8004a08 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80049da:	04ab      	lsls	r3, r5, #18
 80049dc:	d514      	bpl.n	8004a08 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80049de:	6823      	ldr	r3, [r4, #0]
 80049e0:	681a      	ldr	r2, [r3, #0]
 80049e2:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80049e6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80049e8:	2220      	movs	r2, #32
 80049ea:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80049ec:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80049ee:	f043 0302 	orr.w	r3, r3, #2
 80049f2:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80049f4:	2304      	movs	r3, #4
 80049f6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80049fa:	2300      	movs	r3, #0
 80049fc:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004a00:	6963      	ldr	r3, [r4, #20]
 8004a02:	b10b      	cbz	r3, 8004a08 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004a04:	4620      	mov	r0, r4
 8004a06:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004a08:	0730      	lsls	r0, r6, #28
 8004a0a:	d516      	bpl.n	8004a3a <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004a0c:	0529      	lsls	r1, r5, #20
 8004a0e:	d514      	bpl.n	8004a3a <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004a10:	6823      	ldr	r3, [r4, #0]
 8004a12:	681a      	ldr	r2, [r3, #0]
 8004a14:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004a18:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004a1a:	2208      	movs	r2, #8
 8004a1c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004a1e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004a20:	f043 0304 	orr.w	r3, r3, #4
 8004a24:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004a26:	2304      	movs	r3, #4
 8004a28:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004a2c:	2300      	movs	r3, #0
 8004a2e:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004a32:	6963      	ldr	r3, [r4, #20]
 8004a34:	b10b      	cbz	r3, 8004a3a <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004a36:	4620      	mov	r0, r4
 8004a38:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004a3a:	0772      	lsls	r2, r6, #29
 8004a3c:	d50b      	bpl.n	8004a56 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004a3e:	056b      	lsls	r3, r5, #21
 8004a40:	d509      	bpl.n	8004a56 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004a42:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004a44:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004a46:	681a      	ldr	r2, [r3, #0]
 8004a48:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004a4c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004a4e:	2204      	movs	r2, #4
 8004a50:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004a52:	f7ff ffa2 	bl	800499a <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004a56:	07b0      	lsls	r0, r6, #30
 8004a58:	d514      	bpl.n	8004a84 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004a5a:	05a9      	lsls	r1, r5, #22
 8004a5c:	d512      	bpl.n	8004a84 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004a5e:	6823      	ldr	r3, [r4, #0]
 8004a60:	681a      	ldr	r2, [r3, #0]
 8004a62:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004a66:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004a68:	2202      	movs	r2, #2
 8004a6a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004a6c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004a6e:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004a70:	2301      	movs	r3, #1
 8004a72:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004a76:	2300      	movs	r3, #0
 8004a78:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8004a7c:	6923      	ldr	r3, [r4, #16]
 8004a7e:	b10b      	cbz	r3, 8004a84 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004a80:	4620      	mov	r0, r4
 8004a82:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004a84:	06f2      	lsls	r2, r6, #27
 8004a86:	d513      	bpl.n	8004ab0 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004a88:	04eb      	lsls	r3, r5, #19
 8004a8a:	d511      	bpl.n	8004ab0 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004a8c:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004a8e:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004a90:	681a      	ldr	r2, [r3, #0]
 8004a92:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004a96:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004a98:	2210      	movs	r2, #16
 8004a9a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004a9c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004a9e:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004aa0:	2301      	movs	r3, #1
 8004aa2:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004aa6:	2300      	movs	r3, #0
 8004aa8:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004aac:	f7ff ff76 	bl	800499c <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004ab0:	bd70      	pop	{r4, r5, r6, pc}
	...

08004ab4 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004ab4:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004ab6:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
{
 8004aba:	4603      	mov	r3, r0
 8004abc:	2002      	movs	r0, #2
  __HAL_LOCK(hdma2d);
 8004abe:	2a01      	cmp	r2, #1
 8004ac0:	d02b      	beq.n	8004b1a <HAL_DMA2D_ConfigLayer+0x66>
 8004ac2:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004ac4:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39
#if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
#else
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004ac8:	010e      	lsls	r6, r1, #4
 8004aca:	4f1c      	ldr	r7, [pc, #112]	@ (8004b3c <HAL_DMA2D_ConfigLayer+0x88>)
  __HAL_LOCK(hdma2d);
 8004acc:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004ad0:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8004ad4:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8004ad8:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8004ada:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004ade:	3c09      	subs	r4, #9
 8004ae0:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004ae2:	bf96      	itet	ls
 8004ae4:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004ae8:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004aec:	4310      	orrls	r0, r2

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004aee:	681a      	ldr	r2, [r3, #0]
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004af0:	b9a1      	cbnz	r1, 8004b1c <HAL_DMA2D_ConfigLayer+0x68>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004af2:	6a51      	ldr	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004af4:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004af6:	ea01 0107 	and.w	r1, r1, r7
 8004afa:	ea41 0100 	orr.w	r1, r1, r0
 8004afe:	6251      	str	r1, [r2, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004b00:	6999      	ldr	r1, [r3, #24]
 8004b02:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004b04:	d803      	bhi.n	8004b0e <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8004b06:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8004b08:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8004b0c:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004b0e:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004b10:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004b12:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8004b16:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8004b1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004b1c:	69d1      	ldr	r1, [r2, #28]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004b1e:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004b20:	ea01 0107 	and.w	r1, r1, r7
 8004b24:	ea41 0100 	orr.w	r1, r1, r0
 8004b28:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004b2a:	eb03 0106 	add.w	r1, r3, r6
 8004b2e:	6989      	ldr	r1, [r1, #24]
 8004b30:	6111      	str	r1, [r2, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004b32:	d8ec      	bhi.n	8004b0e <HAL_DMA2D_ConfigLayer+0x5a>
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004b34:	f025 457f 	bic.w	r5, r5, #4278190080	@ 0xff000000
 8004b38:	6215      	str	r5, [r2, #32]
 8004b3a:	e7e8      	b.n	8004b0e <HAL_DMA2D_ConfigLayer+0x5a>
 8004b3c:	00fcfff0 	.word	0x00fcfff0

08004b40 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004b40:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8004b44:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004b46:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8004d04 <HAL_GPIO_Init+0x1c4>
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004b4a:	4a6c      	ldr	r2, [pc, #432]	@ (8004cfc <HAL_GPIO_Init+0x1bc>)
    ioposition = ((uint32_t)0x01) << position;
 8004b4c:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004b4e:	680d      	ldr	r5, [r1, #0]
    ioposition = ((uint32_t)0x01) << position;
 8004b50:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004b52:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8004b56:	43ac      	bics	r4, r5
 8004b58:	f040 80b7 	bne.w	8004cca <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004b5c:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004b5e:	2703      	movs	r7, #3
 8004b60:	ea4f 0e43 	mov.w	lr, r3, lsl #1
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004b64:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004b68:	fa07 fc0e 	lsl.w	ip, r7, lr
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004b6c:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004b6e:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004b72:	2f01      	cmp	r7, #1
 8004b74:	d834      	bhi.n	8004be0 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8004b76:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004b78:	ea07 080c 	and.w	r8, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2));
 8004b7c:	68cf      	ldr	r7, [r1, #12]
 8004b7e:	fa07 f70e 	lsl.w	r7, r7, lr
 8004b82:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OSPEEDR = temp;
 8004b86:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004b88:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004b8a:	ea27 0806 	bic.w	r8, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004b8e:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8004b92:	409f      	lsls	r7, r3
 8004b94:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OTYPER = temp;
 8004b98:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8004b9a:	68c7      	ldr	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004b9c:	2c02      	cmp	r4, #2
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8004b9e:	ea07 080c 	and.w	r8, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2));
 8004ba2:	688f      	ldr	r7, [r1, #8]
 8004ba4:	fa07 f70e 	lsl.w	r7, r7, lr
 8004ba8:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->PUPDR = temp;
 8004bac:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004bae:	d119      	bne.n	8004be4 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3];
 8004bb0:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8004bb4:	f003 0a07 	and.w	sl, r3, #7
 8004bb8:	f04f 0b0f 	mov.w	fp, #15
 8004bbc:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 8004bc0:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
        temp = GPIOx->AFR[position >> 3];
 8004bc4:	f8d8 7020 	ldr.w	r7, [r8, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8004bc8:	fa0b fb0a 	lsl.w	fp, fp, sl
 8004bcc:	ea27 0b0b 	bic.w	fp, r7, fp
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8004bd0:	690f      	ldr	r7, [r1, #16]
 8004bd2:	fa07 f70a 	lsl.w	r7, r7, sl
 8004bd6:	ea47 070b 	orr.w	r7, r7, fp
        GPIOx->AFR[position >> 3] = temp;
 8004bda:	f8c8 7020 	str.w	r7, [r8, #32]
 8004bde:	e001      	b.n	8004be4 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004be0:	2c03      	cmp	r4, #3
 8004be2:	d1da      	bne.n	8004b9a <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8004be4:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8004be6:	fa04 f40e 	lsl.w	r4, r4, lr
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8004bea:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8004bee:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8004bf2:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
 8004bf6:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8004bf8:	d067      	beq.n	8004cca <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004bfa:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8004bfe:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004c02:	f003 0c03 	and.w	ip, r3, #3
 8004c06:	f04f 0e0f 	mov.w	lr, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004c0a:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8004c0e:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004c12:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004c16:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8004c1a:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8004c1e:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004c22:	fa0e fe0c 	lsl.w	lr, lr, ip
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004c26:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8004c2a:	9401      	str	r4, [sp, #4]
 8004c2c:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2];
 8004c2e:	68bc      	ldr	r4, [r7, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004c30:	ea24 0e0e 	bic.w	lr, r4, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8004c34:	4c32      	ldr	r4, [pc, #200]	@ (8004d00 <HAL_GPIO_Init+0x1c0>)
 8004c36:	42a0      	cmp	r0, r4
 8004c38:	d04e      	beq.n	8004cd8 <HAL_GPIO_Init+0x198>
 8004c3a:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004c3e:	42a0      	cmp	r0, r4
 8004c40:	d04c      	beq.n	8004cdc <HAL_GPIO_Init+0x19c>
 8004c42:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004c46:	42a0      	cmp	r0, r4
 8004c48:	d04a      	beq.n	8004ce0 <HAL_GPIO_Init+0x1a0>
 8004c4a:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004c4e:	42a0      	cmp	r0, r4
 8004c50:	d048      	beq.n	8004ce4 <HAL_GPIO_Init+0x1a4>
 8004c52:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004c56:	42a0      	cmp	r0, r4
 8004c58:	d046      	beq.n	8004ce8 <HAL_GPIO_Init+0x1a8>
 8004c5a:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004c5e:	42a0      	cmp	r0, r4
 8004c60:	d044      	beq.n	8004cec <HAL_GPIO_Init+0x1ac>
 8004c62:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004c66:	42a0      	cmp	r0, r4
 8004c68:	d042      	beq.n	8004cf0 <HAL_GPIO_Init+0x1b0>
 8004c6a:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004c6e:	42a0      	cmp	r0, r4
 8004c70:	d040      	beq.n	8004cf4 <HAL_GPIO_Init+0x1b4>
 8004c72:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004c76:	42a0      	cmp	r0, r4
 8004c78:	d03e      	beq.n	8004cf8 <HAL_GPIO_Init+0x1b8>
 8004c7a:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004c7e:	42a0      	cmp	r0, r4
 8004c80:	bf14      	ite	ne
 8004c82:	240a      	movne	r4, #10
 8004c84:	2409      	moveq	r4, #9
 8004c86:	fa04 f40c 	lsl.w	r4, r4, ip
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8004c8a:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8004c8e:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2] = temp;
 8004c92:	60bc      	str	r4, [r7, #8]
        temp &= ~((uint32_t)iocurrent);
 8004c94:	ea6f 0706 	mvn.w	r7, r6
        temp = EXTI->RTSR;
 8004c98:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8004c9a:	bf0c      	ite	eq
 8004c9c:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8004c9e:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8004ca0:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        EXTI->RTSR = temp;
 8004ca4:	6094      	str	r4, [r2, #8]
        temp = EXTI->FTSR;
 8004ca6:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 8004ca8:	bf0c      	ite	eq
 8004caa:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8004cac:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8004cae:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        EXTI->FTSR = temp;
 8004cb2:	60d4      	str	r4, [r2, #12]
        temp = EXTI->EMR;
 8004cb4:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 8004cb6:	bf0c      	ite	eq
 8004cb8:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8004cba:	4334      	orrne	r4, r6
        EXTI->EMR = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8004cbc:	03ed      	lsls	r5, r5, #15
        EXTI->EMR = temp;
 8004cbe:	6054      	str	r4, [r2, #4]
        temp = EXTI->IMR;
 8004cc0:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8004cc2:	bf54      	ite	pl
 8004cc4:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 8004cc6:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 8004cc8:	6014      	str	r4, [r2, #0]
  for(position = 0; position < GPIO_NUMBER; position++)
 8004cca:	3301      	adds	r3, #1
 8004ccc:	2b10      	cmp	r3, #16
 8004cce:	f47f af3d 	bne.w	8004b4c <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8004cd2:	b003      	add	sp, #12
 8004cd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8004cd8:	2400      	movs	r4, #0
 8004cda:	e7d4      	b.n	8004c86 <HAL_GPIO_Init+0x146>
 8004cdc:	2401      	movs	r4, #1
 8004cde:	e7d2      	b.n	8004c86 <HAL_GPIO_Init+0x146>
 8004ce0:	2402      	movs	r4, #2
 8004ce2:	e7d0      	b.n	8004c86 <HAL_GPIO_Init+0x146>
 8004ce4:	2403      	movs	r4, #3
 8004ce6:	e7ce      	b.n	8004c86 <HAL_GPIO_Init+0x146>
 8004ce8:	2404      	movs	r4, #4
 8004cea:	e7cc      	b.n	8004c86 <HAL_GPIO_Init+0x146>
 8004cec:	2405      	movs	r4, #5
 8004cee:	e7ca      	b.n	8004c86 <HAL_GPIO_Init+0x146>
 8004cf0:	2406      	movs	r4, #6
 8004cf2:	e7c8      	b.n	8004c86 <HAL_GPIO_Init+0x146>
 8004cf4:	2407      	movs	r4, #7
 8004cf6:	e7c6      	b.n	8004c86 <HAL_GPIO_Init+0x146>
 8004cf8:	2408      	movs	r4, #8
 8004cfa:	e7c4      	b.n	8004c86 <HAL_GPIO_Init+0x146>
 8004cfc:	40013c00 	.word	0x40013c00
 8004d00:	40020000 	.word	0x40020000
 8004d04:	40023800 	.word	0x40023800

08004d08 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8004d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8004d0c:	2200      	movs	r2, #0
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8004d0e:	f04f 0a01 	mov.w	sl, #1

    if(iocurrent == ioposition)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2];
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004d12:	f04f 080f 	mov.w	r8, #15
        tmp = ((uint32_t)0x0F) << (4 * (position & 0x03));
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
      }
      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 8004d16:	f04f 0b03 	mov.w	fp, #3
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004d1a:	4c46      	ldr	r4, [pc, #280]	@ (8004e34 <HAL_GPIO_DeInit+0x12c>)
    ioposition = ((uint32_t)0x01) << position;
 8004d1c:	fa0a fc02 	lsl.w	ip, sl, r2
    if(iocurrent == ioposition)
 8004d20:	ea3c 0301 	bics.w	r3, ip, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8004d24:	ea0c 0601 	and.w	r6, ip, r1
    if(iocurrent == ioposition)
 8004d28:	d16c      	bne.n	8004e04 <HAL_GPIO_DeInit+0xfc>
      tmp = SYSCFG->EXTICR[position >> 2];
 8004d2a:	f022 0503 	bic.w	r5, r2, #3
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004d2e:	f002 0703 	and.w	r7, r2, #3
 8004d32:	f105 4580 	add.w	r5, r5, #1073741824	@ 0x40000000
 8004d36:	00bf      	lsls	r7, r7, #2
 8004d38:	f505 359c 	add.w	r5, r5, #79872	@ 0x13800
 8004d3c:	fa08 f907 	lsl.w	r9, r8, r7
      tmp = SYSCFG->EXTICR[position >> 2];
 8004d40:	68ab      	ldr	r3, [r5, #8]
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004d42:	ea09 0e03 	and.w	lr, r9, r3
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 8004d46:	4b3c      	ldr	r3, [pc, #240]	@ (8004e38 <HAL_GPIO_DeInit+0x130>)
 8004d48:	4298      	cmp	r0, r3
 8004d4a:	d060      	beq.n	8004e0e <HAL_GPIO_DeInit+0x106>
 8004d4c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004d50:	4298      	cmp	r0, r3
 8004d52:	d05e      	beq.n	8004e12 <HAL_GPIO_DeInit+0x10a>
 8004d54:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004d58:	4298      	cmp	r0, r3
 8004d5a:	d05c      	beq.n	8004e16 <HAL_GPIO_DeInit+0x10e>
 8004d5c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004d60:	4298      	cmp	r0, r3
 8004d62:	d05a      	beq.n	8004e1a <HAL_GPIO_DeInit+0x112>
 8004d64:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004d68:	4298      	cmp	r0, r3
 8004d6a:	d058      	beq.n	8004e1e <HAL_GPIO_DeInit+0x116>
 8004d6c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004d70:	4298      	cmp	r0, r3
 8004d72:	d056      	beq.n	8004e22 <HAL_GPIO_DeInit+0x11a>
 8004d74:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004d78:	4298      	cmp	r0, r3
 8004d7a:	d054      	beq.n	8004e26 <HAL_GPIO_DeInit+0x11e>
 8004d7c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004d80:	4298      	cmp	r0, r3
 8004d82:	d052      	beq.n	8004e2a <HAL_GPIO_DeInit+0x122>
 8004d84:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004d88:	4298      	cmp	r0, r3
 8004d8a:	d050      	beq.n	8004e2e <HAL_GPIO_DeInit+0x126>
 8004d8c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004d90:	4298      	cmp	r0, r3
 8004d92:	bf0c      	ite	eq
 8004d94:	2309      	moveq	r3, #9
 8004d96:	230a      	movne	r3, #10
 8004d98:	40bb      	lsls	r3, r7
 8004d9a:	4573      	cmp	r3, lr
 8004d9c:	d113      	bne.n	8004dc6 <HAL_GPIO_DeInit+0xbe>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004d9e:	6823      	ldr	r3, [r4, #0]
 8004da0:	ea23 0306 	bic.w	r3, r3, r6
 8004da4:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8004da6:	6863      	ldr	r3, [r4, #4]
 8004da8:	ea23 0306 	bic.w	r3, r3, r6
 8004dac:	6063      	str	r3, [r4, #4]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8004dae:	68e3      	ldr	r3, [r4, #12]
 8004db0:	ea23 0306 	bic.w	r3, r3, r6
 8004db4:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8004db6:	68a3      	ldr	r3, [r4, #8]
 8004db8:	ea23 0306 	bic.w	r3, r3, r6
 8004dbc:	60a3      	str	r3, [r4, #8]
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
 8004dbe:	68ab      	ldr	r3, [r5, #8]
 8004dc0:	ea23 0309 	bic.w	r3, r3, r9
 8004dc4:	60ab      	str	r3, [r5, #8]
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 8004dc6:	0053      	lsls	r3, r2, #1
 8004dc8:	6805      	ldr	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8004dca:	08d6      	lsrs	r6, r2, #3
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 8004dcc:	fa0b f303 	lsl.w	r3, fp, r3
 8004dd0:	eb00 0686 	add.w	r6, r0, r6, lsl #2
 8004dd4:	ea25 0503 	bic.w	r5, r5, r3
 8004dd8:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8004dda:	f002 0507 	and.w	r5, r2, #7
 8004dde:	6a37      	ldr	r7, [r6, #32]
 8004de0:	00ad      	lsls	r5, r5, #2
 8004de2:	fa08 f505 	lsl.w	r5, r8, r5
 8004de6:	ea27 0705 	bic.w	r7, r7, r5
 8004dea:	6237      	str	r7, [r6, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8004dec:	68c5      	ldr	r5, [r0, #12]
 8004dee:	ea25 0503 	bic.w	r5, r5, r3
 8004df2:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004df4:	6845      	ldr	r5, [r0, #4]
 8004df6:	ea25 050c 	bic.w	r5, r5, ip
 8004dfa:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004dfc:	6885      	ldr	r5, [r0, #8]
 8004dfe:	ea25 0303 	bic.w	r3, r5, r3
 8004e02:	6083      	str	r3, [r0, #8]
  for(position = 0; position < GPIO_NUMBER; position++)
 8004e04:	3201      	adds	r2, #1
 8004e06:	2a10      	cmp	r2, #16
 8004e08:	d188      	bne.n	8004d1c <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8004e0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 8004e0e:	2300      	movs	r3, #0
 8004e10:	e7c2      	b.n	8004d98 <HAL_GPIO_DeInit+0x90>
 8004e12:	2301      	movs	r3, #1
 8004e14:	e7c0      	b.n	8004d98 <HAL_GPIO_DeInit+0x90>
 8004e16:	2302      	movs	r3, #2
 8004e18:	e7be      	b.n	8004d98 <HAL_GPIO_DeInit+0x90>
 8004e1a:	2303      	movs	r3, #3
 8004e1c:	e7bc      	b.n	8004d98 <HAL_GPIO_DeInit+0x90>
 8004e1e:	2304      	movs	r3, #4
 8004e20:	e7ba      	b.n	8004d98 <HAL_GPIO_DeInit+0x90>
 8004e22:	2305      	movs	r3, #5
 8004e24:	e7b8      	b.n	8004d98 <HAL_GPIO_DeInit+0x90>
 8004e26:	2306      	movs	r3, #6
 8004e28:	e7b6      	b.n	8004d98 <HAL_GPIO_DeInit+0x90>
 8004e2a:	2307      	movs	r3, #7
 8004e2c:	e7b4      	b.n	8004d98 <HAL_GPIO_DeInit+0x90>
 8004e2e:	2308      	movs	r3, #8
 8004e30:	e7b2      	b.n	8004d98 <HAL_GPIO_DeInit+0x90>
 8004e32:	bf00      	nop
 8004e34:	40013c00 	.word	0x40013c00
 8004e38:	40020000 	.word	0x40020000

08004e3c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004e3c:	6903      	ldr	r3, [r0, #16]
 8004e3e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8004e40:	bf14      	ite	ne
 8004e42:	2001      	movne	r0, #1
 8004e44:	2000      	moveq	r0, #0
 8004e46:	4770      	bx	lr

08004e48 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004e48:	b10a      	cbz	r2, 8004e4e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8004e4a:	6181      	str	r1, [r0, #24]
  }
}
 8004e4c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8004e4e:	0409      	lsls	r1, r1, #16
 8004e50:	e7fb      	b.n	8004e4a <HAL_GPIO_WritePin+0x2>

08004e52 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004e52:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004e54:	ea01 0203 	and.w	r2, r1, r3
 8004e58:	ea21 0103 	bic.w	r1, r1, r3
 8004e5c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004e60:	6181      	str	r1, [r0, #24]
}
 8004e62:	4770      	bx	lr

08004e64 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8004e64:	6803      	ldr	r3, [r0, #0]
 8004e66:	699a      	ldr	r2, [r3, #24]
 8004e68:	0791      	lsls	r1, r2, #30
 8004e6a:	d501      	bpl.n	8004e70 <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8004e6c:	2200      	movs	r2, #0
 8004e6e:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004e70:	699a      	ldr	r2, [r3, #24]
 8004e72:	07d2      	lsls	r2, r2, #31
 8004e74:	d403      	bmi.n	8004e7e <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8004e76:	699a      	ldr	r2, [r3, #24]
 8004e78:	f042 0201 	orr.w	r2, r2, #1
 8004e7c:	619a      	str	r2, [r3, #24]
  }
}
 8004e7e:	4770      	bx	lr

08004e80 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8004e80:	b530      	push	{r4, r5, lr}
 8004e82:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004e84:	f3c1 0109 	ubfx	r1, r1, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8004e88:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004e8a:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
 8004e8c:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004e8e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 8004e92:	4a05      	ldr	r2, [pc, #20]	@ (8004ea8 <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004e94:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 8004e96:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004e9a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 8004e9e:	ea20 0002 	bic.w	r0, r0, r2
 8004ea2:	4303      	orrs	r3, r0
 8004ea4:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8004ea6:	bd30      	pop	{r4, r5, pc}
 8004ea8:	03ff63ff 	.word	0x03ff63ff

08004eac <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 8004eac:	6803      	ldr	r3, [r0, #0]
{
 8004eae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 8004eb2:	699c      	ldr	r4, [r3, #24]
{
 8004eb4:	4605      	mov	r5, r0
 8004eb6:	460f      	mov	r7, r1
 8004eb8:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004eba:	f014 0410 	ands.w	r4, r4, #16
 8004ebe:	d06f      	beq.n	8004fa0 <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 8004ec0:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004ec2:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 8004ec4:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004ec6:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8004ec8:	682b      	ldr	r3, [r5, #0]
 8004eca:	699a      	ldr	r2, [r3, #24]
 8004ecc:	0690      	lsls	r0, r2, #26
 8004ece:	d461      	bmi.n	8004f94 <I2C_IsErrorOccurred+0xe8>
 8004ed0:	f1b8 0f00 	cmp.w	r8, #0
 8004ed4:	d035      	beq.n	8004f42 <I2C_IsErrorOccurred+0x96>
    error_code |= HAL_I2C_ERROR_AF;
 8004ed6:	f044 0404 	orr.w	r4, r4, #4
    status = HAL_ERROR;
 8004eda:	2001      	movs	r0, #1
  itflag = hi2c->Instance->ISR;
 8004edc:	682e      	ldr	r6, [r5, #0]
 8004ede:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8004ee0:	05d9      	lsls	r1, r3, #23
 8004ee2:	d505      	bpl.n	8004ef0 <I2C_IsErrorOccurred+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004ee4:	f44f 7280 	mov.w	r2, #256	@ 0x100
    error_code |= HAL_I2C_ERROR_BERR;
 8004ee8:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
 8004eec:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004eee:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8004ef0:	055a      	lsls	r2, r3, #21
 8004ef2:	d505      	bpl.n	8004f00 <I2C_IsErrorOccurred+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004ef4:	f44f 6280 	mov.w	r2, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
 8004ef8:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
 8004efc:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004efe:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8004f00:	059b      	lsls	r3, r3, #22
 8004f02:	d54f      	bpl.n	8004fa4 <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004f04:	f44f 7300 	mov.w	r3, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8004f08:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004f0c:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 8004f0e:	4628      	mov	r0, r5
 8004f10:	f7ff ffa8 	bl	8004e64 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8004f14:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 8004f16:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8004f18:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
 8004f1c:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
 8004f20:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
 8004f24:	f023 0301 	bic.w	r3, r3, #1
 8004f28:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 8004f2a:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8004f2c:	4323      	orrs	r3, r4
 8004f2e:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8004f30:	2320      	movs	r3, #32
 8004f32:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004f36:	2300      	movs	r3, #0
 8004f38:	f885 3042 	strb.w	r3, [r5, #66]	@ 0x42
    __HAL_UNLOCK(hi2c);
 8004f3c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
 8004f40:	e032      	b.n	8004fa8 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 8004f42:	1c7a      	adds	r2, r7, #1
 8004f44:	d0c1      	beq.n	8004eca <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004f46:	f7ff fb87 	bl	8004658 <HAL_GetTick>
 8004f4a:	1b80      	subs	r0, r0, r6
 8004f4c:	42b8      	cmp	r0, r7
 8004f4e:	d801      	bhi.n	8004f54 <I2C_IsErrorOccurred+0xa8>
 8004f50:	2f00      	cmp	r7, #0
 8004f52:	d1b9      	bne.n	8004ec8 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8004f54:	682b      	ldr	r3, [r5, #0]
 8004f56:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8004f58:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004f5c:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8004f5e:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004f60:	0400      	lsls	r0, r0, #16
 8004f62:	d50a      	bpl.n	8004f7a <I2C_IsErrorOccurred+0xce>
 8004f64:	0449      	lsls	r1, r1, #17
 8004f66:	d408      	bmi.n	8004f7a <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 8004f68:	2a20      	cmp	r2, #32
 8004f6a:	d006      	beq.n	8004f7a <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8004f6c:	685a      	ldr	r2, [r3, #4]
 8004f6e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004f72:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8004f74:	f7ff fb70 	bl	8004658 <HAL_GetTick>
 8004f78:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004f7a:	682b      	ldr	r3, [r5, #0]
 8004f7c:	699b      	ldr	r3, [r3, #24]
 8004f7e:	069b      	lsls	r3, r3, #26
 8004f80:	d4a2      	bmi.n	8004ec8 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8004f82:	f7ff fb69 	bl	8004658 <HAL_GetTick>
 8004f86:	1b80      	subs	r0, r0, r6
 8004f88:	2819      	cmp	r0, #25
 8004f8a:	d9f6      	bls.n	8004f7a <I2C_IsErrorOccurred+0xce>
              error_code |=HAL_I2C_ERROR_TIMEOUT;
 8004f8c:	2420      	movs	r4, #32
              status = HAL_ERROR;
 8004f8e:	f04f 0801 	mov.w	r8, #1
 8004f92:	e799      	b.n	8004ec8 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 8004f94:	f1b8 0f00 	cmp.w	r8, #0
 8004f98:	d19d      	bne.n	8004ed6 <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004f9a:	2220      	movs	r2, #32
 8004f9c:	61da      	str	r2, [r3, #28]
 8004f9e:	e79a      	b.n	8004ed6 <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 8004fa0:	4620      	mov	r0, r4
 8004fa2:	e79b      	b.n	8004edc <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 8004fa4:	2800      	cmp	r0, #0
 8004fa6:	d1b2      	bne.n	8004f0e <I2C_IsErrorOccurred+0x62>
}
 8004fa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004fac <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8004fac:	b570      	push	{r4, r5, r6, lr}
 8004fae:	4604      	mov	r4, r0
 8004fb0:	460d      	mov	r5, r1
 8004fb2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004fb4:	6823      	ldr	r3, [r4, #0]
 8004fb6:	699b      	ldr	r3, [r3, #24]
 8004fb8:	079b      	lsls	r3, r3, #30
 8004fba:	d501      	bpl.n	8004fc0 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8004fbc:	2000      	movs	r0, #0
 8004fbe:	e01b      	b.n	8004ff8 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004fc0:	4632      	mov	r2, r6
 8004fc2:	4629      	mov	r1, r5
 8004fc4:	4620      	mov	r0, r4
 8004fc6:	f7ff ff71 	bl	8004eac <I2C_IsErrorOccurred>
 8004fca:	b9a0      	cbnz	r0, 8004ff6 <I2C_WaitOnTXISFlagUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8004fcc:	1c6a      	adds	r2, r5, #1
 8004fce:	d0f1      	beq.n	8004fb4 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004fd0:	f7ff fb42 	bl	8004658 <HAL_GetTick>
 8004fd4:	1b80      	subs	r0, r0, r6
 8004fd6:	42a8      	cmp	r0, r5
 8004fd8:	d801      	bhi.n	8004fde <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8004fda:	2d00      	cmp	r5, #0
 8004fdc:	d1ea      	bne.n	8004fb4 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004fde:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8004fe0:	f043 0320 	orr.w	r3, r3, #32
 8004fe4:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8004fe6:	2320      	movs	r3, #32
 8004fe8:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8004fec:	2300      	movs	r3, #0
 8004fee:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
 8004ff2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004ff6:	2001      	movs	r0, #1
}
 8004ff8:	bd70      	pop	{r4, r5, r6, pc}

08004ffa <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8004ffa:	b570      	push	{r4, r5, r6, lr}
 8004ffc:	4604      	mov	r4, r0
 8004ffe:	460d      	mov	r5, r1
 8005000:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8005002:	6823      	ldr	r3, [r4, #0]
 8005004:	699b      	ldr	r3, [r3, #24]
 8005006:	069b      	lsls	r3, r3, #26
 8005008:	d501      	bpl.n	800500e <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 800500a:	2000      	movs	r0, #0
 800500c:	e019      	b.n	8005042 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 800500e:	4632      	mov	r2, r6
 8005010:	4629      	mov	r1, r5
 8005012:	4620      	mov	r0, r4
 8005014:	f7ff ff4a 	bl	8004eac <I2C_IsErrorOccurred>
 8005018:	b990      	cbnz	r0, 8005040 <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800501a:	f7ff fb1d 	bl	8004658 <HAL_GetTick>
 800501e:	1b80      	subs	r0, r0, r6
 8005020:	42a8      	cmp	r0, r5
 8005022:	d801      	bhi.n	8005028 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8005024:	2d00      	cmp	r5, #0
 8005026:	d1ec      	bne.n	8005002 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005028:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800502a:	f043 0320 	orr.w	r3, r3, #32
 800502e:	6463      	str	r3, [r4, #68]	@ 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 8005030:	2320      	movs	r3, #32
 8005032:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8005036:	2300      	movs	r3, #0
 8005038:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      __HAL_UNLOCK(hi2c);
 800503c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005040:	2001      	movs	r0, #1
}
 8005042:	bd70      	pop	{r4, r5, r6, pc}

08005044 <I2C_WaitOnFlagUntilTimeout>:
{
 8005044:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005048:	9f06      	ldr	r7, [sp, #24]
 800504a:	4604      	mov	r4, r0
 800504c:	4688      	mov	r8, r1
 800504e:	4616      	mov	r6, r2
 8005050:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005052:	6822      	ldr	r2, [r4, #0]
 8005054:	6993      	ldr	r3, [r2, #24]
 8005056:	ea38 0303 	bics.w	r3, r8, r3
 800505a:	bf0c      	ite	eq
 800505c:	2301      	moveq	r3, #1
 800505e:	2300      	movne	r3, #0
 8005060:	42b3      	cmp	r3, r6
 8005062:	d001      	beq.n	8005068 <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 8005064:	2000      	movs	r0, #0
 8005066:	e015      	b.n	8005094 <I2C_WaitOnFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8005068:	1c6b      	adds	r3, r5, #1
 800506a:	d0f3      	beq.n	8005054 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800506c:	f7ff faf4 	bl	8004658 <HAL_GetTick>
 8005070:	1bc0      	subs	r0, r0, r7
 8005072:	42a8      	cmp	r0, r5
 8005074:	d801      	bhi.n	800507a <I2C_WaitOnFlagUntilTimeout+0x36>
 8005076:	2d00      	cmp	r5, #0
 8005078:	d1eb      	bne.n	8005052 <I2C_WaitOnFlagUntilTimeout+0xe>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800507a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
        __HAL_UNLOCK(hi2c);
 800507c:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800507e:	f043 0320 	orr.w	r3, r3, #32
 8005082:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8005084:	2320      	movs	r3, #32
 8005086:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800508a:	2300      	movs	r3, #0
 800508c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
 8005090:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005094:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005098 <HAL_I2C_Init>:
{
 8005098:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800509a:	4604      	mov	r4, r0
 800509c:	2800      	cmp	r0, #0
 800509e:	d04a      	beq.n	8005136 <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80050a0:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 80050a4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80050a8:	b91b      	cbnz	r3, 80050b2 <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 80050aa:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
 80050ae:	f7fb fe2d 	bl	8000d0c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80050b2:	2324      	movs	r3, #36	@ 0x24
 80050b4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 80050b8:	6823      	ldr	r3, [r4, #0]
 80050ba:	681a      	ldr	r2, [r3, #0]
 80050bc:	f022 0201 	bic.w	r2, r2, #1
 80050c0:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 80050c2:	6862      	ldr	r2, [r4, #4]
 80050c4:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80050c8:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 80050ca:	689a      	ldr	r2, [r3, #8]
 80050cc:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80050d0:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80050d2:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 80050d6:	2901      	cmp	r1, #1
 80050d8:	d124      	bne.n	8005124 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80050da:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80050de:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80050e0:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80050e2:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80050e4:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 80050e8:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80050ec:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80050ee:	68da      	ldr	r2, [r3, #12]
 80050f0:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80050f4:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80050f6:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 80050fa:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 80050fc:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80050fe:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005102:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8005104:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8005108:	430a      	orrs	r2, r1
 800510a:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 800510c:	681a      	ldr	r2, [r3, #0]
 800510e:	f042 0201 	orr.w	r2, r2, #1
 8005112:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8005114:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005116:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8005118:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 800511c:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800511e:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 8005122:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005124:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8005128:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 800512a:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 800512c:	d1d8      	bne.n	80050e0 <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 800512e:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8005132:	605a      	str	r2, [r3, #4]
 8005134:	e7d4      	b.n	80050e0 <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 8005136:	2001      	movs	r0, #1
 8005138:	e7f3      	b.n	8005122 <HAL_I2C_Init+0x8a>

0800513a <HAL_I2C_DeInit>:
{
 800513a:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800513c:	4604      	mov	r4, r0
 800513e:	b198      	cbz	r0, 8005168 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8005140:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005142:	2324      	movs	r3, #36	@ 0x24
 8005144:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005148:	6813      	ldr	r3, [r2, #0]
 800514a:	f023 0301 	bic.w	r3, r3, #1
 800514e:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8005150:	f7fb fe20 	bl	8000d94 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005154:	2000      	movs	r0, #0
 8005156:	6460      	str	r0, [r4, #68]	@ 0x44
  __HAL_UNLOCK(hi2c);
 8005158:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 800515c:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8005160:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005162:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 8005166:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005168:	2001      	movs	r0, #1
 800516a:	e7fc      	b.n	8005166 <HAL_I2C_DeInit+0x2c>

0800516c <HAL_I2C_Mem_Write>:
{
 800516c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005170:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005172:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8005176:	4604      	mov	r4, r0
 8005178:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 800517a:	2b20      	cmp	r3, #32
{
 800517c:	4616      	mov	r6, r2
 800517e:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8005182:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005186:	f040 80c6 	bne.w	8005316 <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 800518a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800518c:	b113      	cbz	r3, 8005194 <HAL_I2C_Mem_Write+0x28>
 800518e:	f1ba 0f00 	cmp.w	sl, #0
 8005192:	d106      	bne.n	80051a2 <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005194:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8005198:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 800519a:	2001      	movs	r0, #1
}
 800519c:	b003      	add	sp, #12
 800519e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 80051a2:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 80051a6:	2b01      	cmp	r3, #1
 80051a8:	f000 80b5 	beq.w	8005316 <HAL_I2C_Mem_Write+0x1aa>
 80051ac:	f04f 0b01 	mov.w	fp, #1
 80051b0:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 80051b4:	f7ff fa50 	bl	8004658 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80051b8:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 80051ba:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80051bc:	9000      	str	r0, [sp, #0]
 80051be:	465a      	mov	r2, fp
 80051c0:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80051c4:	4620      	mov	r0, r4
 80051c6:	f7ff ff3d 	bl	8005044 <I2C_WaitOnFlagUntilTimeout>
 80051ca:	2800      	cmp	r0, #0
 80051cc:	d1e5      	bne.n	800519a <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80051ce:	2321      	movs	r3, #33	@ 0x21
    hi2c->XferISR   = NULL;
 80051d0:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80051d2:	fa5f f289 	uxtb.w	r2, r9
 80051d6:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80051d8:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80051dc:	2340      	movs	r3, #64	@ 0x40
 80051de:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 80051e2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80051e4:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80051e6:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 80051e8:	6263      	str	r3, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80051ea:	4b4c      	ldr	r3, [pc, #304]	@ (800531c <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferCount = Size;
 80051ec:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80051f0:	9300      	str	r3, [sp, #0]
 80051f2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80051f6:	f7ff fe43 	bl	8004e80 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80051fa:	462a      	mov	r2, r5
 80051fc:	4641      	mov	r1, r8
 80051fe:	4620      	mov	r0, r4
 8005200:	f7ff fed4 	bl	8004fac <I2C_WaitOnTXISFlagUntilTimeout>
 8005204:	bb18      	cbnz	r0, 800524e <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005206:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800520a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800520c:	d115      	bne.n	800523a <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800520e:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8005210:	2200      	movs	r2, #0
 8005212:	2180      	movs	r1, #128	@ 0x80
 8005214:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005216:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8005218:	4643      	mov	r3, r8
 800521a:	9500      	str	r5, [sp, #0]
 800521c:	f7ff ff12 	bl	8005044 <I2C_WaitOnFlagUntilTimeout>
 8005220:	b9a8      	cbnz	r0, 800524e <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005222:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005224:	b29b      	uxth	r3, r3
 8005226:	2bff      	cmp	r3, #255	@ 0xff
 8005228:	d815      	bhi.n	8005256 <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 800522a:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800522c:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 8005230:	b292      	uxth	r2, r2
 8005232:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005234:	b2d2      	uxtb	r2, r2
 8005236:	9000      	str	r0, [sp, #0]
 8005238:	e012      	b.n	8005260 <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800523a:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800523c:	4641      	mov	r1, r8
 800523e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005240:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005242:	462a      	mov	r2, r5
 8005244:	f7ff feb2 	bl	8004fac <I2C_WaitOnTXISFlagUntilTimeout>
 8005248:	b908      	cbnz	r0, 800524e <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800524a:	6823      	ldr	r3, [r4, #0]
 800524c:	e7df      	b.n	800520e <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 800524e:	2300      	movs	r3, #0
 8005250:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005254:	e7a1      	b.n	800519a <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005256:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8005258:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 800525c:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 800525e:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005260:	4639      	mov	r1, r7
 8005262:	4620      	mov	r0, r4
 8005264:	f7ff fe0c 	bl	8004e80 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005268:	462a      	mov	r2, r5
 800526a:	4641      	mov	r1, r8
 800526c:	4620      	mov	r0, r4
 800526e:	f7ff fe9d 	bl	8004fac <I2C_WaitOnTXISFlagUntilTimeout>
 8005272:	2800      	cmp	r0, #0
 8005274:	d191      	bne.n	800519a <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8005276:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005278:	6822      	ldr	r2, [r4, #0]
 800527a:	f813 1b01 	ldrb.w	r1, [r3], #1
 800527e:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8005280:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8005282:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005284:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8005286:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8005288:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 800528a:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 800528c:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 800528e:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005290:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005292:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005294:	b29b      	uxth	r3, r3
 8005296:	b1b3      	cbz	r3, 80052c6 <HAL_I2C_Mem_Write+0x15a>
 8005298:	b9aa      	cbnz	r2, 80052c6 <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 800529a:	4643      	mov	r3, r8
 800529c:	2180      	movs	r1, #128	@ 0x80
 800529e:	4620      	mov	r0, r4
 80052a0:	9500      	str	r5, [sp, #0]
 80052a2:	f7ff fecf 	bl	8005044 <I2C_WaitOnFlagUntilTimeout>
 80052a6:	2800      	cmp	r0, #0
 80052a8:	f47f af77 	bne.w	800519a <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80052ac:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80052ae:	b29b      	uxth	r3, r3
 80052b0:	2bff      	cmp	r3, #255	@ 0xff
 80052b2:	d928      	bls.n	8005306 <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80052b4:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80052b6:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80052ba:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80052bc:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80052be:	4639      	mov	r1, r7
 80052c0:	4620      	mov	r0, r4
 80052c2:	f7ff fddd 	bl	8004e80 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 80052c6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80052c8:	b29b      	uxth	r3, r3
 80052ca:	2b00      	cmp	r3, #0
 80052cc:	d1cc      	bne.n	8005268 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80052ce:	462a      	mov	r2, r5
 80052d0:	4641      	mov	r1, r8
 80052d2:	4620      	mov	r0, r4
 80052d4:	f7ff fe91 	bl	8004ffa <I2C_WaitOnSTOPFlagUntilTimeout>
 80052d8:	2800      	cmp	r0, #0
 80052da:	f47f af5e 	bne.w	800519a <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80052de:	6823      	ldr	r3, [r4, #0]
 80052e0:	2120      	movs	r1, #32
 80052e2:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80052e4:	685a      	ldr	r2, [r3, #4]
 80052e6:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 80052ea:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 80052ee:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 80052f2:	f022 0201 	bic.w	r2, r2, #1
 80052f6:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80052f8:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 80052fc:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005300:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8005304:	e74a      	b.n	800519c <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005306:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005308:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 800530c:	b292      	uxth	r2, r2
 800530e:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005310:	b2d2      	uxtb	r2, r2
 8005312:	9000      	str	r0, [sp, #0]
 8005314:	e7d3      	b.n	80052be <HAL_I2C_Mem_Write+0x152>
    __HAL_LOCK(hi2c);
 8005316:	2002      	movs	r0, #2
 8005318:	e740      	b.n	800519c <HAL_I2C_Mem_Write+0x30>
 800531a:	bf00      	nop
 800531c:	80002000 	.word	0x80002000

08005320 <HAL_I2C_Mem_Read>:
{
 8005320:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005324:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005326:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 800532a:	4604      	mov	r4, r0
 800532c:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 800532e:	2b20      	cmp	r3, #32
{
 8005330:	4616      	mov	r6, r2
 8005332:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8005336:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 800533a:	f040 80c9 	bne.w	80054d0 <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 800533e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005340:	b113      	cbz	r3, 8005348 <HAL_I2C_Mem_Read+0x28>
 8005342:	f1ba 0f00 	cmp.w	sl, #0
 8005346:	d106      	bne.n	8005356 <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005348:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800534c:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 800534e:	2001      	movs	r0, #1
}
 8005350:	b003      	add	sp, #12
 8005352:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8005356:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 800535a:	2b01      	cmp	r3, #1
 800535c:	f000 80b8 	beq.w	80054d0 <HAL_I2C_Mem_Read+0x1b0>
 8005360:	f04f 0b01 	mov.w	fp, #1
 8005364:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8005368:	f7ff f976 	bl	8004658 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800536c:	2319      	movs	r3, #25
 800536e:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8005370:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005372:	465a      	mov	r2, fp
 8005374:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005378:	4620      	mov	r0, r4
 800537a:	f7ff fe63 	bl	8005044 <I2C_WaitOnFlagUntilTimeout>
 800537e:	4603      	mov	r3, r0
 8005380:	2800      	cmp	r0, #0
 8005382:	d1e4      	bne.n	800534e <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005384:	2222      	movs	r2, #34	@ 0x22
    hi2c->XferISR   = NULL;
 8005386:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005388:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800538a:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800538e:	2240      	movs	r2, #64	@ 0x40
 8005390:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8005394:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005396:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005398:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 800539a:	6262      	str	r2, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800539c:	4a4d      	ldr	r2, [pc, #308]	@ (80054d4 <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferCount = Size;
 800539e:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80053a2:	9200      	str	r2, [sp, #0]
 80053a4:	fa5f f289 	uxtb.w	r2, r9
 80053a8:	f7ff fd6a 	bl	8004e80 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80053ac:	462a      	mov	r2, r5
 80053ae:	4641      	mov	r1, r8
 80053b0:	4620      	mov	r0, r4
 80053b2:	f7ff fdfb 	bl	8004fac <I2C_WaitOnTXISFlagUntilTimeout>
 80053b6:	bb20      	cbnz	r0, 8005402 <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80053b8:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80053bc:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80053be:	d116      	bne.n	80053ee <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80053c0:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 80053c2:	2200      	movs	r2, #0
 80053c4:	2140      	movs	r1, #64	@ 0x40
 80053c6:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80053c8:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 80053ca:	4643      	mov	r3, r8
 80053cc:	9500      	str	r5, [sp, #0]
 80053ce:	f7ff fe39 	bl	8005044 <I2C_WaitOnFlagUntilTimeout>
 80053d2:	b9b0      	cbnz	r0, 8005402 <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80053d4:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80053d6:	b29b      	uxth	r3, r3
 80053d8:	2bff      	cmp	r3, #255	@ 0xff
 80053da:	4b3f      	ldr	r3, [pc, #252]	@ (80054d8 <HAL_I2C_Mem_Read+0x1b8>)
 80053dc:	d815      	bhi.n	800540a <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 80053de:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 80053e0:	b292      	uxth	r2, r2
 80053e2:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80053e4:	b2d2      	uxtb	r2, r2
 80053e6:	9300      	str	r3, [sp, #0]
 80053e8:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80053ec:	e012      	b.n	8005414 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80053ee:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80053f0:	4641      	mov	r1, r8
 80053f2:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80053f4:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80053f6:	462a      	mov	r2, r5
 80053f8:	f7ff fdd8 	bl	8004fac <I2C_WaitOnTXISFlagUntilTimeout>
 80053fc:	b908      	cbnz	r0, 8005402 <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80053fe:	6823      	ldr	r3, [r4, #0]
 8005400:	e7de      	b.n	80053c0 <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 8005402:	2300      	movs	r3, #0
 8005404:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005408:	e7a1      	b.n	800534e <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 800540a:	22ff      	movs	r2, #255	@ 0xff
 800540c:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800540e:	9300      	str	r3, [sp, #0]
 8005410:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005414:	4639      	mov	r1, r7
 8005416:	4620      	mov	r0, r4
 8005418:	f7ff fd32 	bl	8004e80 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 800541c:	4643      	mov	r3, r8
 800541e:	2200      	movs	r2, #0
 8005420:	2104      	movs	r1, #4
 8005422:	4620      	mov	r0, r4
 8005424:	9500      	str	r5, [sp, #0]
 8005426:	f7ff fe0d 	bl	8005044 <I2C_WaitOnFlagUntilTimeout>
 800542a:	2800      	cmp	r0, #0
 800542c:	d18f      	bne.n	800534e <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 800542e:	6823      	ldr	r3, [r4, #0]
 8005430:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005432:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005434:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8005436:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 8005438:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 800543a:	3301      	adds	r3, #1
      hi2c->XferSize--;
 800543c:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800543e:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8005440:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005442:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8005444:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8005446:	8522      	strh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8005448:	b29b      	uxth	r3, r3
 800544a:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800544c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800544e:	b29b      	uxth	r3, r3
 8005450:	b1b3      	cbz	r3, 8005480 <HAL_I2C_Mem_Read+0x160>
 8005452:	b9aa      	cbnz	r2, 8005480 <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005454:	4643      	mov	r3, r8
 8005456:	2180      	movs	r1, #128	@ 0x80
 8005458:	4620      	mov	r0, r4
 800545a:	9500      	str	r5, [sp, #0]
 800545c:	f7ff fdf2 	bl	8005044 <I2C_WaitOnFlagUntilTimeout>
 8005460:	2800      	cmp	r0, #0
 8005462:	f47f af74 	bne.w	800534e <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005466:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005468:	b29b      	uxth	r3, r3
 800546a:	2bff      	cmp	r3, #255	@ 0xff
 800546c:	d928      	bls.n	80054c0 <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800546e:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005470:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005474:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005476:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005478:	4639      	mov	r1, r7
 800547a:	4620      	mov	r0, r4
 800547c:	f7ff fd00 	bl	8004e80 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005480:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005482:	b29b      	uxth	r3, r3
 8005484:	2b00      	cmp	r3, #0
 8005486:	d1c9      	bne.n	800541c <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005488:	462a      	mov	r2, r5
 800548a:	4641      	mov	r1, r8
 800548c:	4620      	mov	r0, r4
 800548e:	f7ff fdb4 	bl	8004ffa <I2C_WaitOnSTOPFlagUntilTimeout>
 8005492:	2800      	cmp	r0, #0
 8005494:	f47f af5b 	bne.w	800534e <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005498:	6823      	ldr	r3, [r4, #0]
 800549a:	2120      	movs	r1, #32
 800549c:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 800549e:	685a      	ldr	r2, [r3, #4]
 80054a0:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 80054a4:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 80054a8:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 80054ac:	f022 0201 	bic.w	r2, r2, #1
 80054b0:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80054b2:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 80054b6:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80054ba:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 80054be:	e747      	b.n	8005350 <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 80054c0:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80054c2:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 80054c6:	b292      	uxth	r2, r2
 80054c8:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80054ca:	b2d2      	uxtb	r2, r2
 80054cc:	9000      	str	r0, [sp, #0]
 80054ce:	e7d3      	b.n	8005478 <HAL_I2C_Mem_Read+0x158>
    __HAL_LOCK(hi2c);
 80054d0:	2002      	movs	r0, #2
 80054d2:	e73d      	b.n	8005350 <HAL_I2C_Mem_Read+0x30>
 80054d4:	80002000 	.word	0x80002000
 80054d8:	80002400 	.word	0x80002400

080054dc <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80054dc:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80054de:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 80054e2:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80054e4:	2a20      	cmp	r2, #32
 80054e6:	b2d4      	uxtb	r4, r2
 80054e8:	d11c      	bne.n	8005524 <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80054ea:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 80054ee:	2a01      	cmp	r2, #1
 80054f0:	d018      	beq.n	8005524 <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80054f2:	2224      	movs	r2, #36	@ 0x24
 80054f4:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80054f8:	6802      	ldr	r2, [r0, #0]
 80054fa:	6810      	ldr	r0, [r2, #0]
 80054fc:	f020 0001 	bic.w	r0, r0, #1
 8005500:	6010      	str	r0, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8005502:	6810      	ldr	r0, [r2, #0]
 8005504:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 8005508:	6010      	str	r0, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 800550a:	6810      	ldr	r0, [r2, #0]
 800550c:	4301      	orrs	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800550e:	2000      	movs	r0, #0
    hi2c->Instance->CR1 |= AnalogFilter;
 8005510:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8005512:	6811      	ldr	r1, [r2, #0]
 8005514:	f041 0101 	orr.w	r1, r1, #1
 8005518:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800551a:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 800551e:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005522:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 8005524:	2002      	movs	r0, #2
 8005526:	e7fc      	b.n	8005522 <HAL_I2CEx_ConfigAnalogFilter+0x46>

08005528 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005528:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800552a:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 800552e:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005530:	2a20      	cmp	r2, #32
 8005532:	b2d4      	uxtb	r4, r2
 8005534:	d11b      	bne.n	800556e <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005536:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 800553a:	2a01      	cmp	r2, #1
 800553c:	d017      	beq.n	800556e <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 800553e:	2224      	movs	r2, #36	@ 0x24
 8005540:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005544:	6802      	ldr	r2, [r0, #0]
 8005546:	6810      	ldr	r0, [r2, #0]
 8005548:	f020 0001 	bic.w	r0, r0, #1
 800554c:	6010      	str	r0, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 800554e:	6810      	ldr	r0, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8005550:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8005554:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005558:	2000      	movs	r0, #0
    hi2c->Instance->CR1 = tmpreg;
 800555a:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 800555c:	6811      	ldr	r1, [r2, #0]
 800555e:	f041 0101 	orr.w	r1, r1, #1
 8005562:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005564:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005568:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 800556c:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 800556e:	2002      	movs	r0, #2
 8005570:	e7fc      	b.n	800556c <HAL_I2CEx_ConfigDigitalFilter+0x44>

08005572 <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005572:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005574:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005576:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800557a:	3284      	adds	r2, #132	@ 0x84
 800557c:	1883      	adds	r3, r0, r2
{
 800557e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005582:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005584:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005588:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800558a:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800558e:	684c      	ldr	r4, [r1, #4]
 8005590:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005594:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005598:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800559c:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800559e:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80055a0:	68c5      	ldr	r5, [r0, #12]
 80055a2:	f3c5 450b 	ubfx	r5, r5, #16, #12
 80055a6:	443d      	add	r5, r7
 80055a8:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80055ac:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80055ae:	68c6      	ldr	r6, [r0, #12]
 80055b0:	68cd      	ldr	r5, [r1, #12]
 80055b2:	f3c6 060a 	ubfx	r6, r6, #0, #11
 80055b6:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80055b8:	689d      	ldr	r5, [r3, #8]
 80055ba:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 80055be:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80055c0:	688d      	ldr	r5, [r1, #8]
 80055c2:	68c7      	ldr	r7, [r0, #12]
 80055c4:	3501      	adds	r5, #1
 80055c6:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80055ca:	443d      	add	r5, r7
 80055cc:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80055d0:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80055d2:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80055d4:	691d      	ldr	r5, [r3, #16]
 80055d6:	f025 0507 	bic.w	r5, r5, #7
 80055da:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80055dc:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80055de:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80055e0:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80055e4:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80055e8:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80055ec:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 80055f0:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80055f4:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80055f8:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80055fc:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80055fe:	695d      	ldr	r5, [r3, #20]
 8005600:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8005604:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005606:	694d      	ldr	r5, [r1, #20]
 8005608:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800560a:	69dd      	ldr	r5, [r3, #28]
 800560c:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8005610:	f025 0507 	bic.w	r5, r5, #7
 8005614:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005616:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800561a:	433d      	orrs	r5, r7
 800561c:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800561e:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005620:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005622:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005626:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005628:	b31e      	cbz	r6, 8005672 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800562a:	2e01      	cmp	r6, #1
 800562c:	d023      	beq.n	8005676 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800562e:	1eb5      	subs	r5, r6, #2
 8005630:	2d02      	cmp	r5, #2
 8005632:	d922      	bls.n	800567a <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 8005634:	2e07      	cmp	r6, #7
 8005636:	bf14      	ite	ne
 8005638:	2501      	movne	r5, #1
 800563a:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800563c:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800563e:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005642:	f006 26e0 	and.w	r6, r6, #3758153728	@ 0xe000e000
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005646:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005648:	62de      	str	r6, [r3, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800564a:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800564c:	6a8e      	ldr	r6, [r1, #40]	@ 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800564e:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005650:	436e      	muls	r6, r5
 8005652:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005656:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005658:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 800565a:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 800565e:	f024 0407 	bic.w	r4, r4, #7
 8005662:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005664:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005666:	5883      	ldr	r3, [r0, r2]
 8005668:	f043 0301 	orr.w	r3, r3, #1
 800566c:	5083      	str	r3, [r0, r2]
}
 800566e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005672:	2504      	movs	r5, #4
 8005674:	e7e2      	b.n	800563c <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005676:	2503      	movs	r5, #3
 8005678:	e7e0      	b.n	800563c <LTDC_SetConfig+0xca>
    tmp = 2U;
 800567a:	2502      	movs	r5, #2
 800567c:	e7de      	b.n	800563c <LTDC_SetConfig+0xca>
	...

08005680 <HAL_LTDC_Init>:
{
 8005680:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005682:	4604      	mov	r4, r0
 8005684:	2800      	cmp	r0, #0
 8005686:	d063      	beq.n	8005750 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005688:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 800568c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005690:	b91b      	cbnz	r3, 800569a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005692:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005696:	f7fb fb99 	bl	8000dcc <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800569a:	2302      	movs	r3, #2
 800569c:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80056a0:	6823      	ldr	r3, [r4, #0]
 80056a2:	699a      	ldr	r2, [r3, #24]
 80056a4:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 80056a8:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80056aa:	6999      	ldr	r1, [r3, #24]
 80056ac:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80056b0:	4302      	orrs	r2, r0
 80056b2:	68e0      	ldr	r0, [r4, #12]
 80056b4:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80056b6:	6920      	ldr	r0, [r4, #16]
 80056b8:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80056ba:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80056bc:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80056be:	4925      	ldr	r1, [pc, #148]	@ (8005754 <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80056c0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80056c2:	689a      	ldr	r2, [r3, #8]
 80056c4:	400a      	ands	r2, r1
 80056c6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80056c8:	689a      	ldr	r2, [r3, #8]
 80056ca:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80056ce:	69a0      	ldr	r0, [r4, #24]
 80056d0:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80056d2:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80056d4:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80056d6:	68da      	ldr	r2, [r3, #12]
 80056d8:	400a      	ands	r2, r1
 80056da:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80056dc:	68da      	ldr	r2, [r3, #12]
 80056de:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80056e2:	6a20      	ldr	r0, [r4, #32]
 80056e4:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80056e6:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80056e8:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80056ea:	691a      	ldr	r2, [r3, #16]
 80056ec:	400a      	ands	r2, r1
 80056ee:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80056f0:	691a      	ldr	r2, [r3, #16]
 80056f2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80056f6:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80056f8:	4302      	orrs	r2, r0
 80056fa:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80056fc:	695a      	ldr	r2, [r3, #20]
 80056fe:	400a      	ands	r2, r1
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005700:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005702:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005704:	695a      	ldr	r2, [r3, #20]
 8005706:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800570a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800570c:	430a      	orrs	r2, r1
 800570e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005710:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005712:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005716:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800571a:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800571e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005720:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8005722:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8005726:	432a      	orrs	r2, r5
 8005728:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800572c:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800572e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005732:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005734:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005736:	f042 0206 	orr.w	r2, r2, #6
 800573a:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800573c:	699a      	ldr	r2, [r3, #24]
 800573e:	f042 0201 	orr.w	r2, r2, #1
 8005742:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8005744:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005746:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800574a:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 800574e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005750:	2001      	movs	r0, #1
 8005752:	e7fc      	b.n	800574e <HAL_LTDC_Init+0xce>
 8005754:	f000f800 	.word	0xf000f800

08005758 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8005758:	4770      	bx	lr

0800575a <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 800575a:	4770      	bx	lr

0800575c <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800575c:	6803      	ldr	r3, [r0, #0]
{
 800575e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005760:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
{
 8005762:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005764:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005766:	0772      	lsls	r2, r6, #29
 8005768:	d514      	bpl.n	8005794 <HAL_LTDC_IRQHandler+0x38>
 800576a:	0769      	lsls	r1, r5, #29
 800576c:	d512      	bpl.n	8005794 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800576e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005770:	f022 0204 	bic.w	r2, r2, #4
 8005774:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005776:	2204      	movs	r2, #4
 8005778:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800577a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800577e:	f043 0301 	orr.w	r3, r3, #1
 8005782:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8005786:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005788:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800578c:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005790:	f7ff ffe2 	bl	8005758 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005794:	07b2      	lsls	r2, r6, #30
 8005796:	d516      	bpl.n	80057c6 <HAL_LTDC_IRQHandler+0x6a>
 8005798:	07ab      	lsls	r3, r5, #30
 800579a:	d514      	bpl.n	80057c6 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800579c:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 800579e:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80057a0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80057a2:	f022 0202 	bic.w	r2, r2, #2
 80057a6:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80057a8:	2202      	movs	r2, #2
 80057aa:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80057ac:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 80057b0:	4313      	orrs	r3, r2
 80057b2:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80057b6:	2304      	movs	r3, #4
 80057b8:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80057bc:	2300      	movs	r3, #0
 80057be:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80057c2:	f7ff ffc9 	bl	8005758 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80057c6:	07f0      	lsls	r0, r6, #31
 80057c8:	d510      	bpl.n	80057ec <HAL_LTDC_IRQHandler+0x90>
 80057ca:	07e9      	lsls	r1, r5, #31
 80057cc:	d50e      	bpl.n	80057ec <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80057ce:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 80057d0:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80057d2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80057d4:	f022 0201 	bic.w	r2, r2, #1
 80057d8:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80057da:	2201      	movs	r2, #1
 80057dc:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 80057de:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80057e0:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80057e4:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80057e8:	f7fc fc6a 	bl	80020c0 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80057ec:	0732      	lsls	r2, r6, #28
 80057ee:	d511      	bpl.n	8005814 <HAL_LTDC_IRQHandler+0xb8>
 80057f0:	072b      	lsls	r3, r5, #28
 80057f2:	d50f      	bpl.n	8005814 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80057f4:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 80057f6:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80057f8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80057fa:	f022 0208 	bic.w	r2, r2, #8
 80057fe:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005800:	2208      	movs	r2, #8
 8005802:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005804:	2301      	movs	r3, #1
 8005806:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800580a:	2300      	movs	r3, #0
 800580c:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005810:	f7ff ffa3 	bl	800575a <HAL_LTDC_ReloadEventCallback>
}
 8005814:	bd70      	pop	{r4, r5, r6, pc}

08005816 <HAL_LTDC_ConfigLayer>:
{
 8005816:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800581a:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
 800581e:	4606      	mov	r6, r0
 8005820:	460f      	mov	r7, r1
 8005822:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
 8005824:	2b01      	cmp	r3, #1
 8005826:	f04f 0002 	mov.w	r0, #2
 800582a:	d01f      	beq.n	800586c <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800582c:	2434      	movs	r4, #52	@ 0x34
  __HAL_LOCK(hltdc);
 800582e:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005832:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005834:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005838:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 800583c:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005840:	3438      	adds	r4, #56	@ 0x38
 8005842:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005844:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005846:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005848:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800584a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800584c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800584e:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005850:	4630      	mov	r0, r6
 8005852:	4662      	mov	r2, ip
 8005854:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005856:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005858:	f7ff fe8b 	bl	8005572 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800585c:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800585e:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005860:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005864:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8005868:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 800586c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005870 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005870:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
{
 8005874:	4603      	mov	r3, r0
 8005876:	2002      	movs	r0, #2
  __HAL_LOCK(hltdc);
 8005878:	2a01      	cmp	r2, #1
 800587a:	d012      	beq.n	80058a2 <HAL_LTDC_ProgramLineEvent+0x32>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800587c:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800587e:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005882:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8005884:	f020 0001 	bic.w	r0, r0, #1
 8005888:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800588a:	4806      	ldr	r0, [pc, #24]	@ (80058a4 <HAL_LTDC_ProgramLineEvent+0x34>)
 800588c:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_UNLOCK(hltdc);
 800588e:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005890:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8005892:	f041 0101 	orr.w	r1, r1, #1
 8005896:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8005898:	2201      	movs	r2, #1
  __HAL_UNLOCK(hltdc);
 800589a:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_READY;
 800589e:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
}
 80058a2:	4770      	bx	lr
 80058a4:	40016800 	.word	0x40016800

080058a8 <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 80058a8:	4b19      	ldr	r3, [pc, #100]	@ (8005910 <HAL_PWREx_EnableOverDrive+0x68>)
{
 80058aa:	b537      	push	{r0, r1, r2, r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 80058ac:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 80058ae:	4c19      	ldr	r4, [pc, #100]	@ (8005914 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80058b0:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80058b4:	641a      	str	r2, [r3, #64]	@ 0x40
 80058b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80058b8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80058bc:	9301      	str	r3, [sp, #4]
 80058be:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 80058c0:	6823      	ldr	r3, [r4, #0]
 80058c2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80058c6:	6023      	str	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80058c8:	f7fe fec6 	bl	8004658 <HAL_GetTick>
 80058cc:	4605      	mov	r5, r0

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80058ce:	6863      	ldr	r3, [r4, #4]
 80058d0:	03da      	lsls	r2, r3, #15
 80058d2:	d50c      	bpl.n	80058ee <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80058d4:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80058d6:	4d0f      	ldr	r5, [pc, #60]	@ (8005914 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80058d8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80058dc:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 80058de:	f7fe febb 	bl	8004658 <HAL_GetTick>
 80058e2:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80058e4:	686b      	ldr	r3, [r5, #4]
 80058e6:	039b      	lsls	r3, r3, #14
 80058e8:	d50a      	bpl.n	8005900 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 80058ea:	2000      	movs	r0, #0
 80058ec:	e006      	b.n	80058fc <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80058ee:	f7fe feb3 	bl	8004658 <HAL_GetTick>
 80058f2:	1b40      	subs	r0, r0, r5
 80058f4:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80058f8:	d9e9      	bls.n	80058ce <HAL_PWREx_EnableOverDrive+0x26>
      return HAL_TIMEOUT;
 80058fa:	2003      	movs	r0, #3
}
 80058fc:	b003      	add	sp, #12
 80058fe:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005900:	f7fe feaa 	bl	8004658 <HAL_GetTick>
 8005904:	1b00      	subs	r0, r0, r4
 8005906:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800590a:	d9eb      	bls.n	80058e4 <HAL_PWREx_EnableOverDrive+0x3c>
 800590c:	e7f5      	b.n	80058fa <HAL_PWREx_EnableOverDrive+0x52>
 800590e:	bf00      	nop
 8005910:	40023800 	.word	0x40023800
 8005914:	40007000 	.word	0x40007000

08005918 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8005918:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 800591c:	6a4e      	ldr	r6, [r1, #36]	@ 0x24
 800591e:	b136      	cbz	r6, 800592e <QSPI_Config+0x16>
 8005920:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
 8005924:	d003      	beq.n	800592e <QSPI_Config+0x16>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005926:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8005928:	6804      	ldr	r4, [r0, #0]
 800592a:	3b01      	subs	r3, #1
 800592c:	6123      	str	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800592e:	f8d1 a018 	ldr.w	sl, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005932:	e9d1 7e07 	ldrd	r7, lr, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005936:	f1ba 0f00 	cmp.w	sl, #0
 800593a:	d04c      	beq.n	80059d6 <QSPI_Config+0xbe>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800593c:	694c      	ldr	r4, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800593e:	6805      	ldr	r5, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005940:	ea4f 4c84 	mov.w	ip, r4, lsl #18
 8005944:	ea4a 0406 	orr.w	r4, sl, r6
 8005948:	680b      	ldr	r3, [r1, #0]
 800594a:	f8d1 8034 	ldr.w	r8, [r1, #52]	@ 0x34
 800594e:	ea44 0a02 	orr.w	sl, r4, r2
 8005952:	e9d1 090b 	ldrd	r0, r9, [r1, #44]	@ 0x2c
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005956:	f1be 0f00 	cmp.w	lr, #0
 800595a:	d024      	beq.n	80059a6 <QSPI_Config+0x8e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800595c:	688e      	ldr	r6, [r1, #8]
 800595e:	ea4a 040e 	orr.w	r4, sl, lr
 8005962:	61ee      	str	r6, [r5, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005964:	690e      	ldr	r6, [r1, #16]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005966:	b19f      	cbz	r7, 8005990 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005968:	433b      	orrs	r3, r7
 800596a:	4303      	orrs	r3, r0
 800596c:	68c8      	ldr	r0, [r1, #12]
 800596e:	ea43 0309 	orr.w	r3, r3, r9
 8005972:	ea43 0308 	orr.w	r3, r3, r8
 8005976:	4333      	orrs	r3, r6
 8005978:	4303      	orrs	r3, r0
 800597a:	ea43 030c 	orr.w	r3, r3, ip
 800597e:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005980:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005984:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005986:	d001      	beq.n	800598c <QSPI_Config+0x74>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005988:	684b      	ldr	r3, [r1, #4]
 800598a:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 800598c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005990:	4303      	orrs	r3, r0
 8005992:	ea43 0309 	orr.w	r3, r3, r9
 8005996:	ea43 0308 	orr.w	r3, r3, r8
 800599a:	4333      	orrs	r3, r6
 800599c:	ea43 030c 	orr.w	r3, r3, ip
 80059a0:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80059a2:	616b      	str	r3, [r5, #20]
 80059a4:	e7f2      	b.n	800598c <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80059a6:	b167      	cbz	r7, 80059c2 <QSPI_Config+0xaa>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80059a8:	433b      	orrs	r3, r7
 80059aa:	4303      	orrs	r3, r0
 80059ac:	68c8      	ldr	r0, [r1, #12]
 80059ae:	ea43 0309 	orr.w	r3, r3, r9
 80059b2:	ea43 0308 	orr.w	r3, r3, r8
 80059b6:	4303      	orrs	r3, r0
 80059b8:	ea43 030c 	orr.w	r3, r3, ip
 80059bc:	ea43 030a 	orr.w	r3, r3, sl
 80059c0:	e7de      	b.n	8005980 <QSPI_Config+0x68>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80059c2:	4303      	orrs	r3, r0
 80059c4:	ea43 0309 	orr.w	r3, r3, r9
 80059c8:	ea43 0408 	orr.w	r4, r3, r8
 80059cc:	ea44 030c 	orr.w	r3, r4, ip
 80059d0:	ea43 030a 	orr.w	r3, r3, sl
 80059d4:	e7e5      	b.n	80059a2 <QSPI_Config+0x8a>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80059d6:	f1be 0f00 	cmp.w	lr, #0
 80059da:	d02c      	beq.n	8005a36 <QSPI_Config+0x11e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80059dc:	ea46 050e 	orr.w	r5, r6, lr
 80059e0:	688b      	ldr	r3, [r1, #8]
 80059e2:	6804      	ldr	r4, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80059e4:	694e      	ldr	r6, [r1, #20]
 80059e6:	4315      	orrs	r5, r2
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80059e8:	61e3      	str	r3, [r4, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80059ea:	f8d1 c034 	ldr.w	ip, [r1, #52]	@ 0x34
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80059ee:	04b6      	lsls	r6, r6, #18
 80059f0:	690b      	ldr	r3, [r1, #16]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80059f2:	e9d1 8e0b 	ldrd	r8, lr, [r1, #44]	@ 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80059f6:	b1a7      	cbz	r7, 8005a22 <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80059f8:	433b      	orrs	r3, r7
 80059fa:	68c8      	ldr	r0, [r1, #12]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80059fc:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005a00:	ea43 0308 	orr.w	r3, r3, r8
 8005a04:	ea43 030e 	orr.w	r3, r3, lr
 8005a08:	ea43 030c 	orr.w	r3, r3, ip
 8005a0c:	ea43 0300 	orr.w	r3, r3, r0
 8005a10:	ea43 0306 	orr.w	r3, r3, r6
 8005a14:	ea43 0305 	orr.w	r3, r3, r5
 8005a18:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005a1a:	d0b7      	beq.n	800598c <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005a1c:	684b      	ldr	r3, [r1, #4]
 8005a1e:	61a3      	str	r3, [r4, #24]
 8005a20:	e7b4      	b.n	800598c <QSPI_Config+0x74>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005a22:	ea43 0308 	orr.w	r3, r3, r8
 8005a26:	ea43 030e 	orr.w	r3, r3, lr
 8005a2a:	ea43 030c 	orr.w	r3, r3, ip
 8005a2e:	4333      	orrs	r3, r6
 8005a30:	432b      	orrs	r3, r5
 8005a32:	6163      	str	r3, [r4, #20]
 8005a34:	e7aa      	b.n	800598c <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005a36:	b1d7      	cbz	r7, 8005a6e <QSPI_Config+0x156>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005a38:	ea46 0307 	orr.w	r3, r6, r7
 8005a3c:	6acc      	ldr	r4, [r1, #44]	@ 0x2c
 8005a3e:	6800      	ldr	r0, [r0, #0]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005a40:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005a44:	ea43 0302 	orr.w	r3, r3, r2
 8005a48:	ea43 0304 	orr.w	r3, r3, r4
 8005a4c:	6b0c      	ldr	r4, [r1, #48]	@ 0x30
 8005a4e:	ea43 0304 	orr.w	r3, r3, r4
 8005a52:	6b4c      	ldr	r4, [r1, #52]	@ 0x34
 8005a54:	ea43 0304 	orr.w	r3, r3, r4
 8005a58:	68cc      	ldr	r4, [r1, #12]
 8005a5a:	ea43 0304 	orr.w	r3, r3, r4
 8005a5e:	694c      	ldr	r4, [r1, #20]
 8005a60:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8005a64:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005a66:	d091      	beq.n	800598c <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005a68:	684b      	ldr	r3, [r1, #4]
 8005a6a:	6183      	str	r3, [r0, #24]
 8005a6c:	e78e      	b.n	800598c <QSPI_Config+0x74>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8005a6e:	2e00      	cmp	r6, #0
 8005a70:	d08c      	beq.n	800598c <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005a72:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 8005a74:	6800      	ldr	r0, [r0, #0]
 8005a76:	4333      	orrs	r3, r6
 8005a78:	4313      	orrs	r3, r2
 8005a7a:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 8005a7c:	4313      	orrs	r3, r2
 8005a7e:	6b4a      	ldr	r2, [r1, #52]	@ 0x34
 8005a80:	4313      	orrs	r3, r2
 8005a82:	694a      	ldr	r2, [r1, #20]
 8005a84:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8005a88:	6143      	str	r3, [r0, #20]
}
 8005a8a:	e77f      	b.n	800598c <QSPI_Config+0x74>

08005a8c <QSPI_WaitFlagStateUntilTimeout>:
{
 8005a8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a90:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005a94:	4604      	mov	r4, r0
 8005a96:	460e      	mov	r6, r1
 8005a98:	4615      	mov	r5, r2
 8005a9a:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8005a9c:	6822      	ldr	r2, [r4, #0]
 8005a9e:	6893      	ldr	r3, [r2, #8]
 8005aa0:	4233      	tst	r3, r6
 8005aa2:	bf14      	ite	ne
 8005aa4:	2301      	movne	r3, #1
 8005aa6:	2300      	moveq	r3, #0
 8005aa8:	42ab      	cmp	r3, r5
 8005aaa:	d101      	bne.n	8005ab0 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8005aac:	2000      	movs	r0, #0
 8005aae:	e012      	b.n	8005ad6 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005ab0:	f1b8 3fff 	cmp.w	r8, #4294967295
 8005ab4:	d0f3      	beq.n	8005a9e <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005ab6:	f7fe fdcf 	bl	8004658 <HAL_GetTick>
 8005aba:	1bc0      	subs	r0, r0, r7
 8005abc:	4540      	cmp	r0, r8
 8005abe:	d802      	bhi.n	8005ac6 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8005ac0:	f1b8 0f00 	cmp.w	r8, #0
 8005ac4:	d1ea      	bne.n	8005a9c <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8005ac6:	2304      	movs	r3, #4
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8005ac8:	2001      	movs	r0, #1
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8005aca:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8005ace:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8005ad0:	f043 0301 	orr.w	r3, r3, #1
 8005ad4:	6463      	str	r3, [r4, #68]	@ 0x44
}
 8005ad6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005adc <HAL_QSPI_Init>:
{
 8005adc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005ade:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005ae0:	f7fe fdba 	bl	8004658 <HAL_GetTick>
 8005ae4:	4605      	mov	r5, r0
  if(hqspi == NULL)
 8005ae6:	2c00      	cmp	r4, #0
 8005ae8:	d046      	beq.n	8005b78 <HAL_QSPI_Init+0x9c>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8005aea:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8005aee:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005af2:	b93b      	cbnz	r3, 8005b04 <HAL_QSPI_Init+0x28>
    HAL_QSPI_MspInit(hqspi);
 8005af4:	4620      	mov	r0, r4
    hqspi->Lock = HAL_UNLOCKED;
 8005af6:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    HAL_QSPI_MspInit(hqspi);
 8005afa:	f7fb fa15 	bl	8000f28 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8005afe:	f241 3388 	movw	r3, #5000	@ 0x1388
 8005b02:	64a3      	str	r3, [r4, #72]	@ 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005b04:	6821      	ldr	r1, [r4, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005b06:	4620      	mov	r0, r4
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005b08:	68a3      	ldr	r3, [r4, #8]
 8005b0a:	680a      	ldr	r2, [r1, #0]
 8005b0c:	3b01      	subs	r3, #1
 8005b0e:	f422 52f8 	bic.w	r2, r2, #7936	@ 0x1f00
 8005b12:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005b16:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005b18:	600a      	str	r2, [r1, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005b1a:	2200      	movs	r2, #0
 8005b1c:	9300      	str	r3, [sp, #0]
 8005b1e:	2120      	movs	r1, #32
 8005b20:	462b      	mov	r3, r5
 8005b22:	f7ff ffb3 	bl	8005a8c <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8005b26:	bb10      	cbnz	r0, 8005b6e <HAL_QSPI_Init+0x92>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8005b28:	6822      	ldr	r2, [r4, #0]
 8005b2a:	69e5      	ldr	r5, [r4, #28]
 8005b2c:	68e3      	ldr	r3, [r4, #12]
 8005b2e:	6811      	ldr	r1, [r2, #0]
 8005b30:	432b      	orrs	r3, r5
 8005b32:	6a25      	ldr	r5, [r4, #32]
 8005b34:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8005b38:	432b      	orrs	r3, r5
 8005b3a:	6865      	ldr	r5, [r4, #4]
 8005b3c:	f021 01d0 	bic.w	r1, r1, #208	@ 0xd0
 8005b40:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8005b44:	430b      	orrs	r3, r1
 8005b46:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8005b48:	6855      	ldr	r5, [r2, #4]
 8005b4a:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005b4e:	430b      	orrs	r3, r1
 8005b50:	6921      	ldr	r1, [r4, #16]
 8005b52:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005b56:	4909      	ldr	r1, [pc, #36]	@ (8005b7c <HAL_QSPI_Init+0xa0>)
 8005b58:	4029      	ands	r1, r5
 8005b5a:	430b      	orrs	r3, r1
 8005b5c:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8005b5e:	6813      	ldr	r3, [r2, #0]
 8005b60:	f043 0301 	orr.w	r3, r3, #1
 8005b64:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8005b66:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005b68:	6460      	str	r0, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8005b6a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005b6e:	2300      	movs	r3, #0
 8005b70:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005b74:	b003      	add	sp, #12
 8005b76:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8005b78:	2001      	movs	r0, #1
 8005b7a:	e7fb      	b.n	8005b74 <HAL_QSPI_Init+0x98>
 8005b7c:	ffe0f8fe 	.word	0xffe0f8fe

08005b80 <HAL_QSPI_DeInit>:
{
 8005b80:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8005b82:	4604      	mov	r4, r0
 8005b84:	b168      	cbz	r0, 8005ba2 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8005b86:	6802      	ldr	r2, [r0, #0]
 8005b88:	6813      	ldr	r3, [r2, #0]
 8005b8a:	f023 0301 	bic.w	r3, r3, #1
 8005b8e:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8005b90:	f7fb fa38 	bl	8001004 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005b94:	2000      	movs	r0, #0
 8005b96:	6460      	str	r0, [r4, #68]	@ 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8005b98:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005b9c:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
}
 8005ba0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005ba2:	2001      	movs	r0, #1
 8005ba4:	e7fc      	b.n	8005ba0 <HAL_QSPI_DeInit+0x20>

08005ba6 <HAL_QSPI_Command>:
{
 8005ba6:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005baa:	4604      	mov	r4, r0
 8005bac:	468a      	mov	sl, r1
 8005bae:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005bb0:	f7fe fd52 	bl	8004658 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005bb4:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 8005bb8:	4607      	mov	r7, r0
  __HAL_LOCK(hqspi);
 8005bba:	2b01      	cmp	r3, #1
 8005bbc:	d036      	beq.n	8005c2c <HAL_QSPI_Command+0x86>
 8005bbe:	2301      	movs	r3, #1
 8005bc0:	2602      	movs	r6, #2
 8005bc2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005bc6:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8005bca:	2b01      	cmp	r3, #1
 8005bcc:	fa5f f983 	uxtb.w	r9, r3
 8005bd0:	d128      	bne.n	8005c24 <HAL_QSPI_Command+0x7e>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005bd2:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005bd4:	4603      	mov	r3, r0
 8005bd6:	2120      	movs	r1, #32
 8005bd8:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005bda:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8005bdc:	f884 6041 	strb.w	r6, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005be0:	f8cd 8000 	str.w	r8, [sp]
 8005be4:	f7ff ff52 	bl	8005a8c <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005be8:	4605      	mov	r5, r0
 8005bea:	b9a0      	cbnz	r0, 8005c16 <HAL_QSPI_Command+0x70>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005bec:	4602      	mov	r2, r0
 8005bee:	4651      	mov	r1, sl
 8005bf0:	4620      	mov	r0, r4
 8005bf2:	f7ff fe91 	bl	8005918 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8005bf6:	f8da 3024 	ldr.w	r3, [sl, #36]	@ 0x24
 8005bfa:	b953      	cbnz	r3, 8005c12 <HAL_QSPI_Command+0x6c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005bfc:	463b      	mov	r3, r7
 8005bfe:	464a      	mov	r2, r9
 8005c00:	4631      	mov	r1, r6
 8005c02:	4620      	mov	r0, r4
 8005c04:	f8cd 8000 	str.w	r8, [sp]
 8005c08:	f7ff ff40 	bl	8005a8c <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005c0c:	b960      	cbnz	r0, 8005c28 <HAL_QSPI_Command+0x82>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005c0e:	6823      	ldr	r3, [r4, #0]
 8005c10:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005c12:	f884 9041 	strb.w	r9, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005c16:	2300      	movs	r3, #0
 8005c18:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005c1c:	4628      	mov	r0, r5
 8005c1e:	b002      	add	sp, #8
 8005c20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    status = HAL_BUSY;
 8005c24:	4635      	mov	r5, r6
 8005c26:	e7f6      	b.n	8005c16 <HAL_QSPI_Command+0x70>
 8005c28:	4605      	mov	r5, r0
 8005c2a:	e7f4      	b.n	8005c16 <HAL_QSPI_Command+0x70>
  __HAL_LOCK(hqspi);
 8005c2c:	2502      	movs	r5, #2
 8005c2e:	e7f5      	b.n	8005c1c <HAL_QSPI_Command+0x76>

08005c30 <HAL_QSPI_AutoPolling>:
{
 8005c30:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005c34:	4604      	mov	r4, r0
 8005c36:	461f      	mov	r7, r3
 8005c38:	4689      	mov	r9, r1
 8005c3a:	4615      	mov	r5, r2
  uint32_t tickstart = HAL_GetTick();
 8005c3c:	f7fe fd0c 	bl	8004658 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005c40:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 8005c44:	4606      	mov	r6, r0
  __HAL_LOCK(hqspi);
 8005c46:	2b01      	cmp	r3, #1
 8005c48:	d041      	beq.n	8005cce <HAL_QSPI_AutoPolling+0x9e>
 8005c4a:	2301      	movs	r3, #1
 8005c4c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005c50:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8005c54:	2b01      	cmp	r3, #1
 8005c56:	fa5f f883 	uxtb.w	r8, r3
 8005c5a:	d136      	bne.n	8005cca <HAL_QSPI_AutoPolling+0x9a>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005c5c:	2342      	movs	r3, #66	@ 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005c5e:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005c60:	2120      	movs	r1, #32
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005c62:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005c64:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005c68:	4603      	mov	r3, r0
 8005c6a:	9700      	str	r7, [sp, #0]
 8005c6c:	4620      	mov	r0, r4
 8005c6e:	f7ff ff0d 	bl	8005a8c <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005c72:	bb20      	cbnz	r0, 8005cbe <HAL_QSPI_AutoPolling+0x8e>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005c74:	6822      	ldr	r2, [r4, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005c76:	4620      	mov	r0, r4
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005c78:	682b      	ldr	r3, [r5, #0]
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8005c7a:	6929      	ldr	r1, [r5, #16]
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005c7c:	6293      	str	r3, [r2, #40]	@ 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8005c7e:	686b      	ldr	r3, [r5, #4]
 8005c80:	6253      	str	r3, [r2, #36]	@ 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8005c82:	68ab      	ldr	r3, [r5, #8]
 8005c84:	62d3      	str	r3, [r2, #44]	@ 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8005c86:	6813      	ldr	r3, [r2, #0]
 8005c88:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8005c8c:	430b      	orrs	r3, r1
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005c8e:	4649      	mov	r1, r9
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8005c90:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8005c94:	6013      	str	r3, [r2, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005c96:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
      cmd->NbData = cfg->StatusBytesSize;
 8005c9a:	68eb      	ldr	r3, [r5, #12]
 8005c9c:	f8c9 3028 	str.w	r3, [r9, #40]	@ 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005ca0:	f7ff fe3a 	bl	8005918 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8005ca4:	4633      	mov	r3, r6
 8005ca6:	4642      	mov	r2, r8
 8005ca8:	2108      	movs	r1, #8
 8005caa:	4620      	mov	r0, r4
 8005cac:	9700      	str	r7, [sp, #0]
 8005cae:	f7ff feed 	bl	8005a8c <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005cb2:	b920      	cbnz	r0, 8005cbe <HAL_QSPI_AutoPolling+0x8e>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8005cb4:	6823      	ldr	r3, [r4, #0]
 8005cb6:	2208      	movs	r2, #8
 8005cb8:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005cba:	f884 8041 	strb.w	r8, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005cbe:	2300      	movs	r3, #0
 8005cc0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005cc4:	b003      	add	sp, #12
 8005cc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8005cca:	2002      	movs	r0, #2
 8005ccc:	e7f7      	b.n	8005cbe <HAL_QSPI_AutoPolling+0x8e>
  __HAL_LOCK(hqspi);
 8005cce:	2002      	movs	r0, #2
 8005cd0:	e7f8      	b.n	8005cc4 <HAL_QSPI_AutoPolling+0x94>

08005cd2 <HAL_QSPI_MemoryMapped>:
{
 8005cd2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005cd4:	4604      	mov	r4, r0
 8005cd6:	4616      	mov	r6, r2
 8005cd8:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005cda:	f7fe fcbd 	bl	8004658 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005cde:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 8005ce2:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005ce4:	2a01      	cmp	r2, #1
 8005ce6:	d033      	beq.n	8005d50 <HAL_QSPI_MemoryMapped+0x7e>
 8005ce8:	2201      	movs	r2, #1
 8005cea:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005cee:	f894 2041 	ldrb.w	r2, [r4, #65]	@ 0x41
 8005cf2:	2a01      	cmp	r2, #1
 8005cf4:	d12a      	bne.n	8005d4c <HAL_QSPI_MemoryMapped+0x7a>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005cf6:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005cf8:	2182      	movs	r1, #130	@ 0x82
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005cfa:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005cfc:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005cfe:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005d02:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8005d04:	9100      	str	r1, [sp, #0]
 8005d06:	2120      	movs	r1, #32
 8005d08:	f7ff fec0 	bl	8005a8c <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005d0c:	4605      	mov	r5, r0
 8005d0e:	b9b8      	cbnz	r0, 8005d40 <HAL_QSPI_MemoryMapped+0x6e>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005d10:	6823      	ldr	r3, [r4, #0]
 8005d12:	6872      	ldr	r2, [r6, #4]
 8005d14:	6818      	ldr	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005d16:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005d18:	f020 0008 	bic.w	r0, r0, #8
 8005d1c:	ea40 0002 	orr.w	r0, r0, r2
 8005d20:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005d22:	d107      	bne.n	8005d34 <HAL_QSPI_MemoryMapped+0x62>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8005d24:	6832      	ldr	r2, [r6, #0]
 8005d26:	631a      	str	r2, [r3, #48]	@ 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8005d28:	2210      	movs	r2, #16
 8005d2a:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8005d2c:	681a      	ldr	r2, [r3, #0]
 8005d2e:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8005d32:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8005d34:	f04f 6240 	mov.w	r2, #201326592	@ 0xc000000
 8005d38:	4639      	mov	r1, r7
 8005d3a:	4620      	mov	r0, r4
 8005d3c:	f7ff fdec 	bl	8005918 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8005d40:	2300      	movs	r3, #0
 8005d42:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005d46:	4628      	mov	r0, r5
 8005d48:	b003      	add	sp, #12
 8005d4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8005d4c:	2502      	movs	r5, #2
 8005d4e:	e7f7      	b.n	8005d40 <HAL_QSPI_MemoryMapped+0x6e>
  __HAL_LOCK(hqspi);
 8005d50:	2502      	movs	r5, #2
 8005d52:	e7f8      	b.n	8005d46 <HAL_QSPI_MemoryMapped+0x74>

08005d54 <HAL_QSPI_Abort>:
{
 8005d54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005d56:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005d58:	f7fe fc7e 	bl	8004658 <HAL_GetTick>
 8005d5c:	4605      	mov	r5, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8005d5e:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8005d62:	0798      	lsls	r0, r3, #30
 8005d64:	d534      	bpl.n	8005dd0 <HAL_QSPI_Abort+0x7c>
    __HAL_UNLOCK(hqspi);
 8005d66:	2300      	movs	r3, #0
 8005d68:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8005d6c:	6823      	ldr	r3, [r4, #0]
 8005d6e:	681a      	ldr	r2, [r3, #0]
 8005d70:	0751      	lsls	r1, r2, #29
 8005d72:	d507      	bpl.n	8005d84 <HAL_QSPI_Abort+0x30>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005d74:	681a      	ldr	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005d76:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005d78:	f022 0204 	bic.w	r2, r2, #4
 8005d7c:	601a      	str	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005d7e:	f7fe fd90 	bl	80048a2 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8005d82:	bb40      	cbnz	r0, 8005dd6 <HAL_QSPI_Abort+0x82>
  HAL_StatusTypeDef status = HAL_OK;
 8005d84:	2000      	movs	r0, #0
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 8005d86:	6823      	ldr	r3, [r4, #0]
 8005d88:	689a      	ldr	r2, [r3, #8]
 8005d8a:	0692      	lsls	r2, r2, #26
 8005d8c:	d528      	bpl.n	8005de0 <HAL_QSPI_Abort+0x8c>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005d8e:	681a      	ldr	r2, [r3, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005d90:	2102      	movs	r1, #2
 8005d92:	4620      	mov	r0, r4
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005d94:	f042 0202 	orr.w	r2, r2, #2
 8005d98:	601a      	str	r2, [r3, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005d9a:	2201      	movs	r2, #1
 8005d9c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8005d9e:	9300      	str	r3, [sp, #0]
 8005da0:	462b      	mov	r3, r5
 8005da2:	f7ff fe73 	bl	8005a8c <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005da6:	b9a0      	cbnz	r0, 8005dd2 <HAL_QSPI_Abort+0x7e>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005da8:	6823      	ldr	r3, [r4, #0]
 8005daa:	2202      	movs	r2, #2
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005dac:	2120      	movs	r1, #32
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005dae:	60da      	str	r2, [r3, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005db0:	4602      	mov	r2, r0
 8005db2:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8005db4:	4620      	mov	r0, r4
 8005db6:	9300      	str	r3, [sp, #0]
 8005db8:	462b      	mov	r3, r5
 8005dba:	f7ff fe67 	bl	8005a8c <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005dbe:	b940      	cbnz	r0, 8005dd2 <HAL_QSPI_Abort+0x7e>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8005dc0:	6822      	ldr	r2, [r4, #0]
 8005dc2:	6953      	ldr	r3, [r2, #20]
 8005dc4:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8005dc8:	6153      	str	r3, [r2, #20]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005dca:	2301      	movs	r3, #1
 8005dcc:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  HAL_StatusTypeDef status = HAL_OK;
 8005dd0:	2000      	movs	r0, #0
}
 8005dd2:	b003      	add	sp, #12
 8005dd4:	bd30      	pop	{r4, r5, pc}
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8005dd6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8005dd8:	f043 0304 	orr.w	r3, r3, #4
 8005ddc:	6463      	str	r3, [r4, #68]	@ 0x44
 8005dde:	e7d2      	b.n	8005d86 <HAL_QSPI_Abort+0x32>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005de0:	2301      	movs	r3, #1
 8005de2:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8005de6:	e7f4      	b.n	8005dd2 <HAL_QSPI_Abort+0x7e>

08005de8 <HAL_QSPI_Transmit>:
{
 8005de8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005dec:	4604      	mov	r4, r0
 8005dee:	4688      	mov	r8, r1
 8005df0:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 8005df2:	f7fe fc31 	bl	8004658 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005df6:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 8005dfa:	4606      	mov	r6, r0
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8005dfc:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8005dfe:	2b01      	cmp	r3, #1
 8005e00:	d04f      	beq.n	8005ea2 <HAL_QSPI_Transmit+0xba>
 8005e02:	2301      	movs	r3, #1
 8005e04:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005e08:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8005e0c:	2b01      	cmp	r3, #1
 8005e0e:	b2d8      	uxtb	r0, r3
 8005e10:	d145      	bne.n	8005e9e <HAL_QSPI_Transmit+0xb6>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005e12:	2300      	movs	r3, #0
 8005e14:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 8005e16:	f1b8 0f00 	cmp.w	r8, #0
 8005e1a:	d03b      	beq.n	8005e94 <HAL_QSPI_Transmit+0xac>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8005e1c:	2312      	movs	r3, #18
 8005e1e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005e22:	692b      	ldr	r3, [r5, #16]
 8005e24:	3301      	adds	r3, #1
 8005e26:	62e3      	str	r3, [r4, #44]	@ 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005e28:	692b      	ldr	r3, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8005e2a:	f8c4 8024 	str.w	r8, [r4, #36]	@ 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005e2e:	3301      	adds	r3, #1
 8005e30:	62a3      	str	r3, [r4, #40]	@ 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005e32:	696b      	ldr	r3, [r5, #20]
 8005e34:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8005e38:	616b      	str	r3, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8005e3a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8005e3c:	b9b3      	cbnz	r3, 8005e6c <HAL_QSPI_Transmit+0x84>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005e3e:	4633      	mov	r3, r6
 8005e40:	2201      	movs	r2, #1
 8005e42:	2102      	movs	r1, #2
 8005e44:	4620      	mov	r0, r4
 8005e46:	9700      	str	r7, [sp, #0]
 8005e48:	f7ff fe20 	bl	8005a8c <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005e4c:	b928      	cbnz	r0, 8005e5a <HAL_QSPI_Transmit+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005e4e:	6823      	ldr	r3, [r4, #0]
 8005e50:	2202      	movs	r2, #2
          status = HAL_QSPI_Abort(hqspi);
 8005e52:	4620      	mov	r0, r4
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005e54:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005e56:	f7ff ff7d 	bl	8005d54 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005e5a:	2301      	movs	r3, #1
 8005e5c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005e60:	2300      	movs	r3, #0
 8005e62:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005e66:	b002      	add	sp, #8
 8005e68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8005e6c:	4633      	mov	r3, r6
 8005e6e:	2201      	movs	r2, #1
 8005e70:	2104      	movs	r1, #4
 8005e72:	4620      	mov	r0, r4
 8005e74:	9700      	str	r7, [sp, #0]
 8005e76:	f7ff fe09 	bl	8005a8c <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8005e7a:	2800      	cmp	r0, #0
 8005e7c:	d1ed      	bne.n	8005e5a <HAL_QSPI_Transmit+0x72>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005e7e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005e80:	781b      	ldrb	r3, [r3, #0]
 8005e82:	f885 3020 	strb.w	r3, [r5, #32]
        hqspi->pTxBuffPtr++;
 8005e86:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005e88:	3301      	adds	r3, #1
 8005e8a:	6263      	str	r3, [r4, #36]	@ 0x24
        hqspi->TxXferCount--;
 8005e8c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8005e8e:	3b01      	subs	r3, #1
 8005e90:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8005e92:	e7d2      	b.n	8005e3a <HAL_QSPI_Transmit+0x52>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005e94:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8005e96:	f043 0308 	orr.w	r3, r3, #8
 8005e9a:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 8005e9c:	e7e0      	b.n	8005e60 <HAL_QSPI_Transmit+0x78>
    status = HAL_BUSY;
 8005e9e:	2002      	movs	r0, #2
 8005ea0:	e7de      	b.n	8005e60 <HAL_QSPI_Transmit+0x78>
  __HAL_LOCK(hqspi);
 8005ea2:	2002      	movs	r0, #2
 8005ea4:	e7df      	b.n	8005e66 <HAL_QSPI_Transmit+0x7e>

08005ea6 <HAL_QSPI_Receive>:
{
 8005ea6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005eaa:	4604      	mov	r4, r0
 8005eac:	4616      	mov	r6, r2
 8005eae:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8005eb0:	f7fe fbd2 	bl	8004658 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8005eb4:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8005eb6:	4607      	mov	r7, r0
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8005eb8:	69aa      	ldr	r2, [r5, #24]
  __HAL_LOCK(hqspi);
 8005eba:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8005ebe:	2b01      	cmp	r3, #1
 8005ec0:	d052      	beq.n	8005f68 <HAL_QSPI_Receive+0xc2>
 8005ec2:	2301      	movs	r3, #1
 8005ec4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005ec8:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8005ecc:	2b01      	cmp	r3, #1
 8005ece:	b2d8      	uxtb	r0, r3
 8005ed0:	d148      	bne.n	8005f64 <HAL_QSPI_Receive+0xbe>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005ed2:	2300      	movs	r3, #0
 8005ed4:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 8005ed6:	f1b8 0f00 	cmp.w	r8, #0
 8005eda:	d03e      	beq.n	8005f5a <HAL_QSPI_Receive+0xb4>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8005edc:	2322      	movs	r3, #34	@ 0x22
 8005ede:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005ee2:	692b      	ldr	r3, [r5, #16]
 8005ee4:	3301      	adds	r3, #1
 8005ee6:	63a3      	str	r3, [r4, #56]	@ 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005ee8:	692b      	ldr	r3, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8005eea:	f8c4 8030 	str.w	r8, [r4, #48]	@ 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005eee:	3301      	adds	r3, #1
 8005ef0:	6363      	str	r3, [r4, #52]	@ 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8005ef2:	6969      	ldr	r1, [r5, #20]
 8005ef4:	f021 6140 	bic.w	r1, r1, #201326592	@ 0xc000000
 8005ef8:	f041 6180 	orr.w	r1, r1, #67108864	@ 0x4000000
 8005efc:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8005efe:	61aa      	str	r2, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8005f00:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005f02:	b9b3      	cbnz	r3, 8005f32 <HAL_QSPI_Receive+0x8c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005f04:	463b      	mov	r3, r7
 8005f06:	2201      	movs	r2, #1
 8005f08:	2102      	movs	r1, #2
 8005f0a:	4620      	mov	r0, r4
 8005f0c:	9600      	str	r6, [sp, #0]
 8005f0e:	f7ff fdbd 	bl	8005a8c <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8005f12:	b928      	cbnz	r0, 8005f20 <HAL_QSPI_Receive+0x7a>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005f14:	6823      	ldr	r3, [r4, #0]
 8005f16:	2202      	movs	r2, #2
          status = HAL_QSPI_Abort(hqspi);
 8005f18:	4620      	mov	r0, r4
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005f1a:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005f1c:	f7ff ff1a 	bl	8005d54 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005f20:	2301      	movs	r3, #1
 8005f22:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005f26:	2300      	movs	r3, #0
 8005f28:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005f2c:	b002      	add	sp, #8
 8005f2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8005f32:	463b      	mov	r3, r7
 8005f34:	2201      	movs	r2, #1
 8005f36:	2106      	movs	r1, #6
 8005f38:	4620      	mov	r0, r4
 8005f3a:	9600      	str	r6, [sp, #0]
 8005f3c:	f7ff fda6 	bl	8005a8c <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8005f40:	2800      	cmp	r0, #0
 8005f42:	d1ed      	bne.n	8005f20 <HAL_QSPI_Receive+0x7a>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8005f44:	f895 2020 	ldrb.w	r2, [r5, #32]
 8005f48:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005f4a:	701a      	strb	r2, [r3, #0]
        hqspi->pRxBuffPtr++;
 8005f4c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005f4e:	3301      	adds	r3, #1
 8005f50:	6323      	str	r3, [r4, #48]	@ 0x30
        hqspi->RxXferCount--;
 8005f52:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005f54:	3b01      	subs	r3, #1
 8005f56:	63a3      	str	r3, [r4, #56]	@ 0x38
 8005f58:	e7d2      	b.n	8005f00 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005f5a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8005f5c:	f043 0308 	orr.w	r3, r3, #8
 8005f60:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 8005f62:	e7e0      	b.n	8005f26 <HAL_QSPI_Receive+0x80>
    status = HAL_BUSY;
 8005f64:	2002      	movs	r0, #2
 8005f66:	e7de      	b.n	8005f26 <HAL_QSPI_Receive+0x80>
  __HAL_LOCK(hqspi);
 8005f68:	2002      	movs	r0, #2
 8005f6a:	e7df      	b.n	8005f2c <HAL_QSPI_Receive+0x86>

08005f6c <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005f6c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005f70:	4604      	mov	r4, r0
 8005f72:	b340      	cbz	r0, 8005fc6 <HAL_RCC_OscConfig+0x5a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005f74:	6803      	ldr	r3, [r0, #0]
 8005f76:	07de      	lsls	r6, r3, #31
 8005f78:	d410      	bmi.n	8005f9c <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005f7a:	6823      	ldr	r3, [r4, #0]
 8005f7c:	079d      	lsls	r5, r3, #30
 8005f7e:	d461      	bmi.n	8006044 <HAL_RCC_OscConfig+0xd8>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005f80:	6823      	ldr	r3, [r4, #0]
 8005f82:	0719      	lsls	r1, r3, #28
 8005f84:	f100 80a6 	bmi.w	80060d4 <HAL_RCC_OscConfig+0x168>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005f88:	6823      	ldr	r3, [r4, #0]
 8005f8a:	075a      	lsls	r2, r3, #29
 8005f8c:	f100 80c7 	bmi.w	800611e <HAL_RCC_OscConfig+0x1b2>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005f90:	69a2      	ldr	r2, [r4, #24]
 8005f92:	2a00      	cmp	r2, #0
 8005f94:	f040 8130 	bne.w	80061f8 <HAL_RCC_OscConfig+0x28c>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
 8005f98:	2000      	movs	r0, #0
 8005f9a:	e02c      	b.n	8005ff6 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8005f9c:	4b94      	ldr	r3, [pc, #592]	@ (80061f0 <HAL_RCC_OscConfig+0x284>)
 8005f9e:	689a      	ldr	r2, [r3, #8]
 8005fa0:	f002 020c 	and.w	r2, r2, #12
 8005fa4:	2a04      	cmp	r2, #4
 8005fa6:	d007      	beq.n	8005fb8 <HAL_RCC_OscConfig+0x4c>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005fa8:	689a      	ldr	r2, [r3, #8]
 8005faa:	f002 020c 	and.w	r2, r2, #12
 8005fae:	2a08      	cmp	r2, #8
 8005fb0:	d10b      	bne.n	8005fca <HAL_RCC_OscConfig+0x5e>
 8005fb2:	685b      	ldr	r3, [r3, #4]
 8005fb4:	0259      	lsls	r1, r3, #9
 8005fb6:	d508      	bpl.n	8005fca <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005fb8:	4b8d      	ldr	r3, [pc, #564]	@ (80061f0 <HAL_RCC_OscConfig+0x284>)
 8005fba:	681b      	ldr	r3, [r3, #0]
 8005fbc:	039a      	lsls	r2, r3, #14
 8005fbe:	d5dc      	bpl.n	8005f7a <HAL_RCC_OscConfig+0xe>
 8005fc0:	6863      	ldr	r3, [r4, #4]
 8005fc2:	2b00      	cmp	r3, #0
 8005fc4:	d1d9      	bne.n	8005f7a <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 8005fc6:	2001      	movs	r0, #1
 8005fc8:	e015      	b.n	8005ff6 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005fca:	6863      	ldr	r3, [r4, #4]
 8005fcc:	4d88      	ldr	r5, [pc, #544]	@ (80061f0 <HAL_RCC_OscConfig+0x284>)
 8005fce:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005fd2:	d113      	bne.n	8005ffc <HAL_RCC_OscConfig+0x90>
 8005fd4:	682b      	ldr	r3, [r5, #0]
 8005fd6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005fda:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005fdc:	f7fe fb3c 	bl	8004658 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005fe0:	4e83      	ldr	r6, [pc, #524]	@ (80061f0 <HAL_RCC_OscConfig+0x284>)
        tickstart = HAL_GetTick();
 8005fe2:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005fe4:	6833      	ldr	r3, [r6, #0]
 8005fe6:	039b      	lsls	r3, r3, #14
 8005fe8:	d4c7      	bmi.n	8005f7a <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005fea:	f7fe fb35 	bl	8004658 <HAL_GetTick>
 8005fee:	1b40      	subs	r0, r0, r5
 8005ff0:	2864      	cmp	r0, #100	@ 0x64
 8005ff2:	d9f7      	bls.n	8005fe4 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8005ff4:	2003      	movs	r0, #3
}
 8005ff6:	b002      	add	sp, #8
 8005ff8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005ffc:	b99b      	cbnz	r3, 8006026 <HAL_RCC_OscConfig+0xba>
 8005ffe:	682b      	ldr	r3, [r5, #0]
 8006000:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006004:	602b      	str	r3, [r5, #0]
 8006006:	682b      	ldr	r3, [r5, #0]
 8006008:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800600c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800600e:	f7fe fb23 	bl	8004658 <HAL_GetTick>
 8006012:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006014:	682b      	ldr	r3, [r5, #0]
 8006016:	039f      	lsls	r7, r3, #14
 8006018:	d5af      	bpl.n	8005f7a <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800601a:	f7fe fb1d 	bl	8004658 <HAL_GetTick>
 800601e:	1b80      	subs	r0, r0, r6
 8006020:	2864      	cmp	r0, #100	@ 0x64
 8006022:	d9f7      	bls.n	8006014 <HAL_RCC_OscConfig+0xa8>
 8006024:	e7e6      	b.n	8005ff4 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006026:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800602a:	682b      	ldr	r3, [r5, #0]
 800602c:	d103      	bne.n	8006036 <HAL_RCC_OscConfig+0xca>
 800602e:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006032:	602b      	str	r3, [r5, #0]
 8006034:	e7ce      	b.n	8005fd4 <HAL_RCC_OscConfig+0x68>
 8006036:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800603a:	602b      	str	r3, [r5, #0]
 800603c:	682b      	ldr	r3, [r5, #0]
 800603e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006042:	e7ca      	b.n	8005fda <HAL_RCC_OscConfig+0x6e>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8006044:	4b6a      	ldr	r3, [pc, #424]	@ (80061f0 <HAL_RCC_OscConfig+0x284>)
 8006046:	689a      	ldr	r2, [r3, #8]
 8006048:	f012 0f0c 	tst.w	r2, #12
 800604c:	d007      	beq.n	800605e <HAL_RCC_OscConfig+0xf2>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800604e:	689a      	ldr	r2, [r3, #8]
 8006050:	f002 020c 	and.w	r2, r2, #12
 8006054:	2a08      	cmp	r2, #8
 8006056:	d111      	bne.n	800607c <HAL_RCC_OscConfig+0x110>
 8006058:	685b      	ldr	r3, [r3, #4]
 800605a:	025d      	lsls	r5, r3, #9
 800605c:	d40e      	bmi.n	800607c <HAL_RCC_OscConfig+0x110>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800605e:	4a64      	ldr	r2, [pc, #400]	@ (80061f0 <HAL_RCC_OscConfig+0x284>)
 8006060:	6813      	ldr	r3, [r2, #0]
 8006062:	0799      	lsls	r1, r3, #30
 8006064:	d502      	bpl.n	800606c <HAL_RCC_OscConfig+0x100>
 8006066:	68e3      	ldr	r3, [r4, #12]
 8006068:	2b01      	cmp	r3, #1
 800606a:	d1ac      	bne.n	8005fc6 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800606c:	6813      	ldr	r3, [r2, #0]
 800606e:	6921      	ldr	r1, [r4, #16]
 8006070:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8006074:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006078:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800607a:	e781      	b.n	8005f80 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800607c:	68e3      	ldr	r3, [r4, #12]
 800607e:	4d5c      	ldr	r5, [pc, #368]	@ (80061f0 <HAL_RCC_OscConfig+0x284>)
 8006080:	b1bb      	cbz	r3, 80060b2 <HAL_RCC_OscConfig+0x146>
        __HAL_RCC_HSI_ENABLE();
 8006082:	682b      	ldr	r3, [r5, #0]
 8006084:	f043 0301 	orr.w	r3, r3, #1
 8006088:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800608a:	f7fe fae5 	bl	8004658 <HAL_GetTick>
 800608e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006090:	682b      	ldr	r3, [r5, #0]
 8006092:	079b      	lsls	r3, r3, #30
 8006094:	d507      	bpl.n	80060a6 <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006096:	682b      	ldr	r3, [r5, #0]
 8006098:	6922      	ldr	r2, [r4, #16]
 800609a:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800609e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80060a2:	602b      	str	r3, [r5, #0]
 80060a4:	e76c      	b.n	8005f80 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80060a6:	f7fe fad7 	bl	8004658 <HAL_GetTick>
 80060aa:	1b80      	subs	r0, r0, r6
 80060ac:	2802      	cmp	r0, #2
 80060ae:	d9ef      	bls.n	8006090 <HAL_RCC_OscConfig+0x124>
 80060b0:	e7a0      	b.n	8005ff4 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 80060b2:	682b      	ldr	r3, [r5, #0]
 80060b4:	f023 0301 	bic.w	r3, r3, #1
 80060b8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80060ba:	f7fe facd 	bl	8004658 <HAL_GetTick>
 80060be:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80060c0:	682b      	ldr	r3, [r5, #0]
 80060c2:	079f      	lsls	r7, r3, #30
 80060c4:	f57f af5c 	bpl.w	8005f80 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80060c8:	f7fe fac6 	bl	8004658 <HAL_GetTick>
 80060cc:	1b80      	subs	r0, r0, r6
 80060ce:	2802      	cmp	r0, #2
 80060d0:	d9f6      	bls.n	80060c0 <HAL_RCC_OscConfig+0x154>
 80060d2:	e78f      	b.n	8005ff4 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80060d4:	6963      	ldr	r3, [r4, #20]
 80060d6:	4d46      	ldr	r5, [pc, #280]	@ (80061f0 <HAL_RCC_OscConfig+0x284>)
 80060d8:	b183      	cbz	r3, 80060fc <HAL_RCC_OscConfig+0x190>
      __HAL_RCC_LSI_ENABLE();
 80060da:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80060dc:	f043 0301 	orr.w	r3, r3, #1
 80060e0:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
 80060e2:	f7fe fab9 	bl	8004658 <HAL_GetTick>
 80060e6:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80060e8:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80060ea:	079b      	lsls	r3, r3, #30
 80060ec:	f53f af4c 	bmi.w	8005f88 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80060f0:	f7fe fab2 	bl	8004658 <HAL_GetTick>
 80060f4:	1b80      	subs	r0, r0, r6
 80060f6:	2802      	cmp	r0, #2
 80060f8:	d9f6      	bls.n	80060e8 <HAL_RCC_OscConfig+0x17c>
 80060fa:	e77b      	b.n	8005ff4 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 80060fc:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80060fe:	f023 0301 	bic.w	r3, r3, #1
 8006102:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
 8006104:	f7fe faa8 	bl	8004658 <HAL_GetTick>
 8006108:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800610a:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 800610c:	079f      	lsls	r7, r3, #30
 800610e:	f57f af3b 	bpl.w	8005f88 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006112:	f7fe faa1 	bl	8004658 <HAL_GetTick>
 8006116:	1b80      	subs	r0, r0, r6
 8006118:	2802      	cmp	r0, #2
 800611a:	d9f6      	bls.n	800610a <HAL_RCC_OscConfig+0x19e>
 800611c:	e76a      	b.n	8005ff4 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800611e:	4b34      	ldr	r3, [pc, #208]	@ (80061f0 <HAL_RCC_OscConfig+0x284>)
 8006120:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006122:	00d5      	lsls	r5, r2, #3
 8006124:	d427      	bmi.n	8006176 <HAL_RCC_OscConfig+0x20a>
      __HAL_RCC_PWR_CLK_ENABLE();
 8006126:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
      pwrclkchanged = SET;
 8006128:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 800612a:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800612e:	641a      	str	r2, [r3, #64]	@ 0x40
 8006130:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006132:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006136:	9301      	str	r3, [sp, #4]
 8006138:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 800613a:	4d2e      	ldr	r5, [pc, #184]	@ (80061f4 <HAL_RCC_OscConfig+0x288>)
 800613c:	682b      	ldr	r3, [r5, #0]
 800613e:	05d8      	lsls	r0, r3, #23
 8006140:	d51b      	bpl.n	800617a <HAL_RCC_OscConfig+0x20e>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006142:	68a3      	ldr	r3, [r4, #8]
 8006144:	4d2a      	ldr	r5, [pc, #168]	@ (80061f0 <HAL_RCC_OscConfig+0x284>)
 8006146:	2b01      	cmp	r3, #1
 8006148:	d127      	bne.n	800619a <HAL_RCC_OscConfig+0x22e>
 800614a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800614c:	f043 0301 	orr.w	r3, r3, #1
 8006150:	672b      	str	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006152:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8006156:	f7fe fa7f 	bl	8004658 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800615a:	4e25      	ldr	r6, [pc, #148]	@ (80061f0 <HAL_RCC_OscConfig+0x284>)
      tickstart = HAL_GetTick();
 800615c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800615e:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8006160:	079a      	lsls	r2, r3, #30
 8006162:	d53f      	bpl.n	80061e4 <HAL_RCC_OscConfig+0x278>
    if (pwrclkchanged == SET)
 8006164:	2f00      	cmp	r7, #0
 8006166:	f43f af13 	beq.w	8005f90 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800616a:	4a21      	ldr	r2, [pc, #132]	@ (80061f0 <HAL_RCC_OscConfig+0x284>)
 800616c:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800616e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006172:	6413      	str	r3, [r2, #64]	@ 0x40
 8006174:	e70c      	b.n	8005f90 <HAL_RCC_OscConfig+0x24>
  FlagStatus pwrclkchanged = RESET;
 8006176:	2700      	movs	r7, #0
 8006178:	e7df      	b.n	800613a <HAL_RCC_OscConfig+0x1ce>
      PWR->CR1 |= PWR_CR1_DBP;
 800617a:	682b      	ldr	r3, [r5, #0]
 800617c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006180:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006182:	f7fe fa69 	bl	8004658 <HAL_GetTick>
 8006186:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8006188:	682b      	ldr	r3, [r5, #0]
 800618a:	05d9      	lsls	r1, r3, #23
 800618c:	d4d9      	bmi.n	8006142 <HAL_RCC_OscConfig+0x1d6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800618e:	f7fe fa63 	bl	8004658 <HAL_GetTick>
 8006192:	1b80      	subs	r0, r0, r6
 8006194:	2864      	cmp	r0, #100	@ 0x64
 8006196:	d9f7      	bls.n	8006188 <HAL_RCC_OscConfig+0x21c>
 8006198:	e72c      	b.n	8005ff4 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800619a:	b9ab      	cbnz	r3, 80061c8 <HAL_RCC_OscConfig+0x25c>
 800619c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800619e:	f241 3888 	movw	r8, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80061a2:	f023 0301 	bic.w	r3, r3, #1
 80061a6:	672b      	str	r3, [r5, #112]	@ 0x70
 80061a8:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80061aa:	f023 0304 	bic.w	r3, r3, #4
 80061ae:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 80061b0:	f7fe fa52 	bl	8004658 <HAL_GetTick>
 80061b4:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80061b6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80061b8:	079b      	lsls	r3, r3, #30
 80061ba:	d5d3      	bpl.n	8006164 <HAL_RCC_OscConfig+0x1f8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80061bc:	f7fe fa4c 	bl	8004658 <HAL_GetTick>
 80061c0:	1b80      	subs	r0, r0, r6
 80061c2:	4540      	cmp	r0, r8
 80061c4:	d9f7      	bls.n	80061b6 <HAL_RCC_OscConfig+0x24a>
 80061c6:	e715      	b.n	8005ff4 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80061c8:	2b05      	cmp	r3, #5
 80061ca:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80061cc:	d103      	bne.n	80061d6 <HAL_RCC_OscConfig+0x26a>
 80061ce:	f043 0304 	orr.w	r3, r3, #4
 80061d2:	672b      	str	r3, [r5, #112]	@ 0x70
 80061d4:	e7b9      	b.n	800614a <HAL_RCC_OscConfig+0x1de>
 80061d6:	f023 0301 	bic.w	r3, r3, #1
 80061da:	672b      	str	r3, [r5, #112]	@ 0x70
 80061dc:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80061de:	f023 0304 	bic.w	r3, r3, #4
 80061e2:	e7b5      	b.n	8006150 <HAL_RCC_OscConfig+0x1e4>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80061e4:	f7fe fa38 	bl	8004658 <HAL_GetTick>
 80061e8:	1b40      	subs	r0, r0, r5
 80061ea:	4540      	cmp	r0, r8
 80061ec:	d9b7      	bls.n	800615e <HAL_RCC_OscConfig+0x1f2>
 80061ee:	e701      	b.n	8005ff4 <HAL_RCC_OscConfig+0x88>
 80061f0:	40023800 	.word	0x40023800
 80061f4:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80061f8:	4d38      	ldr	r5, [pc, #224]	@ (80062dc <HAL_RCC_OscConfig+0x370>)
 80061fa:	68ab      	ldr	r3, [r5, #8]
 80061fc:	f003 030c 	and.w	r3, r3, #12
 8006200:	2b08      	cmp	r3, #8
 8006202:	d041      	beq.n	8006288 <HAL_RCC_OscConfig+0x31c>
        __HAL_RCC_PLL_DISABLE();
 8006204:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006206:	2a02      	cmp	r2, #2
        __HAL_RCC_PLL_DISABLE();
 8006208:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800620c:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800620e:	d12e      	bne.n	800626e <HAL_RCC_OscConfig+0x302>
        tickstart = HAL_GetTick();
 8006210:	f7fe fa22 	bl	8004658 <HAL_GetTick>
 8006214:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006216:	682b      	ldr	r3, [r5, #0]
 8006218:	0199      	lsls	r1, r3, #6
 800621a:	d422      	bmi.n	8006262 <HAL_RCC_OscConfig+0x2f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800621c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800621e:	085b      	lsrs	r3, r3, #1
 8006220:	1e5a      	subs	r2, r3, #1
 8006222:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 8006226:	430b      	orrs	r3, r1
 8006228:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800622c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800622e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006232:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8006234:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006238:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 800623c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800623e:	682b      	ldr	r3, [r5, #0]
 8006240:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8006244:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006246:	f7fe fa07 	bl	8004658 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800624a:	4d24      	ldr	r5, [pc, #144]	@ (80062dc <HAL_RCC_OscConfig+0x370>)
        tickstart = HAL_GetTick();
 800624c:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800624e:	682b      	ldr	r3, [r5, #0]
 8006250:	019a      	lsls	r2, r3, #6
 8006252:	f53f aea1 	bmi.w	8005f98 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006256:	f7fe f9ff 	bl	8004658 <HAL_GetTick>
 800625a:	1b00      	subs	r0, r0, r4
 800625c:	2802      	cmp	r0, #2
 800625e:	d9f6      	bls.n	800624e <HAL_RCC_OscConfig+0x2e2>
 8006260:	e6c8      	b.n	8005ff4 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006262:	f7fe f9f9 	bl	8004658 <HAL_GetTick>
 8006266:	1b80      	subs	r0, r0, r6
 8006268:	2802      	cmp	r0, #2
 800626a:	d9d4      	bls.n	8006216 <HAL_RCC_OscConfig+0x2aa>
 800626c:	e6c2      	b.n	8005ff4 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 800626e:	f7fe f9f3 	bl	8004658 <HAL_GetTick>
 8006272:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006274:	682b      	ldr	r3, [r5, #0]
 8006276:	019b      	lsls	r3, r3, #6
 8006278:	f57f ae8e 	bpl.w	8005f98 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800627c:	f7fe f9ec 	bl	8004658 <HAL_GetTick>
 8006280:	1b00      	subs	r0, r0, r4
 8006282:	2802      	cmp	r0, #2
 8006284:	d9f6      	bls.n	8006274 <HAL_RCC_OscConfig+0x308>
 8006286:	e6b5      	b.n	8005ff4 <HAL_RCC_OscConfig+0x88>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006288:	2a01      	cmp	r2, #1
      pll_config = RCC->PLLCFGR;
 800628a:	686b      	ldr	r3, [r5, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800628c:	f43f ae9b 	beq.w	8005fc6 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006290:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006294:	69e1      	ldr	r1, [r4, #28]
 8006296:	428a      	cmp	r2, r1
 8006298:	f47f ae95 	bne.w	8005fc6 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800629c:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80062a0:	6a21      	ldr	r1, [r4, #32]
 80062a2:	428a      	cmp	r2, r1
 80062a4:	f47f ae8f 	bne.w	8005fc6 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80062a8:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80062ac:	6a61      	ldr	r1, [r4, #36]	@ 0x24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80062ae:	401a      	ands	r2, r3
 80062b0:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 80062b4:	f47f ae87 	bne.w	8005fc6 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80062b8:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80062ba:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 80062be:	0852      	lsrs	r2, r2, #1
 80062c0:	3a01      	subs	r2, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80062c2:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80062c6:	f47f ae7e 	bne.w	8005fc6 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80062ca:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80062cc:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80062d0:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 80062d4:	bf14      	ite	ne
 80062d6:	2001      	movne	r0, #1
 80062d8:	2000      	moveq	r0, #0
 80062da:	e68c      	b.n	8005ff6 <HAL_RCC_OscConfig+0x8a>
 80062dc:	40023800 	.word	0x40023800

080062e0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80062e0:	4913      	ldr	r1, [pc, #76]	@ (8006330 <HAL_RCC_GetSysClockFreq+0x50>)
{
 80062e2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80062e4:	688b      	ldr	r3, [r1, #8]
 80062e6:	f003 030c 	and.w	r3, r3, #12
 80062ea:	2b04      	cmp	r3, #4
 80062ec:	d01b      	beq.n	8006326 <HAL_RCC_GetSysClockFreq+0x46>
 80062ee:	2b08      	cmp	r3, #8
 80062f0:	d11b      	bne.n	800632a <HAL_RCC_GetSysClockFreq+0x4a>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80062f2:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80062f4:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80062f6:	6849      	ldr	r1, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80062f8:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80062fc:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006300:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006304:	bf1a      	itte	ne
 8006306:	480b      	ldrne	r0, [pc, #44]	@ (8006334 <HAL_RCC_GetSysClockFreq+0x54>)
 8006308:	2300      	movne	r3, #0
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800630a:	480b      	ldreq	r0, [pc, #44]	@ (8006338 <HAL_RCC_GetSysClockFreq+0x58>)
 800630c:	fba1 0100 	umull	r0, r1, r1, r0
 8006310:	f7f9 ffce 	bl	80002b0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8006314:	4b06      	ldr	r3, [pc, #24]	@ (8006330 <HAL_RCC_GetSysClockFreq+0x50>)
 8006316:	685b      	ldr	r3, [r3, #4]
 8006318:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800631c:	3301      	adds	r3, #1
 800631e:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8006320:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006324:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006326:	4803      	ldr	r0, [pc, #12]	@ (8006334 <HAL_RCC_GetSysClockFreq+0x54>)
 8006328:	e7fc      	b.n	8006324 <HAL_RCC_GetSysClockFreq+0x44>
      sysclockfreq = HSI_VALUE;
 800632a:	4803      	ldr	r0, [pc, #12]	@ (8006338 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800632c:	e7fa      	b.n	8006324 <HAL_RCC_GetSysClockFreq+0x44>
 800632e:	bf00      	nop
 8006330:	40023800 	.word	0x40023800
 8006334:	017d7840 	.word	0x017d7840
 8006338:	00f42400 	.word	0x00f42400

0800633c <HAL_RCC_ClockConfig>:
{
 800633c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006340:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8006342:	4604      	mov	r4, r0
 8006344:	b910      	cbnz	r0, 800634c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006346:	2001      	movs	r0, #1
}
 8006348:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800634c:	4a45      	ldr	r2, [pc, #276]	@ (8006464 <HAL_RCC_ClockConfig+0x128>)
 800634e:	6813      	ldr	r3, [r2, #0]
 8006350:	f003 030f 	and.w	r3, r3, #15
 8006354:	428b      	cmp	r3, r1
 8006356:	d328      	bcc.n	80063aa <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006358:	6821      	ldr	r1, [r4, #0]
 800635a:	078f      	lsls	r7, r1, #30
 800635c:	d430      	bmi.n	80063c0 <HAL_RCC_ClockConfig+0x84>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800635e:	07c8      	lsls	r0, r1, #31
 8006360:	d443      	bmi.n	80063ea <HAL_RCC_ClockConfig+0xae>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8006362:	4a40      	ldr	r2, [pc, #256]	@ (8006464 <HAL_RCC_ClockConfig+0x128>)
 8006364:	6813      	ldr	r3, [r2, #0]
 8006366:	f003 030f 	and.w	r3, r3, #15
 800636a:	42ab      	cmp	r3, r5
 800636c:	d866      	bhi.n	800643c <HAL_RCC_ClockConfig+0x100>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800636e:	6822      	ldr	r2, [r4, #0]
 8006370:	0751      	lsls	r1, r2, #29
 8006372:	d46f      	bmi.n	8006454 <HAL_RCC_ClockConfig+0x118>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006374:	0713      	lsls	r3, r2, #28
 8006376:	d507      	bpl.n	8006388 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8006378:	4a3b      	ldr	r2, [pc, #236]	@ (8006468 <HAL_RCC_ClockConfig+0x12c>)
 800637a:	6921      	ldr	r1, [r4, #16]
 800637c:	6893      	ldr	r3, [r2, #8]
 800637e:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8006382:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006386:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8006388:	f7ff ffaa 	bl	80062e0 <HAL_RCC_GetSysClockFreq>
 800638c:	4b36      	ldr	r3, [pc, #216]	@ (8006468 <HAL_RCC_ClockConfig+0x12c>)
 800638e:	4a37      	ldr	r2, [pc, #220]	@ (800646c <HAL_RCC_ClockConfig+0x130>)
 8006390:	689b      	ldr	r3, [r3, #8]
 8006392:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8006396:	5cd3      	ldrb	r3, [r2, r3]
 8006398:	40d8      	lsrs	r0, r3
 800639a:	4b35      	ldr	r3, [pc, #212]	@ (8006470 <HAL_RCC_ClockConfig+0x134>)
 800639c:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 800639e:	4b35      	ldr	r3, [pc, #212]	@ (8006474 <HAL_RCC_ClockConfig+0x138>)
 80063a0:	6818      	ldr	r0, [r3, #0]
 80063a2:	f7fa feff 	bl	80011a4 <HAL_InitTick>
  return HAL_OK;
 80063a6:	2000      	movs	r0, #0
 80063a8:	e7ce      	b.n	8006348 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80063aa:	6813      	ldr	r3, [r2, #0]
 80063ac:	f023 030f 	bic.w	r3, r3, #15
 80063b0:	430b      	orrs	r3, r1
 80063b2:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80063b4:	6813      	ldr	r3, [r2, #0]
 80063b6:	f003 030f 	and.w	r3, r3, #15
 80063ba:	428b      	cmp	r3, r1
 80063bc:	d1c3      	bne.n	8006346 <HAL_RCC_ClockConfig+0xa>
 80063be:	e7cb      	b.n	8006358 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80063c0:	f011 0f04 	tst.w	r1, #4
 80063c4:	4b28      	ldr	r3, [pc, #160]	@ (8006468 <HAL_RCC_ClockConfig+0x12c>)
 80063c6:	d003      	beq.n	80063d0 <HAL_RCC_ClockConfig+0x94>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80063c8:	689a      	ldr	r2, [r3, #8]
 80063ca:	f442 52e0 	orr.w	r2, r2, #7168	@ 0x1c00
 80063ce:	609a      	str	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80063d0:	070e      	lsls	r6, r1, #28
 80063d2:	d503      	bpl.n	80063dc <HAL_RCC_ClockConfig+0xa0>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80063d4:	689a      	ldr	r2, [r3, #8]
 80063d6:	f442 4260 	orr.w	r2, r2, #57344	@ 0xe000
 80063da:	609a      	str	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80063dc:	689a      	ldr	r2, [r3, #8]
 80063de:	68a0      	ldr	r0, [r4, #8]
 80063e0:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 80063e4:	4302      	orrs	r2, r0
 80063e6:	609a      	str	r2, [r3, #8]
 80063e8:	e7b9      	b.n	800635e <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80063ea:	6861      	ldr	r1, [r4, #4]
 80063ec:	4b1e      	ldr	r3, [pc, #120]	@ (8006468 <HAL_RCC_ClockConfig+0x12c>)
 80063ee:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80063f0:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80063f2:	d11b      	bne.n	800642c <HAL_RCC_ClockConfig+0xf0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80063f4:	f412 3f00 	tst.w	r2, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80063f8:	d0a5      	beq.n	8006346 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80063fa:	689a      	ldr	r2, [r3, #8]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80063fc:	f241 3888 	movw	r8, #5000	@ 0x1388
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006400:	4f19      	ldr	r7, [pc, #100]	@ (8006468 <HAL_RCC_ClockConfig+0x12c>)
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006402:	f022 0203 	bic.w	r2, r2, #3
 8006406:	430a      	orrs	r2, r1
 8006408:	609a      	str	r2, [r3, #8]
    tickstart = HAL_GetTick();
 800640a:	f7fe f925 	bl	8004658 <HAL_GetTick>
 800640e:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006410:	68bb      	ldr	r3, [r7, #8]
 8006412:	6862      	ldr	r2, [r4, #4]
 8006414:	f003 030c 	and.w	r3, r3, #12
 8006418:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800641c:	d0a1      	beq.n	8006362 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800641e:	f7fe f91b 	bl	8004658 <HAL_GetTick>
 8006422:	1b80      	subs	r0, r0, r6
 8006424:	4540      	cmp	r0, r8
 8006426:	d9f3      	bls.n	8006410 <HAL_RCC_ClockConfig+0xd4>
        return HAL_TIMEOUT;
 8006428:	2003      	movs	r0, #3
 800642a:	e78d      	b.n	8006348 <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800642c:	2902      	cmp	r1, #2
 800642e:	d102      	bne.n	8006436 <HAL_RCC_ClockConfig+0xfa>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006430:	f012 7f00 	tst.w	r2, #33554432	@ 0x2000000
 8006434:	e7e0      	b.n	80063f8 <HAL_RCC_ClockConfig+0xbc>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006436:	f012 0f02 	tst.w	r2, #2
 800643a:	e7dd      	b.n	80063f8 <HAL_RCC_ClockConfig+0xbc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800643c:	6813      	ldr	r3, [r2, #0]
 800643e:	f023 030f 	bic.w	r3, r3, #15
 8006442:	432b      	orrs	r3, r5
 8006444:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006446:	6813      	ldr	r3, [r2, #0]
 8006448:	f003 030f 	and.w	r3, r3, #15
 800644c:	42ab      	cmp	r3, r5
 800644e:	f47f af7a 	bne.w	8006346 <HAL_RCC_ClockConfig+0xa>
 8006452:	e78c      	b.n	800636e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006454:	4904      	ldr	r1, [pc, #16]	@ (8006468 <HAL_RCC_ClockConfig+0x12c>)
 8006456:	68e0      	ldr	r0, [r4, #12]
 8006458:	688b      	ldr	r3, [r1, #8]
 800645a:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 800645e:	4303      	orrs	r3, r0
 8006460:	608b      	str	r3, [r1, #8]
 8006462:	e787      	b.n	8006374 <HAL_RCC_ClockConfig+0x38>
 8006464:	40023c00 	.word	0x40023c00
 8006468:	40023800 	.word	0x40023800
 800646c:	08024bd8 	.word	0x08024bd8
 8006470:	2000000c 	.word	0x2000000c
 8006474:	2000003c 	.word	0x2000003c

08006478 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8006478:	4b04      	ldr	r3, [pc, #16]	@ (800648c <HAL_RCC_GetPCLK1Freq+0x14>)
 800647a:	4a05      	ldr	r2, [pc, #20]	@ (8006490 <HAL_RCC_GetPCLK1Freq+0x18>)
 800647c:	689b      	ldr	r3, [r3, #8]
 800647e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006482:	5cd3      	ldrb	r3, [r2, r3]
 8006484:	4a03      	ldr	r2, [pc, #12]	@ (8006494 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006486:	6810      	ldr	r0, [r2, #0]
}
 8006488:	40d8      	lsrs	r0, r3
 800648a:	4770      	bx	lr
 800648c:	40023800 	.word	0x40023800
 8006490:	08024bd0 	.word	0x08024bd0
 8006494:	2000000c 	.word	0x2000000c

08006498 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8006498:	4b04      	ldr	r3, [pc, #16]	@ (80064ac <HAL_RCC_GetPCLK2Freq+0x14>)
 800649a:	4a05      	ldr	r2, [pc, #20]	@ (80064b0 <HAL_RCC_GetPCLK2Freq+0x18>)
 800649c:	689b      	ldr	r3, [r3, #8]
 800649e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80064a2:	5cd3      	ldrb	r3, [r2, r3]
 80064a4:	4a03      	ldr	r2, [pc, #12]	@ (80064b4 <HAL_RCC_GetPCLK2Freq+0x1c>)
 80064a6:	6810      	ldr	r0, [r2, #0]
}
 80064a8:	40d8      	lsrs	r0, r3
 80064aa:	4770      	bx	lr
 80064ac:	40023800 	.word	0x40023800
 80064b0:	08024bd0 	.word	0x08024bd0
 80064b4:	2000000c 	.word	0x2000000c

080064b8 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80064b8:	230f      	movs	r3, #15
 80064ba:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80064bc:	4b0b      	ldr	r3, [pc, #44]	@ (80064ec <HAL_RCC_GetClockConfig+0x34>)
 80064be:	689a      	ldr	r2, [r3, #8]
 80064c0:	f002 0203 	and.w	r2, r2, #3
 80064c4:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80064c6:	689a      	ldr	r2, [r3, #8]
 80064c8:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 80064cc:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80064ce:	689a      	ldr	r2, [r3, #8]
 80064d0:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 80064d4:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 80064d6:	689b      	ldr	r3, [r3, #8]
 80064d8:	08db      	lsrs	r3, r3, #3
 80064da:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 80064de:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80064e0:	4b03      	ldr	r3, [pc, #12]	@ (80064f0 <HAL_RCC_GetClockConfig+0x38>)
 80064e2:	681b      	ldr	r3, [r3, #0]
 80064e4:	f003 030f 	and.w	r3, r3, #15
 80064e8:	600b      	str	r3, [r1, #0]
}
 80064ea:	4770      	bx	lr
 80064ec:	40023800 	.word	0x40023800
 80064f0:	40023c00 	.word	0x40023c00

080064f4 <HAL_RCCEx_PeriphCLKConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80064f4:	6803      	ldr	r3, [r0, #0]
{
 80064f6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80064fa:	f013 0601 	ands.w	r6, r3, #1
{
 80064fe:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006500:	d00b      	beq.n	800651a <HAL_RCCEx_PeriphCLKConfig+0x26>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8006502:	4aad      	ldr	r2, [pc, #692]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006504:	6891      	ldr	r1, [r2, #8]
 8006506:	f421 0100 	bic.w	r1, r1, #8388608	@ 0x800000
 800650a:	6091      	str	r1, [r2, #8]
 800650c:	6b46      	ldr	r6, [r0, #52]	@ 0x34
 800650e:	6891      	ldr	r1, [r2, #8]
 8006510:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8006512:	fab6 f686 	clz	r6, r6
 8006516:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8006518:	6091      	str	r1, [r2, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 800651a:	f413 2500 	ands.w	r5, r3, #524288	@ 0x80000
 800651e:	d012      	beq.n	8006546 <HAL_RCCEx_PeriphCLKConfig+0x52>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006520:	49a5      	ldr	r1, [pc, #660]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006522:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 8006524:	f8d1 208c 	ldr.w	r2, [r1, #140]	@ 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8006528:	f5b5 1f80 	cmp.w	r5, #1048576	@ 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 800652c:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
    {
      plli2sused = 1;
 8006530:	bf08      	it	eq
 8006532:	2601      	moveq	r6, #1
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006534:	ea42 0205 	orr.w	r2, r2, r5
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8006538:	bf16      	itet	ne
 800653a:	fab5 f585 	clzne	r5, r5
  uint32_t pllsaiused = 0;
 800653e:	2500      	moveq	r5, #0
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8006540:	096d      	lsrne	r5, r5, #5
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006542:	f8c1 208c 	str.w	r2, [r1, #140]	@ 0x8c
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8006546:	02d8      	lsls	r0, r3, #11
 8006548:	d510      	bpl.n	800656c <HAL_RCCEx_PeriphCLKConfig+0x78>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 800654a:	489b      	ldr	r0, [pc, #620]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 800654c:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800654e:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8006552:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8006556:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 800655a:	ea42 0201 	orr.w	r2, r2, r1
 800655e:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8006562:	f000 8186 	beq.w	8006872 <HAL_RCCEx_PeriphCLKConfig+0x37e>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
 8006566:	2900      	cmp	r1, #0
 8006568:	bf08      	it	eq
 800656a:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
 800656c:	f013 7f80 	tst.w	r3, #16777216	@ 0x1000000
 8006570:	bf18      	it	ne
 8006572:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006574:	0699      	lsls	r1, r3, #26
 8006576:	d532      	bpl.n	80065de <HAL_RCCEx_PeriphCLKConfig+0xea>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006578:	4b8f      	ldr	r3, [pc, #572]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 800657a:	4f90      	ldr	r7, [pc, #576]	@ (80067bc <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800657c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800657e:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006582:	641a      	str	r2, [r3, #64]	@ 0x40
 8006584:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006586:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800658a:	9301      	str	r3, [sp, #4]
 800658c:	9b01      	ldr	r3, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 800658e:	683b      	ldr	r3, [r7, #0]
 8006590:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006594:	603b      	str	r3, [r7, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006596:	f7fe f85f 	bl	8004658 <HAL_GetTick>
 800659a:	4680      	mov	r8, r0

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 800659c:	683b      	ldr	r3, [r7, #0]
 800659e:	05da      	lsls	r2, r3, #23
 80065a0:	f140 8169 	bpl.w	8006876 <HAL_RCCEx_PeriphCLKConfig+0x382>
        return HAL_TIMEOUT;
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80065a4:	4f84      	ldr	r7, [pc, #528]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80065a6:	6b22      	ldr	r2, [r4, #48]	@ 0x30
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80065a8:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80065aa:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 80065ae:	f040 816d 	bne.w	800688c <HAL_RCCEx_PeriphCLKConfig+0x398>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80065b2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80065b4:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 80065b8:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 80065bc:	4a7e      	ldr	r2, [pc, #504]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80065be:	f040 818a 	bne.w	80068d6 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 80065c2:	6891      	ldr	r1, [r2, #8]
 80065c4:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 80065c8:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 80065cc:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 80065d0:	4301      	orrs	r1, r0
 80065d2:	6091      	str	r1, [r2, #8]
 80065d4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80065d8:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 80065da:	430b      	orrs	r3, r1
 80065dc:	6713      	str	r3, [r2, #112]	@ 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80065de:	6823      	ldr	r3, [r4, #0]
 80065e0:	06d9      	lsls	r1, r3, #27
 80065e2:	d50c      	bpl.n	80065fe <HAL_RCCEx_PeriphCLKConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80065e4:	4a74      	ldr	r2, [pc, #464]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80065e6:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
 80065ea:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
 80065ee:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
 80065f2:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
 80065f6:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 80065f8:	4301      	orrs	r1, r0
 80065fa:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 80065fe:	045a      	lsls	r2, r3, #17
 8006600:	d508      	bpl.n	8006614 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8006602:	496d      	ldr	r1, [pc, #436]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006604:	6e60      	ldr	r0, [r4, #100]	@ 0x64
 8006606:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 800660a:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 800660e:	4302      	orrs	r2, r0
 8006610:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8006614:	041f      	lsls	r7, r3, #16
 8006616:	d508      	bpl.n	800662a <HAL_RCCEx_PeriphCLKConfig+0x136>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8006618:	4967      	ldr	r1, [pc, #412]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 800661a:	6ea0      	ldr	r0, [r4, #104]	@ 0x68
 800661c:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006620:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 8006624:	4302      	orrs	r2, r0
 8006626:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 800662a:	03d8      	lsls	r0, r3, #15
 800662c:	d508      	bpl.n	8006640 <HAL_RCCEx_PeriphCLKConfig+0x14c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 800662e:	4962      	ldr	r1, [pc, #392]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006630:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
 8006632:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006636:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 800663a:	4302      	orrs	r2, r0
 800663c:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8006640:	0399      	lsls	r1, r3, #14
 8006642:	d508      	bpl.n	8006656 <HAL_RCCEx_PeriphCLKConfig+0x162>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8006644:	495c      	ldr	r1, [pc, #368]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006646:	6f20      	ldr	r0, [r4, #112]	@ 0x70
 8006648:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 800664c:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8006650:	4302      	orrs	r2, r0
 8006652:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8006656:	065a      	lsls	r2, r3, #25
 8006658:	d508      	bpl.n	800666c <HAL_RCCEx_PeriphCLKConfig+0x178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 800665a:	4957      	ldr	r1, [pc, #348]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 800665c:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800665e:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006662:	f022 0203 	bic.w	r2, r2, #3
 8006666:	4302      	orrs	r2, r0
 8006668:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 800666c:	061f      	lsls	r7, r3, #24
 800666e:	d508      	bpl.n	8006682 <HAL_RCCEx_PeriphCLKConfig+0x18e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8006670:	4951      	ldr	r1, [pc, #324]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006672:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 8006674:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006678:	f022 020c 	bic.w	r2, r2, #12
 800667c:	4302      	orrs	r2, r0
 800667e:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8006682:	05d8      	lsls	r0, r3, #23
 8006684:	d508      	bpl.n	8006698 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8006686:	494c      	ldr	r1, [pc, #304]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006688:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800668a:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 800668e:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 8006692:	4302      	orrs	r2, r0
 8006694:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8006698:	0599      	lsls	r1, r3, #22
 800669a:	d508      	bpl.n	80066ae <HAL_RCCEx_PeriphCLKConfig+0x1ba>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 800669c:	4946      	ldr	r1, [pc, #280]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 800669e:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 80066a0:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 80066a4:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 80066a8:	4302      	orrs	r2, r0
 80066aa:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 80066ae:	055a      	lsls	r2, r3, #21
 80066b0:	d508      	bpl.n	80066c4 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 80066b2:	4941      	ldr	r1, [pc, #260]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80066b4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 80066b6:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 80066ba:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80066be:	4302      	orrs	r2, r0
 80066c0:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 80066c4:	051f      	lsls	r7, r3, #20
 80066c6:	d508      	bpl.n	80066da <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 80066c8:	493b      	ldr	r1, [pc, #236]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80066ca:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80066cc:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 80066d0:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 80066d4:	4302      	orrs	r2, r0
 80066d6:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 80066da:	04d8      	lsls	r0, r3, #19
 80066dc:	d508      	bpl.n	80066f0 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 80066de:	4936      	ldr	r1, [pc, #216]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80066e0:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 80066e2:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 80066e6:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 80066ea:	4302      	orrs	r2, r0
 80066ec:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 80066f0:	0499      	lsls	r1, r3, #18
 80066f2:	d508      	bpl.n	8006706 <HAL_RCCEx_PeriphCLKConfig+0x212>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 80066f4:	4930      	ldr	r1, [pc, #192]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80066f6:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 80066f8:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 80066fc:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8006700:	4302      	orrs	r2, r0
 8006702:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8006706:	025a      	lsls	r2, r3, #9
 8006708:	d508      	bpl.n	800671c <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 800670a:	492b      	ldr	r1, [pc, #172]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 800670c:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
 800670e:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006712:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
 8006716:	4302      	orrs	r2, r0
 8006718:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800671c:	029f      	lsls	r7, r3, #10
 800671e:	d50c      	bpl.n	800673a <HAL_RCCEx_PeriphCLKConfig+0x246>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006720:	4825      	ldr	r0, [pc, #148]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006722:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
 8006724:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
 8006728:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800672c:	f022 6200 	bic.w	r2, r2, #134217728	@ 0x8000000
      pllsaiused = 1;
 8006730:	bf08      	it	eq
 8006732:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006734:	430a      	orrs	r2, r1
 8006736:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
 800673a:	f013 0f08 	tst.w	r3, #8
 800673e:	bf18      	it	ne
 8006740:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8006742:	0358      	lsls	r0, r3, #13
 8006744:	d508      	bpl.n	8006758 <HAL_RCCEx_PeriphCLKConfig+0x264>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8006746:	491c      	ldr	r1, [pc, #112]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006748:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 800674a:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 800674e:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8006752:	4302      	orrs	r2, r0
 8006754:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8006758:	0219      	lsls	r1, r3, #8
 800675a:	d509      	bpl.n	8006770 <HAL_RCCEx_PeriphCLKConfig+0x27c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 800675c:	4916      	ldr	r1, [pc, #88]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 800675e:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 8006762:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006766:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
 800676a:	4302      	orrs	r2, r0
 800676c:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8006770:	2e01      	cmp	r6, #1
 8006772:	f000 80b4 	beq.w	80068de <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8006776:	019a      	lsls	r2, r3, #6
 8006778:	f100 80b1 	bmi.w	80068de <HAL_RCCEx_PeriphCLKConfig+0x3ea>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 800677c:	2d01      	cmp	r5, #1
 800677e:	d176      	bne.n	800686e <HAL_RCCEx_PeriphCLKConfig+0x37a>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006780:	4d0d      	ldr	r5, [pc, #52]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006782:	682b      	ldr	r3, [r5, #0]
 8006784:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006788:	602b      	str	r3, [r5, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800678a:	f7fd ff65 	bl	8004658 <HAL_GetTick>
 800678e:	4606      	mov	r6, r0

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006790:	682b      	ldr	r3, [r5, #0]
 8006792:	009f      	lsls	r7, r3, #2
 8006794:	f100 8127 	bmi.w	80069e6 <HAL_RCCEx_PeriphCLKConfig+0x4f2>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8006798:	6821      	ldr	r1, [r4, #0]
 800679a:	030e      	lsls	r6, r1, #12
 800679c:	d501      	bpl.n	80067a2 <HAL_RCCEx_PeriphCLKConfig+0x2ae>
 800679e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80067a0:	b11b      	cbz	r3, 80067aa <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 80067a2:	02cd      	lsls	r5, r1, #11
 80067a4:	d523      	bpl.n	80067ee <HAL_RCCEx_PeriphCLKConfig+0x2fa>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 80067a6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80067a8:	bb0b      	cbnz	r3, 80067ee <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 80067aa:	4a03      	ldr	r2, [pc, #12]	@ (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80067ac:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80067b0:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88
 80067b4:	e004      	b.n	80067c0 <HAL_RCCEx_PeriphCLKConfig+0x2cc>
 80067b6:	bf00      	nop
 80067b8:	40023800 	.word	0x40023800
 80067bc:	40007000 	.word	0x40007000
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80067c0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80067c4:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 80067c8:	4303      	orrs	r3, r0
 80067ca:	6960      	ldr	r0, [r4, #20]
 80067cc:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80067d0:	69a0      	ldr	r0, [r4, #24]
 80067d2:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 80067d6:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80067da:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 80067de:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80067e0:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 80067e4:	3801      	subs	r0, #1
 80067e6:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80067ea:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 80067ee:	0288      	lsls	r0, r1, #10
 80067f0:	d515      	bpl.n	800681e <HAL_RCCEx_PeriphCLKConfig+0x32a>
 80067f2:	6fe3      	ldr	r3, [r4, #124]	@ 0x7c
 80067f4:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80067f8:	d111      	bne.n	800681e <HAL_RCCEx_PeriphCLKConfig+0x32a>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80067fa:	4a82      	ldr	r2, [pc, #520]	@ (8006a04 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 80067fc:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006800:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8006804:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
 8006808:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 800680c:	4303      	orrs	r3, r0
 800680e:	6960      	ldr	r0, [r4, #20]
 8006810:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006814:	6a20      	ldr	r0, [r4, #32]
 8006816:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800681a:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800681e:	070a      	lsls	r2, r1, #28
 8006820:	d519      	bpl.n	8006856 <HAL_RCCEx_PeriphCLKConfig+0x362>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006822:	4a78      	ldr	r2, [pc, #480]	@ (8006a04 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006824:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8006828:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 800682c:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8006830:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006834:	430b      	orrs	r3, r1
 8006836:	6961      	ldr	r1, [r4, #20]
 8006838:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 800683c:	69e1      	ldr	r1, [r4, #28]
 800683e:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8006842:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006846:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 800684a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800684c:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8006850:	430b      	orrs	r3, r1
 8006852:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006856:	4c6b      	ldr	r4, [pc, #428]	@ (8006a04 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006858:	6823      	ldr	r3, [r4, #0]
 800685a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800685e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006860:	f7fd fefa 	bl	8004658 <HAL_GetTick>
 8006864:	4605      	mov	r5, r0

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006866:	6823      	ldr	r3, [r4, #0]
 8006868:	009b      	lsls	r3, r3, #2
 800686a:	f140 80c3 	bpl.w	80069f4 <HAL_RCCEx_PeriphCLKConfig+0x500>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800686e:	2000      	movs	r0, #0
 8006870:	e009      	b.n	8006886 <HAL_RCCEx_PeriphCLKConfig+0x392>
      plli2sused = 1;
 8006872:	2601      	movs	r6, #1
 8006874:	e67a      	b.n	800656c <HAL_RCCEx_PeriphCLKConfig+0x78>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006876:	f7fd feef 	bl	8004658 <HAL_GetTick>
 800687a:	eba0 0008 	sub.w	r0, r0, r8
 800687e:	2864      	cmp	r0, #100	@ 0x64
 8006880:	f67f ae8c 	bls.w	800659c <HAL_RCCEx_PeriphCLKConfig+0xa8>
        return HAL_TIMEOUT;
 8006884:	2003      	movs	r0, #3
}
 8006886:	b003      	add	sp, #12
 8006888:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800688c:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8006890:	4293      	cmp	r3, r2
 8006892:	f43f ae8e 	beq.w	80065b2 <HAL_RCCEx_PeriphCLKConfig+0xbe>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006896:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006898:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800689a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 800689e:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 80068a2:	673a      	str	r2, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 80068a4:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 80068a6:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80068aa:	673a      	str	r2, [r7, #112]	@ 0x70
      RCC->BDCR = tmpreg0;
 80068ac:	673b      	str	r3, [r7, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80068ae:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80068b0:	07db      	lsls	r3, r3, #31
 80068b2:	f57f ae7e 	bpl.w	80065b2 <HAL_RCCEx_PeriphCLKConfig+0xbe>
        tickstart = HAL_GetTick();
 80068b6:	f7fd fecf 	bl	8004658 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80068ba:	f241 3988 	movw	r9, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 80068be:	4680      	mov	r8, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80068c0:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80068c2:	0798      	lsls	r0, r3, #30
 80068c4:	f53f ae75 	bmi.w	80065b2 <HAL_RCCEx_PeriphCLKConfig+0xbe>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80068c8:	f7fd fec6 	bl	8004658 <HAL_GetTick>
 80068cc:	eba0 0008 	sub.w	r0, r0, r8
 80068d0:	4548      	cmp	r0, r9
 80068d2:	d9f5      	bls.n	80068c0 <HAL_RCCEx_PeriphCLKConfig+0x3cc>
 80068d4:	e7d6      	b.n	8006884 <HAL_RCCEx_PeriphCLKConfig+0x390>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80068d6:	6891      	ldr	r1, [r2, #8]
 80068d8:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 80068dc:	e679      	b.n	80065d2 <HAL_RCCEx_PeriphCLKConfig+0xde>
    __HAL_RCC_PLLI2S_DISABLE();
 80068de:	4e49      	ldr	r6, [pc, #292]	@ (8006a04 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 80068e0:	6833      	ldr	r3, [r6, #0]
 80068e2:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80068e6:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 80068e8:	f7fd feb6 	bl	8004658 <HAL_GetTick>
 80068ec:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80068ee:	6833      	ldr	r3, [r6, #0]
 80068f0:	011b      	lsls	r3, r3, #4
 80068f2:	d472      	bmi.n	80069da <HAL_RCCEx_PeriphCLKConfig+0x4e6>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 80068f4:	6822      	ldr	r2, [r4, #0]
 80068f6:	07d7      	lsls	r7, r2, #31
 80068f8:	d512      	bpl.n	8006920 <HAL_RCCEx_PeriphCLKConfig+0x42c>
 80068fa:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80068fc:	b983      	cbnz	r3, 8006920 <HAL_RCCEx_PeriphCLKConfig+0x42c>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 80068fe:	f8d6 3084 	ldr.w	r3, [r6, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8006902:	f8d6 1084 	ldr.w	r1, [r6, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8006906:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800690a:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 800690e:	430b      	orrs	r3, r1
 8006910:	6861      	ldr	r1, [r4, #4]
 8006912:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8006916:	68a1      	ldr	r1, [r4, #8]
 8006918:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800691c:	f8c6 3084 	str.w	r3, [r6, #132]	@ 0x84
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8006920:	0316      	lsls	r6, r2, #12
 8006922:	d503      	bpl.n	800692c <HAL_RCCEx_PeriphCLKConfig+0x438>
 8006924:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8006926:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800692a:	d005      	beq.n	8006938 <HAL_RCCEx_PeriphCLKConfig+0x444>
 800692c:	02d0      	lsls	r0, r2, #11
 800692e:	d51e      	bpl.n	800696e <HAL_RCCEx_PeriphCLKConfig+0x47a>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8006930:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8006932:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006936:	d11a      	bne.n	800696e <HAL_RCCEx_PeriphCLKConfig+0x47a>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8006938:	4932      	ldr	r1, [pc, #200]	@ (8006a04 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 800693a:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800693e:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8006942:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006946:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 800694a:	4303      	orrs	r3, r0
 800694c:	6860      	ldr	r0, [r4, #4]
 800694e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006952:	68e0      	ldr	r0, [r4, #12]
 8006954:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8006958:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800695c:	f8d1 008c 	ldr.w	r0, [r1, #140]	@ 0x8c
 8006960:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006962:	f020 001f 	bic.w	r0, r0, #31
 8006966:	3b01      	subs	r3, #1
 8006968:	4303      	orrs	r3, r0
 800696a:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 800696e:	01d1      	lsls	r1, r2, #7
 8006970:	d511      	bpl.n	8006996 <HAL_RCCEx_PeriphCLKConfig+0x4a2>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8006972:	4924      	ldr	r1, [pc, #144]	@ (8006a04 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006974:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006978:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 800697c:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
 8006980:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006984:	4303      	orrs	r3, r0
 8006986:	6860      	ldr	r0, [r4, #4]
 8006988:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800698c:	6920      	ldr	r0, [r4, #16]
 800698e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8006992:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006996:	0192      	lsls	r2, r2, #6
 8006998:	d50d      	bpl.n	80069b6 <HAL_RCCEx_PeriphCLKConfig+0x4c2>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800699a:	6923      	ldr	r3, [r4, #16]
 800699c:	6862      	ldr	r2, [r4, #4]
 800699e:	041b      	lsls	r3, r3, #16
 80069a0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80069a4:	68e2      	ldr	r2, [r4, #12]
 80069a6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80069aa:	68a2      	ldr	r2, [r4, #8]
 80069ac:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80069b0:	4a14      	ldr	r2, [pc, #80]	@ (8006a04 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 80069b2:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80069b6:	4e13      	ldr	r6, [pc, #76]	@ (8006a04 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 80069b8:	6833      	ldr	r3, [r6, #0]
 80069ba:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80069be:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 80069c0:	f7fd fe4a 	bl	8004658 <HAL_GetTick>
 80069c4:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80069c6:	6833      	ldr	r3, [r6, #0]
 80069c8:	011b      	lsls	r3, r3, #4
 80069ca:	f53f aed7 	bmi.w	800677c <HAL_RCCEx_PeriphCLKConfig+0x288>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80069ce:	f7fd fe43 	bl	8004658 <HAL_GetTick>
 80069d2:	1bc0      	subs	r0, r0, r7
 80069d4:	2864      	cmp	r0, #100	@ 0x64
 80069d6:	d9f6      	bls.n	80069c6 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 80069d8:	e754      	b.n	8006884 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80069da:	f7fd fe3d 	bl	8004658 <HAL_GetTick>
 80069de:	1bc0      	subs	r0, r0, r7
 80069e0:	2864      	cmp	r0, #100	@ 0x64
 80069e2:	d984      	bls.n	80068ee <HAL_RCCEx_PeriphCLKConfig+0x3fa>
 80069e4:	e74e      	b.n	8006884 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80069e6:	f7fd fe37 	bl	8004658 <HAL_GetTick>
 80069ea:	1b80      	subs	r0, r0, r6
 80069ec:	2864      	cmp	r0, #100	@ 0x64
 80069ee:	f67f aecf 	bls.w	8006790 <HAL_RCCEx_PeriphCLKConfig+0x29c>
 80069f2:	e747      	b.n	8006884 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80069f4:	f7fd fe30 	bl	8004658 <HAL_GetTick>
 80069f8:	1b40      	subs	r0, r0, r5
 80069fa:	2864      	cmp	r0, #100	@ 0x64
 80069fc:	f67f af33 	bls.w	8006866 <HAL_RCCEx_PeriphCLKConfig+0x372>
 8006a00:	e740      	b.n	8006884 <HAL_RCCEx_PeriphCLKConfig+0x390>
 8006a02:	bf00      	nop
 8006a04:	40023800 	.word	0x40023800

08006a08 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8006a08:	b538      	push	{r3, r4, r5, lr}
 8006a0a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8006a0c:	4604      	mov	r4, r0
 8006a0e:	b1c8      	cbz	r0, 8006a44 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006a10:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8006a14:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006a18:	b91b      	cbnz	r3, 8006a22 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006a1a:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006a1e:	f7fa fb59 	bl	80010d4 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006a22:	2302      	movs	r3, #2

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006a24:	1d21      	adds	r1, r4, #4
 8006a26:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006a28:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006a2c:	f000 fed3 	bl	80077d6 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006a30:	6862      	ldr	r2, [r4, #4]
 8006a32:	4629      	mov	r1, r5
 8006a34:	6820      	ldr	r0, [r4, #0]
 8006a36:	f000 ff06 	bl	8007846 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006a3a:	2301      	movs	r3, #1

  return HAL_OK;
 8006a3c:	2000      	movs	r0, #0
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006a3e:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
}
 8006a42:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006a44:	2001      	movs	r0, #1
 8006a46:	e7fc      	b.n	8006a42 <HAL_SDRAM_Init+0x3a>

08006a48 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8006a48:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006a4a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
 8006a4e:	4605      	mov	r5, r0
 8006a50:	460e      	mov	r6, r1

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8006a52:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006a54:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8006a56:	d010      	beq.n	8006a7a <HAL_SDRAM_SendCommand+0x32>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8006a58:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8006a5c:	2c01      	cmp	r4, #1
 8006a5e:	d110      	bne.n	8006a82 <HAL_SDRAM_SendCommand+0x3a>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006a60:	2302      	movs	r3, #2

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006a62:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006a64:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006a68:	f000 ff23 	bl	80078b2 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006a6c:	6833      	ldr	r3, [r6, #0]
 8006a6e:	2b02      	cmp	r3, #2
 8006a70:	d104      	bne.n	8006a7c <HAL_SDRAM_SendCommand+0x34>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006a72:	2305      	movs	r3, #5
 8006a74:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006a78:	2000      	movs	r0, #0
}
 8006a7a:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006a7c:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
 8006a80:	e7fa      	b.n	8006a78 <HAL_SDRAM_SendCommand+0x30>
    return HAL_ERROR;
 8006a82:	2001      	movs	r0, #1
 8006a84:	e7f9      	b.n	8006a7a <HAL_SDRAM_SendCommand+0x32>

08006a86 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006a86:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006a88:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
 8006a8c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006a8e:	2b02      	cmp	r3, #2
 8006a90:	b2d8      	uxtb	r0, r3
 8006a92:	d00d      	beq.n	8006ab0 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8006a94:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8006a98:	2b01      	cmp	r3, #1
 8006a9a:	b2dd      	uxtb	r5, r3
 8006a9c:	d109      	bne.n	8006ab2 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006a9e:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006aa0:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006aa2:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006aa6:	f000 ff16 	bl	80078d6 <FMC_SDRAM_ProgramRefreshRate>
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006aaa:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006aac:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
 8006ab0:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006ab2:	2001      	movs	r0, #1
 8006ab4:	e7fc      	b.n	8006ab0 <HAL_SDRAM_ProgramRefreshRate+0x2a>

08006ab6 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006ab6:	4770      	bx	lr

08006ab8 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006ab8:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006abc:	2b01      	cmp	r3, #1
 8006abe:	d133      	bne.n	8006b28 <HAL_TIM_Base_Start_IT+0x70>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006ac0:	2302      	movs	r3, #2
 8006ac2:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006ac6:	6803      	ldr	r3, [r0, #0]
 8006ac8:	68da      	ldr	r2, [r3, #12]
 8006aca:	f042 0201 	orr.w	r2, r2, #1
 8006ace:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006ad0:	4a16      	ldr	r2, [pc, #88]	@ (8006b2c <HAL_TIM_Base_Start_IT+0x74>)
 8006ad2:	4293      	cmp	r3, r2
 8006ad4:	d01a      	beq.n	8006b0c <HAL_TIM_Base_Start_IT+0x54>
 8006ad6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006ada:	d017      	beq.n	8006b0c <HAL_TIM_Base_Start_IT+0x54>
 8006adc:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006ae0:	4293      	cmp	r3, r2
 8006ae2:	d013      	beq.n	8006b0c <HAL_TIM_Base_Start_IT+0x54>
 8006ae4:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006ae8:	4293      	cmp	r3, r2
 8006aea:	d00f      	beq.n	8006b0c <HAL_TIM_Base_Start_IT+0x54>
 8006aec:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006af0:	4293      	cmp	r3, r2
 8006af2:	d00b      	beq.n	8006b0c <HAL_TIM_Base_Start_IT+0x54>
 8006af4:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006af8:	4293      	cmp	r3, r2
 8006afa:	d007      	beq.n	8006b0c <HAL_TIM_Base_Start_IT+0x54>
 8006afc:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8006b00:	4293      	cmp	r3, r2
 8006b02:	d003      	beq.n	8006b0c <HAL_TIM_Base_Start_IT+0x54>
 8006b04:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8006b08:	4293      	cmp	r3, r2
 8006b0a:	d107      	bne.n	8006b1c <HAL_TIM_Base_Start_IT+0x64>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006b0c:	6899      	ldr	r1, [r3, #8]
 8006b0e:	4a08      	ldr	r2, [pc, #32]	@ (8006b30 <HAL_TIM_Base_Start_IT+0x78>)
 8006b10:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006b12:	2a06      	cmp	r2, #6
 8006b14:	d006      	beq.n	8006b24 <HAL_TIM_Base_Start_IT+0x6c>
 8006b16:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8006b1a:	d003      	beq.n	8006b24 <HAL_TIM_Base_Start_IT+0x6c>
    {
      __HAL_TIM_ENABLE(htim);
 8006b1c:	681a      	ldr	r2, [r3, #0]
 8006b1e:	f042 0201 	orr.w	r2, r2, #1
 8006b22:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8006b24:	2000      	movs	r0, #0
 8006b26:	4770      	bx	lr
    return HAL_ERROR;
 8006b28:	2001      	movs	r0, #1
}
 8006b2a:	4770      	bx	lr
 8006b2c:	40010000 	.word	0x40010000
 8006b30:	00010007 	.word	0x00010007

08006b34 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8006b34:	4770      	bx	lr

08006b36 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8006b36:	4770      	bx	lr

08006b38 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8006b38:	4770      	bx	lr

08006b3a <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8006b3a:	4770      	bx	lr

08006b3c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006b3c:	6803      	ldr	r3, [r0, #0]
 8006b3e:	691a      	ldr	r2, [r3, #16]
 8006b40:	0791      	lsls	r1, r2, #30
{
 8006b42:	b510      	push	{r4, lr}
 8006b44:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006b46:	d50f      	bpl.n	8006b68 <HAL_TIM_IRQHandler+0x2c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006b48:	68da      	ldr	r2, [r3, #12]
 8006b4a:	0792      	lsls	r2, r2, #30
 8006b4c:	d50c      	bpl.n	8006b68 <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006b4e:	f06f 0202 	mvn.w	r2, #2
 8006b52:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006b54:	2201      	movs	r2, #1
 8006b56:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006b58:	699b      	ldr	r3, [r3, #24]
 8006b5a:	0799      	lsls	r1, r3, #30
 8006b5c:	f000 8085 	beq.w	8006c6a <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 8006b60:	f7ff ffe9 	bl	8006b36 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006b64:	2300      	movs	r3, #0
 8006b66:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006b68:	6823      	ldr	r3, [r4, #0]
 8006b6a:	691a      	ldr	r2, [r3, #16]
 8006b6c:	0752      	lsls	r2, r2, #29
 8006b6e:	d510      	bpl.n	8006b92 <HAL_TIM_IRQHandler+0x56>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006b70:	68da      	ldr	r2, [r3, #12]
 8006b72:	0750      	lsls	r0, r2, #29
 8006b74:	d50d      	bpl.n	8006b92 <HAL_TIM_IRQHandler+0x56>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006b76:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
 8006b7a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006b7c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006b7e:	2202      	movs	r2, #2
 8006b80:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006b82:	699b      	ldr	r3, [r3, #24]
 8006b84:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8006b88:	d075      	beq.n	8006c76 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006b8a:	f7ff ffd4 	bl	8006b36 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006b8e:	2300      	movs	r3, #0
 8006b90:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006b92:	6823      	ldr	r3, [r4, #0]
 8006b94:	691a      	ldr	r2, [r3, #16]
 8006b96:	0711      	lsls	r1, r2, #28
 8006b98:	d50f      	bpl.n	8006bba <HAL_TIM_IRQHandler+0x7e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8006b9a:	68da      	ldr	r2, [r3, #12]
 8006b9c:	0712      	lsls	r2, r2, #28
 8006b9e:	d50c      	bpl.n	8006bba <HAL_TIM_IRQHandler+0x7e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006ba0:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
 8006ba4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006ba6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006ba8:	2204      	movs	r2, #4
 8006baa:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006bac:	69db      	ldr	r3, [r3, #28]
 8006bae:	079b      	lsls	r3, r3, #30
 8006bb0:	d067      	beq.n	8006c82 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 8006bb2:	f7ff ffc0 	bl	8006b36 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006bb6:	2300      	movs	r3, #0
 8006bb8:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006bba:	6823      	ldr	r3, [r4, #0]
 8006bbc:	691a      	ldr	r2, [r3, #16]
 8006bbe:	06d0      	lsls	r0, r2, #27
 8006bc0:	d510      	bpl.n	8006be4 <HAL_TIM_IRQHandler+0xa8>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006bc2:	68da      	ldr	r2, [r3, #12]
 8006bc4:	06d1      	lsls	r1, r2, #27
 8006bc6:	d50d      	bpl.n	8006be4 <HAL_TIM_IRQHandler+0xa8>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006bc8:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
 8006bcc:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006bce:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006bd0:	2208      	movs	r2, #8
 8006bd2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006bd4:	69db      	ldr	r3, [r3, #28]
 8006bd6:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8006bda:	d058      	beq.n	8006c8e <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 8006bdc:	f7ff ffab 	bl	8006b36 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006be0:	2300      	movs	r3, #0
 8006be2:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006be4:	6823      	ldr	r3, [r4, #0]
 8006be6:	691a      	ldr	r2, [r3, #16]
 8006be8:	07d2      	lsls	r2, r2, #31
 8006bea:	d508      	bpl.n	8006bfe <HAL_TIM_IRQHandler+0xc2>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006bec:	68da      	ldr	r2, [r3, #12]
 8006bee:	07d0      	lsls	r0, r2, #31
 8006bf0:	d505      	bpl.n	8006bfe <HAL_TIM_IRQHandler+0xc2>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006bf2:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
 8006bf6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006bf8:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8006bfa:	f7fa f827 	bl	8000c4c <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006bfe:	6823      	ldr	r3, [r4, #0]
 8006c00:	691a      	ldr	r2, [r3, #16]
 8006c02:	0611      	lsls	r1, r2, #24
 8006c04:	d508      	bpl.n	8006c18 <HAL_TIM_IRQHandler+0xdc>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006c06:	68da      	ldr	r2, [r3, #12]
 8006c08:	0612      	lsls	r2, r2, #24
 8006c0a:	d505      	bpl.n	8006c18 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006c0c:	f06f 0280 	mvn.w	r2, #128	@ 0x80
      HAL_TIMEx_BreakCallback(htim);
 8006c10:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006c12:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006c14:	f000 f8d9 	bl	8006dca <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 8006c18:	6823      	ldr	r3, [r4, #0]
 8006c1a:	691a      	ldr	r2, [r3, #16]
 8006c1c:	05d0      	lsls	r0, r2, #23
 8006c1e:	d508      	bpl.n	8006c32 <HAL_TIM_IRQHandler+0xf6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006c20:	68da      	ldr	r2, [r3, #12]
 8006c22:	0611      	lsls	r1, r2, #24
 8006c24:	d505      	bpl.n	8006c32 <HAL_TIM_IRQHandler+0xf6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8006c26:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
 8006c2a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8006c2c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 8006c2e:	f000 f8cd 	bl	8006dcc <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006c32:	6823      	ldr	r3, [r4, #0]
 8006c34:	691a      	ldr	r2, [r3, #16]
 8006c36:	0652      	lsls	r2, r2, #25
 8006c38:	d508      	bpl.n	8006c4c <HAL_TIM_IRQHandler+0x110>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006c3a:	68da      	ldr	r2, [r3, #12]
 8006c3c:	0650      	lsls	r0, r2, #25
 8006c3e:	d505      	bpl.n	8006c4c <HAL_TIM_IRQHandler+0x110>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006c40:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
 8006c44:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006c46:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8006c48:	f7ff ff77 	bl	8006b3a <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006c4c:	6823      	ldr	r3, [r4, #0]
 8006c4e:	691a      	ldr	r2, [r3, #16]
 8006c50:	0691      	lsls	r1, r2, #26
 8006c52:	d522      	bpl.n	8006c9a <HAL_TIM_IRQHandler+0x15e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006c54:	68da      	ldr	r2, [r3, #12]
 8006c56:	0692      	lsls	r2, r2, #26
 8006c58:	d51f      	bpl.n	8006c9a <HAL_TIM_IRQHandler+0x15e>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006c5a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8006c5e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006c60:	611a      	str	r2, [r3, #16]
}
 8006c62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006c66:	f000 b8af 	b.w	8006dc8 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006c6a:	f7ff ff63 	bl	8006b34 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006c6e:	4620      	mov	r0, r4
 8006c70:	f7ff ff62 	bl	8006b38 <HAL_TIM_PWM_PulseFinishedCallback>
 8006c74:	e776      	b.n	8006b64 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006c76:	f7ff ff5d 	bl	8006b34 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006c7a:	4620      	mov	r0, r4
 8006c7c:	f7ff ff5c 	bl	8006b38 <HAL_TIM_PWM_PulseFinishedCallback>
 8006c80:	e785      	b.n	8006b8e <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006c82:	f7ff ff57 	bl	8006b34 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006c86:	4620      	mov	r0, r4
 8006c88:	f7ff ff56 	bl	8006b38 <HAL_TIM_PWM_PulseFinishedCallback>
 8006c8c:	e793      	b.n	8006bb6 <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006c8e:	f7ff ff51 	bl	8006b34 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006c92:	4620      	mov	r0, r4
 8006c94:	f7ff ff50 	bl	8006b38 <HAL_TIM_PWM_PulseFinishedCallback>
 8006c98:	e7a2      	b.n	8006be0 <HAL_TIM_IRQHandler+0xa4>
}
 8006c9a:	bd10      	pop	{r4, pc}

08006c9c <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006c9c:	4a30      	ldr	r2, [pc, #192]	@ (8006d60 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8006c9e:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006ca0:	4290      	cmp	r0, r2
 8006ca2:	d012      	beq.n	8006cca <TIM_Base_SetConfig+0x2e>
 8006ca4:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006ca8:	d00f      	beq.n	8006cca <TIM_Base_SetConfig+0x2e>
 8006caa:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006cae:	4290      	cmp	r0, r2
 8006cb0:	d00b      	beq.n	8006cca <TIM_Base_SetConfig+0x2e>
 8006cb2:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006cb6:	4290      	cmp	r0, r2
 8006cb8:	d007      	beq.n	8006cca <TIM_Base_SetConfig+0x2e>
 8006cba:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006cbe:	4290      	cmp	r0, r2
 8006cc0:	d003      	beq.n	8006cca <TIM_Base_SetConfig+0x2e>
 8006cc2:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006cc6:	4290      	cmp	r0, r2
 8006cc8:	d119      	bne.n	8006cfe <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006cca:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006ccc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8006cd0:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006cd2:	4a23      	ldr	r2, [pc, #140]	@ (8006d60 <TIM_Base_SetConfig+0xc4>)
 8006cd4:	4290      	cmp	r0, r2
 8006cd6:	d029      	beq.n	8006d2c <TIM_Base_SetConfig+0x90>
 8006cd8:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006cdc:	d026      	beq.n	8006d2c <TIM_Base_SetConfig+0x90>
 8006cde:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006ce2:	4290      	cmp	r0, r2
 8006ce4:	d022      	beq.n	8006d2c <TIM_Base_SetConfig+0x90>
 8006ce6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006cea:	4290      	cmp	r0, r2
 8006cec:	d01e      	beq.n	8006d2c <TIM_Base_SetConfig+0x90>
 8006cee:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006cf2:	4290      	cmp	r0, r2
 8006cf4:	d01a      	beq.n	8006d2c <TIM_Base_SetConfig+0x90>
 8006cf6:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006cfa:	4290      	cmp	r0, r2
 8006cfc:	d016      	beq.n	8006d2c <TIM_Base_SetConfig+0x90>
 8006cfe:	4a19      	ldr	r2, [pc, #100]	@ (8006d64 <TIM_Base_SetConfig+0xc8>)
 8006d00:	4290      	cmp	r0, r2
 8006d02:	d013      	beq.n	8006d2c <TIM_Base_SetConfig+0x90>
 8006d04:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d08:	4290      	cmp	r0, r2
 8006d0a:	d00f      	beq.n	8006d2c <TIM_Base_SetConfig+0x90>
 8006d0c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d10:	4290      	cmp	r0, r2
 8006d12:	d00b      	beq.n	8006d2c <TIM_Base_SetConfig+0x90>
 8006d14:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 8006d18:	4290      	cmp	r0, r2
 8006d1a:	d007      	beq.n	8006d2c <TIM_Base_SetConfig+0x90>
 8006d1c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d20:	4290      	cmp	r0, r2
 8006d22:	d003      	beq.n	8006d2c <TIM_Base_SetConfig+0x90>
 8006d24:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d28:	4290      	cmp	r0, r2
 8006d2a:	d103      	bne.n	8006d34 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8006d2c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006d30:	68ca      	ldr	r2, [r1, #12]
 8006d32:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006d34:	694a      	ldr	r2, [r1, #20]
 8006d36:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006d3a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006d3c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006d3e:	688b      	ldr	r3, [r1, #8]
 8006d40:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006d42:	680b      	ldr	r3, [r1, #0]
 8006d44:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006d46:	4b06      	ldr	r3, [pc, #24]	@ (8006d60 <TIM_Base_SetConfig+0xc4>)
 8006d48:	4298      	cmp	r0, r3
 8006d4a:	d003      	beq.n	8006d54 <TIM_Base_SetConfig+0xb8>
 8006d4c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8006d50:	4298      	cmp	r0, r3
 8006d52:	d101      	bne.n	8006d58 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006d54:	690b      	ldr	r3, [r1, #16]
 8006d56:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006d58:	2301      	movs	r3, #1
 8006d5a:	6143      	str	r3, [r0, #20]
}
 8006d5c:	4770      	bx	lr
 8006d5e:	bf00      	nop
 8006d60:	40010000 	.word	0x40010000
 8006d64:	40014000 	.word	0x40014000

08006d68 <HAL_TIM_Base_Init>:
{
 8006d68:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006d6a:	4604      	mov	r4, r0
 8006d6c:	b350      	cbz	r0, 8006dc4 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006d6e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006d72:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006d76:	b91b      	cbnz	r3, 8006d80 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006d78:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006d7c:	f7ff fe9b 	bl	8006ab6 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006d80:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006d82:	6820      	ldr	r0, [r4, #0]
 8006d84:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 8006d86:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006d8a:	f7ff ff87 	bl	8006c9c <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006d8e:	2301      	movs	r3, #1
  return HAL_OK;
 8006d90:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006d92:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006d96:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8006d9a:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8006d9e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006da2:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8006da6:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006daa:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006dae:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8006db2:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8006db6:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 8006dba:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 8006dbe:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 8006dc2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006dc4:	2001      	movs	r0, #1
 8006dc6:	e7fc      	b.n	8006dc2 <HAL_TIM_Base_Init+0x5a>

08006dc8 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8006dc8:	4770      	bx	lr

08006dca <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8006dca:	4770      	bx	lr

08006dcc <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 8006dcc:	4770      	bx	lr

08006dce <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006dce:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006dd0:	e852 3f00 	ldrex	r3, [r2]
 8006dd4:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006dd8:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8006ddc:	6802      	ldr	r2, [r0, #0]
 8006dde:	2900      	cmp	r1, #0
 8006de0:	d1f5      	bne.n	8006dce <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006de2:	f102 0308 	add.w	r3, r2, #8
 8006de6:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006dea:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006dee:	f102 0c08 	add.w	ip, r2, #8
 8006df2:	e84c 3100 	strex	r1, r3, [ip]
 8006df6:	2900      	cmp	r1, #0
 8006df8:	d1f3      	bne.n	8006de2 <UART_EndRxTransfer+0x14>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006dfa:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8006dfc:	2b01      	cmp	r3, #1
 8006dfe:	d107      	bne.n	8006e10 <UART_EndRxTransfer+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006e00:	e852 3f00 	ldrex	r3, [r2]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006e04:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006e08:	e842 3100 	strex	r1, r3, [r2]
 8006e0c:	2900      	cmp	r1, #0
 8006e0e:	d1f7      	bne.n	8006e00 <UART_EndRxTransfer+0x32>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8006e10:	2320      	movs	r3, #32
 8006e12:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006e16:	2300      	movs	r3, #0
 8006e18:	6603      	str	r3, [r0, #96]	@ 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 8006e1a:	6683      	str	r3, [r0, #104]	@ 0x68
}
 8006e1c:	4770      	bx	lr

08006e1e <HAL_UART_ErrorCallback>:
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
 8006e1e:	4770      	bx	lr

08006e20 <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8006e20:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8006e22:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->RxXferCount = 0U;
 8006e24:	2300      	movs	r3, #0
 8006e26:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
  huart->TxXferCount = 0U;
 8006e2a:	f8a0 3052 	strh.w	r3, [r0, #82]	@ 0x52
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 8006e2e:	f7ff fff6 	bl	8006e1e <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8006e32:	bd08      	pop	{r3, pc}

08006e34 <HAL_UARTEx_RxEventCallback>:
}
 8006e34:	4770      	bx	lr
	...

08006e38 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8006e38:	6803      	ldr	r3, [r0, #0]
{
 8006e3a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8006e3c:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
 8006e3e:	f640 060f 	movw	r6, #2063	@ 0x80f
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8006e42:	6819      	ldr	r1, [r3, #0]
{
 8006e44:	4604      	mov	r4, r0
  if (errorflags == 0U)
 8006e46:	4232      	tst	r2, r6
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8006e48:	689d      	ldr	r5, [r3, #8]
  if (errorflags == 0U)
 8006e4a:	d10b      	bne.n	8006e64 <HAL_UART_IRQHandler+0x2c>
    if (((isrflags & USART_ISR_RXNE) != 0U)
 8006e4c:	0696      	lsls	r6, r2, #26
 8006e4e:	f140 8088 	bpl.w	8006f62 <HAL_UART_IRQHandler+0x12a>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8006e52:	068d      	lsls	r5, r1, #26
 8006e54:	f140 8085 	bpl.w	8006f62 <HAL_UART_IRQHandler+0x12a>
      if (huart->RxISR != NULL)
 8006e58:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8006e5a:	2b00      	cmp	r3, #0
 8006e5c:	d07b      	beq.n	8006f56 <HAL_UART_IRQHandler+0x11e>
}
 8006e5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
 8006e62:	4718      	bx	r3
      && (((cr3its & USART_CR3_EIE) != 0U)
 8006e64:	f005 0001 	and.w	r0, r5, #1
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 8006e68:	4d93      	ldr	r5, [pc, #588]	@ (80070b8 <HAL_UART_IRQHandler+0x280>)
 8006e6a:	400d      	ands	r5, r1
 8006e6c:	4305      	orrs	r5, r0
 8006e6e:	d078      	beq.n	8006f62 <HAL_UART_IRQHandler+0x12a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8006e70:	07d6      	lsls	r6, r2, #31
 8006e72:	d509      	bpl.n	8006e88 <HAL_UART_IRQHandler+0x50>
 8006e74:	05cd      	lsls	r5, r1, #23
 8006e76:	d507      	bpl.n	8006e88 <HAL_UART_IRQHandler+0x50>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8006e78:	2501      	movs	r5, #1
 8006e7a:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8006e7c:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 8006e80:	f045 0501 	orr.w	r5, r5, #1
 8006e84:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8006e88:	0796      	lsls	r6, r2, #30
 8006e8a:	d508      	bpl.n	8006e9e <HAL_UART_IRQHandler+0x66>
 8006e8c:	b138      	cbz	r0, 8006e9e <HAL_UART_IRQHandler+0x66>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 8006e8e:	2502      	movs	r5, #2
 8006e90:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8006e92:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 8006e96:	f045 0504 	orr.w	r5, r5, #4
 8006e9a:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8006e9e:	0755      	lsls	r5, r2, #29
 8006ea0:	d508      	bpl.n	8006eb4 <HAL_UART_IRQHandler+0x7c>
 8006ea2:	b138      	cbz	r0, 8006eb4 <HAL_UART_IRQHandler+0x7c>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8006ea4:	2504      	movs	r5, #4
 8006ea6:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8006ea8:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 8006eac:	f045 0502 	orr.w	r5, r5, #2
 8006eb0:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_ORE) != 0U)
 8006eb4:	0716      	lsls	r6, r2, #28
 8006eb6:	d50b      	bpl.n	8006ed0 <HAL_UART_IRQHandler+0x98>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8006eb8:	f001 0520 	and.w	r5, r1, #32
 8006ebc:	4305      	orrs	r5, r0
 8006ebe:	d007      	beq.n	8006ed0 <HAL_UART_IRQHandler+0x98>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8006ec0:	2008      	movs	r0, #8
 8006ec2:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8006ec4:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
 8006ec8:	f040 0008 	orr.w	r0, r0, #8
 8006ecc:	f8c4 0084 	str.w	r0, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 8006ed0:	0515      	lsls	r5, r2, #20
 8006ed2:	d50a      	bpl.n	8006eea <HAL_UART_IRQHandler+0xb2>
 8006ed4:	0148      	lsls	r0, r1, #5
 8006ed6:	d508      	bpl.n	8006eea <HAL_UART_IRQHandler+0xb2>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8006ed8:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 8006edc:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 8006ede:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8006ee2:	f043 0320 	orr.w	r3, r3, #32
 8006ee6:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8006eea:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8006eee:	2b00      	cmp	r3, #0
 8006ef0:	d031      	beq.n	8006f56 <HAL_UART_IRQHandler+0x11e>
      if (((isrflags & USART_ISR_RXNE) != 0U)
 8006ef2:	0692      	lsls	r2, r2, #26
 8006ef4:	d505      	bpl.n	8006f02 <HAL_UART_IRQHandler+0xca>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8006ef6:	068b      	lsls	r3, r1, #26
 8006ef8:	d503      	bpl.n	8006f02 <HAL_UART_IRQHandler+0xca>
        if (huart->RxISR != NULL)
 8006efa:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 8006efc:	b10b      	cbz	r3, 8006f02 <HAL_UART_IRQHandler+0xca>
          huart->RxISR(huart);
 8006efe:	4620      	mov	r0, r4
 8006f00:	4798      	blx	r3
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8006f02:	6826      	ldr	r6, [r4, #0]
        UART_EndRxTransfer(huart);
 8006f04:	4620      	mov	r0, r4
      errorcode = huart->ErrorCode;
 8006f06:	f8d4 2084 	ldr.w	r2, [r4, #132]	@ 0x84
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8006f0a:	68b3      	ldr	r3, [r6, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 8006f0c:	f002 0228 	and.w	r2, r2, #40	@ 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8006f10:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006f14:	ea53 0502 	orrs.w	r5, r3, r2
 8006f18:	d01e      	beq.n	8006f58 <HAL_UART_IRQHandler+0x120>
        UART_EndRxTransfer(huart);
 8006f1a:	f7ff ff58 	bl	8006dce <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8006f1e:	68b3      	ldr	r3, [r6, #8]
 8006f20:	065e      	lsls	r6, r3, #25
 8006f22:	d515      	bpl.n	8006f50 <HAL_UART_IRQHandler+0x118>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8006f24:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006f26:	f102 0308 	add.w	r3, r2, #8
 8006f2a:	e853 3f00 	ldrex	r3, [r3]
 8006f2e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006f32:	3208      	adds	r2, #8
 8006f34:	e842 3100 	strex	r1, r3, [r2]
 8006f38:	2900      	cmp	r1, #0
 8006f3a:	d1f3      	bne.n	8006f24 <HAL_UART_IRQHandler+0xec>
          if (huart->hdmarx != NULL)
 8006f3c:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8006f3e:	b138      	cbz	r0, 8006f50 <HAL_UART_IRQHandler+0x118>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8006f40:	4b5e      	ldr	r3, [pc, #376]	@ (80070bc <HAL_UART_IRQHandler+0x284>)
 8006f42:	6503      	str	r3, [r0, #80]	@ 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8006f44:	f7fd fceb 	bl	800491e <HAL_DMA_Abort_IT>
 8006f48:	b128      	cbz	r0, 8006f56 <HAL_UART_IRQHandler+0x11e>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8006f4a:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8006f4c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8006f4e:	e786      	b.n	8006e5e <HAL_UART_IRQHandler+0x26>
            HAL_UART_ErrorCallback(huart);
 8006f50:	4620      	mov	r0, r4
 8006f52:	f7ff ff64 	bl	8006e1e <HAL_UART_ErrorCallback>
}
 8006f56:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_ErrorCallback(huart);
 8006f58:	f7ff ff61 	bl	8006e1e <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006f5c:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
 8006f60:	e7f9      	b.n	8006f56 <HAL_UART_IRQHandler+0x11e>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006f62:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8006f64:	2801      	cmp	r0, #1
 8006f66:	f040 8088 	bne.w	800707a <HAL_UART_IRQHandler+0x242>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 8006f6a:	06d5      	lsls	r5, r2, #27
 8006f6c:	f140 8085 	bpl.w	800707a <HAL_UART_IRQHandler+0x242>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 8006f70:	06c8      	lsls	r0, r1, #27
 8006f72:	f140 8082 	bpl.w	800707a <HAL_UART_IRQHandler+0x242>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8006f76:	2210      	movs	r2, #16
 8006f78:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8006f7a:	689a      	ldr	r2, [r3, #8]
 8006f7c:	0652      	lsls	r2, r2, #25
 8006f7e:	d54a      	bpl.n	8007016 <HAL_UART_IRQHandler+0x1de>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8006f80:	6f61      	ldr	r1, [r4, #116]	@ 0x74
 8006f82:	680a      	ldr	r2, [r1, #0]
 8006f84:	6852      	ldr	r2, [r2, #4]
 8006f86:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
 8006f88:	2a00      	cmp	r2, #0
 8006f8a:	d0e4      	beq.n	8006f56 <HAL_UART_IRQHandler+0x11e>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8006f8c:	f8b4 0058 	ldrh.w	r0, [r4, #88]	@ 0x58
 8006f90:	4290      	cmp	r0, r2
 8006f92:	d9e0      	bls.n	8006f56 <HAL_UART_IRQHandler+0x11e>
        huart->RxXferCount = nb_remaining_rx_data;
 8006f94:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8006f98:	69ca      	ldr	r2, [r1, #28]
 8006f9a:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 8006f9e:	d02e      	beq.n	8006ffe <HAL_UART_IRQHandler+0x1c6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006fa0:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8006fa4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006fa8:	e843 2100 	strex	r1, r2, [r3]
 8006fac:	2900      	cmp	r1, #0
 8006fae:	d1f7      	bne.n	8006fa0 <HAL_UART_IRQHandler+0x168>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006fb0:	f103 0208 	add.w	r2, r3, #8
 8006fb4:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006fb8:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006fbc:	f103 0008 	add.w	r0, r3, #8
 8006fc0:	e840 2100 	strex	r1, r2, [r0]
 8006fc4:	2900      	cmp	r1, #0
 8006fc6:	d1f3      	bne.n	8006fb0 <HAL_UART_IRQHandler+0x178>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006fc8:	f103 0208 	add.w	r2, r3, #8
 8006fcc:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8006fd0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006fd4:	f103 0008 	add.w	r0, r3, #8
 8006fd8:	e840 2100 	strex	r1, r2, [r0]
 8006fdc:	2900      	cmp	r1, #0
 8006fde:	d1f3      	bne.n	8006fc8 <HAL_UART_IRQHandler+0x190>
          huart->RxState = HAL_UART_STATE_READY;
 8006fe0:	2220      	movs	r2, #32
 8006fe2:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006fe6:	6621      	str	r1, [r4, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006fe8:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006fec:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006ff0:	e843 2100 	strex	r1, r2, [r3]
 8006ff4:	2900      	cmp	r1, #0
 8006ff6:	d1f7      	bne.n	8006fe8 <HAL_UART_IRQHandler+0x1b0>
          (void)HAL_DMA_Abort(huart->hdmarx);
 8006ff8:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8006ffa:	f7fd fc52 	bl	80048a2 <HAL_DMA_Abort>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8006ffe:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8007000:	f8b4 1058 	ldrh.w	r1, [r4, #88]	@ 0x58
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8007004:	6663      	str	r3, [r4, #100]	@ 0x64
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8007006:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 800700a:	1ac9      	subs	r1, r1, r3
 800700c:	b289      	uxth	r1, r1
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 800700e:	4620      	mov	r0, r4
 8007010:	f7ff ff10 	bl	8006e34 <HAL_UARTEx_RxEventCallback>
 8007014:	e79f      	b.n	8006f56 <HAL_UART_IRQHandler+0x11e>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8007016:	f8b4 205a 	ldrh.w	r2, [r4, #90]	@ 0x5a
      if ((huart->RxXferCount > 0U)
 800701a:	f8b4 005a 	ldrh.w	r0, [r4, #90]	@ 0x5a
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 800701e:	f8b4 1058 	ldrh.w	r1, [r4, #88]	@ 0x58
 8007022:	b292      	uxth	r2, r2
      if ((huart->RxXferCount > 0U)
 8007024:	b280      	uxth	r0, r0
 8007026:	2800      	cmp	r0, #0
 8007028:	d095      	beq.n	8006f56 <HAL_UART_IRQHandler+0x11e>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 800702a:	1a89      	subs	r1, r1, r2
 800702c:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
 800702e:	2900      	cmp	r1, #0
 8007030:	d091      	beq.n	8006f56 <HAL_UART_IRQHandler+0x11e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007032:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8007036:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800703a:	e843 2000 	strex	r0, r2, [r3]
 800703e:	2800      	cmp	r0, #0
 8007040:	d1f7      	bne.n	8007032 <HAL_UART_IRQHandler+0x1fa>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007042:	f103 0208 	add.w	r2, r3, #8
 8007046:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800704a:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800704e:	f103 0508 	add.w	r5, r3, #8
 8007052:	e845 2000 	strex	r0, r2, [r5]
 8007056:	2800      	cmp	r0, #0
 8007058:	d1f3      	bne.n	8007042 <HAL_UART_IRQHandler+0x20a>
        huart->RxState = HAL_UART_STATE_READY;
 800705a:	2220      	movs	r2, #32
        huart->RxISR = NULL;
 800705c:	66a0      	str	r0, [r4, #104]	@ 0x68
        huart->RxState = HAL_UART_STATE_READY;
 800705e:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007062:	6620      	str	r0, [r4, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007064:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8007068:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800706c:	e843 2000 	strex	r0, r2, [r3]
 8007070:	2800      	cmp	r0, #0
 8007072:	d1f7      	bne.n	8007064 <HAL_UART_IRQHandler+0x22c>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8007074:	2302      	movs	r3, #2
 8007076:	6663      	str	r3, [r4, #100]	@ 0x64
 8007078:	e7c9      	b.n	800700e <HAL_UART_IRQHandler+0x1d6>
  if (((isrflags & USART_ISR_TXE) != 0U)
 800707a:	0616      	lsls	r6, r2, #24
 800707c:	d507      	bpl.n	800708e <HAL_UART_IRQHandler+0x256>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 800707e:	060d      	lsls	r5, r1, #24
 8007080:	d505      	bpl.n	800708e <HAL_UART_IRQHandler+0x256>
    if (huart->TxISR != NULL)
 8007082:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 8007084:	2b00      	cmp	r3, #0
 8007086:	f43f af66 	beq.w	8006f56 <HAL_UART_IRQHandler+0x11e>
      huart->TxISR(huart);
 800708a:	4620      	mov	r0, r4
 800708c:	e6e7      	b.n	8006e5e <HAL_UART_IRQHandler+0x26>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 800708e:	0650      	lsls	r0, r2, #25
 8007090:	f57f af61 	bpl.w	8006f56 <HAL_UART_IRQHandler+0x11e>
 8007094:	064a      	lsls	r2, r1, #25
 8007096:	f57f af5e 	bpl.w	8006f56 <HAL_UART_IRQHandler+0x11e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800709a:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 800709e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80070a2:	e843 2100 	strex	r1, r2, [r3]
 80070a6:	2900      	cmp	r1, #0
 80070a8:	d1f7      	bne.n	800709a <HAL_UART_IRQHandler+0x262>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 80070aa:	2320      	movs	r3, #32
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 80070ac:	4620      	mov	r0, r4
  huart->TxISR = NULL;
 80070ae:	66e1      	str	r1, [r4, #108]	@ 0x6c
  huart->gState = HAL_UART_STATE_READY;
 80070b0:	67e3      	str	r3, [r4, #124]	@ 0x7c
  HAL_UART_TxCpltCallback(huart);
 80070b2:	f7f9 fd8d 	bl	8000bd0 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80070b6:	e74e      	b.n	8006f56 <HAL_UART_IRQHandler+0x11e>
 80070b8:	04000120 	.word	0x04000120
 80070bc:	08006e21 	.word	0x08006e21

080070c0 <UART_RxISR_8BIT>:
{
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80070c0:	f8d0 2080 	ldr.w	r2, [r0, #128]	@ 0x80
  uint16_t uhMask = huart->Mask;
 80070c4:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80070c8:	2a22      	cmp	r2, #34	@ 0x22
{
 80070ca:	b508      	push	{r3, lr}
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80070cc:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80070ce:	d143      	bne.n	8007158 <UART_RxISR_8BIT+0x98>
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80070d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 80070d2:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 80070d4:	400b      	ands	r3, r1
 80070d6:	7013      	strb	r3, [r2, #0]
    huart->pRxBuffPtr++;
 80070d8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80070da:	3301      	adds	r3, #1
 80070dc:	6543      	str	r3, [r0, #84]	@ 0x54
    huart->RxXferCount--;
 80070de:	f8b0 305a 	ldrh.w	r3, [r0, #90]	@ 0x5a
 80070e2:	3b01      	subs	r3, #1
 80070e4:	b29b      	uxth	r3, r3
 80070e6:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a

    if (huart->RxXferCount == 0U)
 80070ea:	f8b0 305a 	ldrh.w	r3, [r0, #90]	@ 0x5a
 80070ee:	b29b      	uxth	r3, r3
 80070f0:	bb73      	cbnz	r3, 8007150 <UART_RxISR_8BIT+0x90>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80070f2:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80070f4:	e852 3f00 	ldrex	r3, [r2]
 80070f8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80070fc:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8007100:	6803      	ldr	r3, [r0, #0]
 8007102:	2900      	cmp	r1, #0
 8007104:	d1f5      	bne.n	80070f2 <UART_RxISR_8BIT+0x32>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007106:	f103 0208 	add.w	r2, r3, #8
 800710a:	e852 1f00 	ldrex	r1, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800710e:	f021 0101 	bic.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007112:	4694      	mov	ip, r2
 8007114:	e84c 1200 	strex	r2, r1, [ip]
 8007118:	2a00      	cmp	r2, #0
 800711a:	d1f4      	bne.n	8007106 <UART_RxISR_8BIT+0x46>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 800711c:	2120      	movs	r1, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 800711e:	6682      	str	r2, [r0, #104]	@ 0x68
      huart->RxState = HAL_UART_STATE_READY;
 8007120:	f8c0 1080 	str.w	r1, [r0, #128]	@ 0x80

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8007124:	6642      	str	r2, [r0, #100]	@ 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8007126:	6e01      	ldr	r1, [r0, #96]	@ 0x60
 8007128:	2901      	cmp	r1, #1
 800712a:	d112      	bne.n	8007152 <UART_RxISR_8BIT+0x92>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800712c:	6602      	str	r2, [r0, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800712e:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8007132:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007136:	e843 2100 	strex	r1, r2, [r3]
 800713a:	2900      	cmp	r1, #0
 800713c:	d1f7      	bne.n	800712e <UART_RxISR_8BIT+0x6e>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 800713e:	69da      	ldr	r2, [r3, #28]
 8007140:	06d2      	lsls	r2, r2, #27
 8007142:	d501      	bpl.n	8007148 <UART_RxISR_8BIT+0x88>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8007144:	2210      	movs	r2, #16
 8007146:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8007148:	f8b0 1058 	ldrh.w	r1, [r0, #88]	@ 0x58
 800714c:	f7ff fe72 	bl	8006e34 <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 8007150:	bd08      	pop	{r3, pc}
        HAL_UART_RxCpltCallback(huart);
 8007152:	f7f9 fd4f 	bl	8000bf4 <HAL_UART_RxCpltCallback>
 8007156:	e7fb      	b.n	8007150 <UART_RxISR_8BIT+0x90>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8007158:	699a      	ldr	r2, [r3, #24]
 800715a:	f042 0208 	orr.w	r2, r2, #8
 800715e:	619a      	str	r2, [r3, #24]
}
 8007160:	e7f6      	b.n	8007150 <UART_RxISR_8BIT+0x90>

08007162 <UART_RxISR_16BIT>:
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8007162:	f8d0 2080 	ldr.w	r2, [r0, #128]	@ 0x80
  uint16_t uhMask = huart->Mask;
 8007166:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800716a:	2a22      	cmp	r2, #34	@ 0x22
{
 800716c:	b508      	push	{r3, lr}
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 800716e:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8007170:	d140      	bne.n	80071f4 <UART_RxISR_16BIT+0x92>
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8007172:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
    tmp = (uint16_t *) huart->pRxBuffPtr ;
    *tmp = (uint16_t)(uhdata & uhMask);
 8007174:	4011      	ands	r1, r2
 8007176:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 8007178:	f822 1b02 	strh.w	r1, [r2], #2
    huart->pRxBuffPtr += 2U;
 800717c:	6542      	str	r2, [r0, #84]	@ 0x54
    huart->RxXferCount--;
 800717e:	f8b0 205a 	ldrh.w	r2, [r0, #90]	@ 0x5a
 8007182:	3a01      	subs	r2, #1
 8007184:	b292      	uxth	r2, r2
 8007186:	f8a0 205a 	strh.w	r2, [r0, #90]	@ 0x5a

    if (huart->RxXferCount == 0U)
 800718a:	f8b0 205a 	ldrh.w	r2, [r0, #90]	@ 0x5a
 800718e:	b292      	uxth	r2, r2
 8007190:	bb62      	cbnz	r2, 80071ec <UART_RxISR_16BIT+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007192:	e853 2f00 	ldrex	r2, [r3]
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8007196:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800719a:	e843 2100 	strex	r1, r2, [r3]
 800719e:	2900      	cmp	r1, #0
 80071a0:	d1f7      	bne.n	8007192 <UART_RxISR_16BIT+0x30>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80071a2:	f103 0208 	add.w	r2, r3, #8
 80071a6:	e852 1f00 	ldrex	r1, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80071aa:	f021 0101 	bic.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80071ae:	4694      	mov	ip, r2
 80071b0:	e84c 1200 	strex	r2, r1, [ip]
 80071b4:	2a00      	cmp	r2, #0
 80071b6:	d1f4      	bne.n	80071a2 <UART_RxISR_16BIT+0x40>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 80071b8:	2120      	movs	r1, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 80071ba:	6682      	str	r2, [r0, #104]	@ 0x68
      huart->RxState = HAL_UART_STATE_READY;
 80071bc:	f8c0 1080 	str.w	r1, [r0, #128]	@ 0x80

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 80071c0:	6642      	str	r2, [r0, #100]	@ 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80071c2:	6e01      	ldr	r1, [r0, #96]	@ 0x60
 80071c4:	2901      	cmp	r1, #1
 80071c6:	d112      	bne.n	80071ee <UART_RxISR_16BIT+0x8c>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80071c8:	6602      	str	r2, [r0, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80071ca:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80071ce:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80071d2:	e843 2100 	strex	r1, r2, [r3]
 80071d6:	2900      	cmp	r1, #0
 80071d8:	d1f7      	bne.n	80071ca <UART_RxISR_16BIT+0x68>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 80071da:	69da      	ldr	r2, [r3, #28]
 80071dc:	06d2      	lsls	r2, r2, #27
 80071de:	d501      	bpl.n	80071e4 <UART_RxISR_16BIT+0x82>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 80071e0:	2210      	movs	r2, #16
 80071e2:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 80071e4:	f8b0 1058 	ldrh.w	r1, [r0, #88]	@ 0x58
 80071e8:	f7ff fe24 	bl	8006e34 <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 80071ec:	bd08      	pop	{r3, pc}
        HAL_UART_RxCpltCallback(huart);
 80071ee:	f7f9 fd01 	bl	8000bf4 <HAL_UART_RxCpltCallback>
 80071f2:	e7fb      	b.n	80071ec <UART_RxISR_16BIT+0x8a>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 80071f4:	699a      	ldr	r2, [r3, #24]
 80071f6:	f042 0208 	orr.w	r2, r2, #8
 80071fa:	619a      	str	r2, [r3, #24]
}
 80071fc:	e7f6      	b.n	80071ec <UART_RxISR_16BIT+0x8a>
	...

08007200 <UART_SetConfig>:
{
 8007200:	b538      	push	{r3, r4, r5, lr}
 8007202:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8007204:	69c0      	ldr	r0, [r0, #28]
 8007206:	6921      	ldr	r1, [r4, #16]
 8007208:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800720a:	6823      	ldr	r3, [r4, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800720c:	430a      	orrs	r2, r1
 800720e:	6961      	ldr	r1, [r4, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8007210:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8007212:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8007214:	497d      	ldr	r1, [pc, #500]	@ (800740c <UART_SetConfig+0x20c>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8007216:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8007218:	4029      	ands	r1, r5
  tmpreg |= huart->Init.OneBitSampling;
 800721a:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800721c:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800721e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8007220:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8007222:	685a      	ldr	r2, [r3, #4]
 8007224:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8007228:	430a      	orrs	r2, r1
 800722a:	605a      	str	r2, [r3, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 800722c:	69a2      	ldr	r2, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800722e:	6899      	ldr	r1, [r3, #8]
  tmpreg |= huart->Init.OneBitSampling;
 8007230:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8007232:	f421 6130 	bic.w	r1, r1, #2816	@ 0xb00
 8007236:	430a      	orrs	r2, r1
 8007238:	609a      	str	r2, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 800723a:	4a75      	ldr	r2, [pc, #468]	@ (8007410 <UART_SetConfig+0x210>)
 800723c:	4293      	cmp	r3, r2
 800723e:	d113      	bne.n	8007268 <UART_SetConfig+0x68>
 8007240:	4b74      	ldr	r3, [pc, #464]	@ (8007414 <UART_SetConfig+0x214>)
 8007242:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007246:	f003 0303 	and.w	r3, r3, #3
 800724a:	2b02      	cmp	r3, #2
 800724c:	f000 80a8 	beq.w	80073a0 <UART_SetConfig+0x1a0>
 8007250:	2b03      	cmp	r3, #3
 8007252:	d021      	beq.n	8007298 <UART_SetConfig+0x98>
 8007254:	2b01      	cmp	r3, #1
 8007256:	f040 80bd 	bne.w	80073d4 <UART_SetConfig+0x1d4>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800725a:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800725e:	f040 809c 	bne.w	800739a <UART_SetConfig+0x19a>
        pclk = HAL_RCC_GetSysClockFreq();
 8007262:	f7ff f83d 	bl	80062e0 <HAL_RCC_GetSysClockFreq>
        break;
 8007266:	e092      	b.n	800738e <UART_SetConfig+0x18e>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8007268:	4a6b      	ldr	r2, [pc, #428]	@ (8007418 <UART_SetConfig+0x218>)
 800726a:	4293      	cmp	r3, r2
 800726c:	d11b      	bne.n	80072a6 <UART_SetConfig+0xa6>
 800726e:	4b69      	ldr	r3, [pc, #420]	@ (8007414 <UART_SetConfig+0x214>)
 8007270:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007274:	f003 030c 	and.w	r3, r3, #12
 8007278:	2b08      	cmp	r3, #8
 800727a:	f000 8091 	beq.w	80073a0 <UART_SetConfig+0x1a0>
 800727e:	d809      	bhi.n	8007294 <UART_SetConfig+0x94>
 8007280:	2b00      	cmp	r3, #0
 8007282:	f000 80ad 	beq.w	80073e0 <UART_SetConfig+0x1e0>
 8007286:	2b04      	cmp	r3, #4
 8007288:	d0e7      	beq.n	800725a <UART_SetConfig+0x5a>
        ret = HAL_ERROR;
 800728a:	2001      	movs	r0, #1
  huart->RxISR = NULL;
 800728c:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 800728e:	e9c4 331a 	strd	r3, r3, [r4, #104]	@ 0x68
}
 8007292:	bd38      	pop	{r3, r4, r5, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 8007294:	2b0c      	cmp	r3, #12
 8007296:	d1f8      	bne.n	800728a <UART_SetConfig+0x8a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007298:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800729c:	f000 8084 	beq.w	80073a8 <UART_SetConfig+0x1a8>
        pclk = (uint32_t) LSE_VALUE;
 80072a0:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 80072a4:	e0a3      	b.n	80073ee <UART_SetConfig+0x1ee>
  UART_GETCLOCKSOURCE(huart, clocksource);
 80072a6:	4a5d      	ldr	r2, [pc, #372]	@ (800741c <UART_SetConfig+0x21c>)
 80072a8:	4293      	cmp	r3, r2
 80072aa:	d10e      	bne.n	80072ca <UART_SetConfig+0xca>
 80072ac:	4b59      	ldr	r3, [pc, #356]	@ (8007414 <UART_SetConfig+0x214>)
 80072ae:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80072b2:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 80072b6:	2b20      	cmp	r3, #32
 80072b8:	d072      	beq.n	80073a0 <UART_SetConfig+0x1a0>
 80072ba:	d804      	bhi.n	80072c6 <UART_SetConfig+0xc6>
 80072bc:	2b00      	cmp	r3, #0
 80072be:	f000 808f 	beq.w	80073e0 <UART_SetConfig+0x1e0>
 80072c2:	2b10      	cmp	r3, #16
 80072c4:	e7e0      	b.n	8007288 <UART_SetConfig+0x88>
 80072c6:	2b30      	cmp	r3, #48	@ 0x30
 80072c8:	e7e5      	b.n	8007296 <UART_SetConfig+0x96>
 80072ca:	4a55      	ldr	r2, [pc, #340]	@ (8007420 <UART_SetConfig+0x220>)
 80072cc:	4293      	cmp	r3, r2
 80072ce:	d10d      	bne.n	80072ec <UART_SetConfig+0xec>
 80072d0:	4b50      	ldr	r3, [pc, #320]	@ (8007414 <UART_SetConfig+0x214>)
 80072d2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80072d6:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 80072da:	2b80      	cmp	r3, #128	@ 0x80
 80072dc:	d060      	beq.n	80073a0 <UART_SetConfig+0x1a0>
 80072de:	d803      	bhi.n	80072e8 <UART_SetConfig+0xe8>
 80072e0:	2b00      	cmp	r3, #0
 80072e2:	d07d      	beq.n	80073e0 <UART_SetConfig+0x1e0>
 80072e4:	2b40      	cmp	r3, #64	@ 0x40
 80072e6:	e7cf      	b.n	8007288 <UART_SetConfig+0x88>
 80072e8:	2bc0      	cmp	r3, #192	@ 0xc0
 80072ea:	e7d4      	b.n	8007296 <UART_SetConfig+0x96>
 80072ec:	4a4d      	ldr	r2, [pc, #308]	@ (8007424 <UART_SetConfig+0x224>)
 80072ee:	4293      	cmp	r3, r2
 80072f0:	d110      	bne.n	8007314 <UART_SetConfig+0x114>
 80072f2:	4b48      	ldr	r3, [pc, #288]	@ (8007414 <UART_SetConfig+0x214>)
 80072f4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80072f8:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80072fc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8007300:	d04e      	beq.n	80073a0 <UART_SetConfig+0x1a0>
 8007302:	d804      	bhi.n	800730e <UART_SetConfig+0x10e>
 8007304:	2b00      	cmp	r3, #0
 8007306:	d06b      	beq.n	80073e0 <UART_SetConfig+0x1e0>
 8007308:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800730c:	e7bc      	b.n	8007288 <UART_SetConfig+0x88>
 800730e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8007312:	e7c0      	b.n	8007296 <UART_SetConfig+0x96>
 8007314:	4a44      	ldr	r2, [pc, #272]	@ (8007428 <UART_SetConfig+0x228>)
 8007316:	4293      	cmp	r3, r2
 8007318:	d110      	bne.n	800733c <UART_SetConfig+0x13c>
 800731a:	4b3e      	ldr	r3, [pc, #248]	@ (8007414 <UART_SetConfig+0x214>)
 800731c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007320:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8007324:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8007328:	d03a      	beq.n	80073a0 <UART_SetConfig+0x1a0>
 800732a:	d804      	bhi.n	8007336 <UART_SetConfig+0x136>
 800732c:	2b00      	cmp	r3, #0
 800732e:	d051      	beq.n	80073d4 <UART_SetConfig+0x1d4>
 8007330:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007334:	e7a8      	b.n	8007288 <UART_SetConfig+0x88>
 8007336:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800733a:	e7ac      	b.n	8007296 <UART_SetConfig+0x96>
 800733c:	4a3b      	ldr	r2, [pc, #236]	@ (800742c <UART_SetConfig+0x22c>)
 800733e:	4293      	cmp	r3, r2
 8007340:	d110      	bne.n	8007364 <UART_SetConfig+0x164>
 8007342:	4b34      	ldr	r3, [pc, #208]	@ (8007414 <UART_SetConfig+0x214>)
 8007344:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007348:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 800734c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007350:	d026      	beq.n	80073a0 <UART_SetConfig+0x1a0>
 8007352:	d804      	bhi.n	800735e <UART_SetConfig+0x15e>
 8007354:	2b00      	cmp	r3, #0
 8007356:	d043      	beq.n	80073e0 <UART_SetConfig+0x1e0>
 8007358:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800735c:	e794      	b.n	8007288 <UART_SetConfig+0x88>
 800735e:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8007362:	e798      	b.n	8007296 <UART_SetConfig+0x96>
 8007364:	4a32      	ldr	r2, [pc, #200]	@ (8007430 <UART_SetConfig+0x230>)
 8007366:	4293      	cmp	r3, r2
 8007368:	d18f      	bne.n	800728a <UART_SetConfig+0x8a>
 800736a:	4b2a      	ldr	r3, [pc, #168]	@ (8007414 <UART_SetConfig+0x214>)
 800736c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007370:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8007374:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007378:	d012      	beq.n	80073a0 <UART_SetConfig+0x1a0>
 800737a:	d803      	bhi.n	8007384 <UART_SetConfig+0x184>
 800737c:	b383      	cbz	r3, 80073e0 <UART_SetConfig+0x1e0>
 800737e:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8007382:	e781      	b.n	8007288 <UART_SetConfig+0x88>
 8007384:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 8007388:	e785      	b.n	8007296 <UART_SetConfig+0x96>
        pclk = HAL_RCC_GetPCLK1Freq();
 800738a:	f7ff f875 	bl	8006478 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 800738e:	b958      	cbnz	r0, 80073a8 <UART_SetConfig+0x1a8>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007390:	2000      	movs	r0, #0
 8007392:	e77b      	b.n	800728c <UART_SetConfig+0x8c>
        pclk = HAL_RCC_GetPCLK2Freq();
 8007394:	f7ff f880 	bl	8006498 <HAL_RCC_GetPCLK2Freq>
        break;
 8007398:	e027      	b.n	80073ea <UART_SetConfig+0x1ea>
        pclk = HAL_RCC_GetSysClockFreq();
 800739a:	f7fe ffa1 	bl	80062e0 <HAL_RCC_GetSysClockFreq>
        break;
 800739e:	e024      	b.n	80073ea <UART_SetConfig+0x1ea>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80073a0:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) HSI_VALUE;
 80073a4:	4823      	ldr	r0, [pc, #140]	@ (8007434 <UART_SetConfig+0x234>)
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80073a6:	d122      	bne.n	80073ee <UART_SetConfig+0x1ee>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 80073a8:	6862      	ldr	r2, [r4, #4]
 80073aa:	0853      	lsrs	r3, r2, #1
 80073ac:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80073b0:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80073b4:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 80073b8:	f1a3 0110 	sub.w	r1, r3, #16
 80073bc:	4291      	cmp	r1, r2
 80073be:	f63f af64 	bhi.w	800728a <UART_SetConfig+0x8a>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 80073c2:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 80073c6:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
 80073ca:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 80073cc:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
 80073ce:	4313      	orrs	r3, r2
 80073d0:	60cb      	str	r3, [r1, #12]
 80073d2:	e7dd      	b.n	8007390 <UART_SetConfig+0x190>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80073d4:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 80073d8:	d1dc      	bne.n	8007394 <UART_SetConfig+0x194>
        pclk = HAL_RCC_GetPCLK2Freq();
 80073da:	f7ff f85d 	bl	8006498 <HAL_RCC_GetPCLK2Freq>
        break;
 80073de:	e7d6      	b.n	800738e <UART_SetConfig+0x18e>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80073e0:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 80073e4:	d0d1      	beq.n	800738a <UART_SetConfig+0x18a>
        pclk = HAL_RCC_GetPCLK1Freq();
 80073e6:	f7ff f847 	bl	8006478 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 80073ea:	2800      	cmp	r0, #0
 80073ec:	d0d0      	beq.n	8007390 <UART_SetConfig+0x190>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 80073ee:	6862      	ldr	r2, [r4, #4]
 80073f0:	eb00 0352 	add.w	r3, r0, r2, lsr #1
 80073f4:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80073f8:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 80073fc:	f1a3 0110 	sub.w	r1, r3, #16
 8007400:	4291      	cmp	r1, r2
 8007402:	f63f af42 	bhi.w	800728a <UART_SetConfig+0x8a>
        huart->Instance->BRR = (uint16_t)usartdiv;
 8007406:	6822      	ldr	r2, [r4, #0]
 8007408:	60d3      	str	r3, [r2, #12]
 800740a:	e7c1      	b.n	8007390 <UART_SetConfig+0x190>
 800740c:	efff69f3 	.word	0xefff69f3
 8007410:	40011000 	.word	0x40011000
 8007414:	40023800 	.word	0x40023800
 8007418:	40004400 	.word	0x40004400
 800741c:	40004800 	.word	0x40004800
 8007420:	40004c00 	.word	0x40004c00
 8007424:	40005000 	.word	0x40005000
 8007428:	40011400 	.word	0x40011400
 800742c:	40007800 	.word	0x40007800
 8007430:	40007c00 	.word	0x40007c00
 8007434:	00f42400 	.word	0x00f42400

08007438 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8007438:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800743a:	07da      	lsls	r2, r3, #31
{
 800743c:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800743e:	d506      	bpl.n	800744e <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8007440:	6801      	ldr	r1, [r0, #0]
 8007442:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8007444:	684a      	ldr	r2, [r1, #4]
 8007446:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
 800744a:	4322      	orrs	r2, r4
 800744c:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800744e:	079c      	lsls	r4, r3, #30
 8007450:	d506      	bpl.n	8007460 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8007452:	6801      	ldr	r1, [r0, #0]
 8007454:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 8007456:	684a      	ldr	r2, [r1, #4]
 8007458:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800745c:	4322      	orrs	r2, r4
 800745e:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8007460:	0759      	lsls	r1, r3, #29
 8007462:	d506      	bpl.n	8007472 <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8007464:	6801      	ldr	r1, [r0, #0]
 8007466:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 8007468:	684a      	ldr	r2, [r1, #4]
 800746a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800746e:	4322      	orrs	r2, r4
 8007470:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8007472:	071a      	lsls	r2, r3, #28
 8007474:	d506      	bpl.n	8007484 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8007476:	6801      	ldr	r1, [r0, #0]
 8007478:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 800747a:	684a      	ldr	r2, [r1, #4]
 800747c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8007480:	4322      	orrs	r2, r4
 8007482:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8007484:	06dc      	lsls	r4, r3, #27
 8007486:	d506      	bpl.n	8007496 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8007488:	6801      	ldr	r1, [r0, #0]
 800748a:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 800748c:	688a      	ldr	r2, [r1, #8]
 800748e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8007492:	4322      	orrs	r2, r4
 8007494:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8007496:	0699      	lsls	r1, r3, #26
 8007498:	d506      	bpl.n	80074a8 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 800749a:	6801      	ldr	r1, [r0, #0]
 800749c:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 800749e:	688a      	ldr	r2, [r1, #8]
 80074a0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80074a4:	4322      	orrs	r2, r4
 80074a6:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 80074a8:	065a      	lsls	r2, r3, #25
 80074aa:	d510      	bpl.n	80074ce <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 80074ac:	6801      	ldr	r1, [r0, #0]
 80074ae:	6c04      	ldr	r4, [r0, #64]	@ 0x40
 80074b0:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 80074b2:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 80074b6:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 80074ba:	ea42 0204 	orr.w	r2, r2, r4
 80074be:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 80074c0:	d105      	bne.n	80074ce <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 80074c2:	684a      	ldr	r2, [r1, #4]
 80074c4:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 80074c6:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
 80074ca:	4322      	orrs	r2, r4
 80074cc:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 80074ce:	061b      	lsls	r3, r3, #24
 80074d0:	d506      	bpl.n	80074e0 <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 80074d2:	6802      	ldr	r2, [r0, #0]
 80074d4:	6c81      	ldr	r1, [r0, #72]	@ 0x48
 80074d6:	6853      	ldr	r3, [r2, #4]
 80074d8:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 80074dc:	430b      	orrs	r3, r1
 80074de:	6053      	str	r3, [r2, #4]
}
 80074e0:	bd10      	pop	{r4, pc}

080074e2 <UART_WaitOnFlagUntilTimeout>:
{
 80074e2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80074e6:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80074ea:	4605      	mov	r5, r0
 80074ec:	460f      	mov	r7, r1
 80074ee:	4616      	mov	r6, r2
 80074f0:	4698      	mov	r8, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80074f2:	682a      	ldr	r2, [r5, #0]
 80074f4:	69d3      	ldr	r3, [r2, #28]
 80074f6:	ea37 0303 	bics.w	r3, r7, r3
 80074fa:	bf0c      	ite	eq
 80074fc:	2301      	moveq	r3, #1
 80074fe:	2300      	movne	r3, #0
 8007500:	42b3      	cmp	r3, r6
 8007502:	d001      	beq.n	8007508 <UART_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
 8007504:	2000      	movs	r0, #0
 8007506:	e028      	b.n	800755a <UART_WaitOnFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
 8007508:	f1b9 3fff 	cmp.w	r9, #4294967295
 800750c:	d0f2      	beq.n	80074f4 <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800750e:	f7fd f8a3 	bl	8004658 <HAL_GetTick>
 8007512:	eba0 0008 	sub.w	r0, r0, r8
 8007516:	682c      	ldr	r4, [r5, #0]
 8007518:	4548      	cmp	r0, r9
 800751a:	d802      	bhi.n	8007522 <UART_WaitOnFlagUntilTimeout+0x40>
 800751c:	f1b9 0f00 	cmp.w	r9, #0
 8007520:	d11d      	bne.n	800755e <UART_WaitOnFlagUntilTimeout+0x7c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007522:	e854 3f00 	ldrex	r3, [r4]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8007526:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800752a:	e844 3200 	strex	r2, r3, [r4]
 800752e:	2a00      	cmp	r2, #0
 8007530:	d1f7      	bne.n	8007522 <UART_WaitOnFlagUntilTimeout+0x40>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007532:	f104 0308 	add.w	r3, r4, #8
 8007536:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800753a:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800753e:	f104 0108 	add.w	r1, r4, #8
 8007542:	e841 3200 	strex	r2, r3, [r1]
 8007546:	2a00      	cmp	r2, #0
 8007548:	d1f3      	bne.n	8007532 <UART_WaitOnFlagUntilTimeout+0x50>
        huart->gState = HAL_UART_STATE_READY;
 800754a:	2320      	movs	r3, #32
 800754c:	67eb      	str	r3, [r5, #124]	@ 0x7c
        huart->RxState = HAL_UART_STATE_READY;
 800754e:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
          __HAL_UNLOCK(huart);
 8007552:	2300      	movs	r3, #0
        return HAL_TIMEOUT;
 8007554:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 8007556:	f885 3078 	strb.w	r3, [r5, #120]	@ 0x78
}
 800755a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 800755e:	6823      	ldr	r3, [r4, #0]
 8007560:	075a      	lsls	r2, r3, #29
 8007562:	d5c6      	bpl.n	80074f2 <UART_WaitOnFlagUntilTimeout+0x10>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8007564:	69e3      	ldr	r3, [r4, #28]
 8007566:	051b      	lsls	r3, r3, #20
 8007568:	d5c3      	bpl.n	80074f2 <UART_WaitOnFlagUntilTimeout+0x10>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800756a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800756e:	6223      	str	r3, [r4, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007570:	e854 3f00 	ldrex	r3, [r4]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8007574:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007578:	e844 3200 	strex	r2, r3, [r4]
 800757c:	2a00      	cmp	r2, #0
 800757e:	d1f7      	bne.n	8007570 <UART_WaitOnFlagUntilTimeout+0x8e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007580:	f104 0308 	add.w	r3, r4, #8
 8007584:	e853 3f00 	ldrex	r3, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007588:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800758c:	f104 0108 	add.w	r1, r4, #8
 8007590:	e841 3200 	strex	r2, r3, [r1]
 8007594:	2a00      	cmp	r2, #0
 8007596:	d1f3      	bne.n	8007580 <UART_WaitOnFlagUntilTimeout+0x9e>
          huart->gState = HAL_UART_STATE_READY;
 8007598:	2320      	movs	r3, #32
 800759a:	67eb      	str	r3, [r5, #124]	@ 0x7c
          huart->RxState = HAL_UART_STATE_READY;
 800759c:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 80075a0:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
          return HAL_TIMEOUT;
 80075a4:	e7d5      	b.n	8007552 <UART_WaitOnFlagUntilTimeout+0x70>

080075a6 <HAL_UART_Transmit>:
{
 80075a6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80075aa:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 80075ac:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
{
 80075ae:	4604      	mov	r4, r0
 80075b0:	460e      	mov	r6, r1
  if (huart->gState == HAL_UART_STATE_READY)
 80075b2:	2b20      	cmp	r3, #32
{
 80075b4:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 80075b6:	d141      	bne.n	800763c <HAL_UART_Transmit+0x96>
    if ((pData == NULL) || (Size == 0U))
 80075b8:	2900      	cmp	r1, #0
 80075ba:	d041      	beq.n	8007640 <HAL_UART_Transmit+0x9a>
 80075bc:	2a00      	cmp	r2, #0
 80075be:	d03f      	beq.n	8007640 <HAL_UART_Transmit+0x9a>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80075c0:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80075c2:	2500      	movs	r5, #0
 80075c4:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80075c8:	67c3      	str	r3, [r0, #124]	@ 0x7c
    tickstart = HAL_GetTick();
 80075ca:	f7fd f845 	bl	8004658 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80075ce:	68a3      	ldr	r3, [r4, #8]
    tickstart = HAL_GetTick();
 80075d0:	4681      	mov	r9, r0
    huart->TxXferSize  = Size;
 80075d2:	f8a4 7050 	strh.w	r7, [r4, #80]	@ 0x50
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80075d6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->TxXferCount = Size;
 80075da:	f8a4 7052 	strh.w	r7, [r4, #82]	@ 0x52
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80075de:	d103      	bne.n	80075e8 <HAL_UART_Transmit+0x42>
 80075e0:	6923      	ldr	r3, [r4, #16]
 80075e2:	b90b      	cbnz	r3, 80075e8 <HAL_UART_Transmit+0x42>
 80075e4:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 80075e6:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 80075e8:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80075ec:	464b      	mov	r3, r9
 80075ee:	f8cd 8000 	str.w	r8, [sp]
    while (huart->TxXferCount > 0U)
 80075f2:	b292      	uxth	r2, r2
 80075f4:	b93a      	cbnz	r2, 8007606 <HAL_UART_Transmit+0x60>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80075f6:	2140      	movs	r1, #64	@ 0x40
 80075f8:	4620      	mov	r0, r4
 80075fa:	f7ff ff72 	bl	80074e2 <UART_WaitOnFlagUntilTimeout>
 80075fe:	b940      	cbnz	r0, 8007612 <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 8007600:	2320      	movs	r3, #32
 8007602:	67e3      	str	r3, [r4, #124]	@ 0x7c
    return HAL_OK;
 8007604:	e006      	b.n	8007614 <HAL_UART_Transmit+0x6e>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8007606:	2200      	movs	r2, #0
 8007608:	2180      	movs	r1, #128	@ 0x80
 800760a:	4620      	mov	r0, r4
 800760c:	f7ff ff69 	bl	80074e2 <UART_WaitOnFlagUntilTimeout>
 8007610:	b118      	cbz	r0, 800761a <HAL_UART_Transmit+0x74>
        return HAL_TIMEOUT;
 8007612:	2003      	movs	r0, #3
}
 8007614:	b003      	add	sp, #12
 8007616:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 800761a:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 800761c:	b95e      	cbnz	r6, 8007636 <HAL_UART_Transmit+0x90>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 800761e:	f835 3b02 	ldrh.w	r3, [r5], #2
 8007622:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8007626:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
 8007628:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
 800762c:	3a01      	subs	r2, #1
 800762e:	b292      	uxth	r2, r2
 8007630:	f8a4 2052 	strh.w	r2, [r4, #82]	@ 0x52
 8007634:	e7d8      	b.n	80075e8 <HAL_UART_Transmit+0x42>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8007636:	f816 3b01 	ldrb.w	r3, [r6], #1
 800763a:	e7f4      	b.n	8007626 <HAL_UART_Transmit+0x80>
    return HAL_BUSY;
 800763c:	2002      	movs	r0, #2
 800763e:	e7e9      	b.n	8007614 <HAL_UART_Transmit+0x6e>
      return  HAL_ERROR;
 8007640:	2001      	movs	r0, #1
 8007642:	e7e7      	b.n	8007614 <HAL_UART_Transmit+0x6e>

08007644 <UART_CheckIdleState>:
{
 8007644:	b537      	push	{r0, r1, r2, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007646:	2500      	movs	r5, #0
{
 8007648:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800764a:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
  tickstart = HAL_GetTick();
 800764e:	f7fd f803 	bl	8004658 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8007652:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
 8007654:	4603      	mov	r3, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8007656:	6812      	ldr	r2, [r2, #0]
 8007658:	0712      	lsls	r2, r2, #28
 800765a:	d40a      	bmi.n	8007672 <UART_CheckIdleState+0x2e>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800765c:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800765e:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 8007660:	f884 0078 	strb.w	r0, [r4, #120]	@ 0x78
  huart->gState = HAL_UART_STATE_READY;
 8007664:	67e3      	str	r3, [r4, #124]	@ 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 8007666:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800766a:	6620      	str	r0, [r4, #96]	@ 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 800766c:	6660      	str	r0, [r4, #100]	@ 0x64
}
 800766e:	b003      	add	sp, #12
 8007670:	bd30      	pop	{r4, r5, pc}
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8007672:	f06f 427e 	mvn.w	r2, #4261412864	@ 0xfe000000
 8007676:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 800767a:	4620      	mov	r0, r4
 800767c:	9200      	str	r2, [sp, #0]
 800767e:	462a      	mov	r2, r5
 8007680:	f7ff ff2f 	bl	80074e2 <UART_WaitOnFlagUntilTimeout>
 8007684:	2800      	cmp	r0, #0
 8007686:	d0e9      	beq.n	800765c <UART_CheckIdleState+0x18>
      return HAL_TIMEOUT;
 8007688:	2003      	movs	r0, #3
 800768a:	e7f0      	b.n	800766e <UART_CheckIdleState+0x2a>

0800768c <HAL_UART_Init>:
{
 800768c:	b510      	push	{r4, lr}
  if (huart == NULL)
 800768e:	4604      	mov	r4, r0
 8007690:	b340      	cbz	r0, 80076e4 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8007692:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
 8007694:	b91b      	cbnz	r3, 800769e <HAL_UART_Init+0x12>
    huart->Lock = HAL_UNLOCKED;
 8007696:	f880 3078 	strb.w	r3, [r0, #120]	@ 0x78
    HAL_UART_MspInit(huart);
 800769a:	f7f9 fcd7 	bl	800104c <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 800769e:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 80076a0:	2324      	movs	r3, #36	@ 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
 80076a2:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
 80076a4:	67e3      	str	r3, [r4, #124]	@ 0x7c
  __HAL_UART_DISABLE(huart);
 80076a6:	6813      	ldr	r3, [r2, #0]
 80076a8:	f023 0301 	bic.w	r3, r3, #1
 80076ac:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 80076ae:	f7ff fda7 	bl	8007200 <UART_SetConfig>
 80076b2:	2801      	cmp	r0, #1
 80076b4:	d016      	beq.n	80076e4 <HAL_UART_Init+0x58>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 80076b6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80076b8:	b113      	cbz	r3, 80076c0 <HAL_UART_Init+0x34>
    UART_AdvFeatureConfig(huart);
 80076ba:	4620      	mov	r0, r4
 80076bc:	f7ff febc 	bl	8007438 <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80076c0:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
 80076c2:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80076c4:	685a      	ldr	r2, [r3, #4]
 80076c6:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 80076ca:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80076cc:	689a      	ldr	r2, [r3, #8]
 80076ce:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 80076d2:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 80076d4:	681a      	ldr	r2, [r3, #0]
 80076d6:	f042 0201 	orr.w	r2, r2, #1
}
 80076da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
 80076de:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 80076e0:	f7ff bfb0 	b.w	8007644 <UART_CheckIdleState>
}
 80076e4:	2001      	movs	r0, #1
 80076e6:	bd10      	pop	{r4, pc}

080076e8 <UART_Start_Receive_IT>:
{
 80076e8:	b510      	push	{r4, lr}
  huart->RxXferSize  = Size;
 80076ea:	f8a0 2058 	strh.w	r2, [r0, #88]	@ 0x58
  huart->RxISR       = NULL;
 80076ee:	2300      	movs	r3, #0
  huart->RxXferCount = Size;
 80076f0:	f8a0 205a 	strh.w	r2, [r0, #90]	@ 0x5a
  UART_MASK_COMPUTATION(huart);
 80076f4:	6882      	ldr	r2, [r0, #8]
  huart->pRxBuffPtr  = pData;
 80076f6:	6541      	str	r1, [r0, #84]	@ 0x54
  UART_MASK_COMPUTATION(huart);
 80076f8:	f5b2 5f80 	cmp.w	r2, #4096	@ 0x1000
  huart->RxISR       = NULL;
 80076fc:	6683      	str	r3, [r0, #104]	@ 0x68
  UART_MASK_COMPUTATION(huart);
 80076fe:	d130      	bne.n	8007762 <UART_Start_Receive_IT+0x7a>
 8007700:	6903      	ldr	r3, [r0, #16]
 8007702:	2b00      	cmp	r3, #0
 8007704:	f240 13ff 	movw	r3, #511	@ 0x1ff
 8007708:	bf18      	it	ne
 800770a:	23ff      	movne	r3, #255	@ 0xff
 800770c:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007710:	2300      	movs	r3, #0
 8007712:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 8007716:	2322      	movs	r3, #34	@ 0x22
 8007718:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800771c:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800771e:	f102 0308 	add.w	r3, r2, #8
 8007722:	e853 3f00 	ldrex	r3, [r3]
 8007726:	f043 0301 	orr.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800772a:	3208      	adds	r2, #8
 800772c:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8007730:	6802      	ldr	r2, [r0, #0]
 8007732:	2900      	cmp	r1, #0
 8007734:	d1f2      	bne.n	800771c <UART_Start_Receive_IT+0x34>
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007736:	6883      	ldr	r3, [r0, #8]
 8007738:	6901      	ldr	r1, [r0, #16]
 800773a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->RxISR = UART_RxISR_16BIT;
 800773e:	4b15      	ldr	r3, [pc, #84]	@ (8007794 <UART_Start_Receive_IT+0xac>)
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007740:	d103      	bne.n	800774a <UART_Start_Receive_IT+0x62>
    huart->RxISR = UART_RxISR_16BIT;
 8007742:	4c15      	ldr	r4, [pc, #84]	@ (8007798 <UART_Start_Receive_IT+0xb0>)
 8007744:	2900      	cmp	r1, #0
 8007746:	bf08      	it	eq
 8007748:	4623      	moveq	r3, r4
 800774a:	6683      	str	r3, [r0, #104]	@ 0x68
  if (huart->Init.Parity != UART_PARITY_NONE)
 800774c:	b1c9      	cbz	r1, 8007782 <UART_Start_Receive_IT+0x9a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800774e:	e852 3f00 	ldrex	r3, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 8007752:	f443 7390 	orr.w	r3, r3, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007756:	e842 3100 	strex	r1, r3, [r2]
 800775a:	2900      	cmp	r1, #0
 800775c:	d1f7      	bne.n	800774e <UART_Start_Receive_IT+0x66>
}
 800775e:	2000      	movs	r0, #0
 8007760:	bd10      	pop	{r4, pc}
  UART_MASK_COMPUTATION(huart);
 8007762:	b92a      	cbnz	r2, 8007770 <UART_Start_Receive_IT+0x88>
 8007764:	6903      	ldr	r3, [r0, #16]
 8007766:	2b00      	cmp	r3, #0
 8007768:	bf14      	ite	ne
 800776a:	237f      	movne	r3, #127	@ 0x7f
 800776c:	23ff      	moveq	r3, #255	@ 0xff
 800776e:	e7cd      	b.n	800770c <UART_Start_Receive_IT+0x24>
 8007770:	f1b2 5f80 	cmp.w	r2, #268435456	@ 0x10000000
 8007774:	d1ca      	bne.n	800770c <UART_Start_Receive_IT+0x24>
 8007776:	6903      	ldr	r3, [r0, #16]
 8007778:	2b00      	cmp	r3, #0
 800777a:	bf14      	ite	ne
 800777c:	233f      	movne	r3, #63	@ 0x3f
 800777e:	237f      	moveq	r3, #127	@ 0x7f
 8007780:	e7c4      	b.n	800770c <UART_Start_Receive_IT+0x24>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007782:	e852 3f00 	ldrex	r3, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE);
 8007786:	f043 0320 	orr.w	r3, r3, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800778a:	e842 3100 	strex	r1, r3, [r2]
 800778e:	2900      	cmp	r1, #0
 8007790:	d1f7      	bne.n	8007782 <UART_Start_Receive_IT+0x9a>
 8007792:	e7e4      	b.n	800775e <UART_Start_Receive_IT+0x76>
 8007794:	080070c1 	.word	0x080070c1
 8007798:	08007163 	.word	0x08007163

0800779c <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
 800779c:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
 80077a0:	2b20      	cmp	r3, #32
{
 80077a2:	b430      	push	{r4, r5}
  if (huart->RxState == HAL_UART_STATE_READY)
 80077a4:	d112      	bne.n	80077cc <HAL_UART_Receive_IT+0x30>
    if ((pData == NULL) || (Size == 0U))
 80077a6:	b1a1      	cbz	r1, 80077d2 <HAL_UART_Receive_IT+0x36>
 80077a8:	b19a      	cbz	r2, 80077d2 <HAL_UART_Receive_IT+0x36>
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80077aa:	2300      	movs	r3, #0
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 80077ac:	6804      	ldr	r4, [r0, #0]
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80077ae:	6603      	str	r3, [r0, #96]	@ 0x60
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 80077b0:	6863      	ldr	r3, [r4, #4]
 80077b2:	021b      	lsls	r3, r3, #8
 80077b4:	d507      	bpl.n	80077c6 <HAL_UART_Receive_IT+0x2a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80077b6:	e854 3f00 	ldrex	r3, [r4]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 80077ba:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80077be:	e844 3500 	strex	r5, r3, [r4]
 80077c2:	2d00      	cmp	r5, #0
 80077c4:	d1f7      	bne.n	80077b6 <HAL_UART_Receive_IT+0x1a>
}
 80077c6:	bc30      	pop	{r4, r5}
    return (UART_Start_Receive_IT(huart, pData, Size));
 80077c8:	f7ff bf8e 	b.w	80076e8 <UART_Start_Receive_IT>
    return HAL_BUSY;
 80077cc:	2002      	movs	r0, #2
}
 80077ce:	bc30      	pop	{r4, r5}
 80077d0:	4770      	bx	lr
      return HAL_ERROR;
 80077d2:	2001      	movs	r0, #1
 80077d4:	e7fb      	b.n	80077ce <HAL_UART_Receive_IT+0x32>

080077d6 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80077d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80077da:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 80077de:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 80077e2:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
 80077e6:	ea43 0308 	orr.w	r3, r3, r8
 80077ea:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 80077ee:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80077f2:	6809      	ldr	r1, [r1, #0]
 80077f4:	b991      	cbnz	r1, 800781c <FMC_SDRAM_Init+0x46>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80077f6:	ea43 030e 	orr.w	r3, r3, lr
 80077fa:	6801      	ldr	r1, [r0, #0]
 80077fc:	4313      	orrs	r3, r2
 80077fe:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8007802:	ea43 030c 	orr.w	r3, r3, ip
 8007806:	f021 017f 	bic.w	r1, r1, #127	@ 0x7f
 800780a:	433b      	orrs	r3, r7
 800780c:	4333      	orrs	r3, r6
 800780e:	432b      	orrs	r3, r5
 8007810:	4323      	orrs	r3, r4
 8007812:	430b      	orrs	r3, r1
 8007814:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8007816:	2000      	movs	r0, #0
 8007818:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800781c:	6801      	ldr	r1, [r0, #0]
 800781e:	ea43 030e 	orr.w	r3, r3, lr
 8007822:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8007826:	430b      	orrs	r3, r1
 8007828:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800782a:	ea42 030c 	orr.w	r3, r2, ip
 800782e:	6841      	ldr	r1, [r0, #4]
 8007830:	433b      	orrs	r3, r7
 8007832:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8007836:	4333      	orrs	r3, r6
 8007838:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 800783c:	432b      	orrs	r3, r5
 800783e:	4323      	orrs	r3, r4
 8007840:	4313      	orrs	r3, r2
 8007842:	6043      	str	r3, [r0, #4]
 8007844:	e7e7      	b.n	8007816 <FMC_SDRAM_Init+0x40>

08007846 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007846:	68cb      	ldr	r3, [r1, #12]
 8007848:	f103 3cff 	add.w	ip, r3, #4294967295
 800784c:	694b      	ldr	r3, [r1, #20]
{
 800784e:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007850:	3b01      	subs	r3, #1
 8007852:	680f      	ldr	r7, [r1, #0]
 8007854:	684c      	ldr	r4, [r1, #4]
 8007856:	688e      	ldr	r6, [r1, #8]
 8007858:	051b      	lsls	r3, r3, #20
 800785a:	690d      	ldr	r5, [r1, #16]
 800785c:	3c01      	subs	r4, #1
 800785e:	6989      	ldr	r1, [r1, #24]
 8007860:	3e01      	subs	r6, #1
 8007862:	3d01      	subs	r5, #1
 8007864:	3f01      	subs	r7, #1
 8007866:	3901      	subs	r1, #1
 8007868:	0124      	lsls	r4, r4, #4
 800786a:	0236      	lsls	r6, r6, #8
 800786c:	042d      	lsls	r5, r5, #16
 800786e:	0609      	lsls	r1, r1, #24
 8007870:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8007874:	b95a      	cbnz	r2, 800788e <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007876:	433b      	orrs	r3, r7
 8007878:	6882      	ldr	r2, [r0, #8]
 800787a:	4323      	orrs	r3, r4
 800787c:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007880:	4333      	orrs	r3, r6
 8007882:	432b      	orrs	r3, r5
 8007884:	430b      	orrs	r3, r1
 8007886:	4313      	orrs	r3, r2
 8007888:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800788a:	2000      	movs	r0, #0
 800788c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800788e:	6882      	ldr	r2, [r0, #8]
 8007890:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8007894:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8007898:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800789a:	ea44 0306 	orr.w	r3, r4, r6
 800789e:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80078a0:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 80078a2:	68c2      	ldr	r2, [r0, #12]
 80078a4:	432b      	orrs	r3, r5
 80078a6:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 80078aa:	430b      	orrs	r3, r1
 80078ac:	4313      	orrs	r3, r2
 80078ae:	60c3      	str	r3, [r0, #12]
 80078b0:	e7eb      	b.n	800788a <FMC_SDRAM_Timing_Init+0x44>

080078b2 <FMC_SDRAM_SendCommand>:
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80078b2:	6902      	ldr	r2, [r0, #16]
{
 80078b4:	b510      	push	{r4, lr}
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80078b6:	e9d1 3400 	ldrd	r3, r4, [r1]
 80078ba:	0d92      	lsrs	r2, r2, #22
 80078bc:	4323      	orrs	r3, r4
 80078be:	68cc      	ldr	r4, [r1, #12]
 80078c0:	0592      	lsls	r2, r2, #22
 80078c2:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
 80078c6:	4313      	orrs	r3, r2
 80078c8:	688a      	ldr	r2, [r1, #8]
 80078ca:	3a01      	subs	r2, #1
 80078cc:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80078d0:	6103      	str	r3, [r0, #16]
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
 80078d2:	2000      	movs	r0, #0
 80078d4:	bd10      	pop	{r4, pc}

080078d6 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 80078d6:	6943      	ldr	r3, [r0, #20]
 80078d8:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 80078dc:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
 80078e0:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 80078e4:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 80078e6:	2000      	movs	r0, #0
 80078e8:	4770      	bx	lr
	...

080078ec <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80078ec:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80078f0:	b113      	cbz	r3, 80078f8 <osKernelInitialize+0xc>
    stat = osErrorISR;
 80078f2:	f06f 0005 	mvn.w	r0, #5
 80078f6:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80078f8:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80078fc:	4b07      	ldr	r3, [pc, #28]	@ (800791c <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 80078fe:	b912      	cbnz	r2, 8007906 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007900:	f3ef 8211 	mrs	r2, BASEPRI
 8007904:	b112      	cbz	r2, 800790c <osKernelInitialize+0x20>
 8007906:	681a      	ldr	r2, [r3, #0]
 8007908:	2a02      	cmp	r2, #2
 800790a:	d0f2      	beq.n	80078f2 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 800790c:	6818      	ldr	r0, [r3, #0]
 800790e:	b910      	cbnz	r0, 8007916 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007910:	2201      	movs	r2, #1
 8007912:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007914:	4770      	bx	lr
    } else {
      stat = osError;
 8007916:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800791a:	4770      	bx	lr
 800791c:	200040f8 	.word	0x200040f8

08007920 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007920:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007922:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007926:	b113      	cbz	r3, 800792e <osKernelStart+0xe>
    stat = osErrorISR;
 8007928:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 800792c:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800792e:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007932:	4b0a      	ldr	r3, [pc, #40]	@ (800795c <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8007934:	b912      	cbnz	r2, 800793c <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007936:	f3ef 8211 	mrs	r2, BASEPRI
 800793a:	b112      	cbz	r2, 8007942 <osKernelStart+0x22>
 800793c:	681a      	ldr	r2, [r3, #0]
 800793e:	2a02      	cmp	r2, #2
 8007940:	d0f2      	beq.n	8007928 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8007942:	681a      	ldr	r2, [r3, #0]
 8007944:	2a01      	cmp	r2, #1
 8007946:	d105      	bne.n	8007954 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8007948:	2202      	movs	r2, #2
 800794a:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 800794c:	f001 fe62 	bl	8009614 <vTaskStartScheduler>
      stat = osOK;
 8007950:	2000      	movs	r0, #0
 8007952:	e7eb      	b.n	800792c <osKernelStart+0xc>
      stat = osError;
 8007954:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8007958:	e7e8      	b.n	800792c <osKernelStart+0xc>
 800795a:	bf00      	nop
 800795c:	200040f8 	.word	0x200040f8

08007960 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007960:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007962:	4614      	mov	r4, r2
 8007964:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007966:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007968:	460b      	mov	r3, r1
  hTask = NULL;
 800796a:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800796c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007970:	bb1a      	cbnz	r2, 80079ba <osThreadNew+0x5a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007972:	f3ef 8210 	mrs	r2, PRIMASK
 8007976:	b912      	cbnz	r2, 800797e <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007978:	f3ef 8211 	mrs	r2, BASEPRI
 800797c:	b11a      	cbz	r2, 8007986 <osThreadNew+0x26>
 800797e:	4a21      	ldr	r2, [pc, #132]	@ (8007a04 <osThreadNew+0xa4>)
 8007980:	6812      	ldr	r2, [r2, #0]
 8007982:	2a02      	cmp	r2, #2
 8007984:	d019      	beq.n	80079ba <osThreadNew+0x5a>
 8007986:	b1c0      	cbz	r0, 80079ba <osThreadNew+0x5a>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007988:	b36c      	cbz	r4, 80079e6 <osThreadNew+0x86>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800798a:	69a5      	ldr	r5, [r4, #24]
 800798c:	2d00      	cmp	r5, #0
 800798e:	bf08      	it	eq
 8007990:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007992:	1e6a      	subs	r2, r5, #1
 8007994:	46ac      	mov	ip, r5
 8007996:	2a37      	cmp	r2, #55	@ 0x37
 8007998:	d82a      	bhi.n	80079f0 <osThreadNew+0x90>
 800799a:	6862      	ldr	r2, [r4, #4]
 800799c:	07d2      	lsls	r2, r2, #31
 800799e:	d427      	bmi.n	80079f0 <osThreadNew+0x90>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80079a0:	6966      	ldr	r6, [r4, #20]
 80079a2:	b16e      	cbz	r6, 80079c0 <osThreadNew+0x60>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80079a4:	08b2      	lsrs	r2, r6, #2
      if (attr->name != NULL) {
 80079a6:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80079a8:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
 80079ac:	b157      	cbz	r7, 80079c4 <osThreadNew+0x64>
 80079ae:	f1be 0f5f 	cmp.w	lr, #95	@ 0x5f
 80079b2:	d902      	bls.n	80079ba <osThreadNew+0x5a>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80079b4:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80079b6:	b104      	cbz	r4, 80079ba <osThreadNew+0x5a>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80079b8:	b9e6      	cbnz	r6, 80079f4 <osThreadNew+0x94>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 80079ba:	9805      	ldr	r0, [sp, #20]
}
 80079bc:	b007      	add	sp, #28
 80079be:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80079c0:	2280      	movs	r2, #128	@ 0x80
 80079c2:	e7f0      	b.n	80079a6 <osThreadNew+0x46>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80079c4:	f1be 0f00 	cmp.w	lr, #0
 80079c8:	d1f7      	bne.n	80079ba <osThreadNew+0x5a>
      if (mem == 0) {
 80079ca:	6924      	ldr	r4, [r4, #16]
 80079cc:	2c00      	cmp	r4, #0
 80079ce:	d1f4      	bne.n	80079ba <osThreadNew+0x5a>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80079d0:	ac05      	add	r4, sp, #20
 80079d2:	b292      	uxth	r2, r2
 80079d4:	e9cd c400 	strd	ip, r4, [sp]
 80079d8:	f001 fc8f 	bl	80092fa <xTaskCreate>
 80079dc:	2801      	cmp	r0, #1
          hTask = NULL;
 80079de:	bf1c      	itt	ne
 80079e0:	2300      	movne	r3, #0
 80079e2:	9305      	strne	r3, [sp, #20]
 80079e4:	e7e9      	b.n	80079ba <osThreadNew+0x5a>
    name = NULL;
 80079e6:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 80079e8:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80079ec:	2280      	movs	r2, #128	@ 0x80
 80079ee:	e7ef      	b.n	80079d0 <osThreadNew+0x70>
        return (NULL);
 80079f0:	2000      	movs	r0, #0
 80079f2:	e7e3      	b.n	80079bc <osThreadNew+0x5c>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80079f4:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80079f8:	9500      	str	r5, [sp, #0]
 80079fa:	f001 fc40 	bl	800927e <xTaskCreateStatic>
 80079fe:	9005      	str	r0, [sp, #20]
 8007a00:	e7db      	b.n	80079ba <osThreadNew+0x5a>
 8007a02:	bf00      	nop
 8007a04:	200040f8 	.word	0x200040f8

08007a08 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8007a08:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007a0a:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007a0e:	b113      	cbz	r3, 8007a16 <osDelay+0xe>
    stat = osErrorISR;
 8007a10:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8007a14:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007a16:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007a1a:	b913      	cbnz	r3, 8007a22 <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007a1c:	f3ef 8311 	mrs	r3, BASEPRI
 8007a20:	b11b      	cbz	r3, 8007a2a <osDelay+0x22>
 8007a22:	4b04      	ldr	r3, [pc, #16]	@ (8007a34 <osDelay+0x2c>)
 8007a24:	681b      	ldr	r3, [r3, #0]
 8007a26:	2b02      	cmp	r3, #2
 8007a28:	d0f2      	beq.n	8007a10 <osDelay+0x8>
    if (ticks != 0U) {
 8007a2a:	b108      	cbz	r0, 8007a30 <osDelay+0x28>
      vTaskDelay(ticks);
 8007a2c:	f001 fdb0 	bl	8009590 <vTaskDelay>
    stat = osOK;
 8007a30:	2000      	movs	r0, #0
  return (stat);
 8007a32:	e7ef      	b.n	8007a14 <osDelay+0xc>
 8007a34:	200040f8 	.word	0x200040f8

08007a38 <osMutexNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
 8007a38:	b570      	push	{r4, r5, r6, lr}
 8007a3a:	4605      	mov	r5, r0
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007a3c:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
 8007a40:	b116      	cbz	r6, 8007a48 <osMutexNew+0x10>
  hMutex = NULL;
 8007a42:	2400      	movs	r4, #0
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
 8007a44:	4620      	mov	r0, r4
 8007a46:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007a48:	f3ef 8210 	mrs	r2, PRIMASK
  if (!IS_IRQ()) {
 8007a4c:	b912      	cbnz	r2, 8007a54 <osMutexNew+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007a4e:	f3ef 8211 	mrs	r2, BASEPRI
 8007a52:	b11a      	cbz	r2, 8007a5c <osMutexNew+0x24>
 8007a54:	4a18      	ldr	r2, [pc, #96]	@ (8007ab8 <osMutexNew+0x80>)
 8007a56:	6812      	ldr	r2, [r2, #0]
 8007a58:	2a02      	cmp	r2, #2
 8007a5a:	d0f2      	beq.n	8007a42 <osMutexNew+0xa>
    if (attr != NULL) {
 8007a5c:	b115      	cbz	r5, 8007a64 <osMutexNew+0x2c>
      type = attr->attr_bits;
 8007a5e:	686e      	ldr	r6, [r5, #4]
    if ((type & osMutexRobust) != osMutexRobust) {
 8007a60:	0733      	lsls	r3, r6, #28
 8007a62:	d4ee      	bmi.n	8007a42 <osMutexNew+0xa>
    if ((type & osMutexRecursive) == osMutexRecursive) {
 8007a64:	f006 0601 	and.w	r6, r6, #1
      if (attr != NULL) {
 8007a68:	b17d      	cbz	r5, 8007a8a <osMutexNew+0x52>
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007a6a:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
 8007a6e:	b151      	cbz	r1, 8007a86 <osMutexNew+0x4e>
 8007a70:	2b4f      	cmp	r3, #79	@ 0x4f
 8007a72:	d9e6      	bls.n	8007a42 <osMutexNew+0xa>
        if (rmtx != 0U) {
 8007a74:	b1de      	cbz	r6, 8007aae <osMutexNew+0x76>
          hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
 8007a76:	2004      	movs	r0, #4
          hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
 8007a78:	f000 ff49 	bl	800890e <xQueueCreateMutexStatic>
 8007a7c:	4604      	mov	r4, r0
      if (hMutex != NULL) {
 8007a7e:	2800      	cmp	r0, #0
 8007a80:	d0df      	beq.n	8007a42 <osMutexNew+0xa>
          name = attr->name;
 8007a82:	682d      	ldr	r5, [r5, #0]
 8007a84:	e00a      	b.n	8007a9c <osMutexNew+0x64>
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007a86:	2b00      	cmp	r3, #0
 8007a88:	d1db      	bne.n	8007a42 <osMutexNew+0xa>
          if (rmtx != 0U) {
 8007a8a:	b196      	cbz	r6, 8007ab2 <osMutexNew+0x7a>
            hMutex = xSemaphoreCreateRecursiveMutex ();
 8007a8c:	2004      	movs	r0, #4
            hMutex = xSemaphoreCreateMutex ();
 8007a8e:	f000 ff74 	bl	800897a <xQueueCreateMutex>
 8007a92:	4604      	mov	r4, r0
      if (hMutex != NULL) {
 8007a94:	2800      	cmp	r0, #0
 8007a96:	d0d4      	beq.n	8007a42 <osMutexNew+0xa>
        if (attr != NULL) {
 8007a98:	2d00      	cmp	r5, #0
 8007a9a:	d1f2      	bne.n	8007a82 <osMutexNew+0x4a>
        vQueueAddToRegistry (hMutex, name);
 8007a9c:	4629      	mov	r1, r5
 8007a9e:	4620      	mov	r0, r4
 8007aa0:	f001 fa24 	bl	8008eec <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
 8007aa4:	2e00      	cmp	r6, #0
 8007aa6:	d0cd      	beq.n	8007a44 <osMutexNew+0xc>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
 8007aa8:	f044 0401 	orr.w	r4, r4, #1
  return ((osMutexId_t)hMutex);
 8007aac:	e7ca      	b.n	8007a44 <osMutexNew+0xc>
          hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
 8007aae:	2001      	movs	r0, #1
 8007ab0:	e7e2      	b.n	8007a78 <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutex ();
 8007ab2:	2001      	movs	r0, #1
 8007ab4:	e7eb      	b.n	8007a8e <osMutexNew+0x56>
 8007ab6:	bf00      	nop
 8007ab8:	200040f8 	.word	0x200040f8

08007abc <osMutexAcquire>:

osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
 8007abc:	4603      	mov	r3, r0
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
 8007abe:	f020 0001 	bic.w	r0, r0, #1
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
 8007ac2:	b510      	push	{r4, lr}

  rmtx = (uint32_t)mutex_id & 1U;
 8007ac4:	f003 0201 	and.w	r2, r3, #1
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
 8007ac8:	460c      	mov	r4, r1
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007aca:	f3ef 8105 	mrs	r1, IPSR

  stat = osOK;

  if (IS_IRQ()) {
 8007ace:	b111      	cbz	r1, 8007ad6 <osMutexAcquire+0x1a>
    stat = osErrorISR;
 8007ad0:	f06f 0005 	mvn.w	r0, #5
      }
    }
  }

  return (stat);
}
 8007ad4:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007ad6:	f3ef 8110 	mrs	r1, PRIMASK
  if (IS_IRQ()) {
 8007ada:	b911      	cbnz	r1, 8007ae2 <osMutexAcquire+0x26>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007adc:	f3ef 8111 	mrs	r1, BASEPRI
 8007ae0:	b119      	cbz	r1, 8007aea <osMutexAcquire+0x2e>
 8007ae2:	490d      	ldr	r1, [pc, #52]	@ (8007b18 <osMutexAcquire+0x5c>)
 8007ae4:	6809      	ldr	r1, [r1, #0]
 8007ae6:	2902      	cmp	r1, #2
 8007ae8:	d0f2      	beq.n	8007ad0 <osMutexAcquire+0x14>
  else if (hMutex == NULL) {
 8007aea:	2b01      	cmp	r3, #1
 8007aec:	d911      	bls.n	8007b12 <osMutexAcquire+0x56>
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
 8007aee:	4621      	mov	r1, r4
    if (rmtx != 0U) {
 8007af0:	b162      	cbz	r2, 8007b0c <osMutexAcquire+0x50>
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
 8007af2:	f001 f985 	bl	8008e00 <xQueueTakeMutexRecursive>
 8007af6:	2801      	cmp	r0, #1
 8007af8:	d101      	bne.n	8007afe <osMutexAcquire+0x42>
  stat = osOK;
 8007afa:	2000      	movs	r0, #0
 8007afc:	e7ea      	b.n	8007ad4 <osMutexAcquire+0x18>
          stat = osErrorResource;
 8007afe:	2c00      	cmp	r4, #0
 8007b00:	bf14      	ite	ne
 8007b02:	f06f 0001 	mvnne.w	r0, #1
 8007b06:	f06f 0002 	mvneq.w	r0, #2
 8007b0a:	e7e3      	b.n	8007ad4 <osMutexAcquire+0x18>
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
 8007b0c:	f001 f8b3 	bl	8008c76 <xQueueSemaphoreTake>
 8007b10:	e7f1      	b.n	8007af6 <osMutexAcquire+0x3a>
    stat = osErrorParameter;
 8007b12:	f06f 0003 	mvn.w	r0, #3
 8007b16:	e7dd      	b.n	8007ad4 <osMutexAcquire+0x18>
 8007b18:	200040f8 	.word	0x200040f8

08007b1c <osMutexRelease>:

osStatus_t osMutexRelease (osMutexId_t mutex_id) {
 8007b1c:	4602      	mov	r2, r0
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
 8007b1e:	f020 0001 	bic.w	r0, r0, #1
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
 8007b22:	b508      	push	{r3, lr}

  rmtx = (uint32_t)mutex_id & 1U;
 8007b24:	f002 0301 	and.w	r3, r2, #1
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007b28:	f3ef 8105 	mrs	r1, IPSR

  stat = osOK;

  if (IS_IRQ()) {
 8007b2c:	b111      	cbz	r1, 8007b34 <osMutexRelease+0x18>
    stat = osErrorISR;
 8007b2e:	f06f 0005 	mvn.w	r0, #5
      }
    }
  }

  return (stat);
}
 8007b32:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007b34:	f3ef 8110 	mrs	r1, PRIMASK
  if (IS_IRQ()) {
 8007b38:	b911      	cbnz	r1, 8007b40 <osMutexRelease+0x24>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007b3a:	f3ef 8111 	mrs	r1, BASEPRI
 8007b3e:	b119      	cbz	r1, 8007b48 <osMutexRelease+0x2c>
 8007b40:	490b      	ldr	r1, [pc, #44]	@ (8007b70 <osMutexRelease+0x54>)
 8007b42:	6809      	ldr	r1, [r1, #0]
 8007b44:	2902      	cmp	r1, #2
 8007b46:	d0f2      	beq.n	8007b2e <osMutexRelease+0x12>
  else if (hMutex == NULL) {
 8007b48:	2a01      	cmp	r2, #1
 8007b4a:	d90d      	bls.n	8007b68 <osMutexRelease+0x4c>
    if (rmtx != 0U) {
 8007b4c:	b13b      	cbz	r3, 8007b5e <osMutexRelease+0x42>
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
 8007b4e:	f000 fef3 	bl	8008938 <xQueueGiveMutexRecursive>
 8007b52:	2801      	cmp	r0, #1
  stat = osOK;
 8007b54:	bf0c      	ite	eq
 8007b56:	2000      	moveq	r0, #0
        stat = osErrorResource;
 8007b58:	f06f 0002 	mvnne.w	r0, #2
 8007b5c:	e7e9      	b.n	8007b32 <osMutexRelease+0x16>
      if (xSemaphoreGive (hMutex) != pdPASS) {
 8007b5e:	461a      	mov	r2, r3
 8007b60:	4619      	mov	r1, r3
 8007b62:	f000 fe1a 	bl	800879a <xQueueGenericSend>
 8007b66:	e7f4      	b.n	8007b52 <osMutexRelease+0x36>
    stat = osErrorParameter;
 8007b68:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007b6c:	e7e1      	b.n	8007b32 <osMutexRelease+0x16>
 8007b6e:	bf00      	nop
 8007b70:	200040f8 	.word	0x200040f8

08007b74 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007b74:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007b76:	460e      	mov	r6, r1
 8007b78:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007b7a:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007b7e:	b993      	cbnz	r3, 8007ba6 <osSemaphoreNew+0x32>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007b80:	f3ef 8310 	mrs	r3, PRIMASK
 8007b84:	b913      	cbnz	r3, 8007b8c <osSemaphoreNew+0x18>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007b86:	f3ef 8311 	mrs	r3, BASEPRI
 8007b8a:	b11b      	cbz	r3, 8007b94 <osSemaphoreNew+0x20>
 8007b8c:	4b24      	ldr	r3, [pc, #144]	@ (8007c20 <osSemaphoreNew+0xac>)
 8007b8e:	681b      	ldr	r3, [r3, #0]
 8007b90:	2b02      	cmp	r3, #2
 8007b92:	d008      	beq.n	8007ba6 <osSemaphoreNew+0x32>
 8007b94:	b138      	cbz	r0, 8007ba6 <osSemaphoreNew+0x32>
 8007b96:	42b0      	cmp	r0, r6
 8007b98:	d305      	bcc.n	8007ba6 <osSemaphoreNew+0x32>
    mem = -1;

    if (attr != NULL) {
 8007b9a:	b155      	cbz	r5, 8007bb2 <osSemaphoreNew+0x3e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007b9c:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8007ba0:	b12b      	cbz	r3, 8007bae <osSemaphoreNew+0x3a>
 8007ba2:	2a4f      	cmp	r2, #79	@ 0x4f
 8007ba4:	d823      	bhi.n	8007bee <osSemaphoreNew+0x7a>
  hSemaphore = NULL;
 8007ba6:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8007ba8:	4620      	mov	r0, r4
 8007baa:	b002      	add	sp, #8
 8007bac:	bd70      	pop	{r4, r5, r6, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007bae:	2a00      	cmp	r2, #0
 8007bb0:	d1f9      	bne.n	8007ba6 <osSemaphoreNew+0x32>
      if (max_count == 1U) {
 8007bb2:	2801      	cmp	r0, #1
 8007bb4:	d10e      	bne.n	8007bd4 <osSemaphoreNew+0x60>
          hSemaphore = xSemaphoreCreateBinary();
 8007bb6:	2203      	movs	r2, #3
 8007bb8:	2100      	movs	r1, #0
 8007bba:	2001      	movs	r0, #1
 8007bbc:	f000 fd7c 	bl	80086b8 <xQueueGenericCreate>
 8007bc0:	e01d      	b.n	8007bfe <osSemaphoreNew+0x8a>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8007bc2:	461a      	mov	r2, r3
 8007bc4:	4631      	mov	r1, r6
 8007bc6:	f000 fda0 	bl	800870a <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8007bca:	4604      	mov	r4, r0
 8007bcc:	2800      	cmp	r0, #0
 8007bce:	d0ea      	beq.n	8007ba6 <osSemaphoreNew+0x32>
          name = attr->name;
 8007bd0:	682d      	ldr	r5, [r5, #0]
 8007bd2:	e007      	b.n	8007be4 <osSemaphoreNew+0x70>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007bd4:	4631      	mov	r1, r6
 8007bd6:	f000 fdbe 	bl	8008756 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007bda:	4604      	mov	r4, r0
 8007bdc:	2800      	cmp	r0, #0
 8007bde:	d0e2      	beq.n	8007ba6 <osSemaphoreNew+0x32>
        if (attr != NULL) {
 8007be0:	2d00      	cmp	r5, #0
 8007be2:	d1f5      	bne.n	8007bd0 <osSemaphoreNew+0x5c>
        vQueueAddToRegistry (hSemaphore, name);
 8007be4:	4629      	mov	r1, r5
 8007be6:	4620      	mov	r0, r4
 8007be8:	f001 f980 	bl	8008eec <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8007bec:	e7dc      	b.n	8007ba8 <osSemaphoreNew+0x34>
      if (max_count == 1U) {
 8007bee:	2801      	cmp	r0, #1
 8007bf0:	d1e7      	bne.n	8007bc2 <osSemaphoreNew+0x4e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007bf2:	2203      	movs	r2, #3
 8007bf4:	9200      	str	r2, [sp, #0]
 8007bf6:	2200      	movs	r2, #0
 8007bf8:	4611      	mov	r1, r2
 8007bfa:	f000 fd49 	bl	8008690 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8007bfe:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007c00:	2800      	cmp	r0, #0
 8007c02:	d0d0      	beq.n	8007ba6 <osSemaphoreNew+0x32>
 8007c04:	2e00      	cmp	r6, #0
 8007c06:	d0eb      	beq.n	8007be0 <osSemaphoreNew+0x6c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007c08:	2300      	movs	r3, #0
 8007c0a:	461a      	mov	r2, r3
 8007c0c:	4619      	mov	r1, r3
 8007c0e:	f000 fdc4 	bl	800879a <xQueueGenericSend>
 8007c12:	2801      	cmp	r0, #1
 8007c14:	d0e4      	beq.n	8007be0 <osSemaphoreNew+0x6c>
            vSemaphoreDelete (hSemaphore);
 8007c16:	4620      	mov	r0, r4
 8007c18:	f001 f992 	bl	8008f40 <vQueueDelete>
      if (hSemaphore != NULL) {
 8007c1c:	e7c3      	b.n	8007ba6 <osSemaphoreNew+0x32>
 8007c1e:	bf00      	nop
 8007c20:	200040f8 	.word	0x200040f8

08007c24 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007c24:	b513      	push	{r0, r1, r4, lr}
 8007c26:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007c28:	b918      	cbnz	r0, 8007c32 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8007c2a:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007c2e:	b002      	add	sp, #8
 8007c30:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007c32:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8007c36:	b15b      	cbz	r3, 8007c50 <osSemaphoreAcquire+0x2c>
    if (timeout != 0U) {
 8007c38:	2c00      	cmp	r4, #0
 8007c3a:	d1f6      	bne.n	8007c2a <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007c3c:	aa01      	add	r2, sp, #4
 8007c3e:	4621      	mov	r1, r4
      yield = pdFALSE;
 8007c40:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007c42:	f001 f900 	bl	8008e46 <xQueueReceiveFromISR>
 8007c46:	2801      	cmp	r0, #1
 8007c48:	d016      	beq.n	8007c78 <osSemaphoreAcquire+0x54>
        stat = osErrorResource;
 8007c4a:	f06f 0002 	mvn.w	r0, #2
 8007c4e:	e7ee      	b.n	8007c2e <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007c50:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8007c54:	b913      	cbnz	r3, 8007c5c <osSemaphoreAcquire+0x38>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007c56:	f3ef 8311 	mrs	r3, BASEPRI
 8007c5a:	b11b      	cbz	r3, 8007c64 <osSemaphoreAcquire+0x40>
 8007c5c:	4b0e      	ldr	r3, [pc, #56]	@ (8007c98 <osSemaphoreAcquire+0x74>)
 8007c5e:	681b      	ldr	r3, [r3, #0]
 8007c60:	2b02      	cmp	r3, #2
 8007c62:	d0e9      	beq.n	8007c38 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007c64:	4621      	mov	r1, r4
 8007c66:	f001 f806 	bl	8008c76 <xQueueSemaphoreTake>
 8007c6a:	2801      	cmp	r0, #1
 8007c6c:	d006      	beq.n	8007c7c <osSemaphoreAcquire+0x58>
      if (timeout != 0U) {
 8007c6e:	2c00      	cmp	r4, #0
 8007c70:	d0eb      	beq.n	8007c4a <osSemaphoreAcquire+0x26>
        stat = osErrorTimeout;
 8007c72:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007c76:	e7da      	b.n	8007c2e <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8007c78:	9b01      	ldr	r3, [sp, #4]
 8007c7a:	b90b      	cbnz	r3, 8007c80 <osSemaphoreAcquire+0x5c>
  stat = osOK;
 8007c7c:	2000      	movs	r0, #0
 8007c7e:	e7d6      	b.n	8007c2e <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8007c80:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007c84:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007c88:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007c8c:	f3bf 8f4f 	dsb	sy
 8007c90:	f3bf 8f6f 	isb	sy
 8007c94:	e7f2      	b.n	8007c7c <osSemaphoreAcquire+0x58>
 8007c96:	bf00      	nop
 8007c98:	200040f8 	.word	0x200040f8

08007c9c <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007c9c:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007c9e:	b370      	cbz	r0, 8007cfe <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007ca0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007ca4:	b15b      	cbz	r3, 8007cbe <osSemaphoreRelease+0x22>
    yield = pdFALSE;
 8007ca6:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007ca8:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8007caa:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007cac:	f000 fee6 	bl	8008a7c <xQueueGiveFromISR>
 8007cb0:	2801      	cmp	r0, #1
 8007cb2:	d016      	beq.n	8007ce2 <osSemaphoreRelease+0x46>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8007cb4:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8007cb8:	b003      	add	sp, #12
 8007cba:	f85d fb04 	ldr.w	pc, [sp], #4
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007cbe:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8007cc2:	b913      	cbnz	r3, 8007cca <osSemaphoreRelease+0x2e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007cc4:	f3ef 8311 	mrs	r3, BASEPRI
 8007cc8:	b11b      	cbz	r3, 8007cd2 <osSemaphoreRelease+0x36>
 8007cca:	4b0e      	ldr	r3, [pc, #56]	@ (8007d04 <osSemaphoreRelease+0x68>)
 8007ccc:	681b      	ldr	r3, [r3, #0]
 8007cce:	2b02      	cmp	r3, #2
 8007cd0:	d0e9      	beq.n	8007ca6 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007cd2:	2300      	movs	r3, #0
 8007cd4:	461a      	mov	r2, r3
 8007cd6:	4619      	mov	r1, r3
 8007cd8:	f000 fd5f 	bl	800879a <xQueueGenericSend>
 8007cdc:	2801      	cmp	r0, #1
 8007cde:	d00c      	beq.n	8007cfa <osSemaphoreRelease+0x5e>
 8007ce0:	e7e8      	b.n	8007cb4 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8007ce2:	9b01      	ldr	r3, [sp, #4]
 8007ce4:	b14b      	cbz	r3, 8007cfa <osSemaphoreRelease+0x5e>
 8007ce6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007cea:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007cee:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007cf2:	f3bf 8f4f 	dsb	sy
 8007cf6:	f3bf 8f6f 	isb	sy
  stat = osOK;
 8007cfa:	2000      	movs	r0, #0
 8007cfc:	e7dc      	b.n	8007cb8 <osSemaphoreRelease+0x1c>
    stat = osErrorParameter;
 8007cfe:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007d02:	e7d9      	b.n	8007cb8 <osSemaphoreRelease+0x1c>
 8007d04:	200040f8 	.word	0x200040f8

08007d08 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007d08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007d0a:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007d0c:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007d10:	b11b      	cbz	r3, 8007d1a <osMessageQueueNew+0x12>
  hQueue = NULL;
 8007d12:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007d14:	4628      	mov	r0, r5
 8007d16:	b002      	add	sp, #8
 8007d18:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007d1a:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007d1e:	b913      	cbnz	r3, 8007d26 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007d20:	f3ef 8311 	mrs	r3, BASEPRI
 8007d24:	b11b      	cbz	r3, 8007d2e <osMessageQueueNew+0x26>
 8007d26:	4b1a      	ldr	r3, [pc, #104]	@ (8007d90 <osMessageQueueNew+0x88>)
 8007d28:	681b      	ldr	r3, [r3, #0]
 8007d2a:	2b02      	cmp	r3, #2
 8007d2c:	d0f1      	beq.n	8007d12 <osMessageQueueNew+0xa>
 8007d2e:	2800      	cmp	r0, #0
 8007d30:	d0ef      	beq.n	8007d12 <osMessageQueueNew+0xa>
 8007d32:	2900      	cmp	r1, #0
 8007d34:	d0ed      	beq.n	8007d12 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8007d36:	b1ec      	cbz	r4, 8007d74 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007d38:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8007d3c:	b193      	cbz	r3, 8007d64 <osMessageQueueNew+0x5c>
 8007d3e:	2a4f      	cmp	r2, #79	@ 0x4f
 8007d40:	d9e7      	bls.n	8007d12 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007d42:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007d44:	2a00      	cmp	r2, #0
 8007d46:	d0e4      	beq.n	8007d12 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007d48:	fb01 f500 	mul.w	r5, r1, r0
 8007d4c:	6966      	ldr	r6, [r4, #20]
 8007d4e:	42ae      	cmp	r6, r5
 8007d50:	d3df      	bcc.n	8007d12 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007d52:	2500      	movs	r5, #0
 8007d54:	9500      	str	r5, [sp, #0]
 8007d56:	f000 fc9b 	bl	8008690 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007d5a:	4605      	mov	r5, r0
 8007d5c:	2800      	cmp	r0, #0
 8007d5e:	d0d8      	beq.n	8007d12 <osMessageQueueNew+0xa>
        name = attr->name;
 8007d60:	6824      	ldr	r4, [r4, #0]
 8007d62:	e00f      	b.n	8007d84 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007d64:	2a00      	cmp	r2, #0
 8007d66:	d1d4      	bne.n	8007d12 <osMessageQueueNew+0xa>
 8007d68:	6923      	ldr	r3, [r4, #16]
 8007d6a:	2b00      	cmp	r3, #0
 8007d6c:	d1d1      	bne.n	8007d12 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007d6e:	6963      	ldr	r3, [r4, #20]
 8007d70:	2b00      	cmp	r3, #0
 8007d72:	d1ce      	bne.n	8007d12 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8007d74:	2200      	movs	r2, #0
 8007d76:	f000 fc9f 	bl	80086b8 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007d7a:	4605      	mov	r5, r0
 8007d7c:	2800      	cmp	r0, #0
 8007d7e:	d0c8      	beq.n	8007d12 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8007d80:	2c00      	cmp	r4, #0
 8007d82:	d1ed      	bne.n	8007d60 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8007d84:	4621      	mov	r1, r4
 8007d86:	4628      	mov	r0, r5
 8007d88:	f001 f8b0 	bl	8008eec <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007d8c:	e7c2      	b.n	8007d14 <osMessageQueueNew+0xc>
 8007d8e:	bf00      	nop
 8007d90:	200040f8 	.word	0x200040f8

08007d94 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007d94:	b513      	push	{r0, r1, r4, lr}
 8007d96:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007d98:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007d9c:	b123      	cbz	r3, 8007da8 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007d9e:	b9d8      	cbnz	r0, 8007dd8 <osMessageQueuePut+0x44>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
 8007da0:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007da4:	b002      	add	sp, #8
 8007da6:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007da8:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007dac:	b913      	cbnz	r3, 8007db4 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007dae:	f3ef 8311 	mrs	r3, BASEPRI
 8007db2:	b11b      	cbz	r3, 8007dbc <osMessageQueuePut+0x28>
 8007db4:	4b17      	ldr	r3, [pc, #92]	@ (8007e14 <osMessageQueuePut+0x80>)
 8007db6:	681b      	ldr	r3, [r3, #0]
 8007db8:	2b02      	cmp	r3, #2
 8007dba:	d0f0      	beq.n	8007d9e <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007dbc:	2800      	cmp	r0, #0
 8007dbe:	d0ef      	beq.n	8007da0 <osMessageQueuePut+0xc>
 8007dc0:	2900      	cmp	r1, #0
 8007dc2:	d0ed      	beq.n	8007da0 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007dc4:	2300      	movs	r3, #0
 8007dc6:	4622      	mov	r2, r4
 8007dc8:	f000 fce7 	bl	800879a <xQueueGenericSend>
 8007dcc:	2801      	cmp	r0, #1
 8007dce:	d013      	beq.n	8007df8 <osMessageQueuePut+0x64>
        if (timeout != 0U) {
 8007dd0:	b16c      	cbz	r4, 8007dee <osMessageQueuePut+0x5a>
          stat = osErrorTimeout;
 8007dd2:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007dd6:	e7e5      	b.n	8007da4 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007dd8:	2900      	cmp	r1, #0
 8007dda:	d0e1      	beq.n	8007da0 <osMessageQueuePut+0xc>
 8007ddc:	2c00      	cmp	r4, #0
 8007dde:	d1df      	bne.n	8007da0 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007de0:	4623      	mov	r3, r4
 8007de2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007de4:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007de6:	f000 fde5 	bl	80089b4 <xQueueGenericSendFromISR>
 8007dea:	2801      	cmp	r0, #1
 8007dec:	d002      	beq.n	8007df4 <osMessageQueuePut+0x60>
        stat = osErrorResource;
 8007dee:	f06f 0002 	mvn.w	r0, #2
 8007df2:	e7d7      	b.n	8007da4 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8007df4:	9b01      	ldr	r3, [sp, #4]
 8007df6:	b90b      	cbnz	r3, 8007dfc <osMessageQueuePut+0x68>
  stat = osOK;
 8007df8:	2000      	movs	r0, #0
 8007dfa:	e7d3      	b.n	8007da4 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8007dfc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007e00:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007e04:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007e08:	f3bf 8f4f 	dsb	sy
 8007e0c:	f3bf 8f6f 	isb	sy
 8007e10:	e7f2      	b.n	8007df8 <osMessageQueuePut+0x64>
 8007e12:	bf00      	nop
 8007e14:	200040f8 	.word	0x200040f8

08007e18 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8007e18:	b513      	push	{r0, r1, r4, lr}
 8007e1a:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007e1c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007e20:	b123      	cbz	r3, 8007e2c <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007e22:	b9d0      	cbnz	r0, 8007e5a <osMessageQueueGet+0x42>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
 8007e24:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007e28:	b002      	add	sp, #8
 8007e2a:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007e2c:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007e30:	b913      	cbnz	r3, 8007e38 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007e32:	f3ef 8311 	mrs	r3, BASEPRI
 8007e36:	b11b      	cbz	r3, 8007e40 <osMessageQueueGet+0x28>
 8007e38:	4b16      	ldr	r3, [pc, #88]	@ (8007e94 <osMessageQueueGet+0x7c>)
 8007e3a:	681b      	ldr	r3, [r3, #0]
 8007e3c:	2b02      	cmp	r3, #2
 8007e3e:	d0f0      	beq.n	8007e22 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007e40:	2800      	cmp	r0, #0
 8007e42:	d0ef      	beq.n	8007e24 <osMessageQueueGet+0xc>
 8007e44:	2900      	cmp	r1, #0
 8007e46:	d0ed      	beq.n	8007e24 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007e48:	4622      	mov	r2, r4
 8007e4a:	f000 fe70 	bl	8008b2e <xQueueReceive>
 8007e4e:	2801      	cmp	r0, #1
 8007e50:	d012      	beq.n	8007e78 <osMessageQueueGet+0x60>
        if (timeout != 0U) {
 8007e52:	b164      	cbz	r4, 8007e6e <osMessageQueueGet+0x56>
          stat = osErrorTimeout;
 8007e54:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007e58:	e7e6      	b.n	8007e28 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007e5a:	2900      	cmp	r1, #0
 8007e5c:	d0e2      	beq.n	8007e24 <osMessageQueueGet+0xc>
 8007e5e:	2c00      	cmp	r4, #0
 8007e60:	d1e0      	bne.n	8007e24 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007e62:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007e64:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007e66:	f000 ffee 	bl	8008e46 <xQueueReceiveFromISR>
 8007e6a:	2801      	cmp	r0, #1
 8007e6c:	d002      	beq.n	8007e74 <osMessageQueueGet+0x5c>
        stat = osErrorResource;
 8007e6e:	f06f 0002 	mvn.w	r0, #2
 8007e72:	e7d9      	b.n	8007e28 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8007e74:	9b01      	ldr	r3, [sp, #4]
 8007e76:	b90b      	cbnz	r3, 8007e7c <osMessageQueueGet+0x64>
  stat = osOK;
 8007e78:	2000      	movs	r0, #0
 8007e7a:	e7d5      	b.n	8007e28 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8007e7c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007e80:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007e84:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007e88:	f3bf 8f4f 	dsb	sy
 8007e8c:	f3bf 8f6f 	isb	sy
 8007e90:	e7f2      	b.n	8007e78 <osMessageQueueGet+0x60>
 8007e92:	bf00      	nop
 8007e94:	200040f8 	.word	0x200040f8

08007e98 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8007e98:	4b03      	ldr	r3, [pc, #12]	@ (8007ea8 <vApplicationGetIdleTaskMemory+0x10>)
 8007e9a:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007e9c:	4b03      	ldr	r3, [pc, #12]	@ (8007eac <vApplicationGetIdleTaskMemory+0x14>)
 8007e9e:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007ea0:	2380      	movs	r3, #128	@ 0x80
 8007ea2:	6013      	str	r3, [r2, #0]
}
 8007ea4:	4770      	bx	lr
 8007ea6:	bf00      	nop
 8007ea8:	20004098 	.word	0x20004098
 8007eac:	20003e98 	.word	0x20003e98

08007eb0 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007eb0:	4b03      	ldr	r3, [pc, #12]	@ (8007ec0 <vApplicationGetTimerTaskMemory+0x10>)
 8007eb2:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8007eb4:	4b03      	ldr	r3, [pc, #12]	@ (8007ec4 <vApplicationGetTimerTaskMemory+0x14>)
 8007eb6:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007eb8:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8007ebc:	6013      	str	r3, [r2, #0]
}
 8007ebe:	4770      	bx	lr
 8007ec0:	20003e38 	.word	0x20003e38
 8007ec4:	20003a38 	.word	0x20003a38

08007ec8 <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007ec8:	4b10      	ldr	r3, [pc, #64]	@ (8007f0c <prvInsertBlockIntoFreeList+0x44>)
{
 8007eca:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007ecc:	461a      	mov	r2, r3
 8007ece:	681b      	ldr	r3, [r3, #0]
 8007ed0:	4283      	cmp	r3, r0
 8007ed2:	d3fb      	bcc.n	8007ecc <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007ed4:	6854      	ldr	r4, [r2, #4]
 8007ed6:	1911      	adds	r1, r2, r4
 8007ed8:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007eda:	bf01      	itttt	eq
 8007edc:	6841      	ldreq	r1, [r0, #4]
 8007ede:	4610      	moveq	r0, r2
 8007ee0:	1909      	addeq	r1, r1, r4
 8007ee2:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007ee4:	6844      	ldr	r4, [r0, #4]
 8007ee6:	1901      	adds	r1, r0, r4
 8007ee8:	428b      	cmp	r3, r1
 8007eea:	d10c      	bne.n	8007f06 <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007eec:	4908      	ldr	r1, [pc, #32]	@ (8007f10 <prvInsertBlockIntoFreeList+0x48>)
 8007eee:	6809      	ldr	r1, [r1, #0]
 8007ef0:	428b      	cmp	r3, r1
 8007ef2:	d003      	beq.n	8007efc <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007ef4:	6859      	ldr	r1, [r3, #4]
 8007ef6:	4421      	add	r1, r4
 8007ef8:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8007efa:	6819      	ldr	r1, [r3, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007efc:	4290      	cmp	r0, r2
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8007efe:	6001      	str	r1, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007f00:	bf18      	it	ne
 8007f02:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8007f04:	bd10      	pop	{r4, pc}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007f06:	4619      	mov	r1, r3
 8007f08:	e7f8      	b.n	8007efc <prvInsertBlockIntoFreeList+0x34>
 8007f0a:	bf00      	nop
 8007f0c:	2000410c 	.word	0x2000410c
 8007f10:	20004108 	.word	0x20004108

08007f14 <pvPortMalloc>:
{
 8007f14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007f18:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007f1a:	f001 fa1d 	bl	8009358 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8007f1e:	4940      	ldr	r1, [pc, #256]	@ (8008020 <pvPortMalloc+0x10c>)
 8007f20:	4d40      	ldr	r5, [pc, #256]	@ (8008024 <pvPortMalloc+0x110>)
 8007f22:	680b      	ldr	r3, [r1, #0]
 8007f24:	b9f3      	cbnz	r3, 8007f64 <pvPortMalloc+0x50>
	uxAddress = ( size_t ) ucHeap;
 8007f26:	4a40      	ldr	r2, [pc, #256]	@ (8008028 <pvPortMalloc+0x114>)
	xStart.xBlockSize = ( size_t ) 0;
 8007f28:	2000      	movs	r0, #0
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007f2a:	0756      	lsls	r6, r2, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007f2c:	4e3f      	ldr	r6, [pc, #252]	@ (800802c <pvPortMalloc+0x118>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007f2e:	bf1b      	ittet	ne
 8007f30:	3207      	addne	r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007f32:	4b3f      	ldrne	r3, [pc, #252]	@ (8008030 <pvPortMalloc+0x11c>)
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007f34:	4b3f      	ldreq	r3, [pc, #252]	@ (8008034 <pvPortMalloc+0x120>)
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007f36:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007f3a:	6070      	str	r0, [r6, #4]
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007f3c:	bf18      	it	ne
 8007f3e:	1a9b      	subne	r3, r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007f40:	6032      	str	r2, [r6, #0]
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007f42:	4413      	add	r3, r2
	uxAddress -= xHeapStructSize;
 8007f44:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007f46:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8007f4a:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007f4e:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8007f50:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007f52:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007f56:	4b38      	ldr	r3, [pc, #224]	@ (8008038 <pvPortMalloc+0x124>)
 8007f58:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007f5a:	4b38      	ldr	r3, [pc, #224]	@ (800803c <pvPortMalloc+0x128>)
 8007f5c:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007f5e:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8007f62:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007f64:	682e      	ldr	r6, [r5, #0]
 8007f66:	4226      	tst	r6, r4
 8007f68:	d154      	bne.n	8008014 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8007f6a:	2c00      	cmp	r4, #0
 8007f6c:	d043      	beq.n	8007ff6 <pvPortMalloc+0xe2>
				xWantedSize += xHeapStructSize;
 8007f6e:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007f72:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8007f74:	bf1c      	itt	ne
 8007f76:	f023 0307 	bicne.w	r3, r3, #7
 8007f7a:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8007f7c:	2b00      	cmp	r3, #0
 8007f7e:	d049      	beq.n	8008014 <pvPortMalloc+0x100>
 8007f80:	4f2e      	ldr	r7, [pc, #184]	@ (800803c <pvPortMalloc+0x128>)
 8007f82:	683c      	ldr	r4, [r7, #0]
 8007f84:	429c      	cmp	r4, r3
 8007f86:	d345      	bcc.n	8008014 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8007f88:	4a28      	ldr	r2, [pc, #160]	@ (800802c <pvPortMalloc+0x118>)
 8007f8a:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007f8c:	6868      	ldr	r0, [r5, #4]
 8007f8e:	4298      	cmp	r0, r3
 8007f90:	d204      	bcs.n	8007f9c <pvPortMalloc+0x88>
 8007f92:	f8d5 c000 	ldr.w	ip, [r5]
 8007f96:	f1bc 0f00 	cmp.w	ip, #0
 8007f9a:	d117      	bne.n	8007fcc <pvPortMalloc+0xb8>
				if( pxBlock != pxEnd )
 8007f9c:	6809      	ldr	r1, [r1, #0]
 8007f9e:	42a9      	cmp	r1, r5
 8007fa0:	d038      	beq.n	8008014 <pvPortMalloc+0x100>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007fa2:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007fa4:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007fa8:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007faa:	1ac2      	subs	r2, r0, r3
 8007fac:	2a10      	cmp	r2, #16
 8007fae:	d914      	bls.n	8007fda <pvPortMalloc+0xc6>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8007fb0:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007fb2:	0741      	lsls	r1, r0, #29
 8007fb4:	d00d      	beq.n	8007fd2 <pvPortMalloc+0xbe>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007fb6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007fba:	b672      	cpsid	i
 8007fbc:	f383 8811 	msr	BASEPRI, r3
 8007fc0:	f3bf 8f6f 	isb	sy
 8007fc4:	f3bf 8f4f 	dsb	sy
 8007fc8:	b662      	cpsie	i
 8007fca:	e7fe      	b.n	8007fca <pvPortMalloc+0xb6>
 8007fcc:	462a      	mov	r2, r5
 8007fce:	4665      	mov	r5, ip
 8007fd0:	e7dc      	b.n	8007f8c <pvPortMalloc+0x78>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007fd2:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007fd4:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007fd6:	f7ff ff77 	bl	8007ec8 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007fda:	686a      	ldr	r2, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8007fdc:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007fde:	4916      	ldr	r1, [pc, #88]	@ (8008038 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007fe0:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007fe2:	4316      	orrs	r6, r2
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007fe4:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007fe6:	603c      	str	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007fe8:	4284      	cmp	r4, r0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007fea:	606e      	str	r6, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8007fec:	602b      	str	r3, [r5, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007fee:	bf38      	it	cc
 8007ff0:	600c      	strcc	r4, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007ff2:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 8007ff6:	f001 fa55 	bl	80094a4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007ffa:	0763      	lsls	r3, r4, #29
 8007ffc:	d00c      	beq.n	8008018 <pvPortMalloc+0x104>
 8007ffe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008002:	b672      	cpsid	i
 8008004:	f383 8811 	msr	BASEPRI, r3
 8008008:	f3bf 8f6f 	isb	sy
 800800c:	f3bf 8f4f 	dsb	sy
 8008010:	b662      	cpsie	i
 8008012:	e7fe      	b.n	8008012 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008014:	2400      	movs	r4, #0
 8008016:	e7ee      	b.n	8007ff6 <pvPortMalloc+0xe2>
}
 8008018:	4620      	mov	r0, r4
 800801a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800801e:	bf00      	nop
 8008020:	20004108 	.word	0x20004108
 8008024:	200040fc 	.word	0x200040fc
 8008028:	20004114 	.word	0x20004114
 800802c:	2000410c 	.word	0x2000410c
 8008030:	2001660c 	.word	0x2001660c
 8008034:	000124f8 	.word	0x000124f8
 8008038:	20004100 	.word	0x20004100
 800803c:	20004104 	.word	0x20004104

08008040 <vPortFree>:
{
 8008040:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008042:	4604      	mov	r4, r0
 8008044:	2800      	cmp	r0, #0
 8008046:	d032      	beq.n	80080ae <vPortFree+0x6e>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008048:	4a19      	ldr	r2, [pc, #100]	@ (80080b0 <vPortFree+0x70>)
 800804a:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800804e:	6812      	ldr	r2, [r2, #0]
 8008050:	4213      	tst	r3, r2
 8008052:	d10a      	bne.n	800806a <vPortFree+0x2a>
 8008054:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008058:	b672      	cpsid	i
 800805a:	f383 8811 	msr	BASEPRI, r3
 800805e:	f3bf 8f6f 	isb	sy
 8008062:	f3bf 8f4f 	dsb	sy
 8008066:	b662      	cpsie	i
 8008068:	e7fe      	b.n	8008068 <vPortFree+0x28>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800806a:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800806e:	b151      	cbz	r1, 8008086 <vPortFree+0x46>
 8008070:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008074:	b672      	cpsid	i
 8008076:	f383 8811 	msr	BASEPRI, r3
 800807a:	f3bf 8f6f 	isb	sy
 800807e:	f3bf 8f4f 	dsb	sy
 8008082:	b662      	cpsie	i
 8008084:	e7fe      	b.n	8008084 <vPortFree+0x44>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008086:	ea23 0302 	bic.w	r3, r3, r2
 800808a:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800808e:	f001 f963 	bl	8009358 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008092:	4a08      	ldr	r2, [pc, #32]	@ (80080b4 <vPortFree+0x74>)
 8008094:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008098:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800809c:	6811      	ldr	r1, [r2, #0]
 800809e:	440b      	add	r3, r1
 80080a0:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80080a2:	f7ff ff11 	bl	8007ec8 <prvInsertBlockIntoFreeList>
}
 80080a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 80080aa:	f001 b9fb 	b.w	80094a4 <xTaskResumeAll>
}
 80080ae:	bd10      	pop	{r4, pc}
 80080b0:	200040fc 	.word	0x200040fc
 80080b4:	20004104 	.word	0x20004104

080080b8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80080b8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80080bc:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80080c0:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80080c2:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80080c4:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80080c8:	2300      	movs	r3, #0
 80080ca:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80080cc:	4770      	bx	lr

080080ce <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80080ce:	2300      	movs	r3, #0
 80080d0:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80080d2:	4770      	bx	lr

080080d4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80080d4:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80080d6:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 80080d8:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80080da:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80080dc:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80080de:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80080e0:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80080e2:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80080e4:	3301      	adds	r3, #1
 80080e6:	6003      	str	r3, [r0, #0]
}
 80080e8:	4770      	bx	lr

080080ea <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80080ea:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80080ec:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80080ee:	1c63      	adds	r3, r4, #1
 80080f0:	d10a      	bne.n	8008108 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80080f2:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80080f4:	685a      	ldr	r2, [r3, #4]
 80080f6:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80080f8:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80080fa:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80080fc:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80080fe:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008100:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008102:	3301      	adds	r3, #1
 8008104:	6003      	str	r3, [r0, #0]
}
 8008106:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008108:	f100 0208 	add.w	r2, r0, #8
 800810c:	4613      	mov	r3, r2
 800810e:	6852      	ldr	r2, [r2, #4]
 8008110:	6815      	ldr	r5, [r2, #0]
 8008112:	42a5      	cmp	r5, r4
 8008114:	d9fa      	bls.n	800810c <vListInsert+0x22>
 8008116:	e7ed      	b.n	80080f4 <vListInsert+0xa>

08008118 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 8008118:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800811a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 800811e:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008120:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008122:	6859      	ldr	r1, [r3, #4]
 8008124:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008126:	bf08      	it	eq
 8008128:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800812a:	2200      	movs	r2, #0
 800812c:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800812e:	681a      	ldr	r2, [r3, #0]
 8008130:	3a01      	subs	r2, #1
 8008132:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008134:	6818      	ldr	r0, [r3, #0]
}
 8008136:	4770      	bx	lr

08008138 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008138:	4808      	ldr	r0, [pc, #32]	@ (800815c <prvPortStartFirstTask+0x24>)
 800813a:	6800      	ldr	r0, [r0, #0]
 800813c:	6800      	ldr	r0, [r0, #0]
 800813e:	f380 8808 	msr	MSP, r0
 8008142:	f04f 0000 	mov.w	r0, #0
 8008146:	f380 8814 	msr	CONTROL, r0
 800814a:	b662      	cpsie	i
 800814c:	b661      	cpsie	f
 800814e:	f3bf 8f4f 	dsb	sy
 8008152:	f3bf 8f6f 	isb	sy
 8008156:	df00      	svc	0
 8008158:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800815a:	0000      	.short	0x0000
 800815c:	e000ed08 	.word	0xe000ed08

08008160 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008160:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8008170 <vPortEnableVFP+0x10>
 8008164:	6801      	ldr	r1, [r0, #0]
 8008166:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800816a:	6001      	str	r1, [r0, #0]
 800816c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800816e:	0000      	.short	0x0000
 8008170:	e000ed88 	.word	0xe000ed88

08008174 <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
 8008174:	2300      	movs	r3, #0
{
 8008176:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008178:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800817a:	4b0f      	ldr	r3, [pc, #60]	@ (80081b8 <prvTaskExitError+0x44>)
 800817c:	681b      	ldr	r3, [r3, #0]
 800817e:	3301      	adds	r3, #1
 8008180:	d00a      	beq.n	8008198 <prvTaskExitError+0x24>
 8008182:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008186:	b672      	cpsid	i
 8008188:	f383 8811 	msr	BASEPRI, r3
 800818c:	f3bf 8f6f 	isb	sy
 8008190:	f3bf 8f4f 	dsb	sy
 8008194:	b662      	cpsie	i
 8008196:	e7fe      	b.n	8008196 <prvTaskExitError+0x22>
 8008198:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800819c:	b672      	cpsid	i
 800819e:	f383 8811 	msr	BASEPRI, r3
 80081a2:	f3bf 8f6f 	isb	sy
 80081a6:	f3bf 8f4f 	dsb	sy
 80081aa:	b662      	cpsie	i
	while( ulDummy == 0 )
 80081ac:	9b01      	ldr	r3, [sp, #4]
 80081ae:	2b00      	cmp	r3, #0
 80081b0:	d0fc      	beq.n	80081ac <prvTaskExitError+0x38>
}
 80081b2:	b002      	add	sp, #8
 80081b4:	4770      	bx	lr
 80081b6:	bf00      	nop
 80081b8:	20000040 	.word	0x20000040

080081bc <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80081bc:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80081c0:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80081c4:	f840 2c20 	str.w	r2, [r0, #-32]
}
 80081c8:	3844      	subs	r0, #68	@ 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80081ca:	6403      	str	r3, [r0, #64]	@ 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80081cc:	4b03      	ldr	r3, [pc, #12]	@ (80081dc <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80081ce:	63c1      	str	r1, [r0, #60]	@ 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80081d0:	6383      	str	r3, [r0, #56]	@ 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80081d2:	f06f 0302 	mvn.w	r3, #2
 80081d6:	6203      	str	r3, [r0, #32]
}
 80081d8:	4770      	bx	lr
 80081da:	bf00      	nop
 80081dc:	08008175 	.word	0x08008175

080081e0 <SVC_Handler>:
	__asm volatile (
 80081e0:	4b07      	ldr	r3, [pc, #28]	@ (8008200 <pxCurrentTCBConst2>)
 80081e2:	6819      	ldr	r1, [r3, #0]
 80081e4:	6808      	ldr	r0, [r1, #0]
 80081e6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80081ea:	f380 8809 	msr	PSP, r0
 80081ee:	f3bf 8f6f 	isb	sy
 80081f2:	f04f 0000 	mov.w	r0, #0
 80081f6:	f380 8811 	msr	BASEPRI, r0
 80081fa:	4770      	bx	lr
 80081fc:	f3af 8000 	nop.w

08008200 <pxCurrentTCBConst2>:
 8008200:	20016b4c 	.word	0x20016b4c

08008204 <vPortEnterCritical>:
 8008204:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008208:	b672      	cpsid	i
 800820a:	f383 8811 	msr	BASEPRI, r3
 800820e:	f3bf 8f6f 	isb	sy
 8008212:	f3bf 8f4f 	dsb	sy
 8008216:	b662      	cpsie	i
	uxCriticalNesting++;
 8008218:	4a0b      	ldr	r2, [pc, #44]	@ (8008248 <vPortEnterCritical+0x44>)
 800821a:	6813      	ldr	r3, [r2, #0]
 800821c:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800821e:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008220:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008222:	d110      	bne.n	8008246 <vPortEnterCritical+0x42>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008224:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008228:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 800822c:	b2db      	uxtb	r3, r3
 800822e:	b153      	cbz	r3, 8008246 <vPortEnterCritical+0x42>
 8008230:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008234:	b672      	cpsid	i
 8008236:	f383 8811 	msr	BASEPRI, r3
 800823a:	f3bf 8f6f 	isb	sy
 800823e:	f3bf 8f4f 	dsb	sy
 8008242:	b662      	cpsie	i
 8008244:	e7fe      	b.n	8008244 <vPortEnterCritical+0x40>
}
 8008246:	4770      	bx	lr
 8008248:	20000040 	.word	0x20000040

0800824c <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800824c:	4a09      	ldr	r2, [pc, #36]	@ (8008274 <vPortExitCritical+0x28>)
 800824e:	6813      	ldr	r3, [r2, #0]
 8008250:	b953      	cbnz	r3, 8008268 <vPortExitCritical+0x1c>
 8008252:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008256:	b672      	cpsid	i
 8008258:	f383 8811 	msr	BASEPRI, r3
 800825c:	f3bf 8f6f 	isb	sy
 8008260:	f3bf 8f4f 	dsb	sy
 8008264:	b662      	cpsie	i
 8008266:	e7fe      	b.n	8008266 <vPortExitCritical+0x1a>
	uxCriticalNesting--;
 8008268:	3b01      	subs	r3, #1
 800826a:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800826c:	b90b      	cbnz	r3, 8008272 <vPortExitCritical+0x26>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800826e:	f383 8811 	msr	BASEPRI, r3
}
 8008272:	4770      	bx	lr
 8008274:	20000040 	.word	0x20000040
	...

08008280 <PendSV_Handler>:
	__asm volatile
 8008280:	f3ef 8009 	mrs	r0, PSP
 8008284:	f3bf 8f6f 	isb	sy
 8008288:	4b15      	ldr	r3, [pc, #84]	@ (80082e0 <pxCurrentTCBConst>)
 800828a:	681a      	ldr	r2, [r3, #0]
 800828c:	f01e 0f10 	tst.w	lr, #16
 8008290:	bf08      	it	eq
 8008292:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008296:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800829a:	6010      	str	r0, [r2, #0]
 800829c:	e92d 0009 	stmdb	sp!, {r0, r3}
 80082a0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 80082a4:	b672      	cpsid	i
 80082a6:	f380 8811 	msr	BASEPRI, r0
 80082aa:	f3bf 8f4f 	dsb	sy
 80082ae:	f3bf 8f6f 	isb	sy
 80082b2:	b662      	cpsie	i
 80082b4:	f001 fa00 	bl	80096b8 <vTaskSwitchContext>
 80082b8:	f04f 0000 	mov.w	r0, #0
 80082bc:	f380 8811 	msr	BASEPRI, r0
 80082c0:	bc09      	pop	{r0, r3}
 80082c2:	6819      	ldr	r1, [r3, #0]
 80082c4:	6808      	ldr	r0, [r1, #0]
 80082c6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80082ca:	f01e 0f10 	tst.w	lr, #16
 80082ce:	bf08      	it	eq
 80082d0:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80082d4:	f380 8809 	msr	PSP, r0
 80082d8:	f3bf 8f6f 	isb	sy
 80082dc:	4770      	bx	lr
 80082de:	bf00      	nop

080082e0 <pxCurrentTCBConst>:
 80082e0:	20016b4c 	.word	0x20016b4c

080082e4 <SysTick_Handler>:
{
 80082e4:	b508      	push	{r3, lr}
	__asm volatile
 80082e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082ea:	b672      	cpsid	i
 80082ec:	f383 8811 	msr	BASEPRI, r3
 80082f0:	f3bf 8f6f 	isb	sy
 80082f4:	f3bf 8f4f 	dsb	sy
 80082f8:	b662      	cpsie	i
		if( xTaskIncrementTick() != pdFALSE )
 80082fa:	f001 f83b 	bl	8009374 <xTaskIncrementTick>
 80082fe:	b128      	cbz	r0, 800830c <SysTick_Handler+0x28>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008300:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008304:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008308:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 800830c:	2300      	movs	r3, #0
 800830e:	f383 8811 	msr	BASEPRI, r3
}
 8008312:	bd08      	pop	{r3, pc}

08008314 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008314:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8008318:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800831a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800831e:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008320:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008322:	4b04      	ldr	r3, [pc, #16]	@ (8008334 <vPortSetupTimerInterrupt+0x20>)
 8008324:	681b      	ldr	r3, [r3, #0]
 8008326:	fbb3 f3f1 	udiv	r3, r3, r1
 800832a:	3b01      	subs	r3, #1
 800832c:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800832e:	2307      	movs	r3, #7
 8008330:	6113      	str	r3, [r2, #16]
}
 8008332:	4770      	bx	lr
 8008334:	2000000c 	.word	0x2000000c

08008338 <xPortStartScheduler>:
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008338:	4b2c      	ldr	r3, [pc, #176]	@ (80083ec <xPortStartScheduler+0xb4>)
{
 800833a:	b537      	push	{r0, r1, r2, r4, r5, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800833c:	781a      	ldrb	r2, [r3, #0]
 800833e:	b2d2      	uxtb	r2, r2
 8008340:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008342:	22ff      	movs	r2, #255	@ 0xff
 8008344:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008346:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008348:	4a29      	ldr	r2, [pc, #164]	@ (80083f0 <xPortStartScheduler+0xb8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800834a:	b2db      	uxtb	r3, r3
 800834c:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008350:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008354:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8008358:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800835a:	2307      	movs	r3, #7
 800835c:	4a25      	ldr	r2, [pc, #148]	@ (80083f4 <xPortStartScheduler+0xbc>)
 800835e:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008360:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 8008364:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008366:	0609      	lsls	r1, r1, #24
 8008368:	d40c      	bmi.n	8008384 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800836a:	2b03      	cmp	r3, #3
 800836c:	d013      	beq.n	8008396 <xPortStartScheduler+0x5e>
	__asm volatile
 800836e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008372:	b672      	cpsid	i
 8008374:	f383 8811 	msr	BASEPRI, r3
 8008378:	f3bf 8f6f 	isb	sy
 800837c:	f3bf 8f4f 	dsb	sy
 8008380:	b662      	cpsie	i
 8008382:	e7fe      	b.n	8008382 <xPortStartScheduler+0x4a>
			ulMaxPRIGROUPValue--;
 8008384:	3b01      	subs	r3, #1
 8008386:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008388:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800838c:	005b      	lsls	r3, r3, #1
 800838e:	b2db      	uxtb	r3, r3
 8008390:	f88d 3003 	strb.w	r3, [sp, #3]
 8008394:	e7e4      	b.n	8008360 <xPortStartScheduler+0x28>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008396:	f44f 7340 	mov.w	r3, #768	@ 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800839a:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
	uxCriticalNesting = 0;
 800839e:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80083a0:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80083a2:	9b01      	ldr	r3, [sp, #4]
 80083a4:	4a11      	ldr	r2, [pc, #68]	@ (80083ec <xPortStartScheduler+0xb4>)
 80083a6:	b2db      	uxtb	r3, r3
 80083a8:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80083aa:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80083ae:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80083b2:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80083b6:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80083ba:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 80083be:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 80083c2:	f7ff ffa7 	bl	8008314 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80083c6:	4b0c      	ldr	r3, [pc, #48]	@ (80083f8 <xPortStartScheduler+0xc0>)
 80083c8:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 80083ca:	f7ff fec9 	bl	8008160 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80083ce:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 80083d2:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 80083d6:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 80083da:	f7ff fead 	bl	8008138 <prvPortStartFirstTask>
	vTaskSwitchContext();
 80083de:	f001 f96b 	bl	80096b8 <vTaskSwitchContext>
}
 80083e2:	4628      	mov	r0, r5
	prvTaskExitError();
 80083e4:	f7ff fec6 	bl	8008174 <prvTaskExitError>
}
 80083e8:	b003      	add	sp, #12
 80083ea:	bd30      	pop	{r4, r5, pc}
 80083ec:	e000e400 	.word	0xe000e400
 80083f0:	20016610 	.word	0x20016610
 80083f4:	2001660c 	.word	0x2001660c
 80083f8:	20000040 	.word	0x20000040

080083fc <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80083fc:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008400:	2b0f      	cmp	r3, #15
 8008402:	d910      	bls.n	8008426 <vPortValidateInterruptPriority+0x2a>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008404:	4a13      	ldr	r2, [pc, #76]	@ (8008454 <vPortValidateInterruptPriority+0x58>)
 8008406:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008408:	4a13      	ldr	r2, [pc, #76]	@ (8008458 <vPortValidateInterruptPriority+0x5c>)
 800840a:	7812      	ldrb	r2, [r2, #0]
 800840c:	429a      	cmp	r2, r3
 800840e:	d90a      	bls.n	8008426 <vPortValidateInterruptPriority+0x2a>
 8008410:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008414:	b672      	cpsid	i
 8008416:	f383 8811 	msr	BASEPRI, r3
 800841a:	f3bf 8f6f 	isb	sy
 800841e:	f3bf 8f4f 	dsb	sy
 8008422:	b662      	cpsie	i
 8008424:	e7fe      	b.n	8008424 <vPortValidateInterruptPriority+0x28>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008426:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800842a:	4a0c      	ldr	r2, [pc, #48]	@ (800845c <vPortValidateInterruptPriority+0x60>)
 800842c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8008430:	6812      	ldr	r2, [r2, #0]
 8008432:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8008436:	4293      	cmp	r3, r2
 8008438:	d90a      	bls.n	8008450 <vPortValidateInterruptPriority+0x54>
 800843a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800843e:	b672      	cpsid	i
 8008440:	f383 8811 	msr	BASEPRI, r3
 8008444:	f3bf 8f6f 	isb	sy
 8008448:	f3bf 8f4f 	dsb	sy
 800844c:	b662      	cpsie	i
 800844e:	e7fe      	b.n	800844e <vPortValidateInterruptPriority+0x52>
	}
 8008450:	4770      	bx	lr
 8008452:	bf00      	nop
 8008454:	e000e3f0 	.word	0xe000e3f0
 8008458:	20016610 	.word	0x20016610
 800845c:	2001660c 	.word	0x2001660c

08008460 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008460:	b510      	push	{r4, lr}
 8008462:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008464:	f7ff fece 	bl	8008204 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008468:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800846a:	f7ff feef 	bl	800824c <vPortExitCritical>

	return xReturn;
}
 800846e:	fab4 f084 	clz	r0, r4
 8008472:	0940      	lsrs	r0, r0, #5
 8008474:	bd10      	pop	{r4, pc}

08008476 <prvCopyDataToQueue>:
{
 8008476:	b570      	push	{r4, r5, r6, lr}
 8008478:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800847a:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
 800847c:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800847e:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008480:	b942      	cbnz	r2, 8008494 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008482:	6806      	ldr	r6, [r0, #0]
 8008484:	b99e      	cbnz	r6, 80084ae <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008486:	6880      	ldr	r0, [r0, #8]
 8008488:	f001 fa82 	bl	8009990 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800848c:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800848e:	3501      	adds	r5, #1
 8008490:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8008492:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008494:	b96e      	cbnz	r6, 80084b2 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008496:	6840      	ldr	r0, [r0, #4]
 8008498:	f01a fb33 	bl	8022b02 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800849c:	6863      	ldr	r3, [r4, #4]
 800849e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80084a0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80084a2:	68a2      	ldr	r2, [r4, #8]
 80084a4:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80084a6:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80084a8:	bf24      	itt	cs
 80084aa:	6823      	ldrcs	r3, [r4, #0]
 80084ac:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 80084ae:	2000      	movs	r0, #0
 80084b0:	e7ed      	b.n	800848e <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80084b2:	68c0      	ldr	r0, [r0, #12]
 80084b4:	f01a fb25 	bl	8022b02 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80084b8:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80084ba:	68e3      	ldr	r3, [r4, #12]
 80084bc:	4251      	negs	r1, r2
 80084be:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80084c0:	6822      	ldr	r2, [r4, #0]
 80084c2:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80084c4:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80084c6:	bf3e      	ittt	cc
 80084c8:	68a3      	ldrcc	r3, [r4, #8]
 80084ca:	185b      	addcc	r3, r3, r1
 80084cc:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80084ce:	2e02      	cmp	r6, #2
 80084d0:	d1ed      	bne.n	80084ae <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80084d2:	b10d      	cbz	r5, 80084d8 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 80084d4:	3d01      	subs	r5, #1
 80084d6:	e7ea      	b.n	80084ae <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 80084d8:	4628      	mov	r0, r5
 80084da:	e7d8      	b.n	800848e <prvCopyDataToQueue+0x18>

080084dc <prvCopyDataFromQueue>:
{
 80084dc:	4603      	mov	r3, r0
 80084de:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80084e0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 80084e2:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80084e4:	b162      	cbz	r2, 8008500 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80084e6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80084e8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80084ea:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80084ec:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80084ee:	60dc      	str	r4, [r3, #12]
}
 80084f0:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80084f4:	bf24      	itt	cs
 80084f6:	6819      	ldrcs	r1, [r3, #0]
 80084f8:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80084fa:	68d9      	ldr	r1, [r3, #12]
 80084fc:	f01a bb01 	b.w	8022b02 <memcpy>
}
 8008500:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008504:	4770      	bx	lr

08008506 <prvUnlockQueue>:
{
 8008506:	b570      	push	{r4, r5, r6, lr}
 8008508:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800850a:	f7ff fe7b 	bl	8008204 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800850e:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008512:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008516:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008518:	2d00      	cmp	r5, #0
 800851a:	dc14      	bgt.n	8008546 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800851c:	23ff      	movs	r3, #255	@ 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800851e:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 8008522:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8008526:	f7ff fe91 	bl	800824c <vPortExitCritical>
	taskENTER_CRITICAL();
 800852a:	f7ff fe6b 	bl	8008204 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800852e:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
 8008532:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008534:	2d00      	cmp	r5, #0
 8008536:	dc12      	bgt.n	800855e <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008538:	23ff      	movs	r3, #255	@ 0xff
 800853a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800853e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008542:	f7ff be83 	b.w	800824c <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008546:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008548:	2b00      	cmp	r3, #0
 800854a:	d0e7      	beq.n	800851c <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800854c:	4630      	mov	r0, r6
 800854e:	f001 f935 	bl	80097bc <xTaskRemoveFromEventList>
 8008552:	b108      	cbz	r0, 8008558 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008554:	f001 f9c2 	bl	80098dc <vTaskMissedYield>
			--cTxLock;
 8008558:	3d01      	subs	r5, #1
 800855a:	b26d      	sxtb	r5, r5
 800855c:	e7dc      	b.n	8008518 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800855e:	6923      	ldr	r3, [r4, #16]
 8008560:	2b00      	cmp	r3, #0
 8008562:	d0e9      	beq.n	8008538 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008564:	4630      	mov	r0, r6
 8008566:	f001 f929 	bl	80097bc <xTaskRemoveFromEventList>
 800856a:	b108      	cbz	r0, 8008570 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800856c:	f001 f9b6 	bl	80098dc <vTaskMissedYield>
				--cRxLock;
 8008570:	3d01      	subs	r5, #1
 8008572:	b26d      	sxtb	r5, r5
 8008574:	e7de      	b.n	8008534 <prvUnlockQueue+0x2e>

08008576 <xQueueGenericReset>:
{
 8008576:	b538      	push	{r3, r4, r5, lr}
 8008578:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800857a:	4604      	mov	r4, r0
 800857c:	b950      	cbnz	r0, 8008594 <xQueueGenericReset+0x1e>
 800857e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008582:	b672      	cpsid	i
 8008584:	f383 8811 	msr	BASEPRI, r3
 8008588:	f3bf 8f6f 	isb	sy
 800858c:	f3bf 8f4f 	dsb	sy
 8008590:	b662      	cpsie	i
 8008592:	e7fe      	b.n	8008592 <xQueueGenericReset+0x1c>
	taskENTER_CRITICAL();
 8008594:	f7ff fe36 	bl	8008204 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008598:	6822      	ldr	r2, [r4, #0]
 800859a:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800859e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80085a0:	434b      	muls	r3, r1
 80085a2:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80085a4:	1a5b      	subs	r3, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80085a6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80085a8:	441a      	add	r2, r3
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80085aa:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 80085ac:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80085ae:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80085b0:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80085b2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80085b6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 80085ba:	b9a5      	cbnz	r5, 80085e6 <xQueueGenericReset+0x70>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80085bc:	6923      	ldr	r3, [r4, #16]
 80085be:	b173      	cbz	r3, 80085de <xQueueGenericReset+0x68>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80085c0:	f104 0010 	add.w	r0, r4, #16
 80085c4:	f001 f8fa 	bl	80097bc <xTaskRemoveFromEventList>
 80085c8:	b148      	cbz	r0, 80085de <xQueueGenericReset+0x68>
					queueYIELD_IF_USING_PREEMPTION();
 80085ca:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80085ce:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80085d2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80085d6:	f3bf 8f4f 	dsb	sy
 80085da:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 80085de:	f7ff fe35 	bl	800824c <vPortExitCritical>
}
 80085e2:	2001      	movs	r0, #1
 80085e4:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80085e6:	f104 0010 	add.w	r0, r4, #16
 80085ea:	f7ff fd65 	bl	80080b8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80085ee:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80085f2:	f7ff fd61 	bl	80080b8 <vListInitialise>
 80085f6:	e7f2      	b.n	80085de <xQueueGenericReset+0x68>

080085f8 <xQueueGenericCreateStatic.part.0>:
	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType )
 80085f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80085fa:	460d      	mov	r5, r1
		configASSERT( pxStaticQueue != NULL );
 80085fc:	461c      	mov	r4, r3
 80085fe:	b953      	cbnz	r3, 8008616 <xQueueGenericCreateStatic.part.0+0x1e>
 8008600:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008604:	b672      	cpsid	i
 8008606:	f383 8811 	msr	BASEPRI, r3
 800860a:	f3bf 8f6f 	isb	sy
 800860e:	f3bf 8f4f 	dsb	sy
 8008612:	b662      	cpsie	i
 8008614:	e7fe      	b.n	8008614 <xQueueGenericCreateStatic.part.0+0x1c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008616:	b15a      	cbz	r2, 8008630 <xQueueGenericCreateStatic.part.0+0x38>
 8008618:	b9b1      	cbnz	r1, 8008648 <xQueueGenericCreateStatic.part.0+0x50>
 800861a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800861e:	b672      	cpsid	i
 8008620:	f383 8811 	msr	BASEPRI, r3
 8008624:	f3bf 8f6f 	isb	sy
 8008628:	f3bf 8f4f 	dsb	sy
 800862c:	b662      	cpsie	i
 800862e:	e7fe      	b.n	800862e <xQueueGenericCreateStatic.part.0+0x36>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008630:	b151      	cbz	r1, 8008648 <xQueueGenericCreateStatic.part.0+0x50>
 8008632:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008636:	b672      	cpsid	i
 8008638:	f383 8811 	msr	BASEPRI, r3
 800863c:	f3bf 8f6f 	isb	sy
 8008640:	f3bf 8f4f 	dsb	sy
 8008644:	b662      	cpsie	i
 8008646:	e7fe      	b.n	8008646 <xQueueGenericCreateStatic.part.0+0x4e>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008648:	2350      	movs	r3, #80	@ 0x50
 800864a:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800864c:	9b01      	ldr	r3, [sp, #4]
 800864e:	2b50      	cmp	r3, #80	@ 0x50
 8008650:	d00a      	beq.n	8008668 <xQueueGenericCreateStatic.part.0+0x70>
 8008652:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008656:	b672      	cpsid	i
 8008658:	f383 8811 	msr	BASEPRI, r3
 800865c:	f3bf 8f6f 	isb	sy
 8008660:	f3bf 8f4f 	dsb	sy
 8008664:	b662      	cpsie	i
 8008666:	e7fe      	b.n	8008666 <xQueueGenericCreateStatic.part.0+0x6e>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008668:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800866a:	2d00      	cmp	r5, #0
 800866c:	bf08      	it	eq
 800866e:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8008670:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008672:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008676:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8008678:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800867c:	4620      	mov	r0, r4
 800867e:	f7ff ff7a 	bl	8008576 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008682:	f89d 3018 	ldrb.w	r3, [sp, #24]
	}
 8008686:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8008688:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 800868c:	b003      	add	sp, #12
 800868e:	bd30      	pop	{r4, r5, pc}

08008690 <xQueueGenericCreateStatic>:
	{
 8008690:	b410      	push	{r4}
 8008692:	f89d 4004 	ldrb.w	r4, [sp, #4]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008696:	b950      	cbnz	r0, 80086ae <xQueueGenericCreateStatic+0x1e>
 8008698:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800869c:	b672      	cpsid	i
 800869e:	f383 8811 	msr	BASEPRI, r3
 80086a2:	f3bf 8f6f 	isb	sy
 80086a6:	f3bf 8f4f 	dsb	sy
 80086aa:	b662      	cpsie	i
 80086ac:	e7fe      	b.n	80086ac <xQueueGenericCreateStatic+0x1c>
 80086ae:	9401      	str	r4, [sp, #4]
	}
 80086b0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80086b4:	f7ff bfa0 	b.w	80085f8 <xQueueGenericCreateStatic.part.0>

080086b8 <xQueueGenericCreate>:
	{
 80086b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80086ba:	460d      	mov	r5, r1
 80086bc:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80086be:	4606      	mov	r6, r0
 80086c0:	b950      	cbnz	r0, 80086d8 <xQueueGenericCreate+0x20>
 80086c2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80086c6:	b672      	cpsid	i
 80086c8:	f383 8811 	msr	BASEPRI, r3
 80086cc:	f3bf 8f6f 	isb	sy
 80086d0:	f3bf 8f4f 	dsb	sy
 80086d4:	b662      	cpsie	i
 80086d6:	e7fe      	b.n	80086d6 <xQueueGenericCreate+0x1e>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80086d8:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80086da:	3050      	adds	r0, #80	@ 0x50
 80086dc:	f7ff fc1a 	bl	8007f14 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80086e0:	4604      	mov	r4, r0
 80086e2:	b170      	cbz	r0, 8008702 <xQueueGenericCreate+0x4a>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80086e4:	2300      	movs	r3, #0
 80086e6:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80086ea:	b165      	cbz	r5, 8008706 <xQueueGenericCreate+0x4e>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80086ec:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80086f0:	2101      	movs	r1, #1
 80086f2:	4620      	mov	r0, r4
 80086f4:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 80086f6:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80086fa:	f7ff ff3c 	bl	8008576 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80086fe:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8008702:	4620      	mov	r0, r4
 8008704:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008706:	4603      	mov	r3, r0
 8008708:	e7f2      	b.n	80086f0 <xQueueGenericCreate+0x38>

0800870a <xQueueCreateCountingSemaphoreStatic>:
	{
 800870a:	b513      	push	{r0, r1, r4, lr}
 800870c:	4613      	mov	r3, r2
 800870e:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008710:	b950      	cbnz	r0, 8008728 <xQueueCreateCountingSemaphoreStatic+0x1e>
 8008712:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008716:	b672      	cpsid	i
 8008718:	f383 8811 	msr	BASEPRI, r3
 800871c:	f3bf 8f6f 	isb	sy
 8008720:	f3bf 8f4f 	dsb	sy
 8008724:	b662      	cpsie	i
 8008726:	e7fe      	b.n	8008726 <xQueueCreateCountingSemaphoreStatic+0x1c>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008728:	4288      	cmp	r0, r1
 800872a:	d20a      	bcs.n	8008742 <xQueueCreateCountingSemaphoreStatic+0x38>
 800872c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008730:	b672      	cpsid	i
 8008732:	f383 8811 	msr	BASEPRI, r3
 8008736:	f3bf 8f6f 	isb	sy
 800873a:	f3bf 8f4f 	dsb	sy
 800873e:	b662      	cpsie	i
 8008740:	e7fe      	b.n	8008740 <xQueueCreateCountingSemaphoreStatic+0x36>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008742:	2202      	movs	r2, #2
 8008744:	9200      	str	r2, [sp, #0]
 8008746:	2200      	movs	r2, #0
 8008748:	4611      	mov	r1, r2
 800874a:	f7ff ffa1 	bl	8008690 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800874e:	b100      	cbz	r0, 8008752 <xQueueCreateCountingSemaphoreStatic+0x48>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008750:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008752:	b002      	add	sp, #8
 8008754:	bd10      	pop	{r4, pc}

08008756 <xQueueCreateCountingSemaphore>:
	{
 8008756:	b510      	push	{r4, lr}
 8008758:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800875a:	b950      	cbnz	r0, 8008772 <xQueueCreateCountingSemaphore+0x1c>
 800875c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008760:	b672      	cpsid	i
 8008762:	f383 8811 	msr	BASEPRI, r3
 8008766:	f3bf 8f6f 	isb	sy
 800876a:	f3bf 8f4f 	dsb	sy
 800876e:	b662      	cpsie	i
 8008770:	e7fe      	b.n	8008770 <xQueueCreateCountingSemaphore+0x1a>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008772:	4288      	cmp	r0, r1
 8008774:	d20a      	bcs.n	800878c <xQueueCreateCountingSemaphore+0x36>
 8008776:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800877a:	b672      	cpsid	i
 800877c:	f383 8811 	msr	BASEPRI, r3
 8008780:	f3bf 8f6f 	isb	sy
 8008784:	f3bf 8f4f 	dsb	sy
 8008788:	b662      	cpsie	i
 800878a:	e7fe      	b.n	800878a <xQueueCreateCountingSemaphore+0x34>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800878c:	2202      	movs	r2, #2
 800878e:	2100      	movs	r1, #0
 8008790:	f7ff ff92 	bl	80086b8 <xQueueGenericCreate>
		if( xHandle != NULL )
 8008794:	b100      	cbz	r0, 8008798 <xQueueCreateCountingSemaphore+0x42>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008796:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008798:	bd10      	pop	{r4, pc}

0800879a <xQueueGenericSend>:
{
 800879a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800879e:	460f      	mov	r7, r1
 80087a0:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 80087a2:	4604      	mov	r4, r0
{
 80087a4:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 80087a6:	b950      	cbnz	r0, 80087be <xQueueGenericSend+0x24>
 80087a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087ac:	b672      	cpsid	i
 80087ae:	f383 8811 	msr	BASEPRI, r3
 80087b2:	f3bf 8f6f 	isb	sy
 80087b6:	f3bf 8f4f 	dsb	sy
 80087ba:	b662      	cpsie	i
 80087bc:	e7fe      	b.n	80087bc <xQueueGenericSend+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80087be:	b961      	cbnz	r1, 80087da <xQueueGenericSend+0x40>
 80087c0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80087c2:	b153      	cbz	r3, 80087da <xQueueGenericSend+0x40>
 80087c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087c8:	b672      	cpsid	i
 80087ca:	f383 8811 	msr	BASEPRI, r3
 80087ce:	f3bf 8f6f 	isb	sy
 80087d2:	f3bf 8f4f 	dsb	sy
 80087d6:	b662      	cpsie	i
 80087d8:	e7fe      	b.n	80087d8 <xQueueGenericSend+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80087da:	2e02      	cmp	r6, #2
 80087dc:	d10d      	bne.n	80087fa <xQueueGenericSend+0x60>
 80087de:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80087e0:	2b01      	cmp	r3, #1
 80087e2:	d00a      	beq.n	80087fa <xQueueGenericSend+0x60>
 80087e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087e8:	b672      	cpsid	i
 80087ea:	f383 8811 	msr	BASEPRI, r3
 80087ee:	f3bf 8f6f 	isb	sy
 80087f2:	f3bf 8f4f 	dsb	sy
 80087f6:	b662      	cpsie	i
 80087f8:	e7fe      	b.n	80087f8 <xQueueGenericSend+0x5e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80087fa:	f001 f87b 	bl	80098f4 <xTaskGetSchedulerState>
 80087fe:	4605      	mov	r5, r0
 8008800:	b330      	cbz	r0, 8008850 <xQueueGenericSend+0xb6>
 8008802:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008804:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008808:	f7ff fcfc 	bl	8008204 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800880c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800880e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008810:	429a      	cmp	r2, r3
 8008812:	d301      	bcc.n	8008818 <xQueueGenericSend+0x7e>
 8008814:	2e02      	cmp	r6, #2
 8008816:	d129      	bne.n	800886c <xQueueGenericSend+0xd2>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008818:	4632      	mov	r2, r6
 800881a:	4639      	mov	r1, r7
 800881c:	4620      	mov	r0, r4
 800881e:	f7ff fe2a 	bl	8008476 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008822:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008824:	b11b      	cbz	r3, 800882e <xQueueGenericSend+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008826:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800882a:	f000 ffc7 	bl	80097bc <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800882e:	b148      	cbz	r0, 8008844 <xQueueGenericSend+0xaa>
						queueYIELD_IF_USING_PREEMPTION();
 8008830:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008834:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008838:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800883c:	f3bf 8f4f 	dsb	sy
 8008840:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008844:	f7ff fd02 	bl	800824c <vPortExitCritical>
				return pdPASS;
 8008848:	2001      	movs	r0, #1
}
 800884a:	b004      	add	sp, #16
 800884c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008850:	9b01      	ldr	r3, [sp, #4]
 8008852:	2b00      	cmp	r3, #0
 8008854:	d0d6      	beq.n	8008804 <xQueueGenericSend+0x6a>
 8008856:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800885a:	b672      	cpsid	i
 800885c:	f383 8811 	msr	BASEPRI, r3
 8008860:	f3bf 8f6f 	isb	sy
 8008864:	f3bf 8f4f 	dsb	sy
 8008868:	b662      	cpsie	i
 800886a:	e7fe      	b.n	800886a <xQueueGenericSend+0xd0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800886c:	9b01      	ldr	r3, [sp, #4]
 800886e:	b91b      	cbnz	r3, 8008878 <xQueueGenericSend+0xde>
					taskEXIT_CRITICAL();
 8008870:	f7ff fcec 	bl	800824c <vPortExitCritical>
					return errQUEUE_FULL;
 8008874:	2000      	movs	r0, #0
 8008876:	e7e8      	b.n	800884a <xQueueGenericSend+0xb0>
				else if( xEntryTimeSet == pdFALSE )
 8008878:	b915      	cbnz	r5, 8008880 <xQueueGenericSend+0xe6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800887a:	a802      	add	r0, sp, #8
 800887c:	f000 ffe2 	bl	8009844 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008880:	f7ff fce4 	bl	800824c <vPortExitCritical>
		vTaskSuspendAll();
 8008884:	f000 fd68 	bl	8009358 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008888:	f7ff fcbc 	bl	8008204 <vPortEnterCritical>
 800888c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008890:	2bff      	cmp	r3, #255	@ 0xff
 8008892:	d101      	bne.n	8008898 <xQueueGenericSend+0xfe>
 8008894:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
 8008898:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800889c:	2bff      	cmp	r3, #255	@ 0xff
 800889e:	d101      	bne.n	80088a4 <xQueueGenericSend+0x10a>
 80088a0:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
 80088a4:	f7ff fcd2 	bl	800824c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80088a8:	a901      	add	r1, sp, #4
 80088aa:	a802      	add	r0, sp, #8
 80088ac:	f000 ffd6 	bl	800985c <xTaskCheckForTimeOut>
 80088b0:	bb38      	cbnz	r0, 8008902 <xQueueGenericSend+0x168>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80088b2:	f7ff fca7 	bl	8008204 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80088b6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80088b8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80088ba:	429a      	cmp	r2, r3
 80088bc:	d10e      	bne.n	80088dc <xQueueGenericSend+0x142>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80088be:	f7ff fcc5 	bl	800824c <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80088c2:	9901      	ldr	r1, [sp, #4]
 80088c4:	f104 0010 	add.w	r0, r4, #16
 80088c8:	f000 ff3c 	bl	8009744 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80088cc:	4620      	mov	r0, r4
 80088ce:	f7ff fe1a 	bl	8008506 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80088d2:	f000 fde7 	bl	80094a4 <xTaskResumeAll>
 80088d6:	b148      	cbz	r0, 80088ec <xQueueGenericSend+0x152>
 80088d8:	2501      	movs	r5, #1
 80088da:	e795      	b.n	8008808 <xQueueGenericSend+0x6e>
	taskEXIT_CRITICAL();
 80088dc:	f7ff fcb6 	bl	800824c <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80088e0:	4620      	mov	r0, r4
 80088e2:	f7ff fe10 	bl	8008506 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80088e6:	f000 fddd 	bl	80094a4 <xTaskResumeAll>
 80088ea:	e7f5      	b.n	80088d8 <xQueueGenericSend+0x13e>
					portYIELD_WITHIN_API();
 80088ec:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80088f0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80088f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80088f8:	f3bf 8f4f 	dsb	sy
 80088fc:	f3bf 8f6f 	isb	sy
 8008900:	e7ea      	b.n	80088d8 <xQueueGenericSend+0x13e>
			prvUnlockQueue( pxQueue );
 8008902:	4620      	mov	r0, r4
 8008904:	f7ff fdff 	bl	8008506 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008908:	f000 fdcc 	bl	80094a4 <xTaskResumeAll>
			return errQUEUE_FULL;
 800890c:	e7b2      	b.n	8008874 <xQueueGenericSend+0xda>

0800890e <xQueueCreateMutexStatic>:
		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueType );
 800890e:	2200      	movs	r2, #0
	{
 8008910:	460b      	mov	r3, r1
 8008912:	b513      	push	{r0, r1, r4, lr}
 8008914:	4611      	mov	r1, r2
 8008916:	9000      	str	r0, [sp, #0]
 8008918:	2001      	movs	r0, #1
 800891a:	f7ff fe6d 	bl	80085f8 <xQueueGenericCreateStatic.part.0>
		if( pxNewQueue != NULL )
 800891e:	4604      	mov	r4, r0
 8008920:	b138      	cbz	r0, 8008932 <xQueueCreateMutexStatic+0x24>
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 8008922:	2300      	movs	r3, #0
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 8008924:	461a      	mov	r2, r3
 8008926:	4619      	mov	r1, r3
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 8008928:	6083      	str	r3, [r0, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 800892a:	6003      	str	r3, [r0, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 800892c:	60c3      	str	r3, [r0, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 800892e:	f7ff ff34 	bl	800879a <xQueueGenericSend>
	}
 8008932:	4620      	mov	r0, r4
 8008934:	b002      	add	sp, #8
 8008936:	bd10      	pop	{r4, pc}

08008938 <xQueueGiveMutexRecursive>:
	{
 8008938:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
 800893a:	4604      	mov	r4, r0
 800893c:	b950      	cbnz	r0, 8008954 <xQueueGiveMutexRecursive+0x1c>
 800893e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008942:	b672      	cpsid	i
 8008944:	f383 8811 	msr	BASEPRI, r3
 8008948:	f3bf 8f6f 	isb	sy
 800894c:	f3bf 8f4f 	dsb	sy
 8008950:	b662      	cpsie	i
 8008952:	e7fe      	b.n	8008952 <xQueueGiveMutexRecursive+0x1a>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 8008954:	6885      	ldr	r5, [r0, #8]
 8008956:	f000 ffc7 	bl	80098e8 <xTaskGetCurrentTaskHandle>
 800895a:	4285      	cmp	r5, r0
 800895c:	d10b      	bne.n	8008976 <xQueueGiveMutexRecursive+0x3e>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 800895e:	68e3      	ldr	r3, [r4, #12]
 8008960:	3b01      	subs	r3, #1
 8008962:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 8008964:	b10b      	cbz	r3, 800896a <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
 8008966:	2001      	movs	r0, #1
	}
 8008968:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 800896a:	461a      	mov	r2, r3
 800896c:	4619      	mov	r1, r3
 800896e:	4620      	mov	r0, r4
 8008970:	f7ff ff13 	bl	800879a <xQueueGenericSend>
 8008974:	e7f7      	b.n	8008966 <xQueueGiveMutexRecursive+0x2e>
			xReturn = pdFAIL;
 8008976:	2000      	movs	r0, #0
		return xReturn;
 8008978:	e7f6      	b.n	8008968 <xQueueGiveMutexRecursive+0x30>

0800897a <xQueueCreateMutex>:
	{
 800897a:	b570      	push	{r4, r5, r6, lr}
 800897c:	4606      	mov	r6, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800897e:	2050      	movs	r0, #80	@ 0x50
 8008980:	f7ff fac8 	bl	8007f14 <pvPortMalloc>
 8008984:	4604      	mov	r4, r0
		if( pxNewQueue != NULL )
 8008986:	b198      	cbz	r0, 80089b0 <xQueueCreateMutex+0x36>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008988:	2500      	movs	r5, #0
	pxNewQueue->uxLength = uxQueueLength;
 800898a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800898c:	6000      	str	r0, [r0, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800898e:	f880 5046 	strb.w	r5, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
 8008992:	e9c0 150f 	strd	r1, r5, [r0, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008996:	f7ff fdee 	bl	8008576 <xQueueGenericReset>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 800899a:	462b      	mov	r3, r5
 800899c:	462a      	mov	r2, r5
 800899e:	4629      	mov	r1, r5
 80089a0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 80089a2:	f884 604c 	strb.w	r6, [r4, #76]	@ 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 80089a6:	60a5      	str	r5, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 80089a8:	6025      	str	r5, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 80089aa:	60e5      	str	r5, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 80089ac:	f7ff fef5 	bl	800879a <xQueueGenericSend>
	}
 80089b0:	4620      	mov	r0, r4
 80089b2:	bd70      	pop	{r4, r5, r6, pc}

080089b4 <xQueueGenericSendFromISR>:
{
 80089b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80089b8:	4689      	mov	r9, r1
 80089ba:	4617      	mov	r7, r2
 80089bc:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 80089be:	4604      	mov	r4, r0
 80089c0:	b950      	cbnz	r0, 80089d8 <xQueueGenericSendFromISR+0x24>
 80089c2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089c6:	b672      	cpsid	i
 80089c8:	f383 8811 	msr	BASEPRI, r3
 80089cc:	f3bf 8f6f 	isb	sy
 80089d0:	f3bf 8f4f 	dsb	sy
 80089d4:	b662      	cpsie	i
 80089d6:	e7fe      	b.n	80089d6 <xQueueGenericSendFromISR+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80089d8:	b961      	cbnz	r1, 80089f4 <xQueueGenericSendFromISR+0x40>
 80089da:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80089dc:	b153      	cbz	r3, 80089f4 <xQueueGenericSendFromISR+0x40>
 80089de:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089e2:	b672      	cpsid	i
 80089e4:	f383 8811 	msr	BASEPRI, r3
 80089e8:	f3bf 8f6f 	isb	sy
 80089ec:	f3bf 8f4f 	dsb	sy
 80089f0:	b662      	cpsie	i
 80089f2:	e7fe      	b.n	80089f2 <xQueueGenericSendFromISR+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80089f4:	2e02      	cmp	r6, #2
 80089f6:	d10d      	bne.n	8008a14 <xQueueGenericSendFromISR+0x60>
 80089f8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80089fa:	2b01      	cmp	r3, #1
 80089fc:	d00a      	beq.n	8008a14 <xQueueGenericSendFromISR+0x60>
 80089fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a02:	b672      	cpsid	i
 8008a04:	f383 8811 	msr	BASEPRI, r3
 8008a08:	f3bf 8f6f 	isb	sy
 8008a0c:	f3bf 8f4f 	dsb	sy
 8008a10:	b662      	cpsie	i
 8008a12:	e7fe      	b.n	8008a12 <xQueueGenericSendFromISR+0x5e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008a14:	f7ff fcf2 	bl	80083fc <vPortValidateInterruptPriority>
	__asm volatile
 8008a18:	f3ef 8811 	mrs	r8, BASEPRI
 8008a1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a20:	b672      	cpsid	i
 8008a22:	f383 8811 	msr	BASEPRI, r3
 8008a26:	f3bf 8f6f 	isb	sy
 8008a2a:	f3bf 8f4f 	dsb	sy
 8008a2e:	b662      	cpsie	i
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008a30:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008a32:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008a34:	429a      	cmp	r2, r3
 8008a36:	d301      	bcc.n	8008a3c <xQueueGenericSendFromISR+0x88>
 8008a38:	2e02      	cmp	r6, #2
 8008a3a:	d11d      	bne.n	8008a78 <xQueueGenericSendFromISR+0xc4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008a3c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008a40:	4632      	mov	r2, r6
 8008a42:	4649      	mov	r1, r9
 8008a44:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 8008a46:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008a48:	f7ff fd15 	bl	8008476 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008a4c:	1c6b      	adds	r3, r5, #1
 8008a4e:	d10e      	bne.n	8008a6e <xQueueGenericSendFromISR+0xba>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008a50:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008a52:	b13b      	cbz	r3, 8008a64 <xQueueGenericSendFromISR+0xb0>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008a54:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008a58:	f000 feb0 	bl	80097bc <xTaskRemoveFromEventList>
 8008a5c:	b110      	cbz	r0, 8008a64 <xQueueGenericSendFromISR+0xb0>
							if( pxHigherPriorityTaskWoken != NULL )
 8008a5e:	b10f      	cbz	r7, 8008a64 <xQueueGenericSendFromISR+0xb0>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008a60:	2301      	movs	r3, #1
 8008a62:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8008a64:	2001      	movs	r0, #1
	__asm volatile
 8008a66:	f388 8811 	msr	BASEPRI, r8
}
 8008a6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008a6e:	3501      	adds	r5, #1
 8008a70:	b26d      	sxtb	r5, r5
 8008a72:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8008a76:	e7f5      	b.n	8008a64 <xQueueGenericSendFromISR+0xb0>
			xReturn = errQUEUE_FULL;
 8008a78:	2000      	movs	r0, #0
 8008a7a:	e7f4      	b.n	8008a66 <xQueueGenericSendFromISR+0xb2>

08008a7c <xQueueGiveFromISR>:
{
 8008a7c:	b570      	push	{r4, r5, r6, lr}
 8008a7e:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008a80:	4604      	mov	r4, r0
 8008a82:	b950      	cbnz	r0, 8008a9a <xQueueGiveFromISR+0x1e>
	__asm volatile
 8008a84:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a88:	b672      	cpsid	i
 8008a8a:	f383 8811 	msr	BASEPRI, r3
 8008a8e:	f3bf 8f6f 	isb	sy
 8008a92:	f3bf 8f4f 	dsb	sy
 8008a96:	b662      	cpsie	i
 8008a98:	e7fe      	b.n	8008a98 <xQueueGiveFromISR+0x1c>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008a9a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008a9c:	b153      	cbz	r3, 8008ab4 <xQueueGiveFromISR+0x38>
 8008a9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008aa2:	b672      	cpsid	i
 8008aa4:	f383 8811 	msr	BASEPRI, r3
 8008aa8:	f3bf 8f6f 	isb	sy
 8008aac:	f3bf 8f4f 	dsb	sy
 8008ab0:	b662      	cpsie	i
 8008ab2:	e7fe      	b.n	8008ab2 <xQueueGiveFromISR+0x36>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008ab4:	6803      	ldr	r3, [r0, #0]
 8008ab6:	b963      	cbnz	r3, 8008ad2 <xQueueGiveFromISR+0x56>
 8008ab8:	6883      	ldr	r3, [r0, #8]
 8008aba:	b153      	cbz	r3, 8008ad2 <xQueueGiveFromISR+0x56>
 8008abc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ac0:	b672      	cpsid	i
 8008ac2:	f383 8811 	msr	BASEPRI, r3
 8008ac6:	f3bf 8f6f 	isb	sy
 8008aca:	f3bf 8f4f 	dsb	sy
 8008ace:	b662      	cpsie	i
 8008ad0:	e7fe      	b.n	8008ad0 <xQueueGiveFromISR+0x54>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008ad2:	f7ff fc93 	bl	80083fc <vPortValidateInterruptPriority>
	__asm volatile
 8008ad6:	f3ef 8611 	mrs	r6, BASEPRI
 8008ada:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ade:	b672      	cpsid	i
 8008ae0:	f383 8811 	msr	BASEPRI, r3
 8008ae4:	f3bf 8f6f 	isb	sy
 8008ae8:	f3bf 8f4f 	dsb	sy
 8008aec:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008aee:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008af0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008af2:	4293      	cmp	r3, r2
 8008af4:	d919      	bls.n	8008b2a <xQueueGiveFromISR+0xae>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008af6:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008afa:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008afc:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008afe:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008b00:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8008b02:	d10d      	bne.n	8008b20 <xQueueGiveFromISR+0xa4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008b04:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008b06:	b13b      	cbz	r3, 8008b18 <xQueueGiveFromISR+0x9c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008b08:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008b0c:	f000 fe56 	bl	80097bc <xTaskRemoveFromEventList>
 8008b10:	b110      	cbz	r0, 8008b18 <xQueueGiveFromISR+0x9c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008b12:	b10d      	cbz	r5, 8008b18 <xQueueGiveFromISR+0x9c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008b14:	2301      	movs	r3, #1
 8008b16:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 8008b18:	2001      	movs	r0, #1
	__asm volatile
 8008b1a:	f386 8811 	msr	BASEPRI, r6
}
 8008b1e:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008b20:	3301      	adds	r3, #1
 8008b22:	b25b      	sxtb	r3, r3
 8008b24:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8008b28:	e7f6      	b.n	8008b18 <xQueueGiveFromISR+0x9c>
			xReturn = errQUEUE_FULL;
 8008b2a:	2000      	movs	r0, #0
 8008b2c:	e7f5      	b.n	8008b1a <xQueueGiveFromISR+0x9e>

08008b2e <xQueueReceive>:
{
 8008b2e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008b32:	460e      	mov	r6, r1
	configASSERT( ( pxQueue ) );
 8008b34:	4604      	mov	r4, r0
{
 8008b36:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008b38:	b950      	cbnz	r0, 8008b50 <xQueueReceive+0x22>
	__asm volatile
 8008b3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b3e:	b672      	cpsid	i
 8008b40:	f383 8811 	msr	BASEPRI, r3
 8008b44:	f3bf 8f6f 	isb	sy
 8008b48:	f3bf 8f4f 	dsb	sy
 8008b4c:	b662      	cpsie	i
 8008b4e:	e7fe      	b.n	8008b4e <xQueueReceive+0x20>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008b50:	b961      	cbnz	r1, 8008b6c <xQueueReceive+0x3e>
 8008b52:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008b54:	b153      	cbz	r3, 8008b6c <xQueueReceive+0x3e>
 8008b56:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b5a:	b672      	cpsid	i
 8008b5c:	f383 8811 	msr	BASEPRI, r3
 8008b60:	f3bf 8f6f 	isb	sy
 8008b64:	f3bf 8f4f 	dsb	sy
 8008b68:	b662      	cpsie	i
 8008b6a:	e7fe      	b.n	8008b6a <xQueueReceive+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008b6c:	f000 fec2 	bl	80098f4 <xTaskGetSchedulerState>
 8008b70:	4605      	mov	r5, r0
 8008b72:	b318      	cbz	r0, 8008bbc <xQueueReceive+0x8e>
 8008b74:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008b76:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008b7a:	f7ff fb43 	bl	8008204 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008b7e:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008b80:	b357      	cbz	r7, 8008bd8 <xQueueReceive+0xaa>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008b82:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008b84:	4631      	mov	r1, r6
 8008b86:	4620      	mov	r0, r4
 8008b88:	f7ff fca8 	bl	80084dc <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008b8c:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008b8e:	6923      	ldr	r3, [r4, #16]
 8008b90:	b173      	cbz	r3, 8008bb0 <xQueueReceive+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008b92:	f104 0010 	add.w	r0, r4, #16
 8008b96:	f000 fe11 	bl	80097bc <xTaskRemoveFromEventList>
 8008b9a:	b148      	cbz	r0, 8008bb0 <xQueueReceive+0x82>
						queueYIELD_IF_USING_PREEMPTION();
 8008b9c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008ba0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008ba4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008ba8:	f3bf 8f4f 	dsb	sy
 8008bac:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008bb0:	f7ff fb4c 	bl	800824c <vPortExitCritical>
				return pdPASS;
 8008bb4:	2001      	movs	r0, #1
}
 8008bb6:	b004      	add	sp, #16
 8008bb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008bbc:	9b01      	ldr	r3, [sp, #4]
 8008bbe:	2b00      	cmp	r3, #0
 8008bc0:	d0d9      	beq.n	8008b76 <xQueueReceive+0x48>
 8008bc2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008bc6:	b672      	cpsid	i
 8008bc8:	f383 8811 	msr	BASEPRI, r3
 8008bcc:	f3bf 8f6f 	isb	sy
 8008bd0:	f3bf 8f4f 	dsb	sy
 8008bd4:	b662      	cpsie	i
 8008bd6:	e7fe      	b.n	8008bd6 <xQueueReceive+0xa8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008bd8:	9b01      	ldr	r3, [sp, #4]
 8008bda:	b91b      	cbnz	r3, 8008be4 <xQueueReceive+0xb6>
					taskEXIT_CRITICAL();
 8008bdc:	f7ff fb36 	bl	800824c <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008be0:	2000      	movs	r0, #0
 8008be2:	e7e8      	b.n	8008bb6 <xQueueReceive+0x88>
				else if( xEntryTimeSet == pdFALSE )
 8008be4:	b915      	cbnz	r5, 8008bec <xQueueReceive+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008be6:	a802      	add	r0, sp, #8
 8008be8:	f000 fe2c 	bl	8009844 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008bec:	f7ff fb2e 	bl	800824c <vPortExitCritical>
		vTaskSuspendAll();
 8008bf0:	f000 fbb2 	bl	8009358 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008bf4:	f7ff fb06 	bl	8008204 <vPortEnterCritical>
 8008bf8:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008bfc:	2bff      	cmp	r3, #255	@ 0xff
 8008bfe:	d101      	bne.n	8008c04 <xQueueReceive+0xd6>
 8008c00:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
 8008c04:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008c08:	2bff      	cmp	r3, #255	@ 0xff
 8008c0a:	d101      	bne.n	8008c10 <xQueueReceive+0xe2>
 8008c0c:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
 8008c10:	f7ff fb1c 	bl	800824c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008c14:	a901      	add	r1, sp, #4
 8008c16:	a802      	add	r0, sp, #8
 8008c18:	f000 fe20 	bl	800985c <xTaskCheckForTimeOut>
 8008c1c:	bb00      	cbnz	r0, 8008c60 <xQueueReceive+0x132>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008c1e:	4620      	mov	r0, r4
 8008c20:	f7ff fc1e 	bl	8008460 <prvIsQueueEmpty>
 8008c24:	b1b0      	cbz	r0, 8008c54 <xQueueReceive+0x126>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008c26:	9901      	ldr	r1, [sp, #4]
 8008c28:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008c2c:	f000 fd8a 	bl	8009744 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008c30:	4620      	mov	r0, r4
 8008c32:	f7ff fc68 	bl	8008506 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008c36:	f000 fc35 	bl	80094a4 <xTaskResumeAll>
 8008c3a:	b948      	cbnz	r0, 8008c50 <xQueueReceive+0x122>
					portYIELD_WITHIN_API();
 8008c3c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008c40:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008c44:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008c48:	f3bf 8f4f 	dsb	sy
 8008c4c:	f3bf 8f6f 	isb	sy
 8008c50:	2501      	movs	r5, #1
 8008c52:	e792      	b.n	8008b7a <xQueueReceive+0x4c>
				prvUnlockQueue( pxQueue );
 8008c54:	4620      	mov	r0, r4
 8008c56:	f7ff fc56 	bl	8008506 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008c5a:	f000 fc23 	bl	80094a4 <xTaskResumeAll>
 8008c5e:	e7f7      	b.n	8008c50 <xQueueReceive+0x122>
			prvUnlockQueue( pxQueue );
 8008c60:	4620      	mov	r0, r4
 8008c62:	f7ff fc50 	bl	8008506 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008c66:	f000 fc1d 	bl	80094a4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008c6a:	4620      	mov	r0, r4
 8008c6c:	f7ff fbf8 	bl	8008460 <prvIsQueueEmpty>
 8008c70:	2800      	cmp	r0, #0
 8008c72:	d0ed      	beq.n	8008c50 <xQueueReceive+0x122>
 8008c74:	e7b4      	b.n	8008be0 <xQueueReceive+0xb2>

08008c76 <xQueueSemaphoreTake>:
{
 8008c76:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008c78:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8008c7a:	4604      	mov	r4, r0
{
 8008c7c:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008c7e:	b950      	cbnz	r0, 8008c96 <xQueueSemaphoreTake+0x20>
 8008c80:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c84:	b672      	cpsid	i
 8008c86:	f383 8811 	msr	BASEPRI, r3
 8008c8a:	f3bf 8f6f 	isb	sy
 8008c8e:	f3bf 8f4f 	dsb	sy
 8008c92:	b662      	cpsie	i
 8008c94:	e7fe      	b.n	8008c94 <xQueueSemaphoreTake+0x1e>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008c96:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8008c98:	b155      	cbz	r5, 8008cb0 <xQueueSemaphoreTake+0x3a>
 8008c9a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c9e:	b672      	cpsid	i
 8008ca0:	f383 8811 	msr	BASEPRI, r3
 8008ca4:	f3bf 8f6f 	isb	sy
 8008ca8:	f3bf 8f4f 	dsb	sy
 8008cac:	b662      	cpsie	i
 8008cae:	e7fe      	b.n	8008cae <xQueueSemaphoreTake+0x38>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008cb0:	f000 fe20 	bl	80098f4 <xTaskGetSchedulerState>
 8008cb4:	4606      	mov	r6, r0
 8008cb6:	b320      	cbz	r0, 8008d02 <xQueueSemaphoreTake+0x8c>
 8008cb8:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8008cba:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 8008cbc:	f7ff faa2 	bl	8008204 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008cc0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008cc2:	b363      	cbz	r3, 8008d1e <xQueueSemaphoreTake+0xa8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008cc4:	3b01      	subs	r3, #1
 8008cc6:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008cc8:	6823      	ldr	r3, [r4, #0]
 8008cca:	b913      	cbnz	r3, 8008cd2 <xQueueSemaphoreTake+0x5c>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8008ccc:	f000 fef8 	bl	8009ac0 <pvTaskIncrementMutexHeldCount>
 8008cd0:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008cd2:	6923      	ldr	r3, [r4, #16]
 8008cd4:	b173      	cbz	r3, 8008cf4 <xQueueSemaphoreTake+0x7e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008cd6:	f104 0010 	add.w	r0, r4, #16
 8008cda:	f000 fd6f 	bl	80097bc <xTaskRemoveFromEventList>
 8008cde:	b148      	cbz	r0, 8008cf4 <xQueueSemaphoreTake+0x7e>
						queueYIELD_IF_USING_PREEMPTION();
 8008ce0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008ce4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008ce8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008cec:	f3bf 8f4f 	dsb	sy
 8008cf0:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008cf4:	f7ff faaa 	bl	800824c <vPortExitCritical>
				return pdPASS;
 8008cf8:	2001      	movs	r0, #1
}
 8008cfa:	b005      	add	sp, #20
 8008cfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008cfe:	4635      	mov	r5, r6
 8008d00:	e7db      	b.n	8008cba <xQueueSemaphoreTake+0x44>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008d02:	9b01      	ldr	r3, [sp, #4]
 8008d04:	2b00      	cmp	r3, #0
 8008d06:	d0fa      	beq.n	8008cfe <xQueueSemaphoreTake+0x88>
 8008d08:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d0c:	b672      	cpsid	i
 8008d0e:	f383 8811 	msr	BASEPRI, r3
 8008d12:	f3bf 8f6f 	isb	sy
 8008d16:	f3bf 8f4f 	dsb	sy
 8008d1a:	b662      	cpsie	i
 8008d1c:	e7fe      	b.n	8008d1c <xQueueSemaphoreTake+0xa6>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008d1e:	9b01      	ldr	r3, [sp, #4]
 8008d20:	b963      	cbnz	r3, 8008d3c <xQueueSemaphoreTake+0xc6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008d22:	2d00      	cmp	r5, #0
 8008d24:	d068      	beq.n	8008df8 <xQueueSemaphoreTake+0x182>
 8008d26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d2a:	b672      	cpsid	i
 8008d2c:	f383 8811 	msr	BASEPRI, r3
 8008d30:	f3bf 8f6f 	isb	sy
 8008d34:	f3bf 8f4f 	dsb	sy
 8008d38:	b662      	cpsie	i
 8008d3a:	e7fe      	b.n	8008d3a <xQueueSemaphoreTake+0xc4>
				else if( xEntryTimeSet == pdFALSE )
 8008d3c:	b916      	cbnz	r6, 8008d44 <xQueueSemaphoreTake+0xce>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008d3e:	a802      	add	r0, sp, #8
 8008d40:	f000 fd80 	bl	8009844 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008d44:	f7ff fa82 	bl	800824c <vPortExitCritical>
		vTaskSuspendAll();
 8008d48:	f000 fb06 	bl	8009358 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008d4c:	f7ff fa5a 	bl	8008204 <vPortEnterCritical>
 8008d50:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008d54:	2bff      	cmp	r3, #255	@ 0xff
 8008d56:	d101      	bne.n	8008d5c <xQueueSemaphoreTake+0xe6>
 8008d58:	f884 7044 	strb.w	r7, [r4, #68]	@ 0x44
 8008d5c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008d60:	2bff      	cmp	r3, #255	@ 0xff
 8008d62:	d101      	bne.n	8008d68 <xQueueSemaphoreTake+0xf2>
 8008d64:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8008d68:	f7ff fa70 	bl	800824c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008d6c:	a901      	add	r1, sp, #4
 8008d6e:	a802      	add	r0, sp, #8
 8008d70:	f000 fd74 	bl	800985c <xTaskCheckForTimeOut>
 8008d74:	bb50      	cbnz	r0, 8008dcc <xQueueSemaphoreTake+0x156>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008d76:	4620      	mov	r0, r4
 8008d78:	f7ff fb72 	bl	8008460 <prvIsQueueEmpty>
 8008d7c:	b300      	cbz	r0, 8008dc0 <xQueueSemaphoreTake+0x14a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008d7e:	6823      	ldr	r3, [r4, #0]
 8008d80:	b93b      	cbnz	r3, 8008d92 <xQueueSemaphoreTake+0x11c>
						taskENTER_CRITICAL();
 8008d82:	f7ff fa3f 	bl	8008204 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008d86:	68a0      	ldr	r0, [r4, #8]
 8008d88:	f000 fdc4 	bl	8009914 <xTaskPriorityInherit>
 8008d8c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8008d8e:	f7ff fa5d 	bl	800824c <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008d92:	9901      	ldr	r1, [sp, #4]
 8008d94:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008d98:	f000 fcd4 	bl	8009744 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008d9c:	4620      	mov	r0, r4
 8008d9e:	f7ff fbb2 	bl	8008506 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008da2:	f000 fb7f 	bl	80094a4 <xTaskResumeAll>
 8008da6:	b948      	cbnz	r0, 8008dbc <xQueueSemaphoreTake+0x146>
					portYIELD_WITHIN_API();
 8008da8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008dac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008db0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008db4:	f3bf 8f4f 	dsb	sy
 8008db8:	f3bf 8f6f 	isb	sy
 8008dbc:	2601      	movs	r6, #1
 8008dbe:	e77d      	b.n	8008cbc <xQueueSemaphoreTake+0x46>
				prvUnlockQueue( pxQueue );
 8008dc0:	4620      	mov	r0, r4
 8008dc2:	f7ff fba0 	bl	8008506 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008dc6:	f000 fb6d 	bl	80094a4 <xTaskResumeAll>
 8008dca:	e7f7      	b.n	8008dbc <xQueueSemaphoreTake+0x146>
			prvUnlockQueue( pxQueue );
 8008dcc:	4620      	mov	r0, r4
 8008dce:	f7ff fb9a 	bl	8008506 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008dd2:	f000 fb67 	bl	80094a4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008dd6:	4620      	mov	r0, r4
 8008dd8:	f7ff fb42 	bl	8008460 <prvIsQueueEmpty>
 8008ddc:	2800      	cmp	r0, #0
 8008dde:	d0ed      	beq.n	8008dbc <xQueueSemaphoreTake+0x146>
					if( xInheritanceOccurred != pdFALSE )
 8008de0:	b165      	cbz	r5, 8008dfc <xQueueSemaphoreTake+0x186>
						taskENTER_CRITICAL();
 8008de2:	f7ff fa0f 	bl	8008204 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8008de6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8008de8:	b119      	cbz	r1, 8008df2 <xQueueSemaphoreTake+0x17c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008dea:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008dec:	6819      	ldr	r1, [r3, #0]
 8008dee:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008df2:	68a0      	ldr	r0, [r4, #8]
 8008df4:	f000 fe12 	bl	8009a1c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 8008df8:	f7ff fa28 	bl	800824c <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008dfc:	2000      	movs	r0, #0
 8008dfe:	e77c      	b.n	8008cfa <xQueueSemaphoreTake+0x84>

08008e00 <xQueueTakeMutexRecursive>:
	{
 8008e00:	b570      	push	{r4, r5, r6, lr}
 8008e02:	460d      	mov	r5, r1
		configASSERT( pxMutex );
 8008e04:	4604      	mov	r4, r0
 8008e06:	b950      	cbnz	r0, 8008e1e <xQueueTakeMutexRecursive+0x1e>
 8008e08:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e0c:	b672      	cpsid	i
 8008e0e:	f383 8811 	msr	BASEPRI, r3
 8008e12:	f3bf 8f6f 	isb	sy
 8008e16:	f3bf 8f4f 	dsb	sy
 8008e1a:	b662      	cpsie	i
 8008e1c:	e7fe      	b.n	8008e1c <xQueueTakeMutexRecursive+0x1c>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 8008e1e:	6886      	ldr	r6, [r0, #8]
 8008e20:	f000 fd62 	bl	80098e8 <xTaskGetCurrentTaskHandle>
 8008e24:	4286      	cmp	r6, r0
 8008e26:	d104      	bne.n	8008e32 <xQueueTakeMutexRecursive+0x32>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 8008e28:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
 8008e2a:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 8008e2c:	3301      	adds	r3, #1
 8008e2e:	60e3      	str	r3, [r4, #12]
	}
 8008e30:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 8008e32:	4629      	mov	r1, r5
 8008e34:	4620      	mov	r0, r4
 8008e36:	f7ff ff1e 	bl	8008c76 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
 8008e3a:	2800      	cmp	r0, #0
 8008e3c:	d0f8      	beq.n	8008e30 <xQueueTakeMutexRecursive+0x30>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 8008e3e:	68e3      	ldr	r3, [r4, #12]
 8008e40:	3301      	adds	r3, #1
 8008e42:	60e3      	str	r3, [r4, #12]
 8008e44:	e7f4      	b.n	8008e30 <xQueueTakeMutexRecursive+0x30>

08008e46 <xQueueReceiveFromISR>:
{
 8008e46:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008e4a:	4689      	mov	r9, r1
 8008e4c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8008e4e:	4604      	mov	r4, r0
 8008e50:	b950      	cbnz	r0, 8008e68 <xQueueReceiveFromISR+0x22>
 8008e52:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e56:	b672      	cpsid	i
 8008e58:	f383 8811 	msr	BASEPRI, r3
 8008e5c:	f3bf 8f6f 	isb	sy
 8008e60:	f3bf 8f4f 	dsb	sy
 8008e64:	b662      	cpsie	i
 8008e66:	e7fe      	b.n	8008e66 <xQueueReceiveFromISR+0x20>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008e68:	b961      	cbnz	r1, 8008e84 <xQueueReceiveFromISR+0x3e>
 8008e6a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008e6c:	b153      	cbz	r3, 8008e84 <xQueueReceiveFromISR+0x3e>
 8008e6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e72:	b672      	cpsid	i
 8008e74:	f383 8811 	msr	BASEPRI, r3
 8008e78:	f3bf 8f6f 	isb	sy
 8008e7c:	f3bf 8f4f 	dsb	sy
 8008e80:	b662      	cpsie	i
 8008e82:	e7fe      	b.n	8008e82 <xQueueReceiveFromISR+0x3c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008e84:	f7ff faba 	bl	80083fc <vPortValidateInterruptPriority>
	__asm volatile
 8008e88:	f3ef 8711 	mrs	r7, BASEPRI
 8008e8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e90:	b672      	cpsid	i
 8008e92:	f383 8811 	msr	BASEPRI, r3
 8008e96:	f3bf 8f6f 	isb	sy
 8008e9a:	f3bf 8f4f 	dsb	sy
 8008e9e:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008ea0:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008ea2:	b30d      	cbz	r5, 8008ee8 <xQueueReceiveFromISR+0xa2>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008ea4:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008ea8:	4649      	mov	r1, r9
 8008eaa:	4620      	mov	r0, r4
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008eac:	3d01      	subs	r5, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 8008eae:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008eb0:	f7ff fb14 	bl	80084dc <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008eb4:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 8008eb6:	1c73      	adds	r3, r6, #1
 8008eb8:	d111      	bne.n	8008ede <xQueueReceiveFromISR+0x98>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008eba:	6923      	ldr	r3, [r4, #16]
 8008ebc:	b153      	cbz	r3, 8008ed4 <xQueueReceiveFromISR+0x8e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008ebe:	f104 0010 	add.w	r0, r4, #16
 8008ec2:	f000 fc7b 	bl	80097bc <xTaskRemoveFromEventList>
 8008ec6:	b128      	cbz	r0, 8008ed4 <xQueueReceiveFromISR+0x8e>
						if( pxHigherPriorityTaskWoken != NULL )
 8008ec8:	f1b8 0f00 	cmp.w	r8, #0
 8008ecc:	d002      	beq.n	8008ed4 <xQueueReceiveFromISR+0x8e>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008ece:	2301      	movs	r3, #1
 8008ed0:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 8008ed4:	2001      	movs	r0, #1
	__asm volatile
 8008ed6:	f387 8811 	msr	BASEPRI, r7
}
 8008eda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008ede:	3601      	adds	r6, #1
 8008ee0:	b276      	sxtb	r6, r6
 8008ee2:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 8008ee6:	e7f5      	b.n	8008ed4 <xQueueReceiveFromISR+0x8e>
			xReturn = pdFAIL;
 8008ee8:	4628      	mov	r0, r5
 8008eea:	e7f4      	b.n	8008ed6 <xQueueReceiveFromISR+0x90>

08008eec <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008eec:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008eee:	4a07      	ldr	r2, [pc, #28]	@ (8008f0c <vQueueAddToRegistry+0x20>)
	{
 8008ef0:	b530      	push	{r4, r5, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008ef2:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8008ef6:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8008efa:	b91d      	cbnz	r5, 8008f04 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008efc:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008f00:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8008f02:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008f04:	3301      	adds	r3, #1
 8008f06:	2b08      	cmp	r3, #8
 8008f08:	d1f3      	bne.n	8008ef2 <vQueueAddToRegistry+0x6>
 8008f0a:	e7fa      	b.n	8008f02 <vQueueAddToRegistry+0x16>
 8008f0c:	20016614 	.word	0x20016614

08008f10 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008f10:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008f12:	4a09      	ldr	r2, [pc, #36]	@ (8008f38 <vQueueUnregisterQueue+0x28>)
	{
 8008f14:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008f16:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 8008f1a:	00dc      	lsls	r4, r3, #3
 8008f1c:	4281      	cmp	r1, r0
 8008f1e:	d106      	bne.n	8008f2e <vQueueUnregisterQueue+0x1e>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008f20:	4a06      	ldr	r2, [pc, #24]	@ (8008f3c <vQueueUnregisterQueue+0x2c>)
 8008f22:	2100      	movs	r1, #0
 8008f24:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008f28:	4422      	add	r2, r4
 8008f2a:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008f2c:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008f2e:	3301      	adds	r3, #1
 8008f30:	2b08      	cmp	r3, #8
 8008f32:	d1f0      	bne.n	8008f16 <vQueueUnregisterQueue+0x6>
 8008f34:	e7fa      	b.n	8008f2c <vQueueUnregisterQueue+0x1c>
 8008f36:	bf00      	nop
 8008f38:	20016618 	.word	0x20016618
 8008f3c:	20016614 	.word	0x20016614

08008f40 <vQueueDelete>:
{
 8008f40:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008f42:	b950      	cbnz	r0, 8008f5a <vQueueDelete+0x1a>
	__asm volatile
 8008f44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f48:	b672      	cpsid	i
 8008f4a:	f383 8811 	msr	BASEPRI, r3
 8008f4e:	f3bf 8f6f 	isb	sy
 8008f52:	f3bf 8f4f 	dsb	sy
 8008f56:	b662      	cpsie	i
 8008f58:	e7fe      	b.n	8008f58 <vQueueDelete+0x18>
		vQueueUnregisterQueue( pxQueue );
 8008f5a:	f7ff ffd9 	bl	8008f10 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008f5e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8008f62:	b91b      	cbnz	r3, 8008f6c <vQueueDelete+0x2c>
}
 8008f64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008f68:	f7ff b86a 	b.w	8008040 <vPortFree>
}
 8008f6c:	bd10      	pop	{r4, pc}

08008f6e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008f6e:	b570      	push	{r4, r5, r6, lr}
 8008f70:	4604      	mov	r4, r0
 8008f72:	460d      	mov	r5, r1
 8008f74:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008f76:	f7ff f945 	bl	8008204 <vPortEnterCritical>
 8008f7a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008f7e:	2bff      	cmp	r3, #255	@ 0xff
 8008f80:	d102      	bne.n	8008f88 <vQueueWaitForMessageRestricted+0x1a>
 8008f82:	2300      	movs	r3, #0
 8008f84:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8008f88:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008f8c:	2bff      	cmp	r3, #255	@ 0xff
 8008f8e:	d102      	bne.n	8008f96 <vQueueWaitForMessageRestricted+0x28>
 8008f90:	2300      	movs	r3, #0
 8008f92:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8008f96:	f7ff f959 	bl	800824c <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8008f9a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8008f9c:	b92b      	cbnz	r3, 8008faa <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008f9e:	4632      	mov	r2, r6
 8008fa0:	4629      	mov	r1, r5
 8008fa2:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008fa6:	f000 fbe9 	bl	800977c <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8008faa:	4620      	mov	r0, r4
	}
 8008fac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008fb0:	f7ff baa9 	b.w	8008506 <prvUnlockQueue>

08008fb4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008fb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008fb8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8008fba:	f7ff f923 	bl	8008204 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8008fbe:	4b2f      	ldr	r3, [pc, #188]	@ (800907c <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8008fc0:	4e2f      	ldr	r6, [pc, #188]	@ (8009080 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8008fc2:	681a      	ldr	r2, [r3, #0]
 8008fc4:	4f2f      	ldr	r7, [pc, #188]	@ (8009084 <prvAddNewTaskToReadyList+0xd0>)
 8008fc6:	3201      	adds	r2, #1
 8008fc8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8008fca:	6835      	ldr	r5, [r6, #0]
 8008fcc:	2d00      	cmp	r5, #0
 8008fce:	d14a      	bne.n	8009066 <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008fd0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008fd2:	681b      	ldr	r3, [r3, #0]
 8008fd4:	2b01      	cmp	r3, #1
 8008fd6:	d11f      	bne.n	8009018 <prvAddNewTaskToReadyList+0x64>
 8008fd8:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008fda:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008fdc:	4640      	mov	r0, r8
 8008fde:	f7ff f86b 	bl	80080b8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008fe2:	f108 0814 	add.w	r8, r8, #20
 8008fe6:	2d38      	cmp	r5, #56	@ 0x38
 8008fe8:	d1f7      	bne.n	8008fda <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8008fea:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 80090ac <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 8008fee:	4d26      	ldr	r5, [pc, #152]	@ (8009088 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8008ff0:	4640      	mov	r0, r8
 8008ff2:	f7ff f861 	bl	80080b8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008ff6:	4628      	mov	r0, r5
 8008ff8:	f7ff f85e 	bl	80080b8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8008ffc:	4823      	ldr	r0, [pc, #140]	@ (800908c <prvAddNewTaskToReadyList+0xd8>)
 8008ffe:	f7ff f85b 	bl	80080b8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009002:	4823      	ldr	r0, [pc, #140]	@ (8009090 <prvAddNewTaskToReadyList+0xdc>)
 8009004:	f7ff f858 	bl	80080b8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009008:	4822      	ldr	r0, [pc, #136]	@ (8009094 <prvAddNewTaskToReadyList+0xe0>)
 800900a:	f7ff f855 	bl	80080b8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800900e:	4b22      	ldr	r3, [pc, #136]	@ (8009098 <prvAddNewTaskToReadyList+0xe4>)
 8009010:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009014:	4b21      	ldr	r3, [pc, #132]	@ (800909c <prvAddNewTaskToReadyList+0xe8>)
 8009016:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009018:	4a21      	ldr	r2, [pc, #132]	@ (80090a0 <prvAddNewTaskToReadyList+0xec>)
 800901a:	6813      	ldr	r3, [r2, #0]
 800901c:	3301      	adds	r3, #1
 800901e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009020:	4a20      	ldr	r2, [pc, #128]	@ (80090a4 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009022:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009024:	6811      	ldr	r1, [r2, #0]
 8009026:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009028:	428b      	cmp	r3, r1
 800902a:	d900      	bls.n	800902e <prvAddNewTaskToReadyList+0x7a>
 800902c:	6013      	str	r3, [r2, #0]
 800902e:	2014      	movs	r0, #20
 8009030:	1d21      	adds	r1, r4, #4
 8009032:	fb00 7003 	mla	r0, r0, r3, r7
 8009036:	f7ff f84d 	bl	80080d4 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800903a:	f7ff f907 	bl	800824c <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800903e:	4b1a      	ldr	r3, [pc, #104]	@ (80090a8 <prvAddNewTaskToReadyList+0xf4>)
 8009040:	681b      	ldr	r3, [r3, #0]
 8009042:	b173      	cbz	r3, 8009062 <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009044:	6833      	ldr	r3, [r6, #0]
 8009046:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009048:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800904a:	429a      	cmp	r2, r3
 800904c:	d209      	bcs.n	8009062 <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
 800904e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009052:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009056:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800905a:	f3bf 8f4f 	dsb	sy
 800905e:	f3bf 8f6f 	isb	sy
}
 8009062:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009066:	4b10      	ldr	r3, [pc, #64]	@ (80090a8 <prvAddNewTaskToReadyList+0xf4>)
 8009068:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800906a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800906c:	2a00      	cmp	r2, #0
 800906e:	d1d3      	bne.n	8009018 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009070:	6832      	ldr	r2, [r6, #0]
 8009072:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009074:	429a      	cmp	r2, r3
 8009076:	d8cf      	bhi.n	8009018 <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 8009078:	6034      	str	r4, [r6, #0]
 800907a:	e7cd      	b.n	8009018 <prvAddNewTaskToReadyList+0x64>
 800907c:	20016678 	.word	0x20016678
 8009080:	20016b4c 	.word	0x20016b4c
 8009084:	200166ec 	.word	0x200166ec
 8009088:	200166c4 	.word	0x200166c4
 800908c:	200166a8 	.word	0x200166a8
 8009090:	20016694 	.word	0x20016694
 8009094:	2001667c 	.word	0x2001667c
 8009098:	200166c0 	.word	0x200166c0
 800909c:	200166bc 	.word	0x200166bc
 80090a0:	2001665c 	.word	0x2001665c
 80090a4:	20016670 	.word	0x20016670
 80090a8:	2001666c 	.word	0x2001666c
 80090ac:	200166d8 	.word	0x200166d8

080090b0 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80090b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80090b2:	4b15      	ldr	r3, [pc, #84]	@ (8009108 <prvAddCurrentTaskToDelayedList+0x58>)
{
 80090b4:	4606      	mov	r6, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80090b6:	4d15      	ldr	r5, [pc, #84]	@ (800910c <prvAddCurrentTaskToDelayedList+0x5c>)
{
 80090b8:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 80090ba:	681c      	ldr	r4, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80090bc:	6828      	ldr	r0, [r5, #0]
 80090be:	3004      	adds	r0, #4
 80090c0:	f7ff f82a 	bl	8008118 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80090c4:	1c73      	adds	r3, r6, #1
 80090c6:	d107      	bne.n	80090d8 <prvAddCurrentTaskToDelayedList+0x28>
 80090c8:	b137      	cbz	r7, 80090d8 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80090ca:	6829      	ldr	r1, [r5, #0]
 80090cc:	4810      	ldr	r0, [pc, #64]	@ (8009110 <prvAddCurrentTaskToDelayedList+0x60>)
 80090ce:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80090d0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80090d4:	f7fe bffe 	b.w	80080d4 <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
 80090d8:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80090da:	682b      	ldr	r3, [r5, #0]
 80090dc:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80090de:	d307      	bcc.n	80090f0 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80090e0:	4b0c      	ldr	r3, [pc, #48]	@ (8009114 <prvAddCurrentTaskToDelayedList+0x64>)
 80090e2:	6818      	ldr	r0, [r3, #0]
 80090e4:	6829      	ldr	r1, [r5, #0]
}
 80090e6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80090ea:	3104      	adds	r1, #4
 80090ec:	f7fe bffd 	b.w	80080ea <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80090f0:	4b09      	ldr	r3, [pc, #36]	@ (8009118 <prvAddCurrentTaskToDelayedList+0x68>)
 80090f2:	6818      	ldr	r0, [r3, #0]
 80090f4:	6829      	ldr	r1, [r5, #0]
 80090f6:	3104      	adds	r1, #4
 80090f8:	f7fe fff7 	bl	80080ea <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80090fc:	4b07      	ldr	r3, [pc, #28]	@ (800911c <prvAddCurrentTaskToDelayedList+0x6c>)
 80090fe:	681a      	ldr	r2, [r3, #0]
 8009100:	42a2      	cmp	r2, r4
 8009102:	d900      	bls.n	8009106 <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
 8009104:	601c      	str	r4, [r3, #0]
}
 8009106:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009108:	20016674 	.word	0x20016674
 800910c:	20016b4c 	.word	0x20016b4c
 8009110:	2001667c 	.word	0x2001667c
 8009114:	200166bc 	.word	0x200166bc
 8009118:	200166c0 	.word	0x200166c0
 800911c:	20016658 	.word	0x20016658

08009120 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009120:	4a06      	ldr	r2, [pc, #24]	@ (800913c <prvResetNextTaskUnblockTime+0x1c>)
 8009122:	6813      	ldr	r3, [r2, #0]
 8009124:	6819      	ldr	r1, [r3, #0]
 8009126:	4b06      	ldr	r3, [pc, #24]	@ (8009140 <prvResetNextTaskUnblockTime+0x20>)
 8009128:	b919      	cbnz	r1, 8009132 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800912a:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800912e:	601a      	str	r2, [r3, #0]
}
 8009130:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009132:	6812      	ldr	r2, [r2, #0]
 8009134:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009136:	68d2      	ldr	r2, [r2, #12]
 8009138:	6852      	ldr	r2, [r2, #4]
 800913a:	e7f8      	b.n	800912e <prvResetNextTaskUnblockTime+0xe>
 800913c:	200166c0 	.word	0x200166c0
 8009140:	20016658 	.word	0x20016658

08009144 <prvDeleteTCB>:
	{
 8009144:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009146:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 800914a:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800914c:	b93b      	cbnz	r3, 800915e <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800914e:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8009150:	f7fe ff76 	bl	8008040 <vPortFree>
				vPortFree( pxTCB );
 8009154:	4620      	mov	r0, r4
	}
 8009156:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800915a:	f7fe bf71 	b.w	8008040 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800915e:	2b01      	cmp	r3, #1
 8009160:	d0f9      	beq.n	8009156 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009162:	2b02      	cmp	r3, #2
 8009164:	d00a      	beq.n	800917c <prvDeleteTCB+0x38>
 8009166:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800916a:	b672      	cpsid	i
 800916c:	f383 8811 	msr	BASEPRI, r3
 8009170:	f3bf 8f6f 	isb	sy
 8009174:	f3bf 8f4f 	dsb	sy
 8009178:	b662      	cpsie	i
 800917a:	e7fe      	b.n	800917a <prvDeleteTCB+0x36>
	}
 800917c:	bd10      	pop	{r4, pc}
	...

08009180 <prvIdleTask>:
{
 8009180:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009182:	4c14      	ldr	r4, [pc, #80]	@ (80091d4 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009184:	4f14      	ldr	r7, [pc, #80]	@ (80091d8 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8009186:	4d15      	ldr	r5, [pc, #84]	@ (80091dc <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009188:	6823      	ldr	r3, [r4, #0]
 800918a:	b983      	cbnz	r3, 80091ae <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800918c:	4b14      	ldr	r3, [pc, #80]	@ (80091e0 <prvIdleTask+0x60>)
 800918e:	681b      	ldr	r3, [r3, #0]
 8009190:	2b01      	cmp	r3, #1
 8009192:	d909      	bls.n	80091a8 <prvIdleTask+0x28>
				taskYIELD();
 8009194:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009198:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800919c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80091a0:	f3bf 8f4f 	dsb	sy
 80091a4:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 80091a8:	f7f7 f9fa 	bl	80005a0 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 80091ac:	e7eb      	b.n	8009186 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80091ae:	f7ff f829 	bl	8008204 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80091b2:	68fb      	ldr	r3, [r7, #12]
 80091b4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80091b6:	1d30      	adds	r0, r6, #4
 80091b8:	f7fe ffae 	bl	8008118 <uxListRemove>
				--uxCurrentNumberOfTasks;
 80091bc:	682b      	ldr	r3, [r5, #0]
 80091be:	3b01      	subs	r3, #1
 80091c0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80091c2:	6823      	ldr	r3, [r4, #0]
 80091c4:	3b01      	subs	r3, #1
 80091c6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80091c8:	f7ff f840 	bl	800824c <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80091cc:	4630      	mov	r0, r6
 80091ce:	f7ff ffb9 	bl	8009144 <prvDeleteTCB>
 80091d2:	e7d9      	b.n	8009188 <prvIdleTask+0x8>
 80091d4:	20016690 	.word	0x20016690
 80091d8:	20016694 	.word	0x20016694
 80091dc:	20016678 	.word	0x20016678
 80091e0:	200166ec 	.word	0x200166ec

080091e4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80091e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80091e8:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80091ea:	4607      	mov	r7, r0
 80091ec:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80091ee:	21a5      	movs	r1, #165	@ 0xa5
 80091f0:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80091f2:	4698      	mov	r8, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80091f4:	3e04      	subs	r6, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80091f6:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80091fa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80091fc:	f019 fb8c 	bl	8022918 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009200:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009202:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009204:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 8009208:	b3b5      	cbz	r5, 8009278 <prvInitialiseNewTask.constprop.0+0x94>
 800920a:	1e6b      	subs	r3, r5, #1
 800920c:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8009210:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009212:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009216:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 800921a:	b109      	cbz	r1, 8009220 <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800921c:	42ab      	cmp	r3, r5
 800921e:	d1f8      	bne.n	8009212 <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009220:	2300      	movs	r3, #0
 8009222:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009226:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 8009228:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800922c:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800922e:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009230:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009234:	bf28      	it	cs
 8009236:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
 8009238:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800923a:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800923c:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009240:	f7fe ff45 	bl	80080ce <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009244:	f104 0018 	add.w	r0, r4, #24
 8009248:	f7fe ff41 	bl	80080ce <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800924c:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009250:	4642      	mov	r2, r8
 8009252:	4639      	mov	r1, r7
 8009254:	4630      	mov	r0, r6
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009256:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009258:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800925a:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 800925c:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009260:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009264:	f7fe ffaa 	bl	80081bc <pxPortInitialiseStack>
 8009268:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800926a:	f1b9 0f00 	cmp.w	r9, #0
 800926e:	d001      	beq.n	8009274 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009270:	f8c9 4000 	str.w	r4, [r9]
}
 8009274:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009278:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 800927c:	e7d3      	b.n	8009226 <prvInitialiseNewTask.constprop.0+0x42>

0800927e <xTaskCreateStatic>:
	{
 800927e:	b570      	push	{r4, r5, r6, lr}
 8009280:	b086      	sub	sp, #24
 8009282:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009286:	b955      	cbnz	r5, 800929e <xTaskCreateStatic+0x20>
 8009288:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800928c:	b672      	cpsid	i
 800928e:	f383 8811 	msr	BASEPRI, r3
 8009292:	f3bf 8f6f 	isb	sy
 8009296:	f3bf 8f4f 	dsb	sy
 800929a:	b662      	cpsie	i
 800929c:	e7fe      	b.n	800929c <xTaskCreateStatic+0x1e>
		configASSERT( pxTaskBuffer != NULL );
 800929e:	b954      	cbnz	r4, 80092b6 <xTaskCreateStatic+0x38>
 80092a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092a4:	b672      	cpsid	i
 80092a6:	f383 8811 	msr	BASEPRI, r3
 80092aa:	f3bf 8f6f 	isb	sy
 80092ae:	f3bf 8f4f 	dsb	sy
 80092b2:	b662      	cpsie	i
 80092b4:	e7fe      	b.n	80092b4 <xTaskCreateStatic+0x36>
			volatile size_t xSize = sizeof( StaticTask_t );
 80092b6:	2660      	movs	r6, #96	@ 0x60
 80092b8:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80092ba:	9e05      	ldr	r6, [sp, #20]
 80092bc:	2e60      	cmp	r6, #96	@ 0x60
 80092be:	d00a      	beq.n	80092d6 <xTaskCreateStatic+0x58>
 80092c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092c4:	b672      	cpsid	i
 80092c6:	f383 8811 	msr	BASEPRI, r3
 80092ca:	f3bf 8f6f 	isb	sy
 80092ce:	f3bf 8f4f 	dsb	sy
 80092d2:	b662      	cpsie	i
 80092d4:	e7fe      	b.n	80092d4 <xTaskCreateStatic+0x56>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80092d6:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80092d8:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80092da:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80092dc:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80092e0:	ad04      	add	r5, sp, #16
 80092e2:	9402      	str	r4, [sp, #8]
 80092e4:	9501      	str	r5, [sp, #4]
 80092e6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80092e8:	9500      	str	r5, [sp, #0]
 80092ea:	f7ff ff7b 	bl	80091e4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80092ee:	4620      	mov	r0, r4
 80092f0:	f7ff fe60 	bl	8008fb4 <prvAddNewTaskToReadyList>
	}
 80092f4:	9804      	ldr	r0, [sp, #16]
 80092f6:	b006      	add	sp, #24
 80092f8:	bd70      	pop	{r4, r5, r6, pc}

080092fa <xTaskCreate>:
	{
 80092fa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80092fe:	4607      	mov	r7, r0
 8009300:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009302:	0090      	lsls	r0, r2, #2
	{
 8009304:	4688      	mov	r8, r1
 8009306:	4616      	mov	r6, r2
 8009308:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800930a:	f7fe fe03 	bl	8007f14 <pvPortMalloc>
			if( pxStack != NULL )
 800930e:	4605      	mov	r5, r0
 8009310:	b920      	cbnz	r0, 800931c <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009312:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8009316:	b005      	add	sp, #20
 8009318:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800931c:	2060      	movs	r0, #96	@ 0x60
 800931e:	f7fe fdf9 	bl	8007f14 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009322:	4604      	mov	r4, r0
 8009324:	b198      	cbz	r0, 800934e <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009326:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 8009328:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800932a:	4632      	mov	r2, r6
 800932c:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800932e:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009332:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009334:	9002      	str	r0, [sp, #8]
 8009336:	4638      	mov	r0, r7
 8009338:	9301      	str	r3, [sp, #4]
 800933a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800933c:	9300      	str	r3, [sp, #0]
 800933e:	464b      	mov	r3, r9
 8009340:	f7ff ff50 	bl	80091e4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009344:	4620      	mov	r0, r4
 8009346:	f7ff fe35 	bl	8008fb4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800934a:	2001      	movs	r0, #1
 800934c:	e7e3      	b.n	8009316 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 800934e:	4628      	mov	r0, r5
 8009350:	f7fe fe76 	bl	8008040 <vPortFree>
		if( pxNewTCB != NULL )
 8009354:	e7dd      	b.n	8009312 <xTaskCreate+0x18>
	...

08009358 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009358:	4a02      	ldr	r2, [pc, #8]	@ (8009364 <vTaskSuspendAll+0xc>)
 800935a:	6813      	ldr	r3, [r2, #0]
 800935c:	3301      	adds	r3, #1
 800935e:	6013      	str	r3, [r2, #0]
}
 8009360:	4770      	bx	lr
 8009362:	bf00      	nop
 8009364:	20016654 	.word	0x20016654

08009368 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009368:	4b01      	ldr	r3, [pc, #4]	@ (8009370 <xTaskGetTickCount+0x8>)
 800936a:	6818      	ldr	r0, [r3, #0]
}
 800936c:	4770      	bx	lr
 800936e:	bf00      	nop
 8009370:	20016674 	.word	0x20016674

08009374 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009374:	4b40      	ldr	r3, [pc, #256]	@ (8009478 <xTaskIncrementTick+0x104>)
 8009376:	681b      	ldr	r3, [r3, #0]
{
 8009378:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800937c:	2b00      	cmp	r3, #0
 800937e:	d173      	bne.n	8009468 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009380:	4b3e      	ldr	r3, [pc, #248]	@ (800947c <xTaskIncrementTick+0x108>)
 8009382:	681c      	ldr	r4, [r3, #0]
 8009384:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8009386:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009388:	b9cc      	cbnz	r4, 80093be <xTaskIncrementTick+0x4a>
			taskSWITCH_DELAYED_LISTS();
 800938a:	4b3d      	ldr	r3, [pc, #244]	@ (8009480 <xTaskIncrementTick+0x10c>)
 800938c:	681a      	ldr	r2, [r3, #0]
 800938e:	6812      	ldr	r2, [r2, #0]
 8009390:	b152      	cbz	r2, 80093a8 <xTaskIncrementTick+0x34>
 8009392:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009396:	b672      	cpsid	i
 8009398:	f383 8811 	msr	BASEPRI, r3
 800939c:	f3bf 8f6f 	isb	sy
 80093a0:	f3bf 8f4f 	dsb	sy
 80093a4:	b662      	cpsie	i
 80093a6:	e7fe      	b.n	80093a6 <xTaskIncrementTick+0x32>
 80093a8:	4a36      	ldr	r2, [pc, #216]	@ (8009484 <xTaskIncrementTick+0x110>)
 80093aa:	6819      	ldr	r1, [r3, #0]
 80093ac:	6810      	ldr	r0, [r2, #0]
 80093ae:	6018      	str	r0, [r3, #0]
 80093b0:	6011      	str	r1, [r2, #0]
 80093b2:	4a35      	ldr	r2, [pc, #212]	@ (8009488 <xTaskIncrementTick+0x114>)
 80093b4:	6813      	ldr	r3, [r2, #0]
 80093b6:	3301      	adds	r3, #1
 80093b8:	6013      	str	r3, [r2, #0]
 80093ba:	f7ff feb1 	bl	8009120 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80093be:	4d33      	ldr	r5, [pc, #204]	@ (800948c <xTaskIncrementTick+0x118>)
BaseType_t xSwitchRequired = pdFALSE;
 80093c0:	f04f 0b00 	mov.w	fp, #0
 80093c4:	4e32      	ldr	r6, [pc, #200]	@ (8009490 <xTaskIncrementTick+0x11c>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 80093c6:	682b      	ldr	r3, [r5, #0]
 80093c8:	4f32      	ldr	r7, [pc, #200]	@ (8009494 <xTaskIncrementTick+0x120>)
 80093ca:	42a3      	cmp	r3, r4
 80093cc:	d911      	bls.n	80093f2 <xTaskIncrementTick+0x7e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80093ce:	683a      	ldr	r2, [r7, #0]
 80093d0:	2114      	movs	r1, #20
 80093d2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80093d4:	434a      	muls	r2, r1
 80093d6:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 80093d8:	2a02      	cmp	r2, #2
 80093da:	bf28      	it	cs
 80093dc:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 80093e0:	4a2d      	ldr	r2, [pc, #180]	@ (8009498 <xTaskIncrementTick+0x124>)
 80093e2:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 80093e4:	2a00      	cmp	r2, #0
}
 80093e6:	bf0c      	ite	eq
 80093e8:	4658      	moveq	r0, fp
 80093ea:	2001      	movne	r0, #1
 80093ec:	b003      	add	sp, #12
 80093ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80093f2:	f8df 908c 	ldr.w	r9, [pc, #140]	@ 8009480 <xTaskIncrementTick+0x10c>
					prvAddTaskToReadyList( pxTCB );
 80093f6:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 80094a0 <xTaskIncrementTick+0x12c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80093fa:	f8d9 2000 	ldr.w	r2, [r9]
 80093fe:	6812      	ldr	r2, [r2, #0]
 8009400:	b91a      	cbnz	r2, 800940a <xTaskIncrementTick+0x96>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009402:	f04f 32ff 	mov.w	r2, #4294967295
 8009406:	602a      	str	r2, [r5, #0]
					break;
 8009408:	e7e1      	b.n	80093ce <xTaskIncrementTick+0x5a>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800940a:	f8d9 2000 	ldr.w	r2, [r9]
 800940e:	68d2      	ldr	r2, [r2, #12]
 8009410:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009414:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8009418:	428c      	cmp	r4, r1
 800941a:	d201      	bcs.n	8009420 <xTaskIncrementTick+0xac>
						xNextTaskUnblockTime = xItemValue;
 800941c:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800941e:	e7d6      	b.n	80093ce <xTaskIncrementTick+0x5a>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009420:	f108 0304 	add.w	r3, r8, #4
 8009424:	4618      	mov	r0, r3
 8009426:	9301      	str	r3, [sp, #4]
 8009428:	f7fe fe76 	bl	8008118 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800942c:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8009430:	b119      	cbz	r1, 800943a <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009432:	f108 0018 	add.w	r0, r8, #24
 8009436:	f7fe fe6f 	bl	8008118 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800943a:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 800943e:	f8da 1000 	ldr.w	r1, [sl]
 8009442:	4288      	cmp	r0, r1
 8009444:	d901      	bls.n	800944a <xTaskIncrementTick+0xd6>
 8009446:	f8ca 0000 	str.w	r0, [sl]
 800944a:	2314      	movs	r3, #20
 800944c:	9901      	ldr	r1, [sp, #4]
 800944e:	fb03 6000 	mla	r0, r3, r0, r6
 8009452:	f7fe fe3f 	bl	80080d4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009456:	6838      	ldr	r0, [r7, #0]
 8009458:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800945c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 800945e:	4291      	cmp	r1, r2
 8009460:	bf28      	it	cs
 8009462:	f04f 0b01 	movcs.w	fp, #1
 8009466:	e7c8      	b.n	80093fa <xTaskIncrementTick+0x86>
		++uxPendedTicks;
 8009468:	4a0c      	ldr	r2, [pc, #48]	@ (800949c <xTaskIncrementTick+0x128>)
BaseType_t xSwitchRequired = pdFALSE;
 800946a:	f04f 0b00 	mov.w	fp, #0
		++uxPendedTicks;
 800946e:	6813      	ldr	r3, [r2, #0]
 8009470:	3301      	adds	r3, #1
 8009472:	6013      	str	r3, [r2, #0]
 8009474:	e7b4      	b.n	80093e0 <xTaskIncrementTick+0x6c>
 8009476:	bf00      	nop
 8009478:	20016654 	.word	0x20016654
 800947c:	20016674 	.word	0x20016674
 8009480:	200166c0 	.word	0x200166c0
 8009484:	200166bc 	.word	0x200166bc
 8009488:	20016660 	.word	0x20016660
 800948c:	20016658 	.word	0x20016658
 8009490:	200166ec 	.word	0x200166ec
 8009494:	20016b4c 	.word	0x20016b4c
 8009498:	20016664 	.word	0x20016664
 800949c:	20016668 	.word	0x20016668
 80094a0:	20016670 	.word	0x20016670

080094a4 <xTaskResumeAll>:
{
 80094a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 80094a8:	4c31      	ldr	r4, [pc, #196]	@ (8009570 <xTaskResumeAll+0xcc>)
 80094aa:	6823      	ldr	r3, [r4, #0]
 80094ac:	b953      	cbnz	r3, 80094c4 <xTaskResumeAll+0x20>
 80094ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094b2:	b672      	cpsid	i
 80094b4:	f383 8811 	msr	BASEPRI, r3
 80094b8:	f3bf 8f6f 	isb	sy
 80094bc:	f3bf 8f4f 	dsb	sy
 80094c0:	b662      	cpsie	i
 80094c2:	e7fe      	b.n	80094c2 <xTaskResumeAll+0x1e>
	taskENTER_CRITICAL();
 80094c4:	f7fe fe9e 	bl	8008204 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80094c8:	6823      	ldr	r3, [r4, #0]
 80094ca:	3b01      	subs	r3, #1
 80094cc:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80094ce:	6824      	ldr	r4, [r4, #0]
 80094d0:	b12c      	cbz	r4, 80094de <xTaskResumeAll+0x3a>
BaseType_t xAlreadyYielded = pdFALSE;
 80094d2:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80094d4:	f7fe feba 	bl	800824c <vPortExitCritical>
}
 80094d8:	4620      	mov	r0, r4
 80094da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80094de:	4b25      	ldr	r3, [pc, #148]	@ (8009574 <xTaskResumeAll+0xd0>)
 80094e0:	681b      	ldr	r3, [r3, #0]
 80094e2:	2b00      	cmp	r3, #0
 80094e4:	d0f5      	beq.n	80094d2 <xTaskResumeAll+0x2e>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80094e6:	4d24      	ldr	r5, [pc, #144]	@ (8009578 <xTaskResumeAll+0xd4>)
					prvAddTaskToReadyList( pxTCB );
 80094e8:	4e24      	ldr	r6, [pc, #144]	@ (800957c <xTaskResumeAll+0xd8>)
 80094ea:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800958c <xTaskResumeAll+0xe8>
 80094ee:	e01d      	b.n	800952c <xTaskResumeAll+0x88>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80094f0:	68eb      	ldr	r3, [r5, #12]
 80094f2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80094f4:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80094f6:	f104 0018 	add.w	r0, r4, #24
 80094fa:	f7fe fe0d 	bl	8008118 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80094fe:	4638      	mov	r0, r7
 8009500:	f7fe fe0a 	bl	8008118 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009504:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009506:	6832      	ldr	r2, [r6, #0]
 8009508:	4293      	cmp	r3, r2
 800950a:	d900      	bls.n	800950e <xTaskResumeAll+0x6a>
 800950c:	6033      	str	r3, [r6, #0]
 800950e:	2014      	movs	r0, #20
 8009510:	4639      	mov	r1, r7
 8009512:	fb00 8003 	mla	r0, r0, r3, r8
 8009516:	f7fe fddd 	bl	80080d4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800951a:	4b19      	ldr	r3, [pc, #100]	@ (8009580 <xTaskResumeAll+0xdc>)
 800951c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800951e:	681b      	ldr	r3, [r3, #0]
 8009520:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009522:	429a      	cmp	r2, r3
 8009524:	d302      	bcc.n	800952c <xTaskResumeAll+0x88>
						xYieldPending = pdTRUE;
 8009526:	4b17      	ldr	r3, [pc, #92]	@ (8009584 <xTaskResumeAll+0xe0>)
 8009528:	2201      	movs	r2, #1
 800952a:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800952c:	682b      	ldr	r3, [r5, #0]
 800952e:	2b00      	cmp	r3, #0
 8009530:	d1de      	bne.n	80094f0 <xTaskResumeAll+0x4c>
				if( pxTCB != NULL )
 8009532:	b10c      	cbz	r4, 8009538 <xTaskResumeAll+0x94>
					prvResetNextTaskUnblockTime();
 8009534:	f7ff fdf4 	bl	8009120 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009538:	4d13      	ldr	r5, [pc, #76]	@ (8009588 <xTaskResumeAll+0xe4>)
 800953a:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800953c:	b144      	cbz	r4, 8009550 <xTaskResumeAll+0xac>
								xYieldPending = pdTRUE;
 800953e:	4e11      	ldr	r6, [pc, #68]	@ (8009584 <xTaskResumeAll+0xe0>)
 8009540:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009542:	f7ff ff17 	bl	8009374 <xTaskIncrementTick>
 8009546:	b100      	cbz	r0, 800954a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009548:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800954a:	3c01      	subs	r4, #1
 800954c:	d1f9      	bne.n	8009542 <xTaskResumeAll+0x9e>
						uxPendedTicks = 0;
 800954e:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009550:	4b0c      	ldr	r3, [pc, #48]	@ (8009584 <xTaskResumeAll+0xe0>)
 8009552:	681b      	ldr	r3, [r3, #0]
 8009554:	2b00      	cmp	r3, #0
 8009556:	d0bc      	beq.n	80094d2 <xTaskResumeAll+0x2e>
					taskYIELD_IF_USING_PREEMPTION();
 8009558:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800955c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009560:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009564:	f3bf 8f4f 	dsb	sy
 8009568:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800956c:	2401      	movs	r4, #1
 800956e:	e7b1      	b.n	80094d4 <xTaskResumeAll+0x30>
 8009570:	20016654 	.word	0x20016654
 8009574:	20016678 	.word	0x20016678
 8009578:	200166a8 	.word	0x200166a8
 800957c:	20016670 	.word	0x20016670
 8009580:	20016b4c 	.word	0x20016b4c
 8009584:	20016664 	.word	0x20016664
 8009588:	20016668 	.word	0x20016668
 800958c:	200166ec 	.word	0x200166ec

08009590 <vTaskDelay>:
	{
 8009590:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009592:	b950      	cbnz	r0, 80095aa <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009594:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009598:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800959c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80095a0:	f3bf 8f4f 	dsb	sy
 80095a4:	f3bf 8f6f 	isb	sy
	}
 80095a8:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 80095aa:	4b0b      	ldr	r3, [pc, #44]	@ (80095d8 <vTaskDelay+0x48>)
 80095ac:	6819      	ldr	r1, [r3, #0]
 80095ae:	b151      	cbz	r1, 80095c6 <vTaskDelay+0x36>
 80095b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80095b4:	b672      	cpsid	i
 80095b6:	f383 8811 	msr	BASEPRI, r3
 80095ba:	f3bf 8f6f 	isb	sy
 80095be:	f3bf 8f4f 	dsb	sy
 80095c2:	b662      	cpsie	i
 80095c4:	e7fe      	b.n	80095c4 <vTaskDelay+0x34>
			vTaskSuspendAll();
 80095c6:	f7ff fec7 	bl	8009358 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80095ca:	f7ff fd71 	bl	80090b0 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 80095ce:	f7ff ff69 	bl	80094a4 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 80095d2:	2800      	cmp	r0, #0
 80095d4:	d0de      	beq.n	8009594 <vTaskDelay+0x4>
 80095d6:	e7e7      	b.n	80095a8 <vTaskDelay+0x18>
 80095d8:	20016654 	.word	0x20016654

080095dc <vTaskSetApplicationTaskTag>:
	{
 80095dc:	b538      	push	{r3, r4, r5, lr}
 80095de:	460d      	mov	r5, r1
		if( xTask == NULL )
 80095e0:	4604      	mov	r4, r0
 80095e2:	b908      	cbnz	r0, 80095e8 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 80095e4:	4b04      	ldr	r3, [pc, #16]	@ (80095f8 <vTaskSetApplicationTaskTag+0x1c>)
 80095e6:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 80095e8:	f7fe fe0c 	bl	8008204 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 80095ec:	6565      	str	r5, [r4, #84]	@ 0x54
	}
 80095ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 80095f2:	f7fe be2b 	b.w	800824c <vPortExitCritical>
 80095f6:	bf00      	nop
 80095f8:	20016b4c 	.word	0x20016b4c

080095fc <xTaskCallApplicationTaskHook>:
	{
 80095fc:	4603      	mov	r3, r0
 80095fe:	4608      	mov	r0, r1
		if( xTask == NULL )
 8009600:	b90b      	cbnz	r3, 8009606 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 8009602:	4b03      	ldr	r3, [pc, #12]	@ (8009610 <xTaskCallApplicationTaskHook+0x14>)
 8009604:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8009606:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009608:	b103      	cbz	r3, 800960c <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800960a:	4718      	bx	r3
	}
 800960c:	4618      	mov	r0, r3
 800960e:	4770      	bx	lr
 8009610:	20016b4c 	.word	0x20016b4c

08009614 <vTaskStartScheduler>:
{
 8009614:	b510      	push	{r4, lr}
 8009616:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009618:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800961a:	aa07      	add	r2, sp, #28
 800961c:	a906      	add	r1, sp, #24
 800961e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009620:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009624:	f7fe fc38 	bl	8007e98 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009628:	9b05      	ldr	r3, [sp, #20]
 800962a:	9a07      	ldr	r2, [sp, #28]
 800962c:	9302      	str	r3, [sp, #8]
 800962e:	9b06      	ldr	r3, [sp, #24]
 8009630:	491b      	ldr	r1, [pc, #108]	@ (80096a0 <vTaskStartScheduler+0x8c>)
 8009632:	481c      	ldr	r0, [pc, #112]	@ (80096a4 <vTaskStartScheduler+0x90>)
 8009634:	e9cd 4300 	strd	r4, r3, [sp]
 8009638:	4623      	mov	r3, r4
 800963a:	f7ff fe20 	bl	800927e <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800963e:	b360      	cbz	r0, 800969a <vTaskStartScheduler+0x86>
			xReturn = xTimerCreateTimerTask();
 8009640:	f000 fa9c 	bl	8009b7c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009644:	2801      	cmp	r0, #1
 8009646:	d11b      	bne.n	8009680 <vTaskStartScheduler+0x6c>
 8009648:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800964c:	b672      	cpsid	i
 800964e:	f383 8811 	msr	BASEPRI, r3
 8009652:	f3bf 8f6f 	isb	sy
 8009656:	f3bf 8f4f 	dsb	sy
 800965a:	b662      	cpsie	i
		xNextTaskUnblockTime = portMAX_DELAY;
 800965c:	f04f 32ff 	mov.w	r2, #4294967295
 8009660:	4b11      	ldr	r3, [pc, #68]	@ (80096a8 <vTaskStartScheduler+0x94>)
		traceTASK_SWITCHED_IN();
 8009662:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
 8009664:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009666:	4b11      	ldr	r3, [pc, #68]	@ (80096ac <vTaskStartScheduler+0x98>)
 8009668:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800966a:	4b11      	ldr	r3, [pc, #68]	@ (80096b0 <vTaskStartScheduler+0x9c>)
 800966c:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800966e:	4b11      	ldr	r3, [pc, #68]	@ (80096b4 <vTaskStartScheduler+0xa0>)
 8009670:	6818      	ldr	r0, [r3, #0]
 8009672:	f7ff ffc3 	bl	80095fc <xTaskCallApplicationTaskHook>
}
 8009676:	b008      	add	sp, #32
 8009678:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800967c:	f7fe be5c 	b.w	8008338 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009680:	3001      	adds	r0, #1
 8009682:	d10a      	bne.n	800969a <vTaskStartScheduler+0x86>
 8009684:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009688:	b672      	cpsid	i
 800968a:	f383 8811 	msr	BASEPRI, r3
 800968e:	f3bf 8f6f 	isb	sy
 8009692:	f3bf 8f4f 	dsb	sy
 8009696:	b662      	cpsie	i
 8009698:	e7fe      	b.n	8009698 <vTaskStartScheduler+0x84>
}
 800969a:	b008      	add	sp, #32
 800969c:	bd10      	pop	{r4, pc}
 800969e:	bf00      	nop
 80096a0:	08024be8 	.word	0x08024be8
 80096a4:	08009181 	.word	0x08009181
 80096a8:	20016658 	.word	0x20016658
 80096ac:	2001666c 	.word	0x2001666c
 80096b0:	20016674 	.word	0x20016674
 80096b4:	20016b4c 	.word	0x20016b4c

080096b8 <vTaskSwitchContext>:
{
 80096b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80096ba:	4b1d      	ldr	r3, [pc, #116]	@ (8009730 <vTaskSwitchContext+0x78>)
 80096bc:	681a      	ldr	r2, [r3, #0]
 80096be:	4b1d      	ldr	r3, [pc, #116]	@ (8009734 <vTaskSwitchContext+0x7c>)
 80096c0:	b112      	cbz	r2, 80096c8 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80096c2:	2201      	movs	r2, #1
 80096c4:	601a      	str	r2, [r3, #0]
}
 80096c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 80096c8:	4c1b      	ldr	r4, [pc, #108]	@ (8009738 <vTaskSwitchContext+0x80>)
 80096ca:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80096cc:	4e1b      	ldr	r6, [pc, #108]	@ (800973c <vTaskSwitchContext+0x84>)
 80096ce:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
 80096d0:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 80096d2:	6820      	ldr	r0, [r4, #0]
 80096d4:	f7ff ff92 	bl	80095fc <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80096d8:	6832      	ldr	r2, [r6, #0]
 80096da:	4919      	ldr	r1, [pc, #100]	@ (8009740 <vTaskSwitchContext+0x88>)
 80096dc:	fb07 f302 	mul.w	r3, r7, r2
 80096e0:	58cd      	ldr	r5, [r1, r3]
 80096e2:	18c8      	adds	r0, r1, r3
 80096e4:	b1ad      	cbz	r5, 8009712 <vTaskSwitchContext+0x5a>
 80096e6:	6845      	ldr	r5, [r0, #4]
 80096e8:	3308      	adds	r3, #8
 80096ea:	686d      	ldr	r5, [r5, #4]
 80096ec:	440b      	add	r3, r1
 80096ee:	429d      	cmp	r5, r3
 80096f0:	6045      	str	r5, [r0, #4]
 80096f2:	bf04      	itt	eq
 80096f4:	686b      	ldreq	r3, [r5, #4]
 80096f6:	6043      	streq	r3, [r0, #4]
 80096f8:	2314      	movs	r3, #20
 80096fa:	fb03 1102 	mla	r1, r3, r2, r1
 80096fe:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
 8009700:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009702:	68db      	ldr	r3, [r3, #12]
 8009704:	6023      	str	r3, [r4, #0]
 8009706:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 8009708:	6820      	ldr	r0, [r4, #0]
}
 800970a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800970e:	f7ff bf75 	b.w	80095fc <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009712:	b952      	cbnz	r2, 800972a <vTaskSwitchContext+0x72>
 8009714:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009718:	b672      	cpsid	i
 800971a:	f383 8811 	msr	BASEPRI, r3
 800971e:	f3bf 8f6f 	isb	sy
 8009722:	f3bf 8f4f 	dsb	sy
 8009726:	b662      	cpsie	i
 8009728:	e7fe      	b.n	8009728 <vTaskSwitchContext+0x70>
 800972a:	3a01      	subs	r2, #1
 800972c:	e7d6      	b.n	80096dc <vTaskSwitchContext+0x24>
 800972e:	bf00      	nop
 8009730:	20016654 	.word	0x20016654
 8009734:	20016664 	.word	0x20016664
 8009738:	20016b4c 	.word	0x20016b4c
 800973c:	20016670 	.word	0x20016670
 8009740:	200166ec 	.word	0x200166ec

08009744 <vTaskPlaceOnEventList>:
{
 8009744:	b510      	push	{r4, lr}
 8009746:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009748:	b950      	cbnz	r0, 8009760 <vTaskPlaceOnEventList+0x1c>
 800974a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800974e:	b672      	cpsid	i
 8009750:	f383 8811 	msr	BASEPRI, r3
 8009754:	f3bf 8f6f 	isb	sy
 8009758:	f3bf 8f4f 	dsb	sy
 800975c:	b662      	cpsie	i
 800975e:	e7fe      	b.n	800975e <vTaskPlaceOnEventList+0x1a>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009760:	4b05      	ldr	r3, [pc, #20]	@ (8009778 <vTaskPlaceOnEventList+0x34>)
 8009762:	6819      	ldr	r1, [r3, #0]
 8009764:	3118      	adds	r1, #24
 8009766:	f7fe fcc0 	bl	80080ea <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800976a:	4620      	mov	r0, r4
 800976c:	2101      	movs	r1, #1
}
 800976e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009772:	f7ff bc9d 	b.w	80090b0 <prvAddCurrentTaskToDelayedList>
 8009776:	bf00      	nop
 8009778:	20016b4c 	.word	0x20016b4c

0800977c <vTaskPlaceOnEventListRestricted>:
	{
 800977c:	b538      	push	{r3, r4, r5, lr}
 800977e:	460d      	mov	r5, r1
 8009780:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009782:	b950      	cbnz	r0, 800979a <vTaskPlaceOnEventListRestricted+0x1e>
 8009784:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009788:	b672      	cpsid	i
 800978a:	f383 8811 	msr	BASEPRI, r3
 800978e:	f3bf 8f6f 	isb	sy
 8009792:	f3bf 8f4f 	dsb	sy
 8009796:	b662      	cpsie	i
 8009798:	e7fe      	b.n	8009798 <vTaskPlaceOnEventListRestricted+0x1c>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800979a:	4b07      	ldr	r3, [pc, #28]	@ (80097b8 <vTaskPlaceOnEventListRestricted+0x3c>)
 800979c:	6819      	ldr	r1, [r3, #0]
 800979e:	3118      	adds	r1, #24
 80097a0:	f7fe fc98 	bl	80080d4 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 80097a4:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80097a6:	4621      	mov	r1, r4
 80097a8:	bf0c      	ite	eq
 80097aa:	4628      	moveq	r0, r5
 80097ac:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80097b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80097b4:	f7ff bc7c 	b.w	80090b0 <prvAddCurrentTaskToDelayedList>
 80097b8:	20016b4c 	.word	0x20016b4c

080097bc <xTaskRemoveFromEventList>:
{
 80097bc:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80097be:	68c3      	ldr	r3, [r0, #12]
 80097c0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80097c2:	b954      	cbnz	r4, 80097da <xTaskRemoveFromEventList+0x1e>
 80097c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097c8:	b672      	cpsid	i
 80097ca:	f383 8811 	msr	BASEPRI, r3
 80097ce:	f3bf 8f6f 	isb	sy
 80097d2:	f3bf 8f4f 	dsb	sy
 80097d6:	b662      	cpsie	i
 80097d8:	e7fe      	b.n	80097d8 <xTaskRemoveFromEventList+0x1c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80097da:	f104 0518 	add.w	r5, r4, #24
 80097de:	4628      	mov	r0, r5
 80097e0:	f7fe fc9a 	bl	8008118 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80097e4:	4b11      	ldr	r3, [pc, #68]	@ (800982c <xTaskRemoveFromEventList+0x70>)
 80097e6:	681b      	ldr	r3, [r3, #0]
 80097e8:	b9d3      	cbnz	r3, 8009820 <xTaskRemoveFromEventList+0x64>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80097ea:	1d25      	adds	r5, r4, #4
 80097ec:	4628      	mov	r0, r5
 80097ee:	f7fe fc93 	bl	8008118 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80097f2:	4a0f      	ldr	r2, [pc, #60]	@ (8009830 <xTaskRemoveFromEventList+0x74>)
 80097f4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80097f6:	6811      	ldr	r1, [r2, #0]
 80097f8:	428b      	cmp	r3, r1
 80097fa:	d900      	bls.n	80097fe <xTaskRemoveFromEventList+0x42>
 80097fc:	6013      	str	r3, [r2, #0]
 80097fe:	2014      	movs	r0, #20
 8009800:	4a0c      	ldr	r2, [pc, #48]	@ (8009834 <xTaskRemoveFromEventList+0x78>)
 8009802:	4629      	mov	r1, r5
 8009804:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009808:	f7fe fc64 	bl	80080d4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800980c:	4b0a      	ldr	r3, [pc, #40]	@ (8009838 <xTaskRemoveFromEventList+0x7c>)
 800980e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8009810:	681b      	ldr	r3, [r3, #0]
 8009812:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009814:	429a      	cmp	r2, r3
 8009816:	d906      	bls.n	8009826 <xTaskRemoveFromEventList+0x6a>
		xYieldPending = pdTRUE;
 8009818:	2001      	movs	r0, #1
 800981a:	4b08      	ldr	r3, [pc, #32]	@ (800983c <xTaskRemoveFromEventList+0x80>)
 800981c:	6018      	str	r0, [r3, #0]
}
 800981e:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009820:	4629      	mov	r1, r5
 8009822:	4807      	ldr	r0, [pc, #28]	@ (8009840 <xTaskRemoveFromEventList+0x84>)
 8009824:	e7f0      	b.n	8009808 <xTaskRemoveFromEventList+0x4c>
		xReturn = pdFALSE;
 8009826:	2000      	movs	r0, #0
	return xReturn;
 8009828:	e7f9      	b.n	800981e <xTaskRemoveFromEventList+0x62>
 800982a:	bf00      	nop
 800982c:	20016654 	.word	0x20016654
 8009830:	20016670 	.word	0x20016670
 8009834:	200166ec 	.word	0x200166ec
 8009838:	20016b4c 	.word	0x20016b4c
 800983c:	20016664 	.word	0x20016664
 8009840:	200166a8 	.word	0x200166a8

08009844 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009844:	4b03      	ldr	r3, [pc, #12]	@ (8009854 <vTaskInternalSetTimeOutState+0x10>)
 8009846:	681b      	ldr	r3, [r3, #0]
 8009848:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800984a:	4b03      	ldr	r3, [pc, #12]	@ (8009858 <vTaskInternalSetTimeOutState+0x14>)
 800984c:	681b      	ldr	r3, [r3, #0]
 800984e:	6043      	str	r3, [r0, #4]
}
 8009850:	4770      	bx	lr
 8009852:	bf00      	nop
 8009854:	20016660 	.word	0x20016660
 8009858:	20016674 	.word	0x20016674

0800985c <xTaskCheckForTimeOut>:
{
 800985c:	b570      	push	{r4, r5, r6, lr}
 800985e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009860:	4605      	mov	r5, r0
 8009862:	b950      	cbnz	r0, 800987a <xTaskCheckForTimeOut+0x1e>
 8009864:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009868:	b672      	cpsid	i
 800986a:	f383 8811 	msr	BASEPRI, r3
 800986e:	f3bf 8f6f 	isb	sy
 8009872:	f3bf 8f4f 	dsb	sy
 8009876:	b662      	cpsie	i
 8009878:	e7fe      	b.n	8009878 <xTaskCheckForTimeOut+0x1c>
	configASSERT( pxTicksToWait );
 800987a:	b951      	cbnz	r1, 8009892 <xTaskCheckForTimeOut+0x36>
 800987c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009880:	b672      	cpsid	i
 8009882:	f383 8811 	msr	BASEPRI, r3
 8009886:	f3bf 8f6f 	isb	sy
 800988a:	f3bf 8f4f 	dsb	sy
 800988e:	b662      	cpsie	i
 8009890:	e7fe      	b.n	8009890 <xTaskCheckForTimeOut+0x34>
	taskENTER_CRITICAL();
 8009892:	f7fe fcb7 	bl	8008204 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8009896:	4b0f      	ldr	r3, [pc, #60]	@ (80098d4 <xTaskCheckForTimeOut+0x78>)
 8009898:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800989a:	6823      	ldr	r3, [r4, #0]
 800989c:	1c5a      	adds	r2, r3, #1
 800989e:	d010      	beq.n	80098c2 <xTaskCheckForTimeOut+0x66>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80098a0:	480d      	ldr	r0, [pc, #52]	@ (80098d8 <xTaskCheckForTimeOut+0x7c>)
 80098a2:	682e      	ldr	r6, [r5, #0]
 80098a4:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80098a6:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80098a8:	4286      	cmp	r6, r0
 80098aa:	d001      	beq.n	80098b0 <xTaskCheckForTimeOut+0x54>
 80098ac:	428a      	cmp	r2, r1
 80098ae:	d90f      	bls.n	80098d0 <xTaskCheckForTimeOut+0x74>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80098b0:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80098b2:	4283      	cmp	r3, r0
 80098b4:	d90a      	bls.n	80098cc <xTaskCheckForTimeOut+0x70>
			*pxTicksToWait -= xElapsedTime;
 80098b6:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
 80098b8:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 80098ba:	4413      	add	r3, r2
 80098bc:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80098be:	f7ff ffc1 	bl	8009844 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80098c2:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80098c4:	f7fe fcc2 	bl	800824c <vPortExitCritical>
}
 80098c8:	4620      	mov	r0, r4
 80098ca:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 80098cc:	2300      	movs	r3, #0
 80098ce:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80098d0:	2401      	movs	r4, #1
 80098d2:	e7f7      	b.n	80098c4 <xTaskCheckForTimeOut+0x68>
 80098d4:	20016674 	.word	0x20016674
 80098d8:	20016660 	.word	0x20016660

080098dc <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80098dc:	4b01      	ldr	r3, [pc, #4]	@ (80098e4 <vTaskMissedYield+0x8>)
 80098de:	2201      	movs	r2, #1
 80098e0:	601a      	str	r2, [r3, #0]
}
 80098e2:	4770      	bx	lr
 80098e4:	20016664 	.word	0x20016664

080098e8 <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
 80098e8:	4b01      	ldr	r3, [pc, #4]	@ (80098f0 <xTaskGetCurrentTaskHandle+0x8>)
 80098ea:	6818      	ldr	r0, [r3, #0]
	}
 80098ec:	4770      	bx	lr
 80098ee:	bf00      	nop
 80098f0:	20016b4c 	.word	0x20016b4c

080098f4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 80098f4:	4b05      	ldr	r3, [pc, #20]	@ (800990c <xTaskGetSchedulerState+0x18>)
 80098f6:	681b      	ldr	r3, [r3, #0]
 80098f8:	b133      	cbz	r3, 8009908 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80098fa:	4b05      	ldr	r3, [pc, #20]	@ (8009910 <xTaskGetSchedulerState+0x1c>)
 80098fc:	6818      	ldr	r0, [r3, #0]
 80098fe:	fab0 f080 	clz	r0, r0
 8009902:	0940      	lsrs	r0, r0, #5
 8009904:	0040      	lsls	r0, r0, #1
 8009906:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009908:	2001      	movs	r0, #1
	}
 800990a:	4770      	bx	lr
 800990c:	2001666c 	.word	0x2001666c
 8009910:	20016654 	.word	0x20016654

08009914 <xTaskPriorityInherit>:
	{
 8009914:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8009916:	4604      	mov	r4, r0
 8009918:	b338      	cbz	r0, 800996a <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800991a:	4d1a      	ldr	r5, [pc, #104]	@ (8009984 <xTaskPriorityInherit+0x70>)
 800991c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800991e:	682a      	ldr	r2, [r5, #0]
 8009920:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009922:	4293      	cmp	r3, r2
 8009924:	d226      	bcs.n	8009974 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009926:	6982      	ldr	r2, [r0, #24]
 8009928:	2a00      	cmp	r2, #0
 800992a:	db04      	blt.n	8009936 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800992c:	682a      	ldr	r2, [r5, #0]
 800992e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009930:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
 8009934:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009936:	2214      	movs	r2, #20
 8009938:	4e13      	ldr	r6, [pc, #76]	@ (8009988 <xTaskPriorityInherit+0x74>)
 800993a:	fb02 6303 	mla	r3, r2, r3, r6
 800993e:	6962      	ldr	r2, [r4, #20]
 8009940:	429a      	cmp	r2, r3
 8009942:	d113      	bne.n	800996c <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009944:	1d27      	adds	r7, r4, #4
 8009946:	4638      	mov	r0, r7
 8009948:	f7fe fbe6 	bl	8008118 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800994c:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800994e:	4a0f      	ldr	r2, [pc, #60]	@ (800998c <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009950:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009952:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009954:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009956:	428b      	cmp	r3, r1
 8009958:	d900      	bls.n	800995c <xTaskPriorityInherit+0x48>
 800995a:	6013      	str	r3, [r2, #0]
 800995c:	2014      	movs	r0, #20
 800995e:	4639      	mov	r1, r7
 8009960:	fb00 6003 	mla	r0, r0, r3, r6
 8009964:	f7fe fbb6 	bl	80080d4 <vListInsertEnd>
				xReturn = pdTRUE;
 8009968:	2001      	movs	r0, #1
	}
 800996a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800996c:	682b      	ldr	r3, [r5, #0]
 800996e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009970:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8009972:	e7f9      	b.n	8009968 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009974:	682b      	ldr	r3, [r5, #0]
 8009976:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8009978:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800997a:	4298      	cmp	r0, r3
 800997c:	bf2c      	ite	cs
 800997e:	2000      	movcs	r0, #0
 8009980:	2001      	movcc	r0, #1
 8009982:	e7f2      	b.n	800996a <xTaskPriorityInherit+0x56>
 8009984:	20016b4c 	.word	0x20016b4c
 8009988:	200166ec 	.word	0x200166ec
 800998c:	20016670 	.word	0x20016670

08009990 <xTaskPriorityDisinherit>:
	{
 8009990:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009992:	b908      	cbnz	r0, 8009998 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8009994:	2000      	movs	r0, #0
	}
 8009996:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009998:	4b1d      	ldr	r3, [pc, #116]	@ (8009a10 <xTaskPriorityDisinherit+0x80>)
 800999a:	681c      	ldr	r4, [r3, #0]
 800999c:	4284      	cmp	r4, r0
 800999e:	d00a      	beq.n	80099b6 <xTaskPriorityDisinherit+0x26>
 80099a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80099a4:	b672      	cpsid	i
 80099a6:	f383 8811 	msr	BASEPRI, r3
 80099aa:	f3bf 8f6f 	isb	sy
 80099ae:	f3bf 8f4f 	dsb	sy
 80099b2:	b662      	cpsie	i
 80099b4:	e7fe      	b.n	80099b4 <xTaskPriorityDisinherit+0x24>
			configASSERT( pxTCB->uxMutexesHeld );
 80099b6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80099b8:	b953      	cbnz	r3, 80099d0 <xTaskPriorityDisinherit+0x40>
 80099ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80099be:	b672      	cpsid	i
 80099c0:	f383 8811 	msr	BASEPRI, r3
 80099c4:	f3bf 8f6f 	isb	sy
 80099c8:	f3bf 8f4f 	dsb	sy
 80099cc:	b662      	cpsie	i
 80099ce:	e7fe      	b.n	80099ce <xTaskPriorityDisinherit+0x3e>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80099d0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
 80099d2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80099d4:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 80099d6:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80099d8:	4291      	cmp	r1, r2
 80099da:	d0db      	beq.n	8009994 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80099dc:	2b00      	cmp	r3, #0
 80099de:	d1d9      	bne.n	8009994 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099e0:	1d25      	adds	r5, r4, #4
 80099e2:	4628      	mov	r0, r5
 80099e4:	f7fe fb98 	bl	8008118 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80099e8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80099ea:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80099ee:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80099f0:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 80099f2:	4a08      	ldr	r2, [pc, #32]	@ (8009a14 <xTaskPriorityDisinherit+0x84>)
 80099f4:	6811      	ldr	r1, [r2, #0]
 80099f6:	428b      	cmp	r3, r1
 80099f8:	d900      	bls.n	80099fc <xTaskPriorityDisinherit+0x6c>
 80099fa:	6013      	str	r3, [r2, #0]
 80099fc:	4a06      	ldr	r2, [pc, #24]	@ (8009a18 <xTaskPriorityDisinherit+0x88>)
 80099fe:	2014      	movs	r0, #20
 8009a00:	4629      	mov	r1, r5
 8009a02:	fb00 2003 	mla	r0, r0, r3, r2
 8009a06:	f7fe fb65 	bl	80080d4 <vListInsertEnd>
					xReturn = pdTRUE;
 8009a0a:	2001      	movs	r0, #1
		return xReturn;
 8009a0c:	e7c3      	b.n	8009996 <xTaskPriorityDisinherit+0x6>
 8009a0e:	bf00      	nop
 8009a10:	20016b4c 	.word	0x20016b4c
 8009a14:	20016670 	.word	0x20016670
 8009a18:	200166ec 	.word	0x200166ec

08009a1c <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009a1c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009a1e:	4604      	mov	r4, r0
 8009a20:	2800      	cmp	r0, #0
 8009a22:	d046      	beq.n	8009ab2 <vTaskPriorityDisinheritAfterTimeout+0x96>
			configASSERT( pxTCB->uxMutexesHeld );
 8009a24:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8009a26:	b952      	cbnz	r2, 8009a3e <vTaskPriorityDisinheritAfterTimeout+0x22>
 8009a28:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a2c:	b672      	cpsid	i
 8009a2e:	f383 8811 	msr	BASEPRI, r3
 8009a32:	f3bf 8f6f 	isb	sy
 8009a36:	f3bf 8f4f 	dsb	sy
 8009a3a:	b662      	cpsie	i
 8009a3c:	e7fe      	b.n	8009a3c <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009a3e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8009a40:	4299      	cmp	r1, r3
 8009a42:	bf38      	it	cc
 8009a44:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009a46:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8009a48:	428b      	cmp	r3, r1
 8009a4a:	d032      	beq.n	8009ab2 <vTaskPriorityDisinheritAfterTimeout+0x96>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009a4c:	2a01      	cmp	r2, #1
 8009a4e:	d130      	bne.n	8009ab2 <vTaskPriorityDisinheritAfterTimeout+0x96>
					configASSERT( pxTCB != pxCurrentTCB );
 8009a50:	4a18      	ldr	r2, [pc, #96]	@ (8009ab4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009a52:	6812      	ldr	r2, [r2, #0]
 8009a54:	4282      	cmp	r2, r0
 8009a56:	d10a      	bne.n	8009a6e <vTaskPriorityDisinheritAfterTimeout+0x52>
 8009a58:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a5c:	b672      	cpsid	i
 8009a5e:	f383 8811 	msr	BASEPRI, r3
 8009a62:	f3bf 8f6f 	isb	sy
 8009a66:	f3bf 8f4f 	dsb	sy
 8009a6a:	b662      	cpsie	i
 8009a6c:	e7fe      	b.n	8009a6c <vTaskPriorityDisinheritAfterTimeout+0x50>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009a6e:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009a70:	4d11      	ldr	r5, [pc, #68]	@ (8009ab8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009a72:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009a74:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 8009a78:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009a7a:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009a7e:	bfa8      	it	ge
 8009a80:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009a84:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009a86:	bfa8      	it	ge
 8009a88:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009a8a:	429a      	cmp	r2, r3
 8009a8c:	d111      	bne.n	8009ab2 <vTaskPriorityDisinheritAfterTimeout+0x96>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a8e:	1d06      	adds	r6, r0, #4
 8009a90:	4630      	mov	r0, r6
 8009a92:	f7fe fb41 	bl	8008118 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009a96:	4a09      	ldr	r2, [pc, #36]	@ (8009abc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8009a98:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009a9a:	6811      	ldr	r1, [r2, #0]
 8009a9c:	428b      	cmp	r3, r1
 8009a9e:	d900      	bls.n	8009aa2 <vTaskPriorityDisinheritAfterTimeout+0x86>
 8009aa0:	6013      	str	r3, [r2, #0]
 8009aa2:	2014      	movs	r0, #20
 8009aa4:	4631      	mov	r1, r6
 8009aa6:	fb00 5003 	mla	r0, r0, r3, r5
	}
 8009aaa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8009aae:	f7fe bb11 	b.w	80080d4 <vListInsertEnd>
	}
 8009ab2:	bd70      	pop	{r4, r5, r6, pc}
 8009ab4:	20016b4c 	.word	0x20016b4c
 8009ab8:	200166ec 	.word	0x200166ec
 8009abc:	20016670 	.word	0x20016670

08009ac0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009ac0:	4b04      	ldr	r3, [pc, #16]	@ (8009ad4 <pvTaskIncrementMutexHeldCount+0x14>)
 8009ac2:	681a      	ldr	r2, [r3, #0]
 8009ac4:	b11a      	cbz	r2, 8009ace <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009ac6:	6819      	ldr	r1, [r3, #0]
 8009ac8:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8009aca:	3201      	adds	r2, #1
 8009acc:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 8009ace:	6818      	ldr	r0, [r3, #0]
	}
 8009ad0:	4770      	bx	lr
 8009ad2:	bf00      	nop
 8009ad4:	20016b4c 	.word	0x20016b4c

08009ad8 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8009ad8:	4291      	cmp	r1, r2
{
 8009ada:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009adc:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009ade:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009ae0:	d80a      	bhi.n	8009af8 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009ae2:	1ad2      	subs	r2, r2, r3
 8009ae4:	6983      	ldr	r3, [r0, #24]
 8009ae6:	429a      	cmp	r2, r3
 8009ae8:	d20d      	bcs.n	8009b06 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009aea:	1d01      	adds	r1, r0, #4
 8009aec:	4b07      	ldr	r3, [pc, #28]	@ (8009b0c <prvInsertTimerInActiveList+0x34>)
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009aee:	6818      	ldr	r0, [r3, #0]
 8009af0:	f7fe fafb 	bl	80080ea <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009af4:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8009af6:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009af8:	429a      	cmp	r2, r3
 8009afa:	d201      	bcs.n	8009b00 <prvInsertTimerInActiveList+0x28>
 8009afc:	4299      	cmp	r1, r3
 8009afe:	d202      	bcs.n	8009b06 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009b00:	1d01      	adds	r1, r0, #4
 8009b02:	4b03      	ldr	r3, [pc, #12]	@ (8009b10 <prvInsertTimerInActiveList+0x38>)
 8009b04:	e7f3      	b.n	8009aee <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009b06:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009b08:	e7f5      	b.n	8009af6 <prvInsertTimerInActiveList+0x1e>
 8009b0a:	bf00      	nop
 8009b0c:	20016c4c 	.word	0x20016c4c
 8009b10:	20016c50 	.word	0x20016c50

08009b14 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009b14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009b16:	4c11      	ldr	r4, [pc, #68]	@ (8009b5c <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009b18:	f7fe fb74 	bl	8008204 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009b1c:	6825      	ldr	r5, [r4, #0]
 8009b1e:	b9bd      	cbnz	r5, 8009b50 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009b20:	4f0f      	ldr	r7, [pc, #60]	@ (8009b60 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009b22:	4e10      	ldr	r6, [pc, #64]	@ (8009b64 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009b24:	4638      	mov	r0, r7
 8009b26:	f7fe fac7 	bl	80080b8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009b2a:	4630      	mov	r0, r6
 8009b2c:	f7fe fac4 	bl	80080b8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009b30:	4b0d      	ldr	r3, [pc, #52]	@ (8009b68 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009b32:	4a0e      	ldr	r2, [pc, #56]	@ (8009b6c <prvCheckForValidListAndQueue+0x58>)
 8009b34:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 8009b36:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009b38:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 8009b3a:	4b0d      	ldr	r3, [pc, #52]	@ (8009b70 <prvCheckForValidListAndQueue+0x5c>)
 8009b3c:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009b3e:	4b0d      	ldr	r3, [pc, #52]	@ (8009b74 <prvCheckForValidListAndQueue+0x60>)
 8009b40:	9500      	str	r5, [sp, #0]
 8009b42:	f7fe fda5 	bl	8008690 <xQueueGenericCreateStatic>
 8009b46:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009b48:	b110      	cbz	r0, 8009b50 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009b4a:	490b      	ldr	r1, [pc, #44]	@ (8009b78 <prvCheckForValidListAndQueue+0x64>)
 8009b4c:	f7ff f9ce 	bl	8008eec <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009b50:	b003      	add	sp, #12
 8009b52:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009b56:	f7fe bb79 	b.w	800824c <vPortExitCritical>
 8009b5a:	bf00      	nop
 8009b5c:	20016c48 	.word	0x20016c48
 8009b60:	20016c68 	.word	0x20016c68
 8009b64:	20016c54 	.word	0x20016c54
 8009b68:	20016c50 	.word	0x20016c50
 8009b6c:	20016ba0 	.word	0x20016ba0
 8009b70:	20016c4c 	.word	0x20016c4c
 8009b74:	20016b50 	.word	0x20016b50
 8009b78:	08024bed 	.word	0x08024bed

08009b7c <xTimerCreateTimerTask>:
{
 8009b7c:	b510      	push	{r4, lr}
 8009b7e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009b80:	f7ff ffc8 	bl	8009b14 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009b84:	4b13      	ldr	r3, [pc, #76]	@ (8009bd4 <xTimerCreateTimerTask+0x58>)
 8009b86:	681b      	ldr	r3, [r3, #0]
 8009b88:	b1b3      	cbz	r3, 8009bb8 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009b8a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009b8c:	aa07      	add	r2, sp, #28
 8009b8e:	a906      	add	r1, sp, #24
 8009b90:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009b92:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009b96:	f7fe f98b 	bl	8007eb0 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009b9a:	9b05      	ldr	r3, [sp, #20]
 8009b9c:	9a07      	ldr	r2, [sp, #28]
 8009b9e:	9302      	str	r3, [sp, #8]
 8009ba0:	9b06      	ldr	r3, [sp, #24]
 8009ba2:	490d      	ldr	r1, [pc, #52]	@ (8009bd8 <xTimerCreateTimerTask+0x5c>)
 8009ba4:	9301      	str	r3, [sp, #4]
 8009ba6:	2302      	movs	r3, #2
 8009ba8:	480c      	ldr	r0, [pc, #48]	@ (8009bdc <xTimerCreateTimerTask+0x60>)
 8009baa:	9300      	str	r3, [sp, #0]
 8009bac:	4623      	mov	r3, r4
 8009bae:	f7ff fb66 	bl	800927e <xTaskCreateStatic>
 8009bb2:	4b0b      	ldr	r3, [pc, #44]	@ (8009be0 <xTimerCreateTimerTask+0x64>)
 8009bb4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009bb6:	b950      	cbnz	r0, 8009bce <xTimerCreateTimerTask+0x52>
 8009bb8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009bbc:	b672      	cpsid	i
 8009bbe:	f383 8811 	msr	BASEPRI, r3
 8009bc2:	f3bf 8f6f 	isb	sy
 8009bc6:	f3bf 8f4f 	dsb	sy
 8009bca:	b662      	cpsie	i
	configASSERT( xReturn );
 8009bcc:	e7fe      	b.n	8009bcc <xTimerCreateTimerTask+0x50>
}
 8009bce:	2001      	movs	r0, #1
 8009bd0:	b008      	add	sp, #32
 8009bd2:	bd10      	pop	{r4, pc}
 8009bd4:	20016c48 	.word	0x20016c48
 8009bd8:	08024bf2 	.word	0x08024bf2
 8009bdc:	08009ce5 	.word	0x08009ce5
 8009be0:	20016c44 	.word	0x20016c44

08009be4 <xTimerGenericCommand>:
{
 8009be4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009be6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009be8:	4604      	mov	r4, r0
{
 8009bea:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009bec:	b950      	cbnz	r0, 8009c04 <xTimerGenericCommand+0x20>
 8009bee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009bf2:	b672      	cpsid	i
 8009bf4:	f383 8811 	msr	BASEPRI, r3
 8009bf8:	f3bf 8f6f 	isb	sy
 8009bfc:	f3bf 8f4f 	dsb	sy
 8009c00:	b662      	cpsie	i
 8009c02:	e7fe      	b.n	8009c02 <xTimerGenericCommand+0x1e>
	if( xTimerQueue != NULL )
 8009c04:	4d0c      	ldr	r5, [pc, #48]	@ (8009c38 <xTimerGenericCommand+0x54>)
 8009c06:	6828      	ldr	r0, [r5, #0]
 8009c08:	b178      	cbz	r0, 8009c2a <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009c0a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009c0c:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009c0e:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009c12:	dc0c      	bgt.n	8009c2e <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009c14:	f7ff fe6e 	bl	80098f4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009c18:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009c1a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009c1c:	4669      	mov	r1, sp
 8009c1e:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009c20:	bf0c      	ite	eq
 8009c22:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009c24:	461a      	movne	r2, r3
 8009c26:	f7fe fdb8 	bl	800879a <xQueueGenericSend>
}
 8009c2a:	b004      	add	sp, #16
 8009c2c:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009c2e:	2300      	movs	r3, #0
 8009c30:	4669      	mov	r1, sp
 8009c32:	f7fe febf 	bl	80089b4 <xQueueGenericSendFromISR>
 8009c36:	e7f8      	b.n	8009c2a <xTimerGenericCommand+0x46>
 8009c38:	20016c48 	.word	0x20016c48

08009c3c <prvSampleTimeNow>:
{
 8009c3c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009c40:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 8009ce0 <prvSampleTimeNow+0xa4>
{
 8009c44:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8009c46:	f7ff fb8f 	bl	8009368 <xTaskGetTickCount>
 8009c4a:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009c4c:	f8d8 3000 	ldr.w	r3, [r8]
 8009c50:	4283      	cmp	r3, r0
 8009c52:	d909      	bls.n	8009c68 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009c54:	4f20      	ldr	r7, [pc, #128]	@ (8009cd8 <prvSampleTimeNow+0x9c>)
 8009c56:	683b      	ldr	r3, [r7, #0]
 8009c58:	681a      	ldr	r2, [r3, #0]
 8009c5a:	b96a      	cbnz	r2, 8009c78 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8009c5c:	4a1f      	ldr	r2, [pc, #124]	@ (8009cdc <prvSampleTimeNow+0xa0>)
 8009c5e:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 8009c60:	6013      	str	r3, [r2, #0]
 8009c62:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
 8009c64:	6039      	str	r1, [r7, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009c66:	e000      	b.n	8009c6a <prvSampleTimeNow+0x2e>
 8009c68:	2300      	movs	r3, #0
}
 8009c6a:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8009c6c:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8009c6e:	f8c8 5000 	str.w	r5, [r8]
}
 8009c72:	b002      	add	sp, #8
 8009c74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009c78:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009c7a:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009c7c:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009c80:	f104 0a04 	add.w	sl, r4, #4
 8009c84:	4650      	mov	r0, sl
 8009c86:	f7fe fa47 	bl	8008118 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009c8a:	6a23      	ldr	r3, [r4, #32]
 8009c8c:	4620      	mov	r0, r4
 8009c8e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009c90:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009c94:	075b      	lsls	r3, r3, #29
 8009c96:	d5de      	bpl.n	8009c56 <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009c98:	69a3      	ldr	r3, [r4, #24]
 8009c9a:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 8009c9c:	4599      	cmp	r9, r3
 8009c9e:	d206      	bcs.n	8009cae <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009ca0:	4651      	mov	r1, sl
 8009ca2:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8009ca4:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009ca6:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009ca8:	f7fe fa1f 	bl	80080ea <vListInsert>
 8009cac:	e7d3      	b.n	8009c56 <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009cae:	2300      	movs	r3, #0
 8009cb0:	464a      	mov	r2, r9
 8009cb2:	4620      	mov	r0, r4
 8009cb4:	4619      	mov	r1, r3
 8009cb6:	9300      	str	r3, [sp, #0]
 8009cb8:	f7ff ff94 	bl	8009be4 <xTimerGenericCommand>
				configASSERT( xResult );
 8009cbc:	2800      	cmp	r0, #0
 8009cbe:	d1ca      	bne.n	8009c56 <prvSampleTimeNow+0x1a>
 8009cc0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009cc4:	b672      	cpsid	i
 8009cc6:	f383 8811 	msr	BASEPRI, r3
 8009cca:	f3bf 8f6f 	isb	sy
 8009cce:	f3bf 8f4f 	dsb	sy
 8009cd2:	b662      	cpsie	i
 8009cd4:	e7fe      	b.n	8009cd4 <prvSampleTimeNow+0x98>
 8009cd6:	bf00      	nop
 8009cd8:	20016c50 	.word	0x20016c50
 8009cdc:	20016c4c 	.word	0x20016c4c
 8009ce0:	20016c40 	.word	0x20016c40

08009ce4 <prvTimerTask>:
{
 8009ce4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009ce8:	4d71      	ldr	r5, [pc, #452]	@ (8009eb0 <prvTimerTask+0x1cc>)
{
 8009cea:	b089      	sub	sp, #36	@ 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009cec:	4e71      	ldr	r6, [pc, #452]	@ (8009eb4 <prvTimerTask+0x1d0>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009cee:	682b      	ldr	r3, [r5, #0]
 8009cf0:	f8d3 8000 	ldr.w	r8, [r3]
 8009cf4:	f1b8 0f00 	cmp.w	r8, #0
 8009cf8:	d037      	beq.n	8009d6a <prvTimerTask+0x86>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009cfa:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009cfc:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009cfe:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
 8009d02:	f7ff fb29 	bl	8009358 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009d06:	a804      	add	r0, sp, #16
 8009d08:	f7ff ff98 	bl	8009c3c <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009d0c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009d0e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009d10:	2b00      	cmp	r3, #0
 8009d12:	d16b      	bne.n	8009dec <prvTimerTask+0x108>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009d14:	2c00      	cmp	r4, #0
 8009d16:	d14e      	bne.n	8009db6 <prvTimerTask+0xd2>
 8009d18:	4540      	cmp	r0, r8
 8009d1a:	d352      	bcc.n	8009dc2 <prvTimerTask+0xde>
				( void ) xTaskResumeAll();
 8009d1c:	f7ff fbc2 	bl	80094a4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d20:	682b      	ldr	r3, [r5, #0]
 8009d22:	68db      	ldr	r3, [r3, #12]
 8009d24:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009d26:	1d38      	adds	r0, r7, #4
 8009d28:	f7fe f9f6 	bl	8008118 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009d2c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8009d30:	0758      	lsls	r0, r3, #29
 8009d32:	d51c      	bpl.n	8009d6e <prvTimerTask+0x8a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009d34:	69b9      	ldr	r1, [r7, #24]
 8009d36:	4643      	mov	r3, r8
 8009d38:	464a      	mov	r2, r9
 8009d3a:	4638      	mov	r0, r7
 8009d3c:	4441      	add	r1, r8
 8009d3e:	f7ff fecb 	bl	8009ad8 <prvInsertTimerInActiveList>
 8009d42:	b1c0      	cbz	r0, 8009d76 <prvTimerTask+0x92>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009d44:	4623      	mov	r3, r4
 8009d46:	4642      	mov	r2, r8
 8009d48:	4621      	mov	r1, r4
 8009d4a:	4638      	mov	r0, r7
 8009d4c:	9400      	str	r4, [sp, #0]
 8009d4e:	f7ff ff49 	bl	8009be4 <xTimerGenericCommand>
			configASSERT( xResult );
 8009d52:	b980      	cbnz	r0, 8009d76 <prvTimerTask+0x92>
 8009d54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d58:	b672      	cpsid	i
 8009d5a:	f383 8811 	msr	BASEPRI, r3
 8009d5e:	f3bf 8f6f 	isb	sy
 8009d62:	f3bf 8f4f 	dsb	sy
 8009d66:	b662      	cpsie	i
 8009d68:	e7fe      	b.n	8009d68 <prvTimerTask+0x84>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009d6a:	2401      	movs	r4, #1
 8009d6c:	e7c9      	b.n	8009d02 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009d6e:	f023 0301 	bic.w	r3, r3, #1
 8009d72:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009d76:	6a3b      	ldr	r3, [r7, #32]
 8009d78:	4638      	mov	r0, r7
 8009d7a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009d7c:	2200      	movs	r2, #0
 8009d7e:	a904      	add	r1, sp, #16
 8009d80:	6830      	ldr	r0, [r6, #0]
 8009d82:	f7fe fed4 	bl	8008b2e <xQueueReceive>
 8009d86:	2800      	cmp	r0, #0
 8009d88:	d0b1      	beq.n	8009cee <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009d8a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009d8c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009d8e:	2b00      	cmp	r3, #0
 8009d90:	db2f      	blt.n	8009df2 <prvTimerTask+0x10e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8009d92:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8009d94:	6963      	ldr	r3, [r4, #20]
 8009d96:	2b00      	cmp	r3, #0
 8009d98:	d132      	bne.n	8009e00 <prvTimerTask+0x11c>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009d9a:	a803      	add	r0, sp, #12
 8009d9c:	f7ff ff4e 	bl	8009c3c <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009da0:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009da2:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8009da4:	2b09      	cmp	r3, #9
 8009da6:	d8e9      	bhi.n	8009d7c <prvTimerTask+0x98>
 8009da8:	e8df f003 	tbb	[pc, r3]
 8009dac:	592e2e2e 	.word	0x592e2e2e
 8009db0:	2e2e7a60 	.word	0x2e2e7a60
 8009db4:	6059      	.short	0x6059
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009db6:	4b40      	ldr	r3, [pc, #256]	@ (8009eb8 <prvTimerTask+0x1d4>)
 8009db8:	681b      	ldr	r3, [r3, #0]
 8009dba:	681c      	ldr	r4, [r3, #0]
 8009dbc:	fab4 f484 	clz	r4, r4
 8009dc0:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009dc2:	4622      	mov	r2, r4
 8009dc4:	eba8 0109 	sub.w	r1, r8, r9
 8009dc8:	6830      	ldr	r0, [r6, #0]
 8009dca:	f7ff f8d0 	bl	8008f6e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009dce:	f7ff fb69 	bl	80094a4 <xTaskResumeAll>
 8009dd2:	2800      	cmp	r0, #0
 8009dd4:	d1d2      	bne.n	8009d7c <prvTimerTask+0x98>
					portYIELD_WITHIN_API();
 8009dd6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009dda:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009dde:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009de2:	f3bf 8f4f 	dsb	sy
 8009de6:	f3bf 8f6f 	isb	sy
 8009dea:	e7c7      	b.n	8009d7c <prvTimerTask+0x98>
			( void ) xTaskResumeAll();
 8009dec:	f7ff fb5a 	bl	80094a4 <xTaskResumeAll>
}
 8009df0:	e7c4      	b.n	8009d7c <prvTimerTask+0x98>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009df2:	9b05      	ldr	r3, [sp, #20]
 8009df4:	9907      	ldr	r1, [sp, #28]
 8009df6:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009df8:	9b04      	ldr	r3, [sp, #16]
 8009dfa:	2b00      	cmp	r3, #0
 8009dfc:	dbbe      	blt.n	8009d7c <prvTimerTask+0x98>
 8009dfe:	e7c8      	b.n	8009d92 <prvTimerTask+0xae>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009e00:	1d20      	adds	r0, r4, #4
 8009e02:	f7fe f989 	bl	8008118 <uxListRemove>
 8009e06:	e7c8      	b.n	8009d9a <prvTimerTask+0xb6>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009e08:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009e0c:	4620      	mov	r0, r4
 8009e0e:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009e10:	f043 0301 	orr.w	r3, r3, #1
 8009e14:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009e18:	9b05      	ldr	r3, [sp, #20]
 8009e1a:	4419      	add	r1, r3
 8009e1c:	f7ff fe5c 	bl	8009ad8 <prvInsertTimerInActiveList>
 8009e20:	2800      	cmp	r0, #0
 8009e22:	d0ab      	beq.n	8009d7c <prvTimerTask+0x98>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009e24:	6a23      	ldr	r3, [r4, #32]
 8009e26:	4620      	mov	r0, r4
 8009e28:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009e2a:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009e2e:	0759      	lsls	r1, r3, #29
 8009e30:	d5a4      	bpl.n	8009d7c <prvTimerTask+0x98>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009e32:	69a2      	ldr	r2, [r4, #24]
 8009e34:	2300      	movs	r3, #0
 8009e36:	9905      	ldr	r1, [sp, #20]
 8009e38:	4620      	mov	r0, r4
 8009e3a:	9300      	str	r3, [sp, #0]
 8009e3c:	440a      	add	r2, r1
 8009e3e:	4619      	mov	r1, r3
 8009e40:	f7ff fed0 	bl	8009be4 <xTimerGenericCommand>
							configASSERT( xResult );
 8009e44:	2800      	cmp	r0, #0
 8009e46:	d199      	bne.n	8009d7c <prvTimerTask+0x98>
 8009e48:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e4c:	b672      	cpsid	i
 8009e4e:	f383 8811 	msr	BASEPRI, r3
 8009e52:	f3bf 8f6f 	isb	sy
 8009e56:	f3bf 8f4f 	dsb	sy
 8009e5a:	b662      	cpsie	i
 8009e5c:	e7fe      	b.n	8009e5c <prvTimerTask+0x178>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009e5e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009e62:	f023 0301 	bic.w	r3, r3, #1
 8009e66:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 8009e6a:	e787      	b.n	8009d7c <prvTimerTask+0x98>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009e6c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009e70:	f043 0301 	orr.w	r3, r3, #1
 8009e74:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009e78:	9905      	ldr	r1, [sp, #20]
 8009e7a:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009e7c:	b951      	cbnz	r1, 8009e94 <prvTimerTask+0x1b0>
 8009e7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e82:	b672      	cpsid	i
 8009e84:	f383 8811 	msr	BASEPRI, r3
 8009e88:	f3bf 8f6f 	isb	sy
 8009e8c:	f3bf 8f4f 	dsb	sy
 8009e90:	b662      	cpsie	i
 8009e92:	e7fe      	b.n	8009e92 <prvTimerTask+0x1ae>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8009e94:	4603      	mov	r3, r0
 8009e96:	4401      	add	r1, r0
 8009e98:	4620      	mov	r0, r4
 8009e9a:	f7ff fe1d 	bl	8009ad8 <prvInsertTimerInActiveList>
					break;
 8009e9e:	e76d      	b.n	8009d7c <prvTimerTask+0x98>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009ea0:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009ea4:	079a      	lsls	r2, r3, #30
 8009ea6:	d4dc      	bmi.n	8009e62 <prvTimerTask+0x17e>
							vPortFree( pxTimer );
 8009ea8:	4620      	mov	r0, r4
 8009eaa:	f7fe f8c9 	bl	8008040 <vPortFree>
 8009eae:	e765      	b.n	8009d7c <prvTimerTask+0x98>
 8009eb0:	20016c50 	.word	0x20016c50
 8009eb4:	20016c48 	.word	0x20016c48
 8009eb8:	20016c4c 	.word	0x20016c4c

08009ebc <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009ebc:	8880      	ldrh	r0, [r0, #4]
 8009ebe:	4770      	bx	lr

08009ec0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009ec0:	b570      	push	{r4, r5, r6, lr}
 8009ec2:	6803      	ldr	r3, [r0, #0]
 8009ec4:	460c      	mov	r4, r1
 8009ec6:	2100      	movs	r1, #0
 8009ec8:	4605      	mov	r5, r0
 8009eca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009ecc:	4798      	blx	r3
 8009ece:	4606      	mov	r6, r0
 8009ed0:	682b      	ldr	r3, [r5, #0]
 8009ed2:	4628      	mov	r0, r5
 8009ed4:	1ba4      	subs	r4, r4, r6
 8009ed6:	6a1b      	ldr	r3, [r3, #32]
 8009ed8:	b2a4      	uxth	r4, r4
 8009eda:	4798      	blx	r3
 8009edc:	fbb4 f0f0 	udiv	r0, r4, r0
 8009ee0:	bd70      	pop	{r4, r5, r6, pc}

08009ee2 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009ee2:	2300      	movs	r3, #0
 8009ee4:	8083      	strh	r3, [r0, #4]
 8009ee6:	4770      	bx	lr

08009ee8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009ee8:	b510      	push	{r4, lr}
 8009eea:	6803      	ldr	r3, [r0, #0]
 8009eec:	4604      	mov	r4, r0
 8009eee:	8881      	ldrh	r1, [r0, #4]
 8009ef0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009ef2:	4798      	blx	r3
 8009ef4:	88a3      	ldrh	r3, [r4, #4]
 8009ef6:	3301      	adds	r3, #1
 8009ef8:	80a3      	strh	r3, [r4, #4]
 8009efa:	bd10      	pop	{r4, pc}

08009efc <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009efc:	6803      	ldr	r3, [r0, #0]
 8009efe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009f00:	4718      	bx	r3

08009f02 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8009f02:	4770      	bx	lr

08009f04 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009f04:	4a02      	ldr	r2, [pc, #8]	@ (8009f10 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009f06:	6002      	str	r2, [r0, #0]
 8009f08:	2200      	movs	r2, #0
 8009f0a:	8082      	strh	r2, [r0, #4]
 8009f0c:	4770      	bx	lr
 8009f0e:	bf00      	nop
 8009f10:	08024c04 	.word	0x08024c04

08009f14 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009f14:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009f16:	2000      	movs	r0, #0
 8009f18:	b12b      	cbz	r3, 8009f26 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009f1a:	b920      	cbnz	r0, 8009f26 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009f1c:	1a5a      	subs	r2, r3, r1
 8009f1e:	699b      	ldr	r3, [r3, #24]
 8009f20:	4250      	negs	r0, r2
 8009f22:	4150      	adcs	r0, r2
 8009f24:	e7f8      	b.n	8009f18 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009f26:	4770      	bx	lr

08009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009f28:	2300      	movs	r3, #0
 8009f2a:	6148      	str	r0, [r1, #20]
 8009f2c:	618b      	str	r3, [r1, #24]
 8009f2e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009f30:	b913      	cbnz	r3, 8009f38 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8009f32:	6281      	str	r1, [r0, #40]	@ 0x28
 8009f34:	4770      	bx	lr
 8009f36:	4613      	mov	r3, r2
 8009f38:	699a      	ldr	r2, [r3, #24]
 8009f3a:	2a00      	cmp	r2, #0
 8009f3c:	d1fb      	bne.n	8009f36 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8009f3e:	6199      	str	r1, [r3, #24]
 8009f40:	4770      	bx	lr

08009f42 <_ZN8touchgfx9Container9removeAllEv>:
 8009f42:	2200      	movs	r2, #0
 8009f44:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009f46:	b123      	cbz	r3, 8009f52 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8009f48:	6999      	ldr	r1, [r3, #24]
 8009f4a:	6281      	str	r1, [r0, #40]	@ 0x28
 8009f4c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009f50:	e7f8      	b.n	8009f44 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009f52:	4770      	bx	lr

08009f54 <_ZN8touchgfx9Container6unlinkEv>:
 8009f54:	2300      	movs	r3, #0
 8009f56:	6283      	str	r3, [r0, #40]	@ 0x28
 8009f58:	4770      	bx	lr

08009f5a <_ZNK8touchgfx9Container12getSolidRectEv>:
 8009f5a:	2200      	movs	r2, #0
 8009f5c:	8002      	strh	r2, [r0, #0]
 8009f5e:	8042      	strh	r2, [r0, #2]
 8009f60:	8082      	strh	r2, [r0, #4]
 8009f62:	80c2      	strh	r2, [r0, #6]
 8009f64:	4770      	bx	lr

08009f66 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8009f66:	b570      	push	{r4, r5, r6, lr}
 8009f68:	460d      	mov	r5, r1
 8009f6a:	4616      	mov	r6, r2
 8009f6c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009f6e:	b13c      	cbz	r4, 8009f80 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8009f70:	6823      	ldr	r3, [r4, #0]
 8009f72:	4620      	mov	r0, r4
 8009f74:	4632      	mov	r2, r6
 8009f76:	4629      	mov	r1, r5
 8009f78:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009f7a:	4798      	blx	r3
 8009f7c:	69a4      	ldr	r4, [r4, #24]
 8009f7e:	e7f6      	b.n	8009f6e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8009f80:	bd70      	pop	{r4, r5, r6, pc}

08009f82 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8009f82:	b538      	push	{r3, r4, r5, lr}
 8009f84:	460d      	mov	r5, r1
 8009f86:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009f88:	b134      	cbz	r4, 8009f98 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8009f8a:	682b      	ldr	r3, [r5, #0]
 8009f8c:	4621      	mov	r1, r4
 8009f8e:	4628      	mov	r0, r5
 8009f90:	689b      	ldr	r3, [r3, #8]
 8009f92:	4798      	blx	r3
 8009f94:	69a4      	ldr	r4, [r4, #24]
 8009f96:	e7f7      	b.n	8009f88 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8009f98:	bd38      	pop	{r3, r4, r5, pc}

08009f9a <_ZN8touchgfx9ContainerD1Ev>:
 8009f9a:	4770      	bx	lr

08009f9c <_ZN8touchgfx9ContainerD0Ev>:
 8009f9c:	b510      	push	{r4, lr}
 8009f9e:	4604      	mov	r4, r0
 8009fa0:	212c      	movs	r1, #44	@ 0x2c
 8009fa2:	f017 fcb3 	bl	802190c <_ZdlPvj>
 8009fa6:	4620      	mov	r0, r4
 8009fa8:	bd10      	pop	{r4, pc}

08009faa <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8009faa:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009fac:	b19b      	cbz	r3, 8009fd6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009fae:	428b      	cmp	r3, r1
 8009fb0:	d109      	bne.n	8009fc6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8009fb2:	699a      	ldr	r2, [r3, #24]
 8009fb4:	2100      	movs	r1, #0
 8009fb6:	6159      	str	r1, [r3, #20]
 8009fb8:	6282      	str	r2, [r0, #40]	@ 0x28
 8009fba:	b902      	cbnz	r2, 8009fbe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8009fbc:	4770      	bx	lr
 8009fbe:	6199      	str	r1, [r3, #24]
 8009fc0:	4770      	bx	lr
 8009fc2:	4613      	mov	r3, r2
 8009fc4:	b13a      	cbz	r2, 8009fd6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009fc6:	699a      	ldr	r2, [r3, #24]
 8009fc8:	428a      	cmp	r2, r1
 8009fca:	d1fa      	bne.n	8009fc2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009fcc:	698a      	ldr	r2, [r1, #24]
 8009fce:	619a      	str	r2, [r3, #24]
 8009fd0:	2300      	movs	r3, #0
 8009fd2:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009fd6:	4770      	bx	lr

08009fd8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009fd8:	b410      	push	{r4}
 8009fda:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009fdc:	4604      	mov	r4, r0
 8009fde:	b92b      	cbnz	r3, 8009fec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009fe0:	6803      	ldr	r3, [r0, #0]
 8009fe2:	4611      	mov	r1, r2
 8009fe4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009fe8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8009fea:	4718      	bx	r3
 8009fec:	b941      	cbnz	r1, 800a000 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009fee:	6193      	str	r3, [r2, #24]
 8009ff0:	6282      	str	r2, [r0, #40]	@ 0x28
 8009ff2:	6154      	str	r4, [r2, #20]
 8009ff4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009ff8:	4770      	bx	lr
 8009ffa:	4603      	mov	r3, r0
 8009ffc:	2800      	cmp	r0, #0
 8009ffe:	d0f9      	beq.n	8009ff4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a000:	4299      	cmp	r1, r3
 800a002:	6998      	ldr	r0, [r3, #24]
 800a004:	d1f9      	bne.n	8009ffa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a006:	6190      	str	r0, [r2, #24]
 800a008:	618a      	str	r2, [r1, #24]
 800a00a:	e7f2      	b.n	8009ff2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a00c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a00c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a010:	461f      	mov	r7, r3
 800a012:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800a016:	460d      	mov	r5, r1
 800a018:	4616      	mov	r6, r2
 800a01a:	b103      	cbz	r3, 800a01e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a01c:	6038      	str	r0, [r7, #0]
 800a01e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a020:	b314      	cbz	r4, 800a068 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a022:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a026:	b1eb      	cbz	r3, 800a064 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a028:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a02c:	428d      	cmp	r5, r1
 800a02e:	db19      	blt.n	800a064 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a030:	b289      	uxth	r1, r1
 800a032:	8923      	ldrh	r3, [r4, #8]
 800a034:	440b      	add	r3, r1
 800a036:	b21b      	sxth	r3, r3
 800a038:	429d      	cmp	r5, r3
 800a03a:	da13      	bge.n	800a064 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a03c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a040:	4296      	cmp	r6, r2
 800a042:	db0f      	blt.n	800a064 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a044:	b292      	uxth	r2, r2
 800a046:	8963      	ldrh	r3, [r4, #10]
 800a048:	4413      	add	r3, r2
 800a04a:	b21b      	sxth	r3, r3
 800a04c:	429e      	cmp	r6, r3
 800a04e:	da09      	bge.n	800a064 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a050:	6823      	ldr	r3, [r4, #0]
 800a052:	1ab2      	subs	r2, r6, r2
 800a054:	1a69      	subs	r1, r5, r1
 800a056:	4620      	mov	r0, r4
 800a058:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800a05c:	b212      	sxth	r2, r2
 800a05e:	463b      	mov	r3, r7
 800a060:	b209      	sxth	r1, r1
 800a062:	47c0      	blx	r8
 800a064:	69a4      	ldr	r4, [r4, #24]
 800a066:	e7db      	b.n	800a020 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a068:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a06c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a06c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a070:	4c6d      	ldr	r4, [pc, #436]	@ (800a228 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800a072:	b0a1      	sub	sp, #132	@ 0x84
 800a074:	4606      	mov	r6, r0
 800a076:	6824      	ldr	r4, [r4, #0]
 800a078:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800a07a:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800a07e:	2400      	movs	r4, #0
 800a080:	9303      	str	r3, [sp, #12]
 800a082:	802c      	strh	r4, [r5, #0]
 800a084:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800a086:	802c      	strh	r4, [r5, #0]
 800a088:	601c      	str	r4, [r3, #0]
 800a08a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a08e:	f7ff ffbd 	bl	800a00c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a092:	f1b9 0f03 	cmp.w	r9, #3
 800a096:	f340 80c1 	ble.w	800a21c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800a09a:	4631      	mov	r1, r6
 800a09c:	a80c      	add	r0, sp, #48	@ 0x30
 800a09e:	f007 fca7 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a0a2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800a0a6:	9306      	str	r3, [sp, #24]
 800a0a8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800a0ac:	9307      	str	r3, [sp, #28]
 800a0ae:	9b03      	ldr	r3, [sp, #12]
 800a0b0:	f8d3 a000 	ldr.w	sl, [r3]
 800a0b4:	f1ba 0f00 	cmp.w	sl, #0
 800a0b8:	f000 80b3 	beq.w	800a222 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800a0bc:	4651      	mov	r1, sl
 800a0be:	a810      	add	r0, sp, #64	@ 0x40
 800a0c0:	f007 fc96 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a0c4:	2002      	movs	r0, #2
 800a0c6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800a0ca:	9b01      	ldr	r3, [sp, #4]
 800a0cc:	9a06      	ldr	r2, [sp, #24]
 800a0ce:	fb91 f1f0 	sdiv	r1, r1, r0
 800a0d2:	189d      	adds	r5, r3, r2
 800a0d4:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800a0d8:	9a07      	ldr	r2, [sp, #28]
 800a0da:	4419      	add	r1, r3
 800a0dc:	9b02      	ldr	r3, [sp, #8]
 800a0de:	4413      	add	r3, r2
 800a0e0:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800a0e4:	1a6d      	subs	r5, r5, r1
 800a0e6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800a0ea:	fb92 f2f0 	sdiv	r2, r2, r0
 800a0ee:	440a      	add	r2, r1
 800a0f0:	1a9b      	subs	r3, r3, r2
 800a0f2:	435b      	muls	r3, r3
 800a0f4:	fb05 3505 	mla	r5, r5, r5, r3
 800a0f8:	4f4c      	ldr	r7, [pc, #304]	@ (800a22c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a0fa:	ac10      	add	r4, sp, #64	@ 0x40
 800a0fc:	f1b9 0f0c 	cmp.w	r9, #12
 800a100:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a102:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a104:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a106:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a108:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a10a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a10c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a110:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a114:	f04f 0303 	mov.w	r3, #3
 800a118:	bfd8      	it	le
 800a11a:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a11e:	f04f 0400 	mov.w	r4, #0
 800a122:	f8cd 9000 	str.w	r9, [sp]
 800a126:	bfcc      	ite	gt
 800a128:	4698      	movgt	r8, r3
 800a12a:	fb92 f8f3 	sdivle	r8, r2, r3
 800a12e:	1c63      	adds	r3, r4, #1
 800a130:	aa10      	add	r2, sp, #64	@ 0x40
 800a132:	f004 0401 	and.w	r4, r4, #1
 800a136:	f04f 0b00 	mov.w	fp, #0
 800a13a:	9308      	str	r3, [sp, #32]
 800a13c:	9b00      	ldr	r3, [sp, #0]
 800a13e:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a142:	fb93 f3f8 	sdiv	r3, r3, r8
 800a146:	3404      	adds	r4, #4
 800a148:	b29b      	uxth	r3, r3
 800a14a:	9304      	str	r3, [sp, #16]
 800a14c:	9a04      	ldr	r2, [sp, #16]
 800a14e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a152:	fb13 f302 	smulbb	r3, r3, r2
 800a156:	9a01      	ldr	r2, [sp, #4]
 800a158:	b29b      	uxth	r3, r3
 800a15a:	1899      	adds	r1, r3, r2
 800a15c:	9305      	str	r3, [sp, #20]
 800a15e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a162:	b209      	sxth	r1, r1
 800a164:	4299      	cmp	r1, r3
 800a166:	db4d      	blt.n	800a204 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a168:	8932      	ldrh	r2, [r6, #8]
 800a16a:	4413      	add	r3, r2
 800a16c:	b21b      	sxth	r3, r3
 800a16e:	4299      	cmp	r1, r3
 800a170:	da48      	bge.n	800a204 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a172:	9b04      	ldr	r3, [sp, #16]
 800a174:	6827      	ldr	r7, [r4, #0]
 800a176:	fb17 f703 	smulbb	r7, r7, r3
 800a17a:	9b02      	ldr	r3, [sp, #8]
 800a17c:	b2bf      	uxth	r7, r7
 800a17e:	18fa      	adds	r2, r7, r3
 800a180:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a184:	b212      	sxth	r2, r2
 800a186:	429a      	cmp	r2, r3
 800a188:	db3c      	blt.n	800a204 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a18a:	8970      	ldrh	r0, [r6, #10]
 800a18c:	4403      	add	r3, r0
 800a18e:	b21b      	sxth	r3, r3
 800a190:	429a      	cmp	r2, r3
 800a192:	da37      	bge.n	800a204 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a194:	2300      	movs	r3, #0
 800a196:	4630      	mov	r0, r6
 800a198:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a19a:	ab0b      	add	r3, sp, #44	@ 0x2c
 800a19c:	f7ff ff36 	bl	800a00c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a1a0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800a1a2:	b37a      	cbz	r2, 800a204 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a1a4:	4552      	cmp	r2, sl
 800a1a6:	d02d      	beq.n	800a204 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a1a8:	4611      	mov	r1, r2
 800a1aa:	a80e      	add	r0, sp, #56	@ 0x38
 800a1ac:	9209      	str	r2, [sp, #36]	@ 0x24
 800a1ae:	f007 fc1f 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a1b2:	f04f 0e02 	mov.w	lr, #2
 800a1b6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800a1ba:	9a06      	ldr	r2, [sp, #24]
 800a1bc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800a1c0:	9b01      	ldr	r3, [sp, #4]
 800a1c2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800a1c6:	4413      	add	r3, r2
 800a1c8:	9a07      	ldr	r2, [sp, #28]
 800a1ca:	fb91 f1fe 	sdiv	r1, r1, lr
 800a1ce:	fb9c fcfe 	sdiv	ip, ip, lr
 800a1d2:	4401      	add	r1, r0
 800a1d4:	1a58      	subs	r0, r3, r1
 800a1d6:	9b02      	ldr	r3, [sp, #8]
 800a1d8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800a1dc:	4413      	add	r3, r2
 800a1de:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a1e0:	448c      	add	ip, r1
 800a1e2:	eba3 030c 	sub.w	r3, r3, ip
 800a1e6:	435b      	muls	r3, r3
 800a1e8:	fb00 3300 	mla	r3, r0, r0, r3
 800a1ec:	42ab      	cmp	r3, r5
 800a1ee:	d208      	bcs.n	800a202 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a1f0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800a1f2:	461d      	mov	r5, r3
 800a1f4:	9803      	ldr	r0, [sp, #12]
 800a1f6:	6001      	str	r1, [r0, #0]
 800a1f8:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800a1fa:	9805      	ldr	r0, [sp, #20]
 800a1fc:	8008      	strh	r0, [r1, #0]
 800a1fe:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800a200:	800f      	strh	r7, [r1, #0]
 800a202:	4692      	mov	sl, r2
 800a204:	f10b 0b01 	add.w	fp, fp, #1
 800a208:	3408      	adds	r4, #8
 800a20a:	f1bb 0f04 	cmp.w	fp, #4
 800a20e:	d19d      	bne.n	800a14c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a210:	9b00      	ldr	r3, [sp, #0]
 800a212:	9c08      	ldr	r4, [sp, #32]
 800a214:	444b      	add	r3, r9
 800a216:	4544      	cmp	r4, r8
 800a218:	9300      	str	r3, [sp, #0]
 800a21a:	d188      	bne.n	800a12e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a21c:	b021      	add	sp, #132	@ 0x84
 800a21e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a222:	f04f 35ff 	mov.w	r5, #4294967295
 800a226:	e767      	b.n	800a0f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a228:	20016c88 	.word	0x20016c88
 800a22c:	08023484 	.word	0x08023484

0800a230 <_ZN8touchgfx4RectaNERKS0_>:
 800a230:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a234:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a238:	888c      	ldrh	r4, [r1, #4]
 800a23a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a23e:	443c      	add	r4, r7
 800a240:	b2a4      	uxth	r4, r4
 800a242:	fa0f f884 	sxth.w	r8, r4
 800a246:	45c1      	cmp	r9, r8
 800a248:	da2f      	bge.n	800a2aa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a24a:	8882      	ldrh	r2, [r0, #4]
 800a24c:	444a      	add	r2, r9
 800a24e:	b292      	uxth	r2, r2
 800a250:	fa0f fe82 	sxth.w	lr, r2
 800a254:	4577      	cmp	r7, lr
 800a256:	da28      	bge.n	800a2aa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a258:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a25c:	88cb      	ldrh	r3, [r1, #6]
 800a25e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a262:	442b      	add	r3, r5
 800a264:	b21b      	sxth	r3, r3
 800a266:	429e      	cmp	r6, r3
 800a268:	da1f      	bge.n	800a2aa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a26a:	88c3      	ldrh	r3, [r0, #6]
 800a26c:	4433      	add	r3, r6
 800a26e:	b29b      	uxth	r3, r3
 800a270:	fa0f fc83 	sxth.w	ip, r3
 800a274:	4565      	cmp	r5, ip
 800a276:	da18      	bge.n	800a2aa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a278:	454f      	cmp	r7, r9
 800a27a:	bfb8      	it	lt
 800a27c:	464f      	movlt	r7, r9
 800a27e:	42b5      	cmp	r5, r6
 800a280:	bfb8      	it	lt
 800a282:	4635      	movlt	r5, r6
 800a284:	45f0      	cmp	r8, lr
 800a286:	bfd8      	it	le
 800a288:	4622      	movle	r2, r4
 800a28a:	1bd2      	subs	r2, r2, r7
 800a28c:	8082      	strh	r2, [r0, #4]
 800a28e:	884a      	ldrh	r2, [r1, #2]
 800a290:	88c9      	ldrh	r1, [r1, #6]
 800a292:	8007      	strh	r7, [r0, #0]
 800a294:	440a      	add	r2, r1
 800a296:	8045      	strh	r5, [r0, #2]
 800a298:	b292      	uxth	r2, r2
 800a29a:	b211      	sxth	r1, r2
 800a29c:	458c      	cmp	ip, r1
 800a29e:	bfa8      	it	ge
 800a2a0:	4613      	movge	r3, r2
 800a2a2:	1b5b      	subs	r3, r3, r5
 800a2a4:	80c3      	strh	r3, [r0, #6]
 800a2a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a2aa:	2300      	movs	r3, #0
 800a2ac:	8003      	strh	r3, [r0, #0]
 800a2ae:	8043      	strh	r3, [r0, #2]
 800a2b0:	8083      	strh	r3, [r0, #4]
 800a2b2:	80c3      	strh	r3, [r0, #6]
 800a2b4:	e7f7      	b.n	800a2a6 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a2b6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a2ba:	2b00      	cmp	r3, #0
 800a2bc:	dd06      	ble.n	800a2cc <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a2be:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a2c2:	2800      	cmp	r0, #0
 800a2c4:	bfcc      	ite	gt
 800a2c6:	2000      	movgt	r0, #0
 800a2c8:	2001      	movle	r0, #1
 800a2ca:	4770      	bx	lr
 800a2cc:	2001      	movs	r0, #1
 800a2ce:	4770      	bx	lr

0800a2d0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a2d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a2d4:	2300      	movs	r3, #0
 800a2d6:	4604      	mov	r4, r0
 800a2d8:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800a2da:	8003      	strh	r3, [r0, #0]
 800a2dc:	8043      	strh	r3, [r0, #2]
 800a2de:	8083      	strh	r3, [r0, #4]
 800a2e0:	80c3      	strh	r3, [r0, #6]
 800a2e2:	2d00      	cmp	r5, #0
 800a2e4:	d040      	beq.n	800a368 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a2e6:	1d28      	adds	r0, r5, #4
 800a2e8:	f7ff ffe5 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a2ec:	b988      	cbnz	r0, 800a312 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a2ee:	4620      	mov	r0, r4
 800a2f0:	f7ff ffe1 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a2f4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a2f8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a2fc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a300:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a304:	b138      	cbz	r0, 800a316 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a306:	8022      	strh	r2, [r4, #0]
 800a308:	8063      	strh	r3, [r4, #2]
 800a30a:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a30e:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a312:	69ad      	ldr	r5, [r5, #24]
 800a314:	e7e5      	b.n	800a2e2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a316:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a31a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a31e:	4290      	cmp	r0, r2
 800a320:	4607      	mov	r7, r0
 800a322:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a326:	460e      	mov	r6, r1
 800a328:	bfa8      	it	ge
 800a32a:	4617      	movge	r7, r2
 800a32c:	4299      	cmp	r1, r3
 800a32e:	4472      	add	r2, lr
 800a330:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a334:	bfa8      	it	ge
 800a336:	461e      	movge	r6, r3
 800a338:	4440      	add	r0, r8
 800a33a:	4471      	add	r1, lr
 800a33c:	4463      	add	r3, ip
 800a33e:	b200      	sxth	r0, r0
 800a340:	8027      	strh	r7, [r4, #0]
 800a342:	b212      	sxth	r2, r2
 800a344:	8066      	strh	r6, [r4, #2]
 800a346:	b209      	sxth	r1, r1
 800a348:	b21b      	sxth	r3, r3
 800a34a:	4290      	cmp	r0, r2
 800a34c:	bfac      	ite	ge
 800a34e:	ebc7 0200 	rsbge	r2, r7, r0
 800a352:	ebc7 0202 	rsblt	r2, r7, r2
 800a356:	4299      	cmp	r1, r3
 800a358:	bfac      	ite	ge
 800a35a:	ebc6 0301 	rsbge	r3, r6, r1
 800a35e:	ebc6 0303 	rsblt	r3, r6, r3
 800a362:	80a2      	strh	r2, [r4, #4]
 800a364:	80e3      	strh	r3, [r4, #6]
 800a366:	e7d4      	b.n	800a312 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a368:	4620      	mov	r0, r4
 800a36a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a36e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a36e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a372:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800a376:	b383      	cbz	r3, 800a3da <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a378:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a37a:	b374      	cbz	r4, 800a3da <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a37c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a380:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a384:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a388:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a38c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a390:	b303      	cbz	r3, 800a3d4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a392:	4668      	mov	r0, sp
 800a394:	1d21      	adds	r1, r4, #4
 800a396:	f8ad 5000 	strh.w	r5, [sp]
 800a39a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a39e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a3a2:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a3a6:	f7ff ff43 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800a3aa:	4668      	mov	r0, sp
 800a3ac:	f7ff ff83 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a3b0:	b980      	cbnz	r0, 800a3d4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a3b2:	f8bd 3000 	ldrh.w	r3, [sp]
 800a3b6:	4669      	mov	r1, sp
 800a3b8:	88a2      	ldrh	r2, [r4, #4]
 800a3ba:	4620      	mov	r0, r4
 800a3bc:	1a9b      	subs	r3, r3, r2
 800a3be:	88e2      	ldrh	r2, [r4, #6]
 800a3c0:	f8ad 3000 	strh.w	r3, [sp]
 800a3c4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a3c8:	1a9b      	subs	r3, r3, r2
 800a3ca:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a3ce:	6823      	ldr	r3, [r4, #0]
 800a3d0:	689b      	ldr	r3, [r3, #8]
 800a3d2:	4798      	blx	r3
 800a3d4:	69a4      	ldr	r4, [r4, #24]
 800a3d6:	2c00      	cmp	r4, #0
 800a3d8:	d1d8      	bne.n	800a38c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a3da:	b002      	add	sp, #8
 800a3dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a3e0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a3e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a3e2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800a3e6:	460d      	mov	r5, r1
 800a3e8:	4616      	mov	r6, r2
 800a3ea:	b323      	cbz	r3, 800a436 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a3ec:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a3ee:	b314      	cbz	r4, 800a436 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a3f0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a3f4:	b1eb      	cbz	r3, 800a432 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a3f6:	6828      	ldr	r0, [r5, #0]
 800a3f8:	466b      	mov	r3, sp
 800a3fa:	6869      	ldr	r1, [r5, #4]
 800a3fc:	c303      	stmia	r3!, {r0, r1}
 800a3fe:	4668      	mov	r0, sp
 800a400:	1d21      	adds	r1, r4, #4
 800a402:	f7ff ff15 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800a406:	4668      	mov	r0, sp
 800a408:	f7ff ff55 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a40c:	b988      	cbnz	r0, 800a432 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a40e:	f8bd 3000 	ldrh.w	r3, [sp]
 800a412:	4669      	mov	r1, sp
 800a414:	88a2      	ldrh	r2, [r4, #4]
 800a416:	4620      	mov	r0, r4
 800a418:	1a9b      	subs	r3, r3, r2
 800a41a:	88e2      	ldrh	r2, [r4, #6]
 800a41c:	f8ad 3000 	strh.w	r3, [sp]
 800a420:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a424:	1a9b      	subs	r3, r3, r2
 800a426:	4632      	mov	r2, r6
 800a428:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a42c:	6823      	ldr	r3, [r4, #0]
 800a42e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800a430:	4798      	blx	r3
 800a432:	69a4      	ldr	r4, [r4, #24]
 800a434:	e7db      	b.n	800a3ee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a436:	b002      	add	sp, #8
 800a438:	bd70      	pop	{r4, r5, r6, pc}

0800a43a <_ZNK8touchgfx6Slider15getIndicatorMinEv>:
 800a43a:	f9b0 00e4 	ldrsh.w	r0, [r0, #228]	@ 0xe4
 800a43e:	4770      	bx	lr

0800a440 <_ZNK8touchgfx6Slider15getIndicatorMaxEv>:
 800a440:	f9b0 00e6 	ldrsh.w	r0, [r0, #230]	@ 0xe6
 800a444:	4770      	bx	lr

0800a446 <_ZNK8touchgfx6Slider11getMinValueEv>:
 800a446:	f9b0 0030 	ldrsh.w	r0, [r0, #48]	@ 0x30
 800a44a:	4770      	bx	lr

0800a44c <_ZNK8touchgfx6Slider11getMaxValueEv>:
 800a44c:	f9b0 0032 	ldrsh.w	r0, [r0, #50]	@ 0x32
 800a450:	4770      	bx	lr

0800a452 <_ZN8touchgfx6Slider8setValueEs>:
 800a452:	b570      	push	{r4, r5, r6, lr}
 800a454:	6803      	ldr	r3, [r0, #0]
 800a456:	4604      	mov	r4, r0
 800a458:	e9d3 532b 	ldrd	r5, r3, [r3, #172]	@ 0xac
 800a45c:	4798      	blx	r3
 800a45e:	4601      	mov	r1, r0
 800a460:	462b      	mov	r3, r5
 800a462:	4620      	mov	r0, r4
 800a464:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a468:	4718      	bx	r3

0800a46a <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE>:
 800a46a:	b570      	push	{r4, r5, r6, lr}
 800a46c:	6803      	ldr	r3, [r0, #0]
 800a46e:	4604      	mov	r4, r0
 800a470:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
 800a474:	f8d3 60ac 	ldr.w	r6, [r3, #172]	@ 0xac
 800a478:	b95a      	cbnz	r2, 800a492 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x28>
 800a47a:	894d      	ldrh	r5, [r1, #10]
 800a47c:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 800a480:	4620      	mov	r0, r4
 800a482:	4798      	blx	r3
 800a484:	1a29      	subs	r1, r5, r0
 800a486:	4633      	mov	r3, r6
 800a488:	4620      	mov	r0, r4
 800a48a:	b209      	sxth	r1, r1
 800a48c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a490:	4718      	bx	r3
 800a492:	898d      	ldrh	r5, [r1, #12]
 800a494:	e7f2      	b.n	800a47c <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x12>

0800a496 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv>:
 800a496:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
 800a49a:	2302      	movs	r3, #2
 800a49c:	b922      	cbnz	r2, 800a4a8 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0x12>
 800a49e:	f9b0 0094 	ldrsh.w	r0, [r0, #148]	@ 0x94
 800a4a2:	fb90 f0f3 	sdiv	r0, r0, r3
 800a4a6:	4770      	bx	lr
 800a4a8:	f9b0 0096 	ldrsh.w	r0, [r0, #150]	@ 0x96
 800a4ac:	e7f9      	b.n	800a4a2 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0xc>

0800a4ae <_ZN8touchgfx6Slider13setValueRangeEsss>:
 800a4ae:	8642      	strh	r2, [r0, #50]	@ 0x32
 800a4b0:	6802      	ldr	r2, [r0, #0]
 800a4b2:	8601      	strh	r1, [r0, #48]	@ 0x30
 800a4b4:	4619      	mov	r1, r3
 800a4b6:	b410      	push	{r4}
 800a4b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a4bc:	f8d2 20a8 	ldr.w	r2, [r2, #168]	@ 0xa8
 800a4c0:	4710      	bx	r2

0800a4c2 <_ZN8touchgfx6Slider13setValueRangeEss>:
 800a4c2:	f9b0 302e 	ldrsh.w	r3, [r0, #46]	@ 0x2e
 800a4c6:	428b      	cmp	r3, r1
 800a4c8:	b410      	push	{r4}
 800a4ca:	db09      	blt.n	800a4e0 <_ZN8touchgfx6Slider13setValueRangeEss+0x1e>
 800a4cc:	4293      	cmp	r3, r2
 800a4ce:	bfa8      	it	ge
 800a4d0:	4613      	movge	r3, r2
 800a4d2:	6804      	ldr	r4, [r0, #0]
 800a4d4:	f8d4 4098 	ldr.w	r4, [r4, #152]	@ 0x98
 800a4d8:	46a4      	mov	ip, r4
 800a4da:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a4de:	4760      	bx	ip
 800a4e0:	460b      	mov	r3, r1
 800a4e2:	e7f6      	b.n	800a4d2 <_ZN8touchgfx6Slider13setValueRangeEss+0x10>

0800a4e4 <_ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv>:
 800a4e4:	f9b0 20e6 	ldrsh.w	r2, [r0, #230]	@ 0xe6
 800a4e8:	f9b0 00e4 	ldrsh.w	r0, [r0, #228]	@ 0xe4
 800a4ec:	1a10      	subs	r0, r2, r0
 800a4ee:	4770      	bx	lr

0800a4f0 <_ZNK8touchgfx6Slider17getValueRangeSizeEv>:
 800a4f0:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	@ 0x32
 800a4f4:	f9b0 0030 	ldrsh.w	r0, [r0, #48]	@ 0x30
 800a4f8:	1a10      	subs	r0, r2, r0
 800a4fa:	4770      	bx	lr

0800a4fc <_ZN8touchgfx6SliderD1Ev>:
 800a4fc:	4770      	bx	lr

0800a4fe <_ZN8touchgfx6SliderD0Ev>:
 800a4fe:	b510      	push	{r4, lr}
 800a500:	4604      	mov	r4, r0
 800a502:	21f4      	movs	r1, #244	@ 0xf4
 800a504:	f017 fa02 	bl	802190c <_ZdlPvj>
 800a508:	4620      	mov	r0, r4
 800a50a:	bd10      	pop	{r4, pc}

0800a50c <_ZNK8touchgfx6Slider15valueToPositionEi>:
 800a50c:	b570      	push	{r4, r5, r6, lr}
 800a50e:	f9b0 5032 	ldrsh.w	r5, [r0, #50]	@ 0x32
 800a512:	4604      	mov	r4, r0
 800a514:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	@ 0x30
 800a518:	428d      	cmp	r5, r1
 800a51a:	bfa8      	it	ge
 800a51c:	460d      	movge	r5, r1
 800a51e:	429d      	cmp	r5, r3
 800a520:	bfac      	ite	ge
 800a522:	ebc3 0505 	rsbge	r5, r3, r5
 800a526:	ebc3 0503 	rsblt	r5, r3, r3
 800a52a:	6803      	ldr	r3, [r0, #0]
 800a52c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800a530:	4798      	blx	r3
 800a532:	6823      	ldr	r3, [r4, #0]
 800a534:	4606      	mov	r6, r0
 800a536:	4620      	mov	r0, r4
 800a538:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800a53c:	4798      	blx	r3
 800a53e:	4631      	mov	r1, r6
 800a540:	4602      	mov	r2, r0
 800a542:	4628      	mov	r0, r5
 800a544:	f007 fb83 	bl	8011c4e <_ZN8touchgfx6muldivElll>
 800a548:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800a54c:	2b01      	cmp	r3, #1
 800a54e:	bf0b      	itete	eq
 800a550:	f8b4 30e6 	ldrheq.w	r3, [r4, #230]	@ 0xe6
 800a554:	f8b4 30e4 	ldrhne.w	r3, [r4, #228]	@ 0xe4
 800a558:	1a18      	subeq	r0, r3, r0
 800a55a:	18c0      	addne	r0, r0, r3
 800a55c:	b200      	sxth	r0, r0
 800a55e:	bd70      	pop	{r4, r5, r6, pc}

0800a560 <_ZNK8touchgfx6Slider15positionToValueEs>:
 800a560:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a562:	f9b0 30e6 	ldrsh.w	r3, [r0, #230]	@ 0xe6
 800a566:	4605      	mov	r5, r0
 800a568:	f9b0 40e4 	ldrsh.w	r4, [r0, #228]	@ 0xe4
 800a56c:	4299      	cmp	r1, r3
 800a56e:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
 800a572:	f9b0 6030 	ldrsh.w	r6, [r0, #48]	@ 0x30
 800a576:	bfa8      	it	ge
 800a578:	4619      	movge	r1, r3
 800a57a:	42a1      	cmp	r1, r4
 800a57c:	bfb8      	it	lt
 800a57e:	4621      	movlt	r1, r4
 800a580:	2a01      	cmp	r2, #1
 800a582:	b289      	uxth	r1, r1
 800a584:	bf08      	it	eq
 800a586:	1a5c      	subeq	r4, r3, r1
 800a588:	6803      	ldr	r3, [r0, #0]
 800a58a:	bf18      	it	ne
 800a58c:	1b0c      	subne	r4, r1, r4
 800a58e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800a592:	4798      	blx	r3
 800a594:	682b      	ldr	r3, [r5, #0]
 800a596:	4607      	mov	r7, r0
 800a598:	b224      	sxth	r4, r4
 800a59a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800a59e:	4628      	mov	r0, r5
 800a5a0:	4798      	blx	r3
 800a5a2:	4639      	mov	r1, r7
 800a5a4:	4602      	mov	r2, r0
 800a5a6:	4620      	mov	r0, r4
 800a5a8:	f007 fb51 	bl	8011c4e <_ZN8touchgfx6muldivElll>
 800a5ac:	4430      	add	r0, r6
 800a5ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a5b0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE>:
 800a5b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a5b4:	790b      	ldrb	r3, [r1, #4]
 800a5b6:	4604      	mov	r4, r0
 800a5b8:	460d      	mov	r5, r1
 800a5ba:	b32b      	cbz	r3, 800a608 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x58>
 800a5bc:	2b01      	cmp	r3, #1
 800a5be:	d137      	bne.n	800a630 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
 800a5c0:	6823      	ldr	r3, [r4, #0]
 800a5c2:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 800a5c6:	f8d3 70ac 	ldr.w	r7, [r3, #172]	@ 0xac
 800a5ca:	2a00      	cmp	r2, #0
 800a5cc:	d12e      	bne.n	800a62c <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800a5ce:	88ee      	ldrh	r6, [r5, #6]
 800a5d0:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 800a5d4:	4620      	mov	r0, r4
 800a5d6:	4798      	blx	r3
 800a5d8:	1a31      	subs	r1, r6, r0
 800a5da:	4620      	mov	r0, r4
 800a5dc:	b209      	sxth	r1, r1
 800a5de:	47b8      	blx	r7
 800a5e0:	792b      	ldrb	r3, [r5, #4]
 800a5e2:	2b01      	cmp	r3, #1
 800a5e4:	d124      	bne.n	800a630 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
 800a5e6:	f8d4 00ec 	ldr.w	r0, [r4, #236]	@ 0xec
 800a5ea:	b308      	cbz	r0, 800a630 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
 800a5ec:	6803      	ldr	r3, [r0, #0]
 800a5ee:	68db      	ldr	r3, [r3, #12]
 800a5f0:	4798      	blx	r3
 800a5f2:	b1e8      	cbz	r0, 800a630 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
 800a5f4:	f8d4 00ec 	ldr.w	r0, [r4, #236]	@ 0xec
 800a5f8:	4621      	mov	r1, r4
 800a5fa:	f9b4 202e 	ldrsh.w	r2, [r4, #46]	@ 0x2e
 800a5fe:	6803      	ldr	r3, [r0, #0]
 800a600:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a604:	689b      	ldr	r3, [r3, #8]
 800a606:	4718      	bx	r3
 800a608:	f8d0 00e8 	ldr.w	r0, [r0, #232]	@ 0xe8
 800a60c:	2800      	cmp	r0, #0
 800a60e:	d0d7      	beq.n	800a5c0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800a610:	6803      	ldr	r3, [r0, #0]
 800a612:	68db      	ldr	r3, [r3, #12]
 800a614:	4798      	blx	r3
 800a616:	2800      	cmp	r0, #0
 800a618:	d0d2      	beq.n	800a5c0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800a61a:	f8d4 00e8 	ldr.w	r0, [r4, #232]	@ 0xe8
 800a61e:	4621      	mov	r1, r4
 800a620:	f9b4 202e 	ldrsh.w	r2, [r4, #46]	@ 0x2e
 800a624:	6803      	ldr	r3, [r0, #0]
 800a626:	689b      	ldr	r3, [r3, #8]
 800a628:	4798      	blx	r3
 800a62a:	e7c9      	b.n	800a5c0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800a62c:	892e      	ldrh	r6, [r5, #8]
 800a62e:	e7cf      	b.n	800a5d0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x20>
 800a630:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a634 <_ZN8touchgfx8DrawableC1Ev>:
 800a634:	4a0a      	ldr	r2, [pc, #40]	@ (800a660 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800a636:	6002      	str	r2, [r0, #0]
 800a638:	2200      	movs	r2, #0
 800a63a:	8082      	strh	r2, [r0, #4]
 800a63c:	80c2      	strh	r2, [r0, #6]
 800a63e:	8102      	strh	r2, [r0, #8]
 800a640:	8142      	strh	r2, [r0, #10]
 800a642:	8182      	strh	r2, [r0, #12]
 800a644:	81c2      	strh	r2, [r0, #14]
 800a646:	8202      	strh	r2, [r0, #16]
 800a648:	8242      	strh	r2, [r0, #18]
 800a64a:	61c2      	str	r2, [r0, #28]
 800a64c:	8402      	strh	r2, [r0, #32]
 800a64e:	8442      	strh	r2, [r0, #34]	@ 0x22
 800a650:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800a654:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a658:	2201      	movs	r2, #1
 800a65a:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 800a65e:	4770      	bx	lr
 800a660:	08025640 	.word	0x08025640

0800a664 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800a664:	b570      	push	{r4, r5, r6, lr}
 800a666:	6803      	ldr	r3, [r0, #0]
 800a668:	4604      	mov	r4, r0
 800a66a:	4615      	mov	r5, r2
 800a66c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a66e:	4798      	blx	r3
 800a670:	6823      	ldr	r3, [r4, #0]
 800a672:	4629      	mov	r1, r5
 800a674:	4620      	mov	r0, r4
 800a676:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a678:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a67c:	4718      	bx	r3

0800a67e <_ZN8touchgfx6Slider23updateIndicatorPositionEs>:
 800a67e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a682:	f9b0 80e4 	ldrsh.w	r8, [r0, #228]	@ 0xe4
 800a686:	4604      	mov	r4, r0
 800a688:	308c      	adds	r0, #140	@ 0x8c
 800a68a:	4588      	cmp	r8, r1
 800a68c:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800a690:	f104 06b8 	add.w	r6, r4, #184	@ 0xb8
 800a694:	bfb8      	it	lt
 800a696:	4688      	movlt	r8, r1
 800a698:	f9b0 105a 	ldrsh.w	r1, [r0, #90]	@ 0x5a
 800a69c:	4588      	cmp	r8, r1
 800a69e:	bfa8      	it	ge
 800a6a0:	4688      	movge	r8, r1
 800a6a2:	fa1f f788 	uxth.w	r7, r8
 800a6a6:	2b00      	cmp	r3, #0
 800a6a8:	d130      	bne.n	800a70c <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x8e>
 800a6aa:	f9b4 2092 	ldrsh.w	r2, [r4, #146]	@ 0x92
 800a6ae:	4641      	mov	r1, r8
 800a6b0:	f7f8 f80b 	bl	80026ca <_ZN8touchgfx8Drawable6moveToEss>
 800a6b4:	4630      	mov	r0, r6
 800a6b6:	f007 f900 	bl	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800a6ba:	f8b4 20bc 	ldrh.w	r2, [r4, #188]	@ 0xbc
 800a6be:	6823      	ldr	r3, [r4, #0]
 800a6c0:	4620      	mov	r0, r4
 800a6c2:	1abf      	subs	r7, r7, r2
 800a6c4:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 800a6c8:	b2bf      	uxth	r7, r7
 800a6ca:	4798      	blx	r3
 800a6cc:	4407      	add	r7, r0
 800a6ce:	f8a4 70c0 	strh.w	r7, [r4, #192]	@ 0xc0
 800a6d2:	4630      	mov	r0, r6
 800a6d4:	f007 f8f1 	bl	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800a6d8:	6823      	ldr	r3, [r4, #0]
 800a6da:	4641      	mov	r1, r8
 800a6dc:	4620      	mov	r0, r4
 800a6de:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800a6e2:	4798      	blx	r3
 800a6e4:	85e0      	strh	r0, [r4, #46]	@ 0x2e
 800a6e6:	f8d4 00f0 	ldr.w	r0, [r4, #240]	@ 0xf0
 800a6ea:	2800      	cmp	r0, #0
 800a6ec:	d03c      	beq.n	800a768 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xea>
 800a6ee:	6803      	ldr	r3, [r0, #0]
 800a6f0:	68db      	ldr	r3, [r3, #12]
 800a6f2:	4798      	blx	r3
 800a6f4:	2800      	cmp	r0, #0
 800a6f6:	d037      	beq.n	800a768 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xea>
 800a6f8:	f8d4 00f0 	ldr.w	r0, [r4, #240]	@ 0xf0
 800a6fc:	4621      	mov	r1, r4
 800a6fe:	f9b4 202e 	ldrsh.w	r2, [r4, #46]	@ 0x2e
 800a702:	6803      	ldr	r3, [r0, #0]
 800a704:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a708:	689b      	ldr	r3, [r3, #8]
 800a70a:	4718      	bx	r3
 800a70c:	4642      	mov	r2, r8
 800a70e:	f9b4 1090 	ldrsh.w	r1, [r4, #144]	@ 0x90
 800a712:	f7f7 ffda 	bl	80026ca <_ZN8touchgfx8Drawable6moveToEss>
 800a716:	4630      	mov	r0, r6
 800a718:	f007 f8cf 	bl	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800a71c:	8f60      	ldrh	r0, [r4, #58]	@ 0x3a
 800a71e:	8fe5      	ldrh	r5, [r4, #62]	@ 0x3e
 800a720:	6823      	ldr	r3, [r4, #0]
 800a722:	4405      	add	r5, r0
 800a724:	4620      	mov	r0, r4
 800a726:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 800a72a:	b2ad      	uxth	r5, r5
 800a72c:	4798      	blx	r3
 800a72e:	6823      	ldr	r3, [r4, #0]
 800a730:	1bed      	subs	r5, r5, r7
 800a732:	f9b4 a0bc 	ldrsh.w	sl, [r4, #188]	@ 0xbc
 800a736:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 800a73a:	1a2d      	subs	r5, r5, r0
 800a73c:	4620      	mov	r0, r4
 800a73e:	4798      	blx	r3
 800a740:	4438      	add	r0, r7
 800a742:	b2ad      	uxth	r5, r5
 800a744:	f9b4 90c0 	ldrsh.w	r9, [r4, #192]	@ 0xc0
 800a748:	b202      	sxth	r2, r0
 800a74a:	4651      	mov	r1, sl
 800a74c:	4630      	mov	r0, r6
 800a74e:	f7f8 fcbf 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
 800a752:	4630      	mov	r0, r6
 800a754:	b22a      	sxth	r2, r5
 800a756:	4649      	mov	r1, r9
 800a758:	f7ff ff84 	bl	800a664 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a75c:	f8b4 006a 	ldrh.w	r0, [r4, #106]	@ 0x6a
 800a760:	1a2d      	subs	r5, r5, r0
 800a762:	f8a4 5066 	strh.w	r5, [r4, #102]	@ 0x66
 800a766:	e7b4      	b.n	800a6d2 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x54>
 800a768:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800a76c <_ZN8touchgfx8Drawable11setPositionERKS0_>:
 800a76c:	b570      	push	{r4, r5, r6, lr}
 800a76e:	4604      	mov	r4, r0
 800a770:	f9b1 5008 	ldrsh.w	r5, [r1, #8]
 800a774:	f9b1 600a 	ldrsh.w	r6, [r1, #10]
 800a778:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
 800a77c:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 800a780:	f7f8 fca6 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
 800a784:	4632      	mov	r2, r6
 800a786:	4629      	mov	r1, r5
 800a788:	4620      	mov	r0, r4
 800a78a:	f7ff ff6b 	bl	800a664 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a78e:	bd70      	pop	{r4, r5, r6, pc}

0800a790 <_ZN8touchgfx6Slider21setupHorizontalSliderEsssss>:
 800a790:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a794:	f04f 0a00 	mov.w	sl, #0
 800a798:	f100 0b34 	add.w	fp, r0, #52	@ 0x34
 800a79c:	4604      	mov	r4, r0
 800a79e:	461d      	mov	r5, r3
 800a7a0:	f880 a02c 	strb.w	sl, [r0, #44]	@ 0x2c
 800a7a4:	4658      	mov	r0, fp
 800a7a6:	4690      	mov	r8, r2
 800a7a8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 800a7ac:	4689      	mov	r9, r1
 800a7ae:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	@ 0x28
 800a7b2:	f7f8 fc8d 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
 800a7b6:	4659      	mov	r1, fp
 800a7b8:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
 800a7bc:	f7ff ffd6 	bl	800a76c <_ZN8touchgfx8Drawable11setPositionERKS0_>
 800a7c0:	4652      	mov	r2, sl
 800a7c2:	4651      	mov	r1, sl
 800a7c4:	f104 0060 	add.w	r0, r4, #96	@ 0x60
 800a7c8:	f7f8 fc82 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
 800a7cc:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800a7ce:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800a7d0:	4620      	mov	r0, r4
 800a7d2:	4490      	add	r8, r2
 800a7d4:	f8b4 2096 	ldrh.w	r2, [r4, #150]	@ 0x96
 800a7d8:	f8a4 5092 	strh.w	r5, [r4, #146]	@ 0x92
 800a7dc:	4489      	add	r9, r1
 800a7de:	4415      	add	r5, r2
 800a7e0:	f8b4 1094 	ldrh.w	r1, [r4, #148]	@ 0x94
 800a7e4:	fa0f f288 	sxth.w	r2, r8
 800a7e8:	f8a4 70e4 	strh.w	r7, [r4, #228]	@ 0xe4
 800a7ec:	1873      	adds	r3, r6, r1
 800a7ee:	b22d      	sxth	r5, r5
 800a7f0:	fa0f f989 	sxth.w	r9, r9
 800a7f4:	f8a4 60e6 	strh.w	r6, [r4, #230]	@ 0xe6
 800a7f8:	b219      	sxth	r1, r3
 800a7fa:	42aa      	cmp	r2, r5
 800a7fc:	bfb8      	it	lt
 800a7fe:	462a      	movlt	r2, r5
 800a800:	4549      	cmp	r1, r9
 800a802:	bfb8      	it	lt
 800a804:	4649      	movlt	r1, r9
 800a806:	f7ff ff2d 	bl	800a664 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a80a:	6823      	ldr	r3, [r4, #0]
 800a80c:	f9b4 102e 	ldrsh.w	r1, [r4, #46]	@ 0x2e
 800a810:	4620      	mov	r0, r4
 800a812:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800a816:	b001      	add	sp, #4
 800a818:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a81c:	4718      	bx	r3

0800a81e <_ZN8touchgfx6Slider19setupVerticalSliderEsssss>:
 800a81e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a822:	461d      	mov	r5, r3
 800a824:	f100 0a34 	add.w	sl, r0, #52	@ 0x34
 800a828:	2301      	movs	r3, #1
 800a82a:	4604      	mov	r4, r0
 800a82c:	4617      	mov	r7, r2
 800a82e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 800a832:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 800a836:	4650      	mov	r0, sl
 800a838:	460e      	mov	r6, r1
 800a83a:	f9bd 9020 	ldrsh.w	r9, [sp, #32]
 800a83e:	f7f8 fc47 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
 800a842:	4651      	mov	r1, sl
 800a844:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
 800a848:	f7ff ff90 	bl	800a76c <_ZN8touchgfx8Drawable11setPositionERKS0_>
 800a84c:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800a84e:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800a850:	4620      	mov	r0, r4
 800a852:	f8b4 3096 	ldrh.w	r3, [r4, #150]	@ 0x96
 800a856:	440e      	add	r6, r1
 800a858:	443a      	add	r2, r7
 800a85a:	f8b4 1094 	ldrh.w	r1, [r4, #148]	@ 0x94
 800a85e:	4443      	add	r3, r8
 800a860:	f8a4 5090 	strh.w	r5, [r4, #144]	@ 0x90
 800a864:	b212      	sxth	r2, r2
 800a866:	440d      	add	r5, r1
 800a868:	b21b      	sxth	r3, r3
 800a86a:	f8a4 90e4 	strh.w	r9, [r4, #228]	@ 0xe4
 800a86e:	b231      	sxth	r1, r6
 800a870:	f8a4 80e6 	strh.w	r8, [r4, #230]	@ 0xe6
 800a874:	429a      	cmp	r2, r3
 800a876:	b22d      	sxth	r5, r5
 800a878:	bfb8      	it	lt
 800a87a:	461a      	movlt	r2, r3
 800a87c:	42a9      	cmp	r1, r5
 800a87e:	bfb8      	it	lt
 800a880:	4629      	movlt	r1, r5
 800a882:	f7ff feef 	bl	800a664 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a886:	6823      	ldr	r3, [r4, #0]
 800a888:	f9b4 102e 	ldrsh.w	r1, [r4, #46]	@ 0x2e
 800a88c:	4620      	mov	r0, r4
 800a88e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800a892:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a896:	4718      	bx	r3

0800a898 <_ZN8touchgfx6SliderC1Ev>:
 800a898:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a89c:	4604      	mov	r4, r0
 800a89e:	f7ff fec9 	bl	800a634 <_ZN8touchgfx8DrawableC1Ev>
 800a8a2:	4b28      	ldr	r3, [pc, #160]	@ (800a944 <_ZN8touchgfx6SliderC1Ev+0xac>)
 800a8a4:	2500      	movs	r5, #0
 800a8a6:	ae02      	add	r6, sp, #8
 800a8a8:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 800a8ac:	6023      	str	r3, [r4, #0]
 800a8ae:	f104 0934 	add.w	r9, r4, #52	@ 0x34
 800a8b2:	2364      	movs	r3, #100	@ 0x64
 800a8b4:	f104 0a60 	add.w	sl, r4, #96	@ 0x60
 800a8b8:	f826 7d04 	strh.w	r7, [r6, #-4]!
 800a8bc:	4648      	mov	r0, r9
 800a8be:	8663      	strh	r3, [r4, #50]	@ 0x32
 800a8c0:	4631      	mov	r1, r6
 800a8c2:	62a5      	str	r5, [r4, #40]	@ 0x28
 800a8c4:	f104 088c 	add.w	r8, r4, #140	@ 0x8c
 800a8c8:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
 800a8cc:	85e5      	strh	r5, [r4, #46]	@ 0x2e
 800a8ce:	8625      	strh	r5, [r4, #48]	@ 0x30
 800a8d0:	f7f9 f8aa 	bl	8003a28 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800a8d4:	4631      	mov	r1, r6
 800a8d6:	4650      	mov	r0, sl
 800a8d8:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a8dc:	f7f9 f8a4 	bl	8003a28 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800a8e0:	4631      	mov	r1, r6
 800a8e2:	f104 06b8 	add.w	r6, r4, #184	@ 0xb8
 800a8e6:	4640      	mov	r0, r8
 800a8e8:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a8ec:	f7f9 f89c 	bl	8003a28 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800a8f0:	4630      	mov	r0, r6
 800a8f2:	f7ff fe9f 	bl	800a634 <_ZN8touchgfx8DrawableC1Ev>
 800a8f6:	4b14      	ldr	r3, [pc, #80]	@ (800a948 <_ZN8touchgfx6SliderC1Ev+0xb0>)
 800a8f8:	4651      	mov	r1, sl
 800a8fa:	4630      	mov	r0, r6
 800a8fc:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 800a900:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800a904:	f8c4 50e0 	str.w	r5, [r4, #224]	@ 0xe0
 800a908:	e9c4 3539 	strd	r3, r5, [r4, #228]	@ 0xe4
 800a90c:	2301      	movs	r3, #1
 800a90e:	e9c4 553b 	strd	r5, r5, [r4, #236]	@ 0xec
 800a912:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800a916:	f7ff fb07 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a91a:	4649      	mov	r1, r9
 800a91c:	4620      	mov	r0, r4
 800a91e:	f7ff fb03 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a922:	4631      	mov	r1, r6
 800a924:	4620      	mov	r0, r4
 800a926:	f7ff faff 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a92a:	4641      	mov	r1, r8
 800a92c:	4620      	mov	r0, r4
 800a92e:	f7ff fafb 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a932:	4620      	mov	r0, r4
 800a934:	f9b4 10e4 	ldrsh.w	r1, [r4, #228]	@ 0xe4
 800a938:	f7ff fea1 	bl	800a67e <_ZN8touchgfx6Slider23updateIndicatorPositionEs>
 800a93c:	4620      	mov	r0, r4
 800a93e:	b002      	add	sp, #8
 800a940:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a944:	08024cc8 	.word	0x08024cc8
 800a948:	08024c38 	.word	0x08024c38

0800a94c <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>:
 800a94c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a950:	4604      	mov	r4, r0
 800a952:	f100 0634 	add.w	r6, r0, #52	@ 0x34
 800a956:	4689      	mov	r9, r1
 800a958:	461f      	mov	r7, r3
 800a95a:	f104 058c 	add.w	r5, r4, #140	@ 0x8c
 800a95e:	4630      	mov	r0, r6
 800a960:	4690      	mov	r8, r2
 800a962:	f006 ffaa 	bl	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800a966:	4628      	mov	r0, r5
 800a968:	f006 ffa7 	bl	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800a96c:	4649      	mov	r1, r9
 800a96e:	4630      	mov	r0, r6
 800a970:	f003 fb72 	bl	800e058 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a974:	4641      	mov	r1, r8
 800a976:	f104 0060 	add.w	r0, r4, #96	@ 0x60
 800a97a:	f003 fb6d 	bl	800e058 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a97e:	4639      	mov	r1, r7
 800a980:	4628      	mov	r0, r5
 800a982:	f003 fb69 	bl	800e058 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a986:	f9b4 206a 	ldrsh.w	r2, [r4, #106]	@ 0x6a
 800a98a:	f9b4 1068 	ldrsh.w	r1, [r4, #104]	@ 0x68
 800a98e:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
 800a992:	f7ff fe67 	bl	800a664 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a996:	6823      	ldr	r3, [r4, #0]
 800a998:	f9b4 102e 	ldrsh.w	r1, [r4, #46]	@ 0x2e
 800a99c:	4620      	mov	r0, r4
 800a99e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800a9a2:	4798      	blx	r3
 800a9a4:	4630      	mov	r0, r6
 800a9a6:	f006 ff88 	bl	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800a9aa:	4628      	mov	r0, r5
 800a9ac:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a9b0:	f006 bf83 	b.w	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>

0800a9b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a9b4:	6803      	ldr	r3, [r0, #0]
 800a9b6:	b513      	push	{r0, r1, r4, lr}
 800a9b8:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800a9bc:	2300      	movs	r3, #0
 800a9be:	e9cd 3300 	strd	r3, r3, [sp]
 800a9c2:	466b      	mov	r3, sp
 800a9c4:	47a0      	blx	r4
 800a9c6:	b002      	add	sp, #8
 800a9c8:	bd10      	pop	{r4, pc}

0800a9ca <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a9ca:	2301      	movs	r3, #1
 800a9cc:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a9d0:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a9d4:	4770      	bx	lr

0800a9d6 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a9d6:	2301      	movs	r3, #1
 800a9d8:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a9dc:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a9e0:	4770      	bx	lr

0800a9e2 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a9e2:	6843      	ldr	r3, [r0, #4]
 800a9e4:	2201      	movs	r2, #1
 800a9e6:	725a      	strb	r2, [r3, #9]
 800a9e8:	6840      	ldr	r0, [r0, #4]
 800a9ea:	6803      	ldr	r3, [r0, #0]
 800a9ec:	691b      	ldr	r3, [r3, #16]
 800a9ee:	4718      	bx	r3

0800a9f0 <_ZN8touchgfx3HAL8flushDMAEv>:
 800a9f0:	6840      	ldr	r0, [r0, #4]
 800a9f2:	6803      	ldr	r3, [r0, #0]
 800a9f4:	689b      	ldr	r3, [r3, #8]
 800a9f6:	4718      	bx	r3

0800a9f8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800a9f8:	b530      	push	{r4, r5, lr}
 800a9fa:	b08b      	sub	sp, #44	@ 0x2c
 800a9fc:	6804      	ldr	r4, [r0, #0]
 800a9fe:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800aa02:	9509      	str	r5, [sp, #36]	@ 0x24
 800aa04:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800aa08:	9508      	str	r5, [sp, #32]
 800aa0a:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800aa0e:	9507      	str	r5, [sp, #28]
 800aa10:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800aa14:	9506      	str	r5, [sp, #24]
 800aa16:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800aa1a:	9505      	str	r5, [sp, #20]
 800aa1c:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800aa20:	9504      	str	r5, [sp, #16]
 800aa22:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800aa26:	9503      	str	r5, [sp, #12]
 800aa28:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800aa2c:	9502      	str	r5, [sp, #8]
 800aa2e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800aa32:	e9cd 3500 	strd	r3, r5, [sp]
 800aa36:	4613      	mov	r3, r2
 800aa38:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800aa3a:	2200      	movs	r2, #0
 800aa3c:	47a0      	blx	r4
 800aa3e:	b00b      	add	sp, #44	@ 0x2c
 800aa40:	bd30      	pop	{r4, r5, pc}
	...

0800aa44 <_ZN8touchgfx3HAL10beginFrameEv>:
 800aa44:	4b04      	ldr	r3, [pc, #16]	@ (800aa58 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800aa46:	781b      	ldrb	r3, [r3, #0]
 800aa48:	b123      	cbz	r3, 800aa54 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800aa4a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800aa4e:	f080 0001 	eor.w	r0, r0, #1
 800aa52:	4770      	bx	lr
 800aa54:	2001      	movs	r0, #1
 800aa56:	4770      	bx	lr
 800aa58:	20016c86 	.word	0x20016c86

0800aa5c <_ZN8touchgfx3HAL8endFrameEv>:
 800aa5c:	b510      	push	{r4, lr}
 800aa5e:	4604      	mov	r4, r0
 800aa60:	6840      	ldr	r0, [r0, #4]
 800aa62:	6803      	ldr	r3, [r0, #0]
 800aa64:	689b      	ldr	r3, [r3, #8]
 800aa66:	4798      	blx	r3
 800aa68:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800aa6c:	b113      	cbz	r3, 800aa74 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800aa6e:	2301      	movs	r3, #1
 800aa70:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800aa74:	bd10      	pop	{r4, pc}

0800aa76 <_ZN8touchgfx3HAL10initializeEv>:
 800aa76:	b510      	push	{r4, lr}
 800aa78:	4604      	mov	r4, r0
 800aa7a:	f7f6 fee9 	bl	8001850 <_ZN8touchgfx10OSWrappers10initializeEv>
 800aa7e:	f7f6 fdc7 	bl	8001610 <_ZN8touchgfx4GPIO4initEv>
 800aa82:	6860      	ldr	r0, [r4, #4]
 800aa84:	6803      	ldr	r3, [r0, #0]
 800aa86:	68db      	ldr	r3, [r3, #12]
 800aa88:	4798      	blx	r3
 800aa8a:	68e0      	ldr	r0, [r4, #12]
 800aa8c:	6803      	ldr	r3, [r0, #0]
 800aa8e:	689b      	ldr	r3, [r3, #8]
 800aa90:	4798      	blx	r3
 800aa92:	6823      	ldr	r3, [r4, #0]
 800aa94:	4620      	mov	r0, r4
 800aa96:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800aa98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800aa9c:	4718      	bx	r3

0800aa9e <_ZN8touchgfx3HAL9taskEntryEv>:
 800aa9e:	b508      	push	{r3, lr}
 800aaa0:	6803      	ldr	r3, [r0, #0]
 800aaa2:	4604      	mov	r4, r0
 800aaa4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800aaa8:	4798      	blx	r3
 800aaaa:	6823      	ldr	r3, [r4, #0]
 800aaac:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800aaae:	4620      	mov	r0, r4
 800aab0:	4798      	blx	r3
 800aab2:	f7f6 ff19 	bl	80018e8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800aab6:	6823      	ldr	r3, [r4, #0]
 800aab8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800aaba:	e7f8      	b.n	800aaae <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800aabc <_ZN8touchgfx3HAL4tickEv>:
 800aabc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800aabe:	6803      	ldr	r3, [r0, #0]
 800aac0:	4604      	mov	r4, r0
 800aac2:	4d5b      	ldr	r5, [pc, #364]	@ (800ac30 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800aac4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800aac8:	4798      	blx	r3
 800aaca:	2800      	cmp	r0, #0
 800aacc:	f000 8095 	beq.w	800abfa <_ZN8touchgfx3HAL4tickEv+0x13e>
 800aad0:	2001      	movs	r0, #1
 800aad2:	2600      	movs	r6, #0
 800aad4:	f7f6 fd02 	bl	80014dc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800aad8:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800aadc:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800aae0:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800aae4:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800aae8:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800aaec:	b133      	cbz	r3, 800aafc <_ZN8touchgfx3HAL4tickEv+0x40>
 800aaee:	6823      	ldr	r3, [r4, #0]
 800aaf0:	4620      	mov	r0, r4
 800aaf2:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800aaf6:	4798      	blx	r3
 800aaf8:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800aafc:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800ab00:	2601      	movs	r6, #1
 800ab02:	6862      	ldr	r2, [r4, #4]
 800ab04:	f083 0301 	eor.w	r3, r3, #1
 800ab08:	702e      	strb	r6, [r5, #0]
 800ab0a:	7253      	strb	r3, [r2, #9]
 800ab0c:	f005 fe5c 	bl	80107c8 <_ZN8touchgfx11Application11getInstanceEv>
 800ab10:	6803      	ldr	r3, [r0, #0]
 800ab12:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ab14:	4798      	blx	r3
 800ab16:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800ab1a:	b90b      	cbnz	r3, 800ab20 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ab1c:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800ab20:	f005 fe52 	bl	80107c8 <_ZN8touchgfx11Application11getInstanceEv>
 800ab24:	6803      	ldr	r3, [r0, #0]
 800ab26:	695b      	ldr	r3, [r3, #20]
 800ab28:	4798      	blx	r3
 800ab2a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800ab2c:	6803      	ldr	r3, [r0, #0]
 800ab2e:	691b      	ldr	r3, [r3, #16]
 800ab30:	4798      	blx	r3
 800ab32:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800ab36:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800ab3a:	3b01      	subs	r3, #1
 800ab3c:	b2db      	uxtb	r3, r3
 800ab3e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800ab42:	b10a      	cbz	r2, 800ab48 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ab44:	2b00      	cmp	r3, #0
 800ab46:	d1eb      	bne.n	800ab20 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ab48:	4a3a      	ldr	r2, [pc, #232]	@ (800ac34 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ab4a:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800ab4e:	7813      	ldrb	r3, [r2, #0]
 800ab50:	3301      	adds	r3, #1
 800ab52:	b25b      	sxtb	r3, r3
 800ab54:	4299      	cmp	r1, r3
 800ab56:	7013      	strb	r3, [r2, #0]
 800ab58:	dc10      	bgt.n	800ab7c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ab5a:	2300      	movs	r3, #0
 800ab5c:	68e0      	ldr	r0, [r4, #12]
 800ab5e:	a902      	add	r1, sp, #8
 800ab60:	7013      	strb	r3, [r2, #0]
 800ab62:	aa03      	add	r2, sp, #12
 800ab64:	6803      	ldr	r3, [r0, #0]
 800ab66:	68db      	ldr	r3, [r3, #12]
 800ab68:	4798      	blx	r3
 800ab6a:	6823      	ldr	r3, [r4, #0]
 800ab6c:	2800      	cmp	r0, #0
 800ab6e:	d050      	beq.n	800ac12 <_ZN8touchgfx3HAL4tickEv+0x156>
 800ab70:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800ab74:	4620      	mov	r0, r4
 800ab76:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ab7a:	4798      	blx	r3
 800ab7c:	2300      	movs	r3, #0
 800ab7e:	6960      	ldr	r0, [r4, #20]
 800ab80:	f88d 3007 	strb.w	r3, [sp, #7]
 800ab84:	b158      	cbz	r0, 800ab9e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800ab86:	6803      	ldr	r3, [r0, #0]
 800ab88:	f10d 0107 	add.w	r1, sp, #7
 800ab8c:	68db      	ldr	r3, [r3, #12]
 800ab8e:	4798      	blx	r3
 800ab90:	b128      	cbz	r0, 800ab9e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800ab92:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800ab94:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800ab98:	6803      	ldr	r3, [r0, #0]
 800ab9a:	68db      	ldr	r3, [r3, #12]
 800ab9c:	4798      	blx	r3
 800ab9e:	f104 001c 	add.w	r0, r4, #28
 800aba2:	f016 faeb 	bl	802117c <_ZN8touchgfx8Gestures4tickEv>
 800aba6:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800abaa:	b30b      	cbz	r3, 800abf0 <_ZN8touchgfx3HAL4tickEv+0x134>
 800abac:	6920      	ldr	r0, [r4, #16]
 800abae:	6803      	ldr	r3, [r0, #0]
 800abb0:	691b      	ldr	r3, [r3, #16]
 800abb2:	4798      	blx	r3
 800abb4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800abb6:	4606      	mov	r6, r0
 800abb8:	b903      	cbnz	r3, 800abbc <_ZN8touchgfx3HAL4tickEv+0x100>
 800abba:	6760      	str	r0, [r4, #116]	@ 0x74
 800abbc:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800abbe:	4a1e      	ldr	r2, [pc, #120]	@ (800ac38 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800abc0:	1af3      	subs	r3, r6, r3
 800abc2:	4293      	cmp	r3, r2
 800abc4:	d914      	bls.n	800abf0 <_ZN8touchgfx3HAL4tickEv+0x134>
 800abc6:	6920      	ldr	r0, [r4, #16]
 800abc8:	6803      	ldr	r3, [r0, #0]
 800abca:	699b      	ldr	r3, [r3, #24]
 800abcc:	4798      	blx	r3
 800abce:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800abd0:	2264      	movs	r2, #100	@ 0x64
 800abd2:	1af3      	subs	r3, r6, r3
 800abd4:	fbb3 f3f2 	udiv	r3, r3, r2
 800abd8:	fbb0 f0f3 	udiv	r0, r0, r3
 800abdc:	2800      	cmp	r0, #0
 800abde:	dc1d      	bgt.n	800ac1c <_ZN8touchgfx3HAL4tickEv+0x160>
 800abe0:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800abe4:	6920      	ldr	r0, [r4, #16]
 800abe6:	2100      	movs	r1, #0
 800abe8:	6803      	ldr	r3, [r0, #0]
 800abea:	69db      	ldr	r3, [r3, #28]
 800abec:	4798      	blx	r3
 800abee:	6766      	str	r6, [r4, #116]	@ 0x74
 800abf0:	f005 fdea 	bl	80107c8 <_ZN8touchgfx11Application11getInstanceEv>
 800abf4:	6803      	ldr	r3, [r0, #0]
 800abf6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800abf8:	4798      	blx	r3
 800abfa:	6823      	ldr	r3, [r4, #0]
 800abfc:	4620      	mov	r0, r4
 800abfe:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800ac02:	4798      	blx	r3
 800ac04:	2001      	movs	r0, #1
 800ac06:	f7f6 fc99 	bl	800153c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ac0a:	2300      	movs	r3, #0
 800ac0c:	702b      	strb	r3, [r5, #0]
 800ac0e:	b004      	add	sp, #16
 800ac10:	bd70      	pop	{r4, r5, r6, pc}
 800ac12:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800ac16:	4620      	mov	r0, r4
 800ac18:	4798      	blx	r3
 800ac1a:	e7af      	b.n	800ab7c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ac1c:	2863      	cmp	r0, #99	@ 0x63
 800ac1e:	bfcb      	itete	gt
 800ac20:	2300      	movgt	r3, #0
 800ac22:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800ac26:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800ac2a:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800ac2e:	e7d9      	b.n	800abe4 <_ZN8touchgfx3HAL4tickEv+0x128>
 800ac30:	20016c8c 	.word	0x20016c8c
 800ac34:	20016c8d 	.word	0x20016c8d
 800ac38:	05f5e100 	.word	0x05f5e100

0800ac3c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800ac3c:	b510      	push	{r4, lr}
 800ac3e:	4604      	mov	r4, r0
 800ac40:	f7f6 fe36 	bl	80018b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800ac44:	2200      	movs	r2, #0
 800ac46:	6863      	ldr	r3, [r4, #4]
 800ac48:	729a      	strb	r2, [r3, #10]
 800ac4a:	bd10      	pop	{r4, pc}

0800ac4c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800ac4c:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800ac4e:	301c      	adds	r0, #28
 800ac50:	f016 ba92 	b.w	8021178 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800ac54 <_ZN8touchgfx3HAL5touchEll>:
 800ac54:	b530      	push	{r4, r5, lr}
 800ac56:	b087      	sub	sp, #28
 800ac58:	4604      	mov	r4, r0
 800ac5a:	a804      	add	r0, sp, #16
 800ac5c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800ac60:	f005 fbe0 	bl	8010424 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800ac64:	9b04      	ldr	r3, [sp, #16]
 800ac66:	a906      	add	r1, sp, #24
 800ac68:	a803      	add	r0, sp, #12
 800ac6a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ac6e:	9b05      	ldr	r3, [sp, #20]
 800ac70:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800ac74:	f005 fc28 	bl	80104c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800ac78:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800ac7c:	f104 001c 	add.w	r0, r4, #28
 800ac80:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ac84:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800ac88:	b189      	cbz	r1, 800acae <_ZN8touchgfx3HAL5touchEll+0x5a>
 800ac8a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800ac8e:	9300      	str	r3, [sp, #0]
 800ac90:	4613      	mov	r3, r2
 800ac92:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800ac96:	462a      	mov	r2, r5
 800ac98:	f016 fa7e 	bl	8021198 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800ac9c:	b128      	cbz	r0, 800acaa <_ZN8touchgfx3HAL5touchEll+0x56>
 800ac9e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800aca2:	6623      	str	r3, [r4, #96]	@ 0x60
 800aca4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800aca8:	6663      	str	r3, [r4, #100]	@ 0x64
 800acaa:	b007      	add	sp, #28
 800acac:	bd30      	pop	{r4, r5, pc}
 800acae:	f016 fab3 	bl	8021218 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800acb2:	2301      	movs	r3, #1
 800acb4:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800acb8:	e7f1      	b.n	800ac9e <_ZN8touchgfx3HAL5touchEll+0x4a>

0800acba <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800acba:	b510      	push	{r4, lr}
 800acbc:	2b00      	cmp	r3, #0
 800acbe:	d046      	beq.n	800ad4e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800acc0:	ea81 0002 	eor.w	r0, r1, r2
 800acc4:	07c4      	lsls	r4, r0, #31
 800acc6:	d508      	bpl.n	800acda <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800acc8:	440b      	add	r3, r1
 800acca:	3a01      	subs	r2, #1
 800accc:	428b      	cmp	r3, r1
 800acce:	d93e      	bls.n	800ad4e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800acd0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800acd4:	f801 0b01 	strb.w	r0, [r1], #1
 800acd8:	e7f8      	b.n	800accc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800acda:	07d0      	lsls	r0, r2, #31
 800acdc:	bf42      	ittt	mi
 800acde:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800ace2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800ace6:	f801 0b01 	strbmi.w	r0, [r1], #1
 800acea:	2b01      	cmp	r3, #1
 800acec:	d911      	bls.n	800ad12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800acee:	ea81 0402 	eor.w	r4, r1, r2
 800acf2:	4610      	mov	r0, r2
 800acf4:	07a4      	lsls	r4, r4, #30
 800acf6:	d022      	beq.n	800ad3e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800acf8:	f023 0401 	bic.w	r4, r3, #1
 800acfc:	440c      	add	r4, r1
 800acfe:	428c      	cmp	r4, r1
 800ad00:	4602      	mov	r2, r0
 800ad02:	d904      	bls.n	800ad0e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800ad04:	8812      	ldrh	r2, [r2, #0]
 800ad06:	3002      	adds	r0, #2
 800ad08:	f821 2b02 	strh.w	r2, [r1], #2
 800ad0c:	e7f7      	b.n	800acfe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800ad0e:	f003 0301 	and.w	r3, r3, #1
 800ad12:	f023 0003 	bic.w	r0, r3, #3
 800ad16:	4408      	add	r0, r1
 800ad18:	4288      	cmp	r0, r1
 800ad1a:	4614      	mov	r4, r2
 800ad1c:	d904      	bls.n	800ad28 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800ad1e:	6824      	ldr	r4, [r4, #0]
 800ad20:	3204      	adds	r2, #4
 800ad22:	f841 4b04 	str.w	r4, [r1], #4
 800ad26:	e7f7      	b.n	800ad18 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800ad28:	f003 0303 	and.w	r3, r3, #3
 800ad2c:	3a01      	subs	r2, #1
 800ad2e:	440b      	add	r3, r1
 800ad30:	428b      	cmp	r3, r1
 800ad32:	d90c      	bls.n	800ad4e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ad34:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ad38:	f801 0b01 	strb.w	r0, [r1], #1
 800ad3c:	e7f8      	b.n	800ad30 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800ad3e:	0790      	lsls	r0, r2, #30
 800ad40:	d0e7      	beq.n	800ad12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ad42:	f832 0b02 	ldrh.w	r0, [r2], #2
 800ad46:	3b02      	subs	r3, #2
 800ad48:	f821 0b02 	strh.w	r0, [r1], #2
 800ad4c:	e7e1      	b.n	800ad12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ad4e:	2001      	movs	r0, #1
 800ad50:	bd10      	pop	{r4, pc}

0800ad52 <_ZN8touchgfx3HAL7noTouchEv>:
 800ad52:	b510      	push	{r4, lr}
 800ad54:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800ad58:	4604      	mov	r4, r0
 800ad5a:	b153      	cbz	r3, 800ad72 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800ad5c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800ad60:	2101      	movs	r1, #1
 800ad62:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800ad66:	301c      	adds	r0, #28
 800ad68:	f016 fa56 	bl	8021218 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ad6c:	2300      	movs	r3, #0
 800ad6e:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800ad72:	bd10      	pop	{r4, pc}

0800ad74 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800ad74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ad78:	b085      	sub	sp, #20
 800ad7a:	4604      	mov	r4, r0
 800ad7c:	2000      	movs	r0, #0
 800ad7e:	4699      	mov	r9, r3
 800ad80:	ad04      	add	r5, sp, #16
 800ad82:	460f      	mov	r7, r1
 800ad84:	4690      	mov	r8, r2
 800ad86:	f845 0d04 	str.w	r0, [r5, #-4]!
 800ad8a:	69a0      	ldr	r0, [r4, #24]
 800ad8c:	6806      	ldr	r6, [r0, #0]
 800ad8e:	9501      	str	r5, [sp, #4]
 800ad90:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800ad94:	9500      	str	r5, [sp, #0]
 800ad96:	6835      	ldr	r5, [r6, #0]
 800ad98:	47a8      	blx	r5
 800ad9a:	4d10      	ldr	r5, [pc, #64]	@ (800addc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800ad9c:	4606      	mov	r6, r0
 800ad9e:	f8a5 9000 	strh.w	r9, [r5]
 800ada2:	f7f7 fbc5 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800ada6:	6803      	ldr	r3, [r0, #0]
 800ada8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800adaa:	4798      	blx	r3
 800adac:	b128      	cbz	r0, 800adba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800adae:	2801      	cmp	r0, #1
 800adb0:	d00b      	beq.n	800adca <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800adb2:	4630      	mov	r0, r6
 800adb4:	b005      	add	sp, #20
 800adb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800adba:	882b      	ldrh	r3, [r5, #0]
 800adbc:	fb08 7203 	mla	r2, r8, r3, r7
 800adc0:	9b03      	ldr	r3, [sp, #12]
 800adc2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800adc6:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800adc8:	e7f3      	b.n	800adb2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800adca:	882a      	ldrh	r2, [r5, #0]
 800adcc:	9b03      	ldr	r3, [sp, #12]
 800adce:	fb08 7202 	mla	r2, r8, r2, r7
 800add2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800add6:	1a9a      	subs	r2, r3, r2
 800add8:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800adda:	e7ea      	b.n	800adb2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800addc:	20016c82 	.word	0x20016c82

0800ade0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800ade0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ade2:	b08b      	sub	sp, #44	@ 0x2c
 800ade4:	4617      	mov	r7, r2
 800ade6:	4604      	mov	r4, r0
 800ade8:	460e      	mov	r6, r1
 800adea:	461d      	mov	r5, r3
 800adec:	f7f7 fba0 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800adf0:	6803      	ldr	r3, [r0, #0]
 800adf2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800adf4:	4798      	blx	r3
 800adf6:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800adfa:	9007      	str	r0, [sp, #28]
 800adfc:	4631      	mov	r1, r6
 800adfe:	6822      	ldr	r2, [r4, #0]
 800ae00:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800ae04:	4b0c      	ldr	r3, [pc, #48]	@ (800ae38 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800ae06:	4620      	mov	r0, r4
 800ae08:	881b      	ldrh	r3, [r3, #0]
 800ae0a:	9306      	str	r3, [sp, #24]
 800ae0c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800ae10:	9305      	str	r3, [sp, #20]
 800ae12:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800ae16:	9304      	str	r3, [sp, #16]
 800ae18:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ae1c:	9303      	str	r3, [sp, #12]
 800ae1e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ae22:	9302      	str	r3, [sp, #8]
 800ae24:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800ae28:	e9cd 5300 	strd	r5, r3, [sp]
 800ae2c:	463b      	mov	r3, r7
 800ae2e:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800ae30:	2200      	movs	r2, #0
 800ae32:	47a8      	blx	r5
 800ae34:	b00b      	add	sp, #44	@ 0x2c
 800ae36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ae38:	20016c82 	.word	0x20016c82

0800ae3c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800ae3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ae40:	4698      	mov	r8, r3
 800ae42:	6803      	ldr	r3, [r0, #0]
 800ae44:	b08b      	sub	sp, #44	@ 0x2c
 800ae46:	4617      	mov	r7, r2
 800ae48:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800ae4a:	460e      	mov	r6, r1
 800ae4c:	4b13      	ldr	r3, [pc, #76]	@ (800ae9c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800ae4e:	4604      	mov	r4, r0
 800ae50:	f8b3 9000 	ldrh.w	r9, [r3]
 800ae54:	f7f7 fb6c 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800ae58:	6803      	ldr	r3, [r0, #0]
 800ae5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ae5c:	4798      	blx	r3
 800ae5e:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800ae62:	2200      	movs	r2, #0
 800ae64:	4631      	mov	r1, r6
 800ae66:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800ae6a:	2302      	movs	r3, #2
 800ae6c:	4620      	mov	r0, r4
 800ae6e:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800ae72:	2301      	movs	r3, #1
 800ae74:	9305      	str	r3, [sp, #20]
 800ae76:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800ae7a:	9304      	str	r3, [sp, #16]
 800ae7c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800ae80:	9303      	str	r3, [sp, #12]
 800ae82:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800ae86:	9302      	str	r3, [sp, #8]
 800ae88:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ae8c:	e9cd 8300 	strd	r8, r3, [sp]
 800ae90:	463b      	mov	r3, r7
 800ae92:	47a8      	blx	r5
 800ae94:	b00b      	add	sp, #44	@ 0x2c
 800ae96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ae9a:	bf00      	nop
 800ae9c:	20016c82 	.word	0x20016c82

0800aea0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800aea0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aea4:	4698      	mov	r8, r3
 800aea6:	6803      	ldr	r3, [r0, #0]
 800aea8:	b087      	sub	sp, #28
 800aeaa:	460e      	mov	r6, r1
 800aeac:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800aeae:	4617      	mov	r7, r2
 800aeb0:	4b0f      	ldr	r3, [pc, #60]	@ (800aef0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800aeb2:	4604      	mov	r4, r0
 800aeb4:	f8b3 9000 	ldrh.w	r9, [r3]
 800aeb8:	f7f7 fb3a 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800aebc:	6803      	ldr	r3, [r0, #0]
 800aebe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aec0:	4798      	blx	r3
 800aec2:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800aec6:	463a      	mov	r2, r7
 800aec8:	4631      	mov	r1, r6
 800aeca:	f8cd 900c 	str.w	r9, [sp, #12]
 800aece:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800aed2:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800aed6:	4620      	mov	r0, r4
 800aed8:	9302      	str	r3, [sp, #8]
 800aeda:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800aede:	9301      	str	r3, [sp, #4]
 800aee0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800aee4:	9300      	str	r3, [sp, #0]
 800aee6:	4643      	mov	r3, r8
 800aee8:	47a8      	blx	r5
 800aeea:	b007      	add	sp, #28
 800aeec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aef0:	20016c82 	.word	0x20016c82

0800aef4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800aef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aef8:	4604      	mov	r4, r0
 800aefa:	b08f      	sub	sp, #60	@ 0x3c
 800aefc:	4610      	mov	r0, r2
 800aefe:	460d      	mov	r5, r1
 800af00:	4691      	mov	r9, r2
 800af02:	461e      	mov	r6, r3
 800af04:	f008 fd0a 	bl	801391c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800af08:	2800      	cmp	r0, #0
 800af0a:	f000 809d 	beq.w	800b048 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800af0e:	6823      	ldr	r3, [r4, #0]
 800af10:	4620      	mov	r0, r4
 800af12:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800b0ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800af16:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800af1a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800af1c:	4798      	blx	r3
 800af1e:	6823      	ldr	r3, [r4, #0]
 800af20:	4620      	mov	r0, r4
 800af22:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800b0b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800af26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800af28:	4798      	blx	r3
 800af2a:	f8bb 3000 	ldrh.w	r3, [fp]
 800af2e:	4f5c      	ldr	r7, [pc, #368]	@ (800b0a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800af30:	9301      	str	r3, [sp, #4]
 800af32:	f8ba 3000 	ldrh.w	r3, [sl]
 800af36:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800af3a:	4640      	mov	r0, r8
 800af3c:	9302      	str	r3, [sp, #8]
 800af3e:	883b      	ldrh	r3, [r7, #0]
 800af40:	9303      	str	r3, [sp, #12]
 800af42:	4b58      	ldr	r3, [pc, #352]	@ (800b0a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800af44:	881a      	ldrh	r2, [r3, #0]
 800af46:	9305      	str	r3, [sp, #20]
 800af48:	9204      	str	r2, [sp, #16]
 800af4a:	f008 fd7b 	bl	8013a44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800af4e:	8038      	strh	r0, [r7, #0]
 800af50:	4640      	mov	r0, r8
 800af52:	f008 fdab 	bl	8013aac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800af56:	9b05      	ldr	r3, [sp, #20]
 800af58:	b280      	uxth	r0, r0
 800af5a:	8018      	strh	r0, [r3, #0]
 800af5c:	4b52      	ldr	r3, [pc, #328]	@ (800b0a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800af5e:	781b      	ldrb	r3, [r3, #0]
 800af60:	2b00      	cmp	r3, #0
 800af62:	d174      	bne.n	800b04e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800af64:	883b      	ldrh	r3, [r7, #0]
 800af66:	f8aa 0000 	strh.w	r0, [sl]
 800af6a:	f8ab 3000 	strh.w	r3, [fp]
 800af6e:	4648      	mov	r0, r9
 800af70:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800af74:	f008 fcd2 	bl	801391c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800af78:	2200      	movs	r2, #0
 800af7a:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800af7e:	4611      	mov	r1, r2
 800af80:	4628      	mov	r0, r5
 800af82:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800af86:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800af8a:	f7f8 f8a1 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
 800af8e:	2301      	movs	r3, #1
 800af90:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800af94:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800af98:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800af9c:	2b00      	cmp	r3, #0
 800af9e:	dd5c      	ble.n	800b05a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800afa0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800afa4:	2b00      	cmp	r3, #0
 800afa6:	dd58      	ble.n	800b05a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800afa8:	462a      	mov	r2, r5
 800afaa:	ab0a      	add	r3, sp, #40	@ 0x28
 800afac:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800afb0:	6851      	ldr	r1, [r2, #4]
 800afb2:	c303      	stmia	r3!, {r0, r1}
 800afb4:	4631      	mov	r1, r6
 800afb6:	a80a      	add	r0, sp, #40	@ 0x28
 800afb8:	f7ff f93a 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800afbc:	4b38      	ldr	r3, [pc, #224]	@ (800b0a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800afbe:	2100      	movs	r1, #0
 800afc0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800afc4:	4b37      	ldr	r3, [pc, #220]	@ (800b0a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800afc6:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800afca:	aa0a      	add	r2, sp, #40	@ 0x28
 800afcc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800afd0:	910c      	str	r1, [sp, #48]	@ 0x30
 800afd2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800afd6:	ab08      	add	r3, sp, #32
 800afd8:	e892 0003 	ldmia.w	r2, {r0, r1}
 800afdc:	e883 0003 	stmia.w	r3, {r0, r1}
 800afe0:	4618      	mov	r0, r3
 800afe2:	a90c      	add	r1, sp, #48	@ 0x30
 800afe4:	f7ff f924 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800afe8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800afea:	2b00      	cmp	r3, #0
 800afec:	d13c      	bne.n	800b068 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800afee:	2000      	movs	r0, #0
 800aff0:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800aff4:	2600      	movs	r6, #0
 800aff6:	696b      	ldr	r3, [r5, #20]
 800aff8:	a908      	add	r1, sp, #32
 800affa:	682a      	ldr	r2, [r5, #0]
 800affc:	4628      	mov	r0, r5
 800affe:	9305      	str	r3, [sp, #20]
 800b000:	616e      	str	r6, [r5, #20]
 800b002:	6892      	ldr	r2, [r2, #8]
 800b004:	4790      	blx	r2
 800b006:	9b05      	ldr	r3, [sp, #20]
 800b008:	4652      	mov	r2, sl
 800b00a:	4649      	mov	r1, r9
 800b00c:	616b      	str	r3, [r5, #20]
 800b00e:	4628      	mov	r0, r5
 800b010:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800b014:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800b018:	f7f8 f85a 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
 800b01c:	9a01      	ldr	r2, [sp, #4]
 800b01e:	4b23      	ldr	r3, [pc, #140]	@ (800b0ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b020:	4620      	mov	r0, r4
 800b022:	801a      	strh	r2, [r3, #0]
 800b024:	9a02      	ldr	r2, [sp, #8]
 800b026:	4b22      	ldr	r3, [pc, #136]	@ (800b0b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b028:	801a      	strh	r2, [r3, #0]
 800b02a:	9a03      	ldr	r2, [sp, #12]
 800b02c:	4b1c      	ldr	r3, [pc, #112]	@ (800b0a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b02e:	801a      	strh	r2, [r3, #0]
 800b030:	4b1c      	ldr	r3, [pc, #112]	@ (800b0a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b032:	9a04      	ldr	r2, [sp, #16]
 800b034:	801a      	strh	r2, [r3, #0]
 800b036:	6823      	ldr	r3, [r4, #0]
 800b038:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800b03c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b03e:	4798      	blx	r3
 800b040:	6823      	ldr	r3, [r4, #0]
 800b042:	4620      	mov	r0, r4
 800b044:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b046:	4798      	blx	r3
 800b048:	b00f      	add	sp, #60	@ 0x3c
 800b04a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b04e:	883b      	ldrh	r3, [r7, #0]
 800b050:	f8ab 0000 	strh.w	r0, [fp]
 800b054:	f8aa 3000 	strh.w	r3, [sl]
 800b058:	e789      	b.n	800af6e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b05a:	462a      	mov	r2, r5
 800b05c:	ab0a      	add	r3, sp, #40	@ 0x28
 800b05e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b062:	6851      	ldr	r1, [r2, #4]
 800b064:	c303      	stmia	r3!, {r0, r1}
 800b066:	e7a9      	b.n	800afbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b068:	a807      	add	r0, sp, #28
 800b06a:	f008 fe5b 	bl	8013d24 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b06e:	4606      	mov	r6, r0
 800b070:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800b072:	6803      	ldr	r3, [r0, #0]
 800b074:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b076:	4798      	blx	r3
 800b078:	4286      	cmp	r6, r0
 800b07a:	d1b8      	bne.n	800afee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b07c:	f7f7 fa58 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800b080:	6803      	ldr	r3, [r0, #0]
 800b082:	4606      	mov	r6, r0
 800b084:	a807      	add	r0, sp, #28
 800b086:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b088:	9305      	str	r3, [sp, #20]
 800b08a:	f008 fe4b 	bl	8013d24 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b08e:	9b05      	ldr	r3, [sp, #20]
 800b090:	4601      	mov	r1, r0
 800b092:	4630      	mov	r0, r6
 800b094:	4798      	blx	r3
 800b096:	f080 0001 	eor.w	r0, r0, #1
 800b09a:	b2c0      	uxtb	r0, r0
 800b09c:	e7a8      	b.n	800aff0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b09e:	bf00      	nop
 800b0a0:	20016c7c 	.word	0x20016c7c
 800b0a4:	20016c7e 	.word	0x20016c7e
 800b0a8:	20016c80 	.word	0x20016c80
 800b0ac:	20016c82 	.word	0x20016c82
 800b0b0:	20016c84 	.word	0x20016c84

0800b0b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b0b4:	4b07      	ldr	r3, [pc, #28]	@ (800b0d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b0b6:	b510      	push	{r4, lr}
 800b0b8:	781b      	ldrb	r3, [r3, #0]
 800b0ba:	4604      	mov	r4, r0
 800b0bc:	b13b      	cbz	r3, 800b0ce <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b0be:	6803      	ldr	r3, [r0, #0]
 800b0c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b0c2:	4798      	blx	r3
 800b0c4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b0c6:	4283      	cmp	r3, r0
 800b0c8:	d101      	bne.n	800b0ce <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b0ca:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800b0cc:	bd10      	pop	{r4, pc}
 800b0ce:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800b0d0:	e7fc      	b.n	800b0cc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b0d2:	bf00      	nop
 800b0d4:	20016c86 	.word	0x20016c86

0800b0d8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b0d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b0dc:	461d      	mov	r5, r3
 800b0de:	b08a      	sub	sp, #40	@ 0x28
 800b0e0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b0e4:	4690      	mov	r8, r2
 800b0e6:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800b0ea:	2400      	movs	r4, #0
 800b0ec:	4607      	mov	r7, r0
 800b0ee:	fb06 8505 	mla	r5, r6, r5, r8
 800b0f2:	9404      	str	r4, [sp, #16]
 800b0f4:	f88d 4020 	strb.w	r4, [sp, #32]
 800b0f8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b0fc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b100:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b104:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b108:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b10c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b110:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b114:	f7ff ffce 	bl	800b0b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b118:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b11c:	6878      	ldr	r0, [r7, #4]
 800b11e:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b122:	a901      	add	r1, sp, #4
 800b124:	9505      	str	r5, [sp, #20]
 800b126:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b12a:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800b12e:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b132:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b136:	6803      	ldr	r3, [r0, #0]
 800b138:	685b      	ldr	r3, [r3, #4]
 800b13a:	4798      	blx	r3
 800b13c:	b00a      	add	sp, #40	@ 0x28
 800b13e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b142 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b142:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b146:	b08b      	sub	sp, #44	@ 0x2c
 800b148:	2400      	movs	r4, #0
 800b14a:	4691      	mov	r9, r2
 800b14c:	461d      	mov	r5, r3
 800b14e:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800b152:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800b156:	4688      	mov	r8, r1
 800b158:	4607      	mov	r7, r0
 800b15a:	9404      	str	r4, [sp, #16]
 800b15c:	fb06 9505 	mla	r5, r6, r5, r9
 800b160:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b164:	f7ff ffa6 	bl	800b0b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b168:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b16c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b170:	6878      	ldr	r0, [r7, #4]
 800b172:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b176:	a901      	add	r1, sp, #4
 800b178:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b17c:	9505      	str	r5, [sp, #20]
 800b17e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b182:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b186:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b18a:	f8cd 8010 	str.w	r8, [sp, #16]
 800b18e:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b192:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b196:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b19a:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b19e:	6803      	ldr	r3, [r0, #0]
 800b1a0:	685b      	ldr	r3, [r3, #4]
 800b1a2:	4798      	blx	r3
 800b1a4:	b00b      	add	sp, #44	@ 0x2c
 800b1a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b1ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b1ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b1b0:	b08a      	sub	sp, #40	@ 0x28
 800b1b2:	4698      	mov	r8, r3
 800b1b4:	2300      	movs	r3, #0
 800b1b6:	4606      	mov	r6, r0
 800b1b8:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800b1bc:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800b1c0:	2d0b      	cmp	r5, #11
 800b1c2:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800b1c6:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800b1ca:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800b1ce:	9304      	str	r3, [sp, #16]
 800b1d0:	d137      	bne.n	800b242 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b1d2:	2380      	movs	r3, #128	@ 0x80
 800b1d4:	f88d 0020 	strb.w	r0, [sp, #32]
 800b1d8:	4630      	mov	r0, r6
 800b1da:	9203      	str	r2, [sp, #12]
 800b1dc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b1e0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b1e4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b1e8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b1ec:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b1f0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b1f4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b1f8:	f7ff ff5c 	bl	800b0b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b1fc:	2c0b      	cmp	r4, #11
 800b1fe:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800b202:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b206:	bf94      	ite	ls
 800b208:	4b19      	ldrls	r3, [pc, #100]	@ (800b270 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b20a:	2100      	movhi	r1, #0
 800b20c:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800b210:	bf98      	it	ls
 800b212:	5d19      	ldrbls	r1, [r3, r4]
 800b214:	fb02 8307 	mla	r3, r2, r7, r8
 800b218:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b21c:	10c9      	asrs	r1, r1, #3
 800b21e:	fb01 0003 	mla	r0, r1, r3, r0
 800b222:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800b226:	a901      	add	r1, sp, #4
 800b228:	9005      	str	r0, [sp, #20]
 800b22a:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b22e:	2300      	movs	r3, #0
 800b230:	6870      	ldr	r0, [r6, #4]
 800b232:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b236:	6803      	ldr	r3, [r0, #0]
 800b238:	685b      	ldr	r3, [r3, #4]
 800b23a:	4798      	blx	r3
 800b23c:	b00a      	add	sp, #40	@ 0x28
 800b23e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b242:	2d02      	cmp	r5, #2
 800b244:	d109      	bne.n	800b25a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b246:	28ff      	cmp	r0, #255	@ 0xff
 800b248:	d105      	bne.n	800b256 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b24a:	f1bc 0f00 	cmp.w	ip, #0
 800b24e:	bf14      	ite	ne
 800b250:	2340      	movne	r3, #64	@ 0x40
 800b252:	2320      	moveq	r3, #32
 800b254:	e7be      	b.n	800b1d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b256:	2340      	movs	r3, #64	@ 0x40
 800b258:	e7bc      	b.n	800b1d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b25a:	28ff      	cmp	r0, #255	@ 0xff
 800b25c:	d105      	bne.n	800b26a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b25e:	f1bc 0f00 	cmp.w	ip, #0
 800b262:	bf14      	ite	ne
 800b264:	2304      	movne	r3, #4
 800b266:	2301      	moveq	r3, #1
 800b268:	e7b4      	b.n	800b1d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b26a:	2304      	movs	r3, #4
 800b26c:	e7b2      	b.n	800b1d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b26e:	bf00      	nop
 800b270:	08024d8c 	.word	0x08024d8c

0800b274 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b274:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b278:	b08b      	sub	sp, #44	@ 0x2c
 800b27a:	461d      	mov	r5, r3
 800b27c:	2400      	movs	r4, #0
 800b27e:	4688      	mov	r8, r1
 800b280:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800b284:	4693      	mov	fp, r2
 800b286:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b28a:	4607      	mov	r7, r0
 800b28c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800b290:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800b294:	9404      	str	r4, [sp, #16]
 800b296:	bf14      	ite	ne
 800b298:	2308      	movne	r3, #8
 800b29a:	2302      	moveq	r3, #2
 800b29c:	fb05 b50a 	mla	r5, r5, sl, fp
 800b2a0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b2a4:	f7ff ff06 	bl	800b0b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b2a8:	2e0b      	cmp	r6, #11
 800b2aa:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800b2ae:	a901      	add	r1, sp, #4
 800b2b0:	bf98      	it	ls
 800b2b2:	4b13      	ldrls	r3, [pc, #76]	@ (800b300 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b2b4:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b2b8:	bf98      	it	ls
 800b2ba:	5d9c      	ldrbls	r4, [r3, r6]
 800b2bc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b2c0:	10e4      	asrs	r4, r4, #3
 800b2c2:	f8cd 8010 	str.w	r8, [sp, #16]
 800b2c6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b2ca:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b2ce:	fb04 0405 	mla	r4, r4, r5, r0
 800b2d2:	6878      	ldr	r0, [r7, #4]
 800b2d4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b2d8:	2300      	movs	r3, #0
 800b2da:	9405      	str	r4, [sp, #20]
 800b2dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b2e0:	f88d 9020 	strb.w	r9, [sp, #32]
 800b2e4:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800b2e8:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b2ec:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800b2f0:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800b2f4:	6803      	ldr	r3, [r0, #0]
 800b2f6:	685b      	ldr	r3, [r3, #4]
 800b2f8:	4798      	blx	r3
 800b2fa:	b00b      	add	sp, #44	@ 0x2c
 800b2fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b300:	08024d8c 	.word	0x08024d8c

0800b304 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b304:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b308:	461e      	mov	r6, r3
 800b30a:	4b0a      	ldr	r3, [pc, #40]	@ (800b334 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b30c:	460f      	mov	r7, r1
 800b30e:	4690      	mov	r8, r2
 800b310:	881d      	ldrh	r5, [r3, #0]
 800b312:	f7f7 f90d 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800b316:	6803      	ldr	r3, [r0, #0]
 800b318:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b31a:	4798      	blx	r3
 800b31c:	280b      	cmp	r0, #11
 800b31e:	bf96      	itet	ls
 800b320:	4b05      	ldrls	r3, [pc, #20]	@ (800b338 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b322:	2400      	movhi	r4, #0
 800b324:	5c1c      	ldrbls	r4, [r3, r0]
 800b326:	fb08 7005 	mla	r0, r8, r5, r7
 800b32a:	10e4      	asrs	r4, r4, #3
 800b32c:	fb04 6000 	mla	r0, r4, r0, r6
 800b330:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b334:	20016c82 	.word	0x20016c82
 800b338:	08024d8c 	.word	0x08024d8c

0800b33c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b33c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b33e:	b08b      	sub	sp, #44	@ 0x2c
 800b340:	461f      	mov	r7, r3
 800b342:	4604      	mov	r4, r0
 800b344:	4616      	mov	r6, r2
 800b346:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b34a:	2500      	movs	r5, #0
 800b34c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b350:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b354:	9504      	str	r5, [sp, #16]
 800b356:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b35a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b35e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b362:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b366:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b36a:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b36e:	f88d 3020 	strb.w	r3, [sp, #32]
 800b372:	f7ff fe9f 	bl	800b0b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b376:	463a      	mov	r2, r7
 800b378:	4631      	mov	r1, r6
 800b37a:	4603      	mov	r3, r0
 800b37c:	4620      	mov	r0, r4
 800b37e:	f7ff ffc1 	bl	800b304 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b382:	4b0e      	ldr	r3, [pc, #56]	@ (800b3bc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b384:	9005      	str	r0, [sp, #20]
 800b386:	881b      	ldrh	r3, [r3, #0]
 800b388:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b38c:	f7f7 f8d0 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800b390:	6803      	ldr	r3, [r0, #0]
 800b392:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b394:	4798      	blx	r3
 800b396:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800b398:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800b39c:	a901      	add	r1, sp, #4
 800b39e:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800b3a2:	9304      	str	r3, [sp, #16]
 800b3a4:	6860      	ldr	r0, [r4, #4]
 800b3a6:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b3aa:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800b3ae:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b3b2:	6803      	ldr	r3, [r0, #0]
 800b3b4:	685b      	ldr	r3, [r3, #4]
 800b3b6:	4798      	blx	r3
 800b3b8:	b00b      	add	sp, #44	@ 0x2c
 800b3ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b3bc:	20016c82 	.word	0x20016c82

0800b3c0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b3c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b3c2:	b08d      	sub	sp, #52	@ 0x34
 800b3c4:	2501      	movs	r5, #1
 800b3c6:	4604      	mov	r4, r0
 800b3c8:	466b      	mov	r3, sp
 800b3ca:	9503      	str	r5, [sp, #12]
 800b3cc:	e883 0006 	stmia.w	r3, {r1, r2}
 800b3d0:	2300      	movs	r3, #0
 800b3d2:	f8bd 6000 	ldrh.w	r6, [sp]
 800b3d6:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b3da:	9306      	str	r3, [sp, #24]
 800b3dc:	6803      	ldr	r3, [r0, #0]
 800b3de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b3e0:	4798      	blx	r3
 800b3e2:	463a      	mov	r2, r7
 800b3e4:	4631      	mov	r1, r6
 800b3e6:	4603      	mov	r3, r0
 800b3e8:	4620      	mov	r0, r4
 800b3ea:	f7ff ff8b 	bl	800b304 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b3ee:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800b3f0:	9004      	str	r0, [sp, #16]
 800b3f2:	9307      	str	r3, [sp, #28]
 800b3f4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b3f8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b3fc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b400:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b404:	4b0e      	ldr	r3, [pc, #56]	@ (800b440 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b406:	881b      	ldrh	r3, [r3, #0]
 800b408:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b40c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b410:	f7f7 f88e 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800b414:	6803      	ldr	r3, [r0, #0]
 800b416:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b418:	4798      	blx	r3
 800b41a:	23ff      	movs	r3, #255	@ 0xff
 800b41c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b420:	a903      	add	r1, sp, #12
 800b422:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b426:	6860      	ldr	r0, [r4, #4]
 800b428:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b42c:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b430:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b434:	6803      	ldr	r3, [r0, #0]
 800b436:	685b      	ldr	r3, [r3, #4]
 800b438:	4798      	blx	r3
 800b43a:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800b43c:	b00d      	add	sp, #52	@ 0x34
 800b43e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b440:	20016c82 	.word	0x20016c82

0800b444 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b444:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b448:	b08c      	sub	sp, #48	@ 0x30
 800b44a:	461e      	mov	r6, r3
 800b44c:	2300      	movs	r3, #0
 800b44e:	4604      	mov	r4, r0
 800b450:	466d      	mov	r5, sp
 800b452:	9306      	str	r3, [sp, #24]
 800b454:	6803      	ldr	r3, [r0, #0]
 800b456:	e885 0006 	stmia.w	r5, {r1, r2}
 800b45a:	2501      	movs	r5, #1
 800b45c:	f8bd 7000 	ldrh.w	r7, [sp]
 800b460:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b464:	9503      	str	r5, [sp, #12]
 800b466:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b468:	4798      	blx	r3
 800b46a:	4642      	mov	r2, r8
 800b46c:	4639      	mov	r1, r7
 800b46e:	4603      	mov	r3, r0
 800b470:	4620      	mov	r0, r4
 800b472:	f7ff ff47 	bl	800b304 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b476:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b47a:	9004      	str	r0, [sp, #16]
 800b47c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b480:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b484:	9607      	str	r6, [sp, #28]
 800b486:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b48a:	4b10      	ldr	r3, [pc, #64]	@ (800b4cc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b48c:	881b      	ldrh	r3, [r3, #0]
 800b48e:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b492:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b494:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b498:	f7f7 f84a 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800b49c:	6803      	ldr	r3, [r0, #0]
 800b49e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b4a0:	4798      	blx	r3
 800b4a2:	23ff      	movs	r3, #255	@ 0xff
 800b4a4:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b4a8:	a903      	add	r1, sp, #12
 800b4aa:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b4ae:	6860      	ldr	r0, [r4, #4]
 800b4b0:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b4b4:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b4b8:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b4bc:	6803      	ldr	r3, [r0, #0]
 800b4be:	685b      	ldr	r3, [r3, #4]
 800b4c0:	4798      	blx	r3
 800b4c2:	4630      	mov	r0, r6
 800b4c4:	b00c      	add	sp, #48	@ 0x30
 800b4c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b4ca:	bf00      	nop
 800b4cc:	20016c82 	.word	0x20016c82

0800b4d0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b4d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b4d2:	b085      	sub	sp, #20
 800b4d4:	4605      	mov	r5, r0
 800b4d6:	ac02      	add	r4, sp, #8
 800b4d8:	e884 0006 	stmia.w	r4, {r1, r2}
 800b4dc:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b4e0:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b4e4:	f7ff fde6 	bl	800b0b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b4e8:	4631      	mov	r1, r6
 800b4ea:	4603      	mov	r3, r0
 800b4ec:	463a      	mov	r2, r7
 800b4ee:	4628      	mov	r0, r5
 800b4f0:	f7ff ff08 	bl	800b304 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b4f4:	4a05      	ldr	r2, [pc, #20]	@ (800b50c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b4f6:	682b      	ldr	r3, [r5, #0]
 800b4f8:	8812      	ldrh	r2, [r2, #0]
 800b4fa:	9200      	str	r2, [sp, #0]
 800b4fc:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800b4fe:	4603      	mov	r3, r0
 800b500:	4628      	mov	r0, r5
 800b502:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b506:	47b0      	blx	r6
 800b508:	b005      	add	sp, #20
 800b50a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b50c:	20016c82 	.word	0x20016c82

0800b510 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b510:	b570      	push	{r4, r5, r6, lr}
 800b512:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800b516:	4604      	mov	r4, r0
 800b518:	b19b      	cbz	r3, 800b542 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b51a:	2002      	movs	r0, #2
 800b51c:	f7f6 f83e 	bl	800159c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b520:	2300      	movs	r3, #0
 800b522:	4620      	mov	r0, r4
 800b524:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b528:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800b52c:	6823      	ldr	r3, [r4, #0]
 800b52e:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800b532:	f7ff fdbf 	bl	800b0b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b536:	4601      	mov	r1, r0
 800b538:	4620      	mov	r0, r4
 800b53a:	462b      	mov	r3, r5
 800b53c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b540:	4718      	bx	r3
 800b542:	bd70      	pop	{r4, r5, r6, pc}

0800b544 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800b544:	b570      	push	{r4, r5, r6, lr}
 800b546:	4605      	mov	r5, r0
 800b548:	460c      	mov	r4, r1
 800b54a:	2003      	movs	r0, #3
 800b54c:	b149      	cbz	r1, 800b562 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800b54e:	f7f5 ffc5 	bl	80014dc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b552:	6928      	ldr	r0, [r5, #16]
 800b554:	b168      	cbz	r0, 800b572 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b556:	6803      	ldr	r3, [r0, #0]
 800b558:	2101      	movs	r1, #1
 800b55a:	695b      	ldr	r3, [r3, #20]
 800b55c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b560:	4718      	bx	r3
 800b562:	f7f5 ffeb 	bl	800153c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b566:	6928      	ldr	r0, [r5, #16]
 800b568:	b118      	cbz	r0, 800b572 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b56a:	6803      	ldr	r3, [r0, #0]
 800b56c:	4621      	mov	r1, r4
 800b56e:	695b      	ldr	r3, [r3, #20]
 800b570:	e7f4      	b.n	800b55c <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800b572:	bd70      	pop	{r4, r5, r6, pc}

0800b574 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b574:	b538      	push	{r3, r4, r5, lr}
 800b576:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800b57a:	4604      	mov	r4, r0
 800b57c:	460d      	mov	r5, r1
 800b57e:	428b      	cmp	r3, r1
 800b580:	d006      	beq.n	800b590 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b582:	6803      	ldr	r3, [r0, #0]
 800b584:	b929      	cbnz	r1, 800b592 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b586:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800b58a:	4798      	blx	r3
 800b58c:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800b590:	bd38      	pop	{r3, r4, r5, pc}
 800b592:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800b596:	e7f8      	b.n	800b58a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b598 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b598:	4b0d      	ldr	r3, [pc, #52]	@ (800b5d0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b59a:	b510      	push	{r4, lr}
 800b59c:	781b      	ldrb	r3, [r3, #0]
 800b59e:	4604      	mov	r4, r0
 800b5a0:	b95b      	cbnz	r3, 800b5ba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b5a2:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800b5a6:	2b02      	cmp	r3, #2
 800b5a8:	d007      	beq.n	800b5ba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b5aa:	6840      	ldr	r0, [r0, #4]
 800b5ac:	f000 f92c 	bl	800b808 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b5b0:	b118      	cbz	r0, 800b5ba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b5b2:	6862      	ldr	r2, [r4, #4]
 800b5b4:	7a53      	ldrb	r3, [r2, #9]
 800b5b6:	2b00      	cmp	r3, #0
 800b5b8:	d0fc      	beq.n	800b5b4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b5ba:	f7f6 f971 	bl	80018a0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b5be:	4620      	mov	r0, r4
 800b5c0:	2100      	movs	r1, #0
 800b5c2:	f7ff ffd7 	bl	800b574 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b5c6:	4620      	mov	r0, r4
 800b5c8:	f7ff fd74 	bl	800b0b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b5cc:	bd10      	pop	{r4, pc}
 800b5ce:	bf00      	nop
 800b5d0:	20016c86 	.word	0x20016c86

0800b5d4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800b5d4:	b570      	push	{r4, r5, r6, lr}
 800b5d6:	4604      	mov	r4, r0
 800b5d8:	6803      	ldr	r3, [r0, #0]
 800b5da:	b919      	cbnz	r1, 800b5e4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800b5dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b5de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b5e2:	4718      	bx	r3
 800b5e4:	2200      	movs	r2, #0
 800b5e6:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800b5ea:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800b5ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b5f0:	4798      	blx	r3
 800b5f2:	6863      	ldr	r3, [r4, #4]
 800b5f4:	2101      	movs	r1, #1
 800b5f6:	4605      	mov	r5, r0
 800b5f8:	4620      	mov	r0, r4
 800b5fa:	7299      	strb	r1, [r3, #10]
 800b5fc:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800b600:	f7ff ffb8 	bl	800b574 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b604:	4628      	mov	r0, r5
 800b606:	bd70      	pop	{r4, r5, r6, pc}

0800b608 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b608:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b60c:	1a13      	subs	r3, r2, r0
 800b60e:	4258      	negs	r0, r3
 800b610:	4158      	adcs	r0, r3
 800b612:	4770      	bx	lr

0800b614 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b614:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b618:	1a9b      	subs	r3, r3, r2
 800b61a:	2b00      	cmp	r3, #0
 800b61c:	bfdc      	itt	le
 800b61e:	6882      	ldrle	r2, [r0, #8]
 800b620:	189b      	addle	r3, r3, r2
 800b622:	2b01      	cmp	r3, #1
 800b624:	bfcc      	ite	gt
 800b626:	2000      	movgt	r0, #0
 800b628:	2001      	movle	r0, #1
 800b62a:	4770      	bx	lr

0800b62c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b62c:	6902      	ldr	r2, [r0, #16]
 800b62e:	6843      	ldr	r3, [r0, #4]
 800b630:	2024      	movs	r0, #36	@ 0x24
 800b632:	fb00 3002 	mla	r0, r0, r2, r3
 800b636:	4770      	bx	lr

0800b638 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b638:	6803      	ldr	r3, [r0, #0]
 800b63a:	691b      	ldr	r3, [r3, #16]
 800b63c:	4718      	bx	r3

0800b63e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b63e:	2301      	movs	r3, #1
 800b640:	b570      	push	{r4, r5, r6, lr}
 800b642:	7203      	strb	r3, [r0, #8]
 800b644:	4604      	mov	r4, r0
 800b646:	6840      	ldr	r0, [r0, #4]
 800b648:	6803      	ldr	r3, [r0, #0]
 800b64a:	699b      	ldr	r3, [r3, #24]
 800b64c:	4798      	blx	r3
 800b64e:	6803      	ldr	r3, [r0, #0]
 800b650:	4605      	mov	r5, r0
 800b652:	2b40      	cmp	r3, #64	@ 0x40
 800b654:	d00c      	beq.n	800b670 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b656:	d810      	bhi.n	800b67a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b658:	2b04      	cmp	r3, #4
 800b65a:	d01d      	beq.n	800b698 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b65c:	d804      	bhi.n	800b668 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b65e:	2b01      	cmp	r3, #1
 800b660:	d006      	beq.n	800b670 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b662:	2b02      	cmp	r3, #2
 800b664:	d02c      	beq.n	800b6c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b666:	bd70      	pop	{r4, r5, r6, pc}
 800b668:	2b08      	cmp	r3, #8
 800b66a:	d01d      	beq.n	800b6a8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b66c:	2b20      	cmp	r3, #32
 800b66e:	d1fa      	bne.n	800b666 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b670:	6823      	ldr	r3, [r4, #0]
 800b672:	4620      	mov	r0, r4
 800b674:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b676:	4798      	blx	r3
 800b678:	e013      	b.n	800b6a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b67a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b67e:	d0f7      	beq.n	800b670 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b680:	d804      	bhi.n	800b68c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b682:	2b80      	cmp	r3, #128	@ 0x80
 800b684:	d0f4      	beq.n	800b670 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b686:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800b68a:	e7f0      	b.n	800b66e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b68c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800b690:	d0ee      	beq.n	800b670 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b692:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b696:	e7e5      	b.n	800b664 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b698:	6823      	ldr	r3, [r4, #0]
 800b69a:	7f01      	ldrb	r1, [r0, #28]
 800b69c:	4620      	mov	r0, r4
 800b69e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b6a0:	4798      	blx	r3
 800b6a2:	6823      	ldr	r3, [r4, #0]
 800b6a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b6a6:	e006      	b.n	800b6b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b6a8:	6823      	ldr	r3, [r4, #0]
 800b6aa:	7f01      	ldrb	r1, [r0, #28]
 800b6ac:	4620      	mov	r0, r4
 800b6ae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b6b0:	4798      	blx	r3
 800b6b2:	6823      	ldr	r3, [r4, #0]
 800b6b4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b6b6:	4629      	mov	r1, r5
 800b6b8:	4620      	mov	r0, r4
 800b6ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b6be:	4718      	bx	r3
 800b6c0:	6823      	ldr	r3, [r4, #0]
 800b6c2:	4620      	mov	r0, r4
 800b6c4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b6c6:	4798      	blx	r3
 800b6c8:	e7f3      	b.n	800b6b2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b6ca <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b6ca:	4770      	bx	lr

0800b6cc <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b6cc:	4770      	bx	lr

0800b6ce <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b6ce:	4770      	bx	lr

0800b6d0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b6d0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b6d4:	b510      	push	{r4, lr}
 800b6d6:	1ad2      	subs	r2, r2, r3
 800b6d8:	2a00      	cmp	r2, #0
 800b6da:	bfdc      	itt	le
 800b6dc:	6884      	ldrle	r4, [r0, #8]
 800b6de:	1912      	addle	r2, r2, r4
 800b6e0:	2a01      	cmp	r2, #1
 800b6e2:	dd16      	ble.n	800b712 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b6e4:	6842      	ldr	r2, [r0, #4]
 800b6e6:	2424      	movs	r4, #36	@ 0x24
 800b6e8:	fb04 2303 	mla	r3, r4, r3, r2
 800b6ec:	f101 0220 	add.w	r2, r1, #32
 800b6f0:	f851 4b04 	ldr.w	r4, [r1], #4
 800b6f4:	4291      	cmp	r1, r2
 800b6f6:	f843 4b04 	str.w	r4, [r3], #4
 800b6fa:	d1f9      	bne.n	800b6f0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b6fc:	780a      	ldrb	r2, [r1, #0]
 800b6fe:	701a      	strb	r2, [r3, #0]
 800b700:	68c3      	ldr	r3, [r0, #12]
 800b702:	6882      	ldr	r2, [r0, #8]
 800b704:	f3bf 8f5b 	dmb	ish
 800b708:	3301      	adds	r3, #1
 800b70a:	429a      	cmp	r2, r3
 800b70c:	bfd8      	it	le
 800b70e:	1a9b      	suble	r3, r3, r2
 800b710:	60c3      	str	r3, [r0, #12]
 800b712:	bd10      	pop	{r4, pc}

0800b714 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b714:	6903      	ldr	r3, [r0, #16]
 800b716:	6882      	ldr	r2, [r0, #8]
 800b718:	f3bf 8f5b 	dmb	ish
 800b71c:	3301      	adds	r3, #1
 800b71e:	429a      	cmp	r2, r3
 800b720:	bfd8      	it	le
 800b722:	1a9b      	suble	r3, r3, r2
 800b724:	6103      	str	r3, [r0, #16]
 800b726:	4770      	bx	lr

0800b728 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b728:	b570      	push	{r4, r5, r6, lr}
 800b72a:	4604      	mov	r4, r0
 800b72c:	460e      	mov	r6, r1
 800b72e:	6860      	ldr	r0, [r4, #4]
 800b730:	6803      	ldr	r3, [r0, #0]
 800b732:	685b      	ldr	r3, [r3, #4]
 800b734:	4798      	blx	r3
 800b736:	2800      	cmp	r0, #0
 800b738:	d1f9      	bne.n	800b72e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b73a:	4d0d      	ldr	r5, [pc, #52]	@ (800b770 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b73c:	6828      	ldr	r0, [r5, #0]
 800b73e:	6803      	ldr	r3, [r0, #0]
 800b740:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b742:	4798      	blx	r3
 800b744:	f7f6 f8ba 	bl	80018bc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b748:	6828      	ldr	r0, [r5, #0]
 800b74a:	2101      	movs	r1, #1
 800b74c:	f7ff ff12 	bl	800b574 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b750:	6860      	ldr	r0, [r4, #4]
 800b752:	4631      	mov	r1, r6
 800b754:	6803      	ldr	r3, [r0, #0]
 800b756:	689b      	ldr	r3, [r3, #8]
 800b758:	4798      	blx	r3
 800b75a:	6823      	ldr	r3, [r4, #0]
 800b75c:	4620      	mov	r0, r4
 800b75e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b760:	4798      	blx	r3
 800b762:	6828      	ldr	r0, [r5, #0]
 800b764:	6803      	ldr	r3, [r0, #0]
 800b766:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b76a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800b76c:	4718      	bx	r3
 800b76e:	bf00      	nop
 800b770:	20016c88 	.word	0x20016c88

0800b774 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b774:	b508      	push	{r3, lr}
 800b776:	f7f6 f893 	bl	80018a0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b77a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b77e:	f7f6 b897 	b.w	80018b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b782 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b782:	b510      	push	{r4, lr}
 800b784:	4604      	mov	r4, r0
 800b786:	2114      	movs	r1, #20
 800b788:	f016 f8c0 	bl	802190c <_ZdlPvj>
 800b78c:	4620      	mov	r0, r4
 800b78e:	bd10      	pop	{r4, pc}

0800b790 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b790:	b510      	push	{r4, lr}
 800b792:	4604      	mov	r4, r0
 800b794:	6840      	ldr	r0, [r0, #4]
 800b796:	6803      	ldr	r3, [r0, #0]
 800b798:	681b      	ldr	r3, [r3, #0]
 800b79a:	4798      	blx	r3
 800b79c:	b948      	cbnz	r0, 800b7b2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b79e:	7a63      	ldrb	r3, [r4, #9]
 800b7a0:	b13b      	cbz	r3, 800b7b2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b7a2:	7a23      	ldrb	r3, [r4, #8]
 800b7a4:	b92b      	cbnz	r3, 800b7b2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b7a6:	6823      	ldr	r3, [r4, #0]
 800b7a8:	4620      	mov	r0, r4
 800b7aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b7ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b7b0:	4718      	bx	r3
 800b7b2:	bd10      	pop	{r4, pc}

0800b7b4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b7b4:	b570      	push	{r4, r5, r6, lr}
 800b7b6:	4604      	mov	r4, r0
 800b7b8:	6840      	ldr	r0, [r0, #4]
 800b7ba:	6803      	ldr	r3, [r0, #0]
 800b7bc:	681b      	ldr	r3, [r3, #0]
 800b7be:	4798      	blx	r3
 800b7c0:	4605      	mov	r5, r0
 800b7c2:	b930      	cbnz	r0, 800b7d2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b7c4:	7a23      	ldrb	r3, [r4, #8]
 800b7c6:	b123      	cbz	r3, 800b7d2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b7c8:	6860      	ldr	r0, [r4, #4]
 800b7ca:	6803      	ldr	r3, [r0, #0]
 800b7cc:	695b      	ldr	r3, [r3, #20]
 800b7ce:	4798      	blx	r3
 800b7d0:	7225      	strb	r5, [r4, #8]
 800b7d2:	6860      	ldr	r0, [r4, #4]
 800b7d4:	6803      	ldr	r3, [r0, #0]
 800b7d6:	681b      	ldr	r3, [r3, #0]
 800b7d8:	4798      	blx	r3
 800b7da:	b928      	cbnz	r0, 800b7e8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b7dc:	6823      	ldr	r3, [r4, #0]
 800b7de:	4620      	mov	r0, r4
 800b7e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b7e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b7e6:	4718      	bx	r3
 800b7e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b7ec:	f7f6 b86e 	b.w	80018cc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b7f0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b7f0:	b510      	push	{r4, lr}
 800b7f2:	6082      	str	r2, [r0, #8]
 800b7f4:	2200      	movs	r2, #0
 800b7f6:	4c03      	ldr	r4, [pc, #12]	@ (800b804 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b7f8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b7fc:	e9c0 4100 	strd	r4, r1, [r0]
 800b800:	bd10      	pop	{r4, pc}
 800b802:	bf00      	nop
 800b804:	08024da0 	.word	0x08024da0

0800b808 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b808:	6840      	ldr	r0, [r0, #4]
 800b80a:	6803      	ldr	r3, [r0, #0]
 800b80c:	681b      	ldr	r3, [r3, #0]
 800b80e:	4718      	bx	r3

0800b810 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b810:	094a      	lsrs	r2, r1, #5
 800b812:	4b06      	ldr	r3, [pc, #24]	@ (800b82c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800b814:	60c1      	str	r1, [r0, #12]
 800b816:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800b81a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800b81e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800b822:	4313      	orrs	r3, r2
 800b824:	4319      	orrs	r1, r3
 800b826:	8201      	strh	r1, [r0, #16]
 800b828:	4770      	bx	lr
 800b82a:	bf00      	nop
 800b82c:	fffff800 	.word	0xfffff800

0800b830 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b830:	f1a0 0008 	sub.w	r0, r0, #8
 800b834:	e7ec      	b.n	800b810 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800b836:	bf00      	nop

0800b838 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800b838:	b508      	push	{r3, lr}
 800b83a:	4b05      	ldr	r3, [pc, #20]	@ (800b850 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800b83c:	6818      	ldr	r0, [r3, #0]
 800b83e:	6803      	ldr	r3, [r0, #0]
 800b840:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800b844:	4798      	blx	r3
 800b846:	1e43      	subs	r3, r0, #1
 800b848:	4258      	negs	r0, r3
 800b84a:	4158      	adcs	r0, r3
 800b84c:	bd08      	pop	{r3, pc}
 800b84e:	bf00      	nop
 800b850:	20016c88 	.word	0x20016c88

0800b854 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800b854:	4770      	bx	lr

0800b856 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800b856:	3808      	subs	r0, #8
 800b858:	4770      	bx	lr

0800b85a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800b85a:	b430      	push	{r4, r5}
 800b85c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800b860:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800b864:	8a02      	ldrh	r2, [r0, #16]
 800b866:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800b86a:	4629      	mov	r1, r5
 800b86c:	9202      	str	r2, [sp, #8]
 800b86e:	68c2      	ldr	r2, [r0, #12]
 800b870:	4620      	mov	r0, r4
 800b872:	bc30      	pop	{r4, r5}
 800b874:	f7f6 b9e8 	b.w	8001c48 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800b878 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800b878:	f7f6 b9dc 	b.w	8001c34 <_ZN8touchgfx5paint8tearDownEv>

0800b87c <_ZN8touchgfx13PainterRGB565D0Ev>:
 800b87c:	b510      	push	{r4, lr}
 800b87e:	4604      	mov	r4, r0
 800b880:	2114      	movs	r1, #20
 800b882:	f016 f843 	bl	802190c <_ZdlPvj>
 800b886:	4620      	mov	r0, r4
 800b888:	bd10      	pop	{r4, pc}

0800b88a <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800b88a:	f1a0 0008 	sub.w	r0, r0, #8
 800b88e:	e7f5      	b.n	800b87c <_ZN8touchgfx13PainterRGB565D0Ev>

0800b890 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800b890:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b892:	6803      	ldr	r3, [r0, #0]
 800b894:	460d      	mov	r5, r1
 800b896:	4604      	mov	r4, r0
 800b898:	4601      	mov	r1, r0
 800b89a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800b89c:	a802      	add	r0, sp, #8
 800b89e:	4798      	blx	r3
 800b8a0:	6828      	ldr	r0, [r5, #0]
 800b8a2:	6869      	ldr	r1, [r5, #4]
 800b8a4:	466b      	mov	r3, sp
 800b8a6:	c303      	stmia	r3!, {r0, r1}
 800b8a8:	4668      	mov	r0, sp
 800b8aa:	4619      	mov	r1, r3
 800b8ac:	f7fe fcc0 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800b8b0:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800b8b2:	b188      	cbz	r0, 800b8d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b8b4:	6803      	ldr	r3, [r0, #0]
 800b8b6:	1d21      	adds	r1, r4, #4
 800b8b8:	68db      	ldr	r3, [r3, #12]
 800b8ba:	4798      	blx	r3
 800b8bc:	b160      	cbz	r0, 800b8d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b8be:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800b8c2:	2b00      	cmp	r3, #0
 800b8c4:	dd08      	ble.n	800b8d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b8c6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800b8ca:	2d00      	cmp	r5, #0
 800b8cc:	dd04      	ble.n	800b8d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b8ce:	4a2b      	ldr	r2, [pc, #172]	@ (800b97c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800b8d0:	7812      	ldrb	r2, [r2, #0]
 800b8d2:	b11a      	cbz	r2, 800b8dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800b8d4:	2a01      	cmp	r2, #1
 800b8d6:	d029      	beq.n	800b92c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800b8d8:	b004      	add	sp, #16
 800b8da:	bd70      	pop	{r4, r5, r6, pc}
 800b8dc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b8e0:	441d      	add	r5, r3
 800b8e2:	b2ad      	uxth	r5, r5
 800b8e4:	b22e      	sxth	r6, r5
 800b8e6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800b8ea:	42b3      	cmp	r3, r6
 800b8ec:	daf4      	bge.n	800b8d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b8ee:	6823      	ldr	r3, [r4, #0]
 800b8f0:	4669      	mov	r1, sp
 800b8f2:	4620      	mov	r0, r4
 800b8f4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b8f6:	4798      	blx	r3
 800b8f8:	b940      	cbnz	r0, 800b90c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800b8fa:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800b8fe:	2b01      	cmp	r3, #1
 800b900:	d004      	beq.n	800b90c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800b902:	3301      	adds	r3, #1
 800b904:	105b      	asrs	r3, r3, #1
 800b906:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b90a:	e7f0      	b.n	800b8ee <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800b90c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b910:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b914:	4413      	add	r3, r2
 800b916:	b29b      	uxth	r3, r3
 800b918:	441a      	add	r2, r3
 800b91a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b91e:	b212      	sxth	r2, r2
 800b920:	4296      	cmp	r6, r2
 800b922:	dae0      	bge.n	800b8e6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800b924:	1aeb      	subs	r3, r5, r3
 800b926:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b92a:	e7dc      	b.n	800b8e6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800b92c:	f8bd 5000 	ldrh.w	r5, [sp]
 800b930:	441d      	add	r5, r3
 800b932:	b2ad      	uxth	r5, r5
 800b934:	b22e      	sxth	r6, r5
 800b936:	f9bd 3000 	ldrsh.w	r3, [sp]
 800b93a:	42b3      	cmp	r3, r6
 800b93c:	dacc      	bge.n	800b8d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b93e:	6823      	ldr	r3, [r4, #0]
 800b940:	4669      	mov	r1, sp
 800b942:	4620      	mov	r0, r4
 800b944:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b946:	4798      	blx	r3
 800b948:	b940      	cbnz	r0, 800b95c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800b94a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800b94e:	2b01      	cmp	r3, #1
 800b950:	d004      	beq.n	800b95c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800b952:	3301      	adds	r3, #1
 800b954:	105b      	asrs	r3, r3, #1
 800b956:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b95a:	e7f0      	b.n	800b93e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800b95c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800b960:	f8bd 3000 	ldrh.w	r3, [sp]
 800b964:	4413      	add	r3, r2
 800b966:	b29b      	uxth	r3, r3
 800b968:	441a      	add	r2, r3
 800b96a:	f8ad 3000 	strh.w	r3, [sp]
 800b96e:	b212      	sxth	r2, r2
 800b970:	4296      	cmp	r6, r2
 800b972:	dae0      	bge.n	800b936 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800b974:	1aeb      	subs	r3, r5, r3
 800b976:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b97a:	e7dc      	b.n	800b936 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800b97c:	20016c80 	.word	0x20016c80

0800b980 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800b980:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b982:	6803      	ldr	r3, [r0, #0]
 800b984:	4604      	mov	r4, r0
 800b986:	4601      	mov	r1, r0
 800b988:	4668      	mov	r0, sp
 800b98a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800b98c:	4798      	blx	r3
 800b98e:	2100      	movs	r1, #0
 800b990:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b994:	4668      	mov	r0, sp
 800b996:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b99a:	9102      	str	r1, [sp, #8]
 800b99c:	a902      	add	r1, sp, #8
 800b99e:	f8ad 200c 	strh.w	r2, [sp, #12]
 800b9a2:	f8ad 300e 	strh.w	r3, [sp, #14]
 800b9a6:	f7fe fc43 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800b9aa:	6823      	ldr	r3, [r4, #0]
 800b9ac:	4669      	mov	r1, sp
 800b9ae:	4620      	mov	r0, r4
 800b9b0:	691b      	ldr	r3, [r3, #16]
 800b9b2:	4798      	blx	r3
 800b9b4:	b004      	add	sp, #16
 800b9b6:	bd10      	pop	{r4, pc}

0800b9b8 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800b9b8:	2101      	movs	r1, #1
 800b9ba:	2200      	movs	r2, #0
 800b9bc:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800b9c0:	490a      	ldr	r1, [pc, #40]	@ (800b9ec <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800b9c2:	8082      	strh	r2, [r0, #4]
 800b9c4:	6001      	str	r1, [r0, #0]
 800b9c6:	21ff      	movs	r1, #255	@ 0xff
 800b9c8:	80c2      	strh	r2, [r0, #6]
 800b9ca:	8102      	strh	r2, [r0, #8]
 800b9cc:	8142      	strh	r2, [r0, #10]
 800b9ce:	8182      	strh	r2, [r0, #12]
 800b9d0:	81c2      	strh	r2, [r0, #14]
 800b9d2:	8202      	strh	r2, [r0, #16]
 800b9d4:	8242      	strh	r2, [r0, #18]
 800b9d6:	61c2      	str	r2, [r0, #28]
 800b9d8:	8402      	strh	r2, [r0, #32]
 800b9da:	8442      	strh	r2, [r0, #34]	@ 0x22
 800b9dc:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800b9e0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800b9e4:	6282      	str	r2, [r0, #40]	@ 0x28
 800b9e6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b9ea:	4770      	bx	lr
 800b9ec:	08024dfc 	.word	0x08024dfc

0800b9f0 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800b9f0:	6301      	str	r1, [r0, #48]	@ 0x30
 800b9f2:	4770      	bx	lr

0800b9f4 <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800b9f4:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800b9f6:	4770      	bx	lr

0800b9f8 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800b9f8:	6341      	str	r1, [r0, #52]	@ 0x34
 800b9fa:	4770      	bx	lr

0800b9fc <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800b9fc:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 800b9fe:	4770      	bx	lr

0800ba00 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800ba00:	4770      	bx	lr

0800ba02 <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800ba02:	4608      	mov	r0, r1
 800ba04:	4770      	bx	lr

0800ba06 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800ba06:	b530      	push	{r4, r5, lr}
 800ba08:	460d      	mov	r5, r1
 800ba0a:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 800ba0c:	8949      	ldrh	r1, [r1, #10]
 800ba0e:	b085      	sub	sp, #20
 800ba10:	4604      	mov	r4, r0
 800ba12:	1ac9      	subs	r1, r1, r3
 800ba14:	6803      	ldr	r3, [r0, #0]
 800ba16:	f10d 0206 	add.w	r2, sp, #6
 800ba1a:	f8d3 3104 	ldr.w	r3, [r3, #260]	@ 0x104
 800ba1e:	b209      	sxth	r1, r1
 800ba20:	4798      	blx	r3
 800ba22:	b1a0      	cbz	r0, 800ba4e <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800ba24:	792b      	ldrb	r3, [r5, #4]
 800ba26:	b993      	cbnz	r3, 800ba4e <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800ba28:	f8d4 0128 	ldr.w	r0, [r4, #296]	@ 0x128
 800ba2c:	b178      	cbz	r0, 800ba4e <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800ba2e:	6803      	ldr	r3, [r0, #0]
 800ba30:	68db      	ldr	r3, [r3, #12]
 800ba32:	4798      	blx	r3
 800ba34:	b158      	cbz	r0, 800ba4e <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800ba36:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800ba3a:	aa02      	add	r2, sp, #8
 800ba3c:	f8d4 0128 	ldr.w	r0, [r4, #296]	@ 0x128
 800ba40:	4621      	mov	r1, r4
 800ba42:	f8ad 3008 	strh.w	r3, [sp, #8]
 800ba46:	9503      	str	r5, [sp, #12]
 800ba48:	6803      	ldr	r3, [r0, #0]
 800ba4a:	689b      	ldr	r3, [r3, #8]
 800ba4c:	4798      	blx	r3
 800ba4e:	b005      	add	sp, #20
 800ba50:	bd30      	pop	{r4, r5, pc}

0800ba52 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800ba52:	428a      	cmp	r2, r1
 800ba54:	bfbc      	itt	lt
 800ba56:	460b      	movlt	r3, r1
 800ba58:	4611      	movlt	r1, r2
 800ba5a:	b510      	push	{r4, lr}
 800ba5c:	bfb8      	it	lt
 800ba5e:	461a      	movlt	r2, r3
 800ba60:	f8d0 312c 	ldr.w	r3, [r0, #300]	@ 0x12c
 800ba64:	4604      	mov	r4, r0
 800ba66:	428b      	cmp	r3, r1
 800ba68:	d103      	bne.n	800ba72 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x20>
 800ba6a:	f8d0 3130 	ldr.w	r3, [r0, #304]	@ 0x130
 800ba6e:	4293      	cmp	r3, r2
 800ba70:	d011      	beq.n	800ba96 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x44>
 800ba72:	f8c4 112c 	str.w	r1, [r4, #300]	@ 0x12c
 800ba76:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 800ba7a:	f8c4 2130 	str.w	r2, [r4, #304]	@ 0x130
 800ba7e:	f005 ff1c 	bl	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800ba82:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 800ba86:	f005 ff18 	bl	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800ba8a:	f104 00e8 	add.w	r0, r4, #232	@ 0xe8
 800ba8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ba92:	f005 bf12 	b.w	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800ba96:	bd10      	pop	{r4, pc}

0800ba98 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800ba98:	428a      	cmp	r2, r1
 800ba9a:	bfbc      	itt	lt
 800ba9c:	460b      	movlt	r3, r1
 800ba9e:	4611      	movlt	r1, r2
 800baa0:	b510      	push	{r4, lr}
 800baa2:	bfb8      	it	lt
 800baa4:	461a      	movlt	r2, r3
 800baa6:	f8d0 3134 	ldr.w	r3, [r0, #308]	@ 0x134
 800baaa:	4604      	mov	r4, r0
 800baac:	428b      	cmp	r3, r1
 800baae:	d103      	bne.n	800bab8 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x20>
 800bab0:	f8d0 3138 	ldr.w	r3, [r0, #312]	@ 0x138
 800bab4:	4293      	cmp	r3, r2
 800bab6:	d011      	beq.n	800badc <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x44>
 800bab8:	f8c4 1134 	str.w	r1, [r4, #308]	@ 0x134
 800babc:	f104 0064 	add.w	r0, r4, #100	@ 0x64
 800bac0:	f8c4 2138 	str.w	r2, [r4, #312]	@ 0x138
 800bac4:	f005 fef9 	bl	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800bac8:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 800bacc:	f005 fef5 	bl	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800bad0:	f104 0090 	add.w	r0, r4, #144	@ 0x90
 800bad4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bad8:	f005 beef 	b.w	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800badc:	bd10      	pop	{r4, pc}

0800bade <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800bade:	2300      	movs	r3, #0
 800bae0:	3038      	adds	r0, #56	@ 0x38
 800bae2:	f8a0 30e6 	strh.w	r3, [r0, #230]	@ 0xe6
 800bae6:	f005 bee8 	b.w	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>

0800baea <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800baea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800baee:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 800baf2:	4605      	mov	r5, r0
 800baf4:	460f      	mov	r7, r1
 800baf6:	4616      	mov	r6, r2
 800baf8:	2b00      	cmp	r3, #0
 800bafa:	d03d      	beq.n	800bb78 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8e>
 800bafc:	6803      	ldr	r3, [r0, #0]
 800bafe:	f8d3 3130 	ldr.w	r3, [r3, #304]	@ 0x130
 800bb02:	4798      	blx	r3
 800bb04:	682b      	ldr	r3, [r5, #0]
 800bb06:	b204      	sxth	r4, r0
 800bb08:	4628      	mov	r0, r5
 800bb0a:	f8d3 3134 	ldr.w	r3, [r3, #308]	@ 0x134
 800bb0e:	4798      	blx	r3
 800bb10:	b203      	sxth	r3, r0
 800bb12:	f9b5 011e 	ldrsh.w	r0, [r5, #286]	@ 0x11e
 800bb16:	429c      	cmp	r4, r3
 800bb18:	bfc4      	itt	gt
 800bb1a:	4622      	movgt	r2, r4
 800bb1c:	461c      	movgt	r4, r3
 800bb1e:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 800bb22:	bfc8      	it	gt
 800bb24:	4613      	movgt	r3, r2
 800bb26:	4284      	cmp	r4, r0
 800bb28:	da26      	bge.n	800bb78 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8e>
 800bb2a:	4298      	cmp	r0, r3
 800bb2c:	bfa8      	it	ge
 800bb2e:	4618      	movge	r0, r3
 800bb30:	2800      	cmp	r0, #0
 800bb32:	db21      	blt.n	800bb78 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8e>
 800bb34:	b9ef      	cbnz	r7, 800bb72 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x88>
 800bb36:	f8d5 3144 	ldr.w	r3, [r5, #324]	@ 0x144
 800bb3a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800bb3e:	4619      	mov	r1, r3
 800bb40:	42a0      	cmp	r0, r4
 800bb42:	dd0b      	ble.n	800bb5c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x72>
 800bb44:	f8d5 2144 	ldr.w	r2, [r5, #324]	@ 0x144
 800bb48:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
 800bb4c:	3401      	adds	r4, #1
 800bb4e:	4291      	cmp	r1, r2
 800bb50:	bfa8      	it	ge
 800bb52:	4611      	movge	r1, r2
 800bb54:	4293      	cmp	r3, r2
 800bb56:	bfb8      	it	lt
 800bb58:	4613      	movlt	r3, r2
 800bb5a:	e7f1      	b.n	800bb40 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x56>
 800bb5c:	1b89      	subs	r1, r1, r6
 800bb5e:	18f2      	adds	r2, r6, r3
 800bb60:	4291      	cmp	r1, r2
 800bb62:	d009      	beq.n	800bb78 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8e>
 800bb64:	682b      	ldr	r3, [r5, #0]
 800bb66:	4628      	mov	r0, r5
 800bb68:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800bb6c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bb70:	4718      	bx	r3
 800bb72:	4273      	negs	r3, r6
 800bb74:	4631      	mov	r1, r6
 800bb76:	e7e3      	b.n	800bb40 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x56>
 800bb78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bb7c <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800bb7c:	b530      	push	{r4, r5, lr}
 800bb7e:	790b      	ldrb	r3, [r1, #4]
 800bb80:	b085      	sub	sp, #20
 800bb82:	4604      	mov	r4, r0
 800bb84:	460d      	mov	r5, r1
 800bb86:	2b02      	cmp	r3, #2
 800bb88:	d020      	beq.n	800bbcc <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bb8a:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 800bb8c:	f10d 0206 	add.w	r2, sp, #6
 800bb90:	88c9      	ldrh	r1, [r1, #6]
 800bb92:	1ac9      	subs	r1, r1, r3
 800bb94:	6803      	ldr	r3, [r0, #0]
 800bb96:	b209      	sxth	r1, r1
 800bb98:	f8d3 3104 	ldr.w	r3, [r3, #260]	@ 0x104
 800bb9c:	4798      	blx	r3
 800bb9e:	b1a8      	cbz	r0, 800bbcc <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bba0:	792b      	ldrb	r3, [r5, #4]
 800bba2:	2b01      	cmp	r3, #1
 800bba4:	d812      	bhi.n	800bbcc <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bba6:	f8d4 0124 	ldr.w	r0, [r4, #292]	@ 0x124
 800bbaa:	b178      	cbz	r0, 800bbcc <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bbac:	6803      	ldr	r3, [r0, #0]
 800bbae:	68db      	ldr	r3, [r3, #12]
 800bbb0:	4798      	blx	r3
 800bbb2:	b158      	cbz	r0, 800bbcc <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bbb4:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bbb8:	aa02      	add	r2, sp, #8
 800bbba:	f8d4 0124 	ldr.w	r0, [r4, #292]	@ 0x124
 800bbbe:	4621      	mov	r1, r4
 800bbc0:	f8ad 3008 	strh.w	r3, [sp, #8]
 800bbc4:	9503      	str	r5, [sp, #12]
 800bbc6:	6803      	ldr	r3, [r0, #0]
 800bbc8:	689b      	ldr	r3, [r3, #8]
 800bbca:	4798      	blx	r3
 800bbcc:	b005      	add	sp, #20
 800bbce:	bd30      	pop	{r4, r5, pc}

0800bbd0 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800bbd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbd4:	4604      	mov	r4, r0
 800bbd6:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	@ 0x11e
 800bbda:	4690      	mov	r8, r2
 800bbdc:	461f      	mov	r7, r3
 800bbde:	9e06      	ldr	r6, [sp, #24]
 800bbe0:	b928      	cbnz	r0, 800bbee <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800bbe2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800bbe6:	8033      	strh	r3, [r6, #0]
 800bbe8:	803b      	strh	r3, [r7, #0]
 800bbea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bbee:	f8b4 2118 	ldrh.w	r2, [r4, #280]	@ 0x118
 800bbf2:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	@ 0x116
 800bbf6:	1883      	adds	r3, r0, r2
 800bbf8:	f8b4 2040 	ldrh.w	r2, [r4, #64]	@ 0x40
 800bbfc:	1ad2      	subs	r2, r2, r3
 800bbfe:	b212      	sxth	r2, r2
 800bc00:	2a01      	cmp	r2, #1
 800bc02:	dc07      	bgt.n	800bc14 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800bc04:	2300      	movs	r3, #0
 800bc06:	803b      	strh	r3, [r7, #0]
 800bc08:	f8b4 311e 	ldrh.w	r3, [r4, #286]	@ 0x11e
 800bc0c:	3b01      	subs	r3, #1
 800bc0e:	8033      	strh	r3, [r6, #0]
 800bc10:	2001      	movs	r0, #1
 800bc12:	e7ea      	b.n	800bbea <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800bc14:	1a08      	subs	r0, r1, r0
 800bc16:	f8d4 3130 	ldr.w	r3, [r4, #304]	@ 0x130
 800bc1a:	f8d4 112c 	ldr.w	r1, [r4, #300]	@ 0x12c
 800bc1e:	0140      	lsls	r0, r0, #5
 800bc20:	6b25      	ldr	r5, [r4, #48]	@ 0x30
 800bc22:	1a5b      	subs	r3, r3, r1
 800bc24:	d459      	bmi.n	800bcda <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x10a>
 800bc26:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800bc2a:	fb93 f1f5 	sdiv	r1, r3, r5
 800bc2e:	2302      	movs	r3, #2
 800bc30:	fb91 f1f3 	sdiv	r1, r1, r3
 800bc34:	3a01      	subs	r2, #1
 800bc36:	f006 f80a 	bl	8011c4e <_ZN8touchgfx6muldivElll>
 800bc3a:	f8d4 112c 	ldr.w	r1, [r4, #300]	@ 0x12c
 800bc3e:	f8d4 c030 	ldr.w	ip, [r4, #48]	@ 0x30
 800bc42:	2900      	cmp	r1, #0
 800bc44:	db55      	blt.n	800bcf2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x122>
 800bc46:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800bc4a:	2502      	movs	r5, #2
 800bc4c:	fb93 f3fc 	sdiv	r3, r3, ip
 800bc50:	fb93 f3f5 	sdiv	r3, r3, r5
 800bc54:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800bc58:	f8d4 2130 	ldr.w	r2, [r4, #304]	@ 0x130
 800bc5c:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	@ 0x116
 800bc60:	1a52      	subs	r2, r2, r1
 800bc62:	eba8 0003 	sub.w	r0, r8, r3
 800bc66:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800bc6a:	d44e      	bmi.n	800bd0a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x13a>
 800bc6c:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800bc70:	fb92 f1fc 	sdiv	r1, r2, ip
 800bc74:	2202      	movs	r2, #2
 800bc76:	fb91 f1f2 	sdiv	r1, r1, r2
 800bc7a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	@ 0x118
 800bc7e:	4413      	add	r3, r2
 800bc80:	f8b4 2040 	ldrh.w	r2, [r4, #64]	@ 0x40
 800bc84:	1ad2      	subs	r2, r2, r3
 800bc86:	b212      	sxth	r2, r2
 800bc88:	3a01      	subs	r2, #1
 800bc8a:	f005 ffe0 	bl	8011c4e <_ZN8touchgfx6muldivElll>
 800bc8e:	f8d4 312c 	ldr.w	r3, [r4, #300]	@ 0x12c
 800bc92:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800bc94:	2b00      	cmp	r3, #0
 800bc96:	db44      	blt.n	800bd22 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x152>
 800bc98:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800bc9c:	fb93 f3f2 	sdiv	r3, r3, r2
 800bca0:	2202      	movs	r2, #2
 800bca2:	fb93 f3f2 	sdiv	r3, r3, r2
 800bca6:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800bcaa:	2020      	movs	r0, #32
 800bcac:	429d      	cmp	r5, r3
 800bcae:	bfde      	ittt	le
 800bcb0:	461a      	movle	r2, r3
 800bcb2:	462b      	movle	r3, r5
 800bcb4:	4615      	movle	r5, r2
 800bcb6:	b21b      	sxth	r3, r3
 800bcb8:	2d00      	cmp	r5, #0
 800bcba:	bfaa      	itet	ge
 800bcbc:	351f      	addge	r5, #31
 800bcbe:	fb95 f5f0 	sdivlt	r5, r5, r0
 800bcc2:	116d      	asrge	r5, r5, #5
 800bcc4:	fb93 f3f0 	sdiv	r3, r3, r0
 800bcc8:	b22d      	sxth	r5, r5
 800bcca:	803b      	strh	r3, [r7, #0]
 800bccc:	2d00      	cmp	r5, #0
 800bcce:	8035      	strh	r5, [r6, #0]
 800bcd0:	da33      	bge.n	800bd3a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x16a>
 800bcd2:	2000      	movs	r0, #0
 800bcd4:	8030      	strh	r0, [r6, #0]
 800bcd6:	8038      	strh	r0, [r7, #0]
 800bcd8:	e787      	b.n	800bbea <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800bcda:	f06f 0101 	mvn.w	r1, #1
 800bcde:	fb01 5303 	mla	r3, r1, r3, r5
 800bce2:	1e59      	subs	r1, r3, #1
 800bce4:	2302      	movs	r3, #2
 800bce6:	fb91 f1f5 	sdiv	r1, r1, r5
 800bcea:	fb91 f1f3 	sdiv	r1, r1, r3
 800bcee:	4249      	negs	r1, r1
 800bcf0:	e7a0      	b.n	800bc34 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x64>
 800bcf2:	f06f 0301 	mvn.w	r3, #1
 800bcf6:	2502      	movs	r5, #2
 800bcf8:	fb03 c301 	mla	r3, r3, r1, ip
 800bcfc:	3b01      	subs	r3, #1
 800bcfe:	fb93 f3fc 	sdiv	r3, r3, ip
 800bd02:	fb93 f3f5 	sdiv	r3, r3, r5
 800bd06:	425b      	negs	r3, r3
 800bd08:	e7a4      	b.n	800bc54 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x84>
 800bd0a:	f06f 0101 	mvn.w	r1, #1
 800bd0e:	fb01 c202 	mla	r2, r1, r2, ip
 800bd12:	1e51      	subs	r1, r2, #1
 800bd14:	2202      	movs	r2, #2
 800bd16:	fb91 f1fc 	sdiv	r1, r1, ip
 800bd1a:	fb91 f1f2 	sdiv	r1, r1, r2
 800bd1e:	4249      	negs	r1, r1
 800bd20:	e7ab      	b.n	800bc7a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xaa>
 800bd22:	f06f 0101 	mvn.w	r1, #1
 800bd26:	fb01 2303 	mla	r3, r1, r3, r2
 800bd2a:	3b01      	subs	r3, #1
 800bd2c:	fb93 f3f2 	sdiv	r3, r3, r2
 800bd30:	2202      	movs	r2, #2
 800bd32:	fb93 f3f2 	sdiv	r3, r3, r2
 800bd36:	425b      	negs	r3, r3
 800bd38:	e7b5      	b.n	800bca6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd6>
 800bd3a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800bd3e:	f9b7 2000 	ldrsh.w	r2, [r7]
 800bd42:	4293      	cmp	r3, r2
 800bd44:	dc05      	bgt.n	800bd52 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x182>
 800bd46:	3b01      	subs	r3, #1
 800bd48:	2000      	movs	r0, #0
 800bd4a:	b21b      	sxth	r3, r3
 800bd4c:	8033      	strh	r3, [r6, #0]
 800bd4e:	803b      	strh	r3, [r7, #0]
 800bd50:	e74b      	b.n	800bbea <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800bd52:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800bd56:	803a      	strh	r2, [r7, #0]
 800bd58:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800bd5c:	f9b6 2000 	ldrsh.w	r2, [r6]
 800bd60:	4293      	cmp	r3, r2
 800bd62:	bfdc      	itt	le
 800bd64:	f103 33ff 	addle.w	r3, r3, #4294967295
 800bd68:	b21a      	sxthle	r2, r3
 800bd6a:	8032      	strh	r2, [r6, #0]
 800bd6c:	e750      	b.n	800bc10 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>
	...

0800bd70 <_ZN8touchgfx9ContainerC1Ev>:
 800bd70:	2101      	movs	r1, #1
 800bd72:	2200      	movs	r2, #0
 800bd74:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800bd78:	4909      	ldr	r1, [pc, #36]	@ (800bda0 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800bd7a:	8082      	strh	r2, [r0, #4]
 800bd7c:	80c2      	strh	r2, [r0, #6]
 800bd7e:	8102      	strh	r2, [r0, #8]
 800bd80:	8142      	strh	r2, [r0, #10]
 800bd82:	8182      	strh	r2, [r0, #12]
 800bd84:	81c2      	strh	r2, [r0, #14]
 800bd86:	8202      	strh	r2, [r0, #16]
 800bd88:	8242      	strh	r2, [r0, #18]
 800bd8a:	61c2      	str	r2, [r0, #28]
 800bd8c:	8402      	strh	r2, [r0, #32]
 800bd8e:	8442      	strh	r2, [r0, #34]	@ 0x22
 800bd90:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800bd94:	6001      	str	r1, [r0, #0]
 800bd96:	6282      	str	r2, [r0, #40]	@ 0x28
 800bd98:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bd9c:	4770      	bx	lr
 800bd9e:	bf00      	nop
 800bda0:	08024c38 	.word	0x08024c38

0800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800bda4:	6800      	ldr	r0, [r0, #0]
 800bda6:	2800      	cmp	r0, #0
 800bda8:	bfbd      	ittte	lt
 800bdaa:	380f      	sublt	r0, #15
 800bdac:	2320      	movlt	r3, #32
 800bdae:	fb90 f0f3 	sdivlt	r0, r0, r3
 800bdb2:	3010      	addge	r0, #16
 800bdb4:	bfa8      	it	ge
 800bdb6:	1140      	asrge	r0, r0, #5
 800bdb8:	4770      	bx	lr

0800bdba <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800bdba:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bdbe:	4605      	mov	r5, r0
 800bdc0:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	@ 0x11e
 800bdc4:	4688      	mov	r8, r1
 800bdc6:	4691      	mov	r9, r2
 800bdc8:	469a      	mov	sl, r3
 800bdca:	b360      	cbz	r0, 800be26 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800bdcc:	2700      	movs	r7, #0
 800bdce:	f04f 3bff 	mov.w	fp, #4294967295
 800bdd2:	b23e      	sxth	r6, r7
 800bdd4:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	@ 0x11e
 800bdd8:	42b3      	cmp	r3, r6
 800bdda:	dd23      	ble.n	800be24 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800bddc:	682b      	ldr	r3, [r5, #0]
 800bdde:	4631      	mov	r1, r6
 800bde0:	4628      	mov	r0, r5
 800bde2:	3701      	adds	r7, #1
 800bde4:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800bde8:	4798      	blx	r3
 800bdea:	9001      	str	r0, [sp, #4]
 800bdec:	a801      	add	r0, sp, #4
 800bdee:	f7ff ffd9 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bdf2:	682b      	ldr	r3, [r5, #0]
 800bdf4:	eba0 0008 	sub.w	r0, r0, r8
 800bdf8:	4631      	mov	r1, r6
 800bdfa:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800bdfe:	b204      	sxth	r4, r0
 800be00:	4628      	mov	r0, r5
 800be02:	4798      	blx	r3
 800be04:	9001      	str	r0, [sp, #4]
 800be06:	a801      	add	r0, sp, #4
 800be08:	f7ff ffcc 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800be0c:	eba0 0009 	sub.w	r0, r0, r9
 800be10:	fb10 f000 	smulbb	r0, r0, r0
 800be14:	fb04 0404 	mla	r4, r4, r4, r0
 800be18:	455c      	cmp	r4, fp
 800be1a:	bf3c      	itt	cc
 800be1c:	f8aa 6000 	strhcc.w	r6, [sl]
 800be20:	46a3      	movcc	fp, r4
 800be22:	e7d6      	b.n	800bdd2 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800be24:	2001      	movs	r0, #1
 800be26:	b003      	add	sp, #12
 800be28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800be2c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800be2c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800be30:	460e      	mov	r6, r1
 800be32:	2100      	movs	r1, #0
 800be34:	4605      	mov	r5, r0
 800be36:	4617      	mov	r7, r2
 800be38:	8011      	strh	r1, [r2, #0]
 800be3a:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 800be3e:	b36b      	cbz	r3, 800be9c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x70>
 800be40:	6803      	ldr	r3, [r0, #0]
 800be42:	f10d 0808 	add.w	r8, sp, #8
 800be46:	2401      	movs	r4, #1
 800be48:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800be4c:	4798      	blx	r3
 800be4e:	f848 0d04 	str.w	r0, [r8, #-4]!
 800be52:	4640      	mov	r0, r8
 800be54:	f7ff ffa6 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800be58:	b200      	sxth	r0, r0
 800be5a:	1b80      	subs	r0, r0, r6
 800be5c:	ea80 79e0 	eor.w	r9, r0, r0, asr #31
 800be60:	eba9 79e0 	sub.w	r9, r9, r0, asr #31
 800be64:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	@ 0x11e
 800be68:	42a3      	cmp	r3, r4
 800be6a:	dd1b      	ble.n	800bea4 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x78>
 800be6c:	682b      	ldr	r3, [r5, #0]
 800be6e:	4621      	mov	r1, r4
 800be70:	4628      	mov	r0, r5
 800be72:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800be76:	4798      	blx	r3
 800be78:	9001      	str	r0, [sp, #4]
 800be7a:	4640      	mov	r0, r8
 800be7c:	f7ff ff92 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800be80:	b200      	sxth	r0, r0
 800be82:	1b80      	subs	r0, r0, r6
 800be84:	2800      	cmp	r0, #0
 800be86:	bfb8      	it	lt
 800be88:	4240      	neglt	r0, r0
 800be8a:	4548      	cmp	r0, r9
 800be8c:	bf38      	it	cc
 800be8e:	803c      	strhcc	r4, [r7, #0]
 800be90:	f104 0401 	add.w	r4, r4, #1
 800be94:	bf38      	it	cc
 800be96:	4681      	movcc	r9, r0
 800be98:	b224      	sxth	r4, r4
 800be9a:	e7e3      	b.n	800be64 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x38>
 800be9c:	4618      	mov	r0, r3
 800be9e:	b003      	add	sp, #12
 800bea0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bea4:	2001      	movs	r0, #1
 800bea6:	e7fa      	b.n	800be9e <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x72>

0800bea8 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800bea8:	f8a0 3118 	strh.w	r3, [r0, #280]	@ 0x118
 800beac:	f9bd 3000 	ldrsh.w	r3, [sp]
 800beb0:	f8a0 1114 	strh.w	r1, [r0, #276]	@ 0x114
 800beb4:	f8a0 2116 	strh.w	r2, [r0, #278]	@ 0x116
 800beb8:	f8a0 311a 	strh.w	r3, [r0, #282]	@ 0x11a
 800bebc:	4770      	bx	lr

0800bebe <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800bebe:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bec0:	4604      	mov	r4, r0
 800bec2:	3038      	adds	r0, #56	@ 0x38
 800bec4:	460d      	mov	r5, r1
 800bec6:	f7fe f82f 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800beca:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	@ 0x42
 800bece:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800bed2:	4628      	mov	r0, r5
 800bed4:	9200      	str	r2, [sp, #0]
 800bed6:	2200      	movs	r2, #0
 800bed8:	4611      	mov	r1, r2
 800beda:	f7f7 f906 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
 800bede:	b003      	add	sp, #12
 800bee0:	bd30      	pop	{r4, r5, pc}

0800bee2 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800bee2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bee4:	4604      	mov	r4, r0
 800bee6:	3064      	adds	r0, #100	@ 0x64
 800bee8:	460d      	mov	r5, r1
 800beea:	f7fe f81d 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800beee:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	@ 0x6e
 800bef2:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	@ 0x6c
 800bef6:	4628      	mov	r0, r5
 800bef8:	9200      	str	r2, [sp, #0]
 800befa:	2200      	movs	r2, #0
 800befc:	4611      	mov	r1, r2
 800befe:	f7f7 f8f4 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
 800bf02:	b003      	add	sp, #12
 800bf04:	bd30      	pop	{r4, r5, pc}

0800bf06 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800bf06:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bf08:	4604      	mov	r4, r0
 800bf0a:	30e8      	adds	r0, #232	@ 0xe8
 800bf0c:	460d      	mov	r5, r1
 800bf0e:	f7fe f80b 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800bf12:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	@ 0xf2
 800bf16:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	@ 0xf0
 800bf1a:	4628      	mov	r0, r5
 800bf1c:	9200      	str	r2, [sp, #0]
 800bf1e:	2200      	movs	r2, #0
 800bf20:	4611      	mov	r1, r2
 800bf22:	f7f7 f8e2 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
 800bf26:	b003      	add	sp, #12
 800bf28:	bd30      	pop	{r4, r5, pc}

0800bf2a <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800bf2a:	b538      	push	{r3, r4, r5, lr}
 800bf2c:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 800bf30:	460d      	mov	r5, r1
 800bf32:	428b      	cmp	r3, r1
 800bf34:	dd08      	ble.n	800bf48 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800bf36:	6e04      	ldr	r4, [r0, #96]	@ 0x60
 800bf38:	b134      	cbz	r4, 800bf48 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800bf3a:	6823      	ldr	r3, [r4, #0]
 800bf3c:	4620      	mov	r0, r4
 800bf3e:	4629      	mov	r1, r5
 800bf40:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800bf42:	4798      	blx	r3
 800bf44:	69a4      	ldr	r4, [r4, #24]
 800bf46:	e7f7      	b.n	800bf38 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800bf48:	bd38      	pop	{r3, r4, r5, pc}

0800bf4a <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800bf4a:	b570      	push	{r4, r5, r6, lr}
 800bf4c:	4606      	mov	r6, r0
 800bf4e:	460d      	mov	r5, r1
 800bf50:	f8d0 40e4 	ldr.w	r4, [r0, #228]	@ 0xe4
 800bf54:	b134      	cbz	r4, 800bf64 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800bf56:	6823      	ldr	r3, [r4, #0]
 800bf58:	4620      	mov	r0, r4
 800bf5a:	4629      	mov	r1, r5
 800bf5c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800bf5e:	4798      	blx	r3
 800bf60:	69a4      	ldr	r4, [r4, #24]
 800bf62:	e7f7      	b.n	800bf54 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800bf64:	f8d6 4110 	ldr.w	r4, [r6, #272]	@ 0x110
 800bf68:	b134      	cbz	r4, 800bf78 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800bf6a:	6823      	ldr	r3, [r4, #0]
 800bf6c:	4620      	mov	r0, r4
 800bf6e:	4629      	mov	r1, r5
 800bf70:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800bf72:	4798      	blx	r3
 800bf74:	69a4      	ldr	r4, [r4, #24]
 800bf76:	e7f7      	b.n	800bf68 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800bf78:	bd70      	pop	{r4, r5, r6, pc}

0800bf7a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800bf7a:	b538      	push	{r3, r4, r5, lr}
 800bf7c:	4604      	mov	r4, r0
 800bf7e:	2500      	movs	r5, #0
 800bf80:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800bf84:	42ab      	cmp	r3, r5
 800bf86:	db05      	blt.n	800bf94 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800bf88:	b229      	sxth	r1, r5
 800bf8a:	4620      	mov	r0, r4
 800bf8c:	f7ff ffdd 	bl	800bf4a <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800bf90:	3501      	adds	r5, #1
 800bf92:	e7f5      	b.n	800bf80 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800bf94:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 800bf98:	f005 fc8f 	bl	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800bf9c:	f104 00e8 	add.w	r0, r4, #232	@ 0xe8
 800bfa0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bfa4:	f005 bc89 	b.w	80118ba <_ZNK8touchgfx8Drawable10invalidateEv>

0800bfa8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800bfa8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bfaa:	4604      	mov	r4, r0
 800bfac:	6e05      	ldr	r5, [r0, #96]	@ 0x60
 800bfae:	b15d      	cbz	r5, 800bfc8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800bfb0:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	@ 0x42
 800bfb4:	4628      	mov	r0, r5
 800bfb6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800bfba:	9200      	str	r2, [sp, #0]
 800bfbc:	2200      	movs	r2, #0
 800bfbe:	4611      	mov	r1, r2
 800bfc0:	f7f7 f893 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
 800bfc4:	69ad      	ldr	r5, [r5, #24]
 800bfc6:	e7f2      	b.n	800bfae <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800bfc8:	f8d4 50e4 	ldr.w	r5, [r4, #228]	@ 0xe4
 800bfcc:	b15d      	cbz	r5, 800bfe6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800bfce:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	@ 0xc6
 800bfd2:	4628      	mov	r0, r5
 800bfd4:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	@ 0xc4
 800bfd8:	9200      	str	r2, [sp, #0]
 800bfda:	2200      	movs	r2, #0
 800bfdc:	4611      	mov	r1, r2
 800bfde:	f7f7 f884 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
 800bfe2:	69ad      	ldr	r5, [r5, #24]
 800bfe4:	e7f2      	b.n	800bfcc <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800bfe6:	f8d4 508c 	ldr.w	r5, [r4, #140]	@ 0x8c
 800bfea:	b15d      	cbz	r5, 800c004 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800bfec:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	@ 0x6e
 800bff0:	4628      	mov	r0, r5
 800bff2:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	@ 0x6c
 800bff6:	9200      	str	r2, [sp, #0]
 800bff8:	2200      	movs	r2, #0
 800bffa:	4611      	mov	r1, r2
 800bffc:	f7f7 f875 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
 800c000:	69ad      	ldr	r5, [r5, #24]
 800c002:	e7f2      	b.n	800bfea <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800c004:	f8d4 50b8 	ldr.w	r5, [r4, #184]	@ 0xb8
 800c008:	b15d      	cbz	r5, 800c022 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800c00a:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	@ 0x9a
 800c00e:	4628      	mov	r0, r5
 800c010:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	@ 0x98
 800c014:	9200      	str	r2, [sp, #0]
 800c016:	2200      	movs	r2, #0
 800c018:	4611      	mov	r1, r2
 800c01a:	f7f7 f866 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
 800c01e:	69ad      	ldr	r5, [r5, #24]
 800c020:	e7f2      	b.n	800c008 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800c022:	f8d4 5110 	ldr.w	r5, [r4, #272]	@ 0x110
 800c026:	b15d      	cbz	r5, 800c040 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800c028:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	@ 0xf2
 800c02c:	4628      	mov	r0, r5
 800c02e:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	@ 0xf0
 800c032:	9200      	str	r2, [sp, #0]
 800c034:	2200      	movs	r2, #0
 800c036:	4611      	mov	r1, r2
 800c038:	f7f7 f857 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
 800c03c:	69ad      	ldr	r5, [r5, #24]
 800c03e:	e7f2      	b.n	800c026 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800c040:	6823      	ldr	r3, [r4, #0]
 800c042:	4620      	mov	r0, r4
 800c044:	695b      	ldr	r3, [r3, #20]
 800c046:	b003      	add	sp, #12
 800c048:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c04c:	4718      	bx	r3

0800c04e <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800c04e:	b430      	push	{r4, r5}
 800c050:	b28a      	uxth	r2, r1
 800c052:	f8b0 4098 	ldrh.w	r4, [r0, #152]	@ 0x98
 800c056:	f8a0 10c4 	strh.w	r1, [r0, #196]	@ 0xc4
 800c05a:	1b15      	subs	r5, r2, r4
 800c05c:	f8a0 10f0 	strh.w	r1, [r0, #240]	@ 0xf0
 800c060:	8101      	strh	r1, [r0, #8]
 800c062:	f8a0 5094 	strh.w	r5, [r0, #148]	@ 0x94
 800c066:	f8b0 506c 	ldrh.w	r5, [r0, #108]	@ 0x6c
 800c06a:	442c      	add	r4, r5
 800c06c:	1b12      	subs	r2, r2, r4
 800c06e:	bc30      	pop	{r4, r5}
 800c070:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800c074:	f7ff bf98 	b.w	800bfa8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c078 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800c078:	b430      	push	{r4, r5}
 800c07a:	b28a      	uxth	r2, r1
 800c07c:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	@ 0xf2
 800c080:	f8a0 106e 	strh.w	r1, [r0, #110]	@ 0x6e
 800c084:	1b15      	subs	r5, r2, r4
 800c086:	f8a0 109a 	strh.w	r1, [r0, #154]	@ 0x9a
 800c08a:	8141      	strh	r1, [r0, #10]
 800c08c:	f8a0 50ee 	strh.w	r5, [r0, #238]	@ 0xee
 800c090:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	@ 0xc6
 800c094:	442c      	add	r4, r5
 800c096:	1b12      	subs	r2, r2, r4
 800c098:	bc30      	pop	{r4, r5}
 800c09a:	f8a0 2042 	strh.w	r2, [r0, #66]	@ 0x42
 800c09e:	f7ff bf83 	b.w	800bfa8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c0a2 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800c0a2:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c0a6:	fa1f fa83 	uxth.w	sl, r3
 800c0aa:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	@ 0x28
 800c0ae:	4615      	mov	r5, r2
 800c0b0:	4699      	mov	r9, r3
 800c0b2:	fa1f f887 	uxth.w	r8, r7
 800c0b6:	8903      	ldrh	r3, [r0, #8]
 800c0b8:	4452      	add	r2, sl
 800c0ba:	4604      	mov	r4, r0
 800c0bc:	8940      	ldrh	r0, [r0, #10]
 800c0be:	460e      	mov	r6, r1
 800c0c0:	1a9b      	subs	r3, r3, r2
 800c0c2:	eb08 0201 	add.w	r2, r8, r1
 800c0c6:	1a80      	subs	r0, r0, r2
 800c0c8:	b21b      	sxth	r3, r3
 800c0ca:	460a      	mov	r2, r1
 800c0cc:	4629      	mov	r1, r5
 800c0ce:	b200      	sxth	r0, r0
 800c0d0:	9000      	str	r0, [sp, #0]
 800c0d2:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 800c0d6:	f7f7 f808 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
 800c0da:	2200      	movs	r2, #0
 800c0dc:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c0e0:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 800c0e4:	4611      	mov	r1, r2
 800c0e6:	9600      	str	r6, [sp, #0]
 800c0e8:	f7f6 ffff 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
 800c0ec:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c0f0:	2200      	movs	r2, #0
 800c0f2:	f104 0064 	add.w	r0, r4, #100	@ 0x64
 800c0f6:	9300      	str	r3, [sp, #0]
 800c0f8:	462b      	mov	r3, r5
 800c0fa:	4611      	mov	r1, r2
 800c0fc:	f7f6 fff5 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
 800c100:	8921      	ldrh	r1, [r4, #8]
 800c102:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c106:	f104 0090 	add.w	r0, r4, #144	@ 0x90
 800c10a:	eba1 010a 	sub.w	r1, r1, sl
 800c10e:	2200      	movs	r2, #0
 800c110:	9300      	str	r3, [sp, #0]
 800c112:	464b      	mov	r3, r9
 800c114:	b209      	sxth	r1, r1
 800c116:	f7f6 ffe8 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
 800c11a:	8962      	ldrh	r2, [r4, #10]
 800c11c:	f104 00e8 	add.w	r0, r4, #232	@ 0xe8
 800c120:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c124:	eba2 0208 	sub.w	r2, r2, r8
 800c128:	9700      	str	r7, [sp, #0]
 800c12a:	2100      	movs	r1, #0
 800c12c:	b212      	sxth	r2, r2
 800c12e:	f7f6 ffdc 	bl	80030ea <_ZN8touchgfx8Drawable11setPositionEssss>
 800c132:	4620      	mov	r0, r4
 800c134:	b002      	add	sp, #8
 800c136:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c13a:	f7ff bf35 	b.w	800bfa8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>
	...

0800c140 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800c140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c144:	b085      	sub	sp, #20
 800c146:	4604      	mov	r4, r0
 800c148:	2601      	movs	r6, #1
 800c14a:	2500      	movs	r5, #0
 800c14c:	9103      	str	r1, [sp, #12]
 800c14e:	f7ff fe0f 	bl	800bd70 <_ZN8touchgfx9ContainerC1Ev>
 800c152:	4b2c      	ldr	r3, [pc, #176]	@ (800c204 <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800c154:	f104 0b38 	add.w	fp, r4, #56	@ 0x38
 800c158:	f104 0964 	add.w	r9, r4, #100	@ 0x64
 800c15c:	f104 0890 	add.w	r8, r4, #144	@ 0x90
 800c160:	6023      	str	r3, [r4, #0]
 800c162:	23ff      	movs	r3, #255	@ 0xff
 800c164:	4658      	mov	r0, fp
 800c166:	f104 0abc 	add.w	sl, r4, #188	@ 0xbc
 800c16a:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
 800c16e:	f104 07e8 	add.w	r7, r4, #232	@ 0xe8
 800c172:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800c176:	f7ff fdfb 	bl	800bd70 <_ZN8touchgfx9ContainerC1Ev>
 800c17a:	4648      	mov	r0, r9
 800c17c:	f7ff fdf8 	bl	800bd70 <_ZN8touchgfx9ContainerC1Ev>
 800c180:	4640      	mov	r0, r8
 800c182:	f7ff fdf5 	bl	800bd70 <_ZN8touchgfx9ContainerC1Ev>
 800c186:	4650      	mov	r0, sl
 800c188:	f7ff fdf2 	bl	800bd70 <_ZN8touchgfx9ContainerC1Ev>
 800c18c:	4638      	mov	r0, r7
 800c18e:	f7ff fdef 	bl	800bd70 <_ZN8touchgfx9ContainerC1Ev>
 800c192:	9903      	ldr	r1, [sp, #12]
 800c194:	4620      	mov	r0, r4
 800c196:	f8c4 5114 	str.w	r5, [r4, #276]	@ 0x114
 800c19a:	f8a4 111c 	strh.w	r1, [r4, #284]	@ 0x11c
 800c19e:	4659      	mov	r1, fp
 800c1a0:	f8c4 5118 	str.w	r5, [r4, #280]	@ 0x118
 800c1a4:	f8a4 511e 	strh.w	r5, [r4, #286]	@ 0x11e
 800c1a8:	f8a4 5120 	strh.w	r5, [r4, #288]	@ 0x120
 800c1ac:	f8c4 5124 	str.w	r5, [r4, #292]	@ 0x124
 800c1b0:	f8c4 5128 	str.w	r5, [r4, #296]	@ 0x128
 800c1b4:	f8c4 512c 	str.w	r5, [r4, #300]	@ 0x12c
 800c1b8:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800c1bc:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800c1c0:	f8c4 5138 	str.w	r5, [r4, #312]	@ 0x138
 800c1c4:	f7fd feb0 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c1c8:	4651      	mov	r1, sl
 800c1ca:	4620      	mov	r0, r4
 800c1cc:	f7fd feac 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c1d0:	4649      	mov	r1, r9
 800c1d2:	4620      	mov	r0, r4
 800c1d4:	f7fd fea8 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c1d8:	4641      	mov	r1, r8
 800c1da:	4620      	mov	r0, r4
 800c1dc:	f7fd fea4 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c1e0:	4639      	mov	r1, r7
 800c1e2:	4620      	mov	r0, r4
 800c1e4:	f7fd fea0 	bl	8009f28 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c1e8:	4620      	mov	r0, r4
 800c1ea:	9500      	str	r5, [sp, #0]
 800c1ec:	462b      	mov	r3, r5
 800c1ee:	462a      	mov	r2, r5
 800c1f0:	4629      	mov	r1, r5
 800c1f2:	f7ff ff56 	bl	800c0a2 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800c1f6:	4620      	mov	r0, r4
 800c1f8:	f884 6024 	strb.w	r6, [r4, #36]	@ 0x24
 800c1fc:	b005      	add	sp, #20
 800c1fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c202:	bf00      	nop
 800c204:	0802500c 	.word	0x0802500c

0800c208 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800c208:	4291      	cmp	r1, r2
 800c20a:	4613      	mov	r3, r2
 800c20c:	d003      	beq.n	800c216 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800c20e:	460a      	mov	r2, r1
 800c210:	4619      	mov	r1, r3
 800c212:	f005 bd1c 	b.w	8011c4e <_ZN8touchgfx6muldivElll>
 800c216:	4770      	bx	lr

0800c218 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800c218:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c21c:	6803      	ldr	r3, [r0, #0]
 800c21e:	460d      	mov	r5, r1
 800c220:	4604      	mov	r4, r0
 800c222:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800c226:	4798      	blx	r3
 800c228:	42a8      	cmp	r0, r5
 800c22a:	4606      	mov	r6, r0
 800c22c:	d024      	beq.n	800c278 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800c22e:	6823      	ldr	r3, [r4, #0]
 800c230:	4601      	mov	r1, r0
 800c232:	462a      	mov	r2, r5
 800c234:	f8d4 012c 	ldr.w	r0, [r4, #300]	@ 0x12c
 800c238:	f8d3 70a4 	ldr.w	r7, [r3, #164]	@ 0xa4
 800c23c:	f7ff ffe4 	bl	800c208 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c240:	4680      	mov	r8, r0
 800c242:	462a      	mov	r2, r5
 800c244:	4631      	mov	r1, r6
 800c246:	f8d4 0130 	ldr.w	r0, [r4, #304]	@ 0x130
 800c24a:	f7ff ffdd 	bl	800c208 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c24e:	4641      	mov	r1, r8
 800c250:	4602      	mov	r2, r0
 800c252:	4620      	mov	r0, r4
 800c254:	47b8      	blx	r7
 800c256:	462a      	mov	r2, r5
 800c258:	4631      	mov	r1, r6
 800c25a:	f8d4 013c 	ldr.w	r0, [r4, #316]	@ 0x13c
 800c25e:	f7ff ffd3 	bl	800c208 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c262:	462a      	mov	r2, r5
 800c264:	f8c4 013c 	str.w	r0, [r4, #316]	@ 0x13c
 800c268:	4631      	mov	r1, r6
 800c26a:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 800c26e:	f7ff ffcb 	bl	800c208 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c272:	6325      	str	r5, [r4, #48]	@ 0x30
 800c274:	f8c4 0140 	str.w	r0, [r4, #320]	@ 0x140
 800c278:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c27c <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800c27c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c280:	4604      	mov	r4, r0
 800c282:	460f      	mov	r7, r1
 800c284:	b1b2      	cbz	r2, 800c2b4 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x38>
 800c286:	6803      	ldr	r3, [r0, #0]
 800c288:	2600      	movs	r6, #0
 800c28a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800c28e:	4798      	blx	r3
 800c290:	4681      	mov	r9, r0
 800c292:	b235      	sxth	r5, r6
 800c294:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800c298:	3601      	adds	r6, #1
 800c29a:	42ab      	cmp	r3, r5
 800c29c:	dd0a      	ble.n	800c2b4 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x38>
 800c29e:	f8d4 8144 	ldr.w	r8, [r4, #324]	@ 0x144
 800c2a2:	463a      	mov	r2, r7
 800c2a4:	4649      	mov	r1, r9
 800c2a6:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800c2aa:	f7ff ffad 	bl	800c208 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c2ae:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800c2b2:	e7ee      	b.n	800c292 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800c2b4:	6367      	str	r7, [r4, #52]	@ 0x34
 800c2b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800c2ba <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800c2ba:	b570      	push	{r4, r5, r6, lr}
 800c2bc:	6803      	ldr	r3, [r0, #0]
 800c2be:	4604      	mov	r4, r0
 800c2c0:	460d      	mov	r5, r1
 800c2c2:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 800c2c6:	4798      	blx	r3
 800c2c8:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 800c2cc:	4629      	mov	r1, r5
 800c2ce:	4620      	mov	r0, r4
 800c2d0:	3301      	adds	r3, #1
 800c2d2:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
 800c2d6:	6823      	ldr	r3, [r4, #0]
 800c2d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c2dc:	f8d3 317c 	ldr.w	r3, [r3, #380]	@ 0x17c
 800c2e0:	4718      	bx	r3

0800c2e2 <_ZN8touchgfx16GraphElementLineD1Ev>:
 800c2e2:	4770      	bx	lr

0800c2e4 <_ZN8touchgfx16GraphElementLineD0Ev>:
 800c2e4:	b510      	push	{r4, lr}
 800c2e6:	4604      	mov	r4, r0
 800c2e8:	2130      	movs	r1, #48	@ 0x30
 800c2ea:	f015 fb0f 	bl	802190c <_ZdlPvj>
 800c2ee:	4620      	mov	r0, r4
 800c2f0:	bd10      	pop	{r4, pc}

0800c2f2 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c2f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c2f4:	4604      	mov	r4, r0
 800c2f6:	4608      	mov	r0, r1
 800c2f8:	460d      	mov	r5, r1
 800c2fa:	f7fd ffdc 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c2fe:	b978      	cbnz	r0, 800c320 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c300:	4620      	mov	r0, r4
 800c302:	f7fd ffd8 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c306:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c30a:	b150      	cbz	r0, 800c322 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c30c:	8026      	strh	r6, [r4, #0]
 800c30e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c312:	8063      	strh	r3, [r4, #2]
 800c314:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c318:	80a3      	strh	r3, [r4, #4]
 800c31a:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c31e:	80e3      	strh	r3, [r4, #6]
 800c320:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c322:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c326:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c32a:	42b1      	cmp	r1, r6
 800c32c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c330:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c334:	460f      	mov	r7, r1
 800c336:	88ed      	ldrh	r5, [r5, #6]
 800c338:	bfa8      	it	ge
 800c33a:	4637      	movge	r7, r6
 800c33c:	4293      	cmp	r3, r2
 800c33e:	4618      	mov	r0, r3
 800c340:	4466      	add	r6, ip
 800c342:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c346:	bfa8      	it	ge
 800c348:	4610      	movge	r0, r2
 800c34a:	442a      	add	r2, r5
 800c34c:	88e5      	ldrh	r5, [r4, #6]
 800c34e:	4461      	add	r1, ip
 800c350:	b236      	sxth	r6, r6
 800c352:	8027      	strh	r7, [r4, #0]
 800c354:	442b      	add	r3, r5
 800c356:	b209      	sxth	r1, r1
 800c358:	b212      	sxth	r2, r2
 800c35a:	8060      	strh	r0, [r4, #2]
 800c35c:	b21b      	sxth	r3, r3
 800c35e:	428e      	cmp	r6, r1
 800c360:	bfac      	ite	ge
 800c362:	ebc7 0106 	rsbge	r1, r7, r6
 800c366:	ebc7 0101 	rsblt	r1, r7, r1
 800c36a:	429a      	cmp	r2, r3
 800c36c:	bfac      	ite	ge
 800c36e:	ebc0 0202 	rsbge	r2, r0, r2
 800c372:	ebc0 0203 	rsblt	r2, r0, r3
 800c376:	80a1      	strh	r1, [r4, #4]
 800c378:	80e2      	strh	r2, [r4, #6]
 800c37a:	e7d1      	b.n	800c320 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800c37c <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800c37c:	6800      	ldr	r0, [r0, #0]
 800c37e:	2800      	cmp	r0, #0
 800c380:	bfb9      	ittee	lt
 800c382:	2320      	movlt	r3, #32
 800c384:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c388:	301f      	addge	r0, #31
 800c38a:	1140      	asrge	r0, r0, #5
 800c38c:	4770      	bx	lr

0800c38e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800c38e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c392:	6803      	ldr	r3, [r0, #0]
 800c394:	b093      	sub	sp, #76	@ 0x4c
 800c396:	6945      	ldr	r5, [r0, #20]
 800c398:	4604      	mov	r4, r0
 800c39a:	460f      	mov	r7, r1
 800c39c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800c39e:	2d00      	cmp	r5, #0
 800c3a0:	f000 81ad 	beq.w	800c6fe <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800c3a4:	696d      	ldr	r5, [r5, #20]
 800c3a6:	4798      	blx	r3
 800c3a8:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800c3ac:	2b00      	cmp	r3, #0
 800c3ae:	d077      	beq.n	800c4a0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c3b0:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 800c3b4:	fb13 f000 	smulbb	r0, r3, r0
 800c3b8:	b283      	uxth	r3, r0
 800c3ba:	1c58      	adds	r0, r3, #1
 800c3bc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800c3c0:	1200      	asrs	r0, r0, #8
 800c3c2:	d06d      	beq.n	800c4a0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c3c4:	b2c3      	uxtb	r3, r0
 800c3c6:	f10d 0840 	add.w	r8, sp, #64	@ 0x40
 800c3ca:	462a      	mov	r2, r5
 800c3cc:	4621      	mov	r1, r4
 800c3ce:	9308      	str	r3, [sp, #32]
 800c3d0:	4640      	mov	r0, r8
 800c3d2:	6823      	ldr	r3, [r4, #0]
 800c3d4:	ae0e      	add	r6, sp, #56	@ 0x38
 800c3d6:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800c3da:	4798      	blx	r3
 800c3dc:	e898 0003 	ldmia.w	r8, {r0, r1}
 800c3e0:	e886 0003 	stmia.w	r6, {r0, r1}
 800c3e4:	4639      	mov	r1, r7
 800c3e6:	4630      	mov	r0, r6
 800c3e8:	f7fd ff22 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800c3ec:	6823      	ldr	r3, [r4, #0]
 800c3ee:	4629      	mov	r1, r5
 800c3f0:	4620      	mov	r0, r4
 800c3f2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800c3f6:	4798      	blx	r3
 800c3f8:	6823      	ldr	r3, [r4, #0]
 800c3fa:	4607      	mov	r7, r0
 800c3fc:	4629      	mov	r1, r5
 800c3fe:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800c402:	4620      	mov	r0, r4
 800c404:	4798      	blx	r3
 800c406:	4681      	mov	r9, r0
 800c408:	f894 0038 	ldrb.w	r0, [r4, #56]	@ 0x38
 800c40c:	4629      	mov	r1, r5
 800c40e:	0103      	lsls	r3, r0, #4
 800c410:	4620      	mov	r0, r4
 800c412:	9309      	str	r3, [sp, #36]	@ 0x24
 800c414:	6823      	ldr	r3, [r4, #0]
 800c416:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800c41a:	4798      	blx	r3
 800c41c:	4629      	mov	r1, r5
 800c41e:	b203      	sxth	r3, r0
 800c420:	4620      	mov	r0, r4
 800c422:	9306      	str	r3, [sp, #24]
 800c424:	6823      	ldr	r3, [r4, #0]
 800c426:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800c42a:	4798      	blx	r3
 800c42c:	2f00      	cmp	r7, #0
 800c42e:	b203      	sxth	r3, r0
 800c430:	9307      	str	r3, [sp, #28]
 800c432:	d138      	bne.n	800c4a6 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800c434:	f1b9 0f00 	cmp.w	r9, #0
 800c438:	d132      	bne.n	800c4a0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c43a:	6823      	ldr	r3, [r4, #0]
 800c43c:	464a      	mov	r2, r9
 800c43e:	4629      	mov	r1, r5
 800c440:	4620      	mov	r0, r4
 800c442:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c446:	4798      	blx	r3
 800c448:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c44a:	1ac0      	subs	r0, r0, r3
 800c44c:	9010      	str	r0, [sp, #64]	@ 0x40
 800c44e:	4640      	mov	r0, r8
 800c450:	f7ff fca8 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c454:	6823      	ldr	r3, [r4, #0]
 800c456:	4607      	mov	r7, r0
 800c458:	4629      	mov	r1, r5
 800c45a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800c45e:	4620      	mov	r0, r4
 800c460:	4798      	blx	r3
 800c462:	1a38      	subs	r0, r7, r0
 800c464:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800c468:	fa0f f880 	sxth.w	r8, r0
 800c46c:	eb13 0f08 	cmn.w	r3, r8
 800c470:	d416      	bmi.n	800c4a0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c472:	6823      	ldr	r3, [r4, #0]
 800c474:	4629      	mov	r1, r5
 800c476:	4620      	mov	r0, r4
 800c478:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800c47c:	4798      	blx	r3
 800c47e:	4580      	cmp	r8, r0
 800c480:	da0e      	bge.n	800c4a0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c482:	9a08      	ldr	r2, [sp, #32]
 800c484:	b23f      	sxth	r7, r7
 800c486:	6823      	ldr	r3, [r4, #0]
 800c488:	4631      	mov	r1, r6
 800c48a:	9202      	str	r2, [sp, #8]
 800c48c:	4620      	mov	r0, r4
 800c48e:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800c492:	9700      	str	r7, [sp, #0]
 800c494:	9201      	str	r2, [sp, #4]
 800c496:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 800c49a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c49e:	47a8      	blx	r5
 800c4a0:	b013      	add	sp, #76	@ 0x4c
 800c4a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c4a6:	ddfb      	ble.n	800c4a0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c4a8:	6823      	ldr	r3, [r4, #0]
 800c4aa:	4629      	mov	r1, r5
 800c4ac:	4620      	mov	r0, r4
 800c4ae:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800c4b2:	4798      	blx	r3
 800c4b4:	6823      	ldr	r3, [r4, #0]
 800c4b6:	4683      	mov	fp, r0
 800c4b8:	4629      	mov	r1, r5
 800c4ba:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800c4be:	4620      	mov	r0, r4
 800c4c0:	4798      	blx	r3
 800c4c2:	eba0 030b 	sub.w	r3, r0, fp
 800c4c6:	4680      	mov	r8, r0
 800c4c8:	2b00      	cmp	r3, #0
 800c4ca:	bfb8      	it	lt
 800c4cc:	425b      	neglt	r3, r3
 800c4ce:	fb93 f3f7 	sdiv	r3, r3, r7
 800c4d2:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800c4d6:	dce3      	bgt.n	800c4a0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c4d8:	6823      	ldr	r3, [r4, #0]
 800c4da:	465a      	mov	r2, fp
 800c4dc:	4629      	mov	r1, r5
 800c4de:	4620      	mov	r0, r4
 800c4e0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c4e4:	4798      	blx	r3
 800c4e6:	6823      	ldr	r3, [r4, #0]
 800c4e8:	4606      	mov	r6, r0
 800c4ea:	4642      	mov	r2, r8
 800c4ec:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c4f0:	4629      	mov	r1, r5
 800c4f2:	4620      	mov	r0, r4
 800c4f4:	4798      	blx	r3
 800c4f6:	42b0      	cmp	r0, r6
 800c4f8:	bfa2      	ittt	ge
 800c4fa:	4643      	movge	r3, r8
 800c4fc:	46d8      	movge	r8, fp
 800c4fe:	469b      	movge	fp, r3
 800c500:	fb98 f6f7 	sdiv	r6, r8, r7
 800c504:	fb9b f2f7 	sdiv	r2, fp, r7
 800c508:	45d8      	cmp	r8, fp
 800c50a:	bfac      	ite	ge
 800c50c:	f04f 33ff 	movge.w	r3, #4294967295
 800c510:	2301      	movlt	r3, #1
 800c512:	1af6      	subs	r6, r6, r3
 800c514:	441a      	add	r2, r3
 800c516:	4296      	cmp	r6, r2
 800c518:	bfac      	ite	ge
 800c51a:	f04f 3aff 	movge.w	sl, #4294967295
 800c51e:	f04f 0a01 	movlt.w	sl, #1
 800c522:	f1b9 0f00 	cmp.w	r9, #0
 800c526:	d13e      	bne.n	800c5a6 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800c528:	fb07 fb0a 	mul.w	fp, r7, sl
 800c52c:	eb0a 0802 	add.w	r8, sl, r2
 800c530:	4377      	muls	r7, r6
 800c532:	45b0      	cmp	r8, r6
 800c534:	d0b4      	beq.n	800c4a0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c536:	6823      	ldr	r3, [r4, #0]
 800c538:	463a      	mov	r2, r7
 800c53a:	4629      	mov	r1, r5
 800c53c:	4620      	mov	r0, r4
 800c53e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c542:	4798      	blx	r3
 800c544:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c546:	1ac0      	subs	r0, r0, r3
 800c548:	9010      	str	r0, [sp, #64]	@ 0x40
 800c54a:	a810      	add	r0, sp, #64	@ 0x40
 800c54c:	f7ff fc2a 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c550:	6823      	ldr	r3, [r4, #0]
 800c552:	4681      	mov	r9, r0
 800c554:	4629      	mov	r1, r5
 800c556:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800c55a:	4620      	mov	r0, r4
 800c55c:	4798      	blx	r3
 800c55e:	eba9 0000 	sub.w	r0, r9, r0
 800c562:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800c566:	b203      	sxth	r3, r0
 800c568:	42da      	cmn	r2, r3
 800c56a:	9304      	str	r3, [sp, #16]
 800c56c:	d418      	bmi.n	800c5a0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800c56e:	6822      	ldr	r2, [r4, #0]
 800c570:	4629      	mov	r1, r5
 800c572:	4620      	mov	r0, r4
 800c574:	f8d2 20a8 	ldr.w	r2, [r2, #168]	@ 0xa8
 800c578:	4790      	blx	r2
 800c57a:	9b04      	ldr	r3, [sp, #16]
 800c57c:	4283      	cmp	r3, r0
 800c57e:	da0f      	bge.n	800c5a0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800c580:	9b08      	ldr	r3, [sp, #32]
 800c582:	a90e      	add	r1, sp, #56	@ 0x38
 800c584:	6822      	ldr	r2, [r4, #0]
 800c586:	4620      	mov	r0, r4
 800c588:	9302      	str	r3, [sp, #8]
 800c58a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800c58e:	9301      	str	r3, [sp, #4]
 800c590:	fa0f f389 	sxth.w	r3, r9
 800c594:	9300      	str	r3, [sp, #0]
 800c596:	f8d2 9088 	ldr.w	r9, [r2, #136]	@ 0x88
 800c59a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c59e:	47c8      	blx	r9
 800c5a0:	4456      	add	r6, sl
 800c5a2:	445f      	add	r7, fp
 800c5a4:	e7c5      	b.n	800c532 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800c5a6:	fb98 f8f9 	sdiv	r8, r8, r9
 800c5aa:	eba8 0203 	sub.w	r2, r8, r3
 800c5ae:	4629      	mov	r1, r5
 800c5b0:	4620      	mov	r0, r4
 800c5b2:	9204      	str	r2, [sp, #16]
 800c5b4:	fb9b f8f9 	sdiv	r8, fp, r9
 800c5b8:	4498      	add	r8, r3
 800c5ba:	f10d 0b48 	add.w	fp, sp, #72	@ 0x48
 800c5be:	4542      	cmp	r2, r8
 800c5c0:	bfac      	ite	ge
 800c5c2:	f04f 33ff 	movge.w	r3, #4294967295
 800c5c6:	2301      	movlt	r3, #1
 800c5c8:	fb02 f209 	mul.w	r2, r2, r9
 800c5cc:	930a      	str	r3, [sp, #40]	@ 0x28
 800c5ce:	6823      	ldr	r3, [r4, #0]
 800c5d0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c5d4:	4798      	blx	r3
 800c5d6:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800c5da:	4658      	mov	r0, fp
 800c5dc:	f7ff fbe2 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c5e0:	fb06 f207 	mul.w	r2, r6, r7
 800c5e4:	b203      	sxth	r3, r0
 800c5e6:	4629      	mov	r1, r5
 800c5e8:	4620      	mov	r0, r4
 800c5ea:	9305      	str	r3, [sp, #20]
 800c5ec:	6823      	ldr	r3, [r4, #0]
 800c5ee:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c5f2:	4798      	blx	r3
 800c5f4:	9010      	str	r0, [sp, #64]	@ 0x40
 800c5f6:	4658      	mov	r0, fp
 800c5f8:	f7ff fbd4 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c5fc:	fb07 f20a 	mul.w	r2, r7, sl
 800c600:	b203      	sxth	r3, r0
 800c602:	920b      	str	r2, [sp, #44]	@ 0x2c
 800c604:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c606:	4442      	add	r2, r8
 800c608:	920c      	str	r2, [sp, #48]	@ 0x30
 800c60a:	9a05      	ldr	r2, [sp, #20]
 800c60c:	429a      	cmp	r2, r3
 800c60e:	dc16      	bgt.n	800c63e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800c610:	eb06 080a 	add.w	r8, r6, sl
 800c614:	fb07 f808 	mul.w	r8, r7, r8
 800c618:	9a05      	ldr	r2, [sp, #20]
 800c61a:	429a      	cmp	r2, r3
 800c61c:	db54      	blt.n	800c6c8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800c61e:	6823      	ldr	r3, [r4, #0]
 800c620:	4642      	mov	r2, r8
 800c622:	4629      	mov	r1, r5
 800c624:	4620      	mov	r0, r4
 800c626:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c62a:	4456      	add	r6, sl
 800c62c:	4798      	blx	r3
 800c62e:	9010      	str	r0, [sp, #64]	@ 0x40
 800c630:	4658      	mov	r0, fp
 800c632:	f7ff fbb7 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c636:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c638:	b203      	sxth	r3, r0
 800c63a:	4490      	add	r8, r2
 800c63c:	e7ec      	b.n	800c618 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800c63e:	6823      	ldr	r3, [r4, #0]
 800c640:	fb07 f206 	mul.w	r2, r7, r6
 800c644:	4629      	mov	r1, r5
 800c646:	4620      	mov	r0, r4
 800c648:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c64c:	4798      	blx	r3
 800c64e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c650:	1ac0      	subs	r0, r0, r3
 800c652:	9010      	str	r0, [sp, #64]	@ 0x40
 800c654:	4658      	mov	r0, fp
 800c656:	f7ff fba5 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c65a:	6823      	ldr	r3, [r4, #0]
 800c65c:	4680      	mov	r8, r0
 800c65e:	4629      	mov	r1, r5
 800c660:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800c664:	4620      	mov	r0, r4
 800c666:	4798      	blx	r3
 800c668:	eba8 0000 	sub.w	r0, r8, r0
 800c66c:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800c670:	b203      	sxth	r3, r0
 800c672:	42da      	cmn	r2, r3
 800c674:	930d      	str	r3, [sp, #52]	@ 0x34
 800c676:	d418      	bmi.n	800c6aa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800c678:	6822      	ldr	r2, [r4, #0]
 800c67a:	4629      	mov	r1, r5
 800c67c:	4620      	mov	r0, r4
 800c67e:	f8d2 20a8 	ldr.w	r2, [r2, #168]	@ 0xa8
 800c682:	4790      	blx	r2
 800c684:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c686:	4283      	cmp	r3, r0
 800c688:	da0f      	bge.n	800c6aa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800c68a:	9b08      	ldr	r3, [sp, #32]
 800c68c:	a90e      	add	r1, sp, #56	@ 0x38
 800c68e:	6822      	ldr	r2, [r4, #0]
 800c690:	4620      	mov	r0, r4
 800c692:	9302      	str	r3, [sp, #8]
 800c694:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800c698:	9301      	str	r3, [sp, #4]
 800c69a:	fa0f f388 	sxth.w	r3, r8
 800c69e:	9300      	str	r3, [sp, #0]
 800c6a0:	f8d2 8088 	ldr.w	r8, [r2, #136]	@ 0x88
 800c6a4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c6a8:	47c0      	blx	r8
 800c6aa:	6823      	ldr	r3, [r4, #0]
 800c6ac:	4456      	add	r6, sl
 800c6ae:	4629      	mov	r1, r5
 800c6b0:	4620      	mov	r0, r4
 800c6b2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c6b6:	fb06 f207 	mul.w	r2, r6, r7
 800c6ba:	4798      	blx	r3
 800c6bc:	9010      	str	r0, [sp, #64]	@ 0x40
 800c6be:	4658      	mov	r0, fp
 800c6c0:	f7ff fb70 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c6c4:	b203      	sxth	r3, r0
 800c6c6:	e7a0      	b.n	800c60a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800c6c8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c6ca:	930d      	str	r3, [sp, #52]	@ 0x34
 800c6cc:	9b04      	ldr	r3, [sp, #16]
 800c6ce:	4413      	add	r3, r2
 800c6d0:	9304      	str	r3, [sp, #16]
 800c6d2:	9a04      	ldr	r2, [sp, #16]
 800c6d4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c6d6:	4293      	cmp	r3, r2
 800c6d8:	f43f aee2 	beq.w	800c4a0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c6dc:	9b04      	ldr	r3, [sp, #16]
 800c6de:	4629      	mov	r1, r5
 800c6e0:	6822      	ldr	r2, [r4, #0]
 800c6e2:	4620      	mov	r0, r4
 800c6e4:	f8d2 80ac 	ldr.w	r8, [r2, #172]	@ 0xac
 800c6e8:	fb03 f209 	mul.w	r2, r3, r9
 800c6ec:	47c0      	blx	r8
 800c6ee:	9010      	str	r0, [sp, #64]	@ 0x40
 800c6f0:	4658      	mov	r0, fp
 800c6f2:	f7ff fb57 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c6f6:	b203      	sxth	r3, r0
 800c6f8:	9305      	str	r3, [sp, #20]
 800c6fa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c6fc:	e785      	b.n	800c60a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800c6fe:	4798      	blx	r3
 800c700:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 800c704:	deff      	udf	#255	@ 0xff

0800c706 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800c706:	b510      	push	{r4, lr}
 800c708:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800c70c:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800c710:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800c714:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800c718:	139b      	asrs	r3, r3, #14
 800c71a:	13a4      	asrs	r4, r4, #14
 800c71c:	429c      	cmp	r4, r3
 800c71e:	bfb8      	it	lt
 800c720:	461c      	movlt	r4, r3
 800c722:	2c01      	cmp	r4, #1
 800c724:	dd07      	ble.n	800c736 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800c726:	fb91 f1f4 	sdiv	r1, r1, r4
 800c72a:	fb90 f0f4 	sdiv	r0, r0, r4
 800c72e:	f7ff ffea 	bl	800c706 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800c732:	4360      	muls	r0, r4
 800c734:	bd10      	pop	{r4, pc}
 800c736:	4340      	muls	r0, r0
 800c738:	fb01 0101 	mla	r1, r1, r1, r0
 800c73c:	2000      	movs	r0, #0
 800c73e:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
 800c742:	bfb4      	ite	lt
 800c744:	f44f 4380 	movlt.w	r3, #16384	@ 0x4000
 800c748:	f04f 4380 	movge.w	r3, #1073741824	@ 0x40000000
 800c74c:	18c2      	adds	r2, r0, r3
 800c74e:	428a      	cmp	r2, r1
 800c750:	bf9c      	itt	ls
 800c752:	1898      	addls	r0, r3, r2
 800c754:	1a89      	subls	r1, r1, r2
 800c756:	089b      	lsrs	r3, r3, #2
 800c758:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800c75c:	d1f6      	bne.n	800c74c <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800c75e:	e7e9      	b.n	800c734 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800c760 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800c760:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c762:	9906      	ldr	r1, [sp, #24]
 800c764:	4606      	mov	r6, r0
 800c766:	461c      	mov	r4, r3
 800c768:	2020      	movs	r0, #32
 800c76a:	4291      	cmp	r1, r2
 800c76c:	bfbc      	itt	lt
 800c76e:	9206      	strlt	r2, [sp, #24]
 800c770:	460a      	movlt	r2, r1
 800c772:	9907      	ldr	r1, [sp, #28]
 800c774:	428b      	cmp	r3, r1
 800c776:	bfc4      	itt	gt
 800c778:	460c      	movgt	r4, r1
 800c77a:	9307      	strgt	r3, [sp, #28]
 800c77c:	fb92 f5f0 	sdiv	r5, r2, r0
 800c780:	fb94 f4f0 	sdiv	r4, r4, r0
 800c784:	a806      	add	r0, sp, #24
 800c786:	f7ff fdf9 	bl	800c37c <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800c78a:	4607      	mov	r7, r0
 800c78c:	a807      	add	r0, sp, #28
 800c78e:	f7ff fdf5 	bl	800c37c <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800c792:	1b7a      	subs	r2, r7, r5
 800c794:	1b00      	subs	r0, r0, r4
 800c796:	8035      	strh	r5, [r6, #0]
 800c798:	8074      	strh	r4, [r6, #2]
 800c79a:	80f0      	strh	r0, [r6, #6]
 800c79c:	4630      	mov	r0, r6
 800c79e:	80b2      	strh	r2, [r6, #4]
 800c7a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c7a2 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800c7a2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c7a4:	9c08      	ldr	r4, [sp, #32]
 800c7a6:	2602      	movs	r6, #2
 800c7a8:	4605      	mov	r5, r0
 800c7aa:	3401      	adds	r4, #1
 800c7ac:	fb94 f4f6 	sdiv	r4, r4, r6
 800c7b0:	18a6      	adds	r6, r4, r2
 800c7b2:	191f      	adds	r7, r3, r4
 800c7b4:	1b12      	subs	r2, r2, r4
 800c7b6:	1b1b      	subs	r3, r3, r4
 800c7b8:	e9cd 6700 	strd	r6, r7, [sp]
 800c7bc:	f7ff ffd0 	bl	800c760 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800c7c0:	4628      	mov	r0, r5
 800c7c2:	b003      	add	sp, #12
 800c7c4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c7c6 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800c7c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c7ca:	6943      	ldr	r3, [r0, #20]
 800c7cc:	b087      	sub	sp, #28
 800c7ce:	4606      	mov	r6, r0
 800c7d0:	460d      	mov	r5, r1
 800c7d2:	2b00      	cmp	r3, #0
 800c7d4:	d072      	beq.n	800c8bc <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800c7d6:	695c      	ldr	r4, [r3, #20]
 800c7d8:	f890 702c 	ldrb.w	r7, [r0, #44]	@ 0x2c
 800c7dc:	6823      	ldr	r3, [r4, #0]
 800c7de:	4620      	mov	r0, r4
 800c7e0:	017f      	lsls	r7, r7, #5
 800c7e2:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800c7e6:	4798      	blx	r3
 800c7e8:	6823      	ldr	r3, [r4, #0]
 800c7ea:	4680      	mov	r8, r0
 800c7ec:	4629      	mov	r1, r5
 800c7ee:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800c7f2:	4620      	mov	r0, r4
 800c7f4:	4798      	blx	r3
 800c7f6:	9700      	str	r7, [sp, #0]
 800c7f8:	4603      	mov	r3, r0
 800c7fa:	4642      	mov	r2, r8
 800c7fc:	4631      	mov	r1, r6
 800c7fe:	a802      	add	r0, sp, #8
 800c800:	f7ff ffcf 	bl	800c7a2 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800c804:	2d00      	cmp	r5, #0
 800c806:	dd1b      	ble.n	800c840 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800c808:	f105 38ff 	add.w	r8, r5, #4294967295
 800c80c:	6823      	ldr	r3, [r4, #0]
 800c80e:	4620      	mov	r0, r4
 800c810:	fa0f f888 	sxth.w	r8, r8
 800c814:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800c818:	4641      	mov	r1, r8
 800c81a:	4798      	blx	r3
 800c81c:	6823      	ldr	r3, [r4, #0]
 800c81e:	4681      	mov	r9, r0
 800c820:	4641      	mov	r1, r8
 800c822:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800c826:	4620      	mov	r0, r4
 800c828:	4798      	blx	r3
 800c82a:	4631      	mov	r1, r6
 800c82c:	4603      	mov	r3, r0
 800c82e:	9700      	str	r7, [sp, #0]
 800c830:	a804      	add	r0, sp, #16
 800c832:	464a      	mov	r2, r9
 800c834:	f7ff ffb5 	bl	800c7a2 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800c838:	a904      	add	r1, sp, #16
 800c83a:	a802      	add	r0, sp, #8
 800c83c:	f7ff fd59 	bl	800c2f2 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c840:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800c844:	3b01      	subs	r3, #1
 800c846:	429d      	cmp	r5, r3
 800c848:	da19      	bge.n	800c87e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800c84a:	3501      	adds	r5, #1
 800c84c:	6823      	ldr	r3, [r4, #0]
 800c84e:	4620      	mov	r0, r4
 800c850:	b22d      	sxth	r5, r5
 800c852:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800c856:	4629      	mov	r1, r5
 800c858:	4798      	blx	r3
 800c85a:	6823      	ldr	r3, [r4, #0]
 800c85c:	4680      	mov	r8, r0
 800c85e:	4629      	mov	r1, r5
 800c860:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800c864:	4620      	mov	r0, r4
 800c866:	4798      	blx	r3
 800c868:	4631      	mov	r1, r6
 800c86a:	4603      	mov	r3, r0
 800c86c:	9700      	str	r7, [sp, #0]
 800c86e:	a804      	add	r0, sp, #16
 800c870:	4642      	mov	r2, r8
 800c872:	f7ff ff96 	bl	800c7a2 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800c876:	a904      	add	r1, sp, #16
 800c878:	a802      	add	r0, sp, #8
 800c87a:	f7ff fd3a 	bl	800c2f2 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c87e:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	@ 0x114
 800c882:	f8b4 311a 	ldrh.w	r3, [r4, #282]	@ 0x11a
 800c886:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	@ 0x40
 800c88a:	18ca      	adds	r2, r1, r3
 800c88c:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 800c890:	f8ad 1012 	strh.w	r1, [sp, #18]
 800c894:	a904      	add	r1, sp, #16
 800c896:	1a9b      	subs	r3, r3, r2
 800c898:	2200      	movs	r2, #0
 800c89a:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c89e:	a802      	add	r0, sp, #8
 800c8a0:	f8ad 2010 	strh.w	r2, [sp, #16]
 800c8a4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c8a8:	f7fd fcc2 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800c8ac:	6833      	ldr	r3, [r6, #0]
 800c8ae:	a902      	add	r1, sp, #8
 800c8b0:	4630      	mov	r0, r6
 800c8b2:	691b      	ldr	r3, [r3, #16]
 800c8b4:	4798      	blx	r3
 800c8b6:	b007      	add	sp, #28
 800c8b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c8bc:	681b      	ldr	r3, [r3, #0]
 800c8be:	deff      	udf	#255	@ 0xff

0800c8c0 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800c8c0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800c8c4:	2b00      	cmp	r3, #0
 800c8c6:	da05      	bge.n	800c8d4 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800c8c8:	b29b      	uxth	r3, r3
 800c8ca:	880a      	ldrh	r2, [r1, #0]
 800c8cc:	441a      	add	r2, r3
 800c8ce:	425b      	negs	r3, r3
 800c8d0:	800a      	strh	r2, [r1, #0]
 800c8d2:	808b      	strh	r3, [r1, #4]
 800c8d4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800c8d8:	2b00      	cmp	r3, #0
 800c8da:	da05      	bge.n	800c8e8 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800c8dc:	b29b      	uxth	r3, r3
 800c8de:	884a      	ldrh	r2, [r1, #2]
 800c8e0:	441a      	add	r2, r3
 800c8e2:	425b      	negs	r3, r3
 800c8e4:	804a      	strh	r2, [r1, #2]
 800c8e6:	80cb      	strh	r3, [r1, #6]
 800c8e8:	4770      	bx	lr

0800c8ea <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800c8ea:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c8ec:	4604      	mov	r4, r0
 800c8ee:	460d      	mov	r5, r1
 800c8f0:	6801      	ldr	r1, [r0, #0]
 800c8f2:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	@ 0x24
 800c8f6:	9001      	str	r0, [sp, #4]
 800c8f8:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800c8fc:	9000      	str	r0, [sp, #0]
 800c8fe:	a802      	add	r0, sp, #8
 800c900:	f8d1 6090 	ldr.w	r6, [r1, #144]	@ 0x90
 800c904:	4621      	mov	r1, r4
 800c906:	47b0      	blx	r6
 800c908:	a902      	add	r1, sp, #8
 800c90a:	4620      	mov	r0, r4
 800c90c:	f7ff ffd8 	bl	800c8c0 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800c910:	a802      	add	r0, sp, #8
 800c912:	4629      	mov	r1, r5
 800c914:	f7fd fc8c 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800c918:	a802      	add	r0, sp, #8
 800c91a:	f7fd fccc 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c91e:	b968      	cbnz	r0, 800c93c <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800c920:	6823      	ldr	r3, [r4, #0]
 800c922:	a902      	add	r1, sp, #8
 800c924:	4620      	mov	r0, r4
 800c926:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c928:	4798      	blx	r3
 800c92a:	f7f5 fe01 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800c92e:	6803      	ldr	r3, [r0, #0]
 800c930:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800c932:	a902      	add	r1, sp, #8
 800c934:	6a1d      	ldr	r5, [r3, #32]
 800c936:	f89d 3028 	ldrb.w	r3, [sp, #40]	@ 0x28
 800c93a:	47a8      	blx	r5
 800c93c:	b004      	add	sp, #16
 800c93e:	bd70      	pop	{r4, r5, r6, pc}

0800c940 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800c940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c944:	b08b      	sub	sp, #44	@ 0x2c
 800c946:	461e      	mov	r6, r3
 800c948:	460f      	mov	r7, r1
 800c94a:	4615      	mov	r5, r2
 800c94c:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	@ 0x50
 800c950:	429e      	cmp	r6, r3
 800c952:	9304      	str	r3, [sp, #16]
 800c954:	d074      	beq.n	800ca40 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x100>
 800c956:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800c95a:	4631      	mov	r1, r6
 800c95c:	4610      	mov	r0, r2
 800c95e:	4634      	mov	r4, r6
 800c960:	015b      	lsls	r3, r3, #5
 800c962:	9303      	str	r3, [sp, #12]
 800c964:	6813      	ldr	r3, [r2, #0]
 800c966:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800c96a:	4798      	blx	r3
 800c96c:	ab0a      	add	r3, sp, #40	@ 0x28
 800c96e:	f843 0d10 	str.w	r0, [r3, #-16]!
 800c972:	4618      	mov	r0, r3
 800c974:	f7ff fa16 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c978:	682b      	ldr	r3, [r5, #0]
 800c97a:	4631      	mov	r1, r6
 800c97c:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800c980:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800c984:	4628      	mov	r0, r5
 800c986:	4798      	blx	r3
 800c988:	ab0a      	add	r3, sp, #40	@ 0x28
 800c98a:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800c98e:	4618      	mov	r0, r3
 800c990:	f7ff fa08 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c994:	4641      	mov	r1, r8
 800c996:	ea4f 1940 	mov.w	r9, r0, lsl #5
 800c99a:	4638      	mov	r0, r7
 800c99c:	464a      	mov	r2, r9
 800c99e:	f014 fed5 	bl	802174c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800c9a2:	2301      	movs	r3, #1
 800c9a4:	9300      	str	r3, [sp, #0]
 800c9a6:	4628      	mov	r0, r5
 800c9a8:	9b00      	ldr	r3, [sp, #0]
 800c9aa:	441c      	add	r4, r3
 800c9ac:	682b      	ldr	r3, [r5, #0]
 800c9ae:	b224      	sxth	r4, r4
 800c9b0:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800c9b4:	4621      	mov	r1, r4
 800c9b6:	4798      	blx	r3
 800c9b8:	9008      	str	r0, [sp, #32]
 800c9ba:	a808      	add	r0, sp, #32
 800c9bc:	f7ff f9f2 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c9c0:	4621      	mov	r1, r4
 800c9c2:	0143      	lsls	r3, r0, #5
 800c9c4:	4628      	mov	r0, r5
 800c9c6:	9301      	str	r3, [sp, #4]
 800c9c8:	682b      	ldr	r3, [r5, #0]
 800c9ca:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800c9ce:	4798      	blx	r3
 800c9d0:	9009      	str	r0, [sp, #36]	@ 0x24
 800c9d2:	a809      	add	r0, sp, #36	@ 0x24
 800c9d4:	f7ff f9e6 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c9d8:	0143      	lsls	r3, r0, #5
 800c9da:	9302      	str	r3, [sp, #8]
 800c9dc:	9b01      	ldr	r3, [sp, #4]
 800c9de:	eba3 0b08 	sub.w	fp, r3, r8
 800c9e2:	9b02      	ldr	r3, [sp, #8]
 800c9e4:	eba3 0a09 	sub.w	sl, r3, r9
 800c9e8:	4658      	mov	r0, fp
 800c9ea:	4651      	mov	r1, sl
 800c9ec:	f7ff fe8b 	bl	800c706 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800c9f0:	b320      	cbz	r0, 800ca3c <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800c9f2:	4602      	mov	r2, r0
 800c9f4:	4651      	mov	r1, sl
 800c9f6:	9005      	str	r0, [sp, #20]
 800c9f8:	9803      	ldr	r0, [sp, #12]
 800c9fa:	f005 f928 	bl	8011c4e <_ZN8touchgfx6muldivElll>
 800c9fe:	2302      	movs	r3, #2
 800ca00:	4659      	mov	r1, fp
 800ca02:	fb90 faf3 	sdiv	sl, r0, r3
 800ca06:	9b05      	ldr	r3, [sp, #20]
 800ca08:	9803      	ldr	r0, [sp, #12]
 800ca0a:	461a      	mov	r2, r3
 800ca0c:	f005 f91f 	bl	8011c4e <_ZN8touchgfx6muldivElll>
 800ca10:	2302      	movs	r3, #2
 800ca12:	eba8 010a 	sub.w	r1, r8, sl
 800ca16:	fb90 fbf3 	sdiv	fp, r0, r3
 800ca1a:	683b      	ldr	r3, [r7, #0]
 800ca1c:	eb0b 0209 	add.w	r2, fp, r9
 800ca20:	4638      	mov	r0, r7
 800ca22:	689b      	ldr	r3, [r3, #8]
 800ca24:	4798      	blx	r3
 800ca26:	683b      	ldr	r3, [r7, #0]
 800ca28:	9a02      	ldr	r2, [sp, #8]
 800ca2a:	4638      	mov	r0, r7
 800ca2c:	9901      	ldr	r1, [sp, #4]
 800ca2e:	689b      	ldr	r3, [r3, #8]
 800ca30:	445a      	add	r2, fp
 800ca32:	eba1 010a 	sub.w	r1, r1, sl
 800ca36:	4798      	blx	r3
 800ca38:	e9dd 8901 	ldrd	r8, r9, [sp, #4]
 800ca3c:	42a6      	cmp	r6, r4
 800ca3e:	db02      	blt.n	800ca46 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x106>
 800ca40:	b00b      	add	sp, #44	@ 0x2c
 800ca42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ca46:	9b00      	ldr	r3, [sp, #0]
 800ca48:	9a04      	ldr	r2, [sp, #16]
 800ca4a:	42a2      	cmp	r2, r4
 800ca4c:	bf08      	it	eq
 800ca4e:	f04f 33ff 	moveq.w	r3, #4294967295
 800ca52:	e7a7      	b.n	800c9a4 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x64>

0800ca54 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800ca54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca58:	6943      	ldr	r3, [r0, #20]
 800ca5a:	b0a4      	sub	sp, #144	@ 0x90
 800ca5c:	4605      	mov	r5, r0
 800ca5e:	460f      	mov	r7, r1
 800ca60:	2b00      	cmp	r3, #0
 800ca62:	d077      	beq.n	800cb54 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x100>
 800ca64:	695c      	ldr	r4, [r3, #20]
 800ca66:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800ca6a:	2b01      	cmp	r3, #1
 800ca6c:	dc04      	bgt.n	800ca78 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800ca6e:	2401      	movs	r4, #1
 800ca70:	4620      	mov	r0, r4
 800ca72:	b024      	add	sp, #144	@ 0x90
 800ca74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ca78:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800ca7c:	ae24      	add	r6, sp, #144	@ 0x90
 800ca7e:	011b      	lsls	r3, r3, #4
 800ca80:	f846 3d74 	str.w	r3, [r6, #-116]!
 800ca84:	4630      	mov	r0, r6
 800ca86:	f7ff fc79 	bl	800c37c <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800ca8a:	8839      	ldrh	r1, [r7, #0]
 800ca8c:	88ba      	ldrh	r2, [r7, #4]
 800ca8e:	b280      	uxth	r0, r0
 800ca90:	6823      	ldr	r3, [r4, #0]
 800ca92:	440a      	add	r2, r1
 800ca94:	1a09      	subs	r1, r1, r0
 800ca96:	4402      	add	r2, r0
 800ca98:	f10d 000a 	add.w	r0, sp, #10
 800ca9c:	b209      	sxth	r1, r1
 800ca9e:	9000      	str	r0, [sp, #0]
 800caa0:	b212      	sxth	r2, r2
 800caa2:	f8d3 8124 	ldr.w	r8, [r3, #292]	@ 0x124
 800caa6:	4620      	mov	r0, r4
 800caa8:	ab02      	add	r3, sp, #8
 800caaa:	47c0      	blx	r8
 800caac:	2800      	cmp	r0, #0
 800caae:	d0de      	beq.n	800ca6e <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800cab0:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	@ 0x114
 800cab4:	f8b4 311a 	ldrh.w	r3, [r4, #282]	@ 0x11a
 800cab8:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	@ 0x40
 800cabc:	18ca      	adds	r2, r1, r3
 800cabe:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 800cac2:	f8ad 100e 	strh.w	r1, [sp, #14]
 800cac6:	4639      	mov	r1, r7
 800cac8:	1a9b      	subs	r3, r3, r2
 800caca:	2200      	movs	r2, #0
 800cacc:	f8ad 0010 	strh.w	r0, [sp, #16]
 800cad0:	a803      	add	r0, sp, #12
 800cad2:	f8ad 200c 	strh.w	r2, [sp, #12]
 800cad6:	f8ad 3012 	strh.w	r3, [sp, #18]
 800cada:	f7fd fba9 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800cade:	4629      	mov	r1, r5
 800cae0:	a805      	add	r0, sp, #20
 800cae2:	6aaf      	ldr	r7, [r5, #40]	@ 0x28
 800cae4:	f004 ff84 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cae8:	682b      	ldr	r3, [r5, #0]
 800caea:	4628      	mov	r0, r5
 800caec:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800caee:	4798      	blx	r3
 800caf0:	ab03      	add	r3, sp, #12
 800caf2:	9000      	str	r0, [sp, #0]
 800caf4:	aa05      	add	r2, sp, #20
 800caf6:	4639      	mov	r1, r7
 800caf8:	4630      	mov	r0, r6
 800cafa:	f014 fcdb 	bl	80214b4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800cafe:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	@ 0x120
 800cb02:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800cb06:	2f00      	cmp	r7, #0
 800cb08:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800cb0c:	dd03      	ble.n	800cb16 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xc2>
 800cb0e:	42bb      	cmp	r3, r7
 800cb10:	da01      	bge.n	800cb16 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xc2>
 800cb12:	42ba      	cmp	r2, r7
 800cb14:	da11      	bge.n	800cb3a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800cb16:	9200      	str	r2, [sp, #0]
 800cb18:	4622      	mov	r2, r4
 800cb1a:	4631      	mov	r1, r6
 800cb1c:	4628      	mov	r0, r5
 800cb1e:	f7ff ff0f 	bl	800c940 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800cb22:	f894 102c 	ldrb.w	r1, [r4, #44]	@ 0x2c
 800cb26:	4630      	mov	r0, r6
 800cb28:	f014 fd58 	bl	80215dc <_ZN8touchgfx6Canvas6renderEh>
 800cb2c:	4b0b      	ldr	r3, [pc, #44]	@ (800cb5c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x108>)
 800cb2e:	4604      	mov	r4, r0
 800cb30:	a80c      	add	r0, sp, #48	@ 0x30
 800cb32:	9307      	str	r3, [sp, #28]
 800cb34:	f001 fb0e 	bl	800e154 <_ZN8touchgfx7OutlineD1Ev>
 800cb38:	e79a      	b.n	800ca70 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800cb3a:	1e7a      	subs	r2, r7, #1
 800cb3c:	4631      	mov	r1, r6
 800cb3e:	4628      	mov	r0, r5
 800cb40:	b212      	sxth	r2, r2
 800cb42:	9200      	str	r2, [sp, #0]
 800cb44:	4622      	mov	r2, r4
 800cb46:	f7ff fefb 	bl	800c940 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800cb4a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800cb4e:	9300      	str	r3, [sp, #0]
 800cb50:	463b      	mov	r3, r7
 800cb52:	e7e1      	b.n	800cb18 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xc4>
 800cb54:	f8b3 311e 	ldrh.w	r3, [r3, #286]	@ 0x11e
 800cb58:	deff      	udf	#255	@ 0xff
 800cb5a:	bf00      	nop
 800cb5c:	08025a5c 	.word	0x08025a5c

0800cb60 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800cb60:	4770      	bx	lr

0800cb62 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800cb62:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 800cb64:	b118      	cbz	r0, 800cb6e <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800cb66:	6803      	ldr	r3, [r0, #0]
 800cb68:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800cb6c:	4718      	bx	r3
 800cb6e:	4770      	bx	lr

0800cb70 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800cb70:	680b      	ldr	r3, [r1, #0]
 800cb72:	4608      	mov	r0, r1
 800cb74:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800cb78:	4718      	bx	r3

0800cb7a <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800cb7a:	680b      	ldr	r3, [r1, #0]
 800cb7c:	4608      	mov	r0, r1
 800cb7e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800cb82:	4718      	bx	r3

0800cb84 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800cb84:	680b      	ldr	r3, [r1, #0]
 800cb86:	4608      	mov	r0, r1
 800cb88:	f8d3 30ec 	ldr.w	r3, [r3, #236]	@ 0xec
 800cb8c:	4718      	bx	r3

0800cb8e <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800cb8e:	680b      	ldr	r3, [r1, #0]
 800cb90:	4608      	mov	r0, r1
 800cb92:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 800cb96:	4718      	bx	r3

0800cb98 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800cb98:	4a38      	ldr	r2, [pc, #224]	@ (800cc7c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800cb9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb9e:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 800cba0:	b087      	sub	sp, #28
 800cba2:	8812      	ldrh	r2, [r2, #0]
 800cba4:	4604      	mov	r4, r0
 800cba6:	4689      	mov	r9, r1
 800cba8:	429a      	cmp	r2, r3
 800cbaa:	d937      	bls.n	800cc1c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cbac:	4a34      	ldr	r2, [pc, #208]	@ (800cc80 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800cbae:	6812      	ldr	r2, [r2, #0]
 800cbb0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800cbb4:	4b33      	ldr	r3, [pc, #204]	@ (800cc84 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800cbb6:	681b      	ldr	r3, [r3, #0]
 800cbb8:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800cbbc:	f1b8 0f00 	cmp.w	r8, #0
 800cbc0:	d02c      	beq.n	800cc1c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cbc2:	6803      	ldr	r3, [r0, #0]
 800cbc4:	6945      	ldr	r5, [r0, #20]
 800cbc6:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800cbc8:	2d00      	cmp	r5, #0
 800cbca:	d052      	beq.n	800cc72 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800cbcc:	696f      	ldr	r7, [r5, #20]
 800cbce:	4798      	blx	r3
 800cbd0:	f897 502c 	ldrb.w	r5, [r7, #44]	@ 0x2c
 800cbd4:	fb15 f000 	smulbb	r0, r5, r0
 800cbd8:	b280      	uxth	r0, r0
 800cbda:	1c45      	adds	r5, r0, #1
 800cbdc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800cbe0:	122d      	asrs	r5, r5, #8
 800cbe2:	d01b      	beq.n	800cc1c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cbe4:	6823      	ldr	r3, [r4, #0]
 800cbe6:	4639      	mov	r1, r7
 800cbe8:	4620      	mov	r0, r4
 800cbea:	b2ed      	uxtb	r5, r5
 800cbec:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800cbf0:	4798      	blx	r3
 800cbf2:	6823      	ldr	r3, [r4, #0]
 800cbf4:	4606      	mov	r6, r0
 800cbf6:	4639      	mov	r1, r7
 800cbf8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800cbfc:	4620      	mov	r0, r4
 800cbfe:	4798      	blx	r3
 800cc00:	4683      	mov	fp, r0
 800cc02:	b970      	cbnz	r0, 800cc22 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800cc04:	b96e      	cbnz	r6, 800cc22 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800cc06:	6823      	ldr	r3, [r4, #0]
 800cc08:	4642      	mov	r2, r8
 800cc0a:	9600      	str	r6, [sp, #0]
 800cc0c:	4649      	mov	r1, r9
 800cc0e:	4620      	mov	r0, r4
 800cc10:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800cc14:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 800cc18:	463b      	mov	r3, r7
 800cc1a:	47a8      	blx	r5
 800cc1c:	b007      	add	sp, #28
 800cc1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc22:	2e00      	cmp	r6, #0
 800cc24:	ddfa      	ble.n	800cc1c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cc26:	6823      	ldr	r3, [r4, #0]
 800cc28:	4639      	mov	r1, r7
 800cc2a:	4620      	mov	r0, r4
 800cc2c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800cc30:	4798      	blx	r3
 800cc32:	6823      	ldr	r3, [r4, #0]
 800cc34:	4682      	mov	sl, r0
 800cc36:	4639      	mov	r1, r7
 800cc38:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800cc3c:	4620      	mov	r0, r4
 800cc3e:	4798      	blx	r3
 800cc40:	4582      	cmp	sl, r0
 800cc42:	bfde      	ittt	le
 800cc44:	4603      	movle	r3, r0
 800cc46:	4650      	movle	r0, sl
 800cc48:	469a      	movle	sl, r3
 800cc4a:	ebaa 0300 	sub.w	r3, sl, r0
 800cc4e:	fb93 f3f6 	sdiv	r3, r3, r6
 800cc52:	2b64      	cmp	r3, #100	@ 0x64
 800cc54:	dce2      	bgt.n	800cc1c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cc56:	6823      	ldr	r3, [r4, #0]
 800cc58:	4642      	mov	r2, r8
 800cc5a:	9000      	str	r0, [sp, #0]
 800cc5c:	4649      	mov	r1, r9
 800cc5e:	4620      	mov	r0, r4
 800cc60:	e9cd b503 	strd	fp, r5, [sp, #12]
 800cc64:	e9cd a601 	strd	sl, r6, [sp, #4]
 800cc68:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 800cc6c:	463b      	mov	r3, r7
 800cc6e:	47a8      	blx	r5
 800cc70:	e7d4      	b.n	800cc1c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cc72:	4798      	blx	r3
 800cc74:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 800cc78:	deff      	udf	#255	@ 0xff
 800cc7a:	bf00      	nop
 800cc7c:	20016ce4 	.word	0x20016ce4
 800cc80:	20016ce0 	.word	0x20016ce0
 800cc84:	20016ce8 	.word	0x20016ce8

0800cc88 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800cc88:	4770      	bx	lr

0800cc8a <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800cc8a:	4770      	bx	lr

0800cc8c <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800cc8c:	b538      	push	{r3, r4, r5, lr}
 800cc8e:	680a      	ldr	r2, [r1, #0]
 800cc90:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	@ 0x30
 800cc94:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
 800cc98:	4608      	mov	r0, r1
 800cc9a:	4790      	blx	r2
 800cc9c:	4629      	mov	r1, r5
 800cc9e:	4602      	mov	r2, r0
 800cca0:	4620      	mov	r0, r4
 800cca2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cca6:	f7ff baaf 	b.w	800c208 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800ccaa <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800ccaa:	b538      	push	{r3, r4, r5, lr}
 800ccac:	680a      	ldr	r2, [r1, #0]
 800ccae:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	@ 0x30
 800ccb2:	f8d2 2094 	ldr.w	r2, [r2, #148]	@ 0x94
 800ccb6:	4608      	mov	r0, r1
 800ccb8:	4790      	blx	r2
 800ccba:	4629      	mov	r1, r5
 800ccbc:	4602      	mov	r2, r0
 800ccbe:	4620      	mov	r0, r4
 800ccc0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ccc4:	f7ff baa0 	b.w	800c208 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800ccc8 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800ccc8:	b510      	push	{r4, lr}
 800ccca:	4604      	mov	r4, r0
 800cccc:	214c      	movs	r1, #76	@ 0x4c
 800ccce:	f014 fe1d 	bl	802190c <_ZdlPvj>
 800ccd2:	4620      	mov	r0, r4
 800ccd4:	bd10      	pop	{r4, pc}

0800ccd6 <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800ccd6:	b510      	push	{r4, lr}
 800ccd8:	4604      	mov	r4, r0
 800ccda:	214c      	movs	r1, #76	@ 0x4c
 800ccdc:	f014 fe16 	bl	802190c <_ZdlPvj>
 800cce0:	4620      	mov	r0, r4
 800cce2:	bd10      	pop	{r4, pc}

0800cce4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800cce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cce8:	b08d      	sub	sp, #52	@ 0x34
 800ccea:	4606      	mov	r6, r0
 800ccec:	9309      	str	r3, [sp, #36]	@ 0x24
 800ccee:	f89d 3068 	ldrb.w	r3, [sp, #104]	@ 0x68
 800ccf2:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	@ 0x60
 800ccf6:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800ccfa:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	@ 0x58
 800ccfe:	930a      	str	r3, [sp, #40]	@ 0x28
 800cd00:	f1b9 0f00 	cmp.w	r9, #0
 800cd04:	d117      	bne.n	800cd36 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800cd06:	2f00      	cmp	r7, #0
 800cd08:	dc7c      	bgt.n	800ce04 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800cd0a:	f1b8 0f00 	cmp.w	r8, #0
 800cd0e:	da01      	bge.n	800cd14 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800cd10:	2f00      	cmp	r7, #0
 800cd12:	d17a      	bne.n	800ce0a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800cd14:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800cd16:	4630      	mov	r0, r6
 800cd18:	6832      	ldr	r2, [r6, #0]
 800cd1a:	9318      	str	r3, [sp, #96]	@ 0x60
 800cd1c:	2300      	movs	r3, #0
 800cd1e:	9907      	ldr	r1, [sp, #28]
 800cd20:	e9cd 3316 	strd	r3, r3, [sp, #88]	@ 0x58
 800cd24:	f8d2 408c 	ldr.w	r4, [r2, #140]	@ 0x8c
 800cd28:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800cd2c:	46a4      	mov	ip, r4
 800cd2e:	b00d      	add	sp, #52	@ 0x34
 800cd30:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd34:	4760      	bx	ip
 800cd36:	fb97 f4f9 	sdiv	r4, r7, r9
 800cd3a:	1e63      	subs	r3, r4, #1
 800cd3c:	9305      	str	r3, [sp, #20]
 800cd3e:	f1ba 0f00 	cmp.w	sl, #0
 800cd42:	d122      	bne.n	800cd8a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800cd44:	fb03 f509 	mul.w	r5, r3, r9
 800cd48:	fb98 faf9 	sdiv	sl, r8, r9
 800cd4c:	f10a 0a02 	add.w	sl, sl, #2
 800cd50:	9b05      	ldr	r3, [sp, #20]
 800cd52:	459a      	cmp	sl, r3
 800cd54:	d059      	beq.n	800ce0a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800cd56:	42af      	cmp	r7, r5
 800cd58:	dc5a      	bgt.n	800ce10 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800cd5a:	45a8      	cmp	r8, r5
 800cd5c:	da01      	bge.n	800cd62 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800cd5e:	42af      	cmp	r7, r5
 800cd60:	db0e      	blt.n	800cd80 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800cd62:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800cd64:	4630      	mov	r0, r6
 800cd66:	9905      	ldr	r1, [sp, #20]
 800cd68:	9302      	str	r3, [sp, #8]
 800cd6a:	6b73      	ldr	r3, [r6, #52]	@ 0x34
 800cd6c:	6832      	ldr	r2, [r6, #0]
 800cd6e:	434b      	muls	r3, r1
 800cd70:	9907      	ldr	r1, [sp, #28]
 800cd72:	e9cd 5300 	strd	r5, r3, [sp]
 800cd76:	f8d2 b08c 	ldr.w	fp, [r2, #140]	@ 0x8c
 800cd7a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800cd7e:	47d8      	blx	fp
 800cd80:	9b05      	ldr	r3, [sp, #20]
 800cd82:	444d      	add	r5, r9
 800cd84:	3301      	adds	r3, #1
 800cd86:	9305      	str	r3, [sp, #20]
 800cd88:	e7e2      	b.n	800cd50 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800cd8a:	fb97 f3fa 	sdiv	r3, r7, sl
 800cd8e:	3b01      	subs	r3, #1
 800cd90:	9306      	str	r3, [sp, #24]
 800cd92:	9a06      	ldr	r2, [sp, #24]
 800cd94:	fb98 f3fa 	sdiv	r3, r8, sl
 800cd98:	fb02 fb0a 	mul.w	fp, r2, sl
 800cd9c:	9a05      	ldr	r2, [sp, #20]
 800cd9e:	3302      	adds	r3, #2
 800cda0:	fb02 f509 	mul.w	r5, r2, r9
 800cda4:	930b      	str	r3, [sp, #44]	@ 0x2c
 800cda6:	45ab      	cmp	fp, r5
 800cda8:	dd1d      	ble.n	800cde6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800cdaa:	42af      	cmp	r7, r5
 800cdac:	dc08      	bgt.n	800cdc0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800cdae:	45a8      	cmp	r8, r5
 800cdb0:	da08      	bge.n	800cdc4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800cdb2:	42af      	cmp	r7, r5
 800cdb4:	da06      	bge.n	800cdc4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800cdb6:	9b05      	ldr	r3, [sp, #20]
 800cdb8:	444d      	add	r5, r9
 800cdba:	3301      	adds	r3, #1
 800cdbc:	9305      	str	r3, [sp, #20]
 800cdbe:	e7f2      	b.n	800cda6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800cdc0:	45a8      	cmp	r8, r5
 800cdc2:	dcf8      	bgt.n	800cdb6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800cdc4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800cdc6:	4630      	mov	r0, r6
 800cdc8:	9905      	ldr	r1, [sp, #20]
 800cdca:	9302      	str	r3, [sp, #8]
 800cdcc:	6b73      	ldr	r3, [r6, #52]	@ 0x34
 800cdce:	6832      	ldr	r2, [r6, #0]
 800cdd0:	434b      	muls	r3, r1
 800cdd2:	9907      	ldr	r1, [sp, #28]
 800cdd4:	e9cd 5300 	strd	r5, r3, [sp]
 800cdd8:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 800cddc:	461c      	mov	r4, r3
 800cdde:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800cde2:	47a0      	blx	r4
 800cde4:	e7e7      	b.n	800cdb6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800cde6:	45ab      	cmp	fp, r5
 800cde8:	db04      	blt.n	800cdf4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800cdea:	9b05      	ldr	r3, [sp, #20]
 800cdec:	444d      	add	r5, r9
 800cdee:	3301      	adds	r3, #1
 800cdf0:	9305      	str	r3, [sp, #20]
 800cdf2:	e7f8      	b.n	800cde6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800cdf4:	9b06      	ldr	r3, [sp, #24]
 800cdf6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800cdf8:	3301      	adds	r3, #1
 800cdfa:	4293      	cmp	r3, r2
 800cdfc:	9306      	str	r3, [sp, #24]
 800cdfe:	d004      	beq.n	800ce0a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800ce00:	44d3      	add	fp, sl
 800ce02:	e7d0      	b.n	800cda6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800ce04:	f1b8 0f00 	cmp.w	r8, #0
 800ce08:	dd84      	ble.n	800cd14 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800ce0a:	b00d      	add	sp, #52	@ 0x34
 800ce0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce10:	45a8      	cmp	r8, r5
 800ce12:	dcb5      	bgt.n	800cd80 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800ce14:	e7a5      	b.n	800cd62 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800ce16 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800ce16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce1a:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	@ 0x120
 800ce1e:	b089      	sub	sp, #36	@ 0x24
 800ce20:	468a      	mov	sl, r1
 800ce22:	4693      	mov	fp, r2
 800ce24:	2c00      	cmp	r4, #0
 800ce26:	9007      	str	r0, [sp, #28]
 800ce28:	461d      	mov	r5, r3
 800ce2a:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800ce2e:	e9dd c612 	ldrd	ip, r6, [sp, #72]	@ 0x48
 800ce32:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	@ 0x50
 800ce36:	dd03      	ble.n	800ce40 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800ce38:	4564      	cmp	r4, ip
 800ce3a:	dd01      	ble.n	800ce40 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800ce3c:	42b4      	cmp	r4, r6
 800ce3e:	dd0e      	ble.n	800ce5e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800ce40:	f8cd c048 	str.w	ip, [sp, #72]	@ 0x48
 800ce44:	e9cd 8915 	strd	r8, r9, [sp, #84]	@ 0x54
 800ce48:	e9cd 6713 	strd	r6, r7, [sp, #76]	@ 0x4c
 800ce4c:	462b      	mov	r3, r5
 800ce4e:	465a      	mov	r2, fp
 800ce50:	4651      	mov	r1, sl
 800ce52:	9807      	ldr	r0, [sp, #28]
 800ce54:	b009      	add	sp, #36	@ 0x24
 800ce56:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce5a:	f7ff bf43 	b.w	800cce4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800ce5e:	f104 3eff 	add.w	lr, r4, #4294967295
 800ce62:	9702      	str	r7, [sp, #8]
 800ce64:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800ce68:	e9cd ce00 	strd	ip, lr, [sp]
 800ce6c:	f7ff ff3a 	bl	800cce4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800ce70:	9412      	str	r4, [sp, #72]	@ 0x48
 800ce72:	e9cd 8915 	strd	r8, r9, [sp, #84]	@ 0x54
 800ce76:	e9cd 6713 	strd	r6, r7, [sp, #76]	@ 0x4c
 800ce7a:	e7e7      	b.n	800ce4c <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800ce7c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800ce7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ce80:	f1b3 0900 	subs.w	r9, r3, #0
 800ce84:	460d      	mov	r5, r1
 800ce86:	4690      	mov	r8, r2
 800ce88:	9f08      	ldr	r7, [sp, #32]
 800ce8a:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 800ce8e:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800ce90:	da18      	bge.n	800cec4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800ce92:	2a01      	cmp	r2, #1
 800ce94:	dd16      	ble.n	800cec4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800ce96:	232d      	movs	r3, #45	@ 0x2d
 800ce98:	f1c9 0900 	rsb	r9, r9, #0
 800ce9c:	2001      	movs	r0, #1
 800ce9e:	800b      	strh	r3, [r1, #0]
 800cea0:	2f00      	cmp	r7, #0
 800cea2:	d111      	bne.n	800cec8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800cea4:	2302      	movs	r3, #2
 800cea6:	eba8 0100 	sub.w	r1, r8, r0
 800ceaa:	4a26      	ldr	r2, [pc, #152]	@ (800cf44 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800ceac:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800ceb0:	b289      	uxth	r1, r1
 800ceb2:	fb96 f3f3 	sdiv	r3, r6, r3
 800ceb6:	444b      	add	r3, r9
 800ceb8:	fb93 f3f6 	sdiv	r3, r3, r6
 800cebc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cec0:	f006 bd06 	b.w	80138d0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800cec4:	2000      	movs	r0, #0
 800cec6:	e7eb      	b.n	800cea0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800cec8:	dd39      	ble.n	800cf3e <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800ceca:	eba8 0100 	sub.w	r1, r8, r0
 800cece:	4a1d      	ldr	r2, [pc, #116]	@ (800cf44 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800ced0:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800ced4:	f108 38ff 	add.w	r8, r8, #4294967295
 800ced8:	b289      	uxth	r1, r1
 800ceda:	fb99 f4f6 	sdiv	r4, r9, r6
 800cede:	4623      	mov	r3, r4
 800cee0:	f006 fcf6 	bl	80138d0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800cee4:	4628      	mov	r0, r5
 800cee6:	f006 f975 	bl	80131d4 <_ZN8touchgfx7Unicode6strlenEPKt>
 800ceea:	4580      	cmp	r8, r0
 800ceec:	dd27      	ble.n	800cf3e <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800ceee:	f04f 0e02 	mov.w	lr, #2
 800cef2:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800cef6:	fb06 9314 	mls	r3, r6, r4, r9
 800cefa:	3001      	adds	r0, #1
 800cefc:	2200      	movs	r2, #0
 800cefe:	f04f 090a 	mov.w	r9, #10
 800cf02:	f107 3aff 	add.w	sl, r7, #4294967295
 800cf06:	fb96 fefe 	sdiv	lr, r6, lr
 800cf0a:	4580      	cmp	r8, r0
 800cf0c:	4684      	mov	ip, r0
 800cf0e:	dd13      	ble.n	800cf38 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800cf10:	fb09 f303 	mul.w	r3, r9, r3
 800cf14:	4592      	cmp	sl, r2
 800cf16:	f102 0201 	add.w	r2, r2, #1
 800cf1a:	f100 0c01 	add.w	ip, r0, #1
 800cf1e:	bf08      	it	eq
 800cf20:	4473      	addeq	r3, lr
 800cf22:	4297      	cmp	r7, r2
 800cf24:	fb93 f4f6 	sdiv	r4, r3, r6
 800cf28:	f104 0130 	add.w	r1, r4, #48	@ 0x30
 800cf2c:	fb06 3314 	mls	r3, r6, r4, r3
 800cf30:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800cf34:	4660      	mov	r0, ip
 800cf36:	d1e8      	bne.n	800cf0a <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800cf38:	2300      	movs	r3, #0
 800cf3a:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800cf3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cf42:	bf00      	nop
 800cf44:	080251b0 	.word	0x080251b0

0800cf48 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800cf48:	4a69      	ldr	r2, [pc, #420]	@ (800d0f0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a8>)
 800cf4a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cf4e:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 800cf50:	b093      	sub	sp, #76	@ 0x4c
 800cf52:	8812      	ldrh	r2, [r2, #0]
 800cf54:	4604      	mov	r4, r0
 800cf56:	460e      	mov	r6, r1
 800cf58:	429a      	cmp	r2, r3
 800cf5a:	d93a      	bls.n	800cfd2 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cf5c:	4a65      	ldr	r2, [pc, #404]	@ (800d0f4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1ac>)
 800cf5e:	6812      	ldr	r2, [r2, #0]
 800cf60:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800cf64:	4b64      	ldr	r3, [pc, #400]	@ (800d0f8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b0>)
 800cf66:	681b      	ldr	r3, [r3, #0]
 800cf68:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800cf6c:	f1b8 0f00 	cmp.w	r8, #0
 800cf70:	d02f      	beq.n	800cfd2 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cf72:	6803      	ldr	r3, [r0, #0]
 800cf74:	6945      	ldr	r5, [r0, #20]
 800cf76:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800cf78:	2d00      	cmp	r5, #0
 800cf7a:	f000 80b5 	beq.w	800d0e8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a0>
 800cf7e:	696f      	ldr	r7, [r5, #20]
 800cf80:	4798      	blx	r3
 800cf82:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 800cf86:	fb13 f000 	smulbb	r0, r3, r0
 800cf8a:	b280      	uxth	r0, r0
 800cf8c:	1c43      	adds	r3, r0, #1
 800cf8e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800cf92:	0a03      	lsrs	r3, r0, #8
 800cf94:	d01d      	beq.n	800cfd2 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cf96:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800cf98:	4620      	mov	r0, r4
 800cf9a:	6823      	ldr	r3, [r4, #0]
 800cf9c:	434e      	muls	r6, r1
 800cf9e:	4639      	mov	r1, r7
 800cfa0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800cfa4:	4798      	blx	r3
 800cfa6:	6823      	ldr	r3, [r4, #0]
 800cfa8:	4605      	mov	r5, r0
 800cfaa:	4639      	mov	r1, r7
 800cfac:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800cfb0:	4620      	mov	r0, r4
 800cfb2:	4798      	blx	r3
 800cfb4:	2d00      	cmp	r5, #0
 800cfb6:	dd0f      	ble.n	800cfd8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800cfb8:	fb96 f3f5 	sdiv	r3, r6, r5
 800cfbc:	436b      	muls	r3, r5
 800cfbe:	1b9a      	subs	r2, r3, r6
 800cfc0:	4253      	negs	r3, r2
 800cfc2:	4153      	adcs	r3, r2
 800cfc4:	2800      	cmp	r0, #0
 800cfc6:	dd09      	ble.n	800cfdc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800cfc8:	fb96 f2f0 	sdiv	r2, r6, r0
 800cfcc:	4350      	muls	r0, r2
 800cfce:	42b0      	cmp	r0, r6
 800cfd0:	d10d      	bne.n	800cfee <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa6>
 800cfd2:	b013      	add	sp, #76	@ 0x4c
 800cfd4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cfd8:	2300      	movs	r3, #0
 800cfda:	e7f3      	b.n	800cfc4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800cfdc:	d107      	bne.n	800cfee <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa6>
 800cfde:	2d00      	cmp	r5, #0
 800cfe0:	d17f      	bne.n	800d0e2 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x19a>
 800cfe2:	2e00      	cmp	r6, #0
 800cfe4:	d063      	beq.n	800d0ae <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x166>
 800cfe6:	2b00      	cmp	r3, #0
 800cfe8:	d0f3      	beq.n	800cfd2 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cfea:	462a      	mov	r2, r5
 800cfec:	e007      	b.n	800cffe <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb6>
 800cfee:	2b00      	cmp	r3, #0
 800cff0:	d0ef      	beq.n	800cfd2 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cff2:	2d00      	cmp	r5, #0
 800cff4:	d0f9      	beq.n	800cfea <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa2>
 800cff6:	fb96 f2f5 	sdiv	r2, r6, r5
 800cffa:	6b65      	ldr	r5, [r4, #52]	@ 0x34
 800cffc:	436a      	muls	r2, r5
 800cffe:	683b      	ldr	r3, [r7, #0]
 800d000:	4631      	mov	r1, r6
 800d002:	4638      	mov	r0, r7
 800d004:	f8d3 3110 	ldr.w	r3, [r3, #272]	@ 0x110
 800d008:	4798      	blx	r3
 800d00a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d00c:	2214      	movs	r2, #20
 800d00e:	a908      	add	r1, sp, #32
 800d010:	9302      	str	r3, [sp, #8]
 800d012:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 800d016:	9301      	str	r3, [sp, #4]
 800d018:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 800d01c:	9300      	str	r3, [sp, #0]
 800d01e:	4603      	mov	r3, r0
 800d020:	4620      	mov	r0, r4
 800d022:	f7ff ff2b 	bl	800ce7c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d026:	4b35      	ldr	r3, [pc, #212]	@ (800d0fc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800d028:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800d02a:	6818      	ldr	r0, [r3, #0]
 800d02c:	f7f6 fcc6 	bl	80039bc <_ZNK8touchgfx5Texts7getTextEt>
 800d030:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800d034:	4681      	mov	r9, r0
 800d036:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d03a:	f8d8 3000 	ldr.w	r3, [r8]
 800d03e:	d138      	bne.n	800d0b2 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x16a>
 800d040:	4601      	mov	r1, r0
 800d042:	699b      	ldr	r3, [r3, #24]
 800d044:	aa08      	add	r2, sp, #32
 800d046:	4640      	mov	r0, r8
 800d048:	4798      	blx	r3
 800d04a:	b205      	sxth	r5, r0
 800d04c:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800d050:	2002      	movs	r0, #2
 800d052:	4631      	mov	r1, r6
 800d054:	f8b7 906c 	ldrh.w	r9, [r7, #108]	@ 0x6c
 800d058:	2b01      	cmp	r3, #1
 800d05a:	683b      	ldr	r3, [r7, #0]
 800d05c:	bf88      	it	hi
 800d05e:	f105 0801 	addhi.w	r8, r5, #1
 800d062:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 800d066:	bf8c      	ite	hi
 800d068:	fb98 f8f0 	sdivhi	r8, r8, r0
 800d06c:	fb95 f8f0 	sdivls	r8, r5, r0
 800d070:	4638      	mov	r0, r7
 800d072:	bf88      	it	hi
 800d074:	fa0f f888 	sxthhi.w	r8, r8
 800d078:	4798      	blx	r3
 800d07a:	ab12      	add	r3, sp, #72	@ 0x48
 800d07c:	f843 0d34 	str.w	r0, [r3, #-52]!
 800d080:	4618      	mov	r0, r3
 800d082:	f7fe fe8f 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d086:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d08a:	4448      	add	r0, r9
 800d08c:	2200      	movs	r2, #0
 800d08e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d092:	a906      	add	r1, sp, #24
 800d094:	eba0 0808 	sub.w	r8, r0, r8
 800d098:	6823      	ldr	r3, [r4, #0]
 800d09a:	f8ad 201a 	strh.w	r2, [sp, #26]
 800d09e:	4620      	mov	r0, r4
 800d0a0:	f8ad 8018 	strh.w	r8, [sp, #24]
 800d0a4:	f8ad 501c 	strh.w	r5, [sp, #28]
 800d0a8:	691b      	ldr	r3, [r3, #16]
 800d0aa:	4798      	blx	r3
 800d0ac:	e791      	b.n	800cfd2 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d0ae:	4632      	mov	r2, r6
 800d0b0:	e7a5      	b.n	800cffe <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb6>
 800d0b2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d0b4:	4640      	mov	r0, r8
 800d0b6:	4798      	blx	r3
 800d0b8:	f8d8 3000 	ldr.w	r3, [r8]
 800d0bc:	4605      	mov	r5, r0
 800d0be:	aa08      	add	r2, sp, #32
 800d0c0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d0c2:	4649      	mov	r1, r9
 800d0c4:	4640      	mov	r0, r8
 800d0c6:	4798      	blx	r3
 800d0c8:	fb15 f500 	smulbb	r5, r5, r0
 800d0cc:	f8d8 3000 	ldr.w	r3, [r8]
 800d0d0:	aa08      	add	r2, sp, #32
 800d0d2:	b2ad      	uxth	r5, r5
 800d0d4:	4649      	mov	r1, r9
 800d0d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d0d8:	4640      	mov	r0, r8
 800d0da:	4798      	blx	r3
 800d0dc:	4405      	add	r5, r0
 800d0de:	b22d      	sxth	r5, r5
 800d0e0:	e7b4      	b.n	800d04c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x104>
 800d0e2:	2b00      	cmp	r3, #0
 800d0e4:	d187      	bne.n	800cff6 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xae>
 800d0e6:	e774      	b.n	800cfd2 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d0e8:	4798      	blx	r3
 800d0ea:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 800d0ee:	deff      	udf	#255	@ 0xff
 800d0f0:	20016ce4 	.word	0x20016ce4
 800d0f4:	20016ce0 	.word	0x20016ce0
 800d0f8:	20016ce8 	.word	0x20016ce8
 800d0fc:	20016cec 	.word	0x20016cec

0800d100 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d104:	b09b      	sub	sp, #108	@ 0x6c
 800d106:	461e      	mov	r6, r3
 800d108:	681b      	ldr	r3, [r3, #0]
 800d10a:	4604      	mov	r4, r0
 800d10c:	af1a      	add	r7, sp, #104	@ 0x68
 800d10e:	9104      	str	r1, [sp, #16]
 800d110:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 800d114:	4630      	mov	r0, r6
 800d116:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800d118:	4690      	mov	r8, r2
 800d11a:	4798      	blx	r3
 800d11c:	f847 0d28 	str.w	r0, [r7, #-40]!
 800d120:	4638      	mov	r0, r7
 800d122:	f7fe fe3f 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d126:	f8b6 3116 	ldrh.w	r3, [r6, #278]	@ 0x116
 800d12a:	1ac0      	subs	r0, r0, r3
 800d12c:	b200      	sxth	r0, r0
 800d12e:	2800      	cmp	r0, #0
 800d130:	f2c0 80b8 	blt.w	800d2a4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a4>
 800d134:	f8b6 2118 	ldrh.w	r2, [r6, #280]	@ 0x118
 800d138:	441a      	add	r2, r3
 800d13a:	f8b6 3040 	ldrh.w	r3, [r6, #64]	@ 0x40
 800d13e:	1a9b      	subs	r3, r3, r2
 800d140:	b21b      	sxth	r3, r3
 800d142:	4298      	cmp	r0, r3
 800d144:	f280 80ae 	bge.w	800d2a4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a4>
 800d148:	6833      	ldr	r3, [r6, #0]
 800d14a:	4630      	mov	r0, r6
 800d14c:	e9dd 1224 	ldrd	r1, r2, [sp, #144]	@ 0x90
 800d150:	f8d3 3110 	ldr.w	r3, [r3, #272]	@ 0x110
 800d154:	4798      	blx	r3
 800d156:	6833      	ldr	r3, [r6, #0]
 800d158:	f8b4 9042 	ldrh.w	r9, [r4, #66]	@ 0x42
 800d15c:	4605      	mov	r5, r0
 800d15e:	f8b4 b044 	ldrh.w	fp, [r4, #68]	@ 0x44
 800d162:	4630      	mov	r0, r6
 800d164:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800d168:	4798      	blx	r3
 800d16a:	f8cd 9000 	str.w	r9, [sp]
 800d16e:	462b      	mov	r3, r5
 800d170:	2214      	movs	r2, #20
 800d172:	4639      	mov	r1, r7
 800d174:	e9cd b001 	strd	fp, r0, [sp, #4]
 800d178:	4620      	mov	r0, r4
 800d17a:	f7ff fe7f 	bl	800ce7c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d17e:	4b57      	ldr	r3, [pc, #348]	@ (800d2dc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1dc>)
 800d180:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800d182:	6818      	ldr	r0, [r3, #0]
 800d184:	f7f6 fc1a 	bl	80039bc <_ZNK8touchgfx5Texts7getTextEt>
 800d188:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800d18c:	4681      	mov	r9, r0
 800d18e:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d192:	f8d8 3000 	ldr.w	r3, [r8]
 800d196:	f040 8088 	bne.w	800d2aa <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1aa>
 800d19a:	4601      	mov	r1, r0
 800d19c:	699b      	ldr	r3, [r3, #24]
 800d19e:	463a      	mov	r2, r7
 800d1a0:	4640      	mov	r0, r8
 800d1a2:	4798      	blx	r3
 800d1a4:	b205      	sxth	r5, r0
 800d1a6:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800d1aa:	2002      	movs	r0, #2
 800d1ac:	6832      	ldr	r2, [r6, #0]
 800d1ae:	f10d 0a68 	add.w	sl, sp, #104	@ 0x68
 800d1b2:	2b01      	cmp	r3, #1
 800d1b4:	f8b6 306c 	ldrh.w	r3, [r6, #108]	@ 0x6c
 800d1b8:	f8d2 2114 	ldr.w	r2, [r2, #276]	@ 0x114
 800d1bc:	bf88      	it	hi
 800d1be:	f105 0b01 	addhi.w	fp, r5, #1
 800d1c2:	9305      	str	r3, [sp, #20]
 800d1c4:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800d1c6:	bf8c      	ite	hi
 800d1c8:	fb9b fbf0 	sdivhi	fp, fp, r0
 800d1cc:	fb95 fbf0 	sdivls	fp, r5, r0
 800d1d0:	4630      	mov	r0, r6
 800d1d2:	bf88      	it	hi
 800d1d4:	fa0f fb8b 	sxthhi.w	fp, fp
 800d1d8:	4790      	blx	r2
 800d1da:	f84a 0d3c 	str.w	r0, [sl, #-60]!
 800d1de:	4650      	mov	r0, sl
 800d1e0:	2600      	movs	r6, #0
 800d1e2:	f7fe fddf 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d1e6:	9b05      	ldr	r3, [sp, #20]
 800d1e8:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800d1ec:	4418      	add	r0, r3
 800d1ee:	f8ad 5020 	strh.w	r5, [sp, #32]
 800d1f2:	ad07      	add	r5, sp, #28
 800d1f4:	f8ad 601e 	strh.w	r6, [sp, #30]
 800d1f8:	eba0 0b0b 	sub.w	fp, r0, fp
 800d1fc:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 800d200:	f8ad b01c 	strh.w	fp, [sp, #28]
 800d204:	f10d 0b24 	add.w	fp, sp, #36	@ 0x24
 800d208:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d20c:	e88b 0003 	stmia.w	fp, {r0, r1}
 800d210:	9904      	ldr	r1, [sp, #16]
 800d212:	4658      	mov	r0, fp
 800d214:	f7fd f80c 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800d218:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 800d21c:	42b3      	cmp	r3, r6
 800d21e:	dd41      	ble.n	800d2a4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a4>
 800d220:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 800d224:	42b3      	cmp	r3, r6
 800d226:	dd3d      	ble.n	800d2a4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a4>
 800d228:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 800d22c:	4620      	mov	r0, r4
 800d22e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d232:	1a5b      	subs	r3, r3, r1
 800d234:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 800d238:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800d23c:	f8bd 3026 	ldrh.w	r3, [sp, #38]	@ 0x26
 800d240:	1a5b      	subs	r3, r3, r1
 800d242:	4629      	mov	r1, r5
 800d244:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800d248:	6823      	ldr	r3, [r4, #0]
 800d24a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d24c:	4798      	blx	r3
 800d24e:	4b24      	ldr	r3, [pc, #144]	@ (800d2e0 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1e0>)
 800d250:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800d252:	681b      	ldr	r3, [r3, #0]
 800d254:	f894 0040 	ldrb.w	r0, [r4, #64]	@ 0x40
 800d258:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800d25c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800d25e:	785b      	ldrb	r3, [r3, #1]
 800d260:	910d      	str	r1, [sp, #52]	@ 0x34
 800d262:	f3c3 0c01 	ubfx	ip, r3, #0, #2
 800d266:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d26a:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 800d26e:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 800d272:	f89d 3098 	ldrb.w	r3, [sp, #152]	@ 0x98
 800d276:	f88d c030 	strb.w	ip, [sp, #48]	@ 0x30
 800d27a:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800d27e:	f88d 0032 	strb.w	r0, [sp, #50]	@ 0x32
 800d282:	f8ad 6038 	strh.w	r6, [sp, #56]	@ 0x38
 800d286:	f88d 603b 	strb.w	r6, [sp, #59]	@ 0x3b
 800d28a:	f88d 603c 	strb.w	r6, [sp, #60]	@ 0x3c
 800d28e:	f7f5 f94f 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800d292:	465b      	mov	r3, fp
 800d294:	e9cd 7602 	strd	r7, r6, [sp, #8]
 800d298:	e9cd a900 	strd	sl, r9, [sp]
 800d29c:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d2a0:	f7f6 fb3e 	bl	8003920 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d2a4:	b01b      	add	sp, #108	@ 0x6c
 800d2a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2aa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d2ac:	4640      	mov	r0, r8
 800d2ae:	4798      	blx	r3
 800d2b0:	f8d8 3000 	ldr.w	r3, [r8]
 800d2b4:	4605      	mov	r5, r0
 800d2b6:	463a      	mov	r2, r7
 800d2b8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d2ba:	4649      	mov	r1, r9
 800d2bc:	4640      	mov	r0, r8
 800d2be:	4798      	blx	r3
 800d2c0:	fb15 f500 	smulbb	r5, r5, r0
 800d2c4:	f8d8 3000 	ldr.w	r3, [r8]
 800d2c8:	463a      	mov	r2, r7
 800d2ca:	b2ad      	uxth	r5, r5
 800d2cc:	4649      	mov	r1, r9
 800d2ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d2d0:	4640      	mov	r0, r8
 800d2d2:	4798      	blx	r3
 800d2d4:	4405      	add	r5, r0
 800d2d6:	b22d      	sxth	r5, r5
 800d2d8:	e765      	b.n	800d1a6 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa6>
 800d2da:	bf00      	nop
 800d2dc:	20016cec 	.word	0x20016cec
 800d2e0:	20016ce0 	.word	0x20016ce0

0800d2e4 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d2e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2e8:	b09b      	sub	sp, #108	@ 0x6c
 800d2ea:	4698      	mov	r8, r3
 800d2ec:	681b      	ldr	r3, [r3, #0]
 800d2ee:	4604      	mov	r4, r0
 800d2f0:	ae1a      	add	r6, sp, #104	@ 0x68
 800d2f2:	9104      	str	r1, [sp, #16]
 800d2f4:	f8d3 3118 	ldr.w	r3, [r3, #280]	@ 0x118
 800d2f8:	4640      	mov	r0, r8
 800d2fa:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800d2fc:	4617      	mov	r7, r2
 800d2fe:	4798      	blx	r3
 800d300:	f846 0d28 	str.w	r0, [r6, #-40]!
 800d304:	4630      	mov	r0, r6
 800d306:	f7fe fd4d 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d30a:	f8b8 3114 	ldrh.w	r3, [r8, #276]	@ 0x114
 800d30e:	1ac0      	subs	r0, r0, r3
 800d310:	b200      	sxth	r0, r0
 800d312:	2800      	cmp	r0, #0
 800d314:	f2c0 80ba 	blt.w	800d48c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a8>
 800d318:	f8b8 211a 	ldrh.w	r2, [r8, #282]	@ 0x11a
 800d31c:	441a      	add	r2, r3
 800d31e:	f8b8 3042 	ldrh.w	r3, [r8, #66]	@ 0x42
 800d322:	1a9b      	subs	r3, r3, r2
 800d324:	b21b      	sxth	r3, r3
 800d326:	4298      	cmp	r0, r3
 800d328:	f280 80b0 	bge.w	800d48c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a8>
 800d32c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d32e:	2214      	movs	r2, #20
 800d330:	4631      	mov	r1, r6
 800d332:	4620      	mov	r0, r4
 800d334:	9302      	str	r3, [sp, #8]
 800d336:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 800d33a:	9301      	str	r3, [sp, #4]
 800d33c:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 800d340:	9300      	str	r3, [sp, #0]
 800d342:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 800d344:	f7ff fd9a 	bl	800ce7c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d348:	4b55      	ldr	r3, [pc, #340]	@ (800d4a0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1bc>)
 800d34a:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800d34c:	6818      	ldr	r0, [r3, #0]
 800d34e:	f7f6 fb35 	bl	80039bc <_ZNK8touchgfx5Texts7getTextEt>
 800d352:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800d356:	4681      	mov	r9, r0
 800d358:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d35c:	683b      	ldr	r3, [r7, #0]
 800d35e:	f040 8098 	bne.w	800d492 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ae>
 800d362:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d364:	4638      	mov	r0, r7
 800d366:	4798      	blx	r3
 800d368:	683b      	ldr	r3, [r7, #0]
 800d36a:	4605      	mov	r5, r0
 800d36c:	4632      	mov	r2, r6
 800d36e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d370:	4649      	mov	r1, r9
 800d372:	4638      	mov	r0, r7
 800d374:	4798      	blx	r3
 800d376:	fb15 f500 	smulbb	r5, r5, r0
 800d37a:	683b      	ldr	r3, [r7, #0]
 800d37c:	4632      	mov	r2, r6
 800d37e:	b2ad      	uxth	r5, r5
 800d380:	4649      	mov	r1, r9
 800d382:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d384:	4638      	mov	r0, r7
 800d386:	4798      	blx	r3
 800d388:	4405      	add	r5, r0
 800d38a:	b22d      	sxth	r5, r5
 800d38c:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800d390:	2002      	movs	r0, #2
 800d392:	f8d8 2000 	ldr.w	r2, [r8]
 800d396:	f10d 0a68 	add.w	sl, sp, #104	@ 0x68
 800d39a:	2b01      	cmp	r3, #1
 800d39c:	f8b8 30c6 	ldrh.w	r3, [r8, #198]	@ 0xc6
 800d3a0:	f8d2 2118 	ldr.w	r2, [r2, #280]	@ 0x118
 800d3a4:	bf88      	it	hi
 800d3a6:	f105 0b01 	addhi.w	fp, r5, #1
 800d3aa:	9305      	str	r3, [sp, #20]
 800d3ac:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800d3ae:	bf8c      	ite	hi
 800d3b0:	fb9b fbf0 	sdivhi	fp, fp, r0
 800d3b4:	fb95 fbf0 	sdivls	fp, r5, r0
 800d3b8:	4640      	mov	r0, r8
 800d3ba:	bf88      	it	hi
 800d3bc:	fa0f fb8b 	sxthhi.w	fp, fp
 800d3c0:	4790      	blx	r2
 800d3c2:	f84a 0d3c 	str.w	r0, [sl, #-60]!
 800d3c6:	4650      	mov	r0, sl
 800d3c8:	f04f 0800 	mov.w	r8, #0
 800d3cc:	f7fe fcea 	bl	800bda4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d3d0:	9b05      	ldr	r3, [sp, #20]
 800d3d2:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800d3d6:	4418      	add	r0, r3
 800d3d8:	f8ad 5022 	strh.w	r5, [sp, #34]	@ 0x22
 800d3dc:	ad07      	add	r5, sp, #28
 800d3de:	f8ad 801c 	strh.w	r8, [sp, #28]
 800d3e2:	eba0 0b0b 	sub.w	fp, r0, fp
 800d3e6:	f8ad 1020 	strh.w	r1, [sp, #32]
 800d3ea:	f8ad b01e 	strh.w	fp, [sp, #30]
 800d3ee:	f10d 0b24 	add.w	fp, sp, #36	@ 0x24
 800d3f2:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d3f6:	e88b 0003 	stmia.w	fp, {r0, r1}
 800d3fa:	9904      	ldr	r1, [sp, #16]
 800d3fc:	4658      	mov	r0, fp
 800d3fe:	f7fc ff17 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800d402:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 800d406:	4543      	cmp	r3, r8
 800d408:	dd40      	ble.n	800d48c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a8>
 800d40a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 800d40e:	4543      	cmp	r3, r8
 800d410:	dd3c      	ble.n	800d48c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a8>
 800d412:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 800d416:	4620      	mov	r0, r4
 800d418:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d41c:	1a5b      	subs	r3, r3, r1
 800d41e:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 800d422:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800d426:	f8bd 3026 	ldrh.w	r3, [sp, #38]	@ 0x26
 800d42a:	1a5b      	subs	r3, r3, r1
 800d42c:	4629      	mov	r1, r5
 800d42e:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800d432:	6823      	ldr	r3, [r4, #0]
 800d434:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d436:	4798      	blx	r3
 800d438:	4b1a      	ldr	r3, [pc, #104]	@ (800d4a4 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1c0>)
 800d43a:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800d43c:	681b      	ldr	r3, [r3, #0]
 800d43e:	f894 0040 	ldrb.w	r0, [r4, #64]	@ 0x40
 800d442:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800d446:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800d448:	785b      	ldrb	r3, [r3, #1]
 800d44a:	910d      	str	r1, [sp, #52]	@ 0x34
 800d44c:	f3c3 0c01 	ubfx	ip, r3, #0, #2
 800d450:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d454:	970b      	str	r7, [sp, #44]	@ 0x2c
 800d456:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 800d45a:	f89d 3098 	ldrb.w	r3, [sp, #152]	@ 0x98
 800d45e:	f88d c030 	strb.w	ip, [sp, #48]	@ 0x30
 800d462:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800d466:	f88d 0032 	strb.w	r0, [sp, #50]	@ 0x32
 800d46a:	f8ad 8038 	strh.w	r8, [sp, #56]	@ 0x38
 800d46e:	f88d 803b 	strb.w	r8, [sp, #59]	@ 0x3b
 800d472:	f88d 803c 	strb.w	r8, [sp, #60]	@ 0x3c
 800d476:	f7f5 f85b 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800d47a:	465b      	mov	r3, fp
 800d47c:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800d480:	e9cd a900 	strd	sl, r9, [sp]
 800d484:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d488:	f7f6 fa4a 	bl	8003920 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d48c:	b01b      	add	sp, #108	@ 0x6c
 800d48e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d492:	4601      	mov	r1, r0
 800d494:	699b      	ldr	r3, [r3, #24]
 800d496:	4632      	mov	r2, r6
 800d498:	4638      	mov	r0, r7
 800d49a:	4798      	blx	r3
 800d49c:	b205      	sxth	r5, r0
 800d49e:	e775      	b.n	800d38c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800d4a0:	20016cec 	.word	0x20016cec
 800d4a4:	20016ce0 	.word	0x20016ce0

0800d4a8 <_ZN8touchgfx21GraphWrapAndClearData5clearEv>:
 800d4a8:	b510      	push	{r4, lr}
 800d4aa:	4604      	mov	r4, r0
 800d4ac:	f7fe fd65 	bl	800bf7a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800d4b0:	4620      	mov	r0, r4
 800d4b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d4b6:	f7fe bb12 	b.w	800bade <_ZN8touchgfx17AbstractDataGraph5clearEv>

0800d4ba <_ZN8touchgfx21GraphWrapAndClearData8addValueEi>:
 800d4ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d4bc:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	@ 0x11e
 800d4c0:	460f      	mov	r7, r1
 800d4c2:	f8d0 6144 	ldr.w	r6, [r0, #324]	@ 0x144
 800d4c6:	4604      	mov	r4, r0
 800d4c8:	1c6b      	adds	r3, r5, #1
 800d4ca:	4629      	mov	r1, r5
 800d4cc:	f8a0 311e 	strh.w	r3, [r0, #286]	@ 0x11e
 800d4d0:	6803      	ldr	r3, [r0, #0]
 800d4d2:	f8d3 3180 	ldr.w	r3, [r3, #384]	@ 0x180
 800d4d6:	4798      	blx	r3
 800d4d8:	f846 7020 	str.w	r7, [r6, r0, lsl #2]
 800d4dc:	b915      	cbnz	r5, 800d4e4 <_ZN8touchgfx21GraphWrapAndClearData8addValueEi+0x2a>
 800d4de:	4620      	mov	r0, r4
 800d4e0:	f7fe fd4b 	bl	800bf7a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800d4e4:	4620      	mov	r0, r4
 800d4e6:	4629      	mov	r1, r5
 800d4e8:	f7fe fd1f 	bl	800bf2a <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800d4ec:	4628      	mov	r0, r5
 800d4ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d4f0 <_ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv>:
 800d4f0:	f9b0 111e 	ldrsh.w	r1, [r0, #286]	@ 0x11e
 800d4f4:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	@ 0x11c
 800d4f8:	4291      	cmp	r1, r2
 800d4fa:	db03      	blt.n	800d504 <_ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv+0x14>
 800d4fc:	6803      	ldr	r3, [r0, #0]
 800d4fe:	f8d3 30fc 	ldr.w	r3, [r3, #252]	@ 0xfc
 800d502:	4718      	bx	r3
 800d504:	4770      	bx	lr

0800d506 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800d506:	2000      	movs	r0, #0
 800d508:	4770      	bx	lr
	...

0800d50c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800d50c:	4b07      	ldr	r3, [pc, #28]	@ (800d52c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800d50e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800d510:	881b      	ldrh	r3, [r3, #0]
 800d512:	4293      	cmp	r3, r2
 800d514:	bf81      	itttt	hi
 800d516:	4b06      	ldrhi	r3, [pc, #24]	@ (800d530 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800d518:	681b      	ldrhi	r3, [r3, #0]
 800d51a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800d51e:	7858      	ldrbhi	r0, [r3, #1]
 800d520:	bf8c      	ite	hi
 800d522:	f000 0003 	andhi.w	r0, r0, #3
 800d526:	2000      	movls	r0, #0
 800d528:	4770      	bx	lr
 800d52a:	bf00      	nop
 800d52c:	20016ce4 	.word	0x20016ce4
 800d530:	20016ce0 	.word	0x20016ce0

0800d534 <_ZN8touchgfx8TextAreaD1Ev>:
 800d534:	4770      	bx	lr
	...

0800d538 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800d538:	4b11      	ldr	r3, [pc, #68]	@ (800d580 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800d53a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d53e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800d540:	4604      	mov	r4, r0
 800d542:	881b      	ldrh	r3, [r3, #0]
 800d544:	428b      	cmp	r3, r1
 800d546:	d918      	bls.n	800d57a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800d548:	6803      	ldr	r3, [r0, #0]
 800d54a:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800d54c:	4b0d      	ldr	r3, [pc, #52]	@ (800d584 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800d54e:	6818      	ldr	r0, [r3, #0]
 800d550:	f7f6 fa34 	bl	80039bc <_ZNK8touchgfx5Texts7getTextEt>
 800d554:	6823      	ldr	r3, [r4, #0]
 800d556:	4606      	mov	r6, r0
 800d558:	4620      	mov	r0, r4
 800d55a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d55c:	4798      	blx	r3
 800d55e:	6823      	ldr	r3, [r4, #0]
 800d560:	4607      	mov	r7, r0
 800d562:	4620      	mov	r0, r4
 800d564:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d568:	4798      	blx	r3
 800d56a:	463a      	mov	r2, r7
 800d56c:	4603      	mov	r3, r0
 800d56e:	4631      	mov	r1, r6
 800d570:	4620      	mov	r0, r4
 800d572:	46ac      	mov	ip, r5
 800d574:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d578:	4760      	bx	ip
 800d57a:	2000      	movs	r0, #0
 800d57c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d580:	20016ce4 	.word	0x20016ce4
 800d584:	20016cec 	.word	0x20016cec

0800d588 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800d588:	4b18      	ldr	r3, [pc, #96]	@ (800d5ec <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800d58a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d58e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800d590:	4604      	mov	r4, r0
 800d592:	881b      	ldrh	r3, [r3, #0]
 800d594:	428b      	cmp	r3, r1
 800d596:	d926      	bls.n	800d5e6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800d598:	4b15      	ldr	r3, [pc, #84]	@ (800d5f0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800d59a:	681b      	ldr	r3, [r3, #0]
 800d59c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800d5a0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800d5a4:	4b13      	ldr	r3, [pc, #76]	@ (800d5f4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800d5a6:	7855      	ldrb	r5, [r2, #1]
 800d5a8:	681b      	ldr	r3, [r3, #0]
 800d5aa:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800d5ae:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800d5b2:	6833      	ldr	r3, [r6, #0]
 800d5b4:	69df      	ldr	r7, [r3, #28]
 800d5b6:	4b10      	ldr	r3, [pc, #64]	@ (800d5f8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800d5b8:	6818      	ldr	r0, [r3, #0]
 800d5ba:	f7f6 f9ff 	bl	80039bc <_ZNK8touchgfx5Texts7getTextEt>
 800d5be:	6823      	ldr	r3, [r4, #0]
 800d5c0:	4680      	mov	r8, r0
 800d5c2:	4620      	mov	r0, r4
 800d5c4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d5c6:	4798      	blx	r3
 800d5c8:	6823      	ldr	r3, [r4, #0]
 800d5ca:	4681      	mov	r9, r0
 800d5cc:	4620      	mov	r0, r4
 800d5ce:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d5d2:	4798      	blx	r3
 800d5d4:	464b      	mov	r3, r9
 800d5d6:	9000      	str	r0, [sp, #0]
 800d5d8:	4642      	mov	r2, r8
 800d5da:	4629      	mov	r1, r5
 800d5dc:	4630      	mov	r0, r6
 800d5de:	47b8      	blx	r7
 800d5e0:	b003      	add	sp, #12
 800d5e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d5e6:	2000      	movs	r0, #0
 800d5e8:	e7fa      	b.n	800d5e0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800d5ea:	bf00      	nop
 800d5ec:	20016ce4 	.word	0x20016ce4
 800d5f0:	20016ce0 	.word	0x20016ce0
 800d5f4:	20016ce8 	.word	0x20016ce8
 800d5f8:	20016cec 	.word	0x20016cec

0800d5fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800d5fc:	b40e      	push	{r1, r2, r3}
 800d5fe:	4b30      	ldr	r3, [pc, #192]	@ (800d6c0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800d600:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d604:	881a      	ldrh	r2, [r3, #0]
 800d606:	b09d      	sub	sp, #116	@ 0x74
 800d608:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800d60a:	4604      	mov	r4, r0
 800d60c:	429a      	cmp	r2, r3
 800d60e:	d954      	bls.n	800d6ba <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800d610:	aa26      	add	r2, sp, #152	@ 0x98
 800d612:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800d6c4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800d616:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800d6c8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800d61a:	9202      	str	r2, [sp, #8]
 800d61c:	f8d9 2000 	ldr.w	r2, [r9]
 800d620:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d624:	f8d8 3000 	ldr.w	r3, [r8]
 800d628:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d62c:	682b      	ldr	r3, [r5, #0]
 800d62e:	4628      	mov	r0, r5
 800d630:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d632:	4798      	blx	r3
 800d634:	4606      	mov	r6, r0
 800d636:	b207      	sxth	r7, r0
 800d638:	a803      	add	r0, sp, #12
 800d63a:	f004 fe65 	bl	8012308 <_ZN8touchgfx12TextProviderC1Ev>
 800d63e:	682b      	ldr	r3, [r5, #0]
 800d640:	4628      	mov	r0, r5
 800d642:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d644:	4798      	blx	r3
 800d646:	682b      	ldr	r3, [r5, #0]
 800d648:	4682      	mov	sl, r0
 800d64a:	4628      	mov	r0, r5
 800d64c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d64e:	4798      	blx	r3
 800d650:	4653      	mov	r3, sl
 800d652:	9000      	str	r0, [sp, #0]
 800d654:	a803      	add	r0, sp, #12
 800d656:	9a02      	ldr	r2, [sp, #8]
 800d658:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800d65a:	f004 feb0 	bl	80123be <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d65e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800d660:	f8d9 3000 	ldr.w	r3, [r9]
 800d664:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800d668:	8925      	ldrh	r5, [r4, #8]
 800d66a:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800d66e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800d672:	eba5 050c 	sub.w	r5, r5, ip
 800d676:	784a      	ldrb	r2, [r1, #1]
 800d678:	f8d8 3000 	ldr.w	r3, [r8]
 800d67c:	b22d      	sxth	r5, r5
 800d67e:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800d682:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d686:	9500      	str	r5, [sp, #0]
 800d688:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800d68c:	a803      	add	r0, sp, #12
 800d68e:	f002 fc4f 	bl	800ff30 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800d692:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800d696:	b203      	sxth	r3, r0
 800d698:	18b9      	adds	r1, r7, r2
 800d69a:	2900      	cmp	r1, #0
 800d69c:	dd0b      	ble.n	800d6b6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800d69e:	3b01      	subs	r3, #1
 800d6a0:	fb13 f302 	smulbb	r3, r3, r2
 800d6a4:	fb16 3300 	smlabb	r3, r6, r0, r3
 800d6a8:	b21f      	sxth	r7, r3
 800d6aa:	4638      	mov	r0, r7
 800d6ac:	b01d      	add	sp, #116	@ 0x74
 800d6ae:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d6b2:	b003      	add	sp, #12
 800d6b4:	4770      	bx	lr
 800d6b6:	2b00      	cmp	r3, #0
 800d6b8:	dcf7      	bgt.n	800d6aa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d6ba:	2700      	movs	r7, #0
 800d6bc:	e7f5      	b.n	800d6aa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d6be:	bf00      	nop
 800d6c0:	20016ce4 	.word	0x20016ce4
 800d6c4:	20016ce0 	.word	0x20016ce0
 800d6c8:	20016ce8 	.word	0x20016ce8

0800d6cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800d6cc:	4bbd      	ldr	r3, [pc, #756]	@ (800d9c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800d6ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6d2:	460c      	mov	r4, r1
 800d6d4:	881b      	ldrh	r3, [r3, #0]
 800d6d6:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 800d6d8:	b0a9      	sub	sp, #164	@ 0xa4
 800d6da:	4680      	mov	r8, r0
 800d6dc:	428b      	cmp	r3, r1
 800d6de:	d809      	bhi.n	800d6f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800d6e0:	2300      	movs	r3, #0
 800d6e2:	f04f 32ff 	mov.w	r2, #4294967295
 800d6e6:	6083      	str	r3, [r0, #8]
 800d6e8:	e9c0 3200 	strd	r3, r2, [r0]
 800d6ec:	4640      	mov	r0, r8
 800d6ee:	b029      	add	sp, #164	@ 0xa4
 800d6f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6f4:	4eb4      	ldr	r6, [pc, #720]	@ (800d9c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800d6f6:	6833      	ldr	r3, [r6, #0]
 800d6f8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800d6fc:	4bb3      	ldr	r3, [pc, #716]	@ (800d9cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800d6fe:	681b      	ldr	r3, [r3, #0]
 800d700:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d704:	4bb2      	ldr	r3, [pc, #712]	@ (800d9d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800d706:	6818      	ldr	r0, [r3, #0]
 800d708:	f7f6 f958 	bl	80039bc <_ZNK8touchgfx5Texts7getTextEt>
 800d70c:	682b      	ldr	r3, [r5, #0]
 800d70e:	4681      	mov	r9, r0
 800d710:	4628      	mov	r0, r5
 800d712:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d714:	4798      	blx	r3
 800d716:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 800d718:	b203      	sxth	r3, r0
 800d71a:	4682      	mov	sl, r0
 800d71c:	4407      	add	r7, r0
 800d71e:	a80f      	add	r0, sp, #60	@ 0x3c
 800d720:	9304      	str	r3, [sp, #16]
 800d722:	b2bb      	uxth	r3, r7
 800d724:	9303      	str	r3, [sp, #12]
 800d726:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800d72a:	2b00      	cmp	r3, #0
 800d72c:	f040 80a5 	bne.w	800d87a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 800d730:	f004 fdea 	bl	8012308 <_ZN8touchgfx12TextProviderC1Ev>
 800d734:	682b      	ldr	r3, [r5, #0]
 800d736:	4628      	mov	r0, r5
 800d738:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d73a:	4798      	blx	r3
 800d73c:	682b      	ldr	r3, [r5, #0]
 800d73e:	4606      	mov	r6, r0
 800d740:	4628      	mov	r0, r5
 800d742:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d744:	4798      	blx	r3
 800d746:	6823      	ldr	r3, [r4, #0]
 800d748:	4607      	mov	r7, r0
 800d74a:	4620      	mov	r0, r4
 800d74c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d74e:	4798      	blx	r3
 800d750:	6823      	ldr	r3, [r4, #0]
 800d752:	4683      	mov	fp, r0
 800d754:	4620      	mov	r0, r4
 800d756:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d75a:	4798      	blx	r3
 800d75c:	463b      	mov	r3, r7
 800d75e:	4649      	mov	r1, r9
 800d760:	4632      	mov	r2, r6
 800d762:	2600      	movs	r6, #0
 800d764:	e9cd b000 	strd	fp, r0, [sp]
 800d768:	a80f      	add	r0, sp, #60	@ 0x3c
 800d76a:	4637      	mov	r7, r6
 800d76c:	f004 fe3c 	bl	80123e8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d770:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800d774:	f8df b250 	ldr.w	fp, [pc, #592]	@ 800d9c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800d778:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d77c:	bf0c      	ite	eq
 800d77e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800d782:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800d786:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800d788:	4629      	mov	r1, r5
 800d78a:	f8db 3000 	ldr.w	r3, [fp]
 800d78e:	a80f      	add	r0, sp, #60	@ 0x3c
 800d790:	3701      	adds	r7, #1
 800d792:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d796:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800d79a:	b2bf      	uxth	r7, r7
 800d79c:	785b      	ldrb	r3, [r3, #1]
 800d79e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d7a2:	f002 f8cc 	bl	800f93e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d7a6:	9b03      	ldr	r3, [sp, #12]
 800d7a8:	4286      	cmp	r6, r0
 800d7aa:	eba9 0903 	sub.w	r9, r9, r3
 800d7ae:	bfb8      	it	lt
 800d7b0:	4606      	movlt	r6, r0
 800d7b2:	a80f      	add	r0, sp, #60	@ 0x3c
 800d7b4:	fa0f f989 	sxth.w	r9, r9
 800d7b8:	b236      	sxth	r6, r6
 800d7ba:	f004 fdcc 	bl	8012356 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800d7be:	b918      	cbnz	r0, 800d7c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d7c0:	7a2b      	ldrb	r3, [r5, #8]
 800d7c2:	444b      	add	r3, r9
 800d7c4:	2b00      	cmp	r3, #0
 800d7c6:	dcde      	bgt.n	800d786 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 800d7c8:	9b03      	ldr	r3, [sp, #12]
 800d7ca:	4620      	mov	r0, r4
 800d7cc:	9a04      	ldr	r2, [sp, #16]
 800d7ce:	fb13 f707 	smulbb	r7, r3, r7
 800d7d2:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800d7d4:	f895 9009 	ldrb.w	r9, [r5, #9]
 800d7d8:	1aff      	subs	r7, r7, r3
 800d7da:	b2bf      	uxth	r7, r7
 800d7dc:	b23b      	sxth	r3, r7
 800d7de:	429a      	cmp	r2, r3
 800d7e0:	bfa8      	it	ge
 800d7e2:	4657      	movge	r7, sl
 800d7e4:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800d7e8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d7ec:	6823      	ldr	r3, [r4, #0]
 800d7ee:	444f      	add	r7, r9
 800d7f0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d7f2:	bf08      	it	eq
 800d7f4:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800d7f8:	fa1f f987 	uxth.w	r9, r7
 800d7fc:	bf18      	it	ne
 800d7fe:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800d802:	4798      	blx	r3
 800d804:	2801      	cmp	r0, #1
 800d806:	fa0f f789 	sxth.w	r7, r9
 800d80a:	b2b3      	uxth	r3, r6
 800d80c:	f000 80e2 	beq.w	800d9d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800d810:	2802      	cmp	r0, #2
 800d812:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 800d816:	f000 80e3 	beq.w	800d9e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800d81a:	7aea      	ldrb	r2, [r5, #11]
 800d81c:	b236      	sxth	r6, r6
 800d81e:	7b2d      	ldrb	r5, [r5, #12]
 800d820:	1ab6      	subs	r6, r6, r2
 800d822:	442a      	add	r2, r5
 800d824:	fa1f fa86 	uxth.w	sl, r6
 800d828:	4413      	add	r3, r2
 800d82a:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800d82e:	fa0f fb8a 	sxth.w	fp, sl
 800d832:	b29b      	uxth	r3, r3
 800d834:	2a02      	cmp	r2, #2
 800d836:	b21e      	sxth	r6, r3
 800d838:	f000 80d6 	beq.w	800d9e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800d83c:	2a03      	cmp	r2, #3
 800d83e:	f000 80de 	beq.w	800d9fe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800d842:	2a01      	cmp	r2, #1
 800d844:	f040 80e6 	bne.w	800da14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800d848:	8925      	ldrh	r5, [r4, #8]
 800d84a:	4633      	mov	r3, r6
 800d84c:	463e      	mov	r6, r7
 800d84e:	eba5 0909 	sub.w	r9, r5, r9
 800d852:	461f      	mov	r7, r3
 800d854:	465d      	mov	r5, fp
 800d856:	fa0f fb89 	sxth.w	fp, r9
 800d85a:	4b5d      	ldr	r3, [pc, #372]	@ (800d9d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800d85c:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800d85e:	6818      	ldr	r0, [r3, #0]
 800d860:	f7f6 f8ac 	bl	80039bc <_ZNK8touchgfx5Texts7getTextEt>
 800d864:	f8a8 b000 	strh.w	fp, [r8]
 800d868:	f8a8 5002 	strh.w	r5, [r8, #2]
 800d86c:	f8a8 6004 	strh.w	r6, [r8, #4]
 800d870:	f8a8 7006 	strh.w	r7, [r8, #6]
 800d874:	f8c8 0008 	str.w	r0, [r8, #8]
 800d878:	e738      	b.n	800d6ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800d87a:	f004 fd45 	bl	8012308 <_ZN8touchgfx12TextProviderC1Ev>
 800d87e:	682b      	ldr	r3, [r5, #0]
 800d880:	4628      	mov	r0, r5
 800d882:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d884:	4798      	blx	r3
 800d886:	682b      	ldr	r3, [r5, #0]
 800d888:	4607      	mov	r7, r0
 800d88a:	4628      	mov	r0, r5
 800d88c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d88e:	4798      	blx	r3
 800d890:	6823      	ldr	r3, [r4, #0]
 800d892:	4683      	mov	fp, r0
 800d894:	4620      	mov	r0, r4
 800d896:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d898:	4798      	blx	r3
 800d89a:	6822      	ldr	r2, [r4, #0]
 800d89c:	9005      	str	r0, [sp, #20]
 800d89e:	4620      	mov	r0, r4
 800d8a0:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800d8a4:	4790      	blx	r2
 800d8a6:	9b05      	ldr	r3, [sp, #20]
 800d8a8:	463a      	mov	r2, r7
 800d8aa:	4649      	mov	r1, r9
 800d8ac:	9001      	str	r0, [sp, #4]
 800d8ae:	a80f      	add	r0, sp, #60	@ 0x3c
 800d8b0:	9300      	str	r3, [sp, #0]
 800d8b2:	465b      	mov	r3, fp
 800d8b4:	f004 fd98 	bl	80123e8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d8b8:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800d8bc:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800d8c0:	af0f      	add	r7, sp, #60	@ 0x3c
 800d8c2:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d8c6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d8ca:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800d8cc:	bf0a      	itet	eq
 800d8ce:	464a      	moveq	r2, r9
 800d8d0:	461a      	movne	r2, r3
 800d8d2:	4699      	moveq	r9, r3
 800d8d4:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800d8d8:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 800d8dc:	1ad2      	subs	r2, r2, r3
 800d8de:	6833      	ldr	r3, [r6, #0]
 800d8e0:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 800d8e4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800d8e8:	7859      	ldrb	r1, [r3, #1]
 800d8ea:	2300      	movs	r3, #0
 800d8ec:	9707      	str	r7, [sp, #28]
 800d8ee:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800d8f2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d8f6:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800d8fa:	f88d 1020 	strb.w	r1, [sp, #32]
 800d8fe:	9509      	str	r5, [sp, #36]	@ 0x24
 800d900:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800d904:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 800d908:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 800d90c:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d910:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800d914:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800d918:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800d91c:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d920:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800d924:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800d928:	b350      	cbz	r0, 800d980 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d92a:	682b      	ldr	r3, [r5, #0]
 800d92c:	4628      	mov	r0, r5
 800d92e:	695b      	ldr	r3, [r3, #20]
 800d930:	4798      	blx	r3
 800d932:	4607      	mov	r7, r0
 800d934:	b320      	cbz	r0, 800d980 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d936:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800d938:	4639      	mov	r1, r7
 800d93a:	6803      	ldr	r3, [r0, #0]
 800d93c:	68db      	ldr	r3, [r3, #12]
 800d93e:	4798      	blx	r3
 800d940:	4606      	mov	r6, r0
 800d942:	b1e8      	cbz	r0, 800d980 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d944:	7b43      	ldrb	r3, [r0, #13]
 800d946:	7a82      	ldrb	r2, [r0, #10]
 800d948:	005b      	lsls	r3, r3, #1
 800d94a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d94e:	4313      	orrs	r3, r2
 800d950:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800d954:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 800d958:	2b06      	cmp	r3, #6
 800d95a:	d111      	bne.n	800d980 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d95c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800d95e:	4632      	mov	r2, r6
 800d960:	4639      	mov	r1, r7
 800d962:	6803      	ldr	r3, [r0, #0]
 800d964:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d966:	4798      	blx	r3
 800d968:	7b73      	ldrb	r3, [r6, #13]
 800d96a:	005b      	lsls	r3, r3, #1
 800d96c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800d970:	7ab3      	ldrb	r3, [r6, #10]
 800d972:	4313      	orrs	r3, r2
 800d974:	4418      	add	r0, r3
 800d976:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800d97a:	4418      	add	r0, r3
 800d97c:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 800d980:	2600      	movs	r6, #0
 800d982:	4637      	mov	r7, r6
 800d984:	a806      	add	r0, sp, #24
 800d986:	3701      	adds	r7, #1
 800d988:	f002 f9cf 	bl	800fd2a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d98c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 800d990:	9b03      	ldr	r3, [sp, #12]
 800d992:	b2bf      	uxth	r7, r7
 800d994:	4286      	cmp	r6, r0
 800d996:	eba9 0903 	sub.w	r9, r9, r3
 800d99a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800d99e:	bfb8      	it	lt
 800d9a0:	4606      	movlt	r6, r0
 800d9a2:	fa0f f989 	sxth.w	r9, r9
 800d9a6:	b236      	sxth	r6, r6
 800d9a8:	2b00      	cmp	r3, #0
 800d9aa:	f43f af0d 	beq.w	800d7c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d9ae:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 800d9b2:	2b00      	cmp	r3, #0
 800d9b4:	f47f af08 	bne.w	800d7c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d9b8:	7a2b      	ldrb	r3, [r5, #8]
 800d9ba:	444b      	add	r3, r9
 800d9bc:	2b00      	cmp	r3, #0
 800d9be:	dce1      	bgt.n	800d984 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 800d9c0:	e702      	b.n	800d7c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d9c2:	bf00      	nop
 800d9c4:	20016ce4 	.word	0x20016ce4
 800d9c8:	20016ce0 	.word	0x20016ce0
 800d9cc:	20016ce8 	.word	0x20016ce8
 800d9d0:	20016cec 	.word	0x20016cec
 800d9d4:	ebaa 0606 	sub.w	r6, sl, r6
 800d9d8:	2002      	movs	r0, #2
 800d9da:	fb96 f6f0 	sdiv	r6, r6, r0
 800d9de:	e71c      	b.n	800d81a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800d9e0:	441e      	add	r6, r3
 800d9e2:	ebaa 0606 	sub.w	r6, sl, r6
 800d9e6:	e718      	b.n	800d81a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800d9e8:	8925      	ldrh	r5, [r4, #8]
 800d9ea:	1aed      	subs	r5, r5, r3
 800d9ec:	eba5 050a 	sub.w	r5, r5, sl
 800d9f0:	fa0f fb85 	sxth.w	fp, r5
 800d9f4:	8965      	ldrh	r5, [r4, #10]
 800d9f6:	eba5 0509 	sub.w	r5, r5, r9
 800d9fa:	b22d      	sxth	r5, r5
 800d9fc:	e72d      	b.n	800d85a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800d9fe:	8965      	ldrh	r5, [r4, #10]
 800da00:	f04f 0b00 	mov.w	fp, #0
 800da04:	1aed      	subs	r5, r5, r3
 800da06:	4633      	mov	r3, r6
 800da08:	463e      	mov	r6, r7
 800da0a:	eba5 050a 	sub.w	r5, r5, sl
 800da0e:	461f      	mov	r7, r3
 800da10:	b22d      	sxth	r5, r5
 800da12:	e722      	b.n	800d85a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800da14:	2500      	movs	r5, #0
 800da16:	e720      	b.n	800d85a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

0800da18 <_ZN8touchgfx8TextAreaD0Ev>:
 800da18:	b510      	push	{r4, lr}
 800da1a:	4604      	mov	r4, r0
 800da1c:	2148      	movs	r1, #72	@ 0x48
 800da1e:	f013 ff75 	bl	802190c <_ZdlPvj>
 800da22:	4620      	mov	r0, r4
 800da24:	bd10      	pop	{r4, pc}
	...

0800da28 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800da28:	b513      	push	{r0, r1, r4, lr}
 800da2a:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 800da2e:	4604      	mov	r4, r0
 800da30:	b1fb      	cbz	r3, 800da72 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800da32:	4b16      	ldr	r3, [pc, #88]	@ (800da8c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800da34:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800da36:	881b      	ldrh	r3, [r3, #0]
 800da38:	428b      	cmp	r3, r1
 800da3a:	d91a      	bls.n	800da72 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800da3c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800da40:	2b00      	cmp	r3, #0
 800da42:	dd16      	ble.n	800da72 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800da44:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800da48:	2b00      	cmp	r3, #0
 800da4a:	dd12      	ble.n	800da72 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800da4c:	4b10      	ldr	r3, [pc, #64]	@ (800da90 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800da4e:	6818      	ldr	r0, [r3, #0]
 800da50:	f7f5 ffb4 	bl	80039bc <_ZNK8touchgfx5Texts7getTextEt>
 800da54:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800da58:	6822      	ldr	r2, [r4, #0]
 800da5a:	2b00      	cmp	r3, #0
 800da5c:	db06      	blt.n	800da6c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800da5e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800da62:	2b00      	cmp	r3, #0
 800da64:	db02      	blt.n	800da6c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800da66:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800da68:	4298      	cmp	r0, r3
 800da6a:	d004      	beq.n	800da76 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800da6c:	6953      	ldr	r3, [r2, #20]
 800da6e:	4620      	mov	r0, r4
 800da70:	4798      	blx	r3
 800da72:	b002      	add	sp, #8
 800da74:	bd10      	pop	{r4, pc}
 800da76:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 800da7a:	466b      	mov	r3, sp
 800da7c:	6912      	ldr	r2, [r2, #16]
 800da7e:	c903      	ldmia	r1, {r0, r1}
 800da80:	e883 0003 	stmia.w	r3, {r0, r1}
 800da84:	4619      	mov	r1, r3
 800da86:	4620      	mov	r0, r4
 800da88:	4790      	blx	r2
 800da8a:	e7f2      	b.n	800da72 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800da8c:	20016ce4 	.word	0x20016ce4
 800da90:	20016cec 	.word	0x20016cec

0800da94 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800da94:	4b45      	ldr	r3, [pc, #276]	@ (800dbac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800da96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da9a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800da9c:	b08e      	sub	sp, #56	@ 0x38
 800da9e:	881b      	ldrh	r3, [r3, #0]
 800daa0:	4604      	mov	r4, r0
 800daa2:	4293      	cmp	r3, r2
 800daa4:	d97e      	bls.n	800dba4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800daa6:	6808      	ldr	r0, [r1, #0]
 800daa8:	ab05      	add	r3, sp, #20
 800daaa:	6849      	ldr	r1, [r1, #4]
 800daac:	4d40      	ldr	r5, [pc, #256]	@ (800dbb0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800daae:	c303      	stmia	r3!, {r0, r1}
 800dab0:	4611      	mov	r1, r2
 800dab2:	6828      	ldr	r0, [r5, #0]
 800dab4:	f7f5 ff82 	bl	80039bc <_ZNK8touchgfx5Texts7getTextEt>
 800dab8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800dabc:	2b00      	cmp	r3, #0
 800dabe:	db11      	blt.n	800dae4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800dac0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800dac4:	2b00      	cmp	r3, #0
 800dac6:	db0d      	blt.n	800dae4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800dac8:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800daca:	4298      	cmp	r0, r3
 800dacc:	d10a      	bne.n	800dae4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800dace:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 800dad2:	ab09      	add	r3, sp, #36	@ 0x24
 800dad4:	e892 0003 	ldmia.w	r2, {r0, r1}
 800dad8:	e883 0003 	stmia.w	r3, {r0, r1}
 800dadc:	4619      	mov	r1, r3
 800dade:	a805      	add	r0, sp, #20
 800dae0:	f7fc fba6 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800dae4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800dae8:	2b00      	cmp	r3, #0
 800daea:	dd5b      	ble.n	800dba4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800daec:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800daf0:	2b00      	cmp	r3, #0
 800daf2:	dd57      	ble.n	800dba4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800daf4:	4f2f      	ldr	r7, [pc, #188]	@ (800dbb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800daf6:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800daf8:	683b      	ldr	r3, [r7, #0]
 800dafa:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800dafe:	4b2e      	ldr	r3, [pc, #184]	@ (800dbb8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800db00:	681b      	ldr	r3, [r3, #0]
 800db02:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800db06:	2e00      	cmp	r6, #0
 800db08:	d04c      	beq.n	800dba4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800db0a:	6823      	ldr	r3, [r4, #0]
 800db0c:	4620      	mov	r0, r4
 800db0e:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 800db12:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800db14:	4798      	blx	r3
 800db16:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800db18:	683b      	ldr	r3, [r7, #0]
 800db1a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 800db1e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800db22:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 800db26:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 800db2a:	785b      	ldrb	r3, [r3, #1]
 800db2c:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 800db30:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800db34:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800db36:	9609      	str	r6, [sp, #36]	@ 0x24
 800db38:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800db3c:	4b1f      	ldr	r3, [pc, #124]	@ (800dbbc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800db3e:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 800db42:	681b      	ldr	r3, [r3, #0]
 800db44:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 800db48:	910b      	str	r1, [sp, #44]	@ 0x2c
 800db4a:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 800db4e:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 800db52:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 800db56:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 800db5a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800db5e:	b10a      	cbz	r2, 800db64 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800db60:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 800db62:	b906      	cbnz	r6, 800db66 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800db64:	689e      	ldr	r6, [r3, #8]
 800db66:	af07      	add	r7, sp, #28
 800db68:	4621      	mov	r1, r4
 800db6a:	4638      	mov	r0, r7
 800db6c:	f003 ff40 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800db70:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800db72:	6828      	ldr	r0, [r5, #0]
 800db74:	f7f5 ff22 	bl	80039bc <_ZNK8touchgfx5Texts7getTextEt>
 800db78:	6823      	ldr	r3, [r4, #0]
 800db7a:	4605      	mov	r5, r0
 800db7c:	4620      	mov	r0, r4
 800db7e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800db80:	4798      	blx	r3
 800db82:	6823      	ldr	r3, [r4, #0]
 800db84:	4680      	mov	r8, r0
 800db86:	4620      	mov	r0, r4
 800db88:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800db8c:	4798      	blx	r3
 800db8e:	ab09      	add	r3, sp, #36	@ 0x24
 800db90:	9501      	str	r5, [sp, #4]
 800db92:	9300      	str	r3, [sp, #0]
 800db94:	ab05      	add	r3, sp, #20
 800db96:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800db9a:	4630      	mov	r0, r6
 800db9c:	e897 0006 	ldmia.w	r7, {r1, r2}
 800dba0:	f7f5 febe 	bl	8003920 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800dba4:	b00e      	add	sp, #56	@ 0x38
 800dba6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dbaa:	bf00      	nop
 800dbac:	20016ce4 	.word	0x20016ce4
 800dbb0:	20016cec 	.word	0x20016cec
 800dbb4:	20016ce0 	.word	0x20016ce0
 800dbb8:	20016ce8 	.word	0x20016ce8
 800dbbc:	20016c88 	.word	0x20016c88

0800dbc0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800dbc0:	b538      	push	{r3, r4, r5, lr}
 800dbc2:	4b0e      	ldr	r3, [pc, #56]	@ (800dbfc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800dbc4:	4604      	mov	r4, r0
 800dbc6:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800dbc8:	881b      	ldrh	r3, [r3, #0]
 800dbca:	429a      	cmp	r2, r3
 800dbcc:	d214      	bcs.n	800dbf8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800dbce:	6803      	ldr	r3, [r0, #0]
 800dbd0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800dbd2:	4798      	blx	r3
 800dbd4:	6823      	ldr	r3, [r4, #0]
 800dbd6:	4605      	mov	r5, r0
 800dbd8:	4620      	mov	r0, r4
 800dbda:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800dbdc:	4798      	blx	r3
 800dbde:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800dbe2:	b22d      	sxth	r5, r5
 800dbe4:	4601      	mov	r1, r0
 800dbe6:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800dbea:	bf06      	itte	eq
 800dbec:	4602      	moveq	r2, r0
 800dbee:	4629      	moveq	r1, r5
 800dbf0:	462a      	movne	r2, r5
 800dbf2:	4620      	mov	r0, r4
 800dbf4:	f7fc fd36 	bl	800a664 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800dbf8:	bd38      	pop	{r3, r4, r5, pc}
 800dbfa:	bf00      	nop
 800dbfc:	20016ce4 	.word	0x20016ce4

0800dc00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800dc00:	b530      	push	{r4, r5, lr}
 800dc02:	888b      	ldrh	r3, [r1, #4]
 800dc04:	b085      	sub	sp, #20
 800dc06:	4604      	mov	r4, r0
 800dc08:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800dc0a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800dc0e:	b923      	cbnz	r3, 800dc1a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800dc10:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800dc14:	b90b      	cbnz	r3, 800dc1a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800dc16:	f7ff ffd3 	bl	800dbc0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800dc1a:	6823      	ldr	r3, [r4, #0]
 800dc1c:	466d      	mov	r5, sp
 800dc1e:	4621      	mov	r1, r4
 800dc20:	343c      	adds	r4, #60	@ 0x3c
 800dc22:	4628      	mov	r0, r5
 800dc24:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800dc28:	4798      	blx	r3
 800dc2a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800dc2e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800dc32:	b005      	add	sp, #20
 800dc34:	bd30      	pop	{r4, r5, pc}

0800dc36 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800dc36:	2300      	movs	r3, #0
 800dc38:	8083      	strh	r3, [r0, #4]
 800dc3a:	80c3      	strh	r3, [r0, #6]
 800dc3c:	8003      	strh	r3, [r0, #0]
 800dc3e:	8043      	strh	r3, [r0, #2]
 800dc40:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800dc44:	2bff      	cmp	r3, #255	@ 0xff
 800dc46:	bf01      	itttt	eq
 800dc48:	890b      	ldrheq	r3, [r1, #8]
 800dc4a:	8083      	strheq	r3, [r0, #4]
 800dc4c:	894b      	ldrheq	r3, [r1, #10]
 800dc4e:	80c3      	strheq	r3, [r0, #6]
 800dc50:	4770      	bx	lr
	...

0800dc54 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800dc54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dc56:	4604      	mov	r4, r0
 800dc58:	466b      	mov	r3, sp
 800dc5a:	6808      	ldr	r0, [r1, #0]
 800dc5c:	6849      	ldr	r1, [r1, #4]
 800dc5e:	c303      	stmia	r3!, {r0, r1}
 800dc60:	6823      	ldr	r3, [r4, #0]
 800dc62:	4669      	mov	r1, sp
 800dc64:	4620      	mov	r0, r4
 800dc66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dc68:	4798      	blx	r3
 800dc6a:	4b08      	ldr	r3, [pc, #32]	@ (800dc8c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800dc6c:	681b      	ldr	r3, [r3, #0]
 800dc6e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800dc72:	b10a      	cbz	r2, 800dc78 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800dc74:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800dc76:	b900      	cbnz	r0, 800dc7a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800dc78:	6898      	ldr	r0, [r3, #8]
 800dc7a:	6803      	ldr	r3, [r0, #0]
 800dc7c:	4669      	mov	r1, sp
 800dc7e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800dc80:	6a1d      	ldr	r5, [r3, #32]
 800dc82:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800dc86:	47a8      	blx	r5
 800dc88:	b003      	add	sp, #12
 800dc8a:	bd30      	pop	{r4, r5, pc}
 800dc8c:	20016c88 	.word	0x20016c88

0800dc90 <_ZN8touchgfx3BoxD1Ev>:
 800dc90:	4770      	bx	lr

0800dc92 <_ZN8touchgfx3BoxD0Ev>:
 800dc92:	b510      	push	{r4, lr}
 800dc94:	4604      	mov	r4, r0
 800dc96:	212c      	movs	r1, #44	@ 0x2c
 800dc98:	f013 fe38 	bl	802190c <_ZdlPvj>
 800dc9c:	4620      	mov	r0, r4
 800dc9e:	bd10      	pop	{r4, pc}

0800dca0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800dca0:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800dca4:	b12a      	cbz	r2, 800dcb2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800dca6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800dcaa:	b112      	cbz	r2, 800dcb2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800dcac:	6803      	ldr	r3, [r0, #0]
 800dcae:	695b      	ldr	r3, [r3, #20]
 800dcb0:	4718      	bx	r3
 800dcb2:	4770      	bx	lr

0800dcb4 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800dcb4:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800dcb8:	4770      	bx	lr

0800dcba <_ZN8touchgfx6ButtonD1Ev>:
 800dcba:	4770      	bx	lr

0800dcbc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800dcbc:	b570      	push	{r4, r5, r6, lr}
 800dcbe:	880b      	ldrh	r3, [r1, #0]
 800dcc0:	4605      	mov	r5, r0
 800dcc2:	4604      	mov	r4, r0
 800dcc4:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800dcc6:	8813      	ldrh	r3, [r2, #0]
 800dcc8:	f825 3f30 	strh.w	r3, [r5, #48]!
 800dccc:	4628      	mov	r0, r5
 800dcce:	f005 feb9 	bl	8013a44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800dcd2:	4606      	mov	r6, r0
 800dcd4:	4628      	mov	r0, r5
 800dcd6:	f005 fee9 	bl	8013aac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800dcda:	6823      	ldr	r3, [r4, #0]
 800dcdc:	4605      	mov	r5, r0
 800dcde:	4631      	mov	r1, r6
 800dce0:	4620      	mov	r0, r4
 800dce2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dce4:	4798      	blx	r3
 800dce6:	6823      	ldr	r3, [r4, #0]
 800dce8:	4629      	mov	r1, r5
 800dcea:	4620      	mov	r0, r4
 800dcec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800dcee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dcf2:	4718      	bx	r3

0800dcf4 <_ZN8touchgfx6ButtonD0Ev>:
 800dcf4:	b510      	push	{r4, lr}
 800dcf6:	4604      	mov	r4, r0
 800dcf8:	2134      	movs	r1, #52	@ 0x34
 800dcfa:	f013 fe07 	bl	802190c <_ZdlPvj>
 800dcfe:	4620      	mov	r0, r4
 800dd00:	bd10      	pop	{r4, pc}

0800dd02 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800dd02:	b510      	push	{r4, lr}
 800dd04:	4604      	mov	r4, r0
 800dd06:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800dd08:	b150      	cbz	r0, 800dd20 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800dd0a:	6803      	ldr	r3, [r0, #0]
 800dd0c:	68db      	ldr	r3, [r3, #12]
 800dd0e:	4798      	blx	r3
 800dd10:	b130      	cbz	r0, 800dd20 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800dd12:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800dd14:	4621      	mov	r1, r4
 800dd16:	6803      	ldr	r3, [r0, #0]
 800dd18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dd1c:	689b      	ldr	r3, [r3, #8]
 800dd1e:	4718      	bx	r3
 800dd20:	bd10      	pop	{r4, pc}

0800dd22 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800dd22:	b510      	push	{r4, lr}
 800dd24:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 800dd28:	4604      	mov	r4, r0
 800dd2a:	2bff      	cmp	r3, #255	@ 0xff
 800dd2c:	d006      	beq.n	800dd3c <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800dd2e:	2300      	movs	r3, #0
 800dd30:	8003      	strh	r3, [r0, #0]
 800dd32:	8043      	strh	r3, [r0, #2]
 800dd34:	8083      	strh	r3, [r0, #4]
 800dd36:	80c3      	strh	r3, [r0, #6]
 800dd38:	4620      	mov	r0, r4
 800dd3a:	bd10      	pop	{r4, pc}
 800dd3c:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 800dd40:	b11b      	cbz	r3, 800dd4a <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800dd42:	3130      	adds	r1, #48	@ 0x30
 800dd44:	f005 fee6 	bl	8013b14 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800dd48:	e7f6      	b.n	800dd38 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800dd4a:	312e      	adds	r1, #46	@ 0x2e
 800dd4c:	e7fa      	b.n	800dd44 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800dd50 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800dd50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dd54:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800dd58:	b08a      	sub	sp, #40	@ 0x28
 800dd5a:	4604      	mov	r4, r0
 800dd5c:	4688      	mov	r8, r1
 800dd5e:	2b00      	cmp	r3, #0
 800dd60:	d066      	beq.n	800de30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800dd62:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800dd64:	a805      	add	r0, sp, #20
 800dd66:	f8ad 3014 	strh.w	r3, [sp, #20]
 800dd6a:	f005 fe6b 	bl	8013a44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800dd6e:	4607      	mov	r7, r0
 800dd70:	a805      	add	r0, sp, #20
 800dd72:	f005 fe9b 	bl	8013aac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800dd76:	f9b8 6000 	ldrsh.w	r6, [r8]
 800dd7a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800dd7e:	2300      	movs	r3, #0
 800dd80:	4432      	add	r2, r6
 800dd82:	9306      	str	r3, [sp, #24]
 800dd84:	b292      	uxth	r2, r2
 800dd86:	fa0f fc82 	sxth.w	ip, r2
 800dd8a:	459c      	cmp	ip, r3
 800dd8c:	dd52      	ble.n	800de34 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800dd8e:	42b7      	cmp	r7, r6
 800dd90:	dd50      	ble.n	800de34 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800dd92:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800dd96:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800dd9a:	442b      	add	r3, r5
 800dd9c:	b29b      	uxth	r3, r3
 800dd9e:	b219      	sxth	r1, r3
 800dda0:	2900      	cmp	r1, #0
 800dda2:	dd47      	ble.n	800de34 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800dda4:	42a8      	cmp	r0, r5
 800dda6:	dd45      	ble.n	800de34 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800dda8:	4567      	cmp	r7, ip
 800ddaa:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800ddae:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800ddb2:	bfb8      	it	lt
 800ddb4:	b2ba      	uxthlt	r2, r7
 800ddb6:	4288      	cmp	r0, r1
 800ddb8:	f8ad 6018 	strh.w	r6, [sp, #24]
 800ddbc:	bfb8      	it	lt
 800ddbe:	b283      	uxthlt	r3, r0
 800ddc0:	1b92      	subs	r2, r2, r6
 800ddc2:	f8ad 501a 	strh.w	r5, [sp, #26]
 800ddc6:	1b5b      	subs	r3, r3, r5
 800ddc8:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ddcc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ddd0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800ddd4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800ddd8:	429a      	cmp	r2, r3
 800ddda:	d026      	beq.n	800de2a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800dddc:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800dde0:	2b00      	cmp	r3, #0
 800dde2:	dd22      	ble.n	800de2a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800dde4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800dde8:	2b00      	cmp	r3, #0
 800ddea:	dd1e      	ble.n	800de2a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800ddec:	2300      	movs	r3, #0
 800ddee:	a908      	add	r1, sp, #32
 800ddf0:	4620      	mov	r0, r4
 800ddf2:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800ddf6:	6823      	ldr	r3, [r4, #0]
 800ddf8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ddfa:	4798      	blx	r3
 800ddfc:	4b0f      	ldr	r3, [pc, #60]	@ (800de3c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800ddfe:	681b      	ldr	r3, [r3, #0]
 800de00:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800de04:	b10a      	cbz	r2, 800de0a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800de06:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800de08:	b900      	cbnz	r0, 800de0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800de0a:	6898      	ldr	r0, [r3, #8]
 800de0c:	2501      	movs	r5, #1
 800de0e:	6801      	ldr	r1, [r0, #0]
 800de10:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 800de14:	9502      	str	r5, [sp, #8]
 800de16:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800de1a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800de1e:	9401      	str	r4, [sp, #4]
 800de20:	ac06      	add	r4, sp, #24
 800de22:	9400      	str	r4, [sp, #0]
 800de24:	688c      	ldr	r4, [r1, #8]
 800de26:	a905      	add	r1, sp, #20
 800de28:	47a0      	blx	r4
 800de2a:	b00a      	add	sp, #40	@ 0x28
 800de2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800de30:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 800de32:	e797      	b.n	800dd64 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800de34:	2300      	movs	r3, #0
 800de36:	9307      	str	r3, [sp, #28]
 800de38:	e7ca      	b.n	800ddd0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800de3a:	bf00      	nop
 800de3c:	20016c88 	.word	0x20016c88

0800de40 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800de40:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800de44:	b12a      	cbz	r2, 800de52 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800de46:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800de4a:	b112      	cbz	r2, 800de52 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800de4c:	6803      	ldr	r3, [r0, #0]
 800de4e:	695b      	ldr	r3, [r3, #20]
 800de50:	4718      	bx	r3
 800de52:	4770      	bx	lr

0800de54 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800de54:	4b30      	ldr	r3, [pc, #192]	@ (800df18 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800de56:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800de5a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800de5c:	b08d      	sub	sp, #52	@ 0x34
 800de5e:	881b      	ldrh	r3, [r3, #0]
 800de60:	4604      	mov	r4, r0
 800de62:	460f      	mov	r7, r1
 800de64:	4293      	cmp	r3, r2
 800de66:	d954      	bls.n	800df12 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800de68:	4b2c      	ldr	r3, [pc, #176]	@ (800df1c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800de6a:	6819      	ldr	r1, [r3, #0]
 800de6c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800de70:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800de74:	4a2a      	ldr	r2, [pc, #168]	@ (800df20 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800de76:	6812      	ldr	r2, [r2, #0]
 800de78:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800de7c:	2900      	cmp	r1, #0
 800de7e:	d048      	beq.n	800df12 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800de80:	785a      	ldrb	r2, [r3, #1]
 800de82:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800de86:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800de8a:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800de8e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800de92:	4b24      	ldr	r3, [pc, #144]	@ (800df24 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800de94:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800de98:	681a      	ldr	r2, [r3, #0]
 800de9a:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800de9e:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800dea2:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800dea6:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800dea8:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800deac:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800deb0:	9107      	str	r1, [sp, #28]
 800deb2:	f88d 8020 	strb.w	r8, [sp, #32]
 800deb6:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800deba:	9609      	str	r6, [sp, #36]	@ 0x24
 800debc:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800dec0:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800dec4:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800dec8:	b10b      	cbz	r3, 800dece <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800deca:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800decc:	b905      	cbnz	r5, 800ded0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800dece:	6895      	ldr	r5, [r2, #8]
 800ded0:	ae05      	add	r6, sp, #20
 800ded2:	4621      	mov	r1, r4
 800ded4:	4630      	mov	r0, r6
 800ded6:	f003 fd8b 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800deda:	4b13      	ldr	r3, [pc, #76]	@ (800df28 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800dedc:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800dede:	6818      	ldr	r0, [r3, #0]
 800dee0:	f7f5 fd6c 	bl	80039bc <_ZNK8touchgfx5Texts7getTextEt>
 800dee4:	6823      	ldr	r3, [r4, #0]
 800dee6:	4680      	mov	r8, r0
 800dee8:	4620      	mov	r0, r4
 800deea:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800deec:	4798      	blx	r3
 800deee:	6823      	ldr	r3, [r4, #0]
 800def0:	4681      	mov	r9, r0
 800def2:	4620      	mov	r0, r4
 800def4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800def8:	4798      	blx	r3
 800defa:	ab07      	add	r3, sp, #28
 800defc:	f8cd 8004 	str.w	r8, [sp, #4]
 800df00:	9300      	str	r3, [sp, #0]
 800df02:	463b      	mov	r3, r7
 800df04:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800df08:	4628      	mov	r0, r5
 800df0a:	e896 0006 	ldmia.w	r6, {r1, r2}
 800df0e:	f7f5 fd07 	bl	8003920 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800df12:	b00d      	add	sp, #52	@ 0x34
 800df14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800df18:	20016ce4 	.word	0x20016ce4
 800df1c:	20016ce0 	.word	0x20016ce0
 800df20:	20016ce8 	.word	0x20016ce8
 800df24:	20016c88 	.word	0x20016c88
 800df28:	20016cec 	.word	0x20016cec

0800df2c <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800df2c:	4770      	bx	lr

0800df2e <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800df2e:	b510      	push	{r4, lr}
 800df30:	4604      	mov	r4, r0
 800df32:	2134      	movs	r1, #52	@ 0x34
 800df34:	f013 fcea 	bl	802190c <_ZdlPvj>
 800df38:	4620      	mov	r0, r4
 800df3a:	bd10      	pop	{r4, pc}

0800df3c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800df3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df40:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800df42:	4604      	mov	r4, r0
 800df44:	460e      	mov	r6, r1
 800df46:	b08e      	sub	sp, #56	@ 0x38
 800df48:	b218      	sxth	r0, r3
 800df4a:	8921      	ldrh	r1, [r4, #8]
 800df4c:	005b      	lsls	r3, r3, #1
 800df4e:	8962      	ldrh	r2, [r4, #10]
 800df50:	f8ad 0000 	strh.w	r0, [sp]
 800df54:	b29b      	uxth	r3, r3
 800df56:	f8ad 0002 	strh.w	r0, [sp, #2]
 800df5a:	1ac9      	subs	r1, r1, r3
 800df5c:	1ad3      	subs	r3, r2, r3
 800df5e:	b209      	sxth	r1, r1
 800df60:	b21b      	sxth	r3, r3
 800df62:	2900      	cmp	r1, #0
 800df64:	f8ad 1004 	strh.w	r1, [sp, #4]
 800df68:	f8ad 3006 	strh.w	r3, [sp, #6]
 800df6c:	dd5e      	ble.n	800e02c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800df6e:	2b00      	cmp	r3, #0
 800df70:	dd5c      	ble.n	800e02c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800df72:	6830      	ldr	r0, [r6, #0]
 800df74:	ab02      	add	r3, sp, #8
 800df76:	6871      	ldr	r1, [r6, #4]
 800df78:	c303      	stmia	r3!, {r0, r1}
 800df7a:	4669      	mov	r1, sp
 800df7c:	a802      	add	r0, sp, #8
 800df7e:	f7fc f957 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800df82:	4620      	mov	r0, r4
 800df84:	a902      	add	r1, sp, #8
 800df86:	f7ff fe65 	bl	800dc54 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800df8a:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 800df8c:	2800      	cmp	r0, #0
 800df8e:	d05f      	beq.n	800e050 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800df90:	8963      	ldrh	r3, [r4, #10]
 800df92:	b202      	sxth	r2, r0
 800df94:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800df98:	2500      	movs	r5, #0
 800df9a:	1a1f      	subs	r7, r3, r0
 800df9c:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800dfa0:	f8ad 101c 	strh.w	r1, [sp, #28]
 800dfa4:	b21b      	sxth	r3, r3
 800dfa6:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800dfaa:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 800dfae:	af04      	add	r7, sp, #16
 800dfb0:	1a09      	subs	r1, r1, r0
 800dfb2:	9506      	str	r5, [sp, #24]
 800dfb4:	f8ad 201e 	strh.w	r2, [sp, #30]
 800dfb8:	f8ad 5020 	strh.w	r5, [sp, #32]
 800dfbc:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 800dfc0:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 800dfc4:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800dfc8:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800dfcc:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800dfd0:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 800dfd4:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800dfd8:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800dfdc:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800dfe0:	ab06      	add	r3, sp, #24
 800dfe2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800dfe6:	e893 0003 	ldmia.w	r3, {r0, r1}
 800dfea:	e887 0003 	stmia.w	r7, {r0, r1}
 800dfee:	4631      	mov	r1, r6
 800dff0:	4638      	mov	r0, r7
 800dff2:	f7fc f91d 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800dff6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800dffa:	2b00      	cmp	r3, #0
 800dffc:	dd12      	ble.n	800e024 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800dffe:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e002:	2b00      	cmp	r3, #0
 800e004:	dd0e      	ble.n	800e024 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e006:	6823      	ldr	r3, [r4, #0]
 800e008:	4639      	mov	r1, r7
 800e00a:	4620      	mov	r0, r4
 800e00c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e00e:	4798      	blx	r3
 800e010:	f7f4 fa8e 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800e014:	6803      	ldr	r3, [r0, #0]
 800e016:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800e018:	4639      	mov	r1, r7
 800e01a:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800e01e:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800e022:	47c0      	blx	r8
 800e024:	3501      	adds	r5, #1
 800e026:	2d04      	cmp	r5, #4
 800e028:	d1da      	bne.n	800dfe0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800e02a:	e011      	b.n	800e050 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e02c:	6830      	ldr	r0, [r6, #0]
 800e02e:	ab06      	add	r3, sp, #24
 800e030:	6871      	ldr	r1, [r6, #4]
 800e032:	c303      	stmia	r3!, {r0, r1}
 800e034:	6823      	ldr	r3, [r4, #0]
 800e036:	a906      	add	r1, sp, #24
 800e038:	4620      	mov	r0, r4
 800e03a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e03c:	4798      	blx	r3
 800e03e:	f7f4 fa77 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 800e042:	6803      	ldr	r3, [r0, #0]
 800e044:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800e046:	a906      	add	r1, sp, #24
 800e048:	6a1d      	ldr	r5, [r3, #32]
 800e04a:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800e04e:	47a8      	blx	r5
 800e050:	b00e      	add	sp, #56	@ 0x38
 800e052:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e056 <_ZN8touchgfx5ImageD1Ev>:
 800e056:	4770      	bx	lr

0800e058 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e058:	b570      	push	{r4, r5, r6, lr}
 800e05a:	880b      	ldrh	r3, [r1, #0]
 800e05c:	460d      	mov	r5, r1
 800e05e:	4604      	mov	r4, r0
 800e060:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800e062:	4608      	mov	r0, r1
 800e064:	f005 fcee 	bl	8013a44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e068:	4606      	mov	r6, r0
 800e06a:	4628      	mov	r0, r5
 800e06c:	f005 fd1e 	bl	8013aac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e070:	6823      	ldr	r3, [r4, #0]
 800e072:	4605      	mov	r5, r0
 800e074:	4631      	mov	r1, r6
 800e076:	4620      	mov	r0, r4
 800e078:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e07a:	4798      	blx	r3
 800e07c:	6823      	ldr	r3, [r4, #0]
 800e07e:	4629      	mov	r1, r5
 800e080:	4620      	mov	r0, r4
 800e082:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e084:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e088:	4718      	bx	r3

0800e08a <_ZN8touchgfx5ImageD0Ev>:
 800e08a:	b510      	push	{r4, lr}
 800e08c:	4604      	mov	r4, r0
 800e08e:	212c      	movs	r1, #44	@ 0x2c
 800e090:	f013 fc3c 	bl	802190c <_ZdlPvj>
 800e094:	4620      	mov	r0, r4
 800e096:	bd10      	pop	{r4, pc}

0800e098 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e098:	b510      	push	{r4, lr}
 800e09a:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800e09e:	4604      	mov	r4, r0
 800e0a0:	2bff      	cmp	r3, #255	@ 0xff
 800e0a2:	d006      	beq.n	800e0b2 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e0a4:	2300      	movs	r3, #0
 800e0a6:	8003      	strh	r3, [r0, #0]
 800e0a8:	8043      	strh	r3, [r0, #2]
 800e0aa:	8083      	strh	r3, [r0, #4]
 800e0ac:	80c3      	strh	r3, [r0, #6]
 800e0ae:	4620      	mov	r0, r4
 800e0b0:	bd10      	pop	{r4, pc}
 800e0b2:	3126      	adds	r1, #38	@ 0x26
 800e0b4:	f005 fd2e 	bl	8013b14 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e0b8:	e7f9      	b.n	800e0ae <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800e0ba <_ZNK8touchgfx5Image17invalidateContentEv>:
 800e0ba:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800e0be:	b12a      	cbz	r2, 800e0cc <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e0c0:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800e0c4:	b112      	cbz	r2, 800e0cc <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e0c6:	6803      	ldr	r3, [r0, #0]
 800e0c8:	695b      	ldr	r3, [r3, #20]
 800e0ca:	4718      	bx	r3
 800e0cc:	4770      	bx	lr
	...

0800e0d0 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e0d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e0d4:	4604      	mov	r4, r0
 800e0d6:	b088      	sub	sp, #32
 800e0d8:	2500      	movs	r5, #0
 800e0da:	460f      	mov	r7, r1
 800e0dc:	f854 3b26 	ldr.w	r3, [r4], #38
 800e0e0:	a904      	add	r1, sp, #16
 800e0e2:	4606      	mov	r6, r0
 800e0e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e0e6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e0ea:	4798      	blx	r3
 800e0ec:	4620      	mov	r0, r4
 800e0ee:	f005 fca9 	bl	8013a44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e0f2:	4680      	mov	r8, r0
 800e0f4:	4620      	mov	r0, r4
 800e0f6:	f005 fcd9 	bl	8013aac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e0fa:	9506      	str	r5, [sp, #24]
 800e0fc:	ad06      	add	r5, sp, #24
 800e0fe:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e102:	4639      	mov	r1, r7
 800e104:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e108:	4628      	mov	r0, r5
 800e10a:	f7fc f891 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 800e10e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e112:	2b00      	cmp	r3, #0
 800e114:	dd19      	ble.n	800e14a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e116:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e11a:	2b00      	cmp	r3, #0
 800e11c:	dd15      	ble.n	800e14a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e11e:	4b0c      	ldr	r3, [pc, #48]	@ (800e150 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800e120:	681b      	ldr	r3, [r3, #0]
 800e122:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800e126:	b10a      	cbz	r2, 800e12c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800e128:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800e12a:	b900      	cbnz	r0, 800e12e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800e12c:	6898      	ldr	r0, [r3, #8]
 800e12e:	2701      	movs	r7, #1
 800e130:	6801      	ldr	r1, [r0, #0]
 800e132:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800e136:	9702      	str	r7, [sp, #8]
 800e138:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800e13c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800e140:	e9cd 5600 	strd	r5, r6, [sp]
 800e144:	688d      	ldr	r5, [r1, #8]
 800e146:	4621      	mov	r1, r4
 800e148:	47a8      	blx	r5
 800e14a:	b008      	add	sp, #32
 800e14c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e150:	20016c88 	.word	0x20016c88

0800e154 <_ZN8touchgfx7OutlineD1Ev>:
 800e154:	4770      	bx	lr

0800e156 <_ZN8touchgfx7OutlineD0Ev>:
 800e156:	b510      	push	{r4, lr}
 800e158:	4604      	mov	r4, r0
 800e15a:	2130      	movs	r1, #48	@ 0x30
 800e15c:	f013 fbd6 	bl	802190c <_ZdlPvj>
 800e160:	4620      	mov	r0, r4
 800e162:	bd10      	pop	{r4, pc}

0800e164 <_ZN8touchgfx7Outline5resetEv>:
 800e164:	b510      	push	{r4, lr}
 800e166:	4604      	mov	r4, r0
 800e168:	f000 fe86 	bl	800ee78 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800e16c:	60e0      	str	r0, [r4, #12]
 800e16e:	f000 fe89 	bl	800ee84 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800e172:	68e3      	ldr	r3, [r4, #12]
 800e174:	08c0      	lsrs	r0, r0, #3
 800e176:	2200      	movs	r2, #0
 800e178:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800e17c:	6123      	str	r3, [r4, #16]
 800e17e:	3801      	subs	r0, #1
 800e180:	60a2      	str	r2, [r4, #8]
 800e182:	6060      	str	r0, [r4, #4]
 800e184:	8019      	strh	r1, [r3, #0]
 800e186:	8059      	strh	r1, [r3, #2]
 800e188:	809a      	strh	r2, [r3, #4]
 800e18a:	80da      	strh	r2, [r3, #6]
 800e18c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e18e:	f023 0301 	bic.w	r3, r3, #1
 800e192:	f043 0302 	orr.w	r3, r3, #2
 800e196:	6263      	str	r3, [r4, #36]	@ 0x24
 800e198:	bd10      	pop	{r4, pc}
	...

0800e19c <_ZN8touchgfx7OutlineC1Ev>:
 800e19c:	4b0a      	ldr	r3, [pc, #40]	@ (800e1c8 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800e19e:	b510      	push	{r4, lr}
 800e1a0:	6003      	str	r3, [r0, #0]
 800e1a2:	2300      	movs	r3, #0
 800e1a4:	4604      	mov	r4, r0
 800e1a6:	6243      	str	r3, [r0, #36]	@ 0x24
 800e1a8:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800e1ac:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e1b0:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800e1b4:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800e1b8:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800e1bc:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800e1c0:	f7ff ffd0 	bl	800e164 <_ZN8touchgfx7Outline5resetEv>
 800e1c4:	4620      	mov	r0, r4
 800e1c6:	bd10      	pop	{r4, pc}
 800e1c8:	080255dc 	.word	0x080255dc

0800e1cc <_ZN8touchgfx7Outline10renderLineEiiii>:
 800e1cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e1d0:	b093      	sub	sp, #76	@ 0x4c
 800e1d2:	1156      	asrs	r6, r2, #5
 800e1d4:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800e1d6:	9305      	str	r3, [sp, #20]
 800e1d8:	1153      	asrs	r3, r2, #5
 800e1da:	f004 051f 	and.w	r5, r4, #31
 800e1de:	9303      	str	r3, [sp, #12]
 800e1e0:	1163      	asrs	r3, r4, #5
 800e1e2:	9504      	str	r5, [sp, #16]
 800e1e4:	1165      	asrs	r5, r4, #5
 800e1e6:	9306      	str	r3, [sp, #24]
 800e1e8:	f002 031f 	and.w	r3, r2, #31
 800e1ec:	42ae      	cmp	r6, r5
 800e1ee:	f040 80f4 	bne.w	800e3da <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
 800e1f2:	9c04      	ldr	r4, [sp, #16]
 800e1f4:	9a05      	ldr	r2, [sp, #20]
 800e1f6:	42a3      	cmp	r3, r4
 800e1f8:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800e1fc:	6902      	ldr	r2, [r0, #16]
 800e1fe:	d125      	bne.n	800e24c <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
 800e200:	f9b2 3000 	ldrsh.w	r3, [r2]
 800e204:	459e      	cmp	lr, r3
 800e206:	d103      	bne.n	800e210 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
 800e208:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e20c:	429e      	cmp	r6, r3
 800e20e:	d035      	beq.n	800e27c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e210:	88d1      	ldrh	r1, [r2, #6]
 800e212:	8893      	ldrh	r3, [r2, #4]
 800e214:	430b      	orrs	r3, r1
 800e216:	d010      	beq.n	800e23a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800e218:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e21c:	2b00      	cmp	r3, #0
 800e21e:	db0c      	blt.n	800e23a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800e220:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800e222:	428b      	cmp	r3, r1
 800e224:	da09      	bge.n	800e23a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800e226:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e22a:	428b      	cmp	r3, r1
 800e22c:	f103 0301 	add.w	r3, r3, #1
 800e230:	bf38      	it	cc
 800e232:	3208      	addcc	r2, #8
 800e234:	6083      	str	r3, [r0, #8]
 800e236:	bf38      	it	cc
 800e238:	6102      	strcc	r2, [r0, #16]
 800e23a:	6903      	ldr	r3, [r0, #16]
 800e23c:	9a03      	ldr	r2, [sp, #12]
 800e23e:	f8a3 e000 	strh.w	lr, [r3]
 800e242:	805a      	strh	r2, [r3, #2]
 800e244:	2200      	movs	r2, #0
 800e246:	809a      	strh	r2, [r3, #4]
 800e248:	80da      	strh	r2, [r3, #6]
 800e24a:	e017      	b.n	800e27c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e24c:	9c05      	ldr	r4, [sp, #20]
 800e24e:	114e      	asrs	r6, r1, #5
 800e250:	f001 0c1f 	and.w	ip, r1, #31
 800e254:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800e258:	f004 041f 	and.w	r4, r4, #31
 800e25c:	4576      	cmp	r6, lr
 800e25e:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800e262:	9402      	str	r4, [sp, #8]
 800e264:	9c04      	ldr	r4, [sp, #16]
 800e266:	eba4 0403 	sub.w	r4, r4, r3
 800e26a:	d10a      	bne.n	800e282 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
 800e26c:	9b02      	ldr	r3, [sp, #8]
 800e26e:	44a0      	add	r8, r4
 800e270:	449c      	add	ip, r3
 800e272:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e276:	fb04 a40c 	mla	r4, r4, ip, sl
 800e27a:	80d4      	strh	r4, [r2, #6]
 800e27c:	b013      	add	sp, #76	@ 0x4c
 800e27e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e282:	9d05      	ldr	r5, [sp, #20]
 800e284:	1a69      	subs	r1, r5, r1
 800e286:	bf51      	iteee	pl
 800e288:	f1cc 0520 	rsbpl	r5, ip, #32
 800e28c:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e290:	4249      	negmi	r1, r1
 800e292:	2500      	movmi	r5, #0
 800e294:	bf5d      	ittte	pl
 800e296:	436c      	mulpl	r4, r5
 800e298:	2520      	movpl	r5, #32
 800e29a:	f04f 0901 	movpl.w	r9, #1
 800e29e:	f04f 39ff 	movmi.w	r9, #4294967295
 800e2a2:	9501      	str	r5, [sp, #4]
 800e2a4:	9f01      	ldr	r7, [sp, #4]
 800e2a6:	444e      	add	r6, r9
 800e2a8:	fb94 f5f1 	sdiv	r5, r4, r1
 800e2ac:	fb01 4415 	mls	r4, r1, r5, r4
 800e2b0:	44bc      	add	ip, r7
 800e2b2:	2c00      	cmp	r4, #0
 800e2b4:	bfbc      	itt	lt
 800e2b6:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e2ba:	1864      	addlt	r4, r4, r1
 800e2bc:	44a8      	add	r8, r5
 800e2be:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e2c2:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e2c6:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e2ca:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e2ce:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e2d2:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800e2d6:	ea58 0202 	orrs.w	r2, r8, r2
 800e2da:	d011      	beq.n	800e300 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800e2dc:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e2e0:	f1b8 0f00 	cmp.w	r8, #0
 800e2e4:	db0c      	blt.n	800e300 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800e2e6:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800e2e8:	4590      	cmp	r8, r2
 800e2ea:	da09      	bge.n	800e300 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800e2ec:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800e2f0:	4590      	cmp	r8, r2
 800e2f2:	bf3c      	itt	cc
 800e2f4:	f10c 0208 	addcc.w	r2, ip, #8
 800e2f8:	6102      	strcc	r2, [r0, #16]
 800e2fa:	f108 0201 	add.w	r2, r8, #1
 800e2fe:	6082      	str	r2, [r0, #8]
 800e300:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e304:	2700      	movs	r7, #0
 800e306:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e30a:	45b6      	cmp	lr, r6
 800e30c:	f8ac 6000 	strh.w	r6, [ip]
 800e310:	442b      	add	r3, r5
 800e312:	f8ac 2002 	strh.w	r2, [ip, #2]
 800e316:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e31a:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e31e:	d04b      	beq.n	800e3b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
 800e320:	9f04      	ldr	r7, [sp, #16]
 800e322:	1a64      	subs	r4, r4, r1
 800e324:	f04f 0a00 	mov.w	sl, #0
 800e328:	1aff      	subs	r7, r7, r3
 800e32a:	443d      	add	r5, r7
 800e32c:	016d      	lsls	r5, r5, #5
 800e32e:	fb95 f8f1 	sdiv	r8, r5, r1
 800e332:	fb01 5518 	mls	r5, r1, r8, r5
 800e336:	2d00      	cmp	r5, #0
 800e338:	bfbc      	itt	lt
 800e33a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e33e:	186d      	addlt	r5, r5, r1
 800e340:	f108 0701 	add.w	r7, r8, #1
 800e344:	9703      	str	r7, [sp, #12]
 800e346:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e34a:	1964      	adds	r4, r4, r5
 800e34c:	444e      	add	r6, r9
 800e34e:	bf54      	ite	pl
 800e350:	9f03      	ldrpl	r7, [sp, #12]
 800e352:	4647      	movmi	r7, r8
 800e354:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e358:	bf58      	it	pl
 800e35a:	1a64      	subpl	r4, r4, r1
 800e35c:	443b      	add	r3, r7
 800e35e:	44bb      	add	fp, r7
 800e360:	f8ac b004 	strh.w	fp, [ip, #4]
 800e364:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e368:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e36c:	f8ac b006 	strh.w	fp, [ip, #6]
 800e370:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e374:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e378:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e37c:	ea5b 0707 	orrs.w	r7, fp, r7
 800e380:	d011      	beq.n	800e3a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800e382:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e386:	f1bb 0f00 	cmp.w	fp, #0
 800e38a:	db0c      	blt.n	800e3a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800e38c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e38e:	45bb      	cmp	fp, r7
 800e390:	da09      	bge.n	800e3a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800e392:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e396:	45bb      	cmp	fp, r7
 800e398:	bf3c      	itt	cc
 800e39a:	f10c 0708 	addcc.w	r7, ip, #8
 800e39e:	6107      	strcc	r7, [r0, #16]
 800e3a0:	f10b 0701 	add.w	r7, fp, #1
 800e3a4:	6087      	str	r7, [r0, #8]
 800e3a6:	6907      	ldr	r7, [r0, #16]
 800e3a8:	45b6      	cmp	lr, r6
 800e3aa:	803e      	strh	r6, [r7, #0]
 800e3ac:	807a      	strh	r2, [r7, #2]
 800e3ae:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e3b2:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e3b6:	d1c6      	bne.n	800e346 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
 800e3b8:	9a04      	ldr	r2, [sp, #16]
 800e3ba:	1ad3      	subs	r3, r2, r3
 800e3bc:	6902      	ldr	r2, [r0, #16]
 800e3be:	8891      	ldrh	r1, [r2, #4]
 800e3c0:	88d6      	ldrh	r6, [r2, #6]
 800e3c2:	4419      	add	r1, r3
 800e3c4:	8091      	strh	r1, [r2, #4]
 800e3c6:	9902      	ldr	r1, [sp, #8]
 800e3c8:	f101 0c20 	add.w	ip, r1, #32
 800e3cc:	9901      	ldr	r1, [sp, #4]
 800e3ce:	ebac 0c01 	sub.w	ip, ip, r1
 800e3d2:	fb03 630c 	mla	r3, r3, ip, r6
 800e3d6:	80d3      	strh	r3, [r2, #6]
 800e3d8:	e750      	b.n	800e27c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e3da:	9d05      	ldr	r5, [sp, #20]
 800e3dc:	1aa2      	subs	r2, r4, r2
 800e3de:	eba5 0501 	sub.w	r5, r5, r1
 800e3e2:	9202      	str	r2, [sp, #8]
 800e3e4:	9508      	str	r5, [sp, #32]
 800e3e6:	f140 8128 	bpl.w	800e63a <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
 800e3ea:	9a03      	ldr	r2, [sp, #12]
 800e3ec:	2a00      	cmp	r2, #0
 800e3ee:	f6ff af45 	blt.w	800e27c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e3f2:	9a02      	ldr	r2, [sp, #8]
 800e3f4:	f04f 34ff 	mov.w	r4, #4294967295
 800e3f8:	4252      	negs	r2, r2
 800e3fa:	940b      	str	r4, [sp, #44]	@ 0x2c
 800e3fc:	2400      	movs	r4, #0
 800e3fe:	9202      	str	r2, [sp, #8]
 800e400:	9a06      	ldr	r2, [sp, #24]
 800e402:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800e406:	9206      	str	r2, [sp, #24]
 800e408:	462a      	mov	r2, r5
 800e40a:	435a      	muls	r2, r3
 800e40c:	9401      	str	r4, [sp, #4]
 800e40e:	9c02      	ldr	r4, [sp, #8]
 800e410:	9d02      	ldr	r5, [sp, #8]
 800e412:	fb92 f4f4 	sdiv	r4, r2, r4
 800e416:	fb05 2214 	mls	r2, r5, r4, r2
 800e41a:	2a00      	cmp	r2, #0
 800e41c:	9207      	str	r2, [sp, #28]
 800e41e:	bfbc      	itt	lt
 800e420:	1952      	addlt	r2, r2, r5
 800e422:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e426:	6905      	ldr	r5, [r0, #16]
 800e428:	bfb8      	it	lt
 800e42a:	9207      	strlt	r2, [sp, #28]
 800e42c:	eb04 0901 	add.w	r9, r4, r1
 800e430:	9a01      	ldr	r2, [sp, #4]
 800e432:	ea4f 1669 	mov.w	r6, r9, asr #5
 800e436:	429a      	cmp	r2, r3
 800e438:	f040 8111 	bne.w	800e65e <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
 800e43c:	f9b5 3000 	ldrsh.w	r3, [r5]
 800e440:	429e      	cmp	r6, r3
 800e442:	d104      	bne.n	800e44e <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
 800e444:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e448:	9a03      	ldr	r2, [sp, #12]
 800e44a:	429a      	cmp	r2, r3
 800e44c:	d01b      	beq.n	800e486 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800e44e:	88ea      	ldrh	r2, [r5, #6]
 800e450:	88ab      	ldrh	r3, [r5, #4]
 800e452:	4313      	orrs	r3, r2
 800e454:	d010      	beq.n	800e478 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800e456:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800e45a:	2a00      	cmp	r2, #0
 800e45c:	db0c      	blt.n	800e478 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800e45e:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e460:	429a      	cmp	r2, r3
 800e462:	da09      	bge.n	800e478 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800e464:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800e468:	429a      	cmp	r2, r3
 800e46a:	f102 0201 	add.w	r2, r2, #1
 800e46e:	bf38      	it	cc
 800e470:	3508      	addcc	r5, #8
 800e472:	6082      	str	r2, [r0, #8]
 800e474:	bf38      	it	cc
 800e476:	6105      	strcc	r5, [r0, #16]
 800e478:	6903      	ldr	r3, [r0, #16]
 800e47a:	9a03      	ldr	r2, [sp, #12]
 800e47c:	801e      	strh	r6, [r3, #0]
 800e47e:	805a      	strh	r2, [r3, #2]
 800e480:	2200      	movs	r2, #0
 800e482:	809a      	strh	r2, [r3, #4]
 800e484:	80da      	strh	r2, [r3, #6]
 800e486:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e488:	9a03      	ldr	r2, [sp, #12]
 800e48a:	6901      	ldr	r1, [r0, #16]
 800e48c:	441a      	add	r2, r3
 800e48e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800e492:	42b3      	cmp	r3, r6
 800e494:	d103      	bne.n	800e49e <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
 800e496:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800e49a:	429a      	cmp	r2, r3
 800e49c:	d01a      	beq.n	800e4d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
 800e49e:	88cc      	ldrh	r4, [r1, #6]
 800e4a0:	888b      	ldrh	r3, [r1, #4]
 800e4a2:	4323      	orrs	r3, r4
 800e4a4:	d010      	beq.n	800e4c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800e4a6:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800e4aa:	2c00      	cmp	r4, #0
 800e4ac:	db0c      	blt.n	800e4c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800e4ae:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e4b0:	429c      	cmp	r4, r3
 800e4b2:	da09      	bge.n	800e4c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800e4b4:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800e4b8:	429c      	cmp	r4, r3
 800e4ba:	f104 0401 	add.w	r4, r4, #1
 800e4be:	bf38      	it	cc
 800e4c0:	3108      	addcc	r1, #8
 800e4c2:	6084      	str	r4, [r0, #8]
 800e4c4:	bf38      	it	cc
 800e4c6:	6101      	strcc	r1, [r0, #16]
 800e4c8:	6903      	ldr	r3, [r0, #16]
 800e4ca:	2100      	movs	r1, #0
 800e4cc:	801e      	strh	r6, [r3, #0]
 800e4ce:	805a      	strh	r2, [r3, #2]
 800e4d0:	8099      	strh	r1, [r3, #4]
 800e4d2:	80d9      	strh	r1, [r3, #6]
 800e4d4:	9b06      	ldr	r3, [sp, #24]
 800e4d6:	4293      	cmp	r3, r2
 800e4d8:	f000 8082 	beq.w	800e5e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
 800e4dc:	9b08      	ldr	r3, [sp, #32]
 800e4de:	9902      	ldr	r1, [sp, #8]
 800e4e0:	015b      	lsls	r3, r3, #5
 800e4e2:	9c02      	ldr	r4, [sp, #8]
 800e4e4:	fb93 f1f1 	sdiv	r1, r3, r1
 800e4e8:	fb04 3311 	mls	r3, r4, r1, r3
 800e4ec:	9103      	str	r1, [sp, #12]
 800e4ee:	2b00      	cmp	r3, #0
 800e4f0:	9308      	str	r3, [sp, #32]
 800e4f2:	da04      	bge.n	800e4fe <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
 800e4f4:	1e4b      	subs	r3, r1, #1
 800e4f6:	9303      	str	r3, [sp, #12]
 800e4f8:	9b08      	ldr	r3, [sp, #32]
 800e4fa:	4423      	add	r3, r4
 800e4fc:	9308      	str	r3, [sp, #32]
 800e4fe:	9b07      	ldr	r3, [sp, #28]
 800e500:	464f      	mov	r7, r9
 800e502:	9902      	ldr	r1, [sp, #8]
 800e504:	2600      	movs	r6, #0
 800e506:	1a5b      	subs	r3, r3, r1
 800e508:	9307      	str	r3, [sp, #28]
 800e50a:	9b01      	ldr	r3, [sp, #4]
 800e50c:	f1c3 0320 	rsb	r3, r3, #32
 800e510:	930e      	str	r3, [sp, #56]	@ 0x38
 800e512:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800e514:	9b01      	ldr	r3, [sp, #4]
 800e516:	1a5b      	subs	r3, r3, r1
 800e518:	930a      	str	r3, [sp, #40]	@ 0x28
 800e51a:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800e51e:	185b      	adds	r3, r3, r1
 800e520:	bf58      	it	pl
 800e522:	9902      	ldrpl	r1, [sp, #8]
 800e524:	9307      	str	r3, [sp, #28]
 800e526:	bf57      	itett	pl
 800e528:	1a5b      	subpl	r3, r3, r1
 800e52a:	9903      	ldrmi	r1, [sp, #12]
 800e52c:	9307      	strpl	r3, [sp, #28]
 800e52e:	9b03      	ldrpl	r3, [sp, #12]
 800e530:	bf58      	it	pl
 800e532:	1c59      	addpl	r1, r3, #1
 800e534:	2a00      	cmp	r2, #0
 800e536:	4489      	add	r9, r1
 800e538:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800e53c:	db2e      	blt.n	800e59c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800e53e:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e540:	4293      	cmp	r3, r2
 800e542:	dd2b      	ble.n	800e59c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800e544:	9c01      	ldr	r4, [sp, #4]
 800e546:	6905      	ldr	r5, [r0, #16]
 800e548:	46a0      	mov	r8, r4
 800e54a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800e54c:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800e550:	45a0      	cmp	r8, r4
 800e552:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800e556:	f040 814c 	bne.w	800e7f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
 800e55a:	f9b5 1000 	ldrsh.w	r1, [r5]
 800e55e:	4551      	cmp	r1, sl
 800e560:	d103      	bne.n	800e56a <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
 800e562:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e566:	4291      	cmp	r1, r2
 800e568:	d018      	beq.n	800e59c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800e56a:	ea5c 010e 	orrs.w	r1, ip, lr
 800e56e:	d00f      	beq.n	800e590 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800e570:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e574:	2900      	cmp	r1, #0
 800e576:	db0b      	blt.n	800e590 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800e578:	428b      	cmp	r3, r1
 800e57a:	dd09      	ble.n	800e590 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800e57c:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800e580:	4299      	cmp	r1, r3
 800e582:	f101 0101 	add.w	r1, r1, #1
 800e586:	bf38      	it	cc
 800e588:	3508      	addcc	r5, #8
 800e58a:	6081      	str	r1, [r0, #8]
 800e58c:	bf38      	it	cc
 800e58e:	6105      	strcc	r5, [r0, #16]
 800e590:	6903      	ldr	r3, [r0, #16]
 800e592:	f8a3 a000 	strh.w	sl, [r3]
 800e596:	805a      	strh	r2, [r3, #2]
 800e598:	809e      	strh	r6, [r3, #4]
 800e59a:	80de      	strh	r6, [r3, #6]
 800e59c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e59e:	6901      	ldr	r1, [r0, #16]
 800e5a0:	441a      	add	r2, r3
 800e5a2:	88cc      	ldrh	r4, [r1, #6]
 800e5a4:	888b      	ldrh	r3, [r1, #4]
 800e5a6:	4323      	orrs	r3, r4
 800e5a8:	d010      	beq.n	800e5cc <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800e5aa:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800e5ae:	2c00      	cmp	r4, #0
 800e5b0:	db0c      	blt.n	800e5cc <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800e5b2:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e5b4:	429c      	cmp	r4, r3
 800e5b6:	da09      	bge.n	800e5cc <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800e5b8:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800e5bc:	429c      	cmp	r4, r3
 800e5be:	f104 0401 	add.w	r4, r4, #1
 800e5c2:	bf38      	it	cc
 800e5c4:	3108      	addcc	r1, #8
 800e5c6:	6084      	str	r4, [r0, #8]
 800e5c8:	bf38      	it	cc
 800e5ca:	6101      	strcc	r1, [r0, #16]
 800e5cc:	6903      	ldr	r3, [r0, #16]
 800e5ce:	464f      	mov	r7, r9
 800e5d0:	f8a3 a000 	strh.w	sl, [r3]
 800e5d4:	805a      	strh	r2, [r3, #2]
 800e5d6:	809e      	strh	r6, [r3, #4]
 800e5d8:	80de      	strh	r6, [r3, #6]
 800e5da:	9b06      	ldr	r3, [sp, #24]
 800e5dc:	4293      	cmp	r3, r2
 800e5de:	d19c      	bne.n	800e51a <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
 800e5e0:	9b01      	ldr	r3, [sp, #4]
 800e5e2:	6907      	ldr	r7, [r0, #16]
 800e5e4:	f1c3 0620 	rsb	r6, r3, #32
 800e5e8:	9b05      	ldr	r3, [sp, #20]
 800e5ea:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800e5ee:	9b04      	ldr	r3, [sp, #16]
 800e5f0:	429e      	cmp	r6, r3
 800e5f2:	f040 81c7 	bne.w	800e984 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
 800e5f6:	f9b7 3000 	ldrsh.w	r3, [r7]
 800e5fa:	459e      	cmp	lr, r3
 800e5fc:	d104      	bne.n	800e608 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
 800e5fe:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e602:	429a      	cmp	r2, r3
 800e604:	f43f ae3a 	beq.w	800e27c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e608:	88f9      	ldrh	r1, [r7, #6]
 800e60a:	88bb      	ldrh	r3, [r7, #4]
 800e60c:	430b      	orrs	r3, r1
 800e60e:	d010      	beq.n	800e632 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800e610:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e614:	2b00      	cmp	r3, #0
 800e616:	db0c      	blt.n	800e632 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800e618:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800e61a:	428b      	cmp	r3, r1
 800e61c:	da09      	bge.n	800e632 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800e61e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e622:	428b      	cmp	r3, r1
 800e624:	f103 0301 	add.w	r3, r3, #1
 800e628:	bf38      	it	cc
 800e62a:	3708      	addcc	r7, #8
 800e62c:	6083      	str	r3, [r0, #8]
 800e62e:	bf38      	it	cc
 800e630:	6107      	strcc	r7, [r0, #16]
 800e632:	6903      	ldr	r3, [r0, #16]
 800e634:	f8a3 e000 	strh.w	lr, [r3]
 800e638:	e603      	b.n	800e242 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
 800e63a:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800e63c:	9c03      	ldr	r4, [sp, #12]
 800e63e:	42a2      	cmp	r2, r4
 800e640:	f6ff ae1c 	blt.w	800e27c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e644:	9c06      	ldr	r4, [sp, #24]
 800e646:	42a2      	cmp	r2, r4
 800e648:	9c08      	ldr	r4, [sp, #32]
 800e64a:	bfbc      	itt	lt
 800e64c:	3201      	addlt	r2, #1
 800e64e:	9206      	strlt	r2, [sp, #24]
 800e650:	f1c3 0220 	rsb	r2, r3, #32
 800e654:	4362      	muls	r2, r4
 800e656:	2401      	movs	r4, #1
 800e658:	940b      	str	r4, [sp, #44]	@ 0x2c
 800e65a:	2420      	movs	r4, #32
 800e65c:	e6d6      	b.n	800e40c <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 800e65e:	ea4f 1861 	mov.w	r8, r1, asr #5
 800e662:	f009 021f 	and.w	r2, r9, #31
 800e666:	f001 011f 	and.w	r1, r1, #31
 800e66a:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800e66e:	920c      	str	r2, [sp, #48]	@ 0x30
 800e670:	45b0      	cmp	r8, r6
 800e672:	9a01      	ldr	r2, [sp, #4]
 800e674:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800e678:	eba2 0203 	sub.w	r2, r2, r3
 800e67c:	d108      	bne.n	800e690 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
 800e67e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e680:	4496      	add	lr, r2
 800e682:	4419      	add	r1, r3
 800e684:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e688:	fb02 a101 	mla	r1, r2, r1, sl
 800e68c:	80e9      	strh	r1, [r5, #6]
 800e68e:	e6fa      	b.n	800e486 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800e690:	2c00      	cmp	r4, #0
 800e692:	f2c0 80a7 	blt.w	800e7e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
 800e696:	2701      	movs	r7, #1
 800e698:	f1c1 0c20 	rsb	ip, r1, #32
 800e69c:	970a      	str	r7, [sp, #40]	@ 0x28
 800e69e:	2720      	movs	r7, #32
 800e6a0:	fb02 f20c 	mul.w	r2, r2, ip
 800e6a4:	9709      	str	r7, [sp, #36]	@ 0x24
 800e6a6:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800e6a8:	fb92 fcf4 	sdiv	ip, r2, r4
 800e6ac:	fb04 221c 	mls	r2, r4, ip, r2
 800e6b0:	4439      	add	r1, r7
 800e6b2:	2a00      	cmp	r2, #0
 800e6b4:	bfbc      	itt	lt
 800e6b6:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800e6ba:	1912      	addlt	r2, r2, r4
 800e6bc:	fb0c a101 	mla	r1, ip, r1, sl
 800e6c0:	44e6      	add	lr, ip
 800e6c2:	80e9      	strh	r1, [r5, #6]
 800e6c4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800e6c6:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e6ca:	eb08 0501 	add.w	r5, r8, r1
 800e6ce:	6901      	ldr	r1, [r0, #16]
 800e6d0:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800e6d4:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800e6d8:	ea58 070e 	orrs.w	r7, r8, lr
 800e6dc:	d010      	beq.n	800e700 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800e6de:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800e6e2:	f1be 0f00 	cmp.w	lr, #0
 800e6e6:	db0b      	blt.n	800e700 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800e6e8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e6ea:	45be      	cmp	lr, r7
 800e6ec:	da08      	bge.n	800e700 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800e6ee:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e6f2:	45be      	cmp	lr, r7
 800e6f4:	bf3c      	itt	cc
 800e6f6:	3108      	addcc	r1, #8
 800e6f8:	6101      	strcc	r1, [r0, #16]
 800e6fa:	f10e 0101 	add.w	r1, lr, #1
 800e6fe:	6081      	str	r1, [r0, #8]
 800e700:	6901      	ldr	r1, [r0, #16]
 800e702:	f04f 0e00 	mov.w	lr, #0
 800e706:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800e70a:	42ae      	cmp	r6, r5
 800e70c:	800d      	strh	r5, [r1, #0]
 800e70e:	4463      	add	r3, ip
 800e710:	f8a1 8002 	strh.w	r8, [r1, #2]
 800e714:	f8a1 e004 	strh.w	lr, [r1, #4]
 800e718:	f8a1 e006 	strh.w	lr, [r1, #6]
 800e71c:	d053      	beq.n	800e7c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
 800e71e:	9901      	ldr	r1, [sp, #4]
 800e720:	1b12      	subs	r2, r2, r4
 800e722:	1ac9      	subs	r1, r1, r3
 800e724:	4461      	add	r1, ip
 800e726:	0149      	lsls	r1, r1, #5
 800e728:	fb91 fef4 	sdiv	lr, r1, r4
 800e72c:	fb04 111e 	mls	r1, r4, lr, r1
 800e730:	2900      	cmp	r1, #0
 800e732:	bfbc      	itt	lt
 800e734:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800e738:	1909      	addlt	r1, r1, r4
 800e73a:	f10e 0701 	add.w	r7, lr, #1
 800e73e:	970d      	str	r7, [sp, #52]	@ 0x34
 800e740:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800e744:	1852      	adds	r2, r2, r1
 800e746:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800e748:	bf54      	ite	pl
 800e74a:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800e74e:	46f4      	movmi	ip, lr
 800e750:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800e754:	bf58      	it	pl
 800e756:	1b12      	subpl	r2, r2, r4
 800e758:	4463      	add	r3, ip
 800e75a:	443d      	add	r5, r7
 800e75c:	44e3      	add	fp, ip
 800e75e:	f8aa b004 	strh.w	fp, [sl, #4]
 800e762:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800e766:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800e76a:	f8aa b006 	strh.w	fp, [sl, #6]
 800e76e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e772:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e776:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800e77a:	ea5b 070a 	orrs.w	r7, fp, sl
 800e77e:	d014      	beq.n	800e7aa <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800e780:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800e784:	f1ba 0f00 	cmp.w	sl, #0
 800e788:	db0f      	blt.n	800e7aa <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800e78a:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e78c:	45ba      	cmp	sl, r7
 800e78e:	da0c      	bge.n	800e7aa <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800e790:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800e794:	45ba      	cmp	sl, r7
 800e796:	f10a 0a01 	add.w	sl, sl, #1
 800e79a:	bf38      	it	cc
 800e79c:	f10c 0c08 	addcc.w	ip, ip, #8
 800e7a0:	f8c0 a008 	str.w	sl, [r0, #8]
 800e7a4:	bf38      	it	cc
 800e7a6:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800e7aa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e7ae:	f04f 0700 	mov.w	r7, #0
 800e7b2:	42ae      	cmp	r6, r5
 800e7b4:	f8ac 5000 	strh.w	r5, [ip]
 800e7b8:	f8ac 8002 	strh.w	r8, [ip, #2]
 800e7bc:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e7c0:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e7c4:	d1bc      	bne.n	800e740 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
 800e7c6:	6904      	ldr	r4, [r0, #16]
 800e7c8:	9a01      	ldr	r2, [sp, #4]
 800e7ca:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e7cc:	1ad3      	subs	r3, r2, r3
 800e7ce:	88a2      	ldrh	r2, [r4, #4]
 800e7d0:	3120      	adds	r1, #32
 800e7d2:	441a      	add	r2, r3
 800e7d4:	80a2      	strh	r2, [r4, #4]
 800e7d6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e7d8:	1a89      	subs	r1, r1, r2
 800e7da:	88e2      	ldrh	r2, [r4, #6]
 800e7dc:	fb03 2301 	mla	r3, r3, r1, r2
 800e7e0:	80e3      	strh	r3, [r4, #6]
 800e7e2:	e650      	b.n	800e486 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800e7e4:	f04f 37ff 	mov.w	r7, #4294967295
 800e7e8:	434a      	muls	r2, r1
 800e7ea:	4264      	negs	r4, r4
 800e7ec:	970a      	str	r7, [sp, #40]	@ 0x28
 800e7ee:	2700      	movs	r7, #0
 800e7f0:	e758      	b.n	800e6a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
 800e7f2:	ea4f 1867 	mov.w	r8, r7, asr #5
 800e7f6:	f009 031f 	and.w	r3, r9, #31
 800e7fa:	f007 071f 	and.w	r7, r7, #31
 800e7fe:	fa1f fc8c 	uxth.w	ip, ip
 800e802:	45d0      	cmp	r8, sl
 800e804:	930f      	str	r3, [sp, #60]	@ 0x3c
 800e806:	fa1f fe8e 	uxth.w	lr, lr
 800e80a:	d10a      	bne.n	800e822 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
 800e80c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e80e:	449c      	add	ip, r3
 800e810:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e812:	441f      	add	r7, r3
 800e814:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e816:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e81a:	fb03 e707 	mla	r7, r3, r7, lr
 800e81e:	80ef      	strh	r7, [r5, #6]
 800e820:	e6bc      	b.n	800e59c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800e822:	2900      	cmp	r1, #0
 800e824:	f2c0 80a6 	blt.w	800e974 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
 800e828:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800e82a:	f1c7 0320 	rsb	r3, r7, #32
 800e82e:	4363      	muls	r3, r4
 800e830:	2401      	movs	r4, #1
 800e832:	940d      	str	r4, [sp, #52]	@ 0x34
 800e834:	2420      	movs	r4, #32
 800e836:	940c      	str	r4, [sp, #48]	@ 0x30
 800e838:	fb93 f4f1 	sdiv	r4, r3, r1
 800e83c:	fb01 3b14 	mls	fp, r1, r4, r3
 800e840:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e842:	f1bb 0f00 	cmp.w	fp, #0
 800e846:	441f      	add	r7, r3
 800e848:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e84a:	bfbc      	itt	lt
 800e84c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e850:	448b      	addlt	fp, r1
 800e852:	fb04 e707 	mla	r7, r4, r7, lr
 800e856:	44a4      	add	ip, r4
 800e858:	80ef      	strh	r7, [r5, #6]
 800e85a:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e85e:	eb08 0503 	add.w	r5, r8, r3
 800e862:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e866:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800e86a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e86e:	ea5e 0307 	orrs.w	r3, lr, r7
 800e872:	d011      	beq.n	800e898 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800e874:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800e878:	f1be 0f00 	cmp.w	lr, #0
 800e87c:	db0c      	blt.n	800e898 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800e87e:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e880:	45be      	cmp	lr, r7
 800e882:	da09      	bge.n	800e898 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800e884:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e888:	45be      	cmp	lr, r7
 800e88a:	bf3c      	itt	cc
 800e88c:	f10c 0708 	addcc.w	r7, ip, #8
 800e890:	6107      	strcc	r7, [r0, #16]
 800e892:	f10e 0701 	add.w	r7, lr, #1
 800e896:	6087      	str	r7, [r0, #8]
 800e898:	6907      	ldr	r7, [r0, #16]
 800e89a:	b213      	sxth	r3, r2
 800e89c:	4555      	cmp	r5, sl
 800e89e:	9310      	str	r3, [sp, #64]	@ 0x40
 800e8a0:	807b      	strh	r3, [r7, #2]
 800e8a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e8a4:	803d      	strh	r5, [r7, #0]
 800e8a6:	80be      	strh	r6, [r7, #4]
 800e8a8:	eb04 0c03 	add.w	ip, r4, r3
 800e8ac:	80fe      	strh	r6, [r7, #6]
 800e8ae:	d050      	beq.n	800e952 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
 800e8b0:	9b01      	ldr	r3, [sp, #4]
 800e8b2:	eba3 070c 	sub.w	r7, r3, ip
 800e8b6:	ebab 0301 	sub.w	r3, fp, r1
 800e8ba:	443c      	add	r4, r7
 800e8bc:	9309      	str	r3, [sp, #36]	@ 0x24
 800e8be:	0164      	lsls	r4, r4, #5
 800e8c0:	fb94 f8f1 	sdiv	r8, r4, r1
 800e8c4:	fb01 4418 	mls	r4, r1, r8, r4
 800e8c8:	2c00      	cmp	r4, #0
 800e8ca:	bfbc      	itt	lt
 800e8cc:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e8d0:	1864      	addlt	r4, r4, r1
 800e8d2:	f108 0701 	add.w	r7, r8, #1
 800e8d6:	9711      	str	r7, [sp, #68]	@ 0x44
 800e8d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e8da:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e8de:	191b      	adds	r3, r3, r4
 800e8e0:	f8be b004 	ldrh.w	fp, [lr, #4]
 800e8e4:	bf54      	ite	pl
 800e8e6:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800e8e8:	4647      	movmi	r7, r8
 800e8ea:	9309      	str	r3, [sp, #36]	@ 0x24
 800e8ec:	bf58      	it	pl
 800e8ee:	1a5b      	subpl	r3, r3, r1
 800e8f0:	44bb      	add	fp, r7
 800e8f2:	44bc      	add	ip, r7
 800e8f4:	bf58      	it	pl
 800e8f6:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800e8f8:	f8ae b004 	strh.w	fp, [lr, #4]
 800e8fc:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e900:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e904:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800e906:	f8ae b006 	strh.w	fp, [lr, #6]
 800e90a:	443d      	add	r5, r7
 800e90c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e910:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e914:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800e918:	ea5b 0307 	orrs.w	r3, fp, r7
 800e91c:	d011      	beq.n	800e942 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800e91e:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800e922:	f1bb 0f00 	cmp.w	fp, #0
 800e926:	db0c      	blt.n	800e942 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800e928:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e92a:	45bb      	cmp	fp, r7
 800e92c:	da09      	bge.n	800e942 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800e92e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e932:	45bb      	cmp	fp, r7
 800e934:	bf3c      	itt	cc
 800e936:	f10e 0708 	addcc.w	r7, lr, #8
 800e93a:	6107      	strcc	r7, [r0, #16]
 800e93c:	f10b 0701 	add.w	r7, fp, #1
 800e940:	6087      	str	r7, [r0, #8]
 800e942:	6907      	ldr	r7, [r0, #16]
 800e944:	4555      	cmp	r5, sl
 800e946:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800e948:	803d      	strh	r5, [r7, #0]
 800e94a:	807b      	strh	r3, [r7, #2]
 800e94c:	80be      	strh	r6, [r7, #4]
 800e94e:	80fe      	strh	r6, [r7, #6]
 800e950:	d1c2      	bne.n	800e8d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
 800e952:	9b01      	ldr	r3, [sp, #4]
 800e954:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800e956:	eba3 0c0c 	sub.w	ip, r3, ip
 800e95a:	6903      	ldr	r3, [r0, #16]
 800e95c:	3720      	adds	r7, #32
 800e95e:	8899      	ldrh	r1, [r3, #4]
 800e960:	4461      	add	r1, ip
 800e962:	8099      	strh	r1, [r3, #4]
 800e964:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e966:	1a7f      	subs	r7, r7, r1
 800e968:	88d9      	ldrh	r1, [r3, #6]
 800e96a:	fb0c 1c07 	mla	ip, ip, r7, r1
 800e96e:	f8a3 c006 	strh.w	ip, [r3, #6]
 800e972:	e613      	b.n	800e59c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800e974:	f04f 34ff 	mov.w	r4, #4294967295
 800e978:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e97a:	4249      	negs	r1, r1
 800e97c:	940d      	str	r4, [sp, #52]	@ 0x34
 800e97e:	2400      	movs	r4, #0
 800e980:	437b      	muls	r3, r7
 800e982:	e758      	b.n	800e836 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
 800e984:	9905      	ldr	r1, [sp, #20]
 800e986:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800e98a:	f009 0c1f 	and.w	ip, r9, #31
 800e98e:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800e992:	f001 011f 	and.w	r1, r1, #31
 800e996:	45f3      	cmp	fp, lr
 800e998:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800e99c:	9102      	str	r1, [sp, #8]
 800e99e:	9904      	ldr	r1, [sp, #16]
 800e9a0:	eba1 0406 	sub.w	r4, r1, r6
 800e9a4:	d108      	bne.n	800e9b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
 800e9a6:	9b02      	ldr	r3, [sp, #8]
 800e9a8:	44a0      	add	r8, r4
 800e9aa:	449c      	add	ip, r3
 800e9ac:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e9b0:	fb04 a40c 	mla	r4, r4, ip, sl
 800e9b4:	80fc      	strh	r4, [r7, #6]
 800e9b6:	e461      	b.n	800e27c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e9b8:	9905      	ldr	r1, [sp, #20]
 800e9ba:	ebb1 0109 	subs.w	r1, r1, r9
 800e9be:	bf51      	iteee	pl
 800e9c0:	f1cc 0520 	rsbpl	r5, ip, #32
 800e9c4:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e9c8:	4249      	negmi	r1, r1
 800e9ca:	2500      	movmi	r5, #0
 800e9cc:	bf5d      	ittte	pl
 800e9ce:	436c      	mulpl	r4, r5
 800e9d0:	2520      	movpl	r5, #32
 800e9d2:	f04f 0901 	movpl.w	r9, #1
 800e9d6:	f04f 39ff 	movmi.w	r9, #4294967295
 800e9da:	9501      	str	r5, [sp, #4]
 800e9dc:	9b01      	ldr	r3, [sp, #4]
 800e9de:	fb94 f5f1 	sdiv	r5, r4, r1
 800e9e2:	fb01 4415 	mls	r4, r1, r5, r4
 800e9e6:	449c      	add	ip, r3
 800e9e8:	eb0b 0309 	add.w	r3, fp, r9
 800e9ec:	2c00      	cmp	r4, #0
 800e9ee:	bfbc      	itt	lt
 800e9f0:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e9f4:	1864      	addlt	r4, r4, r1
 800e9f6:	44a8      	add	r8, r5
 800e9f8:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e9fc:	f8a7 8004 	strh.w	r8, [r7, #4]
 800ea00:	f8a7 c006 	strh.w	ip, [r7, #6]
 800ea04:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ea08:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800ea0c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ea10:	ea58 0707 	orrs.w	r7, r8, r7
 800ea14:	d011      	beq.n	800ea3a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800ea16:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800ea1a:	f1b8 0f00 	cmp.w	r8, #0
 800ea1e:	db0c      	blt.n	800ea3a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800ea20:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ea22:	45b8      	cmp	r8, r7
 800ea24:	da09      	bge.n	800ea3a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800ea26:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800ea2a:	45b8      	cmp	r8, r7
 800ea2c:	bf3c      	itt	cc
 800ea2e:	f10c 0708 	addcc.w	r7, ip, #8
 800ea32:	6107      	strcc	r7, [r0, #16]
 800ea34:	f108 0701 	add.w	r7, r8, #1
 800ea38:	6087      	str	r7, [r0, #8]
 800ea3a:	6907      	ldr	r7, [r0, #16]
 800ea3c:	f04f 0c00 	mov.w	ip, #0
 800ea40:	b212      	sxth	r2, r2
 800ea42:	459e      	cmp	lr, r3
 800ea44:	803b      	strh	r3, [r7, #0]
 800ea46:	442e      	add	r6, r5
 800ea48:	807a      	strh	r2, [r7, #2]
 800ea4a:	f8a7 c004 	strh.w	ip, [r7, #4]
 800ea4e:	f8a7 c006 	strh.w	ip, [r7, #6]
 800ea52:	d04b      	beq.n	800eaec <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
 800ea54:	9f04      	ldr	r7, [sp, #16]
 800ea56:	1a64      	subs	r4, r4, r1
 800ea58:	f04f 0a00 	mov.w	sl, #0
 800ea5c:	1bbf      	subs	r7, r7, r6
 800ea5e:	443d      	add	r5, r7
 800ea60:	016d      	lsls	r5, r5, #5
 800ea62:	fb95 f8f1 	sdiv	r8, r5, r1
 800ea66:	fb01 5518 	mls	r5, r1, r8, r5
 800ea6a:	4565      	cmp	r5, ip
 800ea6c:	bfbc      	itt	lt
 800ea6e:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ea72:	186d      	addlt	r5, r5, r1
 800ea74:	f108 0701 	add.w	r7, r8, #1
 800ea78:	9703      	str	r7, [sp, #12]
 800ea7a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ea7e:	1964      	adds	r4, r4, r5
 800ea80:	444b      	add	r3, r9
 800ea82:	bf54      	ite	pl
 800ea84:	9f03      	ldrpl	r7, [sp, #12]
 800ea86:	4647      	movmi	r7, r8
 800ea88:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800ea8c:	bf58      	it	pl
 800ea8e:	1a64      	subpl	r4, r4, r1
 800ea90:	443e      	add	r6, r7
 800ea92:	44bb      	add	fp, r7
 800ea94:	f8ac b004 	strh.w	fp, [ip, #4]
 800ea98:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ea9c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800eaa0:	f8ac b006 	strh.w	fp, [ip, #6]
 800eaa4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eaa8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800eaac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800eab0:	ea5b 0707 	orrs.w	r7, fp, r7
 800eab4:	d011      	beq.n	800eada <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800eab6:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800eaba:	f1bb 0f00 	cmp.w	fp, #0
 800eabe:	db0c      	blt.n	800eada <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800eac0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800eac2:	45bb      	cmp	fp, r7
 800eac4:	da09      	bge.n	800eada <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800eac6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800eaca:	45bb      	cmp	fp, r7
 800eacc:	bf3c      	itt	cc
 800eace:	f10c 0708 	addcc.w	r7, ip, #8
 800ead2:	6107      	strcc	r7, [r0, #16]
 800ead4:	f10b 0701 	add.w	r7, fp, #1
 800ead8:	6087      	str	r7, [r0, #8]
 800eada:	6907      	ldr	r7, [r0, #16]
 800eadc:	459e      	cmp	lr, r3
 800eade:	803b      	strh	r3, [r7, #0]
 800eae0:	807a      	strh	r2, [r7, #2]
 800eae2:	f8a7 a004 	strh.w	sl, [r7, #4]
 800eae6:	f8a7 a006 	strh.w	sl, [r7, #6]
 800eaea:	d1c6      	bne.n	800ea7a <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
 800eaec:	9b04      	ldr	r3, [sp, #16]
 800eaee:	1b9e      	subs	r6, r3, r6
 800eaf0:	6903      	ldr	r3, [r0, #16]
 800eaf2:	889a      	ldrh	r2, [r3, #4]
 800eaf4:	4432      	add	r2, r6
 800eaf6:	809a      	strh	r2, [r3, #4]
 800eaf8:	9a02      	ldr	r2, [sp, #8]
 800eafa:	f102 0c20 	add.w	ip, r2, #32
 800eafe:	9a01      	ldr	r2, [sp, #4]
 800eb00:	ebac 0c02 	sub.w	ip, ip, r2
 800eb04:	88da      	ldrh	r2, [r3, #6]
 800eb06:	fb06 260c 	mla	r6, r6, ip, r2
 800eb0a:	80de      	strh	r6, [r3, #6]
 800eb0c:	f7ff bbb6 	b.w	800e27c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

0800eb10 <_ZN8touchgfx7Outline6lineToEii>:
 800eb10:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800eb12:	079b      	lsls	r3, r3, #30
 800eb14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800eb16:	460e      	mov	r6, r1
 800eb18:	4615      	mov	r5, r2
 800eb1a:	d511      	bpl.n	800eb40 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800eb1c:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800eb20:	ea86 0701 	eor.w	r7, r6, r1
 800eb24:	ea85 0302 	eor.w	r3, r5, r2
 800eb28:	433b      	orrs	r3, r7
 800eb2a:	d009      	beq.n	800eb40 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800eb2c:	4633      	mov	r3, r6
 800eb2e:	9500      	str	r5, [sp, #0]
 800eb30:	f7ff fb4c 	bl	800e1cc <_ZN8touchgfx7Outline10renderLineEiiii>
 800eb34:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800eb36:	f043 0301 	orr.w	r3, r3, #1
 800eb3a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800eb3e:	6243      	str	r3, [r0, #36]	@ 0x24
 800eb40:	b003      	add	sp, #12
 800eb42:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800eb44 <_ZN8touchgfx7Outline6moveToEii>:
 800eb44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eb46:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800eb48:	4615      	mov	r5, r2
 800eb4a:	4604      	mov	r4, r0
 800eb4c:	460e      	mov	r6, r1
 800eb4e:	079a      	lsls	r2, r3, #30
 800eb50:	d401      	bmi.n	800eb56 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800eb52:	f7ff fb07 	bl	800e164 <_ZN8touchgfx7Outline5resetEv>
 800eb56:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800eb58:	07db      	lsls	r3, r3, #31
 800eb5a:	d504      	bpl.n	800eb66 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800eb5c:	4620      	mov	r0, r4
 800eb5e:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800eb62:	f7ff ffd5 	bl	800eb10 <_ZN8touchgfx7Outline6lineToEii>
 800eb66:	6923      	ldr	r3, [r4, #16]
 800eb68:	1170      	asrs	r0, r6, #5
 800eb6a:	1169      	asrs	r1, r5, #5
 800eb6c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eb70:	4290      	cmp	r0, r2
 800eb72:	d103      	bne.n	800eb7c <_ZN8touchgfx7Outline6moveToEii+0x38>
 800eb74:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800eb78:	4291      	cmp	r1, r2
 800eb7a:	d01a      	beq.n	800ebb2 <_ZN8touchgfx7Outline6moveToEii+0x6e>
 800eb7c:	88df      	ldrh	r7, [r3, #6]
 800eb7e:	889a      	ldrh	r2, [r3, #4]
 800eb80:	433a      	orrs	r2, r7
 800eb82:	d010      	beq.n	800eba6 <_ZN8touchgfx7Outline6moveToEii+0x62>
 800eb84:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800eb88:	2a00      	cmp	r2, #0
 800eb8a:	db0c      	blt.n	800eba6 <_ZN8touchgfx7Outline6moveToEii+0x62>
 800eb8c:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800eb8e:	42ba      	cmp	r2, r7
 800eb90:	da09      	bge.n	800eba6 <_ZN8touchgfx7Outline6moveToEii+0x62>
 800eb92:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800eb96:	42ba      	cmp	r2, r7
 800eb98:	f102 0201 	add.w	r2, r2, #1
 800eb9c:	bf38      	it	cc
 800eb9e:	3308      	addcc	r3, #8
 800eba0:	60a2      	str	r2, [r4, #8]
 800eba2:	bf38      	it	cc
 800eba4:	6123      	strcc	r3, [r4, #16]
 800eba6:	6923      	ldr	r3, [r4, #16]
 800eba8:	2200      	movs	r2, #0
 800ebaa:	8018      	strh	r0, [r3, #0]
 800ebac:	8059      	strh	r1, [r3, #2]
 800ebae:	809a      	strh	r2, [r3, #4]
 800ebb0:	80da      	strh	r2, [r3, #6]
 800ebb2:	6166      	str	r6, [r4, #20]
 800ebb4:	6225      	str	r5, [r4, #32]
 800ebb6:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800ebba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ebbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800ebbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ebc0:	b0d0      	sub	sp, #320	@ 0x140
 800ebc2:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800ebc6:	466c      	mov	r4, sp
 800ebc8:	4627      	mov	r7, r4
 800ebca:	1a0d      	subs	r5, r1, r0
 800ebcc:	f100 0308 	add.w	r3, r0, #8
 800ebd0:	2d48      	cmp	r5, #72	@ 0x48
 800ebd2:	f340 80d5 	ble.w	800ed80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800ebd6:	112d      	asrs	r5, r5, #4
 800ebd8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800ebdc:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ebe0:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800ebe4:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800ebe8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800ebec:	6816      	ldr	r6, [r2, #0]
 800ebee:	6006      	str	r6, [r0, #0]
 800ebf0:	6856      	ldr	r6, [r2, #4]
 800ebf2:	6046      	str	r6, [r0, #4]
 800ebf4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800ebf8:	f8a2 8002 	strh.w	r8, [r2, #2]
 800ebfc:	f8a2 e004 	strh.w	lr, [r2, #4]
 800ec00:	f8a2 c006 	strh.w	ip, [r2, #6]
 800ec04:	f1a1 0208 	sub.w	r2, r1, #8
 800ec08:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800ec0c:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800ec10:	4565      	cmp	r5, ip
 800ec12:	db06      	blt.n	800ec22 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800ec14:	d119      	bne.n	800ec4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800ec16:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800ec1a:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800ec1e:	42ae      	cmp	r6, r5
 800ec20:	dd13      	ble.n	800ec4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800ec22:	460e      	mov	r6, r1
 800ec24:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800ec28:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800ec2c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800ec30:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800ec34:	601d      	str	r5, [r3, #0]
 800ec36:	6875      	ldr	r5, [r6, #4]
 800ec38:	605d      	str	r5, [r3, #4]
 800ec3a:	f821 9c08 	strh.w	r9, [r1, #-8]
 800ec3e:	f821 cc06 	strh.w	ip, [r1, #-6]
 800ec42:	f821 8c04 	strh.w	r8, [r1, #-4]
 800ec46:	f821 ec02 	strh.w	lr, [r1, #-2]
 800ec4a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ec4e:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800ec52:	42ae      	cmp	r6, r5
 800ec54:	db06      	blt.n	800ec64 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800ec56:	d116      	bne.n	800ec86 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800ec58:	f9b0 c000 	ldrsh.w	ip, [r0]
 800ec5c:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800ec60:	45ac      	cmp	ip, r5
 800ec62:	da10      	bge.n	800ec86 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800ec64:	681d      	ldr	r5, [r3, #0]
 800ec66:	f9b0 8000 	ldrsh.w	r8, [r0]
 800ec6a:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800ec6e:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800ec72:	6005      	str	r5, [r0, #0]
 800ec74:	685d      	ldr	r5, [r3, #4]
 800ec76:	f8a0 8008 	strh.w	r8, [r0, #8]
 800ec7a:	6045      	str	r5, [r0, #4]
 800ec7c:	8146      	strh	r6, [r0, #10]
 800ec7e:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800ec82:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800ec86:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800ec8a:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800ec8e:	4565      	cmp	r5, ip
 800ec90:	db06      	blt.n	800eca0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800ec92:	d119      	bne.n	800ecc8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ec94:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800ec98:	f9b0 5000 	ldrsh.w	r5, [r0]
 800ec9c:	42ae      	cmp	r6, r5
 800ec9e:	da13      	bge.n	800ecc8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800eca0:	460e      	mov	r6, r1
 800eca2:	f9b0 9000 	ldrsh.w	r9, [r0]
 800eca6:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800ecaa:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800ecae:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800ecb2:	6005      	str	r5, [r0, #0]
 800ecb4:	6875      	ldr	r5, [r6, #4]
 800ecb6:	6045      	str	r5, [r0, #4]
 800ecb8:	f821 9c08 	strh.w	r9, [r1, #-8]
 800ecbc:	f821 cc06 	strh.w	ip, [r1, #-6]
 800ecc0:	f821 8c04 	strh.w	r8, [r1, #-4]
 800ecc4:	f821 ec02 	strh.w	lr, [r1, #-2]
 800ecc8:	3308      	adds	r3, #8
 800ecca:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800ecce:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800ecd2:	45e6      	cmp	lr, ip
 800ecd4:	dbf8      	blt.n	800ecc8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ecd6:	d105      	bne.n	800ece4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ecd8:	f9b3 6000 	ldrsh.w	r6, [r3]
 800ecdc:	f9b0 5000 	ldrsh.w	r5, [r0]
 800ece0:	42ae      	cmp	r6, r5
 800ece2:	dbf1      	blt.n	800ecc8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ece4:	4615      	mov	r5, r2
 800ece6:	3a08      	subs	r2, #8
 800ece8:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800ecec:	45b4      	cmp	ip, r6
 800ecee:	dbf9      	blt.n	800ece4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ecf0:	d105      	bne.n	800ecfe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800ecf2:	f9b0 8000 	ldrsh.w	r8, [r0]
 800ecf6:	f9b2 6000 	ldrsh.w	r6, [r2]
 800ecfa:	45b0      	cmp	r8, r6
 800ecfc:	dbf2      	blt.n	800ece4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ecfe:	4293      	cmp	r3, r2
 800ed00:	f1a5 0608 	sub.w	r6, r5, #8
 800ed04:	d816      	bhi.n	800ed34 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800ed06:	f8d6 c000 	ldr.w	ip, [r6]
 800ed0a:	f9b3 a000 	ldrsh.w	sl, [r3]
 800ed0e:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800ed12:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800ed16:	f8c3 c000 	str.w	ip, [r3]
 800ed1a:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800ed1e:	f8c3 c004 	str.w	ip, [r3, #4]
 800ed22:	f825 ac08 	strh.w	sl, [r5, #-8]
 800ed26:	f825 ec06 	strh.w	lr, [r5, #-6]
 800ed2a:	f825 9c04 	strh.w	r9, [r5, #-4]
 800ed2e:	f825 8c02 	strh.w	r8, [r5, #-2]
 800ed32:	e7c9      	b.n	800ecc8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ed34:	f8d6 e000 	ldr.w	lr, [r6]
 800ed38:	f9b0 a000 	ldrsh.w	sl, [r0]
 800ed3c:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800ed40:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800ed44:	f8c0 e000 	str.w	lr, [r0]
 800ed48:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800ed4c:	1a16      	subs	r6, r2, r0
 800ed4e:	f8c0 e004 	str.w	lr, [r0, #4]
 800ed52:	f825 ac08 	strh.w	sl, [r5, #-8]
 800ed56:	f825 cc06 	strh.w	ip, [r5, #-6]
 800ed5a:	f825 9c04 	strh.w	r9, [r5, #-4]
 800ed5e:	f825 8c02 	strh.w	r8, [r5, #-2]
 800ed62:	1acd      	subs	r5, r1, r3
 800ed64:	10ed      	asrs	r5, r5, #3
 800ed66:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800ed6a:	bfb5      	itete	lt
 800ed6c:	e9c4 0200 	strdlt	r0, r2, [r4]
 800ed70:	e9c4 3100 	strdge	r3, r1, [r4]
 800ed74:	460a      	movlt	r2, r1
 800ed76:	4603      	movge	r3, r0
 800ed78:	3408      	adds	r4, #8
 800ed7a:	4618      	mov	r0, r3
 800ed7c:	4611      	mov	r1, r2
 800ed7e:	e724      	b.n	800ebca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800ed80:	4299      	cmp	r1, r3
 800ed82:	d927      	bls.n	800edd4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
 800ed84:	f1a3 0210 	sub.w	r2, r3, #16
 800ed88:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800ed8c:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800ed90:	45ac      	cmp	ip, r5
 800ed92:	db06      	blt.n	800eda2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800ed94:	d11c      	bne.n	800edd0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 800ed96:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800ed9a:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800ed9e:	42ae      	cmp	r6, r5
 800eda0:	da16      	bge.n	800edd0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 800eda2:	4615      	mov	r5, r2
 800eda4:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800eda8:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800edac:	3a08      	subs	r2, #8
 800edae:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800edb2:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
 800edb6:	6196      	str	r6, [r2, #24]
 800edb8:	42a8      	cmp	r0, r5
 800edba:	686e      	ldr	r6, [r5, #4]
 800edbc:	f8a2 9010 	strh.w	r9, [r2, #16]
 800edc0:	61d6      	str	r6, [r2, #28]
 800edc2:	f8a2 c012 	strh.w	ip, [r2, #18]
 800edc6:	f8a2 8014 	strh.w	r8, [r2, #20]
 800edca:	f8a2 e016 	strh.w	lr, [r2, #22]
 800edce:	d1db      	bne.n	800ed88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800edd0:	3308      	adds	r3, #8
 800edd2:	e7d5      	b.n	800ed80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800edd4:	42bc      	cmp	r4, r7
 800edd6:	d903      	bls.n	800ede0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
 800edd8:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800eddc:	3c08      	subs	r4, #8
 800edde:	e6f4      	b.n	800ebca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800ede0:	b050      	add	sp, #320	@ 0x140
 800ede2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800ede6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800ede6:	b510      	push	{r4, lr}
 800ede8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800edea:	4604      	mov	r4, r0
 800edec:	07da      	lsls	r2, r3, #31
 800edee:	d507      	bpl.n	800ee00 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800edf0:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800edf4:	f7ff fe8c 	bl	800eb10 <_ZN8touchgfx7Outline6lineToEii>
 800edf8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800edfa:	f023 0301 	bic.w	r3, r3, #1
 800edfe:	6243      	str	r3, [r0, #36]	@ 0x24
 800ee00:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ee02:	079b      	lsls	r3, r3, #30
 800ee04:	d521      	bpl.n	800ee4a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800ee06:	6923      	ldr	r3, [r4, #16]
 800ee08:	88d9      	ldrh	r1, [r3, #6]
 800ee0a:	889a      	ldrh	r2, [r3, #4]
 800ee0c:	430a      	orrs	r2, r1
 800ee0e:	d010      	beq.n	800ee32 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800ee10:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800ee14:	2a00      	cmp	r2, #0
 800ee16:	db0c      	blt.n	800ee32 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800ee18:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800ee1a:	428a      	cmp	r2, r1
 800ee1c:	da09      	bge.n	800ee32 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800ee1e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800ee22:	4291      	cmp	r1, r2
 800ee24:	f102 0201 	add.w	r2, r2, #1
 800ee28:	bf88      	it	hi
 800ee2a:	3308      	addhi	r3, #8
 800ee2c:	60a2      	str	r2, [r4, #8]
 800ee2e:	bf88      	it	hi
 800ee30:	6123      	strhi	r3, [r4, #16]
 800ee32:	68a1      	ldr	r1, [r4, #8]
 800ee34:	b129      	cbz	r1, 800ee42 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800ee36:	6863      	ldr	r3, [r4, #4]
 800ee38:	4299      	cmp	r1, r3
 800ee3a:	d802      	bhi.n	800ee42 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800ee3c:	68e0      	ldr	r0, [r4, #12]
 800ee3e:	f7ff febd 	bl	800ebbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800ee42:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ee44:	f023 0302 	bic.w	r3, r3, #2
 800ee48:	6263      	str	r3, [r4, #36]	@ 0x24
 800ee4a:	68e0      	ldr	r0, [r4, #12]
 800ee4c:	bd10      	pop	{r4, pc}
	...

0800ee50 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800ee50:	4b02      	ldr	r3, [pc, #8]	@ (800ee5c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800ee52:	6018      	str	r0, [r3, #0]
 800ee54:	4b02      	ldr	r3, [pc, #8]	@ (800ee60 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800ee56:	6019      	str	r1, [r3, #0]
 800ee58:	4770      	bx	lr
 800ee5a:	bf00      	nop
 800ee5c:	20016c90 	.word	0x20016c90
 800ee60:	20016c94 	.word	0x20016c94

0800ee64 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 800ee64:	2300      	movs	r3, #0
 800ee66:	4a02      	ldr	r2, [pc, #8]	@ (800ee70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 800ee68:	6013      	str	r3, [r2, #0]
 800ee6a:	4a02      	ldr	r2, [pc, #8]	@ (800ee74 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 800ee6c:	6013      	str	r3, [r2, #0]
 800ee6e:	4770      	bx	lr
 800ee70:	20016c90 	.word	0x20016c90
 800ee74:	20016c94 	.word	0x20016c94

0800ee78 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800ee78:	4b01      	ldr	r3, [pc, #4]	@ (800ee80 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800ee7a:	6818      	ldr	r0, [r3, #0]
 800ee7c:	4770      	bx	lr
 800ee7e:	bf00      	nop
 800ee80:	20016c90 	.word	0x20016c90

0800ee84 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800ee84:	4b01      	ldr	r3, [pc, #4]	@ (800ee8c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800ee86:	6818      	ldr	r0, [r3, #0]
 800ee88:	4770      	bx	lr
 800ee8a:	bf00      	nop
 800ee8c:	20016c94 	.word	0x20016c94

0800ee90 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800ee90:	b510      	push	{r4, lr}
 800ee92:	6803      	ldr	r3, [r0, #0]
 800ee94:	460c      	mov	r4, r1
 800ee96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ee98:	4798      	blx	r3
 800ee9a:	1b03      	subs	r3, r0, r4
 800ee9c:	4258      	negs	r0, r3
 800ee9e:	4158      	adcs	r0, r3
 800eea0:	bd10      	pop	{r4, pc}
	...

0800eea4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800eea4:	4b01      	ldr	r3, [pc, #4]	@ (800eeac <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800eea6:	6019      	str	r1, [r3, #0]
 800eea8:	4770      	bx	lr
 800eeaa:	bf00      	nop
 800eeac:	20016c98 	.word	0x20016c98

0800eeb0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800eeb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eeb4:	4696      	mov	lr, r2
 800eeb6:	b097      	sub	sp, #92	@ 0x5c
 800eeb8:	4605      	mov	r5, r0
 800eeba:	4614      	mov	r4, r2
 800eebc:	460e      	mov	r6, r1
 800eebe:	461f      	mov	r7, r3
 800eec0:	f10d 0c1c 	add.w	ip, sp, #28
 800eec4:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800eec8:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800eecc:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800eed0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800eed4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800eed8:	f8de 3000 	ldr.w	r3, [lr]
 800eedc:	f104 0e14 	add.w	lr, r4, #20
 800eee0:	f8cc 3000 	str.w	r3, [ip]
 800eee4:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800eee8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800eeec:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800eef0:	f8de 3000 	ldr.w	r3, [lr]
 800eef4:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800eef8:	f8cc 3000 	str.w	r3, [ip]
 800eefc:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800ef00:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef04:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef08:	f8de 3000 	ldr.w	r3, [lr]
 800ef0c:	4631      	mov	r1, r6
 800ef0e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800ef10:	4628      	mov	r0, r5
 800ef12:	f8cc 3000 	str.w	r3, [ip]
 800ef16:	682b      	ldr	r3, [r5, #0]
 800ef18:	9201      	str	r2, [sp, #4]
 800ef1a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800ef1c:	f8cd 8008 	str.w	r8, [sp, #8]
 800ef20:	9200      	str	r2, [sp, #0]
 800ef22:	aa07      	add	r2, sp, #28
 800ef24:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ef28:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800ef2c:	463b      	mov	r3, r7
 800ef2e:	47d8      	blx	fp
 800ef30:	46a6      	mov	lr, r4
 800ef32:	f10d 0c1c 	add.w	ip, sp, #28
 800ef36:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef3a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef3e:	f8de 3000 	ldr.w	r3, [lr]
 800ef42:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ef46:	343c      	adds	r4, #60	@ 0x3c
 800ef48:	f8cc 3000 	str.w	r3, [ip]
 800ef4c:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ef50:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef54:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef58:	f8de 3000 	ldr.w	r3, [lr]
 800ef5c:	f8cc 3000 	str.w	r3, [ip]
 800ef60:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800ef64:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ef66:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef6a:	6823      	ldr	r3, [r4, #0]
 800ef6c:	4631      	mov	r1, r6
 800ef6e:	4628      	mov	r0, r5
 800ef70:	f8cc 3000 	str.w	r3, [ip]
 800ef74:	682b      	ldr	r3, [r5, #0]
 800ef76:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ef7a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800ef7c:	f8cd 8008 	str.w	r8, [sp, #8]
 800ef80:	9201      	str	r2, [sp, #4]
 800ef82:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800ef84:	9200      	str	r2, [sp, #0]
 800ef86:	aa07      	add	r2, sp, #28
 800ef88:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800ef8a:	463b      	mov	r3, r7
 800ef8c:	47a0      	blx	r4
 800ef8e:	b017      	add	sp, #92	@ 0x5c
 800ef90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ef94 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800ef94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef98:	b08d      	sub	sp, #52	@ 0x34
 800ef9a:	4688      	mov	r8, r1
 800ef9c:	f8d3 c000 	ldr.w	ip, [r3]
 800efa0:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800efa2:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800efa6:	680f      	ldr	r7, [r1, #0]
 800efa8:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800efac:	eba7 070c 	sub.w	r7, r7, ip
 800efb0:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800efb4:	edd3 6a07 	vldr	s13, [r3, #28]
 800efb8:	42bc      	cmp	r4, r7
 800efba:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800efbc:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800efc0:	bfa8      	it	ge
 800efc2:	463c      	movge	r4, r7
 800efc4:	f9b1 9000 	ldrsh.w	r9, [r1]
 800efc8:	f9ba 1000 	ldrsh.w	r1, [sl]
 800efcc:	ee07 4a90 	vmov	s15, r4
 800efd0:	eb09 0e0c 	add.w	lr, r9, ip
 800efd4:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800efd8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800efdc:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800efe0:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800efe4:	4571      	cmp	r1, lr
 800efe6:	ee25 4a04 	vmul.f32	s8, s10, s8
 800efea:	ee65 4a24 	vmul.f32	s9, s10, s9
 800efee:	ee25 5a27 	vmul.f32	s10, s10, s15
 800eff2:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800eff6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800effa:	ee32 1a05 	vadd.f32	s2, s4, s10
 800effe:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f002:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f006:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f00a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f00e:	f340 808c 	ble.w	800f12a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800f012:	eba1 060e 	sub.w	r6, r1, lr
 800f016:	fb96 f5f4 	sdiv	r5, r6, r4
 800f01a:	ee07 5a10 	vmov	s14, r5
 800f01e:	2d00      	cmp	r5, #0
 800f020:	fb04 6615 	mls	r6, r4, r5, r6
 800f024:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f028:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f02c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f030:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f034:	dd12      	ble.n	800f05c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800f036:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f03a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f03e:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f042:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f046:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f04a:	bf14      	ite	ne
 800f04c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f050:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f054:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f058:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f05c:	fb05 f204 	mul.w	r2, r5, r4
 800f060:	1abf      	subs	r7, r7, r2
 800f062:	4494      	add	ip, r2
 800f064:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f068:	4411      	add	r1, r2
 800f06a:	eb09 020c 	add.w	r2, r9, ip
 800f06e:	b209      	sxth	r1, r1
 800f070:	443a      	add	r2, r7
 800f072:	428a      	cmp	r2, r1
 800f074:	bfc4      	itt	gt
 800f076:	eba1 0209 	subgt.w	r2, r1, r9
 800f07a:	eba2 070c 	subgt.w	r7, r2, ip
 800f07e:	2f00      	cmp	r7, #0
 800f080:	dd50      	ble.n	800f124 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800f082:	fb97 f1f4 	sdiv	r1, r7, r4
 800f086:	fb04 7211 	mls	r2, r4, r1, r7
 800f08a:	b90a      	cbnz	r2, 800f090 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800f08c:	3901      	subs	r1, #1
 800f08e:	4622      	mov	r2, r4
 800f090:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f094:	6840      	ldr	r0, [r0, #4]
 800f096:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800f09a:	44b6      	add	lr, r6
 800f09c:	f8d0 a000 	ldr.w	sl, [r0]
 800f0a0:	2900      	cmp	r1, #0
 800f0a2:	bfcc      	ite	gt
 800f0a4:	46a1      	movgt	r9, r4
 800f0a6:	4691      	movle	r9, r2
 800f0a8:	900b      	str	r0, [sp, #44]	@ 0x2c
 800f0aa:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800f0ac:	fb04 e505 	mla	r5, r4, r5, lr
 800f0b0:	eef0 6a42 	vmov.f32	s13, s4
 800f0b4:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800f0b8:	9008      	str	r0, [sp, #32]
 800f0ba:	eeb0 7a61 	vmov.f32	s14, s3
 800f0be:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800f0c0:	695b      	ldr	r3, [r3, #20]
 800f0c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f0c6:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f0ca:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f0ce:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800f0d0:	445b      	add	r3, fp
 800f0d2:	9307      	str	r3, [sp, #28]
 800f0d4:	ee16 3a90 	vmov	r3, s13
 800f0d8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f0dc:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f0e0:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f0e4:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f0e8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f0ec:	ee17 7a90 	vmov	r7, s15
 800f0f0:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f0f4:	fb97 f7f4 	sdiv	r7, r7, r4
 800f0f8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f0fc:	ee17 ca90 	vmov	ip, s15
 800f100:	fb9c fcf4 	sdiv	ip, ip, r4
 800f104:	fb0c 3306 	mla	r3, ip, r6, r3
 800f108:	9302      	str	r3, [sp, #8]
 800f10a:	ee17 3a10 	vmov	r3, s14
 800f10e:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f112:	fb07 3706 	mla	r7, r7, r6, r3
 800f116:	eba9 0306 	sub.w	r3, r9, r6
 800f11a:	e9cd 4700 	strd	r4, r7, [sp]
 800f11e:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f122:	47a0      	blx	r4
 800f124:	b00d      	add	sp, #52	@ 0x34
 800f126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f12a:	2500      	movs	r5, #0
 800f12c:	462e      	mov	r6, r5
 800f12e:	e799      	b.n	800f064 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800f130 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f134:	b0db      	sub	sp, #364	@ 0x16c
 800f136:	461d      	mov	r5, r3
 800f138:	4614      	mov	r4, r2
 800f13a:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800f13e:	910f      	str	r1, [sp, #60]	@ 0x3c
 800f140:	4629      	mov	r1, r5
 800f142:	930a      	str	r3, [sp, #40]	@ 0x28
 800f144:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800f148:	9009      	str	r0, [sp, #36]	@ 0x24
 800f14a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800f14c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800f150:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800f154:	9310      	str	r3, [sp, #64]	@ 0x40
 800f156:	6803      	ldr	r3, [r0, #0]
 800f158:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800f15a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800f15e:	47b8      	blx	r7
 800f160:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f162:	6058      	str	r0, [r3, #4]
 800f164:	2800      	cmp	r0, #0
 800f166:	f000 83a1 	beq.w	800f8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f16a:	682b      	ldr	r3, [r5, #0]
 800f16c:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800f170:	ed94 7a02 	vldr	s14, [r4, #8]
 800f174:	9314      	str	r3, [sp, #80]	@ 0x50
 800f176:	686b      	ldr	r3, [r5, #4]
 800f178:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f17c:	9315      	str	r3, [sp, #84]	@ 0x54
 800f17e:	4bc1      	ldr	r3, [pc, #772]	@ (800f484 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f180:	7819      	ldrb	r1, [r3, #0]
 800f182:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f186:	2900      	cmp	r1, #0
 800f188:	bf16      	itet	ne
 800f18a:	4619      	movne	r1, r3
 800f18c:	4611      	moveq	r1, r2
 800f18e:	4613      	movne	r3, r2
 800f190:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f194:	9116      	str	r1, [sp, #88]	@ 0x58
 800f196:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800f19a:	f240 8387 	bls.w	800f8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f19e:	ed94 7a07 	vldr	s14, [r4, #28]
 800f1a2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f1a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1aa:	f240 837f 	bls.w	800f8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1ae:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800f1b2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f1b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1ba:	f240 8377 	bls.w	800f8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1be:	6822      	ldr	r2, [r4, #0]
 800f1c0:	4bb1      	ldr	r3, [pc, #708]	@ (800f488 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800f1c2:	429a      	cmp	r2, r3
 800f1c4:	f2c0 8372 	blt.w	800f8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1c8:	49b0      	ldr	r1, [pc, #704]	@ (800f48c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800f1ca:	6963      	ldr	r3, [r4, #20]
 800f1cc:	428a      	cmp	r2, r1
 800f1ce:	f300 836d 	bgt.w	800f8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1d2:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f1d6:	48ae      	ldr	r0, [pc, #696]	@ (800f490 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f1d8:	33ff      	adds	r3, #255	@ 0xff
 800f1da:	4283      	cmp	r3, r0
 800f1dc:	f200 8366 	bhi.w	800f8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1e0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800f1e2:	4dac      	ldr	r5, [pc, #688]	@ (800f494 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f1e4:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f1e8:	33ff      	adds	r3, #255	@ 0xff
 800f1ea:	42ab      	cmp	r3, r5
 800f1ec:	f200 835e 	bhi.w	800f8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1f0:	6862      	ldr	r2, [r4, #4]
 800f1f2:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800f1f6:	33ff      	adds	r3, #255	@ 0xff
 800f1f8:	4283      	cmp	r3, r0
 800f1fa:	f200 8357 	bhi.w	800f8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1fe:	69a1      	ldr	r1, [r4, #24]
 800f200:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800f204:	33ff      	adds	r3, #255	@ 0xff
 800f206:	4283      	cmp	r3, r0
 800f208:	f200 8350 	bhi.w	800f8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f20c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800f20e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800f212:	30ff      	adds	r0, #255	@ 0xff
 800f214:	42a8      	cmp	r0, r5
 800f216:	f200 8349 	bhi.w	800f8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f21a:	428a      	cmp	r2, r1
 800f21c:	f280 8110 	bge.w	800f440 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f220:	429a      	cmp	r2, r3
 800f222:	f300 8119 	bgt.w	800f458 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f226:	4299      	cmp	r1, r3
 800f228:	f280 811d 	bge.w	800f466 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f22c:	2502      	movs	r5, #2
 800f22e:	2701      	movs	r7, #1
 800f230:	46a9      	mov	r9, r5
 800f232:	46b8      	mov	r8, r7
 800f234:	f04f 0a00 	mov.w	sl, #0
 800f238:	4621      	mov	r1, r4
 800f23a:	a849      	add	r0, sp, #292	@ 0x124
 800f23c:	f003 fdae 	bl	8012d9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f240:	4622      	mov	r2, r4
 800f242:	4653      	mov	r3, sl
 800f244:	a949      	add	r1, sp, #292	@ 0x124
 800f246:	f8cd 9000 	str.w	r9, [sp]
 800f24a:	a819      	add	r0, sp, #100	@ 0x64
 800f24c:	f003 fed6 	bl	8012ffc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f250:	4622      	mov	r2, r4
 800f252:	4653      	mov	r3, sl
 800f254:	a949      	add	r1, sp, #292	@ 0x124
 800f256:	f8cd 8000 	str.w	r8, [sp]
 800f25a:	a829      	add	r0, sp, #164	@ 0xa4
 800f25c:	f003 fece 	bl	8012ffc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f260:	4643      	mov	r3, r8
 800f262:	4622      	mov	r2, r4
 800f264:	a949      	add	r1, sp, #292	@ 0x124
 800f266:	f8cd 9000 	str.w	r9, [sp]
 800f26a:	a839      	add	r0, sp, #228	@ 0xe4
 800f26c:	f003 fec6 	bl	8012ffc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f270:	42af      	cmp	r7, r5
 800f272:	af12      	add	r7, sp, #72	@ 0x48
 800f274:	bfb7      	itett	lt
 800f276:	2300      	movlt	r3, #0
 800f278:	2301      	movge	r3, #1
 800f27a:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800f27c:	ac19      	addlt	r4, sp, #100	@ 0x64
 800f27e:	bfb1      	iteee	lt
 800f280:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800f282:	ad19      	addge	r5, sp, #100	@ 0x64
 800f284:	930e      	strge	r3, [sp, #56]	@ 0x38
 800f286:	ac29      	addge	r4, sp, #164	@ 0xa4
 800f288:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f28a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f28e:	e887 0003 	stmia.w	r7, {r0, r1}
 800f292:	b928      	cbnz	r0, 800f2a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f294:	4b80      	ldr	r3, [pc, #512]	@ (800f498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f296:	6818      	ldr	r0, [r3, #0]
 800f298:	6803      	ldr	r3, [r0, #0]
 800f29a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f29c:	4798      	blx	r3
 800f29e:	6038      	str	r0, [r7, #0]
 800f2a0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f2a2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f2a6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f2aa:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800f2ac:	930c      	str	r3, [sp, #48]	@ 0x30
 800f2ae:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f2b0:	6963      	ldr	r3, [r4, #20]
 800f2b2:	440b      	add	r3, r1
 800f2b4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f2b8:	4408      	add	r0, r1
 800f2ba:	b200      	sxth	r0, r0
 800f2bc:	4283      	cmp	r3, r0
 800f2be:	900d      	str	r0, [sp, #52]	@ 0x34
 800f2c0:	f280 80dd 	bge.w	800f47e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f2c4:	428b      	cmp	r3, r1
 800f2c6:	da08      	bge.n	800f2da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f2c8:	2a00      	cmp	r2, #0
 800f2ca:	dd06      	ble.n	800f2da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f2cc:	1acb      	subs	r3, r1, r3
 800f2ce:	429a      	cmp	r2, r3
 800f2d0:	f2c0 80e4 	blt.w	800f49c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f2d4:	2b00      	cmp	r3, #0
 800f2d6:	f300 80e2 	bgt.w	800f49e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f2da:	6967      	ldr	r7, [r4, #20]
 800f2dc:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f2e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f2e2:	443b      	add	r3, r7
 800f2e4:	461f      	mov	r7, r3
 800f2e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f2e8:	1bdf      	subs	r7, r3, r7
 800f2ea:	4297      	cmp	r7, r2
 800f2ec:	bfa8      	it	ge
 800f2ee:	4617      	movge	r7, r2
 800f2f0:	2f00      	cmp	r7, #0
 800f2f2:	f340 8166 	ble.w	800f5c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f2f6:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f2f8:	6829      	ldr	r1, [r5, #0]
 800f2fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f2fe:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f302:	4411      	add	r1, r2
 800f304:	6820      	ldr	r0, [r4, #0]
 800f306:	4299      	cmp	r1, r3
 800f308:	dd1a      	ble.n	800f340 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f30a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f30e:	4402      	add	r2, r0
 800f310:	440b      	add	r3, r1
 800f312:	b21b      	sxth	r3, r3
 800f314:	429a      	cmp	r2, r3
 800f316:	dc13      	bgt.n	800f340 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f318:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f31a:	a912      	add	r1, sp, #72	@ 0x48
 800f31c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f31e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f320:	681b      	ldr	r3, [r3, #0]
 800f322:	9206      	str	r2, [sp, #24]
 800f324:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f326:	9500      	str	r5, [sp, #0]
 800f328:	9205      	str	r2, [sp, #20]
 800f32a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f32c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f330:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f332:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f336:	aa49      	add	r2, sp, #292	@ 0x124
 800f338:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f33c:	4623      	mov	r3, r4
 800f33e:	47c8      	blx	r9
 800f340:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f344:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f348:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f34c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f350:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f354:	68a1      	ldr	r1, [r4, #8]
 800f356:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f35a:	ed94 6a08 	vldr	s12, [r4, #32]
 800f35e:	edd4 6a07 	vldr	s13, [r4, #28]
 800f362:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f366:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f36a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f36e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f372:	edc4 6a07 	vstr	s13, [r4, #28]
 800f376:	441a      	add	r2, r3
 800f378:	6963      	ldr	r3, [r4, #20]
 800f37a:	3301      	adds	r3, #1
 800f37c:	6022      	str	r2, [r4, #0]
 800f37e:	6163      	str	r3, [r4, #20]
 800f380:	69a3      	ldr	r3, [r4, #24]
 800f382:	3b01      	subs	r3, #1
 800f384:	61a3      	str	r3, [r4, #24]
 800f386:	6923      	ldr	r3, [r4, #16]
 800f388:	440b      	add	r3, r1
 800f38a:	68e1      	ldr	r1, [r4, #12]
 800f38c:	428b      	cmp	r3, r1
 800f38e:	6123      	str	r3, [r4, #16]
 800f390:	db15      	blt.n	800f3be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800f392:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f396:	3201      	adds	r2, #1
 800f398:	1a5b      	subs	r3, r3, r1
 800f39a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f39e:	6022      	str	r2, [r4, #0]
 800f3a0:	6123      	str	r3, [r4, #16]
 800f3a2:	edc4 6a07 	vstr	s13, [r4, #28]
 800f3a6:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f3aa:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f3ae:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f3b2:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f3b6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f3ba:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f3be:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f3c2:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f3c6:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f3ca:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f3ce:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f3d2:	68a9      	ldr	r1, [r5, #8]
 800f3d4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f3d8:	ed95 6a08 	vldr	s12, [r5, #32]
 800f3dc:	edd5 6a07 	vldr	s13, [r5, #28]
 800f3e0:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f3e4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f3e8:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f3ec:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f3f0:	edc5 6a07 	vstr	s13, [r5, #28]
 800f3f4:	441a      	add	r2, r3
 800f3f6:	696b      	ldr	r3, [r5, #20]
 800f3f8:	3301      	adds	r3, #1
 800f3fa:	602a      	str	r2, [r5, #0]
 800f3fc:	616b      	str	r3, [r5, #20]
 800f3fe:	69ab      	ldr	r3, [r5, #24]
 800f400:	3b01      	subs	r3, #1
 800f402:	61ab      	str	r3, [r5, #24]
 800f404:	692b      	ldr	r3, [r5, #16]
 800f406:	440b      	add	r3, r1
 800f408:	68e9      	ldr	r1, [r5, #12]
 800f40a:	428b      	cmp	r3, r1
 800f40c:	612b      	str	r3, [r5, #16]
 800f40e:	db15      	blt.n	800f43c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800f410:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f414:	3201      	adds	r2, #1
 800f416:	1a5b      	subs	r3, r3, r1
 800f418:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f41c:	602a      	str	r2, [r5, #0]
 800f41e:	612b      	str	r3, [r5, #16]
 800f420:	edc5 6a07 	vstr	s13, [r5, #28]
 800f424:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f428:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f42c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f430:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f434:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f438:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f43c:	3f01      	subs	r7, #1
 800f43e:	e757      	b.n	800f2f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800f440:	4299      	cmp	r1, r3
 800f442:	dc13      	bgt.n	800f46c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800f444:	429a      	cmp	r2, r3
 800f446:	da14      	bge.n	800f472 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800f448:	2502      	movs	r5, #2
 800f44a:	2703      	movs	r7, #3
 800f44c:	f04f 0800 	mov.w	r8, #0
 800f450:	46a9      	mov	r9, r5
 800f452:	f04f 0a01 	mov.w	sl, #1
 800f456:	e6ef      	b.n	800f238 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f458:	2501      	movs	r5, #1
 800f45a:	2700      	movs	r7, #0
 800f45c:	46a9      	mov	r9, r5
 800f45e:	46b8      	mov	r8, r7
 800f460:	f04f 0a02 	mov.w	sl, #2
 800f464:	e6e8      	b.n	800f238 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f466:	2501      	movs	r5, #1
 800f468:	2702      	movs	r7, #2
 800f46a:	e6e1      	b.n	800f230 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800f46c:	2500      	movs	r5, #0
 800f46e:	2701      	movs	r7, #1
 800f470:	e7f4      	b.n	800f45c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800f472:	2702      	movs	r7, #2
 800f474:	2503      	movs	r5, #3
 800f476:	f04f 0900 	mov.w	r9, #0
 800f47a:	46b8      	mov	r8, r7
 800f47c:	e7e9      	b.n	800f452 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800f47e:	4613      	mov	r3, r2
 800f480:	e728      	b.n	800f2d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800f482:	bf00      	nop
 800f484:	20016c80 	.word	0x20016c80
 800f488:	fffd8f01 	.word	0xfffd8f01
 800f48c:	00027100 	.word	0x00027100
 800f490:	0004e1ff 	.word	0x0004e1ff
 800f494:	0004e1fe 	.word	0x0004e1fe
 800f498:	20016c88 	.word	0x20016c88
 800f49c:	4613      	mov	r3, r2
 800f49e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800f4a0:	469e      	mov	lr, r3
 800f4a2:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800f4a4:	469c      	mov	ip, r3
 800f4a6:	9111      	str	r1, [sp, #68]	@ 0x44
 800f4a8:	f04f 0900 	mov.w	r9, #0
 800f4ac:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800f4b0:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800f4b4:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800f4b8:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800f4bc:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800f4c0:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800f4c4:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800f4c8:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800f4cc:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800f4d0:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800f4d4:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800f4d8:	f1bc 0f00 	cmp.w	ip, #0
 800f4dc:	d147      	bne.n	800f56e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800f4de:	eb03 0c07 	add.w	ip, r3, r7
 800f4e2:	1ad7      	subs	r7, r2, r3
 800f4e4:	f1b9 0f00 	cmp.w	r9, #0
 800f4e8:	d009      	beq.n	800f4fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800f4ea:	9029      	str	r0, [sp, #164]	@ 0xa4
 800f4ec:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800f4f0:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800f4f4:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800f4f8:	912d      	str	r1, [sp, #180]	@ 0xb4
 800f4fa:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800f4fe:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f500:	f04f 0800 	mov.w	r8, #0
 800f504:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f508:	9111      	str	r1, [sp, #68]	@ 0x44
 800f50a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f50e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f512:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f516:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f51a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f51e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f522:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f526:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f52a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f52e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f532:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f536:	f1be 0f00 	cmp.w	lr, #0
 800f53a:	d031      	beq.n	800f5a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800f53c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f53e:	4450      	add	r0, sl
 800f540:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f544:	4431      	add	r1, r6
 800f546:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f54a:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f54e:	4549      	cmp	r1, r9
 800f550:	db08      	blt.n	800f564 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800f552:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f556:	3001      	adds	r0, #1
 800f558:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f55c:	eba1 0109 	sub.w	r1, r1, r9
 800f560:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f564:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f568:	f04f 0801 	mov.w	r8, #1
 800f56c:	e7e3      	b.n	800f536 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800f56e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f570:	4450      	add	r0, sl
 800f572:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f576:	4431      	add	r1, r6
 800f578:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f57c:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f580:	4541      	cmp	r1, r8
 800f582:	db08      	blt.n	800f596 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800f584:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f588:	3001      	adds	r0, #1
 800f58a:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f58e:	eba1 0108 	sub.w	r1, r1, r8
 800f592:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f596:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f59a:	f04f 0901 	mov.w	r9, #1
 800f59e:	e79b      	b.n	800f4d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800f5a0:	449c      	add	ip, r3
 800f5a2:	1aff      	subs	r7, r7, r3
 800f5a4:	f1b8 0f00 	cmp.w	r8, #0
 800f5a8:	d009      	beq.n	800f5be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800f5aa:	9019      	str	r0, [sp, #100]	@ 0x64
 800f5ac:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f5b0:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f5b4:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f5b8:	911d      	str	r1, [sp, #116]	@ 0x74
 800f5ba:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f5be:	1ad2      	subs	r2, r2, r3
 800f5c0:	e68b      	b.n	800f2da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f5c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f5c4:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800f5c6:	2b00      	cmp	r3, #0
 800f5c8:	f000 80d1 	beq.w	800f76e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800f5cc:	ad19      	add	r5, sp, #100	@ 0x64
 800f5ce:	ac39      	add	r4, sp, #228	@ 0xe4
 800f5d0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f5d2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f5d6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f5da:	930c      	str	r3, [sp, #48]	@ 0x30
 800f5dc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f5de:	6963      	ldr	r3, [r4, #20]
 800f5e0:	440b      	add	r3, r1
 800f5e2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f5e6:	4408      	add	r0, r1
 800f5e8:	b200      	sxth	r0, r0
 800f5ea:	4283      	cmp	r3, r0
 800f5ec:	900d      	str	r0, [sp, #52]	@ 0x34
 800f5ee:	f280 80c1 	bge.w	800f774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f5f2:	428b      	cmp	r3, r1
 800f5f4:	da08      	bge.n	800f608 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f5f6:	2a00      	cmp	r2, #0
 800f5f8:	dd06      	ble.n	800f608 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f5fa:	1acb      	subs	r3, r1, r3
 800f5fc:	429a      	cmp	r2, r3
 800f5fe:	f2c0 80bb 	blt.w	800f778 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f602:	2b00      	cmp	r3, #0
 800f604:	f300 80b9 	bgt.w	800f77a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f608:	6967      	ldr	r7, [r4, #20]
 800f60a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f60e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f610:	443b      	add	r3, r7
 800f612:	461f      	mov	r7, r3
 800f614:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f616:	1bdf      	subs	r7, r3, r7
 800f618:	4297      	cmp	r7, r2
 800f61a:	bfa8      	it	ge
 800f61c:	4617      	movge	r7, r2
 800f61e:	2f00      	cmp	r7, #0
 800f620:	f340 813c 	ble.w	800f89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f624:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f626:	6829      	ldr	r1, [r5, #0]
 800f628:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f62c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f630:	4411      	add	r1, r2
 800f632:	6820      	ldr	r0, [r4, #0]
 800f634:	4299      	cmp	r1, r3
 800f636:	dd1a      	ble.n	800f66e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f638:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f63c:	4402      	add	r2, r0
 800f63e:	440b      	add	r3, r1
 800f640:	b21b      	sxth	r3, r3
 800f642:	429a      	cmp	r2, r3
 800f644:	dc13      	bgt.n	800f66e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f646:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f648:	a912      	add	r1, sp, #72	@ 0x48
 800f64a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f64c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f64e:	681b      	ldr	r3, [r3, #0]
 800f650:	9206      	str	r2, [sp, #24]
 800f652:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f654:	9500      	str	r5, [sp, #0]
 800f656:	9205      	str	r2, [sp, #20]
 800f658:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f65a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f65e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f660:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f664:	aa49      	add	r2, sp, #292	@ 0x124
 800f666:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f66a:	4623      	mov	r3, r4
 800f66c:	47c8      	blx	r9
 800f66e:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f672:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f676:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f67a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f67e:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f682:	68a1      	ldr	r1, [r4, #8]
 800f684:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f688:	ed94 6a08 	vldr	s12, [r4, #32]
 800f68c:	edd4 6a07 	vldr	s13, [r4, #28]
 800f690:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f694:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f698:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f69c:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f6a0:	edc4 6a07 	vstr	s13, [r4, #28]
 800f6a4:	441a      	add	r2, r3
 800f6a6:	6963      	ldr	r3, [r4, #20]
 800f6a8:	3301      	adds	r3, #1
 800f6aa:	6022      	str	r2, [r4, #0]
 800f6ac:	6163      	str	r3, [r4, #20]
 800f6ae:	69a3      	ldr	r3, [r4, #24]
 800f6b0:	3b01      	subs	r3, #1
 800f6b2:	61a3      	str	r3, [r4, #24]
 800f6b4:	6923      	ldr	r3, [r4, #16]
 800f6b6:	440b      	add	r3, r1
 800f6b8:	68e1      	ldr	r1, [r4, #12]
 800f6ba:	428b      	cmp	r3, r1
 800f6bc:	6123      	str	r3, [r4, #16]
 800f6be:	db15      	blt.n	800f6ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f6c0:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f6c4:	3201      	adds	r2, #1
 800f6c6:	1a5b      	subs	r3, r3, r1
 800f6c8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f6cc:	6022      	str	r2, [r4, #0]
 800f6ce:	6123      	str	r3, [r4, #16]
 800f6d0:	edc4 6a07 	vstr	s13, [r4, #28]
 800f6d4:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f6d8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f6dc:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f6e0:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f6e4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f6e8:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f6ec:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f6f0:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f6f4:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f6f8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f6fc:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f700:	68a9      	ldr	r1, [r5, #8]
 800f702:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f706:	ed95 6a08 	vldr	s12, [r5, #32]
 800f70a:	edd5 6a07 	vldr	s13, [r5, #28]
 800f70e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f712:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f716:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f71a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f71e:	edc5 6a07 	vstr	s13, [r5, #28]
 800f722:	441a      	add	r2, r3
 800f724:	696b      	ldr	r3, [r5, #20]
 800f726:	3301      	adds	r3, #1
 800f728:	602a      	str	r2, [r5, #0]
 800f72a:	616b      	str	r3, [r5, #20]
 800f72c:	69ab      	ldr	r3, [r5, #24]
 800f72e:	3b01      	subs	r3, #1
 800f730:	61ab      	str	r3, [r5, #24]
 800f732:	692b      	ldr	r3, [r5, #16]
 800f734:	440b      	add	r3, r1
 800f736:	68e9      	ldr	r1, [r5, #12]
 800f738:	428b      	cmp	r3, r1
 800f73a:	612b      	str	r3, [r5, #16]
 800f73c:	db15      	blt.n	800f76a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f73e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f742:	3201      	adds	r2, #1
 800f744:	1a5b      	subs	r3, r3, r1
 800f746:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f74a:	602a      	str	r2, [r5, #0]
 800f74c:	612b      	str	r3, [r5, #16]
 800f74e:	edc5 6a07 	vstr	s13, [r5, #28]
 800f752:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f756:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f75a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f75e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f762:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f766:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f76a:	3f01      	subs	r7, #1
 800f76c:	e757      	b.n	800f61e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f76e:	ad39      	add	r5, sp, #228	@ 0xe4
 800f770:	ac19      	add	r4, sp, #100	@ 0x64
 800f772:	e72d      	b.n	800f5d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f774:	4613      	mov	r3, r2
 800f776:	e744      	b.n	800f602 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f778:	4613      	mov	r3, r2
 800f77a:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800f77c:	469e      	mov	lr, r3
 800f77e:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800f782:	461f      	mov	r7, r3
 800f784:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800f788:	f04f 0900 	mov.w	r9, #0
 800f78c:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800f790:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800f794:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800f798:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800f79c:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800f7a0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800f7a2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800f7a6:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800f7aa:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800f7ae:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800f7b2:	960e      	str	r6, [sp, #56]	@ 0x38
 800f7b4:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800f7b8:	2f00      	cmp	r7, #0
 800f7ba:	d146      	bne.n	800f84a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f7bc:	449c      	add	ip, r3
 800f7be:	1ad7      	subs	r7, r2, r3
 800f7c0:	f1b9 0f00 	cmp.w	r9, #0
 800f7c4:	d009      	beq.n	800f7da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f7c6:	9039      	str	r0, [sp, #228]	@ 0xe4
 800f7c8:	913d      	str	r1, [sp, #244]	@ 0xf4
 800f7ca:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800f7ce:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800f7d2:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800f7d6:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800f7da:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f7dc:	f04f 0800 	mov.w	r8, #0
 800f7e0:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f7e4:	910e      	str	r1, [sp, #56]	@ 0x38
 800f7e6:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f7ea:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f7ee:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f7f2:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f7f6:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f7fa:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f7fe:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f802:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f806:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f80a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f80e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f812:	f1be 0f00 	cmp.w	lr, #0
 800f816:	d030      	beq.n	800f87a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f818:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f81a:	4450      	add	r0, sl
 800f81c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f820:	4431      	add	r1, r6
 800f822:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f826:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f82a:	4549      	cmp	r1, r9
 800f82c:	db08      	blt.n	800f840 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f82e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f832:	3001      	adds	r0, #1
 800f834:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f838:	eba1 0109 	sub.w	r1, r1, r9
 800f83c:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f840:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f844:	f04f 0801 	mov.w	r8, #1
 800f848:	e7e3      	b.n	800f812 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f84a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f84c:	4450      	add	r0, sl
 800f84e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f852:	4431      	add	r1, r6
 800f854:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f858:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f85c:	4541      	cmp	r1, r8
 800f85e:	db08      	blt.n	800f872 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f860:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f864:	3001      	adds	r0, #1
 800f866:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f86a:	eba1 0108 	sub.w	r1, r1, r8
 800f86e:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f872:	3f01      	subs	r7, #1
 800f874:	f04f 0901 	mov.w	r9, #1
 800f878:	e79e      	b.n	800f7b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f87a:	449c      	add	ip, r3
 800f87c:	1aff      	subs	r7, r7, r3
 800f87e:	f1b8 0f00 	cmp.w	r8, #0
 800f882:	d009      	beq.n	800f898 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f884:	9019      	str	r0, [sp, #100]	@ 0x64
 800f886:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f88a:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f88e:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f892:	911d      	str	r1, [sp, #116]	@ 0x74
 800f894:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f898:	1ad2      	subs	r2, r2, r3
 800f89a:	e6b5      	b.n	800f608 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f89c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f89e:	681b      	ldr	r3, [r3, #0]
 800f8a0:	b923      	cbnz	r3, 800f8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f8a2:	4b04      	ldr	r3, [pc, #16]	@ (800f8b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f8a4:	6818      	ldr	r0, [r3, #0]
 800f8a6:	6803      	ldr	r3, [r0, #0]
 800f8a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f8aa:	4798      	blx	r3
 800f8ac:	b05b      	add	sp, #364	@ 0x16c
 800f8ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f8b2:	bf00      	nop
 800f8b4:	20016c88 	.word	0x20016c88

0800f8b8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800f8b8:	b570      	push	{r4, r5, r6, lr}
 800f8ba:	4604      	mov	r4, r0
 800f8bc:	2500      	movs	r5, #0
 800f8be:	9805      	ldr	r0, [sp, #20]
 800f8c0:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800f8c4:	6061      	str	r1, [r4, #4]
 800f8c6:	8263      	strh	r3, [r4, #18]
 800f8c8:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800f8cc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f8d0:	8025      	strh	r5, [r4, #0]
 800f8d2:	7221      	strb	r1, [r4, #8]
 800f8d4:	7266      	strb	r6, [r4, #9]
 800f8d6:	60e0      	str	r0, [r4, #12]
 800f8d8:	8222      	strh	r2, [r4, #16]
 800f8da:	82a3      	strh	r3, [r4, #20]
 800f8dc:	82e5      	strh	r5, [r4, #22]
 800f8de:	8325      	strh	r5, [r4, #24]
 800f8e0:	8365      	strh	r5, [r4, #26]
 800f8e2:	83a5      	strh	r5, [r4, #28]
 800f8e4:	83e5      	strh	r5, [r4, #30]
 800f8e6:	8425      	strh	r5, [r4, #32]
 800f8e8:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800f8ec:	b32e      	cbz	r6, 800f93a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f8ee:	6803      	ldr	r3, [r0, #0]
 800f8f0:	695b      	ldr	r3, [r3, #20]
 800f8f2:	4798      	blx	r3
 800f8f4:	4606      	mov	r6, r0
 800f8f6:	b300      	cbz	r0, 800f93a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f8f8:	68e0      	ldr	r0, [r4, #12]
 800f8fa:	4631      	mov	r1, r6
 800f8fc:	6803      	ldr	r3, [r0, #0]
 800f8fe:	68db      	ldr	r3, [r3, #12]
 800f900:	4798      	blx	r3
 800f902:	4605      	mov	r5, r0
 800f904:	b1c8      	cbz	r0, 800f93a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f906:	7b43      	ldrb	r3, [r0, #13]
 800f908:	7a82      	ldrb	r2, [r0, #10]
 800f90a:	005b      	lsls	r3, r3, #1
 800f90c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f910:	4313      	orrs	r3, r2
 800f912:	8423      	strh	r3, [r4, #32]
 800f914:	7a63      	ldrb	r3, [r4, #9]
 800f916:	2b06      	cmp	r3, #6
 800f918:	d10f      	bne.n	800f93a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f91a:	68e0      	ldr	r0, [r4, #12]
 800f91c:	462a      	mov	r2, r5
 800f91e:	4631      	mov	r1, r6
 800f920:	6803      	ldr	r3, [r0, #0]
 800f922:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f924:	4798      	blx	r3
 800f926:	7b6b      	ldrb	r3, [r5, #13]
 800f928:	005b      	lsls	r3, r3, #1
 800f92a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f92e:	7aab      	ldrb	r3, [r5, #10]
 800f930:	4313      	orrs	r3, r2
 800f932:	4418      	add	r0, r3
 800f934:	8c23      	ldrh	r3, [r4, #32]
 800f936:	4418      	add	r0, r3
 800f938:	8420      	strh	r0, [r4, #32]
 800f93a:	4620      	mov	r0, r4
 800f93c:	bd70      	pop	{r4, r5, r6, pc}

0800f93e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800f93e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f942:	2400      	movs	r4, #0
 800f944:	b085      	sub	sp, #20
 800f946:	4681      	mov	r9, r0
 800f948:	4688      	mov	r8, r1
 800f94a:	4692      	mov	sl, r2
 800f94c:	469b      	mov	fp, r3
 800f94e:	4627      	mov	r7, r4
 800f950:	4625      	mov	r5, r4
 800f952:	4626      	mov	r6, r4
 800f954:	4554      	cmp	r4, sl
 800f956:	da2a      	bge.n	800f9ae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f958:	2300      	movs	r3, #0
 800f95a:	9303      	str	r3, [sp, #12]
 800f95c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f960:	429d      	cmp	r5, r3
 800f962:	d004      	beq.n	800f96e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800f964:	f242 030b 	movw	r3, #8203	@ 0x200b
 800f968:	429d      	cmp	r5, r3
 800f96a:	bf18      	it	ne
 800f96c:	462f      	movne	r7, r5
 800f96e:	ab03      	add	r3, sp, #12
 800f970:	4642      	mov	r2, r8
 800f972:	4659      	mov	r1, fp
 800f974:	4648      	mov	r0, r9
 800f976:	f003 f827 	bl	80129c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f97a:	4605      	mov	r5, r0
 800f97c:	b1b8      	cbz	r0, 800f9ae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f97e:	280a      	cmp	r0, #10
 800f980:	d015      	beq.n	800f9ae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f982:	9a03      	ldr	r2, [sp, #12]
 800f984:	b18a      	cbz	r2, 800f9aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800f986:	7b50      	ldrb	r0, [r2, #13]
 800f988:	4639      	mov	r1, r7
 800f98a:	7a93      	ldrb	r3, [r2, #10]
 800f98c:	0040      	lsls	r0, r0, #1
 800f98e:	8895      	ldrh	r5, [r2, #4]
 800f990:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800f994:	4303      	orrs	r3, r0
 800f996:	4640      	mov	r0, r8
 800f998:	9301      	str	r3, [sp, #4]
 800f99a:	f8d8 3000 	ldr.w	r3, [r8]
 800f99e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f9a0:	4798      	blx	r3
 800f9a2:	9b01      	ldr	r3, [sp, #4]
 800f9a4:	4418      	add	r0, r3
 800f9a6:	4406      	add	r6, r0
 800f9a8:	b2b6      	uxth	r6, r6
 800f9aa:	3401      	adds	r4, #1
 800f9ac:	e7d2      	b.n	800f954 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800f9ae:	4630      	mov	r0, r6
 800f9b0:	b005      	add	sp, #20
 800f9b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f9b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800f9b6:	2a02      	cmp	r2, #2
 800f9b8:	b530      	push	{r4, r5, lr}
 800f9ba:	d011      	beq.n	800f9e0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800f9bc:	2a03      	cmp	r2, #3
 800f9be:	d01c      	beq.n	800f9fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800f9c0:	2a01      	cmp	r2, #1
 800f9c2:	d10c      	bne.n	800f9de <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f9c4:	888b      	ldrh	r3, [r1, #4]
 800f9c6:	8801      	ldrh	r1, [r0, #0]
 800f9c8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800f9cc:	1a5b      	subs	r3, r3, r1
 800f9ce:	8844      	ldrh	r4, [r0, #2]
 800f9d0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f9d4:	1a9b      	subs	r3, r3, r2
 800f9d6:	8004      	strh	r4, [r0, #0]
 800f9d8:	8081      	strh	r1, [r0, #4]
 800f9da:	8043      	strh	r3, [r0, #2]
 800f9dc:	80c2      	strh	r2, [r0, #6]
 800f9de:	bd30      	pop	{r4, r5, pc}
 800f9e0:	88cb      	ldrh	r3, [r1, #6]
 800f9e2:	8842      	ldrh	r2, [r0, #2]
 800f9e4:	1a9b      	subs	r3, r3, r2
 800f9e6:	88c2      	ldrh	r2, [r0, #6]
 800f9e8:	1a9b      	subs	r3, r3, r2
 800f9ea:	888a      	ldrh	r2, [r1, #4]
 800f9ec:	8801      	ldrh	r1, [r0, #0]
 800f9ee:	8043      	strh	r3, [r0, #2]
 800f9f0:	1a52      	subs	r2, r2, r1
 800f9f2:	8881      	ldrh	r1, [r0, #4]
 800f9f4:	1a52      	subs	r2, r2, r1
 800f9f6:	8002      	strh	r2, [r0, #0]
 800f9f8:	e7f1      	b.n	800f9de <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f9fa:	88cb      	ldrh	r3, [r1, #6]
 800f9fc:	8841      	ldrh	r1, [r0, #2]
 800f9fe:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800fa02:	1a5b      	subs	r3, r3, r1
 800fa04:	f9b0 5000 	ldrsh.w	r5, [r0]
 800fa08:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800fa0c:	1a9b      	subs	r3, r3, r2
 800fa0e:	8045      	strh	r5, [r0, #2]
 800fa10:	8082      	strh	r2, [r0, #4]
 800fa12:	8003      	strh	r3, [r0, #0]
 800fa14:	80c4      	strh	r4, [r0, #6]
 800fa16:	e7e2      	b.n	800f9de <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800fa18 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800fa18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa1c:	b09f      	sub	sp, #124	@ 0x7c
 800fa1e:	920f      	str	r2, [sp, #60]	@ 0x3c
 800fa20:	9312      	str	r3, [sp, #72]	@ 0x48
 800fa22:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800fa24:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800fa26:	8812      	ldrh	r2, [r2, #0]
 800fa28:	889b      	ldrh	r3, [r3, #4]
 800fa2a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800fa2c:	4413      	add	r3, r2
 800fa2e:	900e      	str	r0, [sp, #56]	@ 0x38
 800fa30:	6828      	ldr	r0, [r5, #0]
 800fa32:	b21b      	sxth	r3, r3
 800fa34:	9117      	str	r1, [sp, #92]	@ 0x5c
 800fa36:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800fa3a:	9311      	str	r3, [sp, #68]	@ 0x44
 800fa3c:	6803      	ldr	r3, [r0, #0]
 800fa3e:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800fa42:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800fa44:	4798      	blx	r3
 800fa46:	682b      	ldr	r3, [r5, #0]
 800fa48:	9013      	str	r0, [sp, #76]	@ 0x4c
 800fa4a:	7b1a      	ldrb	r2, [r3, #12]
 800fa4c:	7adb      	ldrb	r3, [r3, #11]
 800fa4e:	9215      	str	r2, [sp, #84]	@ 0x54
 800fa50:	9316      	str	r3, [sp, #88]	@ 0x58
 800fa52:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800fa56:	2c00      	cmp	r4, #0
 800fa58:	d067      	beq.n	800fb2a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800fa5a:	7c2b      	ldrb	r3, [r5, #16]
 800fa5c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800fa5e:	2b06      	cmp	r3, #6
 800fa60:	bf14      	ite	ne
 800fa62:	2301      	movne	r3, #1
 800fa64:	2302      	moveq	r3, #2
 800fa66:	4413      	add	r3, r2
 800fa68:	f04f 0900 	mov.w	r9, #0
 800fa6c:	9310      	str	r3, [sp, #64]	@ 0x40
 800fa6e:	464c      	mov	r4, r9
 800fa70:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800fa74:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800fa78:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fa7a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800fa7c:	4293      	cmp	r3, r2
 800fa7e:	f280 808b 	bge.w	800fb98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800fa82:	2300      	movs	r3, #0
 800fa84:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800fa88:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800fa8c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fa90:	429c      	cmp	r4, r3
 800fa92:	d006      	beq.n	800faa2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800fa94:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fa96:	f242 020b 	movw	r2, #8203	@ 0x200b
 800fa9a:	4294      	cmp	r4, r2
 800fa9c:	bf18      	it	ne
 800fa9e:	4623      	movne	r3, r4
 800faa0:	930c      	str	r3, [sp, #48]	@ 0x30
 800faa2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800faa4:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800faa6:	682a      	ldr	r2, [r5, #0]
 800faa8:	428b      	cmp	r3, r1
 800faaa:	db40      	blt.n	800fb2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800faac:	6813      	ldr	r3, [r2, #0]
 800faae:	4610      	mov	r0, r2
 800fab0:	695b      	ldr	r3, [r3, #20]
 800fab2:	4798      	blx	r3
 800fab4:	4604      	mov	r4, r0
 800fab6:	6828      	ldr	r0, [r5, #0]
 800fab8:	aa1d      	add	r2, sp, #116	@ 0x74
 800faba:	4621      	mov	r1, r4
 800fabc:	6803      	ldr	r3, [r0, #0]
 800fabe:	689f      	ldr	r7, [r3, #8]
 800fac0:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800fac4:	47b8      	blx	r7
 800fac6:	901c      	str	r0, [sp, #112]	@ 0x70
 800fac8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800facc:	429c      	cmp	r4, r3
 800face:	f000 80eb 	beq.w	800fca8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fad2:	f242 030b 	movw	r3, #8203	@ 0x200b
 800fad6:	429c      	cmp	r4, r3
 800fad8:	f000 80e6 	beq.w	800fca8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fadc:	2c00      	cmp	r4, #0
 800fade:	f000 810d 	beq.w	800fcfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800fae2:	2c0a      	cmp	r4, #10
 800fae4:	d05e      	beq.n	800fba4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800fae6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800fae8:	b36a      	cbz	r2, 800fb46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800faea:	8894      	ldrh	r4, [r2, #4]
 800faec:	f1bb 0f00 	cmp.w	fp, #0
 800faf0:	d03a      	beq.n	800fb68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800faf2:	f892 900d 	ldrb.w	r9, [r2, #13]
 800faf6:	f1bb 0f01 	cmp.w	fp, #1
 800fafa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800fafe:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800fb02:	f892 900a 	ldrb.w	r9, [r2, #10]
 800fb06:	ea49 0903 	orr.w	r9, r9, r3
 800fb0a:	d133      	bne.n	800fb74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800fb0c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fb0e:	eba6 0609 	sub.w	r6, r6, r9
 800fb12:	2b00      	cmp	r3, #0
 800fb14:	d14d      	bne.n	800fbb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800fb16:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800fb18:	eb09 0306 	add.w	r3, r9, r6
 800fb1c:	4413      	add	r3, r2
 800fb1e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800fb20:	f9b2 2000 	ldrsh.w	r2, [r2]
 800fb24:	4293      	cmp	r3, r2
 800fb26:	da4e      	bge.n	800fbc6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800fb28:	e036      	b.n	800fb98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800fb2a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800fb2c:	e79c      	b.n	800fa68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800fb2e:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800fb32:	4659      	mov	r1, fp
 800fb34:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800fb36:	9301      	str	r3, [sp, #4]
 800fb38:	ab1d      	add	r3, sp, #116	@ 0x74
 800fb3a:	9300      	str	r3, [sp, #0]
 800fb3c:	ab1c      	add	r3, sp, #112	@ 0x70
 800fb3e:	f002 ff8c 	bl	8012a5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800fb42:	4604      	mov	r4, r0
 800fb44:	e7c0      	b.n	800fac8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800fb46:	6828      	ldr	r0, [r5, #0]
 800fb48:	6803      	ldr	r3, [r0, #0]
 800fb4a:	691b      	ldr	r3, [r3, #16]
 800fb4c:	4798      	blx	r3
 800fb4e:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fb52:	4298      	cmp	r0, r3
 800fb54:	f000 80a8 	beq.w	800fca8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fb58:	f242 030b 	movw	r3, #8203	@ 0x200b
 800fb5c:	4298      	cmp	r0, r3
 800fb5e:	f000 80a3 	beq.w	800fca8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fb62:	f1bb 0f00 	cmp.w	fp, #0
 800fb66:	d100      	bne.n	800fb6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800fb68:	444e      	add	r6, r9
 800fb6a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800fb6c:	2a00      	cmp	r2, #0
 800fb6e:	d1c0      	bne.n	800faf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800fb70:	4691      	mov	r9, r2
 800fb72:	e099      	b.n	800fca8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fb74:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fb76:	2b00      	cmp	r3, #0
 800fb78:	f000 80c2 	beq.w	800fd00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
 800fb7c:	f1bb 0f00 	cmp.w	fp, #0
 800fb80:	d117      	bne.n	800fbb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800fb82:	6828      	ldr	r0, [r5, #0]
 800fb84:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800fb86:	6803      	ldr	r3, [r0, #0]
 800fb88:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fb8a:	4798      	blx	r3
 800fb8c:	4406      	add	r6, r0
 800fb8e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800fb90:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800fb92:	1af3      	subs	r3, r6, r3
 800fb94:	4293      	cmp	r3, r2
 800fb96:	dd16      	ble.n	800fbc6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800fb98:	2c00      	cmp	r4, #0
 800fb9a:	f000 80af 	beq.w	800fcfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800fb9e:	2c0a      	cmp	r4, #10
 800fba0:	f040 809d 	bne.w	800fcde <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800fba4:	240a      	movs	r4, #10
 800fba6:	fab4 f084 	clz	r0, r4
 800fbaa:	0940      	lsrs	r0, r0, #5
 800fbac:	b01f      	add	sp, #124	@ 0x7c
 800fbae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fbb2:	6828      	ldr	r0, [r5, #0]
 800fbb4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800fbb6:	6803      	ldr	r3, [r0, #0]
 800fbb8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fbba:	4798      	blx	r3
 800fbbc:	f1bb 0f01 	cmp.w	fp, #1
 800fbc0:	eba6 0600 	sub.w	r6, r6, r0
 800fbc4:	d0a7      	beq.n	800fb16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800fbc6:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800fbc8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800fbca:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800fbce:	f9b3 8000 	ldrsh.w	r8, [r3]
 800fbd2:	7b43      	ldrb	r3, [r0, #13]
 800fbd4:	4431      	add	r1, r6
 800fbd6:	015b      	lsls	r3, r3, #5
 800fbd8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fbdc:	7983      	ldrb	r3, [r0, #6]
 800fbde:	4313      	orrs	r3, r2
 800fbe0:	440b      	add	r3, r1
 800fbe2:	4543      	cmp	r3, r8
 800fbe4:	db60      	blt.n	800fca8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fbe6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800fbe8:	4299      	cmp	r1, r3
 800fbea:	da5d      	bge.n	800fca8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fbec:	6828      	ldr	r0, [r5, #0]
 800fbee:	45b0      	cmp	r8, r6
 800fbf0:	6803      	ldr	r3, [r0, #0]
 800fbf2:	bfcc      	ite	gt
 800fbf4:	eba8 0806 	subgt.w	r8, r8, r6
 800fbf8:	f04f 0800 	movle.w	r8, #0
 800fbfc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800fbfe:	bfc8      	it	gt
 800fc00:	fa1f f888 	uxthgt.w	r8, r8
 800fc04:	4798      	blx	r3
 800fc06:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800fc08:	7b53      	ldrb	r3, [r2, #13]
 800fc0a:	00d9      	lsls	r1, r3, #3
 800fc0c:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800fc10:	7a11      	ldrb	r1, [r2, #8]
 800fc12:	4339      	orrs	r1, r7
 800fc14:	065f      	lsls	r7, r3, #25
 800fc16:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800fc18:	bf48      	it	mi
 800fc1a:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800fc1e:	4407      	add	r7, r0
 800fc20:	bf48      	it	mi
 800fc22:	b209      	sxthmi	r1, r1
 800fc24:	1a7f      	subs	r7, r7, r1
 800fc26:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800fc28:	b2bf      	uxth	r7, r7
 800fc2a:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800fc2e:	fa0f fa87 	sxth.w	sl, r7
 800fc32:	4551      	cmp	r1, sl
 800fc34:	dd3c      	ble.n	800fcb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800fc36:	011b      	lsls	r3, r3, #4
 800fc38:	79d0      	ldrb	r0, [r2, #7]
 800fc3a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800fc3e:	4303      	orrs	r3, r0
 800fc40:	449a      	add	sl, r3
 800fc42:	4551      	cmp	r1, sl
 800fc44:	dc30      	bgt.n	800fca8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fc46:	1bcf      	subs	r7, r1, r7
 800fc48:	468a      	mov	sl, r1
 800fc4a:	b23f      	sxth	r7, r7
 800fc4c:	9219      	str	r2, [sp, #100]	@ 0x64
 800fc4e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800fc50:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800fc52:	6828      	ldr	r0, [r5, #0]
 800fc54:	2a00      	cmp	r2, #0
 800fc56:	d12d      	bne.n	800fcb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 800fc58:	9318      	str	r3, [sp, #96]	@ 0x60
 800fc5a:	b2bf      	uxth	r7, r7
 800fc5c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fc5e:	6819      	ldr	r1, [r3, #0]
 800fc60:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800fc62:	6801      	ldr	r1, [r0, #0]
 800fc64:	9314      	str	r3, [sp, #80]	@ 0x50
 800fc66:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800fc68:	4788      	blx	r1
 800fc6a:	79a9      	ldrb	r1, [r5, #6]
 800fc6c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800fc6e:	910b      	str	r1, [sp, #44]	@ 0x2c
 800fc70:	7ba9      	ldrb	r1, [r5, #14]
 800fc72:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800fc74:	910a      	str	r1, [sp, #40]	@ 0x28
 800fc76:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800fc7a:	9109      	str	r1, [sp, #36]	@ 0x24
 800fc7c:	68a9      	ldr	r1, [r5, #8]
 800fc7e:	9306      	str	r3, [sp, #24]
 800fc80:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800fc82:	9205      	str	r2, [sp, #20]
 800fc84:	9304      	str	r3, [sp, #16]
 800fc86:	f8cd a004 	str.w	sl, [sp, #4]
 800fc8a:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800fc8e:	44b0      	add	r8, r6
 800fc90:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800fc92:	fa0f f388 	sxth.w	r3, r8
 800fc96:	9300      	str	r3, [sp, #0]
 800fc98:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800fc9a:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800fc9e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800fca0:	681a      	ldr	r2, [r3, #0]
 800fca2:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800fca4:	685b      	ldr	r3, [r3, #4]
 800fca6:	47b8      	blx	r7
 800fca8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fcaa:	3301      	adds	r3, #1
 800fcac:	930d      	str	r3, [sp, #52]	@ 0x34
 800fcae:	e6e3      	b.n	800fa78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800fcb0:	2700      	movs	r7, #0
 800fcb2:	e7cb      	b.n	800fc4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800fcb4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800fcb6:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800fcba:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800fcbc:	f8dc 1000 	ldr.w	r1, [ip]
 800fcc0:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800fcc4:	79aa      	ldrb	r2, [r5, #6]
 800fcc6:	9203      	str	r2, [sp, #12]
 800fcc8:	7baa      	ldrb	r2, [r5, #14]
 800fcca:	9202      	str	r2, [sp, #8]
 800fccc:	68aa      	ldr	r2, [r5, #8]
 800fcce:	e9cd 0200 	strd	r0, r2, [sp]
 800fcd2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800fcd4:	4660      	mov	r0, ip
 800fcd6:	688f      	ldr	r7, [r1, #8]
 800fcd8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800fcda:	47b8      	blx	r7
 800fcdc:	e7e4      	b.n	800fca8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fcde:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800fce0:	3501      	adds	r5, #1
 800fce2:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800fce4:	429d      	cmp	r5, r3
 800fce6:	f6bf af5e 	bge.w	800fba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800fcea:	4659      	mov	r1, fp
 800fcec:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800fcee:	f7f3 fdd3 	bl	8003898 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fcf2:	4604      	mov	r4, r0
 800fcf4:	b110      	cbz	r0, 800fcfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800fcf6:	280a      	cmp	r0, #10
 800fcf8:	d1f2      	bne.n	800fce0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
 800fcfa:	e753      	b.n	800fba4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800fcfc:	2400      	movs	r4, #0
 800fcfe:	e752      	b.n	800fba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800fd00:	f1bb 0f00 	cmp.w	fp, #0
 800fd04:	f43f af43 	beq.w	800fb8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800fd08:	e75d      	b.n	800fbc6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800fd0a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800fd0a:	b530      	push	{r4, r5, lr}
 800fd0c:	8ac4      	ldrh	r4, [r0, #22]
 800fd0e:	8b45      	ldrh	r5, [r0, #26]
 800fd10:	8343      	strh	r3, [r0, #26]
 800fd12:	442c      	add	r4, r5
 800fd14:	1ae4      	subs	r4, r4, r3
 800fd16:	8b83      	ldrh	r3, [r0, #28]
 800fd18:	82c4      	strh	r4, [r0, #22]
 800fd1a:	8b04      	ldrh	r4, [r0, #24]
 800fd1c:	4422      	add	r2, r4
 800fd1e:	440c      	add	r4, r1
 800fd20:	1a59      	subs	r1, r3, r1
 800fd22:	83c2      	strh	r2, [r0, #30]
 800fd24:	8304      	strh	r4, [r0, #24]
 800fd26:	8381      	strh	r1, [r0, #28]
 800fd28:	bd30      	pop	{r4, r5, pc}

0800fd2a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800fd2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd2e:	4604      	mov	r4, r0
 800fd30:	8a47      	ldrh	r7, [r0, #18]
 800fd32:	68c0      	ldr	r0, [r0, #12]
 800fd34:	b085      	sub	sp, #20
 800fd36:	6803      	ldr	r3, [r0, #0]
 800fd38:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fd3a:	4798      	blx	r3
 800fd3c:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800fd40:	7a63      	ldrb	r3, [r4, #9]
 800fd42:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800fd46:	3b01      	subs	r3, #1
 800fd48:	42b7      	cmp	r7, r6
 800fd4a:	bfac      	ite	ge
 800fd4c:	f04f 0900 	movge.w	r9, #0
 800fd50:	f04f 0901 	movlt.w	r9, #1
 800fd54:	2b05      	cmp	r3, #5
 800fd56:	d804      	bhi.n	800fd62 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 800fd58:	e8df f003 	tbb	[pc, r3]
 800fd5c:	470f0854 	.word	0x470f0854
 800fd60:	4c4c      	.short	0x4c4c
 800fd62:	2500      	movs	r5, #0
 800fd64:	46a9      	mov	r9, r5
 800fd66:	462e      	mov	r6, r5
 800fd68:	462f      	mov	r7, r5
 800fd6a:	e00e      	b.n	800fd8a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800fd6c:	42b7      	cmp	r7, r6
 800fd6e:	f04f 0500 	mov.w	r5, #0
 800fd72:	bfb4      	ite	lt
 800fd74:	2600      	movlt	r6, #0
 800fd76:	2601      	movge	r6, #1
 800fd78:	e7f6      	b.n	800fd68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800fd7a:	42b7      	cmp	r7, r6
 800fd7c:	464d      	mov	r5, r9
 800fd7e:	f04f 0900 	mov.w	r9, #0
 800fd82:	bfb4      	ite	lt
 800fd84:	2600      	movlt	r6, #0
 800fd86:	2601      	movge	r6, #1
 800fd88:	464f      	mov	r7, r9
 800fd8a:	f04f 0800 	mov.w	r8, #0
 800fd8e:	f8a4 8016 	strh.w	r8, [r4, #22]
 800fd92:	f8a4 8018 	strh.w	r8, [r4, #24]
 800fd96:	f8cd 8004 	str.w	r8, [sp, #4]
 800fd9a:	2300      	movs	r3, #0
 800fd9c:	9303      	str	r3, [sp, #12]
 800fd9e:	8823      	ldrh	r3, [r4, #0]
 800fda0:	2b20      	cmp	r3, #32
 800fda2:	d033      	beq.n	800fe0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 800fda4:	f242 010b 	movw	r1, #8203	@ 0x200b
 800fda8:	1a5a      	subs	r2, r3, r1
 800fdaa:	f1d2 0a00 	rsbs	sl, r2, #0
 800fdae:	eb4a 0a02 	adc.w	sl, sl, r2
 800fdb2:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800fdb6:	4293      	cmp	r3, r2
 800fdb8:	d008      	beq.n	800fdcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800fdba:	428b      	cmp	r3, r1
 800fdbc:	9a01      	ldr	r2, [sp, #4]
 800fdbe:	bf0e      	itee	eq
 800fdc0:	f04f 0a01 	moveq.w	sl, #1
 800fdc4:	461a      	movne	r2, r3
 800fdc6:	f04f 0a00 	movne.w	sl, #0
 800fdca:	9201      	str	r2, [sp, #4]
 800fdcc:	ab03      	add	r3, sp, #12
 800fdce:	68e2      	ldr	r2, [r4, #12]
 800fdd0:	7a21      	ldrb	r1, [r4, #8]
 800fdd2:	6860      	ldr	r0, [r4, #4]
 800fdd4:	f002 fdf8 	bl	80129c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fdd8:	8020      	strh	r0, [r4, #0]
 800fdda:	b9d8      	cbnz	r0, 800fe14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 800fddc:	8ba2      	ldrh	r2, [r4, #28]
 800fdde:	2300      	movs	r3, #0
 800fde0:	4611      	mov	r1, r2
 800fde2:	4620      	mov	r0, r4
 800fde4:	f7ff ff91 	bl	800fd0a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800fde8:	e06e      	b.n	800fec8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800fdea:	2500      	movs	r5, #0
 800fdec:	2701      	movs	r7, #1
 800fdee:	46a9      	mov	r9, r5
 800fdf0:	462e      	mov	r6, r5
 800fdf2:	e7ca      	b.n	800fd8a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800fdf4:	42b7      	cmp	r7, r6
 800fdf6:	f04f 0500 	mov.w	r5, #0
 800fdfa:	bfb4      	ite	lt
 800fdfc:	2700      	movlt	r7, #0
 800fdfe:	2701      	movge	r7, #1
 800fe00:	462e      	mov	r6, r5
 800fe02:	e7c2      	b.n	800fd8a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800fe04:	2500      	movs	r5, #0
 800fe06:	2601      	movs	r6, #1
 800fe08:	46a9      	mov	r9, r5
 800fe0a:	e7ad      	b.n	800fd68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800fe0c:	9301      	str	r3, [sp, #4]
 800fe0e:	f04f 0a01 	mov.w	sl, #1
 800fe12:	e7db      	b.n	800fdcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800fe14:	8b63      	ldrh	r3, [r4, #26]
 800fe16:	280a      	cmp	r0, #10
 800fe18:	f103 0301 	add.w	r3, r3, #1
 800fe1c:	8363      	strh	r3, [r4, #26]
 800fe1e:	d0dd      	beq.n	800fddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 800fe20:	9a03      	ldr	r2, [sp, #12]
 800fe22:	bb62      	cbnz	r2, 800fe7e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 800fe24:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fe28:	4298      	cmp	r0, r3
 800fe2a:	d003      	beq.n	800fe34 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800fe2c:	f242 030b 	movw	r3, #8203	@ 0x200b
 800fe30:	4298      	cmp	r0, r3
 800fe32:	d1b2      	bne.n	800fd9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fe34:	8823      	ldrh	r3, [r4, #0]
 800fe36:	8ba1      	ldrh	r1, [r4, #28]
 800fe38:	2b20      	cmp	r3, #32
 800fe3a:	d003      	beq.n	800fe44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 800fe3c:	f242 000b 	movw	r0, #8203	@ 0x200b
 800fe40:	4283      	cmp	r3, r0
 800fe42:	d131      	bne.n	800fea8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 800fe44:	f1ba 0f00 	cmp.w	sl, #0
 800fe48:	bf0a      	itet	eq
 800fe4a:	4688      	moveq	r8, r1
 800fe4c:	4650      	movne	r0, sl
 800fe4e:	2001      	moveq	r0, #1
 800fe50:	440a      	add	r2, r1
 800fe52:	8b23      	ldrh	r3, [r4, #24]
 800fe54:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800fe58:	b292      	uxth	r2, r2
 800fe5a:	83a2      	strh	r2, [r4, #28]
 800fe5c:	4413      	add	r3, r2
 800fe5e:	f1b9 0f00 	cmp.w	r9, #0
 800fe62:	d102      	bne.n	800fe6a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 800fe64:	2d00      	cmp	r5, #0
 800fe66:	d042      	beq.n	800feee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 800fe68:	b300      	cbz	r0, 800feac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 800fe6a:	8c21      	ldrh	r1, [r4, #32]
 800fe6c:	4419      	add	r1, r3
 800fe6e:	458c      	cmp	ip, r1
 800fe70:	da37      	bge.n	800fee2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800fe72:	8ae1      	ldrh	r1, [r4, #22]
 800fe74:	2900      	cmp	r1, #0
 800fe76:	d034      	beq.n	800fee2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800fe78:	4563      	cmp	r3, ip
 800fe7a:	dd8e      	ble.n	800fd9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fe7c:	e01d      	b.n	800feba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 800fe7e:	8893      	ldrh	r3, [r2, #4]
 800fe80:	9901      	ldr	r1, [sp, #4]
 800fe82:	8023      	strh	r3, [r4, #0]
 800fe84:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800fe88:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800fe8c:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800fe90:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800fe94:	ea4b 0b00 	orr.w	fp, fp, r0
 800fe98:	68e0      	ldr	r0, [r4, #12]
 800fe9a:	6803      	ldr	r3, [r0, #0]
 800fe9c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fe9e:	4798      	blx	r3
 800fea0:	eb0b 0200 	add.w	r2, fp, r0
 800fea4:	b292      	uxth	r2, r2
 800fea6:	e7c5      	b.n	800fe34 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800fea8:	2000      	movs	r0, #0
 800feaa:	e7d1      	b.n	800fe50 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 800feac:	4563      	cmp	r3, ip
 800feae:	f77f af74 	ble.w	800fd9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800feb2:	8ae3      	ldrh	r3, [r4, #22]
 800feb4:	2b00      	cmp	r3, #0
 800feb6:	f43f af70 	beq.w	800fd9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800feba:	2301      	movs	r3, #1
 800febc:	8c22      	ldrh	r2, [r4, #32]
 800febe:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800fec2:	8be3      	ldrh	r3, [r4, #30]
 800fec4:	4413      	add	r3, r2
 800fec6:	83e3      	strh	r3, [r4, #30]
 800fec8:	68e0      	ldr	r0, [r4, #12]
 800feca:	6803      	ldr	r3, [r0, #0]
 800fecc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fece:	4798      	blx	r3
 800fed0:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800fed4:	4418      	add	r0, r3
 800fed6:	8a63      	ldrh	r3, [r4, #18]
 800fed8:	1a18      	subs	r0, r3, r0
 800feda:	8260      	strh	r0, [r4, #18]
 800fedc:	b005      	add	sp, #20
 800fede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fee2:	2300      	movs	r3, #0
 800fee4:	4611      	mov	r1, r2
 800fee6:	4620      	mov	r0, r4
 800fee8:	f7ff ff0f 	bl	800fd0a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800feec:	e755      	b.n	800fd9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800feee:	4563      	cmp	r3, ip
 800fef0:	dd14      	ble.n	800ff1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 800fef2:	b117      	cbz	r7, 800fefa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 800fef4:	2301      	movs	r3, #1
 800fef6:	460a      	mov	r2, r1
 800fef8:	e772      	b.n	800fde0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 800fefa:	2e00      	cmp	r6, #0
 800fefc:	f43f af4d 	beq.w	800fd9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ff00:	2800      	cmp	r0, #0
 800ff02:	f47f af4a 	bne.w	800fd9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ff06:	f1ba 0f00 	cmp.w	sl, #0
 800ff0a:	d002      	beq.n	800ff12 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 800ff0c:	2301      	movs	r3, #1
 800ff0e:	4642      	mov	r2, r8
 800ff10:	e767      	b.n	800fde2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800ff12:	8ae3      	ldrh	r3, [r4, #22]
 800ff14:	2b00      	cmp	r3, #0
 800ff16:	f43f af40 	beq.w	800fd9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ff1a:	e7d5      	b.n	800fec8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800ff1c:	2800      	cmp	r0, #0
 800ff1e:	f47f af3c 	bne.w	800fd9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ff22:	f1ba 0f00 	cmp.w	sl, #0
 800ff26:	f43f af38 	beq.w	800fd9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ff2a:	2301      	movs	r3, #1
 800ff2c:	4642      	mov	r2, r8
 800ff2e:	e7da      	b.n	800fee6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

0800ff30 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800ff30:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ff32:	4605      	mov	r5, r0
 800ff34:	b08f      	sub	sp, #60	@ 0x3c
 800ff36:	4617      	mov	r7, r2
 800ff38:	461c      	mov	r4, r3
 800ff3a:	460e      	mov	r6, r1
 800ff3c:	b1d1      	cbz	r1, 800ff74 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800ff3e:	681b      	ldr	r3, [r3, #0]
 800ff40:	4620      	mov	r0, r4
 800ff42:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ff44:	4798      	blx	r3
 800ff46:	4240      	negs	r0, r0
 800ff48:	9603      	str	r6, [sp, #12]
 800ff4a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800ff4e:	b200      	sxth	r0, r0
 800ff50:	9700      	str	r7, [sp, #0]
 800ff52:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800ff56:	4629      	mov	r1, r5
 800ff58:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800ff5c:	2401      	movs	r4, #1
 800ff5e:	a805      	add	r0, sp, #20
 800ff60:	f7ff fcaa 	bl	800f8b8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800ff64:	a805      	add	r0, sp, #20
 800ff66:	f7ff fee0 	bl	800fd2a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800ff6a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800ff6e:	b163      	cbz	r3, 800ff8a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800ff70:	3401      	adds	r4, #1
 800ff72:	e7f7      	b.n	800ff64 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800ff74:	2401      	movs	r4, #1
 800ff76:	f002 fdf3 	bl	8012b60 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ff7a:	280a      	cmp	r0, #10
 800ff7c:	4628      	mov	r0, r5
 800ff7e:	bf08      	it	eq
 800ff80:	3401      	addeq	r4, #1
 800ff82:	f002 fded 	bl	8012b60 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ff86:	2800      	cmp	r0, #0
 800ff88:	d1f7      	bne.n	800ff7a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800ff8a:	b2a0      	uxth	r0, r4
 800ff8c:	b00f      	add	sp, #60	@ 0x3c
 800ff8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ff90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800ff90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff94:	b0e3      	sub	sp, #396	@ 0x18c
 800ff96:	461c      	mov	r4, r3
 800ff98:	4683      	mov	fp, r0
 800ff9a:	4688      	mov	r8, r1
 800ff9c:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800ff9e:	2b00      	cmp	r3, #0
 800ffa0:	f000 8112 	beq.w	80101c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ffa4:	6823      	ldr	r3, [r4, #0]
 800ffa6:	2b00      	cmp	r3, #0
 800ffa8:	f000 810e 	beq.w	80101c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ffac:	7ba3      	ldrb	r3, [r4, #14]
 800ffae:	2b00      	cmp	r3, #0
 800ffb0:	f000 810a 	beq.w	80101c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ffb4:	ad0a      	add	r5, sp, #40	@ 0x28
 800ffb6:	6810      	ldr	r0, [r2, #0]
 800ffb8:	6851      	ldr	r1, [r2, #4]
 800ffba:	462b      	mov	r3, r5
 800ffbc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800ffc0:	c303      	stmia	r3!, {r0, r1}
 800ffc2:	2100      	movs	r1, #0
 800ffc4:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800ffc8:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800ffcc:	4628      	mov	r0, r5
 800ffce:	910c      	str	r1, [sp, #48]	@ 0x30
 800ffd0:	a90c      	add	r1, sp, #48	@ 0x30
 800ffd2:	79a2      	ldrb	r2, [r4, #6]
 800ffd4:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ffd8:	f7ff fced 	bl	800f9b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800ffdc:	a90c      	add	r1, sp, #48	@ 0x30
 800ffde:	79a2      	ldrb	r2, [r4, #6]
 800ffe0:	4608      	mov	r0, r1
 800ffe2:	f7ff fce8 	bl	800f9b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800ffe6:	a817      	add	r0, sp, #92	@ 0x5c
 800ffe8:	f002 f98e 	bl	8012308 <_ZN8touchgfx12TextProviderC1Ev>
 800ffec:	6820      	ldr	r0, [r4, #0]
 800ffee:	6803      	ldr	r3, [r0, #0]
 800fff0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800fff2:	4798      	blx	r3
 800fff4:	4606      	mov	r6, r0
 800fff6:	6820      	ldr	r0, [r4, #0]
 800fff8:	6803      	ldr	r3, [r0, #0]
 800fffa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800fffc:	4798      	blx	r3
 800fffe:	4633      	mov	r3, r6
 8010000:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8010002:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8010004:	9000      	str	r0, [sp, #0]
 8010006:	a817      	add	r0, sp, #92	@ 0x5c
 8010008:	f002 f9d9 	bl	80123be <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801000c:	6820      	ldr	r0, [r4, #0]
 801000e:	f894 a004 	ldrb.w	sl, [r4, #4]
 8010012:	6803      	ldr	r3, [r0, #0]
 8010014:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010016:	4798      	blx	r3
 8010018:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 801001c:	6823      	ldr	r3, [r4, #0]
 801001e:	4607      	mov	r7, r0
 8010020:	4406      	add	r6, r0
 8010022:	a830      	add	r0, sp, #192	@ 0xc0
 8010024:	f893 9009 	ldrb.w	r9, [r3, #9]
 8010028:	f002 f96e 	bl	8012308 <_ZN8touchgfx12TextProviderC1Ev>
 801002c:	7c23      	ldrb	r3, [r4, #16]
 801002e:	b17b      	cbz	r3, 8010050 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8010030:	6820      	ldr	r0, [r4, #0]
 8010032:	6803      	ldr	r3, [r0, #0]
 8010034:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010036:	4798      	blx	r3
 8010038:	9009      	str	r0, [sp, #36]	@ 0x24
 801003a:	6820      	ldr	r0, [r4, #0]
 801003c:	6802      	ldr	r2, [r0, #0]
 801003e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8010040:	4790      	blx	r2
 8010042:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010044:	9000      	str	r0, [sp, #0]
 8010046:	a830      	add	r0, sp, #192	@ 0xc0
 8010048:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 801004a:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801004c:	f002 f9b7 	bl	80123be <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010050:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010054:	a80e      	add	r0, sp, #56	@ 0x38
 8010056:	7be2      	ldrb	r2, [r4, #15]
 8010058:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801005c:	1a8a      	subs	r2, r1, r2
 801005e:	7c21      	ldrb	r1, [r4, #16]
 8010060:	9103      	str	r1, [sp, #12]
 8010062:	b292      	uxth	r2, r2
 8010064:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8010068:	9102      	str	r1, [sp, #8]
 801006a:	6821      	ldr	r1, [r4, #0]
 801006c:	9101      	str	r1, [sp, #4]
 801006e:	7961      	ldrb	r1, [r4, #5]
 8010070:	9100      	str	r1, [sp, #0]
 8010072:	a930      	add	r1, sp, #192	@ 0xc0
 8010074:	f7ff fc20 	bl	800f8b8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8010078:	2e00      	cmp	r6, #0
 801007a:	dc5b      	bgt.n	8010134 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 801007c:	af17      	add	r7, sp, #92	@ 0x5c
 801007e:	f04f 0900 	mov.w	r9, #0
 8010082:	7c23      	ldrb	r3, [r4, #16]
 8010084:	2b00      	cmp	r3, #0
 8010086:	f000 80b1 	beq.w	80101ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801008a:	a80e      	add	r0, sp, #56	@ 0x38
 801008c:	f7ff fe4d 	bl	800fd2a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010090:	f1ba 0f00 	cmp.w	sl, #0
 8010094:	f000 80a5 	beq.w	80101e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8010098:	7c23      	ldrb	r3, [r4, #16]
 801009a:	2264      	movs	r2, #100	@ 0x64
 801009c:	4639      	mov	r1, r7
 801009e:	a849      	add	r0, sp, #292	@ 0x124
 80100a0:	9309      	str	r3, [sp, #36]	@ 0x24
 80100a2:	f012 fd2e 	bl	8022b02 <memcpy>
 80100a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80100a8:	2b00      	cmp	r3, #0
 80100aa:	f000 80a7 	beq.w	80101fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80100ae:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 80100b2:	7922      	ldrb	r2, [r4, #4]
 80100b4:	2a01      	cmp	r2, #1
 80100b6:	f040 808a 	bne.w	80101ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80100ba:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 80100be:	1ac0      	subs	r0, r0, r3
 80100c0:	2302      	movs	r3, #2
 80100c2:	fb90 f0f3 	sdiv	r0, r0, r3
 80100c6:	b200      	sxth	r0, r0
 80100c8:	7c23      	ldrb	r3, [r4, #16]
 80100ca:	2b00      	cmp	r3, #0
 80100cc:	f000 808b 	beq.w	80101e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80100d0:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 80100d4:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 80100d8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80100dc:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80100e0:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 80100e4:	2100      	movs	r1, #0
 80100e6:	4410      	add	r0, r2
 80100e8:	4642      	mov	r2, r8
 80100ea:	b200      	sxth	r0, r0
 80100ec:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80100f0:	9000      	str	r0, [sp, #0]
 80100f2:	4658      	mov	r0, fp
 80100f4:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80100f8:	f7ff fc8e 	bl	800fa18 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80100fc:	2800      	cmp	r0, #0
 80100fe:	d163      	bne.n	80101c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010100:	b2b2      	uxth	r2, r6
 8010102:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010106:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801010a:	4413      	add	r3, r2
 801010c:	1a8a      	subs	r2, r1, r2
 801010e:	b21b      	sxth	r3, r3
 8010110:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8010114:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 8010118:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801011c:	2a00      	cmp	r2, #0
 801011e:	d153      	bne.n	80101c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010120:	6822      	ldr	r2, [r4, #0]
 8010122:	8869      	ldrh	r1, [r5, #2]
 8010124:	7a12      	ldrb	r2, [r2, #8]
 8010126:	1a9b      	subs	r3, r3, r2
 8010128:	88ea      	ldrh	r2, [r5, #6]
 801012a:	440a      	add	r2, r1
 801012c:	b212      	sxth	r2, r2
 801012e:	4293      	cmp	r3, r2
 8010130:	dda7      	ble.n	8010082 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8010132:	e049      	b.n	80101c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010134:	7c23      	ldrb	r3, [r4, #16]
 8010136:	444f      	add	r7, r9
 8010138:	b1c3      	cbz	r3, 801016c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801013a:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 801013e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8010142:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010146:	443b      	add	r3, r7
 8010148:	4293      	cmp	r3, r2
 801014a:	da97      	bge.n	801007c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801014c:	a80e      	add	r0, sp, #56	@ 0x38
 801014e:	f7ff fdec 	bl	800fd2a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010152:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 8010156:	3b01      	subs	r3, #1
 8010158:	b29b      	uxth	r3, r3
 801015a:	454b      	cmp	r3, r9
 801015c:	9309      	str	r3, [sp, #36]	@ 0x24
 801015e:	d021      	beq.n	80101a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8010160:	7961      	ldrb	r1, [r4, #5]
 8010162:	a817      	add	r0, sp, #92	@ 0x5c
 8010164:	f7f3 fb98 	bl	8003898 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010168:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801016a:	e7f4      	b.n	8010156 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 801016c:	fa1f f986 	uxth.w	r9, r6
 8010170:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8010174:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010178:	443b      	add	r3, r7
 801017a:	4293      	cmp	r3, r2
 801017c:	f6bf af7e 	bge.w	801007c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8010180:	a817      	add	r0, sp, #92	@ 0x5c
 8010182:	f002 fced 	bl	8012b60 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010186:	b1f8      	cbz	r0, 80101c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010188:	280a      	cmp	r0, #10
 801018a:	d1f1      	bne.n	8010170 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 801018c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010190:	444b      	add	r3, r9
 8010192:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010196:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801019a:	eba3 0309 	sub.w	r3, r3, r9
 801019e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80101a2:	e7e5      	b.n	8010170 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80101a4:	b2b3      	uxth	r3, r6
 80101a6:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 80101aa:	441a      	add	r2, r3
 80101ac:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80101b0:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 80101b4:	1ad3      	subs	r3, r2, r3
 80101b6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80101ba:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80101be:	b11b      	cbz	r3, 80101c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80101c0:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 80101c4:	2b00      	cmp	r3, #0
 80101c6:	d0ba      	beq.n	801013e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80101c8:	b063      	add	sp, #396	@ 0x18c
 80101ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80101ce:	2a02      	cmp	r2, #2
 80101d0:	d105      	bne.n	80101de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80101d2:	7be2      	ldrb	r2, [r4, #15]
 80101d4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 80101d8:	1a80      	subs	r0, r0, r2
 80101da:	1ac0      	subs	r0, r0, r3
 80101dc:	e773      	b.n	80100c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80101de:	2000      	movs	r0, #0
 80101e0:	e772      	b.n	80100c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80101e2:	7be0      	ldrb	r0, [r4, #15]
 80101e4:	e770      	b.n	80100c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80101e6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 80101ea:	e773      	b.n	80100d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80101ec:	f1ba 0f00 	cmp.w	sl, #0
 80101f0:	d0f7      	beq.n	80101e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80101f2:	2264      	movs	r2, #100	@ 0x64
 80101f4:	4639      	mov	r1, r7
 80101f6:	a849      	add	r0, sp, #292	@ 0x124
 80101f8:	f012 fc83 	bl	8022b02 <memcpy>
 80101fc:	2300      	movs	r3, #0
 80101fe:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8010202:	6821      	ldr	r1, [r4, #0]
 8010204:	a849      	add	r0, sp, #292	@ 0x124
 8010206:	f7ff fb9a 	bl	800f93e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801020a:	b203      	sxth	r3, r0
 801020c:	e751      	b.n	80100b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0801020e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801020e:	2b03      	cmp	r3, #3
 8010210:	d818      	bhi.n	8010244 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8010212:	e8df f003 	tbb	[pc, r3]
 8010216:	0602      	.short	0x0602
 8010218:	130d      	.short	0x130d
 801021a:	f9b0 2000 	ldrsh.w	r2, [r0]
 801021e:	1850      	adds	r0, r2, r1
 8010220:	4770      	bx	lr
 8010222:	8803      	ldrh	r3, [r0, #0]
 8010224:	8880      	ldrh	r0, [r0, #4]
 8010226:	4418      	add	r0, r3
 8010228:	b200      	sxth	r0, r0
 801022a:	1a80      	subs	r0, r0, r2
 801022c:	3801      	subs	r0, #1
 801022e:	4770      	bx	lr
 8010230:	8803      	ldrh	r3, [r0, #0]
 8010232:	8880      	ldrh	r0, [r0, #4]
 8010234:	4418      	add	r0, r3
 8010236:	b200      	sxth	r0, r0
 8010238:	1a40      	subs	r0, r0, r1
 801023a:	e7f7      	b.n	801022c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 801023c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010240:	4410      	add	r0, r2
 8010242:	4770      	bx	lr
 8010244:	2000      	movs	r0, #0
 8010246:	4770      	bx	lr

08010248 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010248:	2b03      	cmp	r3, #3
 801024a:	d817      	bhi.n	801027c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 801024c:	e8df f003 	tbb	[pc, r3]
 8010250:	10090602 	.word	0x10090602
 8010254:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010258:	1850      	adds	r0, r2, r1
 801025a:	4770      	bx	lr
 801025c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010260:	e7fa      	b.n	8010258 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010262:	8843      	ldrh	r3, [r0, #2]
 8010264:	88c0      	ldrh	r0, [r0, #6]
 8010266:	4418      	add	r0, r3
 8010268:	b200      	sxth	r0, r0
 801026a:	1a80      	subs	r0, r0, r2
 801026c:	3801      	subs	r0, #1
 801026e:	4770      	bx	lr
 8010270:	8843      	ldrh	r3, [r0, #2]
 8010272:	88c0      	ldrh	r0, [r0, #6]
 8010274:	4418      	add	r0, r3
 8010276:	b200      	sxth	r0, r0
 8010278:	1a40      	subs	r0, r0, r1
 801027a:	e7f7      	b.n	801026c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 801027c:	2000      	movs	r0, #0
 801027e:	4770      	bx	lr

08010280 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010280:	4b01      	ldr	r3, [pc, #4]	@ (8010288 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8010282:	2200      	movs	r2, #0
 8010284:	601a      	str	r2, [r3, #0]
 8010286:	4770      	bx	lr
 8010288:	20016c98 	.word	0x20016c98

0801028c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 801028c:	4603      	mov	r3, r0
 801028e:	b1c8      	cbz	r0, 80102c4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010290:	0c02      	lsrs	r2, r0, #16
 8010292:	0412      	lsls	r2, r2, #16
 8010294:	b9a2      	cbnz	r2, 80102c0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8010296:	0403      	lsls	r3, r0, #16
 8010298:	2010      	movs	r0, #16
 801029a:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 801029e:	bf04      	itt	eq
 80102a0:	021b      	lsleq	r3, r3, #8
 80102a2:	3008      	addeq	r0, #8
 80102a4:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 80102a8:	bf04      	itt	eq
 80102aa:	011b      	lsleq	r3, r3, #4
 80102ac:	3004      	addeq	r0, #4
 80102ae:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 80102b2:	bf04      	itt	eq
 80102b4:	009b      	lsleq	r3, r3, #2
 80102b6:	3002      	addeq	r0, #2
 80102b8:	2b00      	cmp	r3, #0
 80102ba:	db04      	blt.n	80102c6 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80102bc:	3001      	adds	r0, #1
 80102be:	4770      	bx	lr
 80102c0:	2000      	movs	r0, #0
 80102c2:	e7ea      	b.n	801029a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80102c4:	2020      	movs	r0, #32
 80102c6:	4770      	bx	lr

080102c8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80102c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102cc:	b087      	sub	sp, #28
 80102ce:	460d      	mov	r5, r1
 80102d0:	4616      	mov	r6, r2
 80102d2:	4698      	mov	r8, r3
 80102d4:	4601      	mov	r1, r0
 80102d6:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 80102da:	b120      	cbz	r0, 80102e6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80102dc:	b11a      	cbz	r2, 80102e6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80102de:	2d1f      	cmp	r5, #31
 80102e0:	d801      	bhi.n	80102e6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80102e2:	2b1f      	cmp	r3, #31
 80102e4:	d904      	bls.n	80102f0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80102e6:	2000      	movs	r0, #0
 80102e8:	6038      	str	r0, [r7, #0]
 80102ea:	b007      	add	sp, #28
 80102ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102f0:	b97d      	cbnz	r5, 8010312 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80102f2:	b143      	cbz	r3, 8010306 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80102f4:	4602      	mov	r2, r0
 80102f6:	462b      	mov	r3, r5
 80102f8:	4641      	mov	r1, r8
 80102fa:	4630      	mov	r0, r6
 80102fc:	e9cd 4700 	strd	r4, r7, [sp]
 8010300:	f7ff ffe2 	bl	80102c8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010304:	e7f1      	b.n	80102ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8010306:	f04f 33ff 	mov.w	r3, #4294967295
 801030a:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 801030e:	603b      	str	r3, [r7, #0]
 8010310:	e7eb      	b.n	80102ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8010312:	fa32 fa05 	lsrs.w	sl, r2, r5
 8010316:	d106      	bne.n	8010326 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8010318:	4346      	muls	r6, r0
 801031a:	fbb6 f0f4 	udiv	r0, r6, r4
 801031e:	fb04 6610 	mls	r6, r4, r0, r6
 8010322:	603e      	str	r6, [r7, #0]
 8010324:	e7e1      	b.n	80102ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8010326:	2201      	movs	r2, #1
 8010328:	fa00 fb05 	lsl.w	fp, r0, r5
 801032c:	40aa      	lsls	r2, r5
 801032e:	fbbb f9f4 	udiv	r9, fp, r4
 8010332:	3a01      	subs	r2, #1
 8010334:	fb0a f309 	mul.w	r3, sl, r9
 8010338:	fb04 b919 	mls	r9, r4, r9, fp
 801033c:	4016      	ands	r6, r2
 801033e:	9303      	str	r3, [sp, #12]
 8010340:	4630      	mov	r0, r6
 8010342:	f7ff ffa3 	bl	801028c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010346:	462b      	mov	r3, r5
 8010348:	460a      	mov	r2, r1
 801034a:	4601      	mov	r1, r0
 801034c:	4630      	mov	r0, r6
 801034e:	e9cd 4700 	strd	r4, r7, [sp]
 8010352:	f7ff ffb9 	bl	80102c8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010356:	4606      	mov	r6, r0
 8010358:	4648      	mov	r0, r9
 801035a:	eb05 0108 	add.w	r1, r5, r8
 801035e:	f7ff ff95 	bl	801028c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010362:	ab05      	add	r3, sp, #20
 8010364:	464a      	mov	r2, r9
 8010366:	e9cd 4300 	strd	r4, r3, [sp]
 801036a:	4603      	mov	r3, r0
 801036c:	4650      	mov	r0, sl
 801036e:	f7ff ffab 	bl	80102c8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010372:	6839      	ldr	r1, [r7, #0]
 8010374:	9a05      	ldr	r2, [sp, #20]
 8010376:	9b03      	ldr	r3, [sp, #12]
 8010378:	4411      	add	r1, r2
 801037a:	fbb1 f2f4 	udiv	r2, r1, r4
 801037e:	18d3      	adds	r3, r2, r3
 8010380:	fb04 1412 	mls	r4, r4, r2, r1
 8010384:	441e      	add	r6, r3
 8010386:	603c      	str	r4, [r7, #0]
 8010388:	4430      	add	r0, r6
 801038a:	e7ae      	b.n	80102ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0801038c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 801038c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010390:	b085      	sub	sp, #20
 8010392:	f1b0 0900 	subs.w	r9, r0, #0
 8010396:	461d      	mov	r5, r3
 8010398:	4617      	mov	r7, r2
 801039a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801039c:	bfbb      	ittet	lt
 801039e:	f1c9 0900 	rsblt	r9, r9, #0
 80103a2:	f04f 36ff 	movlt.w	r6, #4294967295
 80103a6:	2601      	movge	r6, #1
 80103a8:	6823      	ldrlt	r3, [r4, #0]
 80103aa:	bfbc      	itt	lt
 80103ac:	425b      	neglt	r3, r3
 80103ae:	6023      	strlt	r3, [r4, #0]
 80103b0:	2a00      	cmp	r2, #0
 80103b2:	da04      	bge.n	80103be <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80103b4:	6823      	ldr	r3, [r4, #0]
 80103b6:	4257      	negs	r7, r2
 80103b8:	4276      	negs	r6, r6
 80103ba:	425b      	negs	r3, r3
 80103bc:	6023      	str	r3, [r4, #0]
 80103be:	2d00      	cmp	r5, #0
 80103c0:	4638      	mov	r0, r7
 80103c2:	bfba      	itte	lt
 80103c4:	426d      	neglt	r5, r5
 80103c6:	f04f 38ff 	movlt.w	r8, #4294967295
 80103ca:	f04f 0801 	movge.w	r8, #1
 80103ce:	f7ff ff5d 	bl	801028c <_ZN8touchgfx16TouchCalibration4clzuEm>
 80103d2:	ab03      	add	r3, sp, #12
 80103d4:	463a      	mov	r2, r7
 80103d6:	e9cd 5300 	strd	r5, r3, [sp]
 80103da:	4603      	mov	r3, r0
 80103dc:	4648      	mov	r0, r9
 80103de:	f7ff ff73 	bl	80102c8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80103e2:	6823      	ldr	r3, [r4, #0]
 80103e4:	9a03      	ldr	r2, [sp, #12]
 80103e6:	4546      	cmp	r6, r8
 80103e8:	441a      	add	r2, r3
 80103ea:	fb92 f3f5 	sdiv	r3, r2, r5
 80103ee:	4418      	add	r0, r3
 80103f0:	fb05 2313 	mls	r3, r5, r3, r2
 80103f4:	bf18      	it	ne
 80103f6:	4240      	negne	r0, r0
 80103f8:	1c72      	adds	r2, r6, #1
 80103fa:	6023      	str	r3, [r4, #0]
 80103fc:	d105      	bne.n	801040a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80103fe:	2b00      	cmp	r3, #0
 8010400:	f1c3 0200 	rsb	r2, r3, #0
 8010404:	db0b      	blt.n	801041e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8010406:	6022      	str	r2, [r4, #0]
 8010408:	e006      	b.n	8010418 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801040a:	2e01      	cmp	r6, #1
 801040c:	d104      	bne.n	8010418 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801040e:	2b00      	cmp	r3, #0
 8010410:	da02      	bge.n	8010418 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010412:	442b      	add	r3, r5
 8010414:	3801      	subs	r0, #1
 8010416:	6023      	str	r3, [r4, #0]
 8010418:	b005      	add	sp, #20
 801041a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801041e:	3801      	subs	r0, #1
 8010420:	1b52      	subs	r2, r2, r5
 8010422:	e7f0      	b.n	8010406 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08010424 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010424:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010428:	4c1c      	ldr	r4, [pc, #112]	@ (801049c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801042a:	4605      	mov	r5, r0
 801042c:	6807      	ldr	r7, [r0, #0]
 801042e:	69a3      	ldr	r3, [r4, #24]
 8010430:	b92b      	cbnz	r3, 801043e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8010432:	6840      	ldr	r0, [r0, #4]
 8010434:	e9c5 7000 	strd	r7, r0, [r5]
 8010438:	b004      	add	sp, #16
 801043a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801043e:	f04f 0802 	mov.w	r8, #2
 8010442:	68a2      	ldr	r2, [r4, #8]
 8010444:	ae04      	add	r6, sp, #16
 8010446:	6820      	ldr	r0, [r4, #0]
 8010448:	fb93 f1f8 	sdiv	r1, r3, r8
 801044c:	440a      	add	r2, r1
 801044e:	69e1      	ldr	r1, [r4, #28]
 8010450:	f846 2d04 	str.w	r2, [r6, #-4]!
 8010454:	463a      	mov	r2, r7
 8010456:	9600      	str	r6, [sp, #0]
 8010458:	f7ff ff98 	bl	801038c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801045c:	69a3      	ldr	r3, [r4, #24]
 801045e:	4607      	mov	r7, r0
 8010460:	686a      	ldr	r2, [r5, #4]
 8010462:	6a21      	ldr	r1, [r4, #32]
 8010464:	9600      	str	r6, [sp, #0]
 8010466:	6860      	ldr	r0, [r4, #4]
 8010468:	f7ff ff90 	bl	801038c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801046c:	69a3      	ldr	r3, [r4, #24]
 801046e:	6962      	ldr	r2, [r4, #20]
 8010470:	4407      	add	r7, r0
 8010472:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8010474:	9600      	str	r6, [sp, #0]
 8010476:	68e0      	ldr	r0, [r4, #12]
 8010478:	fb93 f8f8 	sdiv	r8, r3, r8
 801047c:	4442      	add	r2, r8
 801047e:	9203      	str	r2, [sp, #12]
 8010480:	682a      	ldr	r2, [r5, #0]
 8010482:	f7ff ff83 	bl	801038c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010486:	4680      	mov	r8, r0
 8010488:	9600      	str	r6, [sp, #0]
 801048a:	69a3      	ldr	r3, [r4, #24]
 801048c:	686a      	ldr	r2, [r5, #4]
 801048e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8010490:	6920      	ldr	r0, [r4, #16]
 8010492:	f7ff ff7b 	bl	801038c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010496:	4440      	add	r0, r8
 8010498:	e7cc      	b.n	8010434 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801049a:	bf00      	nop
 801049c:	20016c9c 	.word	0x20016c9c

080104a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80104a0:	4b07      	ldr	r3, [pc, #28]	@ (80104c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80104a2:	781b      	ldrb	r3, [r3, #0]
 80104a4:	2b01      	cmp	r3, #1
 80104a6:	d109      	bne.n	80104bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80104a8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80104ac:	f9b0 2000 	ldrsh.w	r2, [r0]
 80104b0:	8003      	strh	r3, [r0, #0]
 80104b2:	4b04      	ldr	r3, [pc, #16]	@ (80104c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80104b4:	881b      	ldrh	r3, [r3, #0]
 80104b6:	3b01      	subs	r3, #1
 80104b8:	1a9b      	subs	r3, r3, r2
 80104ba:	800b      	strh	r3, [r1, #0]
 80104bc:	4770      	bx	lr
 80104be:	bf00      	nop
 80104c0:	20016c80 	.word	0x20016c80
 80104c4:	20016c7c 	.word	0x20016c7c

080104c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80104c8:	4b07      	ldr	r3, [pc, #28]	@ (80104e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80104ca:	b510      	push	{r4, lr}
 80104cc:	781b      	ldrb	r3, [r3, #0]
 80104ce:	2b01      	cmp	r3, #1
 80104d0:	d108      	bne.n	80104e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80104d2:	4b06      	ldr	r3, [pc, #24]	@ (80104ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80104d4:	880c      	ldrh	r4, [r1, #0]
 80104d6:	881b      	ldrh	r3, [r3, #0]
 80104d8:	f9b0 2000 	ldrsh.w	r2, [r0]
 80104dc:	3b01      	subs	r3, #1
 80104de:	1b1b      	subs	r3, r3, r4
 80104e0:	8003      	strh	r3, [r0, #0]
 80104e2:	800a      	strh	r2, [r1, #0]
 80104e4:	bd10      	pop	{r4, pc}
 80104e6:	bf00      	nop
 80104e8:	20016c80 	.word	0x20016c80
 80104ec:	20016c7c 	.word	0x20016c7c

080104f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80104f0:	4b0a      	ldr	r3, [pc, #40]	@ (801051c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80104f2:	b510      	push	{r4, lr}
 80104f4:	781b      	ldrb	r3, [r3, #0]
 80104f6:	2b01      	cmp	r3, #1
 80104f8:	d10e      	bne.n	8010518 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80104fa:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80104fe:	8843      	ldrh	r3, [r0, #2]
 8010500:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010504:	18ca      	adds	r2, r1, r3
 8010506:	4b06      	ldr	r3, [pc, #24]	@ (8010520 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010508:	8044      	strh	r4, [r0, #2]
 801050a:	881b      	ldrh	r3, [r3, #0]
 801050c:	1a9b      	subs	r3, r3, r2
 801050e:	8003      	strh	r3, [r0, #0]
 8010510:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010514:	8081      	strh	r1, [r0, #4]
 8010516:	80c3      	strh	r3, [r0, #6]
 8010518:	bd10      	pop	{r4, pc}
 801051a:	bf00      	nop
 801051c:	20016c80 	.word	0x20016c80
 8010520:	20016c7c 	.word	0x20016c7c

08010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010524:	4b08      	ldr	r3, [pc, #32]	@ (8010548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010526:	781b      	ldrb	r3, [r3, #0]
 8010528:	2b01      	cmp	r3, #1
 801052a:	d10c      	bne.n	8010546 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801052c:	8803      	ldrh	r3, [r0, #0]
 801052e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8010532:	8842      	ldrh	r2, [r0, #2]
 8010534:	8002      	strh	r2, [r0, #0]
 8010536:	185a      	adds	r2, r3, r1
 8010538:	4b04      	ldr	r3, [pc, #16]	@ (801054c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801053a:	881b      	ldrh	r3, [r3, #0]
 801053c:	1a9b      	subs	r3, r3, r2
 801053e:	8043      	strh	r3, [r0, #2]
 8010540:	88c3      	ldrh	r3, [r0, #6]
 8010542:	80c1      	strh	r1, [r0, #6]
 8010544:	8083      	strh	r3, [r0, #4]
 8010546:	4770      	bx	lr
 8010548:	20016c80 	.word	0x20016c80
 801054c:	20016c7c 	.word	0x20016c7c

08010550 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010550:	4b07      	ldr	r3, [pc, #28]	@ (8010570 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010552:	b510      	push	{r4, lr}
 8010554:	781b      	ldrb	r3, [r3, #0]
 8010556:	2b01      	cmp	r3, #1
 8010558:	d108      	bne.n	801056c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801055a:	f9b1 3000 	ldrsh.w	r3, [r1]
 801055e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010562:	8003      	strh	r3, [r0, #0]
 8010564:	8893      	ldrh	r3, [r2, #4]
 8010566:	3b01      	subs	r3, #1
 8010568:	1b1b      	subs	r3, r3, r4
 801056a:	800b      	strh	r3, [r1, #0]
 801056c:	bd10      	pop	{r4, pc}
 801056e:	bf00      	nop
 8010570:	20016c80 	.word	0x20016c80

08010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010574:	4b0a      	ldr	r3, [pc, #40]	@ (80105a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010576:	460a      	mov	r2, r1
 8010578:	b510      	push	{r4, lr}
 801057a:	781b      	ldrb	r3, [r3, #0]
 801057c:	2b01      	cmp	r3, #1
 801057e:	d10d      	bne.n	801059c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010580:	8881      	ldrh	r1, [r0, #4]
 8010582:	8803      	ldrh	r3, [r0, #0]
 8010584:	440b      	add	r3, r1
 8010586:	4601      	mov	r1, r0
 8010588:	3b01      	subs	r3, #1
 801058a:	f821 3b02 	strh.w	r3, [r1], #2
 801058e:	f7ff ffdf 	bl	8010550 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010592:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010596:	88c2      	ldrh	r2, [r0, #6]
 8010598:	80c3      	strh	r3, [r0, #6]
 801059a:	8082      	strh	r2, [r0, #4]
 801059c:	bd10      	pop	{r4, pc}
 801059e:	bf00      	nop
 80105a0:	20016c80 	.word	0x20016c80

080105a4 <_ZN8touchgfx11Application13requestRedrawEv>:
 80105a4:	4b06      	ldr	r3, [pc, #24]	@ (80105c0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80105a6:	2100      	movs	r1, #0
 80105a8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80105ac:	4b05      	ldr	r3, [pc, #20]	@ (80105c4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80105ae:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 80105b2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80105b6:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 80105ba:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 80105be:	4770      	bx	lr
 80105c0:	20016c7c 	.word	0x20016c7c
 80105c4:	20016c7e 	.word	0x20016c7e

080105c8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80105c8:	4b03      	ldr	r3, [pc, #12]	@ (80105d8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80105ca:	6818      	ldr	r0, [r3, #0]
 80105cc:	b110      	cbz	r0, 80105d4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80105ce:	6803      	ldr	r3, [r0, #0]
 80105d0:	699b      	ldr	r3, [r3, #24]
 80105d2:	4718      	bx	r3
 80105d4:	4770      	bx	lr
 80105d6:	bf00      	nop
 80105d8:	20016ccc 	.word	0x20016ccc

080105dc <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80105dc:	4770      	bx	lr
	...

080105e0 <_ZN8touchgfx11Application4drawEv>:
 80105e0:	4b09      	ldr	r3, [pc, #36]	@ (8010608 <_ZN8touchgfx11Application4drawEv+0x28>)
 80105e2:	b507      	push	{r0, r1, r2, lr}
 80105e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80105e8:	2100      	movs	r1, #0
 80105ea:	4b08      	ldr	r3, [pc, #32]	@ (801060c <_ZN8touchgfx11Application4drawEv+0x2c>)
 80105ec:	9100      	str	r1, [sp, #0]
 80105ee:	4669      	mov	r1, sp
 80105f0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80105f4:	f8ad 2004 	strh.w	r2, [sp, #4]
 80105f8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80105fc:	6803      	ldr	r3, [r0, #0]
 80105fe:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010600:	4798      	blx	r3
 8010602:	b003      	add	sp, #12
 8010604:	f85d fb04 	ldr.w	pc, [sp], #4
 8010608:	20016c7c 	.word	0x20016c7c
 801060c:	20016c7e 	.word	0x20016c7e

08010610 <_ZN8touchgfx11Application10invalidateEv>:
 8010610:	4b09      	ldr	r3, [pc, #36]	@ (8010638 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8010612:	b082      	sub	sp, #8
 8010614:	2100      	movs	r1, #0
 8010616:	f9b3 2000 	ldrsh.w	r2, [r3]
 801061a:	4b08      	ldr	r3, [pc, #32]	@ (801063c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 801061c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010620:	aa02      	add	r2, sp, #8
 8010622:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010626:	9100      	str	r1, [sp, #0]
 8010628:	f8ad 3006 	strh.w	r3, [sp, #6]
 801062c:	6803      	ldr	r3, [r0, #0]
 801062e:	e912 0006 	ldmdb	r2, {r1, r2}
 8010632:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010634:	b002      	add	sp, #8
 8010636:	4718      	bx	r3
 8010638:	20016c7c 	.word	0x20016c7c
 801063c:	20016c7e 	.word	0x20016c7e

08010640 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010640:	4b03      	ldr	r3, [pc, #12]	@ (8010650 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010642:	6818      	ldr	r0, [r3, #0]
 8010644:	b110      	cbz	r0, 801064c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010646:	6803      	ldr	r3, [r0, #0]
 8010648:	69db      	ldr	r3, [r3, #28]
 801064a:	4718      	bx	r3
 801064c:	4770      	bx	lr
 801064e:	bf00      	nop
 8010650:	20016ccc 	.word	0x20016ccc

08010654 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010654:	4b03      	ldr	r3, [pc, #12]	@ (8010664 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010656:	6818      	ldr	r0, [r3, #0]
 8010658:	b110      	cbz	r0, 8010660 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801065a:	6803      	ldr	r3, [r0, #0]
 801065c:	6a1b      	ldr	r3, [r3, #32]
 801065e:	4718      	bx	r3
 8010660:	4770      	bx	lr
 8010662:	bf00      	nop
 8010664:	20016ccc 	.word	0x20016ccc

08010668 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010668:	2300      	movs	r3, #0
 801066a:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 801066e:	4770      	bx	lr

08010670 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8010670:	4b03      	ldr	r3, [pc, #12]	@ (8010680 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8010672:	6818      	ldr	r0, [r3, #0]
 8010674:	b110      	cbz	r0, 801067c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010676:	6803      	ldr	r3, [r0, #0]
 8010678:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801067a:	4718      	bx	r3
 801067c:	4770      	bx	lr
 801067e:	bf00      	nop
 8010680:	20016ccc 	.word	0x20016ccc

08010684 <_ZN8touchgfx11ApplicationD1Ev>:
 8010684:	4770      	bx	lr

08010686 <_ZN8touchgfx11ApplicationD0Ev>:
 8010686:	b510      	push	{r4, lr}
 8010688:	4604      	mov	r4, r0
 801068a:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 801068e:	f011 f93d 	bl	802190c <_ZdlPvj>
 8010692:	4620      	mov	r0, r4
 8010694:	bd10      	pop	{r4, pc}

08010696 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8010696:	b510      	push	{r4, lr}
 8010698:	f9b1 4000 	ldrsh.w	r4, [r1]
 801069c:	888a      	ldrh	r2, [r1, #4]
 801069e:	f9b0 3000 	ldrsh.w	r3, [r0]
 80106a2:	4422      	add	r2, r4
 80106a4:	b212      	sxth	r2, r2
 80106a6:	4293      	cmp	r3, r2
 80106a8:	da15      	bge.n	80106d6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80106aa:	8882      	ldrh	r2, [r0, #4]
 80106ac:	4413      	add	r3, r2
 80106ae:	b21b      	sxth	r3, r3
 80106b0:	429c      	cmp	r4, r3
 80106b2:	da10      	bge.n	80106d6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80106b4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80106b8:	88c9      	ldrh	r1, [r1, #6]
 80106ba:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80106be:	4419      	add	r1, r3
 80106c0:	b209      	sxth	r1, r1
 80106c2:	428a      	cmp	r2, r1
 80106c4:	da07      	bge.n	80106d6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80106c6:	88c0      	ldrh	r0, [r0, #6]
 80106c8:	4410      	add	r0, r2
 80106ca:	b200      	sxth	r0, r0
 80106cc:	4283      	cmp	r3, r0
 80106ce:	bfac      	ite	ge
 80106d0:	2000      	movge	r0, #0
 80106d2:	2001      	movlt	r0, #1
 80106d4:	bd10      	pop	{r4, pc}
 80106d6:	2000      	movs	r0, #0
 80106d8:	e7fc      	b.n	80106d4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080106da <_ZN8touchgfx4Rect10restrictToEss>:
 80106da:	f9b0 3000 	ldrsh.w	r3, [r0]
 80106de:	2b00      	cmp	r3, #0
 80106e0:	b510      	push	{r4, lr}
 80106e2:	da04      	bge.n	80106ee <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80106e4:	8884      	ldrh	r4, [r0, #4]
 80106e6:	4423      	add	r3, r4
 80106e8:	8083      	strh	r3, [r0, #4]
 80106ea:	2300      	movs	r3, #0
 80106ec:	8003      	strh	r3, [r0, #0]
 80106ee:	f9b0 4000 	ldrsh.w	r4, [r0]
 80106f2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80106f6:	1b09      	subs	r1, r1, r4
 80106f8:	428b      	cmp	r3, r1
 80106fa:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80106fe:	bfc8      	it	gt
 8010700:	8081      	strhgt	r1, [r0, #4]
 8010702:	2b00      	cmp	r3, #0
 8010704:	da04      	bge.n	8010710 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8010706:	88c1      	ldrh	r1, [r0, #6]
 8010708:	440b      	add	r3, r1
 801070a:	80c3      	strh	r3, [r0, #6]
 801070c:	2300      	movs	r3, #0
 801070e:	8043      	strh	r3, [r0, #2]
 8010710:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010714:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8010718:	1a52      	subs	r2, r2, r1
 801071a:	4293      	cmp	r3, r2
 801071c:	bfc8      	it	gt
 801071e:	80c2      	strhgt	r2, [r0, #6]
 8010720:	bd10      	pop	{r4, pc}
	...

08010724 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8010724:	4b10      	ldr	r3, [pc, #64]	@ (8010768 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8010726:	b510      	push	{r4, lr}
 8010728:	460c      	mov	r4, r1
 801072a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801072e:	4b0f      	ldr	r3, [pc, #60]	@ (801076c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8010730:	4620      	mov	r0, r4
 8010732:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010736:	f7ff ffd0 	bl	80106da <_ZN8touchgfx4Rect10restrictToEss>
 801073a:	4b0d      	ldr	r3, [pc, #52]	@ (8010770 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801073c:	6818      	ldr	r0, [r3, #0]
 801073e:	b190      	cbz	r0, 8010766 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8010740:	6803      	ldr	r3, [r0, #0]
 8010742:	4621      	mov	r1, r4
 8010744:	689b      	ldr	r3, [r3, #8]
 8010746:	4798      	blx	r3
 8010748:	4b0a      	ldr	r3, [pc, #40]	@ (8010774 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801074a:	6818      	ldr	r0, [r3, #0]
 801074c:	b118      	cbz	r0, 8010756 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801074e:	6803      	ldr	r3, [r0, #0]
 8010750:	4621      	mov	r1, r4
 8010752:	689b      	ldr	r3, [r3, #8]
 8010754:	4798      	blx	r3
 8010756:	4b08      	ldr	r3, [pc, #32]	@ (8010778 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8010758:	4621      	mov	r1, r4
 801075a:	6818      	ldr	r0, [r3, #0]
 801075c:	6803      	ldr	r3, [r0, #0]
 801075e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010762:	69db      	ldr	r3, [r3, #28]
 8010764:	4718      	bx	r3
 8010766:	bd10      	pop	{r4, pc}
 8010768:	20016c7e 	.word	0x20016c7e
 801076c:	20016c7c 	.word	0x20016c7c
 8010770:	20016ccc 	.word	0x20016ccc
 8010774:	20016cc8 	.word	0x20016cc8
 8010778:	20016c88 	.word	0x20016c88

0801077c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801077c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801077e:	4606      	mov	r6, r0
 8010780:	4608      	mov	r0, r1
 8010782:	460f      	mov	r7, r1
 8010784:	f7f9 fd97 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010788:	b9e8      	cbnz	r0, 80107c6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801078a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801078e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8010792:	42a5      	cmp	r5, r4
 8010794:	db17      	blt.n	80107c6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010796:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801079a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801079e:	429a      	cmp	r2, r3
 80107a0:	db11      	blt.n	80107c6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80107a2:	88b9      	ldrh	r1, [r7, #4]
 80107a4:	440d      	add	r5, r1
 80107a6:	88b1      	ldrh	r1, [r6, #4]
 80107a8:	440c      	add	r4, r1
 80107aa:	b22d      	sxth	r5, r5
 80107ac:	b224      	sxth	r4, r4
 80107ae:	42a5      	cmp	r5, r4
 80107b0:	dc09      	bgt.n	80107c6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80107b2:	88f8      	ldrh	r0, [r7, #6]
 80107b4:	4410      	add	r0, r2
 80107b6:	88f2      	ldrh	r2, [r6, #6]
 80107b8:	4413      	add	r3, r2
 80107ba:	b200      	sxth	r0, r0
 80107bc:	b21b      	sxth	r3, r3
 80107be:	4298      	cmp	r0, r3
 80107c0:	bfcc      	ite	gt
 80107c2:	2000      	movgt	r0, #0
 80107c4:	2001      	movle	r0, #1
 80107c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080107c8 <_ZN8touchgfx11Application11getInstanceEv>:
 80107c8:	4b01      	ldr	r3, [pc, #4]	@ (80107d0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80107ca:	6818      	ldr	r0, [r3, #0]
 80107cc:	4770      	bx	lr
 80107ce:	bf00      	nop
 80107d0:	20016cdc 	.word	0x20016cdc

080107d4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80107d4:	2300      	movs	r3, #0
 80107d6:	b510      	push	{r4, lr}
 80107d8:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 80107dc:	4604      	mov	r4, r0
 80107de:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80107e2:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 80107e6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80107ea:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 80107ee:	429a      	cmp	r2, r3
 80107f0:	d90e      	bls.n	8010810 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80107f2:	18e2      	adds	r2, r4, r3
 80107f4:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 80107f8:	b122      	cbz	r2, 8010804 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80107fa:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80107fe:	6803      	ldr	r3, [r0, #0]
 8010800:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010802:	4798      	blx	r3
 8010804:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8010808:	3301      	adds	r3, #1
 801080a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801080e:	e7ea      	b.n	80107e6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8010810:	bd10      	pop	{r4, pc}

08010812 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8010812:	2300      	movs	r3, #0
 8010814:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 8010818:	30a4      	adds	r0, #164	@ 0xa4
 801081a:	f820 3c24 	strh.w	r3, [r0, #-36]
 801081e:	f802 3b01 	strb.w	r3, [r2], #1
 8010822:	4282      	cmp	r2, r0
 8010824:	d1fb      	bne.n	801081e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8010826:	4770      	bx	lr

08010828 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010828:	b570      	push	{r4, r5, r6, lr}
 801082a:	4c0b      	ldr	r4, [pc, #44]	@ (8010858 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 801082c:	4605      	mov	r5, r0
 801082e:	460e      	mov	r6, r1
 8010830:	6820      	ldr	r0, [r4, #0]
 8010832:	b110      	cbz	r0, 801083a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8010834:	6803      	ldr	r3, [r0, #0]
 8010836:	695b      	ldr	r3, [r3, #20]
 8010838:	4798      	blx	r3
 801083a:	1d28      	adds	r0, r5, #4
 801083c:	f7ff ffe9 	bl	8010812 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8010840:	6026      	str	r6, [r4, #0]
 8010842:	6833      	ldr	r3, [r6, #0]
 8010844:	4630      	mov	r0, r6
 8010846:	68db      	ldr	r3, [r3, #12]
 8010848:	4798      	blx	r3
 801084a:	682b      	ldr	r3, [r5, #0]
 801084c:	4628      	mov	r0, r5
 801084e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010850:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010854:	4718      	bx	r3
 8010856:	bf00      	nop
 8010858:	20016ccc 	.word	0x20016ccc

0801085c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 801085c:	2300      	movs	r3, #0
 801085e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 8010862:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 8010866:	461a      	mov	r2, r3
 8010868:	b5f0      	push	{r4, r5, r6, r7, lr}
 801086a:	461c      	mov	r4, r3
 801086c:	461d      	mov	r5, r3
 801086e:	459c      	cmp	ip, r3
 8010870:	dd1a      	ble.n	80108a8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8010872:	18c6      	adds	r6, r0, r3
 8010874:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8010878:	b16e      	cbz	r6, 8010896 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801087a:	429a      	cmp	r2, r3
 801087c:	d008      	beq.n	8010890 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801087e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8010882:	fa1f fe82 	uxth.w	lr, r2
 8010886:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801088a:	1887      	adds	r7, r0, r2
 801088c:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8010890:	3201      	adds	r2, #1
 8010892:	3301      	adds	r3, #1
 8010894:	e7eb      	b.n	801086e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8010896:	4299      	cmp	r1, r3
 8010898:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 801089c:	bfa8      	it	ge
 801089e:	3501      	addge	r5, #1
 80108a0:	429e      	cmp	r6, r3
 80108a2:	bfc8      	it	gt
 80108a4:	3401      	addgt	r4, #1
 80108a6:	e7f4      	b.n	8010892 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80108a8:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 80108ac:	1b49      	subs	r1, r1, r5
 80108ae:	1b1b      	subs	r3, r3, r4
 80108b0:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 80108b4:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 80108b8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80108bc:	4293      	cmp	r3, r2
 80108be:	dd03      	ble.n	80108c8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80108c0:	3b01      	subs	r3, #1
 80108c2:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 80108c6:	e7f7      	b.n	80108b8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80108c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080108cc <_ZN8touchgfx11Application15handleTickEventEv>:
 80108cc:	b570      	push	{r4, r5, r6, lr}
 80108ce:	4d16      	ldr	r5, [pc, #88]	@ (8010928 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80108d0:	4604      	mov	r4, r0
 80108d2:	6828      	ldr	r0, [r5, #0]
 80108d4:	b140      	cbz	r0, 80108e8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80108d6:	7a03      	ldrb	r3, [r0, #8]
 80108d8:	b933      	cbnz	r3, 80108e8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80108da:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80108de:	6803      	ldr	r3, [r0, #0]
 80108e0:	689b      	ldr	r3, [r3, #8]
 80108e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80108e6:	4718      	bx	r3
 80108e8:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 80108ec:	4e0f      	ldr	r6, [pc, #60]	@ (801092c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80108ee:	b973      	cbnz	r3, 801090e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80108f0:	b168      	cbz	r0, 801090e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80108f2:	7a03      	ldrb	r3, [r0, #8]
 80108f4:	b15b      	cbz	r3, 801090e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80108f6:	6830      	ldr	r0, [r6, #0]
 80108f8:	b110      	cbz	r0, 8010900 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80108fa:	6803      	ldr	r3, [r0, #0]
 80108fc:	691b      	ldr	r3, [r3, #16]
 80108fe:	4798      	blx	r3
 8010900:	6828      	ldr	r0, [r5, #0]
 8010902:	6803      	ldr	r3, [r0, #0]
 8010904:	68db      	ldr	r3, [r3, #12]
 8010906:	4798      	blx	r3
 8010908:	2301      	movs	r3, #1
 801090a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801090e:	3404      	adds	r4, #4
 8010910:	4620      	mov	r0, r4
 8010912:	f7ff ff5f 	bl	80107d4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8010916:	4620      	mov	r0, r4
 8010918:	f7ff ffa0 	bl	801085c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 801091c:	6830      	ldr	r0, [r6, #0]
 801091e:	b110      	cbz	r0, 8010926 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8010920:	6803      	ldr	r3, [r0, #0]
 8010922:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010924:	e7dd      	b.n	80108e2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8010926:	bd70      	pop	{r4, r5, r6, pc}
 8010928:	20016cd0 	.word	0x20016cd0
 801092c:	20016ccc 	.word	0x20016ccc

08010930 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8010930:	4603      	mov	r3, r0
 8010932:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 8010936:	2200      	movs	r2, #0
 8010938:	801a      	strh	r2, [r3, #0]
 801093a:	3308      	adds	r3, #8
 801093c:	f823 2c06 	strh.w	r2, [r3, #-6]
 8010940:	f823 2c04 	strh.w	r2, [r3, #-4]
 8010944:	f823 2c02 	strh.w	r2, [r3, #-2]
 8010948:	428b      	cmp	r3, r1
 801094a:	d1f5      	bne.n	8010938 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801094c:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 8010950:	4770      	bx	lr
	...

08010954 <_ZN8touchgfx11ApplicationC1Ev>:
 8010954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010956:	4b1d      	ldr	r3, [pc, #116]	@ (80109cc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8010958:	4606      	mov	r6, r0
 801095a:	4604      	mov	r4, r0
 801095c:	2500      	movs	r5, #0
 801095e:	f846 3b04 	str.w	r3, [r6], #4
 8010962:	22a8      	movs	r2, #168	@ 0xa8
 8010964:	2100      	movs	r1, #0
 8010966:	4630      	mov	r0, r6
 8010968:	f011 ffd6 	bl	8022918 <memset>
 801096c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8010970:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8010974:	4f16      	ldr	r7, [pc, #88]	@ (80109d0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8010976:	f7ff ffdb 	bl	8010930 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801097a:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 801097e:	f7ff ffd7 	bl	8010930 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010982:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8010986:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 801098a:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 801098e:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8010992:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8010996:	490f      	ldr	r1, [pc, #60]	@ (80109d4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8010998:	480f      	ldr	r0, [pc, #60]	@ (80109d8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801099a:	f010 fb9b 	bl	80210d4 <CRC_Lock>
 801099e:	4b0f      	ldr	r3, [pc, #60]	@ (80109dc <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80109a0:	b158      	cbz	r0, 80109ba <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80109a2:	801d      	strh	r5, [r3, #0]
 80109a4:	2300      	movs	r3, #0
 80109a6:	4a0e      	ldr	r2, [pc, #56]	@ (80109e0 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80109a8:	4630      	mov	r0, r6
 80109aa:	6013      	str	r3, [r2, #0]
 80109ac:	4a0d      	ldr	r2, [pc, #52]	@ (80109e4 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80109ae:	603b      	str	r3, [r7, #0]
 80109b0:	6013      	str	r3, [r2, #0]
 80109b2:	f7ff ff2e 	bl	8010812 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80109b6:	4620      	mov	r0, r4
 80109b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80109ba:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80109be:	2002      	movs	r0, #2
 80109c0:	801a      	strh	r2, [r3, #0]
 80109c2:	6038      	str	r0, [r7, #0]
 80109c4:	f001 fb26 	bl	8012014 <_ZN8touchgfx6Screen4drawEv>
 80109c8:	e7ec      	b.n	80109a4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80109ca:	bf00      	nop
 80109cc:	080255ec 	.word	0x080255ec
 80109d0:	20016ccc 	.word	0x20016ccc
 80109d4:	b5e8b5cd 	.word	0xb5e8b5cd
 80109d8:	f407a5c2 	.word	0xf407a5c2
 80109dc:	20000044 	.word	0x20000044
 80109e0:	20016cdc 	.word	0x20016cdc
 80109e4:	20016cd0 	.word	0x20016cd0

080109e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80109e8:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 80109ec:	3b01      	subs	r3, #1
 80109ee:	b29b      	uxth	r3, r3
 80109f0:	428b      	cmp	r3, r1
 80109f2:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 80109f6:	b510      	push	{r4, lr}
 80109f8:	d908      	bls.n	8010a0c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80109fa:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80109fe:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8010a02:	681a      	ldr	r2, [r3, #0]
 8010a04:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010a08:	685a      	ldr	r2, [r3, #4]
 8010a0a:	6062      	str	r2, [r4, #4]
 8010a0c:	bd10      	pop	{r4, pc}
	...

08010a10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010a10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a14:	b08f      	sub	sp, #60	@ 0x3c
 8010a16:	4b8f      	ldr	r3, [pc, #572]	@ (8010c54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8010a18:	4683      	mov	fp, r0
 8010a1a:	ac0a      	add	r4, sp, #40	@ 0x28
 8010a1c:	e884 0006 	stmia.w	r4, {r1, r2}
 8010a20:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010a24:	4620      	mov	r0, r4
 8010a26:	4b8c      	ldr	r3, [pc, #560]	@ (8010c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8010a28:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010a2c:	f7ff fe55 	bl	80106da <_ZN8touchgfx4Rect10restrictToEss>
 8010a30:	4620      	mov	r0, r4
 8010a32:	f7f9 fc40 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a36:	2800      	cmp	r0, #0
 8010a38:	d16a      	bne.n	8010b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010a3a:	9403      	str	r4, [sp, #12]
 8010a3c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8010a40:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8010a44:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8010a48:	9301      	str	r3, [sp, #4]
 8010a4a:	35a4      	adds	r5, #164	@ 0xa4
 8010a4c:	b15c      	cbz	r4, 8010a66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8010a4e:	4629      	mov	r1, r5
 8010a50:	9803      	ldr	r0, [sp, #12]
 8010a52:	f7ff fe93 	bl	801077c <_ZNK8touchgfx4Rect8includesERKS0_>
 8010a56:	3c01      	subs	r4, #1
 8010a58:	b118      	cbz	r0, 8010a62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8010a5a:	b2a1      	uxth	r1, r4
 8010a5c:	9801      	ldr	r0, [sp, #4]
 8010a5e:	f7ff ffc3 	bl	80109e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010a62:	3d08      	subs	r5, #8
 8010a64:	e7f2      	b.n	8010a4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8010a66:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 8010a6a:	f10a 33ff 	add.w	r3, sl, #4294967295
 8010a6e:	f8cd a010 	str.w	sl, [sp, #16]
 8010a72:	9302      	str	r3, [sp, #8]
 8010a74:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8010a78:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8010a7c:	9306      	str	r3, [sp, #24]
 8010a7e:	445c      	add	r4, fp
 8010a80:	2500      	movs	r5, #0
 8010a82:	4626      	mov	r6, r4
 8010a84:	f8cd a014 	str.w	sl, [sp, #20]
 8010a88:	462f      	mov	r7, r5
 8010a8a:	9b05      	ldr	r3, [sp, #20]
 8010a8c:	2b00      	cmp	r3, #0
 8010a8e:	d073      	beq.n	8010b78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8010a90:	9903      	ldr	r1, [sp, #12]
 8010a92:	4630      	mov	r0, r6
 8010a94:	f7ff fdff 	bl	8010696 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010a98:	b350      	cbz	r0, 8010af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010a9a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 8010a9e:	f9b6 c000 	ldrsh.w	ip, [r6]
 8010aa2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8010aa6:	45e6      	cmp	lr, ip
 8010aa8:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8010aac:	db33      	blt.n	8010b16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010aae:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8010ab2:	88b3      	ldrh	r3, [r6, #4]
 8010ab4:	4472      	add	r2, lr
 8010ab6:	4463      	add	r3, ip
 8010ab8:	b212      	sxth	r2, r2
 8010aba:	b21b      	sxth	r3, r3
 8010abc:	429a      	cmp	r2, r3
 8010abe:	dc2a      	bgt.n	8010b16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010ac0:	fa1f f289 	uxth.w	r2, r9
 8010ac4:	88f3      	ldrh	r3, [r6, #6]
 8010ac6:	45c8      	cmp	r8, r9
 8010ac8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8010acc:	4413      	add	r3, r2
 8010ace:	fa1f fc88 	uxth.w	ip, r8
 8010ad2:	b29b      	uxth	r3, r3
 8010ad4:	fa0f fe83 	sxth.w	lr, r3
 8010ad8:	db0f      	blt.n	8010afa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8010ada:	eba3 030c 	sub.w	r3, r3, ip
 8010ade:	1ac9      	subs	r1, r1, r3
 8010ae0:	b209      	sxth	r1, r1
 8010ae2:	2900      	cmp	r1, #0
 8010ae4:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010ae8:	dd12      	ble.n	8010b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010aea:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8010aee:	4605      	mov	r5, r0
 8010af0:	9b05      	ldr	r3, [sp, #20]
 8010af2:	3e08      	subs	r6, #8
 8010af4:	3b01      	subs	r3, #1
 8010af6:	9305      	str	r3, [sp, #20]
 8010af8:	e7c7      	b.n	8010a8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8010afa:	4461      	add	r1, ip
 8010afc:	b209      	sxth	r1, r1
 8010afe:	4571      	cmp	r1, lr
 8010b00:	dc38      	bgt.n	8010b74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010b02:	eba2 020c 	sub.w	r2, r2, ip
 8010b06:	b212      	sxth	r2, r2
 8010b08:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010b0c:	2a00      	cmp	r2, #0
 8010b0e:	dcee      	bgt.n	8010aee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010b10:	b00f      	add	sp, #60	@ 0x3c
 8010b12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b16:	45c8      	cmp	r8, r9
 8010b18:	db2c      	blt.n	8010b74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010b1a:	88f3      	ldrh	r3, [r6, #6]
 8010b1c:	4499      	add	r9, r3
 8010b1e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8010b22:	4498      	add	r8, r3
 8010b24:	fa0f f989 	sxth.w	r9, r9
 8010b28:	fa0f f888 	sxth.w	r8, r8
 8010b2c:	45c1      	cmp	r9, r8
 8010b2e:	db21      	blt.n	8010b74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010b30:	fa1f f28c 	uxth.w	r2, ip
 8010b34:	88b3      	ldrh	r3, [r6, #4]
 8010b36:	45e6      	cmp	lr, ip
 8010b38:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8010b3c:	4413      	add	r3, r2
 8010b3e:	fa1f f88e 	uxth.w	r8, lr
 8010b42:	b29b      	uxth	r3, r3
 8010b44:	fa0f f983 	sxth.w	r9, r3
 8010b48:	db0a      	blt.n	8010b60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8010b4a:	eba3 0308 	sub.w	r3, r3, r8
 8010b4e:	1ac9      	subs	r1, r1, r3
 8010b50:	b209      	sxth	r1, r1
 8010b52:	2900      	cmp	r1, #0
 8010b54:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8010b58:	ddda      	ble.n	8010b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010b5a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8010b5e:	e7c6      	b.n	8010aee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010b60:	4441      	add	r1, r8
 8010b62:	b209      	sxth	r1, r1
 8010b64:	4549      	cmp	r1, r9
 8010b66:	dc05      	bgt.n	8010b74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010b68:	eba2 0208 	sub.w	r2, r2, r8
 8010b6c:	b212      	sxth	r2, r2
 8010b6e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8010b72:	e7cb      	b.n	8010b0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8010b74:	4607      	mov	r7, r0
 8010b76:	e7bb      	b.n	8010af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010b78:	2d00      	cmp	r5, #0
 8010b7a:	d181      	bne.n	8010a80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8010b7c:	2f00      	cmp	r7, #0
 8010b7e:	f000 81dd 	beq.w	8010f3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8010b82:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8010b86:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 8010b8a:	b2b3      	uxth	r3, r6
 8010b8c:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 8010b90:	9305      	str	r3, [sp, #20]
 8010b92:	9a05      	ldr	r2, [sp, #20]
 8010b94:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8010b98:	4413      	add	r3, r2
 8010b9a:	b2ba      	uxth	r2, r7
 8010b9c:	4492      	add	sl, r2
 8010b9e:	b29b      	uxth	r3, r3
 8010ba0:	fa1f fa8a 	uxth.w	sl, sl
 8010ba4:	fa0f f883 	sxth.w	r8, r3
 8010ba8:	fa0f f98a 	sxth.w	r9, sl
 8010bac:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8010bb0:	9b04      	ldr	r3, [sp, #16]
 8010bb2:	2b00      	cmp	r3, #0
 8010bb4:	d052      	beq.n	8010c5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8010bb6:	9903      	ldr	r1, [sp, #12]
 8010bb8:	4620      	mov	r0, r4
 8010bba:	f7ff fd6c 	bl	8010696 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010bbe:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8010bc2:	b1c0      	cbz	r0, 8010bf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010bc4:	f9b4 e000 	ldrsh.w	lr, [r4]
 8010bc8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010bcc:	4576      	cmp	r6, lr
 8010bce:	dc22      	bgt.n	8010c16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010bd0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010bd4:	44f4      	add	ip, lr
 8010bd6:	fa0f fc8c 	sxth.w	ip, ip
 8010bda:	45e0      	cmp	r8, ip
 8010bdc:	db1b      	blt.n	8010c16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010bde:	428f      	cmp	r7, r1
 8010be0:	fa1f fc81 	uxth.w	ip, r1
 8010be4:	88e1      	ldrh	r1, [r4, #6]
 8010be6:	dc0d      	bgt.n	8010c04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010be8:	ebaa 0c0c 	sub.w	ip, sl, ip
 8010bec:	f8a4 9002 	strh.w	r9, [r4, #2]
 8010bf0:	eba1 010c 	sub.w	r1, r1, ip
 8010bf4:	80e1      	strh	r1, [r4, #6]
 8010bf6:	4628      	mov	r0, r5
 8010bf8:	9904      	ldr	r1, [sp, #16]
 8010bfa:	3c08      	subs	r4, #8
 8010bfc:	4605      	mov	r5, r0
 8010bfe:	3901      	subs	r1, #1
 8010c00:	9104      	str	r1, [sp, #16]
 8010c02:	e7d3      	b.n	8010bac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8010c04:	4461      	add	r1, ip
 8010c06:	b209      	sxth	r1, r1
 8010c08:	4549      	cmp	r1, r9
 8010c0a:	dcf5      	bgt.n	8010bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010c0c:	eba2 0c0c 	sub.w	ip, r2, ip
 8010c10:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010c14:	e7ef      	b.n	8010bf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010c16:	428f      	cmp	r7, r1
 8010c18:	dcee      	bgt.n	8010bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010c1a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8010c1e:	4461      	add	r1, ip
 8010c20:	b209      	sxth	r1, r1
 8010c22:	4589      	cmp	r9, r1
 8010c24:	dbe8      	blt.n	8010bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010c26:	4576      	cmp	r6, lr
 8010c28:	fa1f fc8e 	uxth.w	ip, lr
 8010c2c:	88a1      	ldrh	r1, [r4, #4]
 8010c2e:	dc07      	bgt.n	8010c40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8010c30:	eba3 0c0c 	sub.w	ip, r3, ip
 8010c34:	f8a4 8000 	strh.w	r8, [r4]
 8010c38:	eba1 010c 	sub.w	r1, r1, ip
 8010c3c:	80a1      	strh	r1, [r4, #4]
 8010c3e:	e7da      	b.n	8010bf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010c40:	4461      	add	r1, ip
 8010c42:	b209      	sxth	r1, r1
 8010c44:	4588      	cmp	r8, r1
 8010c46:	dbd7      	blt.n	8010bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010c48:	9905      	ldr	r1, [sp, #20]
 8010c4a:	eba1 0c0c 	sub.w	ip, r1, ip
 8010c4e:	f8a4 c004 	strh.w	ip, [r4, #4]
 8010c52:	e7d0      	b.n	8010bf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010c54:	20016c7e 	.word	0x20016c7e
 8010c58:	20016c7c 	.word	0x20016c7c
 8010c5c:	2d00      	cmp	r5, #0
 8010c5e:	f000 816d 	beq.w	8010f3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8010c62:	9b06      	ldr	r3, [sp, #24]
 8010c64:	445b      	add	r3, fp
 8010c66:	461c      	mov	r4, r3
 8010c68:	9b02      	ldr	r3, [sp, #8]
 8010c6a:	3301      	adds	r3, #1
 8010c6c:	f000 8166 	beq.w	8010f3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8010c70:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8010c74:	9803      	ldr	r0, [sp, #12]
 8010c76:	4629      	mov	r1, r5
 8010c78:	f7ff fd80 	bl	801077c <_ZNK8touchgfx4Rect8includesERKS0_>
 8010c7c:	b120      	cbz	r0, 8010c88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8010c7e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8010c82:	9801      	ldr	r0, [sp, #4]
 8010c84:	f7ff feb0 	bl	80109e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010c88:	9903      	ldr	r1, [sp, #12]
 8010c8a:	4628      	mov	r0, r5
 8010c8c:	f7ff fd03 	bl	8010696 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010c90:	2800      	cmp	r0, #0
 8010c92:	f000 809c 	beq.w	8010dce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8010c96:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 8010c9a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010c9e:	fa1f f189 	uxth.w	r1, r9
 8010ca2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010ca6:	9309      	str	r3, [sp, #36]	@ 0x24
 8010ca8:	eb01 0c03 	add.w	ip, r1, r3
 8010cac:	b283      	uxth	r3, r0
 8010cae:	4548      	cmp	r0, r9
 8010cb0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8010cb4:	fa1f fa8c 	uxth.w	sl, ip
 8010cb8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8010cbc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8010cc0:	eb03 050c 	add.w	r5, r3, ip
 8010cc4:	b2ad      	uxth	r5, r5
 8010cc6:	9505      	str	r5, [sp, #20]
 8010cc8:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8010ccc:	9504      	str	r5, [sp, #16]
 8010cce:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8010cd2:	f340 8099 	ble.w	8010e08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8010cd6:	1a5b      	subs	r3, r3, r1
 8010cd8:	4596      	cmp	lr, r2
 8010cda:	fa0f f08a 	sxth.w	r0, sl
 8010cde:	b29b      	uxth	r3, r3
 8010ce0:	b21e      	sxth	r6, r3
 8010ce2:	dd2e      	ble.n	8010d42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8010ce4:	9f02      	ldr	r7, [sp, #8]
 8010ce6:	fa1f fe8e 	uxth.w	lr, lr
 8010cea:	b292      	uxth	r2, r2
 8010cec:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 8010cf0:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8010cf4:	9f04      	ldr	r7, [sp, #16]
 8010cf6:	ebae 0102 	sub.w	r1, lr, r2
 8010cfa:	44a6      	add	lr, r4
 8010cfc:	1a3f      	subs	r7, r7, r0
 8010cfe:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8010d02:	b289      	uxth	r1, r1
 8010d04:	4402      	add	r2, r0
 8010d06:	fa0f fe8e 	sxth.w	lr, lr
 8010d0a:	b20d      	sxth	r5, r1
 8010d0c:	b212      	sxth	r2, r2
 8010d0e:	436f      	muls	r7, r5
 8010d10:	ebae 0202 	sub.w	r2, lr, r2
 8010d14:	4372      	muls	r2, r6
 8010d16:	4297      	cmp	r7, r2
 8010d18:	db09      	blt.n	8010d2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8010d1a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8010d1e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8010d22:	449c      	add	ip, r3
 8010d24:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8010d28:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8010d2c:	e686      	b.n	8010a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010d2e:	4421      	add	r1, r4
 8010d30:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 8010d34:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8010d38:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010d3c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8010d40:	e67c      	b.n	8010a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010d42:	9f04      	ldr	r7, [sp, #16]
 8010d44:	42b8      	cmp	r0, r7
 8010d46:	da27      	bge.n	8010d98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8010d48:	9902      	ldr	r1, [sp, #8]
 8010d4a:	1a3f      	subs	r7, r7, r0
 8010d4c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8010d50:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8010d54:	eb05 010e 	add.w	r1, r5, lr
 8010d58:	fa1f f881 	uxth.w	r8, r1
 8010d5c:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8010d60:	4411      	add	r1, r2
 8010d62:	fa0f f988 	sxth.w	r9, r8
 8010d66:	eba2 020e 	sub.w	r2, r2, lr
 8010d6a:	eba1 0108 	sub.w	r1, r1, r8
 8010d6e:	4372      	muls	r2, r6
 8010d70:	b289      	uxth	r1, r1
 8010d72:	fa0f f881 	sxth.w	r8, r1
 8010d76:	fb08 f707 	mul.w	r7, r8, r7
 8010d7a:	42ba      	cmp	r2, r7
 8010d7c:	dc06      	bgt.n	8010d8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8010d7e:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8010d82:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 8010d86:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 8010d8a:	e7ca      	b.n	8010d22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8010d8c:	4429      	add	r1, r5
 8010d8e:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8010d92:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010d96:	e651      	b.n	8010a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010d98:	9805      	ldr	r0, [sp, #20]
 8010d9a:	2d06      	cmp	r5, #6
 8010d9c:	ebaa 0000 	sub.w	r0, sl, r0
 8010da0:	b280      	uxth	r0, r0
 8010da2:	fa0f fe80 	sxth.w	lr, r0
 8010da6:	d817      	bhi.n	8010dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8010da8:	9b04      	ldr	r3, [sp, #16]
 8010daa:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8010dae:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8010db2:	1c6b      	adds	r3, r5, #1
 8010db4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8010db8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8010dbc:	9b01      	ldr	r3, [sp, #4]
 8010dbe:	9801      	ldr	r0, [sp, #4]
 8010dc0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010dc4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8010dc8:	805a      	strh	r2, [r3, #2]
 8010dca:	809e      	strh	r6, [r3, #4]
 8010dcc:	80d9      	strh	r1, [r3, #6]
 8010dce:	9b02      	ldr	r3, [sp, #8]
 8010dd0:	3c08      	subs	r4, #8
 8010dd2:	3b01      	subs	r3, #1
 8010dd4:	9302      	str	r3, [sp, #8]
 8010dd6:	e747      	b.n	8010c68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8010dd8:	9a02      	ldr	r2, [sp, #8]
 8010dda:	45b6      	cmp	lr, r6
 8010ddc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010de0:	db0d      	blt.n	8010dfe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8010de2:	449c      	add	ip, r3
 8010de4:	445a      	add	r2, fp
 8010de6:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8010dea:	fa1f fc8c 	uxth.w	ip, ip
 8010dee:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 8010df2:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8010df6:	448c      	add	ip, r1
 8010df8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8010dfc:	e61e      	b.n	8010a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010dfe:	445a      	add	r2, fp
 8010e00:	4484      	add	ip, r0
 8010e02:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8010e06:	e78f      	b.n	8010d28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010e08:	fa1f f18e 	uxth.w	r1, lr
 8010e0c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8010e10:	b293      	uxth	r3, r2
 8010e12:	4596      	cmp	lr, r2
 8010e14:	eb01 0806 	add.w	r8, r1, r6
 8010e18:	9306      	str	r3, [sp, #24]
 8010e1a:	fa1f f888 	uxth.w	r8, r8
 8010e1e:	9f06      	ldr	r7, [sp, #24]
 8010e20:	fa0f f388 	sxth.w	r3, r8
 8010e24:	9307      	str	r3, [sp, #28]
 8010e26:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8010e2a:	443b      	add	r3, r7
 8010e2c:	b29b      	uxth	r3, r3
 8010e2e:	9308      	str	r3, [sp, #32]
 8010e30:	da24      	bge.n	8010e7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8010e32:	9905      	ldr	r1, [sp, #20]
 8010e34:	eba3 0308 	sub.w	r3, r3, r8
 8010e38:	eba2 020e 	sub.w	r2, r2, lr
 8010e3c:	eba9 0000 	sub.w	r0, r9, r0
 8010e40:	ebaa 0401 	sub.w	r4, sl, r1
 8010e44:	b29b      	uxth	r3, r3
 8010e46:	b2a4      	uxth	r4, r4
 8010e48:	b219      	sxth	r1, r3
 8010e4a:	b225      	sxth	r5, r4
 8010e4c:	4348      	muls	r0, r1
 8010e4e:	436a      	muls	r2, r5
 8010e50:	4282      	cmp	r2, r0
 8010e52:	9a02      	ldr	r2, [sp, #8]
 8010e54:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010e58:	445a      	add	r2, fp
 8010e5a:	dc06      	bgt.n	8010e6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8010e5c:	9b07      	ldr	r3, [sp, #28]
 8010e5e:	44a4      	add	ip, r4
 8010e60:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 8010e64:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 8010e68:	e75e      	b.n	8010d28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010e6a:	9904      	ldr	r1, [sp, #16]
 8010e6c:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8010e70:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8010e74:	4433      	add	r3, r6
 8010e76:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010e7a:	e5df      	b.n	8010a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010e7c:	9f06      	ldr	r7, [sp, #24]
 8010e7e:	9b04      	ldr	r3, [sp, #16]
 8010e80:	1bc9      	subs	r1, r1, r7
 8010e82:	fa0f f78a 	sxth.w	r7, sl
 8010e86:	b289      	uxth	r1, r1
 8010e88:	429f      	cmp	r7, r3
 8010e8a:	fa0f fe81 	sxth.w	lr, r1
 8010e8e:	dd23      	ble.n	8010ed8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8010e90:	9a05      	ldr	r2, [sp, #20]
 8010e92:	eba9 0000 	sub.w	r0, r9, r0
 8010e96:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8010e9a:	ebaa 0202 	sub.w	r2, sl, r2
 8010e9e:	9d07      	ldr	r5, [sp, #28]
 8010ea0:	fb0e f000 	mul.w	r0, lr, r0
 8010ea4:	b292      	uxth	r2, r2
 8010ea6:	eba5 0a03 	sub.w	sl, r5, r3
 8010eaa:	9b02      	ldr	r3, [sp, #8]
 8010eac:	b214      	sxth	r4, r2
 8010eae:	00db      	lsls	r3, r3, #3
 8010eb0:	fb04 fa0a 	mul.w	sl, r4, sl
 8010eb4:	445b      	add	r3, fp
 8010eb6:	4550      	cmp	r0, sl
 8010eb8:	db03      	blt.n	8010ec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8010eba:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8010ebe:	4494      	add	ip, r2
 8010ec0:	e732      	b.n	8010d28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010ec2:	9a04      	ldr	r2, [sp, #16]
 8010ec4:	4431      	add	r1, r6
 8010ec6:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8010eca:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8010ece:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8010ed2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8010ed6:	e75c      	b.n	8010d92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8010ed8:	9b08      	ldr	r3, [sp, #32]
 8010eda:	2d06      	cmp	r5, #6
 8010edc:	eba3 0308 	sub.w	r3, r3, r8
 8010ee0:	b29b      	uxth	r3, r3
 8010ee2:	b218      	sxth	r0, r3
 8010ee4:	d813      	bhi.n	8010f0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8010ee6:	9b07      	ldr	r3, [sp, #28]
 8010ee8:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8010eec:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8010ef0:	1c6b      	adds	r3, r5, #1
 8010ef2:	9901      	ldr	r1, [sp, #4]
 8010ef4:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8010ef8:	9b01      	ldr	r3, [sp, #4]
 8010efa:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8010efe:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010f02:	805a      	strh	r2, [r3, #2]
 8010f04:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010f06:	f8a3 e006 	strh.w	lr, [r3, #6]
 8010f0a:	809a      	strh	r2, [r3, #4]
 8010f0c:	e75f      	b.n	8010dce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8010f0e:	9c02      	ldr	r4, [sp, #8]
 8010f10:	4570      	cmp	r0, lr
 8010f12:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8010f16:	db0d      	blt.n	8010f34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8010f18:	4431      	add	r1, r6
 8010f1a:	9b06      	ldr	r3, [sp, #24]
 8010f1c:	445c      	add	r4, fp
 8010f1e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8010f22:	b289      	uxth	r1, r1
 8010f24:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8010f28:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010f2c:	4419      	add	r1, r3
 8010f2e:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8010f32:	e583      	b.n	8010a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010f34:	445c      	add	r4, fp
 8010f36:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8010f3a:	e79b      	b.n	8010e74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8010f3c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8010f40:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8010f44:	1e65      	subs	r5, r4, #1
 8010f46:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8010f4a:	b2ad      	uxth	r5, r5
 8010f4c:	42b5      	cmp	r5, r6
 8010f4e:	d044      	beq.n	8010fda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8010f50:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8010f54:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8010f58:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8010f5c:	4282      	cmp	r2, r0
 8010f5e:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8010f62:	d11f      	bne.n	8010fa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8010f64:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8010f68:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8010f6c:	459c      	cmp	ip, r3
 8010f6e:	d119      	bne.n	8010fa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8010f70:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8010f74:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8010f78:	19d8      	adds	r0, r3, r7
 8010f7a:	b200      	sxth	r0, r0
 8010f7c:	4288      	cmp	r0, r1
 8010f7e:	d109      	bne.n	8010f94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8010f80:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8010f84:	4413      	add	r3, r2
 8010f86:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8010f8a:	4629      	mov	r1, r5
 8010f8c:	9801      	ldr	r0, [sp, #4]
 8010f8e:	f7ff fd2b 	bl	80109e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010f92:	e003      	b.n	8010f9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010f94:	4411      	add	r1, r2
 8010f96:	b209      	sxth	r1, r1
 8010f98:	42b9      	cmp	r1, r7
 8010f9a:	d0f3      	beq.n	8010f84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8010f9c:	3d01      	subs	r5, #1
 8010f9e:	3c08      	subs	r4, #8
 8010fa0:	b2ad      	uxth	r5, r5
 8010fa2:	e7d3      	b.n	8010f4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8010fa4:	42b9      	cmp	r1, r7
 8010fa6:	d1f9      	bne.n	8010f9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010fa8:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8010fac:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010fb0:	4299      	cmp	r1, r3
 8010fb2:	d1f3      	bne.n	8010f9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010fb4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8010fb8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8010fbc:	181f      	adds	r7, r3, r0
 8010fbe:	b23f      	sxth	r7, r7
 8010fc0:	42ba      	cmp	r2, r7
 8010fc2:	d105      	bne.n	8010fd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8010fc4:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8010fc8:	440b      	add	r3, r1
 8010fca:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010fce:	e7dc      	b.n	8010f8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8010fd0:	440a      	add	r2, r1
 8010fd2:	b212      	sxth	r2, r2
 8010fd4:	4290      	cmp	r0, r2
 8010fd6:	d1e1      	bne.n	8010f9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010fd8:	e7f6      	b.n	8010fc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8010fda:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8010fde:	2e07      	cmp	r6, #7
 8010fe0:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010fe4:	d812      	bhi.n	801100c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8010fe6:	1c75      	adds	r5, r6, #1
 8010fe8:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010fec:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8010ff0:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 8010ff4:	9d01      	ldr	r5, [sp, #4]
 8010ff6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8010ffa:	442c      	add	r4, r5
 8010ffc:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8011000:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8011004:	8061      	strh	r1, [r4, #2]
 8011006:	80a2      	strh	r2, [r4, #4]
 8011008:	80e3      	strh	r3, [r4, #6]
 801100a:	e581      	b.n	8010b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801100c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8011010:	3e01      	subs	r6, #1
 8011012:	445c      	add	r4, fp
 8011014:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8011018:	f04f 37ff 	mov.w	r7, #4294967295
 801101c:	2500      	movs	r5, #0
 801101e:	9305      	str	r3, [sp, #20]
 8011020:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8011024:	1e72      	subs	r2, r6, #1
 8011026:	9302      	str	r3, [sp, #8]
 8011028:	4691      	mov	r9, r2
 801102a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 801102e:	9304      	str	r3, [sp, #16]
 8011030:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8011034:	f1b9 3fff 	cmp.w	r9, #4294967295
 8011038:	6818      	ldr	r0, [r3, #0]
 801103a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801103e:	9207      	str	r2, [sp, #28]
 8011040:	bf16      	itet	ne
 8011042:	9905      	ldrne	r1, [sp, #20]
 8011044:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8011048:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801104c:	9306      	str	r3, [sp, #24]
 801104e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8011052:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8011056:	fb18 f801 	smulbb	r8, r8, r1
 801105a:	6859      	ldr	r1, [r3, #4]
 801105c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011060:	4671      	mov	r1, lr
 8011062:	a80c      	add	r0, sp, #48	@ 0x30
 8011064:	f7fb f945 	bl	800c2f2 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011068:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801106c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8011070:	f04f 0c08 	mov.w	ip, #8
 8011074:	9b04      	ldr	r3, [sp, #16]
 8011076:	9a02      	ldr	r2, [sp, #8]
 8011078:	fb10 f001 	smulbb	r0, r0, r1
 801107c:	fb02 8803 	mla	r8, r2, r3, r8
 8011080:	eba0 0108 	sub.w	r1, r0, r8
 8011084:	fb90 f0fc 	sdiv	r0, r0, ip
 8011088:	4288      	cmp	r0, r1
 801108a:	dc20      	bgt.n	80110ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 801108c:	4551      	cmp	r1, sl
 801108e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011092:	da03      	bge.n	801109c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 8011094:	b1d9      	cbz	r1, 80110ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8011096:	468a      	mov	sl, r1
 8011098:	464f      	mov	r7, r9
 801109a:	4635      	mov	r5, r6
 801109c:	f109 39ff 	add.w	r9, r9, #4294967295
 80110a0:	f119 0f02 	cmn.w	r9, #2
 80110a4:	d1c6      	bne.n	8011034 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80110a6:	4616      	mov	r6, r2
 80110a8:	3201      	adds	r2, #1
 80110aa:	f1a4 0408 	sub.w	r4, r4, #8
 80110ae:	d1b7      	bne.n	8011020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80110b0:	9b01      	ldr	r3, [sp, #4]
 80110b2:	b2ac      	uxth	r4, r5
 80110b4:	00ed      	lsls	r5, r5, #3
 80110b6:	1958      	adds	r0, r3, r5
 80110b8:	1c7b      	adds	r3, r7, #1
 80110ba:	d10b      	bne.n	80110d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 80110bc:	4601      	mov	r1, r0
 80110be:	9803      	ldr	r0, [sp, #12]
 80110c0:	f7fb f917 	bl	800c2f2 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80110c4:	4621      	mov	r1, r4
 80110c6:	9801      	ldr	r0, [sp, #4]
 80110c8:	f7ff fc8e 	bl	80109e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80110cc:	e4b6      	b.n	8010a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80110ce:	464f      	mov	r7, r9
 80110d0:	4635      	mov	r5, r6
 80110d2:	e7ed      	b.n	80110b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 80110d4:	9b01      	ldr	r3, [sp, #4]
 80110d6:	00ff      	lsls	r7, r7, #3
 80110d8:	445d      	add	r5, fp
 80110da:	19d9      	adds	r1, r3, r7
 80110dc:	445f      	add	r7, fp
 80110de:	f7fb f908 	bl	800c2f2 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80110e2:	9b03      	ldr	r3, [sp, #12]
 80110e4:	cb03      	ldmia	r3!, {r0, r1}
 80110e6:	9b03      	ldr	r3, [sp, #12]
 80110e8:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 80110ec:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 80110f0:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80110f4:	6869      	ldr	r1, [r5, #4]
 80110f6:	c303      	stmia	r3!, {r0, r1}
 80110f8:	e7e4      	b.n	80110c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 80110fa:	bf00      	nop

080110fc <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80110fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011100:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8011104:	b09b      	sub	sp, #108	@ 0x6c
 8011106:	4604      	mov	r4, r0
 8011108:	4630      	mov	r0, r6
 801110a:	f7f9 f8d4 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801110e:	4605      	mov	r5, r0
 8011110:	b948      	cbnz	r0, 8011126 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8011112:	6823      	ldr	r3, [r4, #0]
 8011114:	4620      	mov	r0, r4
 8011116:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011118:	e896 0006 	ldmia.w	r6, {r1, r2}
 801111c:	4798      	blx	r3
 801111e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8011122:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8011126:	4bc5      	ldr	r3, [pc, #788]	@ (801143c <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 8011128:	681b      	ldr	r3, [r3, #0]
 801112a:	2b00      	cmp	r3, #0
 801112c:	d03f      	beq.n	80111ae <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 801112e:	4dc4      	ldr	r5, [pc, #784]	@ (8011440 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8011130:	4628      	mov	r0, r5
 8011132:	f7f9 f8c0 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011136:	4606      	mov	r6, r0
 8011138:	2800      	cmp	r0, #0
 801113a:	d138      	bne.n	80111ae <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 801113c:	4628      	mov	r0, r5
 801113e:	f7ff f9d7 	bl	80104f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011142:	6823      	ldr	r3, [r4, #0]
 8011144:	6829      	ldr	r1, [r5, #0]
 8011146:	4620      	mov	r0, r4
 8011148:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801114a:	686a      	ldr	r2, [r5, #4]
 801114c:	4798      	blx	r3
 801114e:	802e      	strh	r6, [r5, #0]
 8011150:	806e      	strh	r6, [r5, #2]
 8011152:	80ae      	strh	r6, [r5, #4]
 8011154:	80ee      	strh	r6, [r5, #6]
 8011156:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 801115a:	4dba      	ldr	r5, [pc, #744]	@ (8011444 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 801115c:	4640      	mov	r0, r8
 801115e:	f7ff fbe7 	bl	8010930 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011162:	882e      	ldrh	r6, [r5, #0]
 8011164:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8011168:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801116c:	4633      	mov	r3, r6
 801116e:	42bb      	cmp	r3, r7
 8011170:	d224      	bcs.n	80111bc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8011172:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8011176:	2907      	cmp	r1, #7
 8011178:	d816      	bhi.n	80111a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801117a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801117e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8011182:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8011186:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801118a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 801118e:	1c4a      	adds	r2, r1, #1
 8011190:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 8011194:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8011198:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 801119c:	f8a2 a002 	strh.w	sl, [r2, #2]
 80111a0:	f8a2 e004 	strh.w	lr, [r2, #4]
 80111a4:	f8a2 c006 	strh.w	ip, [r2, #6]
 80111a8:	3301      	adds	r3, #1
 80111aa:	b29b      	uxth	r3, r3
 80111ac:	e7df      	b.n	801116e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80111ae:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80111b2:	2b00      	cmp	r3, #0
 80111b4:	d1cf      	bne.n	8011156 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80111b6:	b01b      	add	sp, #108	@ 0x6c
 80111b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111bc:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 80111c0:	42b3      	cmp	r3, r6
 80111c2:	d90c      	bls.n	80111de <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80111c4:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80111c8:	6822      	ldr	r2, [r4, #0]
 80111ca:	3601      	adds	r6, #1
 80111cc:	4620      	mov	r0, r4
 80111ce:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 80111d0:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 80111d4:	b2b6      	uxth	r6, r6
 80111d6:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 80111da:	47b8      	blx	r7
 80111dc:	e7ee      	b.n	80111bc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80111de:	4a9a      	ldr	r2, [pc, #616]	@ (8011448 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80111e0:	6813      	ldr	r3, [r2, #0]
 80111e2:	4691      	mov	r9, r2
 80111e4:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 80111e8:	2b01      	cmp	r3, #1
 80111ea:	f040 80e0 	bne.w	80113ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 80111ee:	8829      	ldrh	r1, [r5, #0]
 80111f0:	2600      	movs	r6, #0
 80111f2:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 80111f6:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80111fa:	33ae      	adds	r3, #174	@ 0xae
 80111fc:	428f      	cmp	r7, r1
 80111fe:	f103 0308 	add.w	r3, r3, #8
 8011202:	dd0a      	ble.n	801121a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8011204:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8011208:	3101      	adds	r1, #1
 801120a:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 801120e:	4402      	add	r2, r0
 8011210:	b212      	sxth	r2, r2
 8011212:	4296      	cmp	r6, r2
 8011214:	bfb8      	it	lt
 8011216:	4616      	movlt	r6, r2
 8011218:	e7f0      	b.n	80111fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801121a:	4b8c      	ldr	r3, [pc, #560]	@ (801144c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801121c:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 8011448 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 8011220:	881b      	ldrh	r3, [r3, #0]
 8011222:	2b0f      	cmp	r3, #15
 8011224:	bf8c      	ite	hi
 8011226:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801122a:	f04f 0b01 	movls.w	fp, #1
 801122e:	2300      	movs	r3, #0
 8011230:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8011234:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8011238:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 801123c:	4b82      	ldr	r3, [pc, #520]	@ (8011448 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 801123e:	4438      	add	r0, r7
 8011240:	b207      	sxth	r7, r0
 8011242:	6818      	ldr	r0, [r3, #0]
 8011244:	42b7      	cmp	r7, r6
 8011246:	6803      	ldr	r3, [r0, #0]
 8011248:	f280 8083 	bge.w	8011352 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 801124c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8011250:	4798      	blx	r3
 8011252:	eb07 030b 	add.w	r3, r7, fp
 8011256:	4298      	cmp	r0, r3
 8011258:	da07      	bge.n	801126a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 801125a:	42b0      	cmp	r0, r6
 801125c:	da05      	bge.n	801126a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 801125e:	4287      	cmp	r7, r0
 8011260:	dd6c      	ble.n	801133c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8011262:	2f00      	cmp	r7, #0
 8011264:	dd6a      	ble.n	801133c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8011266:	4630      	mov	r0, r6
 8011268:	e004      	b.n	8011274 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 801126a:	4287      	cmp	r7, r0
 801126c:	dcfb      	bgt.n	8011266 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 801126e:	42b0      	cmp	r0, r6
 8011270:	bfa8      	it	ge
 8011272:	4630      	movge	r0, r6
 8011274:	4b76      	ldr	r3, [pc, #472]	@ (8011450 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8011276:	1bc0      	subs	r0, r0, r7
 8011278:	2200      	movs	r2, #0
 801127a:	f8ad 7016 	strh.w	r7, [sp, #22]
 801127e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011282:	882f      	ldrh	r7, [r5, #0]
 8011284:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011288:	f8ad 3018 	strh.w	r3, [sp, #24]
 801128c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011290:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8011294:	42bb      	cmp	r3, r7
 8011296:	d9cd      	bls.n	8011234 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8011298:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 801129c:	ab07      	add	r3, sp, #28
 801129e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80112a2:	6851      	ldr	r1, [r2, #4]
 80112a4:	c303      	stmia	r3!, {r0, r1}
 80112a6:	a905      	add	r1, sp, #20
 80112a8:	a807      	add	r0, sp, #28
 80112aa:	f7ff f9f4 	bl	8010696 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80112ae:	2800      	cmp	r0, #0
 80112b0:	d04c      	beq.n	801134c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 80112b2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80112b6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80112ba:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80112be:	4686      	mov	lr, r0
 80112c0:	4290      	cmp	r0, r2
 80112c2:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80112c6:	4450      	add	r0, sl
 80112c8:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80112cc:	bfb8      	it	lt
 80112ce:	4696      	movlt	lr, r2
 80112d0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80112d4:	4452      	add	r2, sl
 80112d6:	b280      	uxth	r0, r0
 80112d8:	4299      	cmp	r1, r3
 80112da:	468c      	mov	ip, r1
 80112dc:	b292      	uxth	r2, r2
 80112de:	9302      	str	r3, [sp, #8]
 80112e0:	bfb8      	it	lt
 80112e2:	469c      	movlt	ip, r3
 80112e4:	b203      	sxth	r3, r0
 80112e6:	fa0f fa82 	sxth.w	sl, r2
 80112ea:	f8ad e01c 	strh.w	lr, [sp, #28]
 80112ee:	f8ad c01e 	strh.w	ip, [sp, #30]
 80112f2:	4553      	cmp	r3, sl
 80112f4:	bfb8      	it	lt
 80112f6:	4602      	movlt	r2, r0
 80112f8:	9b02      	ldr	r3, [sp, #8]
 80112fa:	eba2 020e 	sub.w	r2, r2, lr
 80112fe:	f8ad 2020 	strh.w	r2, [sp, #32]
 8011302:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8011306:	4411      	add	r1, r2
 8011308:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801130c:	4413      	add	r3, r2
 801130e:	b289      	uxth	r1, r1
 8011310:	b29b      	uxth	r3, r3
 8011312:	b208      	sxth	r0, r1
 8011314:	b21a      	sxth	r2, r3
 8011316:	4290      	cmp	r0, r2
 8011318:	bfb8      	it	lt
 801131a:	460b      	movlt	r3, r1
 801131c:	eba3 030c 	sub.w	r3, r3, ip
 8011320:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8011324:	a807      	add	r0, sp, #28
 8011326:	f7f8 ffc6 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801132a:	b920      	cbnz	r0, 8011336 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 801132c:	6823      	ldr	r3, [r4, #0]
 801132e:	a907      	add	r1, sp, #28
 8011330:	4620      	mov	r0, r4
 8011332:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011334:	4798      	blx	r3
 8011336:	3701      	adds	r7, #1
 8011338:	b2bf      	uxth	r7, r7
 801133a:	e7a9      	b.n	8011290 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 801133c:	f8d9 0000 	ldr.w	r0, [r9]
 8011340:	2101      	movs	r1, #1
 8011342:	6803      	ldr	r3, [r0, #0]
 8011344:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8011348:	4798      	blx	r3
 801134a:	e773      	b.n	8011234 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 801134c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8011350:	e7e8      	b.n	8011324 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 8011352:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011354:	4798      	blx	r3
 8011356:	4b3f      	ldr	r3, [pc, #252]	@ (8011454 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8011358:	781b      	ldrb	r3, [r3, #0]
 801135a:	2b00      	cmp	r3, #0
 801135c:	f43f af2b 	beq.w	80111b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8011360:	2300      	movs	r3, #0
 8011362:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8011366:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 801136a:	882b      	ldrh	r3, [r5, #0]
 801136c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8011370:	42ab      	cmp	r3, r5
 8011372:	f4bf af20 	bcs.w	80111b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8011376:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 801137a:	2907      	cmp	r1, #7
 801137c:	d814      	bhi.n	80113a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 801137e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8011382:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8011386:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 801138a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 801138e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8011392:	1c4a      	adds	r2, r1, #1
 8011394:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8011398:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 801139c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80113a0:	f8a2 c002 	strh.w	ip, [r2, #2]
 80113a4:	8097      	strh	r7, [r2, #4]
 80113a6:	80d6      	strh	r6, [r2, #6]
 80113a8:	3301      	adds	r3, #1
 80113aa:	b29b      	uxth	r3, r3
 80113ac:	e7e0      	b.n	8011370 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 80113ae:	2b02      	cmp	r3, #2
 80113b0:	f040 8133 	bne.w	801161a <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 80113b4:	4b28      	ldr	r3, [pc, #160]	@ (8011458 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80113b6:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 80113ba:	781b      	ldrb	r3, [r3, #0]
 80113bc:	2b01      	cmp	r3, #1
 80113be:	f000 8098 	beq.w	80114f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 80113c2:	882a      	ldrh	r2, [r5, #0]
 80113c4:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 80113c8:	3201      	adds	r2, #1
 80113ca:	b292      	uxth	r2, r2
 80113cc:	2900      	cmp	r1, #0
 80113ce:	d0c2      	beq.n	8011356 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80113d0:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 80113d4:	4694      	mov	ip, r2
 80113d6:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 80113da:	f04f 0900 	mov.w	r9, #0
 80113de:	441e      	add	r6, r3
 80113e0:	b236      	sxth	r6, r6
 80113e2:	fa1f f38c 	uxth.w	r3, ip
 80113e6:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80113ea:	4299      	cmp	r1, r3
 80113ec:	f240 80be 	bls.w	801156c <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 80113f0:	4427      	add	r7, r4
 80113f2:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80113f6:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 80113fa:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 80113fe:	4283      	cmp	r3, r0
 8011400:	f340 80a0 	ble.w	8011544 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 8011404:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 8011408:	46e1      	mov	r9, ip
 801140a:	4406      	add	r6, r0
 801140c:	b236      	sxth	r6, r6
 801140e:	429e      	cmp	r6, r3
 8011410:	bfa8      	it	ge
 8011412:	461e      	movge	r6, r3
 8011414:	f10c 0c01 	add.w	ip, ip, #1
 8011418:	e7e3      	b.n	80113e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 801141a:	d10a      	bne.n	8011432 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 801141c:	4562      	cmp	r2, ip
 801141e:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8011422:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8011426:	bfb8      	it	lt
 8011428:	4662      	movlt	r2, ip
 801142a:	4288      	cmp	r0, r1
 801142c:	bfb8      	it	lt
 801142e:	461f      	movlt	r7, r3
 8011430:	e086      	b.n	8011540 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8011432:	428a      	cmp	r2, r1
 8011434:	bfb8      	it	lt
 8011436:	460a      	movlt	r2, r1
 8011438:	e082      	b.n	8011540 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 801143a:	bf00      	nop
 801143c:	20016cc8 	.word	0x20016cc8
 8011440:	20016cd4 	.word	0x20016cd4
 8011444:	20000044 	.word	0x20000044
 8011448:	20016c88 	.word	0x20016c88
 801144c:	20016c7e 	.word	0x20016c7e
 8011450:	20016c7c 	.word	0x20016c7c
 8011454:	20016c86 	.word	0x20016c86
 8011458:	20016c80 	.word	0x20016c80
 801145c:	19a1      	adds	r1, r4, r6
 801145e:	ab07      	add	r3, sp, #28
 8011460:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8011464:	6849      	ldr	r1, [r1, #4]
 8011466:	c303      	stmia	r3!, {r0, r1}
 8011468:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801146c:	a807      	add	r0, sp, #28
 801146e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011472:	2b13      	cmp	r3, #19
 8011474:	440b      	add	r3, r1
 8011476:	bfd8      	it	le
 8011478:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 801147c:	1a9b      	subs	r3, r3, r2
 801147e:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011482:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011486:	f7ff f84d 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801148a:	a807      	add	r0, sp, #28
 801148c:	f7f8 ff13 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011490:	bb78      	cbnz	r0, 80114f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8011492:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 8011496:	4426      	add	r6, r4
 8011498:	f8d9 0000 	ldr.w	r0, [r9]
 801149c:	f1bc 0f14 	cmp.w	ip, #20
 80114a0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80114a4:	f8d0 e000 	ldr.w	lr, [r0]
 80114a8:	bfa8      	it	ge
 80114aa:	f04f 0c14 	movge.w	ip, #20
 80114ae:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80114b2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80114b6:	fa1f fc8c 	uxth.w	ip, ip
 80114ba:	f8cd c000 	str.w	ip, [sp]
 80114be:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 80114c2:	47d8      	blx	fp
 80114c4:	4683      	mov	fp, r0
 80114c6:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 80114ca:	a807      	add	r0, sp, #28
 80114cc:	f7ff f810 	bl	80104f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80114d0:	6823      	ldr	r3, [r4, #0]
 80114d2:	4620      	mov	r0, r4
 80114d4:	a907      	add	r1, sp, #28
 80114d6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80114d8:	4798      	blx	r3
 80114da:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 80114de:	eba0 000b 	sub.w	r0, r0, fp
 80114e2:	b200      	sxth	r0, r0
 80114e4:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 80114e8:	b918      	cbnz	r0, 80114f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 80114ea:	b2b9      	uxth	r1, r7
 80114ec:	4650      	mov	r0, sl
 80114ee:	f7ff fa7b 	bl	80109e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80114f2:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 80114f6:	f1bb 0f00 	cmp.w	fp, #0
 80114fa:	f43f af2c 	beq.w	8011356 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80114fe:	882b      	ldrh	r3, [r5, #0]
 8011500:	2700      	movs	r7, #0
 8011502:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8011506:	3301      	adds	r3, #1
 8011508:	b29b      	uxth	r3, r3
 801150a:	b299      	uxth	r1, r3
 801150c:	00fe      	lsls	r6, r7, #3
 801150e:	458b      	cmp	fp, r1
 8011510:	d9a4      	bls.n	801145c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 8011512:	4426      	add	r6, r4
 8011514:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8011518:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 801151c:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8011520:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8011524:	4408      	add	r0, r1
 8011526:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 801152a:	4461      	add	r1, ip
 801152c:	b200      	sxth	r0, r0
 801152e:	b209      	sxth	r1, r1
 8011530:	4288      	cmp	r0, r1
 8011532:	f6bf af72 	bge.w	801141a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 8011536:	4584      	cmp	ip, r0
 8011538:	4662      	mov	r2, ip
 801153a:	461f      	mov	r7, r3
 801153c:	bfb8      	it	lt
 801153e:	4602      	movlt	r2, r0
 8011540:	3301      	adds	r3, #1
 8011542:	e7e2      	b.n	801150a <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 8011544:	d10e      	bne.n	8011564 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 8011546:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 801154a:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 801154e:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8011552:	4473      	add	r3, lr
 8011554:	b21b      	sxth	r3, r3
 8011556:	429e      	cmp	r6, r3
 8011558:	bfa8      	it	ge
 801155a:	461e      	movge	r6, r3
 801155c:	4287      	cmp	r7, r0
 801155e:	bfb8      	it	lt
 8011560:	46e1      	movlt	r9, ip
 8011562:	e757      	b.n	8011414 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8011564:	4286      	cmp	r6, r0
 8011566:	bfa8      	it	ge
 8011568:	4606      	movge	r6, r0
 801156a:	e753      	b.n	8011414 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 801156c:	eb0a 0007 	add.w	r0, sl, r7
 8011570:	4427      	add	r7, r4
 8011572:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8011576:	f1bb 0f13 	cmp.w	fp, #19
 801157a:	bfdc      	itt	le
 801157c:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 8011580:	445e      	addle	r6, fp
 8011582:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8011586:	bfd8      	it	le
 8011588:	b236      	sxthle	r6, r6
 801158a:	f7f8 fe94 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801158e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8011592:	2800      	cmp	r0, #0
 8011594:	f47f af1a 	bne.w	80113cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 8011598:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 801159c:	fa1f fb8b 	uxth.w	fp, fp
 80115a0:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 80115a4:	1ab6      	subs	r6, r6, r2
 80115a6:	4829      	ldr	r0, [pc, #164]	@ (801164c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 80115a8:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 80115ac:	2e14      	cmp	r6, #20
 80115ae:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 80115b2:	6800      	ldr	r0, [r0, #0]
 80115b4:	bfa8      	it	ge
 80115b6:	2614      	movge	r6, #20
 80115b8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80115bc:	f8ad 201e 	strh.w	r2, [sp, #30]
 80115c0:	b289      	uxth	r1, r1
 80115c2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80115c6:	b2b6      	uxth	r6, r6
 80115c8:	f8d0 c000 	ldr.w	ip, [r0]
 80115cc:	b292      	uxth	r2, r2
 80115ce:	455e      	cmp	r6, fp
 80115d0:	bf94      	ite	ls
 80115d2:	9600      	strls	r6, [sp, #0]
 80115d4:	f8cd b000 	strhi.w	fp, [sp]
 80115d8:	b29b      	uxth	r3, r3
 80115da:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 80115de:	47b0      	blx	r6
 80115e0:	6823      	ldr	r3, [r4, #0]
 80115e2:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 80115e6:	a907      	add	r1, sp, #28
 80115e8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80115ea:	4620      	mov	r0, r4
 80115ec:	4798      	blx	r3
 80115ee:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 80115f2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 80115f6:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 80115fa:	1a5b      	subs	r3, r3, r1
 80115fc:	440a      	add	r2, r1
 80115fe:	b21b      	sxth	r3, r3
 8011600:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8011604:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8011608:	2b00      	cmp	r3, #0
 801160a:	f47f aeda 	bne.w	80113c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 801160e:	fa1f f189 	uxth.w	r1, r9
 8011612:	4650      	mov	r0, sl
 8011614:	f7ff f9e8 	bl	80109e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011618:	e6d3      	b.n	80113c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 801161a:	882e      	ldrh	r6, [r5, #0]
 801161c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8011620:	42b3      	cmp	r3, r6
 8011622:	f67f ae98 	bls.w	8011356 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8011626:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 801162a:	ab07      	add	r3, sp, #28
 801162c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8011630:	6851      	ldr	r1, [r2, #4]
 8011632:	c303      	stmia	r3!, {r0, r1}
 8011634:	a807      	add	r0, sp, #28
 8011636:	f7f8 fe3e 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801163a:	b920      	cbnz	r0, 8011646 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 801163c:	6823      	ldr	r3, [r4, #0]
 801163e:	a907      	add	r1, sp, #28
 8011640:	4620      	mov	r0, r4
 8011642:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011644:	4798      	blx	r3
 8011646:	3601      	adds	r6, #1
 8011648:	b2b6      	uxth	r6, r6
 801164a:	e7e7      	b.n	801161c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 801164c:	20016c88 	.word	0x20016c88

08011650 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011650:	4b03      	ldr	r3, [pc, #12]	@ (8011660 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011652:	2200      	movs	r2, #0
 8011654:	801a      	strh	r2, [r3, #0]
 8011656:	805a      	strh	r2, [r3, #2]
 8011658:	809a      	strh	r2, [r3, #4]
 801165a:	80da      	strh	r2, [r3, #6]
 801165c:	4770      	bx	lr
 801165e:	bf00      	nop
 8011660:	20016cd4 	.word	0x20016cd4

08011664 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011668:	b09d      	sub	sp, #116	@ 0x74
 801166a:	4606      	mov	r6, r0
 801166c:	4614      	mov	r4, r2
 801166e:	468a      	mov	sl, r1
 8011670:	a803      	add	r0, sp, #12
 8011672:	461d      	mov	r5, r3
 8011674:	f000 fe48 	bl	8012308 <_ZN8touchgfx12TextProviderC1Ev>
 8011678:	6833      	ldr	r3, [r6, #0]
 801167a:	4630      	mov	r0, r6
 801167c:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8011680:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011682:	4798      	blx	r3
 8011684:	6833      	ldr	r3, [r6, #0]
 8011686:	4607      	mov	r7, r0
 8011688:	4630      	mov	r0, r6
 801168a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801168c:	4798      	blx	r3
 801168e:	462a      	mov	r2, r5
 8011690:	2500      	movs	r5, #0
 8011692:	4621      	mov	r1, r4
 8011694:	9000      	str	r0, [sp, #0]
 8011696:	463b      	mov	r3, r7
 8011698:	462c      	mov	r4, r5
 801169a:	46a9      	mov	r9, r5
 801169c:	46a8      	mov	r8, r5
 801169e:	a803      	add	r0, sp, #12
 80116a0:	f000 fe8d 	bl	80123be <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80116a4:	2300      	movs	r3, #0
 80116a6:	9302      	str	r3, [sp, #8]
 80116a8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80116ac:	429c      	cmp	r4, r3
 80116ae:	d002      	beq.n	80116b6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80116b0:	455c      	cmp	r4, fp
 80116b2:	bf18      	it	ne
 80116b4:	4625      	movne	r5, r4
 80116b6:	ab02      	add	r3, sp, #8
 80116b8:	4632      	mov	r2, r6
 80116ba:	4651      	mov	r1, sl
 80116bc:	a803      	add	r0, sp, #12
 80116be:	f001 f983 	bl	80129c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80116c2:	4604      	mov	r4, r0
 80116c4:	b108      	cbz	r0, 80116ca <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80116c6:	280a      	cmp	r0, #10
 80116c8:	d10a      	bne.n	80116e0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80116ca:	45c1      	cmp	r9, r8
 80116cc:	bf38      	it	cc
 80116ce:	46c1      	movcc	r9, r8
 80116d0:	f04f 0800 	mov.w	r8, #0
 80116d4:	2c00      	cmp	r4, #0
 80116d6:	d1e5      	bne.n	80116a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80116d8:	4648      	mov	r0, r9
 80116da:	b01d      	add	sp, #116	@ 0x74
 80116dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116e0:	9a02      	ldr	r2, [sp, #8]
 80116e2:	2a00      	cmp	r2, #0
 80116e4:	d0de      	beq.n	80116a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80116e6:	7b57      	ldrb	r7, [r2, #13]
 80116e8:	4629      	mov	r1, r5
 80116ea:	6833      	ldr	r3, [r6, #0]
 80116ec:	007f      	lsls	r7, r7, #1
 80116ee:	8894      	ldrh	r4, [r2, #4]
 80116f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80116f2:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 80116f6:	7a97      	ldrb	r7, [r2, #10]
 80116f8:	4307      	orrs	r7, r0
 80116fa:	4630      	mov	r0, r6
 80116fc:	4798      	blx	r3
 80116fe:	4438      	add	r0, r7
 8011700:	4480      	add	r8, r0
 8011702:	fa1f f888 	uxth.w	r8, r8
 8011706:	e7e5      	b.n	80116d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011708 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011708:	b508      	push	{r3, lr}
 801170a:	6803      	ldr	r3, [r0, #0]
 801170c:	68db      	ldr	r3, [r3, #12]
 801170e:	4798      	blx	r3
 8011710:	b128      	cbz	r0, 801171e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011712:	7b43      	ldrb	r3, [r0, #13]
 8011714:	7a80      	ldrb	r0, [r0, #10]
 8011716:	005b      	lsls	r3, r3, #1
 8011718:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801171c:	4318      	orrs	r0, r3
 801171e:	bd08      	pop	{r3, pc}

08011720 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011720:	b40e      	push	{r1, r2, r3}
 8011722:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011724:	b09e      	sub	sp, #120	@ 0x78
 8011726:	4605      	mov	r5, r0
 8011728:	ab23      	add	r3, sp, #140	@ 0x8c
 801172a:	a805      	add	r0, sp, #20
 801172c:	f853 4b04 	ldr.w	r4, [r3], #4
 8011730:	9303      	str	r3, [sp, #12]
 8011732:	f000 fde9 	bl	8012308 <_ZN8touchgfx12TextProviderC1Ev>
 8011736:	682b      	ldr	r3, [r5, #0]
 8011738:	4628      	mov	r0, r5
 801173a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801173c:	4798      	blx	r3
 801173e:	682b      	ldr	r3, [r5, #0]
 8011740:	4606      	mov	r6, r0
 8011742:	4628      	mov	r0, r5
 8011744:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011746:	4798      	blx	r3
 8011748:	4633      	mov	r3, r6
 801174a:	4621      	mov	r1, r4
 801174c:	ae1e      	add	r6, sp, #120	@ 0x78
 801174e:	2400      	movs	r4, #0
 8011750:	9000      	str	r0, [sp, #0]
 8011752:	9a03      	ldr	r2, [sp, #12]
 8011754:	a805      	add	r0, sp, #20
 8011756:	f000 fe32 	bl	80123be <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801175a:	f846 4d68 	str.w	r4, [r6, #-104]!
 801175e:	462a      	mov	r2, r5
 8011760:	4633      	mov	r3, r6
 8011762:	4621      	mov	r1, r4
 8011764:	a805      	add	r0, sp, #20
 8011766:	f001 f92f 	bl	80129c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801176a:	b300      	cbz	r0, 80117ae <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 801176c:	280a      	cmp	r0, #10
 801176e:	d01a      	beq.n	80117a6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8011770:	9f04      	ldr	r7, [sp, #16]
 8011772:	b1c7      	cbz	r7, 80117a6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8011774:	7b78      	ldrb	r0, [r7, #13]
 8011776:	7a3b      	ldrb	r3, [r7, #8]
 8011778:	00c1      	lsls	r1, r0, #3
 801177a:	88ea      	ldrh	r2, [r5, #6]
 801177c:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8011780:	4319      	orrs	r1, r3
 8011782:	0643      	lsls	r3, r0, #25
 8011784:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8011788:	bf48      	it	mi
 801178a:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 801178e:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8011792:	bf48      	it	mi
 8011794:	b219      	sxthmi	r1, r3
 8011796:	79fb      	ldrb	r3, [r7, #7]
 8011798:	4303      	orrs	r3, r0
 801179a:	4413      	add	r3, r2
 801179c:	1a5b      	subs	r3, r3, r1
 801179e:	b21b      	sxth	r3, r3
 80117a0:	429c      	cmp	r4, r3
 80117a2:	bfb8      	it	lt
 80117a4:	461c      	movlt	r4, r3
 80117a6:	4633      	mov	r3, r6
 80117a8:	462a      	mov	r2, r5
 80117aa:	2100      	movs	r1, #0
 80117ac:	e7da      	b.n	8011764 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80117ae:	b2a0      	uxth	r0, r4
 80117b0:	b01e      	add	sp, #120	@ 0x78
 80117b2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80117b6:	b003      	add	sp, #12
 80117b8:	4770      	bx	lr

080117ba <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80117ba:	7a43      	ldrb	r3, [r0, #9]
 80117bc:	8880      	ldrh	r0, [r0, #4]
 80117be:	4418      	add	r0, r3
 80117c0:	b280      	uxth	r0, r0
 80117c2:	4770      	bx	lr

080117c4 <_ZNK8touchgfx4Font13getFontHeightEv>:
 80117c4:	6803      	ldr	r3, [r0, #0]
 80117c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80117c8:	4718      	bx	r3

080117ca <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80117ca:	b40e      	push	{r1, r2, r3}
 80117cc:	b570      	push	{r4, r5, r6, lr}
 80117ce:	b09d      	sub	sp, #116	@ 0x74
 80117d0:	4604      	mov	r4, r0
 80117d2:	ab21      	add	r3, sp, #132	@ 0x84
 80117d4:	a803      	add	r0, sp, #12
 80117d6:	f853 5b04 	ldr.w	r5, [r3], #4
 80117da:	9302      	str	r3, [sp, #8]
 80117dc:	f000 fd94 	bl	8012308 <_ZN8touchgfx12TextProviderC1Ev>
 80117e0:	6823      	ldr	r3, [r4, #0]
 80117e2:	4620      	mov	r0, r4
 80117e4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80117e6:	4798      	blx	r3
 80117e8:	6823      	ldr	r3, [r4, #0]
 80117ea:	4606      	mov	r6, r0
 80117ec:	4620      	mov	r0, r4
 80117ee:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80117f0:	2401      	movs	r4, #1
 80117f2:	4798      	blx	r3
 80117f4:	4633      	mov	r3, r6
 80117f6:	9000      	str	r0, [sp, #0]
 80117f8:	4629      	mov	r1, r5
 80117fa:	9a02      	ldr	r2, [sp, #8]
 80117fc:	a803      	add	r0, sp, #12
 80117fe:	f000 fdde 	bl	80123be <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011802:	a803      	add	r0, sp, #12
 8011804:	f001 f9ac 	bl	8012b60 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011808:	b2a3      	uxth	r3, r4
 801180a:	b138      	cbz	r0, 801181c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 801180c:	280a      	cmp	r0, #10
 801180e:	a803      	add	r0, sp, #12
 8011810:	bf04      	itt	eq
 8011812:	3301      	addeq	r3, #1
 8011814:	b21c      	sxtheq	r4, r3
 8011816:	f001 f9a3 	bl	8012b60 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801181a:	e7f5      	b.n	8011808 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801181c:	4618      	mov	r0, r3
 801181e:	b01d      	add	sp, #116	@ 0x74
 8011820:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011824:	b003      	add	sp, #12
 8011826:	4770      	bx	lr

08011828 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011828:	b40e      	push	{r1, r2, r3}
 801182a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801182c:	b09e      	sub	sp, #120	@ 0x78
 801182e:	4604      	mov	r4, r0
 8011830:	ab23      	add	r3, sp, #140	@ 0x8c
 8011832:	a805      	add	r0, sp, #20
 8011834:	f853 5b04 	ldr.w	r5, [r3], #4
 8011838:	9303      	str	r3, [sp, #12]
 801183a:	f000 fd65 	bl	8012308 <_ZN8touchgfx12TextProviderC1Ev>
 801183e:	6823      	ldr	r3, [r4, #0]
 8011840:	4620      	mov	r0, r4
 8011842:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011844:	4798      	blx	r3
 8011846:	6823      	ldr	r3, [r4, #0]
 8011848:	4606      	mov	r6, r0
 801184a:	4620      	mov	r0, r4
 801184c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801184e:	4798      	blx	r3
 8011850:	4633      	mov	r3, r6
 8011852:	4629      	mov	r1, r5
 8011854:	9000      	str	r0, [sp, #0]
 8011856:	9a03      	ldr	r2, [sp, #12]
 8011858:	a805      	add	r0, sp, #20
 801185a:	f000 fdb0 	bl	80123be <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801185e:	ad1e      	add	r5, sp, #120	@ 0x78
 8011860:	2100      	movs	r1, #0
 8011862:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8011866:	4622      	mov	r2, r4
 8011868:	a805      	add	r0, sp, #20
 801186a:	f845 1d68 	str.w	r1, [r5, #-104]!
 801186e:	462b      	mov	r3, r5
 8011870:	f001 f8aa 	bl	80129c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011874:	b1d8      	cbz	r0, 80118ae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8011876:	280a      	cmp	r0, #10
 8011878:	d012      	beq.n	80118a0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801187a:	9804      	ldr	r0, [sp, #16]
 801187c:	b180      	cbz	r0, 80118a0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801187e:	7b47      	ldrb	r7, [r0, #13]
 8011880:	88e2      	ldrh	r2, [r4, #6]
 8011882:	00fb      	lsls	r3, r7, #3
 8011884:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011888:	7a03      	ldrb	r3, [r0, #8]
 801188a:	430b      	orrs	r3, r1
 801188c:	0679      	lsls	r1, r7, #25
 801188e:	bf44      	itt	mi
 8011890:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011894:	b21b      	sxthmi	r3, r3
 8011896:	1ad3      	subs	r3, r2, r3
 8011898:	b21b      	sxth	r3, r3
 801189a:	429e      	cmp	r6, r3
 801189c:	bfa8      	it	ge
 801189e:	461e      	movge	r6, r3
 80118a0:	462b      	mov	r3, r5
 80118a2:	4622      	mov	r2, r4
 80118a4:	2100      	movs	r1, #0
 80118a6:	a805      	add	r0, sp, #20
 80118a8:	f001 f88e 	bl	80129c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80118ac:	e7e2      	b.n	8011874 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80118ae:	4630      	mov	r0, r6
 80118b0:	b01e      	add	sp, #120	@ 0x78
 80118b2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80118b6:	b003      	add	sp, #12
 80118b8:	4770      	bx	lr

080118ba <_ZNK8touchgfx8Drawable10invalidateEv>:
 80118ba:	b513      	push	{r0, r1, r4, lr}
 80118bc:	6803      	ldr	r3, [r0, #0]
 80118be:	2400      	movs	r4, #0
 80118c0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80118c4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80118c8:	f8ad 1004 	strh.w	r1, [sp, #4]
 80118cc:	4669      	mov	r1, sp
 80118ce:	691b      	ldr	r3, [r3, #16]
 80118d0:	9400      	str	r4, [sp, #0]
 80118d2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80118d6:	4798      	blx	r3
 80118d8:	b002      	add	sp, #8
 80118da:	bd10      	pop	{r4, pc}

080118dc <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80118dc:	b538      	push	{r3, r4, r5, lr}
 80118de:	680b      	ldr	r3, [r1, #0]
 80118e0:	460c      	mov	r4, r1
 80118e2:	4605      	mov	r5, r0
 80118e4:	68db      	ldr	r3, [r3, #12]
 80118e6:	4798      	blx	r3
 80118e8:	6823      	ldr	r3, [r4, #0]
 80118ea:	4620      	mov	r0, r4
 80118ec:	4629      	mov	r1, r5
 80118ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80118f0:	4798      	blx	r3
 80118f2:	4628      	mov	r0, r5
 80118f4:	bd38      	pop	{r3, r4, r5, pc}

080118f6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80118f6:	b410      	push	{r4}
 80118f8:	880a      	ldrh	r2, [r1, #0]
 80118fa:	8884      	ldrh	r4, [r0, #4]
 80118fc:	4422      	add	r2, r4
 80118fe:	800a      	strh	r2, [r1, #0]
 8011900:	884a      	ldrh	r2, [r1, #2]
 8011902:	88c4      	ldrh	r4, [r0, #6]
 8011904:	4422      	add	r2, r4
 8011906:	804a      	strh	r2, [r1, #2]
 8011908:	6940      	ldr	r0, [r0, #20]
 801190a:	b120      	cbz	r0, 8011916 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801190c:	6803      	ldr	r3, [r0, #0]
 801190e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011912:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011914:	4718      	bx	r3
 8011916:	f85d 4b04 	ldr.w	r4, [sp], #4
 801191a:	4770      	bx	lr

0801191c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801191c:	b570      	push	{r4, r5, r6, lr}
 801191e:	8882      	ldrh	r2, [r0, #4]
 8011920:	460c      	mov	r4, r1
 8011922:	880b      	ldrh	r3, [r1, #0]
 8011924:	4605      	mov	r5, r0
 8011926:	4413      	add	r3, r2
 8011928:	800b      	strh	r3, [r1, #0]
 801192a:	884b      	ldrh	r3, [r1, #2]
 801192c:	88c2      	ldrh	r2, [r0, #6]
 801192e:	4413      	add	r3, r2
 8011930:	804b      	strh	r3, [r1, #2]
 8011932:	1d01      	adds	r1, r0, #4
 8011934:	4620      	mov	r0, r4
 8011936:	f7f8 fc7b 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 801193a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801193e:	2b00      	cmp	r3, #0
 8011940:	dd0b      	ble.n	801195a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011942:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011946:	2b00      	cmp	r3, #0
 8011948:	dd07      	ble.n	801195a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801194a:	6968      	ldr	r0, [r5, #20]
 801194c:	b128      	cbz	r0, 801195a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801194e:	6803      	ldr	r3, [r0, #0]
 8011950:	4621      	mov	r1, r4
 8011952:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011954:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011958:	4718      	bx	r3
 801195a:	bd70      	pop	{r4, r5, r6, pc}

0801195c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801195c:	b570      	push	{r4, r5, r6, lr}
 801195e:	8882      	ldrh	r2, [r0, #4]
 8011960:	460c      	mov	r4, r1
 8011962:	880b      	ldrh	r3, [r1, #0]
 8011964:	4605      	mov	r5, r0
 8011966:	4413      	add	r3, r2
 8011968:	800b      	strh	r3, [r1, #0]
 801196a:	884b      	ldrh	r3, [r1, #2]
 801196c:	88c2      	ldrh	r2, [r0, #6]
 801196e:	4413      	add	r3, r2
 8011970:	804b      	strh	r3, [r1, #2]
 8011972:	1d01      	adds	r1, r0, #4
 8011974:	4620      	mov	r0, r4
 8011976:	f7f8 fc5b 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 801197a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801197e:	2b00      	cmp	r3, #0
 8011980:	dd19      	ble.n	80119b6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011982:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011986:	2b00      	cmp	r3, #0
 8011988:	dd15      	ble.n	80119b6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801198a:	6968      	ldr	r0, [r5, #20]
 801198c:	b128      	cbz	r0, 801199a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801198e:	6803      	ldr	r3, [r0, #0]
 8011990:	4621      	mov	r1, r4
 8011992:	691b      	ldr	r3, [r3, #16]
 8011994:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011998:	4718      	bx	r3
 801199a:	4b07      	ldr	r3, [pc, #28]	@ (80119b8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801199c:	681b      	ldr	r3, [r3, #0]
 801199e:	3304      	adds	r3, #4
 80119a0:	429d      	cmp	r5, r3
 80119a2:	d108      	bne.n	80119b6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80119a4:	f7fe ff10 	bl	80107c8 <_ZN8touchgfx11Application11getInstanceEv>
 80119a8:	6803      	ldr	r3, [r0, #0]
 80119aa:	6821      	ldr	r1, [r4, #0]
 80119ac:	6862      	ldr	r2, [r4, #4]
 80119ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80119b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80119b4:	4718      	bx	r3
 80119b6:	bd70      	pop	{r4, r5, r6, pc}
 80119b8:	20016ccc 	.word	0x20016ccc

080119bc <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80119bc:	b570      	push	{r4, r5, r6, lr}
 80119be:	4604      	mov	r4, r0
 80119c0:	4616      	mov	r6, r2
 80119c2:	460d      	mov	r5, r1
 80119c4:	b901      	cbnz	r1, 80119c8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80119c6:	b192      	cbz	r2, 80119ee <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80119c8:	6823      	ldr	r3, [r4, #0]
 80119ca:	4620      	mov	r0, r4
 80119cc:	699b      	ldr	r3, [r3, #24]
 80119ce:	4798      	blx	r3
 80119d0:	88e2      	ldrh	r2, [r4, #6]
 80119d2:	88a1      	ldrh	r1, [r4, #4]
 80119d4:	4620      	mov	r0, r4
 80119d6:	4432      	add	r2, r6
 80119d8:	4429      	add	r1, r5
 80119da:	b212      	sxth	r2, r2
 80119dc:	b209      	sxth	r1, r1
 80119de:	f7f1 fb77 	bl	80030d0 <_ZN8touchgfx8Drawable5setXYEss>
 80119e2:	6823      	ldr	r3, [r4, #0]
 80119e4:	4620      	mov	r0, r4
 80119e6:	699b      	ldr	r3, [r3, #24]
 80119e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80119ec:	4718      	bx	r3
 80119ee:	bd70      	pop	{r4, r5, r6, pc}

080119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80119f0:	b510      	push	{r4, lr}
 80119f2:	2300      	movs	r3, #0
 80119f4:	4604      	mov	r4, r0
 80119f6:	4608      	mov	r0, r1
 80119f8:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80119fc:	8023      	strh	r3, [r4, #0]
 80119fe:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011a02:	8063      	strh	r3, [r4, #2]
 8011a04:	6803      	ldr	r3, [r0, #0]
 8011a06:	80a1      	strh	r1, [r4, #4]
 8011a08:	4621      	mov	r1, r4
 8011a0a:	80e2      	strh	r2, [r4, #6]
 8011a0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011a0e:	4798      	blx	r3
 8011a10:	4620      	mov	r0, r4
 8011a12:	bd10      	pop	{r4, pc}

08011a14 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8011a14:	b530      	push	{r4, r5, lr}
 8011a16:	8083      	strh	r3, [r0, #4]
 8011a18:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011a1c:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8011a20:	80c3      	strh	r3, [r0, #6]
 8011a22:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011a26:	6141      	str	r1, [r0, #20]
 8011a28:	7203      	strb	r3, [r0, #8]
 8011a2a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011a2e:	8302      	strh	r2, [r0, #24]
 8011a30:	7243      	strb	r3, [r0, #9]
 8011a32:	7a83      	ldrb	r3, [r0, #10]
 8011a34:	f365 0306 	bfi	r3, r5, #0, #7
 8011a38:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8011a3c:	f365 13c7 	bfi	r3, r5, #7, #1
 8011a40:	7283      	strb	r3, [r0, #10]
 8011a42:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8011a46:	72c3      	strb	r3, [r0, #11]
 8011a48:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8011a4c:	7303      	strb	r3, [r0, #12]
 8011a4e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8011a52:	81c3      	strh	r3, [r0, #14]
 8011a54:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8011a58:	8203      	strh	r3, [r0, #16]
 8011a5a:	4b01      	ldr	r3, [pc, #4]	@ (8011a60 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8011a5c:	6003      	str	r3, [r0, #0]
 8011a5e:	bd30      	pop	{r4, r5, pc}
 8011a60:	080256a8 	.word	0x080256a8

08011a64 <_ZNK8touchgfx9ConstFont4findEt>:
 8011a64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a66:	6944      	ldr	r4, [r0, #20]
 8011a68:	b3bc      	cbz	r4, 8011ada <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011a6a:	88a3      	ldrh	r3, [r4, #4]
 8011a6c:	8b02      	ldrh	r2, [r0, #24]
 8011a6e:	1acb      	subs	r3, r1, r3
 8011a70:	f102 32ff 	add.w	r2, r2, #4294967295
 8011a74:	d431      	bmi.n	8011ada <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011a76:	4293      	cmp	r3, r2
 8011a78:	dd0c      	ble.n	8011a94 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8011a7a:	230e      	movs	r3, #14
 8011a7c:	fb03 4302 	mla	r3, r3, r2, r4
 8011a80:	889b      	ldrh	r3, [r3, #4]
 8011a82:	1a5b      	subs	r3, r3, r1
 8011a84:	1ad3      	subs	r3, r2, r3
 8011a86:	429a      	cmp	r2, r3
 8011a88:	db27      	blt.n	8011ada <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011a8a:	2b00      	cmp	r3, #0
 8011a8c:	bfbc      	itt	lt
 8011a8e:	2302      	movlt	r3, #2
 8011a90:	fb92 f3f3 	sdivlt	r3, r2, r3
 8011a94:	2500      	movs	r5, #0
 8011a96:	260e      	movs	r6, #14
 8011a98:	4295      	cmp	r5, r2
 8011a9a:	dc1e      	bgt.n	8011ada <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011a9c:	fb06 4003 	mla	r0, r6, r3, r4
 8011aa0:	8887      	ldrh	r7, [r0, #4]
 8011aa2:	42b9      	cmp	r1, r7
 8011aa4:	d01a      	beq.n	8011adc <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8011aa6:	d20d      	bcs.n	8011ac4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8011aa8:	1e5a      	subs	r2, r3, #1
 8011aaa:	4295      	cmp	r5, r2
 8011aac:	dc15      	bgt.n	8011ada <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011aae:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8011ab2:	1a5b      	subs	r3, r3, r1
 8011ab4:	1ad3      	subs	r3, r2, r3
 8011ab6:	429a      	cmp	r2, r3
 8011ab8:	db0f      	blt.n	8011ada <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011aba:	429d      	cmp	r5, r3
 8011abc:	ddec      	ble.n	8011a98 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011abe:	1953      	adds	r3, r2, r5
 8011ac0:	105b      	asrs	r3, r3, #1
 8011ac2:	e7e9      	b.n	8011a98 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011ac4:	1c5d      	adds	r5, r3, #1
 8011ac6:	42aa      	cmp	r2, r5
 8011ac8:	db07      	blt.n	8011ada <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011aca:	8a43      	ldrh	r3, [r0, #18]
 8011acc:	1acb      	subs	r3, r1, r3
 8011ace:	442b      	add	r3, r5
 8011ad0:	429d      	cmp	r5, r3
 8011ad2:	dc02      	bgt.n	8011ada <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011ad4:	429a      	cmp	r2, r3
 8011ad6:	dadf      	bge.n	8011a98 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011ad8:	e7f1      	b.n	8011abe <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011ada:	2000      	movs	r0, #0
 8011adc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011ade <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8011ade:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011ae0:	4604      	mov	r4, r0
 8011ae2:	4617      	mov	r7, r2
 8011ae4:	461e      	mov	r6, r3
 8011ae6:	b911      	cbnz	r1, 8011aee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011ae8:	2500      	movs	r5, #0
 8011aea:	4628      	mov	r0, r5
 8011aec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011aee:	290a      	cmp	r1, #10
 8011af0:	d0fa      	beq.n	8011ae8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011af2:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8011af6:	4291      	cmp	r1, r2
 8011af8:	d0f6      	beq.n	8011ae8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011afa:	f242 020b 	movw	r2, #8203	@ 0x200b
 8011afe:	4291      	cmp	r1, r2
 8011b00:	d0f2      	beq.n	8011ae8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011b02:	f7ff ffaf 	bl	8011a64 <_ZNK8touchgfx9ConstFont4findEt>
 8011b06:	4605      	mov	r5, r0
 8011b08:	b950      	cbnz	r0, 8011b20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011b0a:	6823      	ldr	r3, [r4, #0]
 8011b0c:	4620      	mov	r0, r4
 8011b0e:	691b      	ldr	r3, [r3, #16]
 8011b10:	4798      	blx	r3
 8011b12:	4601      	mov	r1, r0
 8011b14:	4620      	mov	r0, r4
 8011b16:	f7ff ffa5 	bl	8011a64 <_ZNK8touchgfx9ConstFont4findEt>
 8011b1a:	4605      	mov	r5, r0
 8011b1c:	2800      	cmp	r0, #0
 8011b1e:	d0e3      	beq.n	8011ae8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011b20:	6823      	ldr	r3, [r4, #0]
 8011b22:	4629      	mov	r1, r5
 8011b24:	4620      	mov	r0, r4
 8011b26:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8011b28:	4798      	blx	r3
 8011b2a:	6038      	str	r0, [r7, #0]
 8011b2c:	6823      	ldr	r3, [r4, #0]
 8011b2e:	4620      	mov	r0, r4
 8011b30:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011b32:	4798      	blx	r3
 8011b34:	7030      	strb	r0, [r6, #0]
 8011b36:	e7d8      	b.n	8011aea <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011b38 <_ZN8touchgfx4clzuEm>:
 8011b38:	4603      	mov	r3, r0
 8011b3a:	b1c8      	cbz	r0, 8011b70 <_ZN8touchgfx4clzuEm+0x38>
 8011b3c:	0c02      	lsrs	r2, r0, #16
 8011b3e:	0412      	lsls	r2, r2, #16
 8011b40:	b9a2      	cbnz	r2, 8011b6c <_ZN8touchgfx4clzuEm+0x34>
 8011b42:	0403      	lsls	r3, r0, #16
 8011b44:	2010      	movs	r0, #16
 8011b46:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8011b4a:	bf04      	itt	eq
 8011b4c:	021b      	lsleq	r3, r3, #8
 8011b4e:	3008      	addeq	r0, #8
 8011b50:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8011b54:	bf04      	itt	eq
 8011b56:	011b      	lsleq	r3, r3, #4
 8011b58:	3004      	addeq	r0, #4
 8011b5a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8011b5e:	bf04      	itt	eq
 8011b60:	009b      	lsleq	r3, r3, #2
 8011b62:	3002      	addeq	r0, #2
 8011b64:	2b00      	cmp	r3, #0
 8011b66:	db04      	blt.n	8011b72 <_ZN8touchgfx4clzuEm+0x3a>
 8011b68:	3001      	adds	r0, #1
 8011b6a:	4770      	bx	lr
 8011b6c:	2000      	movs	r0, #0
 8011b6e:	e7ea      	b.n	8011b46 <_ZN8touchgfx4clzuEm+0xe>
 8011b70:	2020      	movs	r0, #32
 8011b72:	4770      	bx	lr

08011b74 <_ZN8touchgfx7muldivuEmmmRm>:
 8011b74:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011b78:	460f      	mov	r7, r1
 8011b7a:	4615      	mov	r5, r2
 8011b7c:	461e      	mov	r6, r3
 8011b7e:	4601      	mov	r1, r0
 8011b80:	b100      	cbz	r0, 8011b84 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8011b82:	b927      	cbnz	r7, 8011b8e <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8011b84:	2000      	movs	r0, #0
 8011b86:	6030      	str	r0, [r6, #0]
 8011b88:	b002      	add	sp, #8
 8011b8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011b8e:	f7ff ffd3 	bl	8011b38 <_ZN8touchgfx4clzuEm>
 8011b92:	b980      	cbnz	r0, 8011bb6 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8011b94:	4638      	mov	r0, r7
 8011b96:	f7ff ffcf 	bl	8011b38 <_ZN8touchgfx4clzuEm>
 8011b9a:	2800      	cmp	r0, #0
 8011b9c:	dd05      	ble.n	8011baa <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8011b9e:	4633      	mov	r3, r6
 8011ba0:	462a      	mov	r2, r5
 8011ba2:	4638      	mov	r0, r7
 8011ba4:	f7ff ffe6 	bl	8011b74 <_ZN8touchgfx7muldivuEmmmRm>
 8011ba8:	e7ee      	b.n	8011b88 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011baa:	f04f 33ff 	mov.w	r3, #4294967295
 8011bae:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8011bb2:	6033      	str	r3, [r6, #0]
 8011bb4:	e7e8      	b.n	8011b88 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011bb6:	fa37 f800 	lsrs.w	r8, r7, r0
 8011bba:	fb07 f301 	mul.w	r3, r7, r1
 8011bbe:	d105      	bne.n	8011bcc <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8011bc0:	fbb3 f0f5 	udiv	r0, r3, r5
 8011bc4:	fb05 3510 	mls	r5, r5, r0, r3
 8011bc8:	6035      	str	r5, [r6, #0]
 8011bca:	e7dd      	b.n	8011b88 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011bcc:	2301      	movs	r3, #1
 8011bce:	fa01 fa00 	lsl.w	sl, r1, r0
 8011bd2:	462a      	mov	r2, r5
 8011bd4:	fa03 f000 	lsl.w	r0, r3, r0
 8011bd8:	4633      	mov	r3, r6
 8011bda:	fbba f9f5 	udiv	r9, sl, r5
 8011bde:	3801      	subs	r0, #1
 8011be0:	fb08 f409 	mul.w	r4, r8, r9
 8011be4:	4038      	ands	r0, r7
 8011be6:	f7ff ffc5 	bl	8011b74 <_ZN8touchgfx7muldivuEmmmRm>
 8011bea:	462a      	mov	r2, r5
 8011bec:	4607      	mov	r7, r0
 8011bee:	ab01      	add	r3, sp, #4
 8011bf0:	fb05 a119 	mls	r1, r5, r9, sl
 8011bf4:	4640      	mov	r0, r8
 8011bf6:	f7ff ffbd 	bl	8011b74 <_ZN8touchgfx7muldivuEmmmRm>
 8011bfa:	9b01      	ldr	r3, [sp, #4]
 8011bfc:	6832      	ldr	r2, [r6, #0]
 8011bfe:	441a      	add	r2, r3
 8011c00:	fbb2 f3f5 	udiv	r3, r2, r5
 8011c04:	441c      	add	r4, r3
 8011c06:	fb05 2513 	mls	r5, r5, r3, r2
 8011c0a:	443c      	add	r4, r7
 8011c0c:	4420      	add	r0, r4
 8011c0e:	e7db      	b.n	8011bc8 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08011c10 <_ZN8touchgfx6muldivElllRl>:
 8011c10:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011c12:	2800      	cmp	r0, #0
 8011c14:	461e      	mov	r6, r3
 8011c16:	bfba      	itte	lt
 8011c18:	4240      	neglt	r0, r0
 8011c1a:	f04f 34ff 	movlt.w	r4, #4294967295
 8011c1e:	2401      	movge	r4, #1
 8011c20:	2900      	cmp	r1, #0
 8011c22:	bfbc      	itt	lt
 8011c24:	4249      	neglt	r1, r1
 8011c26:	4264      	neglt	r4, r4
 8011c28:	2a00      	cmp	r2, #0
 8011c2a:	bfb6      	itet	lt
 8011c2c:	4265      	neglt	r5, r4
 8011c2e:	4625      	movge	r5, r4
 8011c30:	4252      	neglt	r2, r2
 8011c32:	4288      	cmp	r0, r1
 8011c34:	bfc2      	ittt	gt
 8011c36:	4603      	movgt	r3, r0
 8011c38:	4608      	movgt	r0, r1
 8011c3a:	4619      	movgt	r1, r3
 8011c3c:	ab01      	add	r3, sp, #4
 8011c3e:	f7ff ff99 	bl	8011b74 <_ZN8touchgfx7muldivuEmmmRm>
 8011c42:	9b01      	ldr	r3, [sp, #4]
 8011c44:	4368      	muls	r0, r5
 8011c46:	435c      	muls	r4, r3
 8011c48:	6034      	str	r4, [r6, #0]
 8011c4a:	b002      	add	sp, #8
 8011c4c:	bd70      	pop	{r4, r5, r6, pc}

08011c4e <_ZN8touchgfx6muldivElll>:
 8011c4e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011c50:	4606      	mov	r6, r0
 8011c52:	ab01      	add	r3, sp, #4
 8011c54:	460d      	mov	r5, r1
 8011c56:	4614      	mov	r4, r2
 8011c58:	f7ff ffda 	bl	8011c10 <_ZN8touchgfx6muldivElllRl>
 8011c5c:	2e00      	cmp	r6, #0
 8011c5e:	db20      	blt.n	8011ca2 <_ZN8touchgfx6muldivElll+0x54>
 8011c60:	bf14      	ite	ne
 8011c62:	2301      	movne	r3, #1
 8011c64:	2300      	moveq	r3, #0
 8011c66:	2d00      	cmp	r5, #0
 8011c68:	db1e      	blt.n	8011ca8 <_ZN8touchgfx6muldivElll+0x5a>
 8011c6a:	bf14      	ite	ne
 8011c6c:	2201      	movne	r2, #1
 8011c6e:	2200      	moveq	r2, #0
 8011c70:	2c00      	cmp	r4, #0
 8011c72:	fb03 f202 	mul.w	r2, r3, r2
 8011c76:	db1a      	blt.n	8011cae <_ZN8touchgfx6muldivElll+0x60>
 8011c78:	bf14      	ite	ne
 8011c7a:	2301      	movne	r3, #1
 8011c7c:	2300      	moveq	r3, #0
 8011c7e:	4353      	muls	r3, r2
 8011c80:	2b01      	cmp	r3, #1
 8011c82:	d117      	bne.n	8011cb4 <_ZN8touchgfx6muldivElll+0x66>
 8011c84:	2c00      	cmp	r4, #0
 8011c86:	9b01      	ldr	r3, [sp, #4]
 8011c88:	bfb8      	it	lt
 8011c8a:	4264      	neglt	r4, r4
 8011c8c:	2b00      	cmp	r3, #0
 8011c8e:	f104 0401 	add.w	r4, r4, #1
 8011c92:	bfb8      	it	lt
 8011c94:	425b      	neglt	r3, r3
 8011c96:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8011c9a:	db00      	blt.n	8011c9e <_ZN8touchgfx6muldivElll+0x50>
 8011c9c:	3001      	adds	r0, #1
 8011c9e:	b002      	add	sp, #8
 8011ca0:	bd70      	pop	{r4, r5, r6, pc}
 8011ca2:	f04f 33ff 	mov.w	r3, #4294967295
 8011ca6:	e7de      	b.n	8011c66 <_ZN8touchgfx6muldivElll+0x18>
 8011ca8:	f04f 32ff 	mov.w	r2, #4294967295
 8011cac:	e7e0      	b.n	8011c70 <_ZN8touchgfx6muldivElll+0x22>
 8011cae:	f04f 33ff 	mov.w	r3, #4294967295
 8011cb2:	e7e4      	b.n	8011c7e <_ZN8touchgfx6muldivElll+0x30>
 8011cb4:	3301      	adds	r3, #1
 8011cb6:	d1f2      	bne.n	8011c9e <_ZN8touchgfx6muldivElll+0x50>
 8011cb8:	9b01      	ldr	r3, [sp, #4]
 8011cba:	2c00      	cmp	r4, #0
 8011cbc:	bfb8      	it	lt
 8011cbe:	4264      	neglt	r4, r4
 8011cc0:	2b00      	cmp	r3, #0
 8011cc2:	bfb8      	it	lt
 8011cc4:	425b      	neglt	r3, r3
 8011cc6:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8011cca:	bfc8      	it	gt
 8011ccc:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8011cd0:	e7e5      	b.n	8011c9e <_ZN8touchgfx6muldivElll+0x50>

08011cd2 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8011cd2:	2000      	movs	r0, #0
 8011cd4:	4770      	bx	lr

08011cd6 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8011cd6:	2001      	movs	r0, #1
 8011cd8:	4770      	bx	lr

08011cda <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8011cda:	2002      	movs	r0, #2
 8011cdc:	4770      	bx	lr

08011cde <_ZN8touchgfx6ScreenD1Ev>:
 8011cde:	4770      	bx	lr

08011ce0 <_ZN8touchgfx12GestureEventD1Ev>:
 8011ce0:	4770      	bx	lr

08011ce2 <_ZN8touchgfx9DragEventD1Ev>:
 8011ce2:	4770      	bx	lr

08011ce4 <_ZN8touchgfx10ClickEventD1Ev>:
 8011ce4:	4770      	bx	lr

08011ce6 <_ZN8touchgfx10ClickEventD0Ev>:
 8011ce6:	b510      	push	{r4, lr}
 8011ce8:	4604      	mov	r4, r0
 8011cea:	210c      	movs	r1, #12
 8011cec:	f00f fe0e 	bl	802190c <_ZdlPvj>
 8011cf0:	4620      	mov	r0, r4
 8011cf2:	bd10      	pop	{r4, pc}

08011cf4 <_ZN8touchgfx9DragEventD0Ev>:
 8011cf4:	b510      	push	{r4, lr}
 8011cf6:	4604      	mov	r4, r0
 8011cf8:	2110      	movs	r1, #16
 8011cfa:	f00f fe07 	bl	802190c <_ZdlPvj>
 8011cfe:	4620      	mov	r0, r4
 8011d00:	bd10      	pop	{r4, pc}

08011d02 <_ZN8touchgfx12GestureEventD0Ev>:
 8011d02:	b510      	push	{r4, lr}
 8011d04:	4604      	mov	r4, r0
 8011d06:	210c      	movs	r1, #12
 8011d08:	f00f fe00 	bl	802190c <_ZdlPvj>
 8011d0c:	4620      	mov	r0, r4
 8011d0e:	bd10      	pop	{r4, pc}

08011d10 <_ZN8touchgfx6ScreenD0Ev>:
 8011d10:	b510      	push	{r4, lr}
 8011d12:	4604      	mov	r4, r0
 8011d14:	213c      	movs	r1, #60	@ 0x3c
 8011d16:	f00f fdf9 	bl	802190c <_ZdlPvj>
 8011d1a:	4620      	mov	r0, r4
 8011d1c:	bd10      	pop	{r4, pc}
	...

08011d20 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011d20:	b530      	push	{r4, r5, lr}
 8011d22:	460d      	mov	r5, r1
 8011d24:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011d26:	b087      	sub	sp, #28
 8011d28:	4604      	mov	r4, r0
 8011d2a:	b301      	cbz	r1, 8011d6e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8011d2c:	a801      	add	r0, sp, #4
 8011d2e:	f7ff fe5f 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011d32:	892a      	ldrh	r2, [r5, #8]
 8011d34:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011d38:	7928      	ldrb	r0, [r5, #4]
 8011d3a:	1ad2      	subs	r2, r2, r3
 8011d3c:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8011d3e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011d42:	441a      	add	r2, r3
 8011d44:	896b      	ldrh	r3, [r5, #10]
 8011d46:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8011d4a:	f88d 0010 	strb.w	r0, [sp, #16]
 8011d4e:	1b5b      	subs	r3, r3, r5
 8011d50:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8011d52:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011d54:	442b      	add	r3, r5
 8011d56:	4d07      	ldr	r5, [pc, #28]	@ (8011d74 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011d58:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011d5c:	a903      	add	r1, sp, #12
 8011d5e:	9503      	str	r5, [sp, #12]
 8011d60:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011d64:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011d68:	6803      	ldr	r3, [r0, #0]
 8011d6a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011d6c:	4798      	blx	r3
 8011d6e:	b007      	add	sp, #28
 8011d70:	bd30      	pop	{r4, r5, pc}
 8011d72:	bf00      	nop
 8011d74:	08025738 	.word	0x08025738

08011d78 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011d78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011d7c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8011d7e:	b08a      	sub	sp, #40	@ 0x28
 8011d80:	4604      	mov	r4, r0
 8011d82:	460d      	mov	r5, r1
 8011d84:	b113      	cbz	r3, 8011d8c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8011d86:	790b      	ldrb	r3, [r1, #4]
 8011d88:	2b00      	cmp	r3, #0
 8011d8a:	d044      	beq.n	8011e16 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011d8c:	f104 0804 	add.w	r8, r4, #4
 8011d90:	a803      	add	r0, sp, #12
 8011d92:	4641      	mov	r1, r8
 8011d94:	f7ff fe2c 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011d98:	792b      	ldrb	r3, [r5, #4]
 8011d9a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8011d9e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8011da2:	b983      	cbnz	r3, 8011dc6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8011da4:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8011da8:	892a      	ldrh	r2, [r5, #8]
 8011daa:	88e9      	ldrh	r1, [r5, #6]
 8011dac:	4640      	mov	r0, r8
 8011dae:	1b92      	subs	r2, r2, r6
 8011db0:	9301      	str	r3, [sp, #4]
 8011db2:	1bc9      	subs	r1, r1, r7
 8011db4:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8011db8:	b212      	sxth	r2, r2
 8011dba:	9300      	str	r3, [sp, #0]
 8011dbc:	b209      	sxth	r1, r1
 8011dbe:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8011dc2:	f7f8 f953 	bl	800a06c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8011dc6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011dc8:	b329      	cbz	r1, 8011e16 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011dca:	a805      	add	r0, sp, #20
 8011dcc:	f7ff fe10 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011dd0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011dd4:	792b      	ldrb	r3, [r5, #4]
 8011dd6:	a907      	add	r1, sp, #28
 8011dd8:	1abf      	subs	r7, r7, r2
 8011dda:	88ea      	ldrh	r2, [r5, #6]
 8011ddc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011dde:	4417      	add	r7, r2
 8011de0:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8011de2:	f88d 3020 	strb.w	r3, [sp, #32]
 8011de6:	4417      	add	r7, r2
 8011de8:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8011dec:	1ab6      	subs	r6, r6, r2
 8011dee:	892a      	ldrh	r2, [r5, #8]
 8011df0:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8011df4:	4416      	add	r6, r2
 8011df6:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8011df8:	4416      	add	r6, r2
 8011dfa:	4a08      	ldr	r2, [pc, #32]	@ (8011e1c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8011dfc:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8011e00:	2600      	movs	r6, #0
 8011e02:	9207      	str	r2, [sp, #28]
 8011e04:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8011e08:	6803      	ldr	r3, [r0, #0]
 8011e0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011e0c:	4798      	blx	r3
 8011e0e:	792b      	ldrb	r3, [r5, #4]
 8011e10:	b10b      	cbz	r3, 8011e16 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011e12:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8011e16:	b00a      	add	sp, #40	@ 0x28
 8011e18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011e1c:	08025710 	.word	0x08025710

08011e20 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011e20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e24:	460c      	mov	r4, r1
 8011e26:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011e28:	b088      	sub	sp, #32
 8011e2a:	4605      	mov	r5, r0
 8011e2c:	2900      	cmp	r1, #0
 8011e2e:	d06d      	beq.n	8011f0c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8011e30:	4668      	mov	r0, sp
 8011e32:	f7ff fddd 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011e36:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8011e38:	88e3      	ldrh	r3, [r4, #6]
 8011e3a:	f9bd 8000 	ldrsh.w	r8, [sp]
 8011e3e:	440b      	add	r3, r1
 8011e40:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8011e44:	b21b      	sxth	r3, r3
 8011e46:	4543      	cmp	r3, r8
 8011e48:	db31      	blt.n	8011eae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011e4a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8011e4e:	44c4      	add	ip, r8
 8011e50:	fa0f fc8c 	sxth.w	ip, ip
 8011e54:	4563      	cmp	r3, ip
 8011e56:	da2a      	bge.n	8011eae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011e58:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8011e5a:	8926      	ldrh	r6, [r4, #8]
 8011e5c:	4416      	add	r6, r2
 8011e5e:	b236      	sxth	r6, r6
 8011e60:	42be      	cmp	r6, r7
 8011e62:	db24      	blt.n	8011eae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011e64:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011e68:	4438      	add	r0, r7
 8011e6a:	b200      	sxth	r0, r0
 8011e6c:	4286      	cmp	r6, r0
 8011e6e:	da1e      	bge.n	8011eae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011e70:	8963      	ldrh	r3, [r4, #10]
 8011e72:	4419      	add	r1, r3
 8011e74:	b209      	sxth	r1, r1
 8011e76:	4541      	cmp	r1, r8
 8011e78:	db08      	blt.n	8011e8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011e7a:	4561      	cmp	r1, ip
 8011e7c:	da06      	bge.n	8011e8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011e7e:	89a3      	ldrh	r3, [r4, #12]
 8011e80:	441a      	add	r2, r3
 8011e82:	b212      	sxth	r2, r2
 8011e84:	42ba      	cmp	r2, r7
 8011e86:	db01      	blt.n	8011e8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011e88:	4282      	cmp	r2, r0
 8011e8a:	db10      	blt.n	8011eae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011e8c:	4b21      	ldr	r3, [pc, #132]	@ (8011f14 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8011e8e:	a904      	add	r1, sp, #16
 8011e90:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011e92:	9304      	str	r3, [sp, #16]
 8011e94:	2302      	movs	r3, #2
 8011e96:	f88d 3014 	strb.w	r3, [sp, #20]
 8011e9a:	2300      	movs	r3, #0
 8011e9c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011ea0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011ea4:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011ea8:	6803      	ldr	r3, [r0, #0]
 8011eaa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011eac:	4798      	blx	r3
 8011eae:	1d29      	adds	r1, r5, #4
 8011eb0:	a802      	add	r0, sp, #8
 8011eb2:	f7ff fd9d 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011eb6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011eba:	88e0      	ldrh	r0, [r4, #6]
 8011ebc:	eba3 0808 	sub.w	r8, r3, r8
 8011ec0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011ec4:	7921      	ldrb	r1, [r4, #4]
 8011ec6:	fa1f f888 	uxth.w	r8, r8
 8011eca:	1bdf      	subs	r7, r3, r7
 8011ecc:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8011ed0:	b2bb      	uxth	r3, r7
 8011ed2:	4440      	add	r0, r8
 8011ed4:	8922      	ldrh	r2, [r4, #8]
 8011ed6:	8967      	ldrh	r7, [r4, #10]
 8011ed8:	4460      	add	r0, ip
 8011eda:	89a4      	ldrh	r4, [r4, #12]
 8011edc:	441a      	add	r2, r3
 8011ede:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8011ee0:	44b8      	add	r8, r7
 8011ee2:	4423      	add	r3, r4
 8011ee4:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011ee8:	4432      	add	r2, r6
 8011eea:	44e0      	add	r8, ip
 8011eec:	4433      	add	r3, r6
 8011eee:	4c0a      	ldr	r4, [pc, #40]	@ (8011f18 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011ef0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011ef2:	f88d 1014 	strb.w	r1, [sp, #20]
 8011ef6:	a904      	add	r1, sp, #16
 8011ef8:	9404      	str	r4, [sp, #16]
 8011efa:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011efe:	f8ad 801a 	strh.w	r8, [sp, #26]
 8011f02:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011f06:	6803      	ldr	r3, [r0, #0]
 8011f08:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011f0a:	4798      	blx	r3
 8011f0c:	b008      	add	sp, #32
 8011f0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011f12:	bf00      	nop
 8011f14:	08025710 	.word	0x08025710
 8011f18:	08025724 	.word	0x08025724

08011f1c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011f1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011f1e:	4604      	mov	r4, r0
 8011f20:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011f24:	3201      	adds	r2, #1
 8011f26:	d112      	bne.n	8011f4e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011f28:	2500      	movs	r5, #0
 8011f2a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011f2e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011f32:	6803      	ldr	r3, [r0, #0]
 8011f34:	9500      	str	r5, [sp, #0]
 8011f36:	466d      	mov	r5, sp
 8011f38:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011f3c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011f40:	4629      	mov	r1, r5
 8011f42:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011f44:	4798      	blx	r3
 8011f46:	e895 0003 	ldmia.w	r5, {r0, r1}
 8011f4a:	e884 0003 	stmia.w	r4, {r0, r1}
 8011f4e:	4620      	mov	r0, r4
 8011f50:	b003      	add	sp, #12
 8011f52:	bd30      	pop	{r4, r5, pc}

08011f54 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011f54:	b513      	push	{r0, r1, r4, lr}
 8011f56:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8011f5a:	4604      	mov	r4, r0
 8011f5c:	3301      	adds	r3, #1
 8011f5e:	d109      	bne.n	8011f74 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011f60:	4601      	mov	r1, r0
 8011f62:	4668      	mov	r0, sp
 8011f64:	f7ff fd44 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011f68:	f8bd 3000 	ldrh.w	r3, [sp]
 8011f6c:	8423      	strh	r3, [r4, #32]
 8011f6e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011f72:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011f74:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8011f78:	b002      	add	sp, #8
 8011f7a:	bd10      	pop	{r4, pc}

08011f7c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8011f7c:	b513      	push	{r0, r1, r4, lr}
 8011f7e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8011f82:	4604      	mov	r4, r0
 8011f84:	3301      	adds	r3, #1
 8011f86:	d109      	bne.n	8011f9c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011f88:	4601      	mov	r1, r0
 8011f8a:	4668      	mov	r0, sp
 8011f8c:	f7ff fd30 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011f90:	f8bd 3000 	ldrh.w	r3, [sp]
 8011f94:	8423      	strh	r3, [r4, #32]
 8011f96:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011f9a:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011f9c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8011fa0:	b002      	add	sp, #8
 8011fa2:	bd10      	pop	{r4, pc}

08011fa4 <_ZN8touchgfx6ScreenC1Ev>:
 8011fa4:	b570      	push	{r4, r5, r6, lr}
 8011fa6:	4b17      	ldr	r3, [pc, #92]	@ (8012004 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8011fa8:	4605      	mov	r5, r0
 8011faa:	4a17      	ldr	r2, [pc, #92]	@ (8012008 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011fac:	2101      	movs	r1, #1
 8011fae:	f845 3b04 	str.w	r3, [r5], #4
 8011fb2:	2300      	movs	r3, #0
 8011fb4:	6042      	str	r2, [r0, #4]
 8011fb6:	4604      	mov	r4, r0
 8011fb8:	8103      	strh	r3, [r0, #8]
 8011fba:	8143      	strh	r3, [r0, #10]
 8011fbc:	8183      	strh	r3, [r0, #12]
 8011fbe:	81c3      	strh	r3, [r0, #14]
 8011fc0:	8203      	strh	r3, [r0, #16]
 8011fc2:	8243      	strh	r3, [r0, #18]
 8011fc4:	8283      	strh	r3, [r0, #20]
 8011fc6:	82c3      	strh	r3, [r0, #22]
 8011fc8:	6203      	str	r3, [r0, #32]
 8011fca:	8483      	strh	r3, [r0, #36]	@ 0x24
 8011fcc:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8011fce:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8011fd2:	6343      	str	r3, [r0, #52]	@ 0x34
 8011fd4:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8011fd8:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8011fdc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8011fe0:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8011fe4:	4b09      	ldr	r3, [pc, #36]	@ (801200c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8011fe6:	4628      	mov	r0, r5
 8011fe8:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011fec:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8011fee:	4a08      	ldr	r2, [pc, #32]	@ (8012010 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8011ff0:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011ff4:	4798      	blx	r3
 8011ff6:	6863      	ldr	r3, [r4, #4]
 8011ff8:	4628      	mov	r0, r5
 8011ffa:	4631      	mov	r1, r6
 8011ffc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011ffe:	4798      	blx	r3
 8012000:	4620      	mov	r0, r4
 8012002:	bd70      	pop	{r4, r5, r6, pc}
 8012004:	0802574c 	.word	0x0802574c
 8012008:	08024c38 	.word	0x08024c38
 801200c:	20016c7e 	.word	0x20016c7e
 8012010:	20016c7c 	.word	0x20016c7c

08012014 <_ZN8touchgfx6Screen4drawEv>:
 8012014:	4b09      	ldr	r3, [pc, #36]	@ (801203c <_ZN8touchgfx6Screen4drawEv+0x28>)
 8012016:	b507      	push	{r0, r1, r2, lr}
 8012018:	f9b3 2000 	ldrsh.w	r2, [r3]
 801201c:	2100      	movs	r1, #0
 801201e:	4b08      	ldr	r3, [pc, #32]	@ (8012040 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8012020:	9100      	str	r1, [sp, #0]
 8012022:	4669      	mov	r1, sp
 8012024:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012028:	f8ad 2004 	strh.w	r2, [sp, #4]
 801202c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012030:	6803      	ldr	r3, [r0, #0]
 8012032:	689b      	ldr	r3, [r3, #8]
 8012034:	4798      	blx	r3
 8012036:	b003      	add	sp, #12
 8012038:	f85d fb04 	ldr.w	pc, [sp], #4
 801203c:	20016c7c 	.word	0x20016c7c
 8012040:	20016c7e 	.word	0x20016c7e

08012044 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012048:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801204c:	b089      	sub	sp, #36	@ 0x24
 801204e:	4680      	mov	r8, r0
 8012050:	460c      	mov	r4, r1
 8012052:	2b00      	cmp	r3, #0
 8012054:	4615      	mov	r5, r2
 8012056:	dd0e      	ble.n	8012076 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012058:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801205c:	2b00      	cmp	r3, #0
 801205e:	dd0a      	ble.n	8012076 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012060:	4628      	mov	r0, r5
 8012062:	f7ff ff5b 	bl	8011f1c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012066:	4621      	mov	r1, r4
 8012068:	f7fe fb15 	bl	8010696 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801206c:	69eb      	ldr	r3, [r5, #28]
 801206e:	b928      	cbnz	r0, 801207c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8012070:	461d      	mov	r5, r3
 8012072:	2b00      	cmp	r3, #0
 8012074:	d1f4      	bne.n	8012060 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012076:	b009      	add	sp, #36	@ 0x24
 8012078:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801207c:	ae04      	add	r6, sp, #16
 801207e:	2b00      	cmp	r3, #0
 8012080:	f000 80b5 	beq.w	80121ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012084:	682b      	ldr	r3, [r5, #0]
 8012086:	4629      	mov	r1, r5
 8012088:	a802      	add	r0, sp, #8
 801208a:	68db      	ldr	r3, [r3, #12]
 801208c:	4798      	blx	r3
 801208e:	4628      	mov	r0, r5
 8012090:	f7ff ff60 	bl	8011f54 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012094:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012098:	4407      	add	r7, r0
 801209a:	4628      	mov	r0, r5
 801209c:	f7ff ff6e 	bl	8011f7c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80120a0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80120a4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80120a8:	b23f      	sxth	r7, r7
 80120aa:	4418      	add	r0, r3
 80120ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80120b0:	4621      	mov	r1, r4
 80120b2:	f8ad 2014 	strh.w	r2, [sp, #20]
 80120b6:	f8ad 0012 	strh.w	r0, [sp, #18]
 80120ba:	4630      	mov	r0, r6
 80120bc:	f8ad 3016 	strh.w	r3, [sp, #22]
 80120c0:	f8ad 7010 	strh.w	r7, [sp, #16]
 80120c4:	f7f8 f8b4 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 80120c8:	4628      	mov	r0, r5
 80120ca:	f7ff ff27 	bl	8011f1c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80120ce:	ab06      	add	r3, sp, #24
 80120d0:	4602      	mov	r2, r0
 80120d2:	e896 0003 	ldmia.w	r6, {r0, r1}
 80120d6:	e883 0003 	stmia.w	r3, {r0, r1}
 80120da:	4611      	mov	r1, r2
 80120dc:	4618      	mov	r0, r3
 80120de:	f7f8 f8a7 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 80120e2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80120e6:	f9b4 1000 	ldrsh.w	r1, [r4]
 80120ea:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80120ee:	4299      	cmp	r1, r3
 80120f0:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80120f4:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80120f8:	d10b      	bne.n	8012112 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80120fa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80120fe:	4552      	cmp	r2, sl
 8012100:	d107      	bne.n	8012112 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012102:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012106:	455a      	cmp	r2, fp
 8012108:	d103      	bne.n	8012112 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801210a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801210e:	454a      	cmp	r2, r9
 8012110:	d06d      	beq.n	80121ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012112:	f1bb 0f00 	cmp.w	fp, #0
 8012116:	dd65      	ble.n	80121e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012118:	f1b9 0f00 	cmp.w	r9, #0
 801211c:	dd62      	ble.n	80121e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801211e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012122:	fa1f f08a 	uxth.w	r0, sl
 8012126:	4552      	cmp	r2, sl
 8012128:	9000      	str	r0, [sp, #0]
 801212a:	da12      	bge.n	8012152 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801212c:	9301      	str	r3, [sp, #4]
 801212e:	9b00      	ldr	r3, [sp, #0]
 8012130:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012134:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012138:	1a9a      	subs	r2, r3, r2
 801213a:	f8ad 1010 	strh.w	r1, [sp, #16]
 801213e:	4631      	mov	r1, r6
 8012140:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012144:	4640      	mov	r0, r8
 8012146:	f8ad 2016 	strh.w	r2, [sp, #22]
 801214a:	69ea      	ldr	r2, [r5, #28]
 801214c:	f7ff ff7a 	bl	8012044 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012150:	9b01      	ldr	r3, [sp, #4]
 8012152:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012156:	b29f      	uxth	r7, r3
 8012158:	429a      	cmp	r2, r3
 801215a:	da0d      	bge.n	8012178 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801215c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012160:	1aba      	subs	r2, r7, r2
 8012162:	f8ad a012 	strh.w	sl, [sp, #18]
 8012166:	4631      	mov	r1, r6
 8012168:	f8ad 2014 	strh.w	r2, [sp, #20]
 801216c:	4640      	mov	r0, r8
 801216e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8012172:	69ea      	ldr	r2, [r5, #28]
 8012174:	f7ff ff66 	bl	8012044 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012178:	8822      	ldrh	r2, [r4, #0]
 801217a:	445f      	add	r7, fp
 801217c:	88a3      	ldrh	r3, [r4, #4]
 801217e:	b2bf      	uxth	r7, r7
 8012180:	4413      	add	r3, r2
 8012182:	b23a      	sxth	r2, r7
 8012184:	b29b      	uxth	r3, r3
 8012186:	b219      	sxth	r1, r3
 8012188:	4291      	cmp	r1, r2
 801218a:	dd0d      	ble.n	80121a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801218c:	1bdb      	subs	r3, r3, r7
 801218e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012192:	f8ad a012 	strh.w	sl, [sp, #18]
 8012196:	4631      	mov	r1, r6
 8012198:	f8ad 3014 	strh.w	r3, [sp, #20]
 801219c:	4640      	mov	r0, r8
 801219e:	f8ad 9016 	strh.w	r9, [sp, #22]
 80121a2:	69ea      	ldr	r2, [r5, #28]
 80121a4:	f7ff ff4e 	bl	8012044 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80121a8:	88e2      	ldrh	r2, [r4, #6]
 80121aa:	8863      	ldrh	r3, [r4, #2]
 80121ac:	4413      	add	r3, r2
 80121ae:	9a00      	ldr	r2, [sp, #0]
 80121b0:	444a      	add	r2, r9
 80121b2:	b29b      	uxth	r3, r3
 80121b4:	fa1f f982 	uxth.w	r9, r2
 80121b8:	b219      	sxth	r1, r3
 80121ba:	fa0f f289 	sxth.w	r2, r9
 80121be:	428a      	cmp	r2, r1
 80121c0:	da15      	bge.n	80121ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80121c2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80121c6:	eba3 0309 	sub.w	r3, r3, r9
 80121ca:	f9b4 0000 	ldrsh.w	r0, [r4]
 80121ce:	f8ad 1014 	strh.w	r1, [sp, #20]
 80121d2:	4631      	mov	r1, r6
 80121d4:	f8ad 0010 	strh.w	r0, [sp, #16]
 80121d8:	f8ad 2012 	strh.w	r2, [sp, #18]
 80121dc:	f8ad 3016 	strh.w	r3, [sp, #22]
 80121e0:	69ea      	ldr	r2, [r5, #28]
 80121e2:	e001      	b.n	80121e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80121e4:	69ea      	ldr	r2, [r5, #28]
 80121e6:	4621      	mov	r1, r4
 80121e8:	4640      	mov	r0, r8
 80121ea:	f7ff ff2b 	bl	8012044 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80121ee:	4628      	mov	r0, r5
 80121f0:	f7ff fe94 	bl	8011f1c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80121f4:	6861      	ldr	r1, [r4, #4]
 80121f6:	4602      	mov	r2, r0
 80121f8:	4633      	mov	r3, r6
 80121fa:	6820      	ldr	r0, [r4, #0]
 80121fc:	c303      	stmia	r3!, {r0, r1}
 80121fe:	4611      	mov	r1, r2
 8012200:	4630      	mov	r0, r6
 8012202:	f7f8 f815 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 8012206:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801220a:	2b00      	cmp	r3, #0
 801220c:	f77f af33 	ble.w	8012076 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012210:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012214:	2b00      	cmp	r3, #0
 8012216:	f77f af2e 	ble.w	8012076 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801221a:	4628      	mov	r0, r5
 801221c:	f7ff fe9a 	bl	8011f54 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012220:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012224:	1a18      	subs	r0, r3, r0
 8012226:	f8ad 0010 	strh.w	r0, [sp, #16]
 801222a:	4628      	mov	r0, r5
 801222c:	f7ff fea6 	bl	8011f7c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012230:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012234:	4631      	mov	r1, r6
 8012236:	1a18      	subs	r0, r3, r0
 8012238:	f8ad 0012 	strh.w	r0, [sp, #18]
 801223c:	4628      	mov	r0, r5
 801223e:	682b      	ldr	r3, [r5, #0]
 8012240:	689b      	ldr	r3, [r3, #8]
 8012242:	4798      	blx	r3
 8012244:	e717      	b.n	8012076 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012246 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012246:	b570      	push	{r4, r5, r6, lr}
 8012248:	1d06      	adds	r6, r0, #4
 801224a:	b086      	sub	sp, #24
 801224c:	460c      	mov	r4, r1
 801224e:	2300      	movs	r3, #0
 8012250:	4631      	mov	r1, r6
 8012252:	4605      	mov	r5, r0
 8012254:	a802      	add	r0, sp, #8
 8012256:	9301      	str	r3, [sp, #4]
 8012258:	f7ff fbca 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801225c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012260:	8822      	ldrh	r2, [r4, #0]
 8012262:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012266:	1ad2      	subs	r2, r2, r3
 8012268:	8863      	ldrh	r3, [r4, #2]
 801226a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801226e:	1a5b      	subs	r3, r3, r1
 8012270:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012274:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012278:	aa01      	add	r2, sp, #4
 801227a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801227e:	4630      	mov	r0, r6
 8012280:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012284:	a904      	add	r1, sp, #16
 8012286:	f8ad 3012 	strh.w	r3, [sp, #18]
 801228a:	f7f8 f8a9 	bl	800a3e0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801228e:	9a01      	ldr	r2, [sp, #4]
 8012290:	b11a      	cbz	r2, 801229a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8012292:	4621      	mov	r1, r4
 8012294:	4628      	mov	r0, r5
 8012296:	f7ff fed5 	bl	8012044 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801229a:	b006      	add	sp, #24
 801229c:	bd70      	pop	{r4, r5, r6, pc}

0801229e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801229e:	4602      	mov	r2, r0
 80122a0:	b530      	push	{r4, r5, lr}
 80122a2:	4604      	mov	r4, r0
 80122a4:	b085      	sub	sp, #20
 80122a6:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80122aa:	460d      	mov	r5, r1
 80122ac:	466b      	mov	r3, sp
 80122ae:	6851      	ldr	r1, [r2, #4]
 80122b0:	c303      	stmia	r3!, {r0, r1}
 80122b2:	4629      	mov	r1, r5
 80122b4:	4668      	mov	r0, sp
 80122b6:	f7f7 ffbb 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 80122ba:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80122be:	b12b      	cbz	r3, 80122cc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80122c0:	4669      	mov	r1, sp
 80122c2:	4620      	mov	r0, r4
 80122c4:	f7ff ffbf 	bl	8012246 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80122c8:	b005      	add	sp, #20
 80122ca:	bd30      	pop	{r4, r5, pc}
 80122cc:	3404      	adds	r4, #4
 80122ce:	a802      	add	r0, sp, #8
 80122d0:	4621      	mov	r1, r4
 80122d2:	f7ff fb8d 	bl	80119f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80122d6:	f8bd 3000 	ldrh.w	r3, [sp]
 80122da:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80122de:	4669      	mov	r1, sp
 80122e0:	4620      	mov	r0, r4
 80122e2:	1a9b      	subs	r3, r3, r2
 80122e4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80122e8:	f8ad 3000 	strh.w	r3, [sp]
 80122ec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80122f0:	1a9b      	subs	r3, r3, r2
 80122f2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80122f6:	f7f8 f83a 	bl	800a36e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80122fa:	e7e5      	b.n	80122c8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080122fc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80122fc:	460b      	mov	r3, r1
 80122fe:	680a      	ldr	r2, [r1, #0]
 8012300:	1d01      	adds	r1, r0, #4
 8012302:	6992      	ldr	r2, [r2, #24]
 8012304:	4618      	mov	r0, r3
 8012306:	4710      	bx	r2

08012308 <_ZN8touchgfx12TextProviderC1Ev>:
 8012308:	b538      	push	{r3, r4, r5, lr}
 801230a:	2500      	movs	r5, #0
 801230c:	2302      	movs	r3, #2
 801230e:	4604      	mov	r4, r0
 8012310:	220e      	movs	r2, #14
 8012312:	7403      	strb	r3, [r0, #16]
 8012314:	4629      	mov	r1, r5
 8012316:	6145      	str	r5, [r0, #20]
 8012318:	7605      	strb	r5, [r0, #24]
 801231a:	83c5      	strh	r5, [r0, #30]
 801231c:	8405      	strh	r5, [r0, #32]
 801231e:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8012320:	8705      	strh	r5, [r0, #56]	@ 0x38
 8012322:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8012324:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8012328:	e9c0 5500 	strd	r5, r5, [r0]
 801232c:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8012330:	304c      	adds	r0, #76	@ 0x4c
 8012332:	f010 faf1 	bl	8022918 <memset>
 8012336:	2301      	movs	r3, #1
 8012338:	4620      	mov	r0, r4
 801233a:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 801233e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8012342:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8012346:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 801234a:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 801234e:	f7f1 fae5 	bl	800391c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012352:	4620      	mov	r0, r4
 8012354:	bd38      	pop	{r3, r4, r5, pc}

08012356 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012356:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012358:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801235c:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 801235e:	fab0 f080 	clz	r0, r0
 8012362:	0940      	lsrs	r0, r0, #5
 8012364:	4770      	bx	lr

08012366 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012366:	b530      	push	{r4, r5, lr}
 8012368:	2500      	movs	r5, #0
 801236a:	2401      	movs	r4, #1
 801236c:	6843      	ldr	r3, [r0, #4]
 801236e:	b913      	cbnz	r3, 8012376 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012370:	6803      	ldr	r3, [r0, #0]
 8012372:	b313      	cbz	r3, 80123ba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012374:	6043      	str	r3, [r0, #4]
 8012376:	7e03      	ldrb	r3, [r0, #24]
 8012378:	b143      	cbz	r3, 801238c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801237a:	6943      	ldr	r3, [r0, #20]
 801237c:	b12b      	cbz	r3, 801238a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801237e:	881a      	ldrh	r2, [r3, #0]
 8012380:	b11a      	cbz	r2, 801238a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012382:	1c9a      	adds	r2, r3, #2
 8012384:	6142      	str	r2, [r0, #20]
 8012386:	8818      	ldrh	r0, [r3, #0]
 8012388:	bd30      	pop	{r4, r5, pc}
 801238a:	7605      	strb	r5, [r0, #24]
 801238c:	6843      	ldr	r3, [r0, #4]
 801238e:	8819      	ldrh	r1, [r3, #0]
 8012390:	b199      	cbz	r1, 80123ba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012392:	1c9a      	adds	r2, r3, #2
 8012394:	2902      	cmp	r1, #2
 8012396:	6042      	str	r2, [r0, #4]
 8012398:	d1f5      	bne.n	8012386 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801239a:	7c03      	ldrb	r3, [r0, #16]
 801239c:	2b01      	cmp	r3, #1
 801239e:	d8e5      	bhi.n	801236c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80123a0:	1c5a      	adds	r2, r3, #1
 80123a2:	3302      	adds	r3, #2
 80123a4:	7402      	strb	r2, [r0, #16]
 80123a6:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80123aa:	6143      	str	r3, [r0, #20]
 80123ac:	2b00      	cmp	r3, #0
 80123ae:	d0dd      	beq.n	801236c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80123b0:	881b      	ldrh	r3, [r3, #0]
 80123b2:	2b00      	cmp	r3, #0
 80123b4:	d0da      	beq.n	801236c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80123b6:	7604      	strb	r4, [r0, #24]
 80123b8:	e7d8      	b.n	801236c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80123ba:	2000      	movs	r0, #0
 80123bc:	e7e4      	b.n	8012388 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080123be <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80123be:	6001      	str	r1, [r0, #0]
 80123c0:	2100      	movs	r1, #0
 80123c2:	b430      	push	{r4, r5}
 80123c4:	6041      	str	r1, [r0, #4]
 80123c6:	6815      	ldr	r5, [r2, #0]
 80123c8:	6085      	str	r5, [r0, #8]
 80123ca:	6852      	ldr	r2, [r2, #4]
 80123cc:	6443      	str	r3, [r0, #68]	@ 0x44
 80123ce:	9b02      	ldr	r3, [sp, #8]
 80123d0:	60c2      	str	r2, [r0, #12]
 80123d2:	7401      	strb	r1, [r0, #16]
 80123d4:	6141      	str	r1, [r0, #20]
 80123d6:	7601      	strb	r1, [r0, #24]
 80123d8:	8701      	strh	r1, [r0, #56]	@ 0x38
 80123da:	8401      	strh	r1, [r0, #32]
 80123dc:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 80123e0:	6483      	str	r3, [r0, #72]	@ 0x48
 80123e2:	bc30      	pop	{r4, r5}
 80123e4:	f7f1 ba9a 	b.w	800391c <_ZN8touchgfx12TextProvider18initializeInternalEv>

080123e8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80123e8:	b408      	push	{r3}
 80123ea:	b510      	push	{r4, lr}
 80123ec:	b085      	sub	sp, #20
 80123ee:	ac07      	add	r4, sp, #28
 80123f0:	f854 3b04 	ldr.w	r3, [r4], #4
 80123f4:	9300      	str	r3, [sp, #0]
 80123f6:	4613      	mov	r3, r2
 80123f8:	4622      	mov	r2, r4
 80123fa:	9403      	str	r4, [sp, #12]
 80123fc:	f7ff ffdf 	bl	80123be <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012400:	b005      	add	sp, #20
 8012402:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012406:	b001      	add	sp, #4
 8012408:	4770      	bx	lr

0801240a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801240a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801240c:	4605      	mov	r5, r0
 801240e:	4608      	mov	r0, r1
 8012410:	b1f1      	cbz	r1, 8012450 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8012412:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8012416:	460b      	mov	r3, r1
 8012418:	f101 0708 	add.w	r7, r1, #8
 801241c:	4622      	mov	r2, r4
 801241e:	6818      	ldr	r0, [r3, #0]
 8012420:	3308      	adds	r3, #8
 8012422:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8012426:	4626      	mov	r6, r4
 8012428:	42bb      	cmp	r3, r7
 801242a:	c603      	stmia	r6!, {r0, r1}
 801242c:	4634      	mov	r4, r6
 801242e:	d1f6      	bne.n	801241e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012430:	6818      	ldr	r0, [r3, #0]
 8012432:	6030      	str	r0, [r6, #0]
 8012434:	4610      	mov	r0, r2
 8012436:	889b      	ldrh	r3, [r3, #4]
 8012438:	80b3      	strh	r3, [r6, #4]
 801243a:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 801243e:	015b      	lsls	r3, r3, #5
 8012440:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8012444:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8012448:	430b      	orrs	r3, r1
 801244a:	425b      	negs	r3, r3
 801244c:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8012450:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012452 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012452:	b538      	push	{r3, r4, r5, lr}
 8012454:	460c      	mov	r4, r1
 8012456:	6811      	ldr	r1, [r2, #0]
 8012458:	4610      	mov	r0, r2
 801245a:	68cd      	ldr	r5, [r1, #12]
 801245c:	4619      	mov	r1, r3
 801245e:	47a8      	blx	r5
 8012460:	2800      	cmp	r0, #0
 8012462:	bf08      	it	eq
 8012464:	4620      	moveq	r0, r4
 8012466:	bd38      	pop	{r3, r4, r5, pc}

08012468 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012468:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801246a:	4604      	mov	r4, r0
 801246c:	4615      	mov	r5, r2
 801246e:	4608      	mov	r0, r1
 8012470:	b93a      	cbnz	r2, 8012482 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8012472:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 8012476:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 801247a:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 801247e:	4628      	mov	r0, r5
 8012480:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012482:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8012486:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 801248a:	8893      	ldrh	r3, [r2, #4]
 801248c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8012490:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8012494:	79ee      	ldrb	r6, [r5, #7]
 8012496:	4316      	orrs	r6, r2
 8012498:	19da      	adds	r2, r3, r7
 801249a:	b291      	uxth	r1, r2
 801249c:	b2b7      	uxth	r7, r6
 801249e:	291d      	cmp	r1, #29
 80124a0:	d87b      	bhi.n	801259a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 80124a2:	2201      	movs	r2, #1
 80124a4:	10f6      	asrs	r6, r6, #3
 80124a6:	408a      	lsls	r2, r1
 80124a8:	4974      	ldr	r1, [pc, #464]	@ (801267c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80124aa:	420a      	tst	r2, r1
 80124ac:	d12e      	bne.n	801250c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80124ae:	f412 7f60 	tst.w	r2, #896	@ 0x380
 80124b2:	d072      	beq.n	801259a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 80124b4:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 80124b8:	462b      	mov	r3, r5
 80124ba:	f105 0e08 	add.w	lr, r5, #8
 80124be:	4615      	mov	r5, r2
 80124c0:	6818      	ldr	r0, [r3, #0]
 80124c2:	3308      	adds	r3, #8
 80124c4:	f853 1c04 	ldr.w	r1, [r3, #-4]
 80124c8:	4694      	mov	ip, r2
 80124ca:	4573      	cmp	r3, lr
 80124cc:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80124d0:	4662      	mov	r2, ip
 80124d2:	d1f5      	bne.n	80124c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 80124d4:	6818      	ldr	r0, [r3, #0]
 80124d6:	f8cc 0000 	str.w	r0, [ip]
 80124da:	889b      	ldrh	r3, [r3, #4]
 80124dc:	f8ac 3004 	strh.w	r3, [ip, #4]
 80124e0:	b2b3      	uxth	r3, r6
 80124e2:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 80124e6:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 80124ea:	1aca      	subs	r2, r1, r3
 80124ec:	1bcf      	subs	r7, r1, r7
 80124ee:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 80124f2:	b292      	uxth	r2, r2
 80124f4:	1afb      	subs	r3, r7, r3
 80124f6:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 80124fa:	10d2      	asrs	r2, r2, #3
 80124fc:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8012500:	4302      	orrs	r2, r0
 8012502:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 8012506:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 801250a:	e7b8      	b.n	801247e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801250c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801250e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012512:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8012514:	f640 6333 	movw	r3, #3635	@ 0xe33
 8012518:	4299      	cmp	r1, r3
 801251a:	d110      	bne.n	801253e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801251c:	6803      	ldr	r3, [r0, #0]
 801251e:	68db      	ldr	r3, [r3, #12]
 8012520:	4798      	blx	r3
 8012522:	7b41      	ldrb	r1, [r0, #13]
 8012524:	00cb      	lsls	r3, r1, #3
 8012526:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801252a:	7a03      	ldrb	r3, [r0, #8]
 801252c:	0648      	lsls	r0, r1, #25
 801252e:	ea43 0302 	orr.w	r3, r3, r2
 8012532:	bf44      	itt	mi
 8012534:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012538:	b21b      	sxthmi	r3, r3
 801253a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801253e:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 8012542:	462a      	mov	r2, r5
 8012544:	f105 0c08 	add.w	ip, r5, #8
 8012548:	443b      	add	r3, r7
 801254a:	4433      	add	r3, r6
 801254c:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 8012550:	b29b      	uxth	r3, r3
 8012552:	4635      	mov	r5, r6
 8012554:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8012558:	6810      	ldr	r0, [r2, #0]
 801255a:	3208      	adds	r2, #8
 801255c:	f852 1c04 	ldr.w	r1, [r2, #-4]
 8012560:	4637      	mov	r7, r6
 8012562:	4562      	cmp	r2, ip
 8012564:	c703      	stmia	r7!, {r0, r1}
 8012566:	463e      	mov	r6, r7
 8012568:	d1f6      	bne.n	8012558 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801256a:	6810      	ldr	r0, [r2, #0]
 801256c:	6038      	str	r0, [r7, #0]
 801256e:	8892      	ldrh	r2, [r2, #4]
 8012570:	80ba      	strh	r2, [r7, #4]
 8012572:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8012576:	10db      	asrs	r3, r3, #3
 8012578:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801257c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8012580:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8012584:	4313      	orrs	r3, r2
 8012586:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 801258a:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801258e:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 8012592:	1a9b      	subs	r3, r3, r2
 8012594:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 8012598:	e771      	b.n	801247e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801259a:	f023 0204 	bic.w	r2, r3, #4
 801259e:	f640 611b 	movw	r1, #3611	@ 0xe1b
 80125a2:	428a      	cmp	r2, r1
 80125a4:	d003      	beq.n	80125ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 80125a6:	f640 621d 	movw	r2, #3613	@ 0xe1d
 80125aa:	4293      	cmp	r3, r2
 80125ac:	d120      	bne.n	80125f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 80125ae:	3b01      	subs	r3, #1
 80125b0:	4602      	mov	r2, r0
 80125b2:	4629      	mov	r1, r5
 80125b4:	4620      	mov	r0, r4
 80125b6:	b29b      	uxth	r3, r3
 80125b8:	f7ff ff4b 	bl	8012452 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80125bc:	7b41      	ldrb	r1, [r0, #13]
 80125be:	00cb      	lsls	r3, r1, #3
 80125c0:	0649      	lsls	r1, r1, #25
 80125c2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80125c6:	7a03      	ldrb	r3, [r0, #8]
 80125c8:	ea43 0302 	orr.w	r3, r3, r2
 80125cc:	bf44      	itt	mi
 80125ce:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80125d2:	b21b      	sxthmi	r3, r3
 80125d4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80125d8:	7b6b      	ldrb	r3, [r5, #13]
 80125da:	7aaa      	ldrb	r2, [r5, #10]
 80125dc:	005b      	lsls	r3, r3, #1
 80125de:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80125e2:	4313      	orrs	r3, r2
 80125e4:	115a      	asrs	r2, r3, #5
 80125e6:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80125ea:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 80125ee:	e035      	b.n	801265c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 80125f0:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 80125f4:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 80125f8:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 80125fc:	7a2a      	ldrb	r2, [r5, #8]
 80125fe:	ea42 0201 	orr.w	r2, r2, r1
 8012602:	f640 6109 	movw	r1, #3593	@ 0xe09
 8012606:	bf1c      	itt	ne
 8012608:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 801260c:	b212      	sxthne	r2, r2
 801260e:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 8012612:	f023 0210 	bic.w	r2, r3, #16
 8012616:	428a      	cmp	r2, r1
 8012618:	d003      	beq.n	8012622 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 801261a:	f640 6213 	movw	r2, #3603	@ 0xe13
 801261e:	4293      	cmp	r3, r2
 8012620:	d129      	bne.n	8012676 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8012622:	7b6e      	ldrb	r6, [r5, #13]
 8012624:	4629      	mov	r1, r5
 8012626:	0076      	lsls	r6, r6, #1
 8012628:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801262c:	7aae      	ldrb	r6, [r5, #10]
 801262e:	4316      	orrs	r6, r2
 8012630:	f640 6213 	movw	r2, #3603	@ 0xe13
 8012634:	4293      	cmp	r3, r2
 8012636:	4602      	mov	r2, r0
 8012638:	4620      	mov	r0, r4
 801263a:	bf16      	itet	ne
 801263c:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012640:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8012644:	b29b      	uxthne	r3, r3
 8012646:	f7ff ff04 	bl	8012452 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801264a:	7b43      	ldrb	r3, [r0, #13]
 801264c:	7a82      	ldrb	r2, [r0, #10]
 801264e:	005b      	lsls	r3, r3, #1
 8012650:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012654:	4313      	orrs	r3, r2
 8012656:	1af6      	subs	r6, r6, r3
 8012658:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 801265c:	7b69      	ldrb	r1, [r5, #13]
 801265e:	00cb      	lsls	r3, r1, #3
 8012660:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012664:	7a2b      	ldrb	r3, [r5, #8]
 8012666:	4313      	orrs	r3, r2
 8012668:	064a      	lsls	r2, r1, #25
 801266a:	bf44      	itt	mi
 801266c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012670:	b21b      	sxthmi	r3, r3
 8012672:	1bdb      	subs	r3, r3, r7
 8012674:	e747      	b.n	8012506 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012676:	2300      	movs	r3, #0
 8012678:	e7b7      	b.n	80125ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 801267a:	bf00      	nop
 801267c:	3fc00079 	.word	0x3fc00079

08012680 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012680:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012684:	4604      	mov	r4, r0
 8012686:	b942      	cbnz	r2, 801269a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012688:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801268c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8012690:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8012694:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8012698:	e047      	b.n	801272a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801269a:	7b51      	ldrb	r1, [r2, #13]
 801269c:	8893      	ldrh	r3, [r2, #4]
 801269e:	010d      	lsls	r5, r1, #4
 80126a0:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 80126a4:	79d5      	ldrb	r5, [r2, #7]
 80126a6:	4305      	orrs	r5, r0
 80126a8:	2d04      	cmp	r5, #4
 80126aa:	bfcc      	ite	gt
 80126ac:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80126b0:	f04f 0e01 	movle.w	lr, #1
 80126b4:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 80126b8:	f200 80ab 	bhi.w	8012812 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80126bc:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 80126c0:	4283      	cmp	r3, r0
 80126c2:	d216      	bcs.n	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80126c4:	f240 605b 	movw	r0, #1627	@ 0x65b
 80126c8:	4283      	cmp	r3, r0
 80126ca:	d859      	bhi.n	8012780 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80126cc:	f240 6057 	movw	r0, #1623	@ 0x657
 80126d0:	4283      	cmp	r3, r0
 80126d2:	d20e      	bcs.n	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80126d4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80126d8:	d24a      	bcs.n	8012770 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80126da:	f240 604e 	movw	r0, #1614	@ 0x64e
 80126de:	4283      	cmp	r3, r0
 80126e0:	d207      	bcs.n	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80126e2:	f240 601a 	movw	r0, #1562	@ 0x61a
 80126e6:	4283      	cmp	r3, r0
 80126e8:	d02a      	beq.n	8012740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80126ea:	d821      	bhi.n	8012730 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80126ec:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 80126f0:	d35b      	bcc.n	80127aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80126f2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 80126f6:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80126fa:	f040 80d0 	bne.w	801289e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80126fe:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8012702:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8012706:	f040 80ca 	bne.w	801289e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801270a:	00cb      	lsls	r3, r1, #3
 801270c:	0649      	lsls	r1, r1, #25
 801270e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8012712:	7a13      	ldrb	r3, [r2, #8]
 8012714:	ea43 0300 	orr.w	r3, r3, r0
 8012718:	bf44      	itt	mi
 801271a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801271e:	b21b      	sxthmi	r3, r3
 8012720:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8012724:	1b5d      	subs	r5, r3, r5
 8012726:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801272a:	4610      	mov	r0, r2
 801272c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012730:	f240 604b 	movw	r0, #1611	@ 0x64b
 8012734:	4283      	cmp	r3, r0
 8012736:	d338      	bcc.n	80127aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012738:	f240 604c 	movw	r0, #1612	@ 0x64c
 801273c:	4283      	cmp	r3, r0
 801273e:	d9d8      	bls.n	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012740:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8012744:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8012748:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801274c:	f040 80f3 	bne.w	8012936 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8012750:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012754:	f040 80ef 	bne.w	8012936 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8012758:	00cb      	lsls	r3, r1, #3
 801275a:	064e      	lsls	r6, r1, #25
 801275c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8012760:	7a13      	ldrb	r3, [r2, #8]
 8012762:	ea43 0300 	orr.w	r3, r3, r0
 8012766:	bf44      	itt	mi
 8012768:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801276c:	b21b      	sxthmi	r3, r3
 801276e:	e7d9      	b.n	8012724 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012770:	f240 6054 	movw	r0, #1620	@ 0x654
 8012774:	4283      	cmp	r3, r0
 8012776:	d8e3      	bhi.n	8012740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012778:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 801277c:	d9e0      	bls.n	8012740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801277e:	e7b8      	b.n	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012780:	f240 6074 	movw	r0, #1652	@ 0x674
 8012784:	4283      	cmp	r3, r0
 8012786:	d0b4      	beq.n	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012788:	d82d      	bhi.n	80127e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801278a:	f240 605e 	movw	r0, #1630	@ 0x65e
 801278e:	4283      	cmp	r3, r0
 8012790:	d804      	bhi.n	801279c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8012792:	f240 605d 	movw	r0, #1629	@ 0x65d
 8012796:	4283      	cmp	r3, r0
 8012798:	d3d2      	bcc.n	8012740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801279a:	e7aa      	b.n	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801279c:	f240 605f 	movw	r0, #1631	@ 0x65f
 80127a0:	4283      	cmp	r3, r0
 80127a2:	d0cd      	beq.n	8012740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80127a4:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 80127a8:	d0a3      	beq.n	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80127aa:	00cb      	lsls	r3, r1, #3
 80127ac:	0649      	lsls	r1, r1, #25
 80127ae:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80127b2:	7a13      	ldrb	r3, [r2, #8]
 80127b4:	ea43 0300 	orr.w	r3, r3, r0
 80127b8:	bf44      	itt	mi
 80127ba:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80127be:	b21b      	sxthmi	r3, r3
 80127c0:	1b5d      	subs	r5, r3, r5
 80127c2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80127c6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80127ca:	7b53      	ldrb	r3, [r2, #13]
 80127cc:	015b      	lsls	r3, r3, #5
 80127ce:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80127d2:	7993      	ldrb	r3, [r2, #6]
 80127d4:	430b      	orrs	r3, r1
 80127d6:	2105      	movs	r1, #5
 80127d8:	005b      	lsls	r3, r3, #1
 80127da:	fb93 f3f1 	sdiv	r3, r3, r1
 80127de:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80127e2:	440b      	add	r3, r1
 80127e4:	e756      	b.n	8012694 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80127e6:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 80127ea:	4283      	cmp	r3, r0
 80127ec:	d809      	bhi.n	8012802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80127ee:	f240 60df 	movw	r0, #1759	@ 0x6df
 80127f2:	4283      	cmp	r3, r0
 80127f4:	f4bf af7d 	bcs.w	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80127f8:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 80127fc:	2b05      	cmp	r3, #5
 80127fe:	d8d4      	bhi.n	80127aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012800:	e777      	b.n	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012802:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8012806:	4283      	cmp	r3, r0
 8012808:	d09a      	beq.n	8012740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801280a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801280e:	4283      	cmp	r3, r0
 8012810:	e7ca      	b.n	80127a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012812:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8012816:	d22b      	bcs.n	8012870 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012818:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 801281c:	4283      	cmp	r3, r0
 801281e:	d28f      	bcs.n	8012740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012820:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8012824:	4283      	cmp	r3, r0
 8012826:	d816      	bhi.n	8012856 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012828:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 801282c:	4283      	cmp	r3, r0
 801282e:	f4bf af60 	bcs.w	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012832:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8012836:	4283      	cmp	r3, r0
 8012838:	d80a      	bhi.n	8012850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801283a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801283e:	4283      	cmp	r3, r0
 8012840:	f4bf af57 	bcs.w	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012844:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8012848:	4283      	cmp	r3, r0
 801284a:	f43f af79 	beq.w	8012740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801284e:	e7ac      	b.n	80127aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012850:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8012854:	e7f8      	b.n	8012848 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8012856:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 801285a:	4283      	cmp	r3, r0
 801285c:	d802      	bhi.n	8012864 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801285e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8012862:	e798      	b.n	8012796 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8012864:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8012868:	4283      	cmp	r3, r0
 801286a:	f47f af42 	bne.w	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801286e:	e767      	b.n	8012740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012870:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8012874:	4283      	cmp	r3, r0
 8012876:	f43f af63 	beq.w	8012740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801287a:	d802      	bhi.n	8012882 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801287c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8012880:	e7f2      	b.n	8012868 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8012882:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8012886:	4283      	cmp	r3, r0
 8012888:	d805      	bhi.n	8012896 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801288a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 801288e:	4283      	cmp	r3, r0
 8012890:	f4ff af2f 	bcc.w	80126f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012894:	e754      	b.n	8012740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012896:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 801289a:	4283      	cmp	r3, r0
 801289c:	e7af      	b.n	80127fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801289e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80128a2:	4617      	mov	r7, r2
 80128a4:	f102 0808 	add.w	r8, r2, #8
 80128a8:	4666      	mov	r6, ip
 80128aa:	6838      	ldr	r0, [r7, #0]
 80128ac:	3708      	adds	r7, #8
 80128ae:	f857 1c04 	ldr.w	r1, [r7, #-4]
 80128b2:	46e6      	mov	lr, ip
 80128b4:	4547      	cmp	r7, r8
 80128b6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80128ba:	46f4      	mov	ip, lr
 80128bc:	d1f5      	bne.n	80128aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80128be:	6838      	ldr	r0, [r7, #0]
 80128c0:	f8ce 0000 	str.w	r0, [lr]
 80128c4:	88b9      	ldrh	r1, [r7, #4]
 80128c6:	f8ae 1004 	strh.w	r1, [lr, #4]
 80128ca:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80128ce:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80128d2:	d009      	beq.n	80128e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 80128d4:	7b51      	ldrb	r1, [r2, #13]
 80128d6:	7992      	ldrb	r2, [r2, #6]
 80128d8:	0149      	lsls	r1, r1, #5
 80128da:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80128de:	4311      	orrs	r1, r2
 80128e0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80128e4:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80128e8:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80128ec:	b2ad      	uxth	r5, r5
 80128ee:	d00d      	beq.n	801290c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 80128f0:	442b      	add	r3, r5
 80128f2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80128f6:	b29b      	uxth	r3, r3
 80128f8:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80128fc:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8012900:	10db      	asrs	r3, r3, #3
 8012902:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8012906:	4313      	orrs	r3, r2
 8012908:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801290c:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8012910:	00cb      	lsls	r3, r1, #3
 8012912:	064f      	lsls	r7, r1, #25
 8012914:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012918:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801291c:	ea43 0302 	orr.w	r3, r3, r2
 8012920:	bf44      	itt	mi
 8012922:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012926:	b21b      	sxthmi	r3, r3
 8012928:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801292c:	1b5b      	subs	r3, r3, r5
 801292e:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8012932:	4632      	mov	r2, r6
 8012934:	e6f9      	b.n	801272a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012936:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801293a:	4617      	mov	r7, r2
 801293c:	f102 0908 	add.w	r9, r2, #8
 8012940:	4666      	mov	r6, ip
 8012942:	6838      	ldr	r0, [r7, #0]
 8012944:	3708      	adds	r7, #8
 8012946:	f857 1c04 	ldr.w	r1, [r7, #-4]
 801294a:	46e0      	mov	r8, ip
 801294c:	454f      	cmp	r7, r9
 801294e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8012952:	46c4      	mov	ip, r8
 8012954:	d1f5      	bne.n	8012942 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 8012956:	6838      	ldr	r0, [r7, #0]
 8012958:	f8c8 0000 	str.w	r0, [r8]
 801295c:	88b9      	ldrh	r1, [r7, #4]
 801295e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8012962:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8012966:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801296a:	d009      	beq.n	8012980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 801296c:	7b51      	ldrb	r1, [r2, #13]
 801296e:	7992      	ldrb	r2, [r2, #6]
 8012970:	0149      	lsls	r1, r1, #5
 8012972:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8012976:	4311      	orrs	r1, r2
 8012978:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801297c:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8012980:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012984:	d00e      	beq.n	80129a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8012986:	eba3 030e 	sub.w	r3, r3, lr
 801298a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801298e:	b29b      	uxth	r3, r3
 8012990:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8012994:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8012998:	10db      	asrs	r3, r3, #3
 801299a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801299e:	4313      	orrs	r3, r2
 80129a0:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80129a4:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80129a8:	00cb      	lsls	r3, r1, #3
 80129aa:	0648      	lsls	r0, r1, #25
 80129ac:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80129b0:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80129b4:	ea43 0302 	orr.w	r3, r3, r2
 80129b8:	bf44      	itt	mi
 80129ba:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80129be:	b21b      	sxthmi	r3, r3
 80129c0:	1b5d      	subs	r5, r3, r5
 80129c2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80129c6:	e7b4      	b.n	8012932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

080129c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80129c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80129cc:	461e      	mov	r6, r3
 80129ce:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80129d0:	4604      	mov	r4, r0
 80129d2:	4617      	mov	r7, r2
 80129d4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80129d8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80129dc:	f7f0 ff5c 	bl	8003898 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80129e0:	4605      	mov	r5, r0
 80129e2:	b918      	cbnz	r0, 80129ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80129e4:	6030      	str	r0, [r6, #0]
 80129e6:	4628      	mov	r0, r5
 80129e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80129ec:	683b      	ldr	r3, [r7, #0]
 80129ee:	4601      	mov	r1, r0
 80129f0:	4638      	mov	r0, r7
 80129f2:	68db      	ldr	r3, [r3, #12]
 80129f4:	4798      	blx	r3
 80129f6:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80129fa:	4602      	mov	r2, r0
 80129fc:	6030      	str	r0, [r6, #0]
 80129fe:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8012a02:	d213      	bcs.n	8012a2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012a04:	4643      	mov	r3, r8
 8012a06:	4639      	mov	r1, r7
 8012a08:	4620      	mov	r0, r4
 8012a0a:	f7ff fe39 	bl	8012680 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012a0e:	6030      	str	r0, [r6, #0]
 8012a10:	6833      	ldr	r3, [r6, #0]
 8012a12:	b143      	cbz	r3, 8012a26 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012a14:	7b5a      	ldrb	r2, [r3, #13]
 8012a16:	7a9b      	ldrb	r3, [r3, #10]
 8012a18:	0052      	lsls	r2, r2, #1
 8012a1a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8012a1e:	4313      	orrs	r3, r2
 8012a20:	bf0c      	ite	eq
 8012a22:	2301      	moveq	r3, #1
 8012a24:	2300      	movne	r3, #0
 8012a26:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8012a2a:	e7dc      	b.n	80129e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8012a2c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8012a30:	b29b      	uxth	r3, r3
 8012a32:	2b7f      	cmp	r3, #127	@ 0x7f
 8012a34:	d804      	bhi.n	8012a40 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8012a36:	4639      	mov	r1, r7
 8012a38:	4620      	mov	r0, r4
 8012a3a:	f7ff fd15 	bl	8012468 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012a3e:	e7e6      	b.n	8012a0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8012a40:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8012a44:	2b00      	cmp	r3, #0
 8012a46:	d0e3      	beq.n	8012a10 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012a48:	f640 1302 	movw	r3, #2306	@ 0x902
 8012a4c:	429d      	cmp	r5, r3
 8012a4e:	d1df      	bne.n	8012a10 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012a50:	4601      	mov	r1, r0
 8012a52:	4620      	mov	r0, r4
 8012a54:	f7ff fcd9 	bl	801240a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012a58:	e7d9      	b.n	8012a0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08012a5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8012a5a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012a5e:	461e      	mov	r6, r3
 8012a60:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012a62:	4604      	mov	r4, r0
 8012a64:	4617      	mov	r7, r2
 8012a66:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012a6a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012a6e:	f7f0 ff13 	bl	8003898 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012a72:	4605      	mov	r5, r0
 8012a74:	b918      	cbnz	r0, 8012a7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8012a76:	6030      	str	r0, [r6, #0]
 8012a78:	4628      	mov	r0, r5
 8012a7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012a7e:	683b      	ldr	r3, [r7, #0]
 8012a80:	4601      	mov	r1, r0
 8012a82:	4638      	mov	r0, r7
 8012a84:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8012a88:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8012a8c:	47c8      	blx	r9
 8012a8e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8012a92:	4602      	mov	r2, r0
 8012a94:	6030      	str	r0, [r6, #0]
 8012a96:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8012a9a:	d213      	bcs.n	8012ac4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8012a9c:	4643      	mov	r3, r8
 8012a9e:	4639      	mov	r1, r7
 8012aa0:	4620      	mov	r0, r4
 8012aa2:	f7ff fded 	bl	8012680 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012aa6:	6030      	str	r0, [r6, #0]
 8012aa8:	6833      	ldr	r3, [r6, #0]
 8012aaa:	b143      	cbz	r3, 8012abe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8012aac:	7b5a      	ldrb	r2, [r3, #13]
 8012aae:	7a9b      	ldrb	r3, [r3, #10]
 8012ab0:	0052      	lsls	r2, r2, #1
 8012ab2:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8012ab6:	4313      	orrs	r3, r2
 8012ab8:	bf0c      	ite	eq
 8012aba:	2301      	moveq	r3, #1
 8012abc:	2300      	movne	r3, #0
 8012abe:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8012ac2:	e7d9      	b.n	8012a78 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8012ac4:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8012ac8:	b29b      	uxth	r3, r3
 8012aca:	2b7f      	cmp	r3, #127	@ 0x7f
 8012acc:	d804      	bhi.n	8012ad8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8012ace:	4639      	mov	r1, r7
 8012ad0:	4620      	mov	r0, r4
 8012ad2:	f7ff fcc9 	bl	8012468 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012ad6:	e7e6      	b.n	8012aa6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8012ad8:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8012adc:	2b00      	cmp	r3, #0
 8012ade:	d0e3      	beq.n	8012aa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012ae0:	f640 1302 	movw	r3, #2306	@ 0x902
 8012ae4:	429d      	cmp	r5, r3
 8012ae6:	d1df      	bne.n	8012aa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012ae8:	4601      	mov	r1, r0
 8012aea:	4620      	mov	r0, r4
 8012aec:	f7ff fc8d 	bl	801240a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012af0:	e7d9      	b.n	8012aa6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08012af2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8012af2:	b510      	push	{r4, lr}
 8012af4:	4604      	mov	r4, r0
 8012af6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8012afa:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012afc:	b1e1      	cbz	r1, 8012b38 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8012afe:	2b0a      	cmp	r3, #10
 8012b00:	d02d      	beq.n	8012b5e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8012b02:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8012b04:	3901      	subs	r1, #1
 8012b06:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012b0a:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8012b0c:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8012b10:	1c51      	adds	r1, r2, #1
 8012b12:	b289      	uxth	r1, r1
 8012b14:	2901      	cmp	r1, #1
 8012b16:	bf8a      	itet	hi
 8012b18:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012b1c:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8012b1e:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8012b20:	1c5a      	adds	r2, r3, #1
 8012b22:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012b24:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012b26:	4413      	add	r3, r2
 8012b28:	b29b      	uxth	r3, r3
 8012b2a:	2b09      	cmp	r3, #9
 8012b2c:	bf88      	it	hi
 8012b2e:	3b0a      	subhi	r3, #10
 8012b30:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012b34:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012b36:	e7de      	b.n	8012af6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012b38:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012b3a:	2b0a      	cmp	r3, #10
 8012b3c:	d00f      	beq.n	8012b5e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8012b3e:	4620      	mov	r0, r4
 8012b40:	f7ff fc11 	bl	8012366 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012b44:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012b46:	1c5a      	adds	r2, r3, #1
 8012b48:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012b4a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012b4c:	4413      	add	r3, r2
 8012b4e:	b29b      	uxth	r3, r3
 8012b50:	2b09      	cmp	r3, #9
 8012b52:	bf88      	it	hi
 8012b54:	3b0a      	subhi	r3, #10
 8012b56:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012b5a:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012b5c:	e7ec      	b.n	8012b38 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8012b5e:	bd10      	pop	{r4, pc}

08012b60 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012b60:	b538      	push	{r3, r4, r5, lr}
 8012b62:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012b64:	4604      	mov	r4, r0
 8012b66:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8012b6a:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8012b6c:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8012b6e:	3a01      	subs	r2, #1
 8012b70:	8702      	strh	r2, [r0, #56]	@ 0x38
 8012b72:	1c5a      	adds	r2, r3, #1
 8012b74:	b292      	uxth	r2, r2
 8012b76:	2a09      	cmp	r2, #9
 8012b78:	bf8a      	itet	hi
 8012b7a:	3b09      	subhi	r3, #9
 8012b7c:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8012b7e:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8012b80:	f7ff ffb7 	bl	8012af2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012b84:	8c23      	ldrh	r3, [r4, #32]
 8012b86:	2b01      	cmp	r3, #1
 8012b88:	bf9c      	itt	ls
 8012b8a:	3301      	addls	r3, #1
 8012b8c:	8423      	strhls	r3, [r4, #32]
 8012b8e:	8be3      	ldrh	r3, [r4, #30]
 8012b90:	b90b      	cbnz	r3, 8012b96 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8012b92:	2302      	movs	r3, #2
 8012b94:	83e3      	strh	r3, [r4, #30]
 8012b96:	8be3      	ldrh	r3, [r4, #30]
 8012b98:	4628      	mov	r0, r5
 8012b9a:	3b01      	subs	r3, #1
 8012b9c:	b29b      	uxth	r3, r3
 8012b9e:	83e3      	strh	r3, [r4, #30]
 8012ba0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012ba4:	8365      	strh	r5, [r4, #26]
 8012ba6:	bd38      	pop	{r3, r4, r5, pc}

08012ba8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8012ba8:	428a      	cmp	r2, r1
 8012baa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012bae:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8012bb0:	d932      	bls.n	8012c18 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 8012bb2:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8012bb4:	1a54      	subs	r4, r2, r1
 8012bb6:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8012bba:	19ee      	adds	r6, r5, r7
 8012bbc:	fa1f fe84 	uxth.w	lr, r4
 8012bc0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8012bc4:	3e01      	subs	r6, #1
 8012bc6:	b2b4      	uxth	r4, r6
 8012bc8:	eba4 090e 	sub.w	r9, r4, lr
 8012bcc:	fa1f f989 	uxth.w	r9, r9
 8012bd0:	2c09      	cmp	r4, #9
 8012bd2:	4626      	mov	r6, r4
 8012bd4:	bf88      	it	hi
 8012bd6:	f1a4 060a 	subhi.w	r6, r4, #10
 8012bda:	f1bc 0f00 	cmp.w	ip, #0
 8012bde:	f104 34ff 	add.w	r4, r4, #4294967295
 8012be2:	bf08      	it	eq
 8012be4:	f04f 0c02 	moveq.w	ip, #2
 8012be8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012bec:	b2a4      	uxth	r4, r4
 8012bee:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012bf2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8012bf6:	454c      	cmp	r4, r9
 8012bf8:	fa1f fc8c 	uxth.w	ip, ip
 8012bfc:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012c00:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8012c04:	d1e4      	bne.n	8012bd0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012c06:	eba5 050e 	sub.w	r5, r5, lr
 8012c0a:	eb0e 0408 	add.w	r4, lr, r8
 8012c0e:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8012c12:	8705      	strh	r5, [r0, #56]	@ 0x38
 8012c14:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8012c18:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8012c1a:	250a      	movs	r5, #10
 8012c1c:	1a64      	subs	r4, r4, r1
 8012c1e:	4439      	add	r1, r7
 8012c20:	b289      	uxth	r1, r1
 8012c22:	8704      	strh	r4, [r0, #56]	@ 0x38
 8012c24:	2909      	cmp	r1, #9
 8012c26:	bf88      	it	hi
 8012c28:	390a      	subhi	r1, #10
 8012c2a:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012c2c:	b18a      	cbz	r2, 8012c52 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 8012c2e:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8012c30:	3a01      	subs	r2, #1
 8012c32:	3101      	adds	r1, #1
 8012c34:	b292      	uxth	r2, r2
 8012c36:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8012c3a:	8701      	strh	r1, [r0, #56]	@ 0x38
 8012c3c:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012c3e:	b901      	cbnz	r1, 8012c42 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 8012c40:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8012c42:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012c44:	3901      	subs	r1, #1
 8012c46:	b289      	uxth	r1, r1
 8012c48:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012c4a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8012c4e:	844c      	strh	r4, [r1, #34]	@ 0x22
 8012c50:	e7ec      	b.n	8012c2c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 8012c52:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012c56:	f7ff bf4c 	b.w	8012af2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08012c5a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8012c5a:	b570      	push	{r4, r5, r6, lr}
 8012c5c:	2500      	movs	r5, #0
 8012c5e:	4295      	cmp	r5, r2
 8012c60:	d011      	beq.n	8012c86 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8012c62:	8bc4      	ldrh	r4, [r0, #30]
 8012c64:	f831 6b02 	ldrh.w	r6, [r1], #2
 8012c68:	4414      	add	r4, r2
 8012c6a:	3c01      	subs	r4, #1
 8012c6c:	1b64      	subs	r4, r4, r5
 8012c6e:	b2a4      	uxth	r4, r4
 8012c70:	2c01      	cmp	r4, #1
 8012c72:	bf88      	it	hi
 8012c74:	3c02      	subhi	r4, #2
 8012c76:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012c7a:	8b64      	ldrh	r4, [r4, #26]
 8012c7c:	42b4      	cmp	r4, r6
 8012c7e:	d117      	bne.n	8012cb0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8012c80:	3501      	adds	r5, #1
 8012c82:	b2ad      	uxth	r5, r5
 8012c84:	e7eb      	b.n	8012c5e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8012c86:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012c8a:	2400      	movs	r4, #0
 8012c8c:	4413      	add	r3, r2
 8012c8e:	b2a2      	uxth	r2, r4
 8012c90:	429a      	cmp	r2, r3
 8012c92:	da0f      	bge.n	8012cb4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8012c94:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8012c96:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8012c9a:	3401      	adds	r4, #1
 8012c9c:	4432      	add	r2, r6
 8012c9e:	b292      	uxth	r2, r2
 8012ca0:	2a09      	cmp	r2, #9
 8012ca2:	bf88      	it	hi
 8012ca4:	3a0a      	subhi	r2, #10
 8012ca6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012caa:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8012cac:	42aa      	cmp	r2, r5
 8012cae:	d0ee      	beq.n	8012c8e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8012cb0:	2000      	movs	r0, #0
 8012cb2:	bd70      	pop	{r4, r5, r6, pc}
 8012cb4:	2001      	movs	r0, #1
 8012cb6:	e7fc      	b.n	8012cb2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08012cb8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8012cb8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012cbc:	4605      	mov	r5, r0
 8012cbe:	4616      	mov	r6, r2
 8012cc0:	1c8c      	adds	r4, r1, #2
 8012cc2:	8809      	ldrh	r1, [r1, #0]
 8012cc4:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8012cc8:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8012ccc:	42b3      	cmp	r3, r6
 8012cce:	d124      	bne.n	8012d1a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8012cd0:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8012cd4:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8012cd8:	f001 070f 	and.w	r7, r1, #15
 8012cdc:	4652      	mov	r2, sl
 8012cde:	f8cd 8000 	str.w	r8, [sp]
 8012ce2:	464b      	mov	r3, r9
 8012ce4:	4621      	mov	r1, r4
 8012ce6:	4628      	mov	r0, r5
 8012ce8:	f7ff ffb7 	bl	8012c5a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8012cec:	4683      	mov	fp, r0
 8012cee:	b168      	cbz	r0, 8012d0c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8012cf0:	eb0a 0109 	add.w	r1, sl, r9
 8012cf4:	463a      	mov	r2, r7
 8012cf6:	4628      	mov	r0, r5
 8012cf8:	4441      	add	r1, r8
 8012cfa:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8012cfe:	4649      	mov	r1, r9
 8012d00:	f7ff ff52 	bl	8012ba8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012d04:	4658      	mov	r0, fp
 8012d06:	b003      	add	sp, #12
 8012d08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d0c:	eb07 010a 	add.w	r1, r7, sl
 8012d10:	4449      	add	r1, r9
 8012d12:	4441      	add	r1, r8
 8012d14:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012d18:	e7d2      	b.n	8012cc0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012d1a:	f04f 0b00 	mov.w	fp, #0
 8012d1e:	e7f1      	b.n	8012d04 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08012d20 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8012d20:	b570      	push	{r4, r5, r6, lr}
 8012d22:	8810      	ldrh	r0, [r2, #0]
 8012d24:	4298      	cmp	r0, r3
 8012d26:	d817      	bhi.n	8012d58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012d28:	1e48      	subs	r0, r1, #1
 8012d2a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8012d2e:	4298      	cmp	r0, r3
 8012d30:	d312      	bcc.n	8012d58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012d32:	2400      	movs	r4, #0
 8012d34:	428c      	cmp	r4, r1
 8012d36:	d20f      	bcs.n	8012d58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012d38:	1860      	adds	r0, r4, r1
 8012d3a:	1040      	asrs	r0, r0, #1
 8012d3c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012d40:	0085      	lsls	r5, r0, #2
 8012d42:	42b3      	cmp	r3, r6
 8012d44:	d902      	bls.n	8012d4c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012d46:	3001      	adds	r0, #1
 8012d48:	b284      	uxth	r4, r0
 8012d4a:	e7f3      	b.n	8012d34 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012d4c:	d201      	bcs.n	8012d52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8012d4e:	b281      	uxth	r1, r0
 8012d50:	e7f0      	b.n	8012d34 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012d52:	442a      	add	r2, r5
 8012d54:	8850      	ldrh	r0, [r2, #2]
 8012d56:	bd70      	pop	{r4, r5, r6, pc}
 8012d58:	2000      	movs	r0, #0
 8012d5a:	e7fc      	b.n	8012d56 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08012d5c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8012d5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012d60:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8012d62:	4604      	mov	r4, r0
 8012d64:	260b      	movs	r6, #11
 8012d66:	886f      	ldrh	r7, [r5, #2]
 8012d68:	087f      	lsrs	r7, r7, #1
 8012d6a:	3e01      	subs	r6, #1
 8012d6c:	d013      	beq.n	8012d96 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012d6e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012d70:	462a      	mov	r2, r5
 8012d72:	4639      	mov	r1, r7
 8012d74:	4620      	mov	r0, r4
 8012d76:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012d7a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012d7e:	4643      	mov	r3, r8
 8012d80:	f7ff ffce 	bl	8012d20 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012d84:	b138      	cbz	r0, 8012d96 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012d86:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8012d8a:	4642      	mov	r2, r8
 8012d8c:	4620      	mov	r0, r4
 8012d8e:	f7ff ff93 	bl	8012cb8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012d92:	2800      	cmp	r0, #0
 8012d94:	d1e9      	bne.n	8012d6a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012d96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08012d9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8012d9c:	b570      	push	{r4, r5, r6, lr}
 8012d9e:	694a      	ldr	r2, [r1, #20]
 8012da0:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8012da2:	684b      	ldr	r3, [r1, #4]
 8012da4:	1b54      	subs	r4, r2, r5
 8012da6:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8012da8:	f000 8106 	beq.w	8012fb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8012dac:	1b9b      	subs	r3, r3, r6
 8012dae:	d003      	beq.n	8012db8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012db0:	4363      	muls	r3, r4
 8012db2:	2210      	movs	r2, #16
 8012db4:	fb93 f3f2 	sdiv	r3, r3, r2
 8012db8:	680c      	ldr	r4, [r1, #0]
 8012dba:	698a      	ldr	r2, [r1, #24]
 8012dbc:	1b65      	subs	r5, r4, r5
 8012dbe:	f000 80fd 	beq.w	8012fbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8012dc2:	1b92      	subs	r2, r2, r6
 8012dc4:	d003      	beq.n	8012dce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012dc6:	436a      	muls	r2, r5
 8012dc8:	2410      	movs	r4, #16
 8012dca:	fb92 f2f4 	sdiv	r2, r2, r4
 8012dce:	1a9b      	subs	r3, r3, r2
 8012dd0:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 8012ff8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8012dd4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012dd8:	460a      	mov	r2, r1
 8012dda:	ee07 3a90 	vmov	s15, r3
 8012dde:	f100 040c 	add.w	r4, r0, #12
 8012de2:	4603      	mov	r3, r0
 8012de4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012de8:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012dec:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8012df0:	eeb1 6a43 	vneg.f32	s12, s6
 8012df4:	edd2 7a02 	vldr	s15, [r2, #8]
 8012df8:	3214      	adds	r2, #20
 8012dfa:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012dfe:	ece3 6a01 	vstmia	r3!, {s13}
 8012e02:	429c      	cmp	r4, r3
 8012e04:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012e08:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012e0c:	edc3 7a02 	vstr	s15, [r3, #8]
 8012e10:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012e14:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012e18:	edc3 7a05 	vstr	s15, [r3, #20]
 8012e1c:	d1ea      	bne.n	8012df4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8012e1e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012e20:	698b      	ldr	r3, [r1, #24]
 8012e22:	edd0 4a02 	vldr	s9, [r0, #8]
 8012e26:	1a9b      	subs	r3, r3, r2
 8012e28:	edd0 3a00 	vldr	s7, [r0]
 8012e2c:	edd0 6a01 	vldr	s13, [r0, #4]
 8012e30:	ee07 3a90 	vmov	s15, r3
 8012e34:	684b      	ldr	r3, [r1, #4]
 8012e36:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012e3a:	ed90 5a05 	vldr	s10, [r0, #20]
 8012e3e:	1a9b      	subs	r3, r3, r2
 8012e40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e44:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012e48:	ed90 2a03 	vldr	s4, [r0, #12]
 8012e4c:	ee07 3a10 	vmov	s14, r3
 8012e50:	edd0 5a04 	vldr	s11, [r0, #16]
 8012e54:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012e58:	ed90 1a07 	vldr	s2, [r0, #28]
 8012e5c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012e60:	edd0 2a06 	vldr	s5, [r0, #24]
 8012e64:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8012e68:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012e6c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012e70:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012e74:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012e78:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012e7c:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8012e80:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012e82:	694a      	ldr	r2, [r1, #20]
 8012e84:	1b13      	subs	r3, r2, r4
 8012e86:	ee07 3a10 	vmov	s14, r3
 8012e8a:	680b      	ldr	r3, [r1, #0]
 8012e8c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012e90:	1b1b      	subs	r3, r3, r4
 8012e92:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012e96:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8012e9a:	ee07 3a10 	vmov	s14, r3
 8012e9e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012ea2:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012ea6:	eee6 4a87 	vfma.f32	s9, s13, s14
 8012eaa:	ee64 4a86 	vmul.f32	s9, s9, s12
 8012eae:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8012eb2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012eb4:	698b      	ldr	r3, [r1, #24]
 8012eb6:	1a9b      	subs	r3, r3, r2
 8012eb8:	ee06 3a90 	vmov	s13, r3
 8012ebc:	684b      	ldr	r3, [r1, #4]
 8012ebe:	1a9b      	subs	r3, r3, r2
 8012ec0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012ec4:	ee07 3a10 	vmov	s14, r3
 8012ec8:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012ecc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012ed0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012ed4:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012ed8:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012edc:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012ee0:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8012ee4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012ee6:	694a      	ldr	r2, [r1, #20]
 8012ee8:	1b13      	subs	r3, r2, r4
 8012eea:	ee07 3a10 	vmov	s14, r3
 8012eee:	680b      	ldr	r3, [r1, #0]
 8012ef0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012ef4:	1b1b      	subs	r3, r3, r4
 8012ef6:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012efa:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012efe:	ee07 3a10 	vmov	s14, r3
 8012f02:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012f06:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012f0a:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012f0e:	edd0 5a08 	vldr	s11, [r0, #32]
 8012f12:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012f16:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012f1a:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012f1e:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8012f22:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012f24:	698b      	ldr	r3, [r1, #24]
 8012f26:	1a9b      	subs	r3, r3, r2
 8012f28:	ee07 3a10 	vmov	s14, r3
 8012f2c:	684b      	ldr	r3, [r1, #4]
 8012f2e:	1a9b      	subs	r3, r3, r2
 8012f30:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012f34:	ee01 3a90 	vmov	s3, r3
 8012f38:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012f3c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012f40:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012f44:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012f48:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012f4c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012f50:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012f54:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012f56:	694a      	ldr	r2, [r1, #20]
 8012f58:	1b13      	subs	r3, r2, r4
 8012f5a:	ee03 3a10 	vmov	s6, r3
 8012f5e:	680b      	ldr	r3, [r1, #0]
 8012f60:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012f64:	1b1b      	subs	r3, r3, r4
 8012f66:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012f6a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8012f6e:	ee03 3a10 	vmov	s6, r3
 8012f72:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012f76:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012f7a:	eee1 5a04 	vfma.f32	s11, s2, s8
 8012f7e:	ee25 6a86 	vmul.f32	s12, s11, s12
 8012f82:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012f86:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8012f8a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8012f8e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8012f92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012f96:	dd13      	ble.n	8012fc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012f98:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012f9c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8012fa0:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012fa2:	eee3 7a87 	vfma.f32	s15, s7, s14
 8012fa6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012faa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012fae:	dd15      	ble.n	8012fdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8012fb0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012fb4:	6403      	str	r3, [r0, #64]	@ 0x40
 8012fb6:	bd70      	pop	{r4, r5, r6, pc}
 8012fb8:	4623      	mov	r3, r4
 8012fba:	e6fd      	b.n	8012db8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012fbc:	462a      	mov	r2, r5
 8012fbe:	e706      	b.n	8012dce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012fc0:	d502      	bpl.n	8012fc8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8012fc2:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8012fc6:	e7e9      	b.n	8012f9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8012fc8:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012fcc:	eea3 2a85 	vfma.f32	s4, s7, s10
 8012fd0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8012fd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012fd8:	dade      	bge.n	8012f98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8012fda:	e7f2      	b.n	8012fc2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012fdc:	d502      	bpl.n	8012fe4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8012fde:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8012fe2:	e7e7      	b.n	8012fb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8012fe4:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012fe8:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012fec:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012ff0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ff4:	dadc      	bge.n	8012fb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8012ff6:	e7f2      	b.n	8012fde <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012ff8:	3d800000 	.word	0x3d800000

08012ffc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012ffc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013000:	2714      	movs	r7, #20
 8013002:	435f      	muls	r7, r3
 8013004:	eb02 0c07 	add.w	ip, r2, r7
 8013008:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801300c:	f115 0e0f 	adds.w	lr, r5, #15
 8013010:	f100 80a2 	bmi.w	8013158 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013014:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013018:	9c08      	ldr	r4, [sp, #32]
 801301a:	2614      	movs	r6, #20
 801301c:	f8c0 e014 	str.w	lr, [r0, #20]
 8013020:	4366      	muls	r6, r4
 8013022:	eb02 0806 	add.w	r8, r2, r6
 8013026:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801302a:	f115 040f 	adds.w	r4, r5, #15
 801302e:	f100 809f 	bmi.w	8013170 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8013032:	1124      	asrs	r4, r4, #4
 8013034:	eba4 040e 	sub.w	r4, r4, lr
 8013038:	6184      	str	r4, [r0, #24]
 801303a:	2c00      	cmp	r4, #0
 801303c:	f000 808a 	beq.w	8013154 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8013040:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013044:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013048:	5995      	ldr	r5, [r2, r6]
 801304a:	eba4 0809 	sub.w	r8, r4, r9
 801304e:	59d4      	ldr	r4, [r2, r7]
 8013050:	eba5 0a04 	sub.w	sl, r5, r4
 8013054:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8013058:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801305c:	fb0e fe05 	mul.w	lr, lr, r5
 8013060:	fb0a ee19 	mls	lr, sl, r9, lr
 8013064:	fb08 e404 	mla	r4, r8, r4, lr
 8013068:	3c01      	subs	r4, #1
 801306a:	19a4      	adds	r4, r4, r6
 801306c:	f100 808c 	bmi.w	8013188 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8013070:	fb94 fef6 	sdiv	lr, r4, r6
 8013074:	fb06 441e 	mls	r4, r6, lr, r4
 8013078:	f8c0 e000 	str.w	lr, [r0]
 801307c:	6104      	str	r4, [r0, #16]
 801307e:	2d00      	cmp	r5, #0
 8013080:	f2c0 8095 	blt.w	80131ae <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8013084:	fb95 f4f6 	sdiv	r4, r5, r6
 8013088:	fb06 5514 	mls	r5, r6, r4, r5
 801308c:	6044      	str	r4, [r0, #4]
 801308e:	6085      	str	r5, [r0, #8]
 8013090:	60c6      	str	r6, [r0, #12]
 8013092:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013096:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801309a:	6945      	ldr	r5, [r0, #20]
 801309c:	59d2      	ldr	r2, [r2, r7]
 801309e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80130a2:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 80131d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80130a6:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80130aa:	ee07 4a10 	vmov	s14, r4
 80130ae:	6804      	ldr	r4, [r0, #0]
 80130b0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80130b4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80130b8:	ee07 2a90 	vmov	s15, r2
 80130bc:	ee27 7a26 	vmul.f32	s14, s14, s13
 80130c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80130c4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80130c8:	edd3 6a00 	vldr	s13, [r3]
 80130cc:	eee6 6a07 	vfma.f32	s13, s12, s14
 80130d0:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 80130d4:	eee6 6a27 	vfma.f32	s13, s12, s15
 80130d8:	edc0 6a07 	vstr	s13, [r0, #28]
 80130dc:	edd0 6a01 	vldr	s13, [r0, #4]
 80130e0:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 80130e4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80130e8:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80130ec:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80130f0:	ed80 6a08 	vstr	s12, [r0, #32]
 80130f4:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 80130f6:	6242      	str	r2, [r0, #36]	@ 0x24
 80130f8:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 80130fc:	ed93 6a03 	vldr	s12, [r3, #12]
 8013100:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013104:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8013108:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801310c:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8013110:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8013114:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8013118:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801311c:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8013120:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8013122:	6302      	str	r2, [r0, #48]	@ 0x30
 8013124:	ed93 6a06 	vldr	s12, [r3, #24]
 8013128:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 801312c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013130:	eeb0 7a46 	vmov.f32	s14, s12
 8013134:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8013138:	eea6 7a27 	vfma.f32	s14, s12, s15
 801313c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8013140:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8013144:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8013148:	eee6 7a87 	vfma.f32	s15, s13, s14
 801314c:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8013150:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8013152:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8013154:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013158:	2410      	movs	r4, #16
 801315a:	f1c5 0501 	rsb	r5, r5, #1
 801315e:	fb9e fef4 	sdiv	lr, lr, r4
 8013162:	f015 050f 	ands.w	r5, r5, #15
 8013166:	bf18      	it	ne
 8013168:	2501      	movne	r5, #1
 801316a:	ebae 0e05 	sub.w	lr, lr, r5
 801316e:	e753      	b.n	8013018 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8013170:	f04f 0910 	mov.w	r9, #16
 8013174:	f1c5 0501 	rsb	r5, r5, #1
 8013178:	fb94 f4f9 	sdiv	r4, r4, r9
 801317c:	f015 050f 	ands.w	r5, r5, #15
 8013180:	bf18      	it	ne
 8013182:	2501      	movne	r5, #1
 8013184:	1b64      	subs	r4, r4, r5
 8013186:	e755      	b.n	8013034 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8013188:	4264      	negs	r4, r4
 801318a:	fb94 fef6 	sdiv	lr, r4, r6
 801318e:	f1ce 0800 	rsb	r8, lr, #0
 8013192:	fb06 441e 	mls	r4, r6, lr, r4
 8013196:	f8c0 8000 	str.w	r8, [r0]
 801319a:	6104      	str	r4, [r0, #16]
 801319c:	2c00      	cmp	r4, #0
 801319e:	f43f af6e 	beq.w	801307e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80131a2:	ea6f 0e0e 	mvn.w	lr, lr
 80131a6:	1b34      	subs	r4, r6, r4
 80131a8:	f8c0 e000 	str.w	lr, [r0]
 80131ac:	e766      	b.n	801307c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80131ae:	426d      	negs	r5, r5
 80131b0:	fb95 f4f6 	sdiv	r4, r5, r6
 80131b4:	f1c4 0e00 	rsb	lr, r4, #0
 80131b8:	fb06 5514 	mls	r5, r6, r4, r5
 80131bc:	f8c0 e004 	str.w	lr, [r0, #4]
 80131c0:	6085      	str	r5, [r0, #8]
 80131c2:	2d00      	cmp	r5, #0
 80131c4:	f43f af64 	beq.w	8013090 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80131c8:	43e4      	mvns	r4, r4
 80131ca:	1b75      	subs	r5, r6, r5
 80131cc:	6044      	str	r4, [r0, #4]
 80131ce:	e75e      	b.n	801308e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80131d0:	3d800000 	.word	0x3d800000

080131d4 <_ZN8touchgfx7Unicode6strlenEPKt>:
 80131d4:	4602      	mov	r2, r0
 80131d6:	b148      	cbz	r0, 80131ec <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80131d8:	2300      	movs	r3, #0
 80131da:	b298      	uxth	r0, r3
 80131dc:	3301      	adds	r3, #1
 80131de:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80131e2:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80131e6:	2900      	cmp	r1, #0
 80131e8:	d1f7      	bne.n	80131da <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80131ea:	4770      	bx	lr
 80131ec:	4770      	bx	lr

080131ee <_ZN8touchgfx7Unicode7strncpyEPtPKtt>:
 80131ee:	b530      	push	{r4, r5, lr}
 80131f0:	4604      	mov	r4, r0
 80131f2:	b161      	cbz	r1, 801320e <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0x20>
 80131f4:	b150      	cbz	r0, 801320c <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0x1e>
 80131f6:	2300      	movs	r3, #0
 80131f8:	b298      	uxth	r0, r3
 80131fa:	4290      	cmp	r0, r2
 80131fc:	d206      	bcs.n	801320c <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0x1e>
 80131fe:	f831 5013 	ldrh.w	r5, [r1, r3, lsl #1]
 8013202:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013206:	3301      	adds	r3, #1
 8013208:	2d00      	cmp	r5, #0
 801320a:	d1f5      	bne.n	80131f8 <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0xa>
 801320c:	bd30      	pop	{r4, r5, pc}
 801320e:	4608      	mov	r0, r1
 8013210:	e7fc      	b.n	801320c <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0x1e>

08013212 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8013212:	b530      	push	{r4, r5, lr}
 8013214:	4604      	mov	r4, r0
 8013216:	b159      	cbz	r1, 8013230 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013218:	b148      	cbz	r0, 801322e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801321a:	2300      	movs	r3, #0
 801321c:	b298      	uxth	r0, r3
 801321e:	4282      	cmp	r2, r0
 8013220:	d905      	bls.n	801322e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013222:	5ccd      	ldrb	r5, [r1, r3]
 8013224:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013228:	3301      	adds	r3, #1
 801322a:	2d00      	cmp	r5, #0
 801322c:	d1f6      	bne.n	801321c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801322e:	bd30      	pop	{r4, r5, pc}
 8013230:	4608      	mov	r0, r1
 8013232:	e7fc      	b.n	801322e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08013234 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8013234:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013236:	b08b      	sub	sp, #44	@ 0x2c
 8013238:	468c      	mov	ip, r1
 801323a:	4604      	mov	r4, r0
 801323c:	2100      	movs	r1, #0
 801323e:	261f      	movs	r6, #31
 8013240:	af01      	add	r7, sp, #4
 8013242:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8013246:	1e71      	subs	r1, r6, #1
 8013248:	fb94 fef3 	sdiv	lr, r4, r3
 801324c:	fb03 441e 	mls	r4, r3, lr, r4
 8013250:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8013254:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8013258:	b2ec      	uxtb	r4, r5
 801325a:	2d09      	cmp	r5, #9
 801325c:	bfd4      	ite	le
 801325e:	3430      	addle	r4, #48	@ 0x30
 8013260:	3457      	addgt	r4, #87	@ 0x57
 8013262:	b2e4      	uxtb	r4, r4
 8013264:	55bc      	strb	r4, [r7, r6]
 8013266:	4674      	mov	r4, lr
 8013268:	b974      	cbnz	r4, 8013288 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801326a:	2800      	cmp	r0, #0
 801326c:	da05      	bge.n	801327a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801326e:	ab0a      	add	r3, sp, #40	@ 0x28
 8013270:	4419      	add	r1, r3
 8013272:	232d      	movs	r3, #45	@ 0x2d
 8013274:	f801 3c24 	strb.w	r3, [r1, #-36]
 8013278:	1eb1      	subs	r1, r6, #2
 801327a:	3101      	adds	r1, #1
 801327c:	4660      	mov	r0, ip
 801327e:	4439      	add	r1, r7
 8013280:	f7ff ffc7 	bl	8013212 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013284:	b00b      	add	sp, #44	@ 0x2c
 8013286:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013288:	460e      	mov	r6, r1
 801328a:	e7dc      	b.n	8013246 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801328c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801328c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801328e:	468c      	mov	ip, r1
 8013290:	b08b      	sub	sp, #44	@ 0x2c
 8013292:	2100      	movs	r1, #0
 8013294:	ae01      	add	r6, sp, #4
 8013296:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 801329a:	211f      	movs	r1, #31
 801329c:	fbb0 f7f3 	udiv	r7, r0, r3
 80132a0:	fb03 0517 	mls	r5, r3, r7, r0
 80132a4:	4638      	mov	r0, r7
 80132a6:	b2ec      	uxtb	r4, r5
 80132a8:	2d09      	cmp	r5, #9
 80132aa:	bfd4      	ite	le
 80132ac:	3430      	addle	r4, #48	@ 0x30
 80132ae:	3457      	addgt	r4, #87	@ 0x57
 80132b0:	b2e4      	uxtb	r4, r4
 80132b2:	558c      	strb	r4, [r1, r6]
 80132b4:	1e4c      	subs	r4, r1, #1
 80132b6:	b92f      	cbnz	r7, 80132c4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80132b8:	4431      	add	r1, r6
 80132ba:	4660      	mov	r0, ip
 80132bc:	f7ff ffa9 	bl	8013212 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80132c0:	b00b      	add	sp, #44	@ 0x2c
 80132c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80132c4:	4621      	mov	r1, r4
 80132c6:	e7e9      	b.n	801329c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080132c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80132c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132cc:	b085      	sub	sp, #20
 80132ce:	4691      	mov	r9, r2
 80132d0:	6802      	ldr	r2, [r0, #0]
 80132d2:	4688      	mov	r8, r1
 80132d4:	461c      	mov	r4, r3
 80132d6:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 80132da:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 80132de:	4683      	mov	fp, r0
 80132e0:	4610      	mov	r0, r2
 80132e2:	9103      	str	r1, [sp, #12]
 80132e4:	9302      	str	r3, [sp, #8]
 80132e6:	9201      	str	r2, [sp, #4]
 80132e8:	f7ff ff74 	bl	80131d4 <_ZN8touchgfx7Unicode6strlenEPKt>
 80132ec:	f1b8 0f00 	cmp.w	r8, #0
 80132f0:	bf0c      	ite	eq
 80132f2:	4684      	moveq	ip, r0
 80132f4:	f100 0c01 	addne.w	ip, r0, #1
 80132f8:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 80132fc:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8013300:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8013302:	fa1f fc8c 	uxth.w	ip, ip
 8013306:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013308:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 801330c:	9903      	ldr	r1, [sp, #12]
 801330e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013312:	d041      	beq.n	8013398 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013314:	d834      	bhi.n	8013380 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8013316:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 801331a:	d059      	beq.n	80133d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801331c:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8013320:	d03a      	beq.n	8013398 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013322:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8013326:	d034      	beq.n	8013392 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013328:	2400      	movs	r4, #0
 801332a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801332e:	3a01      	subs	r2, #1
 8013330:	b169      	cbz	r1, 801334e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013332:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8013334:	458c      	cmp	ip, r1
 8013336:	da09      	bge.n	801334c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013338:	eba1 010c 	sub.w	r1, r1, ip
 801333c:	b289      	uxth	r1, r1
 801333e:	b933      	cbnz	r3, 801334e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013340:	2e00      	cmp	r6, #0
 8013342:	d051      	beq.n	80133e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013344:	2800      	cmp	r0, #0
 8013346:	d04f      	beq.n	80133e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013348:	440c      	add	r4, r1
 801334a:	b2a4      	uxth	r4, r4
 801334c:	2100      	movs	r1, #0
 801334e:	682b      	ldr	r3, [r5, #0]
 8013350:	4293      	cmp	r3, r2
 8013352:	da07      	bge.n	8013364 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013354:	f1b8 0f00 	cmp.w	r8, #0
 8013358:	d004      	beq.n	8013364 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801335a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801335e:	682b      	ldr	r3, [r5, #0]
 8013360:	3301      	adds	r3, #1
 8013362:	602b      	str	r3, [r5, #0]
 8013364:	2730      	movs	r7, #48	@ 0x30
 8013366:	2c00      	cmp	r4, #0
 8013368:	d04e      	beq.n	8013408 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801336a:	682e      	ldr	r6, [r5, #0]
 801336c:	3c01      	subs	r4, #1
 801336e:	42b2      	cmp	r2, r6
 8013370:	b2a4      	uxth	r4, r4
 8013372:	dd49      	ble.n	8013408 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013374:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013378:	682b      	ldr	r3, [r5, #0]
 801337a:	3301      	adds	r3, #1
 801337c:	602b      	str	r3, [r5, #0]
 801337e:	e7f2      	b.n	8013366 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013380:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8013384:	d01d      	beq.n	80133c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8013386:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 801338a:	d002      	beq.n	8013392 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801338c:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8013390:	e7c9      	b.n	8013326 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013392:	4684      	mov	ip, r0
 8013394:	f04f 0800 	mov.w	r8, #0
 8013398:	2c00      	cmp	r4, #0
 801339a:	d0c6      	beq.n	801332a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801339c:	b947      	cbnz	r7, 80133b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801339e:	2801      	cmp	r0, #1
 80133a0:	d106      	bne.n	80133b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80133a2:	8814      	ldrh	r4, [r2, #0]
 80133a4:	2c30      	cmp	r4, #48	@ 0x30
 80133a6:	bf02      	ittt	eq
 80133a8:	3202      	addeq	r2, #2
 80133aa:	4638      	moveq	r0, r7
 80133ac:	f8cb 2000 	streq.w	r2, [fp]
 80133b0:	45bc      	cmp	ip, r7
 80133b2:	da14      	bge.n	80133de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80133b4:	b2bf      	uxth	r7, r7
 80133b6:	eba7 040c 	sub.w	r4, r7, ip
 80133ba:	46bc      	mov	ip, r7
 80133bc:	b2a4      	uxth	r4, r4
 80133be:	2600      	movs	r6, #0
 80133c0:	e7b3      	b.n	801332a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80133c2:	4684      	mov	ip, r0
 80133c4:	b16c      	cbz	r4, 80133e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80133c6:	42b8      	cmp	r0, r7
 80133c8:	dd00      	ble.n	80133cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80133ca:	b2b8      	uxth	r0, r7
 80133cc:	2400      	movs	r4, #0
 80133ce:	e003      	b.n	80133d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80133d0:	f04f 0c01 	mov.w	ip, #1
 80133d4:	2400      	movs	r4, #0
 80133d6:	4660      	mov	r0, ip
 80133d8:	4626      	mov	r6, r4
 80133da:	46a0      	mov	r8, r4
 80133dc:	e7a5      	b.n	801332a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80133de:	2400      	movs	r4, #0
 80133e0:	e7ed      	b.n	80133be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80133e2:	4626      	mov	r6, r4
 80133e4:	46a0      	mov	r8, r4
 80133e6:	e7a0      	b.n	801332a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80133e8:	2900      	cmp	r1, #0
 80133ea:	d0b0      	beq.n	801334e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80133ec:	2720      	movs	r7, #32
 80133ee:	682e      	ldr	r6, [r5, #0]
 80133f0:	2900      	cmp	r1, #0
 80133f2:	d0ac      	beq.n	801334e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80133f4:	3901      	subs	r1, #1
 80133f6:	4296      	cmp	r6, r2
 80133f8:	b289      	uxth	r1, r1
 80133fa:	daa7      	bge.n	801334c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80133fc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013400:	682b      	ldr	r3, [r5, #0]
 8013402:	3301      	adds	r3, #1
 8013404:	602b      	str	r3, [r5, #0]
 8013406:	e7f2      	b.n	80133ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8013408:	b188      	cbz	r0, 801342e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801340a:	682b      	ldr	r3, [r5, #0]
 801340c:	3801      	subs	r0, #1
 801340e:	429a      	cmp	r2, r3
 8013410:	b280      	uxth	r0, r0
 8013412:	dd0c      	ble.n	801342e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013414:	f8db 3000 	ldr.w	r3, [fp]
 8013418:	1c9c      	adds	r4, r3, #2
 801341a:	f8cb 4000 	str.w	r4, [fp]
 801341e:	881c      	ldrh	r4, [r3, #0]
 8013420:	682b      	ldr	r3, [r5, #0]
 8013422:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8013426:	682b      	ldr	r3, [r5, #0]
 8013428:	3301      	adds	r3, #1
 801342a:	602b      	str	r3, [r5, #0]
 801342c:	e7ec      	b.n	8013408 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801342e:	2620      	movs	r6, #32
 8013430:	b151      	cbz	r1, 8013448 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013432:	6828      	ldr	r0, [r5, #0]
 8013434:	3901      	subs	r1, #1
 8013436:	4282      	cmp	r2, r0
 8013438:	b289      	uxth	r1, r1
 801343a:	dd05      	ble.n	8013448 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801343c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013440:	682b      	ldr	r3, [r5, #0]
 8013442:	3301      	adds	r3, #1
 8013444:	602b      	str	r3, [r5, #0]
 8013446:	e7f3      	b.n	8013430 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8013448:	b005      	add	sp, #20
 801344a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801344e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801344e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013452:	2400      	movs	r4, #0
 8013454:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8013458:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 801345c:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8013460:	8014      	strh	r4, [r2, #0]
 8013462:	701c      	strb	r4, [r3, #0]
 8013464:	f888 4000 	strb.w	r4, [r8]
 8013468:	f88c 4000 	strb.w	r4, [ip]
 801346c:	f88e 4000 	strb.w	r4, [lr]
 8013470:	703c      	strb	r4, [r7, #0]
 8013472:	6804      	ldr	r4, [r0, #0]
 8013474:	b1a4      	cbz	r4, 80134a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8013476:	8824      	ldrh	r4, [r4, #0]
 8013478:	f04f 0901 	mov.w	r9, #1
 801347c:	b314      	cbz	r4, 80134c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801347e:	2c2b      	cmp	r4, #43	@ 0x2b
 8013480:	d001      	beq.n	8013486 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8013482:	2c20      	cmp	r4, #32
 8013484:	d110      	bne.n	80134a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8013486:	8014      	strh	r4, [r2, #0]
 8013488:	6804      	ldr	r4, [r0, #0]
 801348a:	b10c      	cbz	r4, 8013490 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801348c:	3402      	adds	r4, #2
 801348e:	6004      	str	r4, [r0, #0]
 8013490:	680c      	ldr	r4, [r1, #0]
 8013492:	b10c      	cbz	r4, 8013498 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013494:	3401      	adds	r4, #1
 8013496:	600c      	str	r4, [r1, #0]
 8013498:	6804      	ldr	r4, [r0, #0]
 801349a:	b17c      	cbz	r4, 80134bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801349c:	8824      	ldrh	r4, [r4, #0]
 801349e:	e7ed      	b.n	801347c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80134a0:	680c      	ldr	r4, [r1, #0]
 80134a2:	b17c      	cbz	r4, 80134c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80134a4:	7824      	ldrb	r4, [r4, #0]
 80134a6:	e7e7      	b.n	8013478 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80134a8:	2c2d      	cmp	r4, #45	@ 0x2d
 80134aa:	d102      	bne.n	80134b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80134ac:	f883 9000 	strb.w	r9, [r3]
 80134b0:	e7ea      	b.n	8013488 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80134b2:	2c23      	cmp	r4, #35	@ 0x23
 80134b4:	d107      	bne.n	80134c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80134b6:	f888 9000 	strb.w	r9, [r8]
 80134ba:	e7e5      	b.n	8013488 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80134bc:	680c      	ldr	r4, [r1, #0]
 80134be:	b10c      	cbz	r4, 80134c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80134c0:	7824      	ldrb	r4, [r4, #0]
 80134c2:	e7db      	b.n	801347c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80134c4:	2400      	movs	r4, #0
 80134c6:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 80134ca:	2b09      	cmp	r3, #9
 80134cc:	d901      	bls.n	80134d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80134ce:	2c2a      	cmp	r4, #42	@ 0x2a
 80134d0:	d122      	bne.n	8013518 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80134d2:	2301      	movs	r3, #1
 80134d4:	2c30      	cmp	r4, #48	@ 0x30
 80134d6:	f88e 3000 	strb.w	r3, [lr]
 80134da:	d10d      	bne.n	80134f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80134dc:	f88c 3000 	strb.w	r3, [ip]
 80134e0:	6803      	ldr	r3, [r0, #0]
 80134e2:	b10b      	cbz	r3, 80134e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80134e4:	3302      	adds	r3, #2
 80134e6:	6003      	str	r3, [r0, #0]
 80134e8:	680b      	ldr	r3, [r1, #0]
 80134ea:	b10b      	cbz	r3, 80134f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80134ec:	3301      	adds	r3, #1
 80134ee:	600b      	str	r3, [r1, #0]
 80134f0:	6803      	ldr	r3, [r0, #0]
 80134f2:	2b00      	cmp	r3, #0
 80134f4:	d02f      	beq.n	8013556 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80134f6:	881c      	ldrh	r4, [r3, #0]
 80134f8:	2c2a      	cmp	r4, #42	@ 0x2a
 80134fa:	d135      	bne.n	8013568 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80134fc:	f04f 33ff 	mov.w	r3, #4294967295
 8013500:	6033      	str	r3, [r6, #0]
 8013502:	6803      	ldr	r3, [r0, #0]
 8013504:	b10b      	cbz	r3, 801350a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8013506:	3302      	adds	r3, #2
 8013508:	6003      	str	r3, [r0, #0]
 801350a:	680b      	ldr	r3, [r1, #0]
 801350c:	b10b      	cbz	r3, 8013512 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801350e:	3301      	adds	r3, #1
 8013510:	600b      	str	r3, [r1, #0]
 8013512:	6803      	ldr	r3, [r0, #0]
 8013514:	b31b      	cbz	r3, 801355e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8013516:	881c      	ldrh	r4, [r3, #0]
 8013518:	2c2e      	cmp	r4, #46	@ 0x2e
 801351a:	d11a      	bne.n	8013552 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801351c:	2301      	movs	r3, #1
 801351e:	703b      	strb	r3, [r7, #0]
 8013520:	6803      	ldr	r3, [r0, #0]
 8013522:	b10b      	cbz	r3, 8013528 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8013524:	3302      	adds	r3, #2
 8013526:	6003      	str	r3, [r0, #0]
 8013528:	680b      	ldr	r3, [r1, #0]
 801352a:	b10b      	cbz	r3, 8013530 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801352c:	3301      	adds	r3, #1
 801352e:	600b      	str	r3, [r1, #0]
 8013530:	6803      	ldr	r3, [r0, #0]
 8013532:	2b00      	cmp	r3, #0
 8013534:	d036      	beq.n	80135a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8013536:	881b      	ldrh	r3, [r3, #0]
 8013538:	2b2a      	cmp	r3, #42	@ 0x2a
 801353a:	d137      	bne.n	80135ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801353c:	f04f 33ff 	mov.w	r3, #4294967295
 8013540:	602b      	str	r3, [r5, #0]
 8013542:	6803      	ldr	r3, [r0, #0]
 8013544:	b10b      	cbz	r3, 801354a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8013546:	3302      	adds	r3, #2
 8013548:	6003      	str	r3, [r0, #0]
 801354a:	680b      	ldr	r3, [r1, #0]
 801354c:	b10b      	cbz	r3, 8013552 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801354e:	3301      	adds	r3, #1
 8013550:	600b      	str	r3, [r1, #0]
 8013552:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013556:	680c      	ldr	r4, [r1, #0]
 8013558:	b134      	cbz	r4, 8013568 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801355a:	7824      	ldrb	r4, [r4, #0]
 801355c:	e7cc      	b.n	80134f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801355e:	680b      	ldr	r3, [r1, #0]
 8013560:	2b00      	cmp	r3, #0
 8013562:	d0f6      	beq.n	8013552 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013564:	781c      	ldrb	r4, [r3, #0]
 8013566:	e7d7      	b.n	8013518 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013568:	2300      	movs	r3, #0
 801356a:	220a      	movs	r2, #10
 801356c:	6033      	str	r3, [r6, #0]
 801356e:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8013572:	fa1f f38c 	uxth.w	r3, ip
 8013576:	2b09      	cmp	r3, #9
 8013578:	d8ce      	bhi.n	8013518 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801357a:	6833      	ldr	r3, [r6, #0]
 801357c:	fb02 c303 	mla	r3, r2, r3, ip
 8013580:	6033      	str	r3, [r6, #0]
 8013582:	6803      	ldr	r3, [r0, #0]
 8013584:	b10b      	cbz	r3, 801358a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8013586:	3302      	adds	r3, #2
 8013588:	6003      	str	r3, [r0, #0]
 801358a:	680b      	ldr	r3, [r1, #0]
 801358c:	b10b      	cbz	r3, 8013592 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801358e:	3301      	adds	r3, #1
 8013590:	600b      	str	r3, [r1, #0]
 8013592:	6803      	ldr	r3, [r0, #0]
 8013594:	b10b      	cbz	r3, 801359a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8013596:	881c      	ldrh	r4, [r3, #0]
 8013598:	e7e9      	b.n	801356e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801359a:	680c      	ldr	r4, [r1, #0]
 801359c:	2c00      	cmp	r4, #0
 801359e:	d0e6      	beq.n	801356e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80135a0:	7824      	ldrb	r4, [r4, #0]
 80135a2:	e7e4      	b.n	801356e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80135a4:	680b      	ldr	r3, [r1, #0]
 80135a6:	b10b      	cbz	r3, 80135ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80135a8:	781b      	ldrb	r3, [r3, #0]
 80135aa:	e7c5      	b.n	8013538 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80135ac:	2200      	movs	r2, #0
 80135ae:	240a      	movs	r4, #10
 80135b0:	602a      	str	r2, [r5, #0]
 80135b2:	3b30      	subs	r3, #48	@ 0x30
 80135b4:	682a      	ldr	r2, [r5, #0]
 80135b6:	b29e      	uxth	r6, r3
 80135b8:	2e09      	cmp	r6, #9
 80135ba:	d813      	bhi.n	80135e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80135bc:	fb04 3302 	mla	r3, r4, r2, r3
 80135c0:	602b      	str	r3, [r5, #0]
 80135c2:	6803      	ldr	r3, [r0, #0]
 80135c4:	b10b      	cbz	r3, 80135ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80135c6:	3302      	adds	r3, #2
 80135c8:	6003      	str	r3, [r0, #0]
 80135ca:	680b      	ldr	r3, [r1, #0]
 80135cc:	b10b      	cbz	r3, 80135d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80135ce:	3301      	adds	r3, #1
 80135d0:	600b      	str	r3, [r1, #0]
 80135d2:	6803      	ldr	r3, [r0, #0]
 80135d4:	b10b      	cbz	r3, 80135da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80135d6:	881b      	ldrh	r3, [r3, #0]
 80135d8:	e7eb      	b.n	80135b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80135da:	680b      	ldr	r3, [r1, #0]
 80135dc:	2b00      	cmp	r3, #0
 80135de:	d0e8      	beq.n	80135b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80135e0:	781b      	ldrb	r3, [r3, #0]
 80135e2:	e7e6      	b.n	80135b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80135e4:	2a06      	cmp	r2, #6
 80135e6:	bfa8      	it	ge
 80135e8:	2206      	movge	r2, #6
 80135ea:	602a      	str	r2, [r5, #0]
 80135ec:	e7b1      	b.n	8013552 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080135ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80135ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135f2:	b0a3      	sub	sp, #140	@ 0x8c
 80135f4:	2600      	movs	r6, #0
 80135f6:	4607      	mov	r7, r0
 80135f8:	4688      	mov	r8, r1
 80135fa:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 80135fe:	4631      	mov	r1, r6
 8013600:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8013602:	4648      	mov	r0, r9
 8013604:	960d      	str	r6, [sp, #52]	@ 0x34
 8013606:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801360a:	2242      	movs	r2, #66	@ 0x42
 801360c:	f00f f984 	bl	8022918 <memset>
 8013610:	b15f      	cbz	r7, 801362a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8013612:	f108 3aff 	add.w	sl, r8, #4294967295
 8013616:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013618:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801361a:	b152      	cbz	r2, 8013632 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801361c:	8812      	ldrh	r2, [r2, #0]
 801361e:	b10a      	cbz	r2, 8013624 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013620:	459a      	cmp	sl, r3
 8013622:	dc2e      	bgt.n	8013682 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013624:	2200      	movs	r2, #0
 8013626:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801362a:	4638      	mov	r0, r7
 801362c:	b023      	add	sp, #140	@ 0x8c
 801362e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013632:	9a08      	ldr	r2, [sp, #32]
 8013634:	2a00      	cmp	r2, #0
 8013636:	d0f5      	beq.n	8013624 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013638:	7812      	ldrb	r2, [r2, #0]
 801363a:	e7f0      	b.n	801361e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801363c:	2d00      	cmp	r5, #0
 801363e:	d0ea      	beq.n	8013616 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013640:	782a      	ldrb	r2, [r5, #0]
 8013642:	b142      	cbz	r2, 8013656 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013644:	2a25      	cmp	r2, #37	@ 0x25
 8013646:	d001      	beq.n	801364c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013648:	459a      	cmp	sl, r3
 801364a:	dc08      	bgt.n	801365e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801364c:	f1bb 0f00 	cmp.w	fp, #0
 8013650:	d121      	bne.n	8013696 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013652:	2d00      	cmp	r5, #0
 8013654:	d0df      	beq.n	8013616 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013656:	782a      	ldrb	r2, [r5, #0]
 8013658:	f04f 0b00 	mov.w	fp, #0
 801365c:	e01d      	b.n	801369a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801365e:	f1bb 0f00 	cmp.w	fp, #0
 8013662:	d077      	beq.n	8013754 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 8013664:	f8bb 2000 	ldrh.w	r2, [fp]
 8013668:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801366c:	f1bb 0f00 	cmp.w	fp, #0
 8013670:	d002      	beq.n	8013678 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8013672:	f10b 0202 	add.w	r2, fp, #2
 8013676:	9209      	str	r2, [sp, #36]	@ 0x24
 8013678:	b10d      	cbz	r5, 801367e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801367a:	3501      	adds	r5, #1
 801367c:	9508      	str	r5, [sp, #32]
 801367e:	3301      	adds	r3, #1
 8013680:	930d      	str	r3, [sp, #52]	@ 0x34
 8013682:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013684:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013688:	f1bb 0f00 	cmp.w	fp, #0
 801368c:	d0d6      	beq.n	801363c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801368e:	f8bb 2000 	ldrh.w	r2, [fp]
 8013692:	2a00      	cmp	r2, #0
 8013694:	d1d6      	bne.n	8013644 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013696:	f8bb 2000 	ldrh.w	r2, [fp]
 801369a:	2a00      	cmp	r2, #0
 801369c:	d0bb      	beq.n	8013616 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801369e:	459a      	cmp	sl, r3
 80136a0:	ddb9      	ble.n	8013616 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80136a2:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 80136a6:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 80136aa:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 80136ae:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 80136b2:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 80136b6:	960e      	str	r6, [sp, #56]	@ 0x38
 80136b8:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 80136bc:	960f      	str	r6, [sp, #60]	@ 0x3c
 80136be:	f1bb 0f00 	cmp.w	fp, #0
 80136c2:	d002      	beq.n	80136ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80136c4:	f10b 0302 	add.w	r3, fp, #2
 80136c8:	9309      	str	r3, [sp, #36]	@ 0x24
 80136ca:	b10d      	cbz	r5, 80136d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80136cc:	1c6b      	adds	r3, r5, #1
 80136ce:	9308      	str	r3, [sp, #32]
 80136d0:	ab0f      	add	r3, sp, #60	@ 0x3c
 80136d2:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 80136d6:	a908      	add	r1, sp, #32
 80136d8:	a809      	add	r0, sp, #36	@ 0x24
 80136da:	9305      	str	r3, [sp, #20]
 80136dc:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 80136e0:	9304      	str	r3, [sp, #16]
 80136e2:	ab0e      	add	r3, sp, #56	@ 0x38
 80136e4:	9303      	str	r3, [sp, #12]
 80136e6:	ab0c      	add	r3, sp, #48	@ 0x30
 80136e8:	9302      	str	r3, [sp, #8]
 80136ea:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 80136ee:	9301      	str	r3, [sp, #4]
 80136f0:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 80136f4:	9300      	str	r3, [sp, #0]
 80136f6:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 80136fa:	f7ff fea8 	bl	801344e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80136fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013700:	2b00      	cmp	r3, #0
 8013702:	bfbf      	itttt	lt
 8013704:	6823      	ldrlt	r3, [r4, #0]
 8013706:	3404      	addlt	r4, #4
 8013708:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801370c:	930e      	strlt	r3, [sp, #56]	@ 0x38
 801370e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013710:	2b00      	cmp	r3, #0
 8013712:	bfbe      	ittt	lt
 8013714:	6823      	ldrlt	r3, [r4, #0]
 8013716:	3404      	addlt	r4, #4
 8013718:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801371c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013720:	bfb8      	it	lt
 8013722:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8013724:	b1d9      	cbz	r1, 801375e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 8013726:	880b      	ldrh	r3, [r1, #0]
 8013728:	2b69      	cmp	r3, #105	@ 0x69
 801372a:	d01f      	beq.n	801376c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 801372c:	d82f      	bhi.n	801378e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 801372e:	2b58      	cmp	r3, #88	@ 0x58
 8013730:	d01c      	beq.n	801376c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8013732:	d818      	bhi.n	8013766 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 8013734:	2b25      	cmp	r3, #37	@ 0x25
 8013736:	d034      	beq.n	80137a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 8013738:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801373a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801373e:	f1bb 0f00 	cmp.w	fp, #0
 8013742:	f000 80b7 	beq.w	80138b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 8013746:	f8bb 5000 	ldrh.w	r5, [fp]
 801374a:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801374e:	3301      	adds	r3, #1
 8013750:	930d      	str	r3, [sp, #52]	@ 0x34
 8013752:	e029      	b.n	80137a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8013754:	b10d      	cbz	r5, 801375a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 8013756:	782a      	ldrb	r2, [r5, #0]
 8013758:	e786      	b.n	8013668 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801375a:	462a      	mov	r2, r5
 801375c:	e784      	b.n	8013668 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801375e:	2a00      	cmp	r2, #0
 8013760:	d0ea      	beq.n	8013738 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8013762:	7813      	ldrb	r3, [r2, #0]
 8013764:	e7e0      	b.n	8013728 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 8013766:	3b63      	subs	r3, #99	@ 0x63
 8013768:	2b01      	cmp	r3, #1
 801376a:	d8e5      	bhi.n	8013738 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 801376c:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8013770:	b329      	cbz	r1, 80137be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 8013772:	880b      	ldrh	r3, [r1, #0]
 8013774:	2b69      	cmp	r3, #105	@ 0x69
 8013776:	d063      	beq.n	8013840 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8013778:	d825      	bhi.n	80137c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 801377a:	2b63      	cmp	r3, #99	@ 0x63
 801377c:	d038      	beq.n	80137f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 801377e:	2b64      	cmp	r3, #100	@ 0x64
 8013780:	d05e      	beq.n	8013840 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8013782:	2b58      	cmp	r3, #88	@ 0x58
 8013784:	d07a      	beq.n	801387c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 8013786:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 801378a:	4625      	mov	r5, r4
 801378c:	e036      	b.n	80137fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 801378e:	2b73      	cmp	r3, #115	@ 0x73
 8013790:	d0ec      	beq.n	801376c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8013792:	d802      	bhi.n	801379a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 8013794:	2b6f      	cmp	r3, #111	@ 0x6f
 8013796:	d1cf      	bne.n	8013738 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8013798:	e7e8      	b.n	801376c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 801379a:	2b75      	cmp	r3, #117	@ 0x75
 801379c:	d0e6      	beq.n	801376c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 801379e:	2b78      	cmp	r3, #120	@ 0x78
 80137a0:	e7f9      	b.n	8013796 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 80137a2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80137a4:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80137a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80137aa:	b10b      	cbz	r3, 80137b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 80137ac:	3302      	adds	r3, #2
 80137ae:	9309      	str	r3, [sp, #36]	@ 0x24
 80137b0:	9b08      	ldr	r3, [sp, #32]
 80137b2:	2b00      	cmp	r3, #0
 80137b4:	f43f af2f 	beq.w	8013616 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80137b8:	3301      	adds	r3, #1
 80137ba:	9308      	str	r3, [sp, #32]
 80137bc:	e72b      	b.n	8013616 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80137be:	2a00      	cmp	r2, #0
 80137c0:	d0e1      	beq.n	8013786 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 80137c2:	7813      	ldrb	r3, [r2, #0]
 80137c4:	e7d6      	b.n	8013774 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 80137c6:	2b73      	cmp	r3, #115	@ 0x73
 80137c8:	d036      	beq.n	8013838 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 80137ca:	d807      	bhi.n	80137dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 80137cc:	2b6f      	cmp	r3, #111	@ 0x6f
 80137ce:	d1da      	bne.n	8013786 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 80137d0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80137d2:	1d25      	adds	r5, r4, #4
 80137d4:	2308      	movs	r3, #8
 80137d6:	eba8 0202 	sub.w	r2, r8, r2
 80137da:	e049      	b.n	8013870 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 80137dc:	2b75      	cmp	r3, #117	@ 0x75
 80137de:	d042      	beq.n	8013866 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 80137e0:	2b78      	cmp	r3, #120	@ 0x78
 80137e2:	d1d0      	bne.n	8013786 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 80137e4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80137e6:	1d25      	adds	r5, r4, #4
 80137e8:	2310      	movs	r3, #16
 80137ea:	eba8 0202 	sub.w	r2, r8, r2
 80137ee:	e03f      	b.n	8013870 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 80137f0:	6823      	ldr	r3, [r4, #0]
 80137f2:	1d25      	adds	r5, r4, #4
 80137f4:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 80137f8:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80137fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80137fe:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8013802:	2b00      	cmp	r3, #0
 8013804:	d051      	beq.n	80138aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 8013806:	881a      	ldrh	r2, [r3, #0]
 8013808:	a80d      	add	r0, sp, #52	@ 0x34
 801380a:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 801380e:	462c      	mov	r4, r5
 8013810:	9005      	str	r0, [sp, #20]
 8013812:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8013816:	9004      	str	r0, [sp, #16]
 8013818:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801381a:	9003      	str	r0, [sp, #12]
 801381c:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8013820:	9002      	str	r0, [sp, #8]
 8013822:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8013824:	9001      	str	r0, [sp, #4]
 8013826:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 801382a:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801382e:	9000      	str	r0, [sp, #0]
 8013830:	a810      	add	r0, sp, #64	@ 0x40
 8013832:	f7ff fd49 	bl	80132c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013836:	e7b7      	b.n	80137a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8013838:	1d25      	adds	r5, r4, #4
 801383a:	6823      	ldr	r3, [r4, #0]
 801383c:	9310      	str	r3, [sp, #64]	@ 0x40
 801383e:	e7dd      	b.n	80137fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8013840:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013842:	230a      	movs	r3, #10
 8013844:	4649      	mov	r1, r9
 8013846:	6820      	ldr	r0, [r4, #0]
 8013848:	eba8 0202 	sub.w	r2, r8, r2
 801384c:	1d25      	adds	r5, r4, #4
 801384e:	b292      	uxth	r2, r2
 8013850:	f7ff fcf0 	bl	8013234 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8013854:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8013858:	2b2d      	cmp	r3, #45	@ 0x2d
 801385a:	d1cf      	bne.n	80137fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 801385c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8013860:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013862:	3302      	adds	r3, #2
 8013864:	e7ea      	b.n	801383c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 8013866:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013868:	1d25      	adds	r5, r4, #4
 801386a:	230a      	movs	r3, #10
 801386c:	eba8 0202 	sub.w	r2, r8, r2
 8013870:	b292      	uxth	r2, r2
 8013872:	4649      	mov	r1, r9
 8013874:	6820      	ldr	r0, [r4, #0]
 8013876:	f7ff fd09 	bl	801328c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801387a:	e7bf      	b.n	80137fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 801387c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801387e:	2310      	movs	r3, #16
 8013880:	4649      	mov	r1, r9
 8013882:	6820      	ldr	r0, [r4, #0]
 8013884:	eba8 0202 	sub.w	r2, r8, r2
 8013888:	1d25      	adds	r5, r4, #4
 801388a:	b292      	uxth	r2, r2
 801388c:	f7ff fcfe 	bl	801328c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8013890:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 8013894:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8013898:	2b00      	cmp	r3, #0
 801389a:	d0af      	beq.n	80137fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 801389c:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 80138a0:	2919      	cmp	r1, #25
 80138a2:	d8f7      	bhi.n	8013894 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 80138a4:	3b20      	subs	r3, #32
 80138a6:	8013      	strh	r3, [r2, #0]
 80138a8:	e7f4      	b.n	8013894 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 80138aa:	9a08      	ldr	r2, [sp, #32]
 80138ac:	2a00      	cmp	r2, #0
 80138ae:	d0ab      	beq.n	8013808 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 80138b0:	7812      	ldrb	r2, [r2, #0]
 80138b2:	e7a9      	b.n	8013808 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 80138b4:	2d00      	cmp	r5, #0
 80138b6:	f43f af48 	beq.w	801374a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 80138ba:	782d      	ldrb	r5, [r5, #0]
 80138bc:	e745      	b.n	801374a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

080138be <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80138be:	b507      	push	{r0, r1, r2, lr}
 80138c0:	9300      	str	r3, [sp, #0]
 80138c2:	4613      	mov	r3, r2
 80138c4:	2200      	movs	r2, #0
 80138c6:	f7ff fe92 	bl	80135ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80138ca:	b003      	add	sp, #12
 80138cc:	f85d fb04 	ldr.w	pc, [sp], #4

080138d0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80138d0:	b40c      	push	{r2, r3}
 80138d2:	b507      	push	{r0, r1, r2, lr}
 80138d4:	ab04      	add	r3, sp, #16
 80138d6:	f853 2b04 	ldr.w	r2, [r3], #4
 80138da:	9301      	str	r3, [sp, #4]
 80138dc:	f7ff ffef 	bl	80138be <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80138e0:	b003      	add	sp, #12
 80138e2:	f85d eb04 	ldr.w	lr, [sp], #4
 80138e6:	b002      	add	sp, #8
 80138e8:	4770      	bx	lr
	...

080138ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80138ec:	4b01      	ldr	r3, [pc, #4]	@ (80138f4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80138ee:	6018      	str	r0, [r3, #0]
 80138f0:	4770      	bx	lr
 80138f2:	bf00      	nop
 80138f4:	20016cf0 	.word	0x20016cf0

080138f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80138f8:	4b06      	ldr	r3, [pc, #24]	@ (8013914 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80138fa:	881a      	ldrh	r2, [r3, #0]
 80138fc:	4282      	cmp	r2, r0
 80138fe:	d807      	bhi.n	8013910 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8013900:	4b05      	ldr	r3, [pc, #20]	@ (8013918 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8013902:	881b      	ldrh	r3, [r3, #0]
 8013904:	4413      	add	r3, r2
 8013906:	4298      	cmp	r0, r3
 8013908:	bfac      	ite	ge
 801390a:	2000      	movge	r0, #0
 801390c:	2001      	movlt	r0, #1
 801390e:	4770      	bx	lr
 8013910:	2000      	movs	r0, #0
 8013912:	4770      	bx	lr
 8013914:	20016d10 	.word	0x20016d10
 8013918:	20016d14 	.word	0x20016d14

0801391c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801391c:	b508      	push	{r3, lr}
 801391e:	4601      	mov	r1, r0
 8013920:	f7ff ffea 	bl	80138f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8013924:	b118      	cbz	r0, 801392e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8013926:	4b02      	ldr	r3, [pc, #8]	@ (8013930 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8013928:	681b      	ldr	r3, [r3, #0]
 801392a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801392e:	bd08      	pop	{r3, pc}
 8013930:	20016cf4 	.word	0x20016cf4

08013934 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8013934:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013936:	4c24      	ldr	r4, [pc, #144]	@ (80139c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8013938:	6823      	ldr	r3, [r4, #0]
 801393a:	2b00      	cmp	r3, #0
 801393c:	d042      	beq.n	80139c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801393e:	4a23      	ldr	r2, [pc, #140]	@ (80139cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8013940:	4d23      	ldr	r5, [pc, #140]	@ (80139d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8013942:	8811      	ldrh	r1, [r2, #0]
 8013944:	f8b5 c000 	ldrh.w	ip, [r5]
 8013948:	4822      	ldr	r0, [pc, #136]	@ (80139d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801394a:	4461      	add	r1, ip
 801394c:	1c4a      	adds	r2, r1, #1
 801394e:	008f      	lsls	r7, r1, #2
 8013950:	f022 0201 	bic.w	r2, r2, #1
 8013954:	19de      	adds	r6, r3, r7
 8013956:	0412      	lsls	r2, r2, #16
 8013958:	6006      	str	r6, [r0, #0]
 801395a:	4e1f      	ldr	r6, [pc, #124]	@ (80139d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801395c:	0c12      	lsrs	r2, r2, #16
 801395e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8013962:	19da      	adds	r2, r3, r7
 8013964:	6032      	str	r2, [r6, #0]
 8013966:	220e      	movs	r2, #14
 8013968:	fb02 f20c 	mul.w	r2, r2, ip
 801396c:	3203      	adds	r2, #3
 801396e:	f022 0203 	bic.w	r2, r2, #3
 8013972:	443a      	add	r2, r7
 8013974:	4f19      	ldr	r7, [pc, #100]	@ (80139dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8013976:	4413      	add	r3, r2
 8013978:	603b      	str	r3, [r7, #0]
 801397a:	2300      	movs	r3, #0
 801397c:	4f18      	ldr	r7, [pc, #96]	@ (80139e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801397e:	469c      	mov	ip, r3
 8013980:	803b      	strh	r3, [r7, #0]
 8013982:	4f18      	ldr	r7, [pc, #96]	@ (80139e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8013984:	683f      	ldr	r7, [r7, #0]
 8013986:	1aba      	subs	r2, r7, r2
 8013988:	4f17      	ldr	r7, [pc, #92]	@ (80139e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801398a:	603a      	str	r2, [r7, #0]
 801398c:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8013990:	4a16      	ldr	r2, [pc, #88]	@ (80139ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8013992:	8013      	strh	r3, [r2, #0]
 8013994:	428b      	cmp	r3, r1
 8013996:	d10d      	bne.n	80139b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8013998:	882d      	ldrh	r5, [r5, #0]
 801399a:	2300      	movs	r3, #0
 801399c:	6830      	ldr	r0, [r6, #0]
 801399e:	240e      	movs	r4, #14
 80139a0:	429d      	cmp	r5, r3
 80139a2:	d90f      	bls.n	80139c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80139a4:	fb04 0203 	mla	r2, r4, r3, r0
 80139a8:	3301      	adds	r3, #1
 80139aa:	7b11      	ldrb	r1, [r2, #12]
 80139ac:	f36f 1145 	bfc	r1, #5, #1
 80139b0:	7311      	strb	r1, [r2, #12]
 80139b2:	e7f5      	b.n	80139a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80139b4:	6822      	ldr	r2, [r4, #0]
 80139b6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80139ba:	6802      	ldr	r2, [r0, #0]
 80139bc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80139c0:	3301      	adds	r3, #1
 80139c2:	e7e7      	b.n	8013994 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80139c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80139c6:	bf00      	nop
 80139c8:	20016cf4 	.word	0x20016cf4
 80139cc:	20016d10 	.word	0x20016d10
 80139d0:	20016d14 	.word	0x20016d14
 80139d4:	20016d08 	.word	0x20016d08
 80139d8:	20016cf8 	.word	0x20016cf8
 80139dc:	20016d00 	.word	0x20016d00
 80139e0:	20016d12 	.word	0x20016d12
 80139e4:	20016cfc 	.word	0x20016cfc
 80139e8:	20016d0c 	.word	0x20016d0c
 80139ec:	20016d04 	.word	0x20016d04

080139f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80139f0:	4b06      	ldr	r3, [pc, #24]	@ (8013a0c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80139f2:	681b      	ldr	r3, [r3, #0]
 80139f4:	b943      	cbnz	r3, 8013a08 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80139f6:	b139      	cbz	r1, 8013a08 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80139f8:	4b05      	ldr	r3, [pc, #20]	@ (8013a10 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80139fa:	801a      	strh	r2, [r3, #0]
 80139fc:	4b05      	ldr	r3, [pc, #20]	@ (8013a14 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80139fe:	6019      	str	r1, [r3, #0]
 8013a00:	4b05      	ldr	r3, [pc, #20]	@ (8013a18 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8013a02:	6018      	str	r0, [r3, #0]
 8013a04:	f7ff bf96 	b.w	8013934 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8013a08:	4770      	bx	lr
 8013a0a:	bf00      	nop
 8013a0c:	20016d00 	.word	0x20016d00
 8013a10:	20016d14 	.word	0x20016d14
 8013a14:	20016cfc 	.word	0x20016cfc
 8013a18:	20016cf4 	.word	0x20016cf4

08013a1c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8013a1c:	b470      	push	{r4, r5, r6}
 8013a1e:	4c07      	ldr	r4, [pc, #28]	@ (8013a3c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8013a20:	4605      	mov	r5, r0
 8013a22:	4610      	mov	r0, r2
 8013a24:	9a03      	ldr	r2, [sp, #12]
 8013a26:	6826      	ldr	r6, [r4, #0]
 8013a28:	b936      	cbnz	r6, 8013a38 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8013a2a:	6025      	str	r5, [r4, #0]
 8013a2c:	4c04      	ldr	r4, [pc, #16]	@ (8013a40 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8013a2e:	8021      	strh	r1, [r4, #0]
 8013a30:	4619      	mov	r1, r3
 8013a32:	bc70      	pop	{r4, r5, r6}
 8013a34:	f7ff bfdc 	b.w	80139f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8013a38:	bc70      	pop	{r4, r5, r6}
 8013a3a:	4770      	bx	lr
 8013a3c:	20016d18 	.word	0x20016d18
 8013a40:	20016d10 	.word	0x20016d10

08013a44 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8013a44:	4a12      	ldr	r2, [pc, #72]	@ (8013a90 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8013a46:	8803      	ldrh	r3, [r0, #0]
 8013a48:	8812      	ldrh	r2, [r2, #0]
 8013a4a:	4293      	cmp	r3, r2
 8013a4c:	d207      	bcs.n	8013a5e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8013a4e:	4a11      	ldr	r2, [pc, #68]	@ (8013a94 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8013a50:	2114      	movs	r1, #20
 8013a52:	6812      	ldr	r2, [r2, #0]
 8013a54:	fb01 2303 	mla	r3, r1, r3, r2
 8013a58:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8013a5c:	4770      	bx	lr
 8013a5e:	490e      	ldr	r1, [pc, #56]	@ (8013a98 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8013a60:	8809      	ldrh	r1, [r1, #0]
 8013a62:	4411      	add	r1, r2
 8013a64:	428b      	cmp	r3, r1
 8013a66:	da04      	bge.n	8013a72 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8013a68:	1a9b      	subs	r3, r3, r2
 8013a6a:	4a0c      	ldr	r2, [pc, #48]	@ (8013a9c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8013a6c:	210e      	movs	r1, #14
 8013a6e:	6812      	ldr	r2, [r2, #0]
 8013a70:	e7f0      	b.n	8013a54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8013a72:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013a76:	4293      	cmp	r3, r2
 8013a78:	d108      	bne.n	8013a8c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8013a7a:	4b09      	ldr	r3, [pc, #36]	@ (8013aa0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8013a7c:	781b      	ldrb	r3, [r3, #0]
 8013a7e:	b91b      	cbnz	r3, 8013a88 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8013a80:	4b08      	ldr	r3, [pc, #32]	@ (8013aa4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8013a82:	f9b3 0000 	ldrsh.w	r0, [r3]
 8013a86:	4770      	bx	lr
 8013a88:	4b07      	ldr	r3, [pc, #28]	@ (8013aa8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8013a8a:	e7fa      	b.n	8013a82 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8013a8c:	2000      	movs	r0, #0
 8013a8e:	4770      	bx	lr
 8013a90:	20016d10 	.word	0x20016d10
 8013a94:	20016d18 	.word	0x20016d18
 8013a98:	20016d14 	.word	0x20016d14
 8013a9c:	20016cf8 	.word	0x20016cf8
 8013aa0:	20016c80 	.word	0x20016c80
 8013aa4:	20016c82 	.word	0x20016c82
 8013aa8:	20016c84 	.word	0x20016c84

08013aac <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8013aac:	4a12      	ldr	r2, [pc, #72]	@ (8013af8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8013aae:	8803      	ldrh	r3, [r0, #0]
 8013ab0:	8812      	ldrh	r2, [r2, #0]
 8013ab2:	4293      	cmp	r3, r2
 8013ab4:	d207      	bcs.n	8013ac6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8013ab6:	4a11      	ldr	r2, [pc, #68]	@ (8013afc <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8013ab8:	2114      	movs	r1, #20
 8013aba:	6812      	ldr	r2, [r2, #0]
 8013abc:	fb01 2303 	mla	r3, r1, r3, r2
 8013ac0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8013ac4:	4770      	bx	lr
 8013ac6:	490e      	ldr	r1, [pc, #56]	@ (8013b00 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8013ac8:	8809      	ldrh	r1, [r1, #0]
 8013aca:	4411      	add	r1, r2
 8013acc:	428b      	cmp	r3, r1
 8013ace:	da04      	bge.n	8013ada <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8013ad0:	1a9b      	subs	r3, r3, r2
 8013ad2:	4a0c      	ldr	r2, [pc, #48]	@ (8013b04 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8013ad4:	210e      	movs	r1, #14
 8013ad6:	6812      	ldr	r2, [r2, #0]
 8013ad8:	e7f0      	b.n	8013abc <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8013ada:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013ade:	4293      	cmp	r3, r2
 8013ae0:	d108      	bne.n	8013af4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8013ae2:	4b09      	ldr	r3, [pc, #36]	@ (8013b08 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8013ae4:	781b      	ldrb	r3, [r3, #0]
 8013ae6:	b91b      	cbnz	r3, 8013af0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8013ae8:	4b08      	ldr	r3, [pc, #32]	@ (8013b0c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8013aea:	f9b3 0000 	ldrsh.w	r0, [r3]
 8013aee:	4770      	bx	lr
 8013af0:	4b07      	ldr	r3, [pc, #28]	@ (8013b10 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8013af2:	e7fa      	b.n	8013aea <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8013af4:	2000      	movs	r0, #0
 8013af6:	4770      	bx	lr
 8013af8:	20016d10 	.word	0x20016d10
 8013afc:	20016d18 	.word	0x20016d18
 8013b00:	20016d14 	.word	0x20016d14
 8013b04:	20016cf8 	.word	0x20016cf8
 8013b08:	20016c80 	.word	0x20016c80
 8013b0c:	20016c84 	.word	0x20016c84
 8013b10:	20016c82 	.word	0x20016c82

08013b14 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8013b14:	4a1f      	ldr	r2, [pc, #124]	@ (8013b94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8013b16:	b510      	push	{r4, lr}
 8013b18:	880b      	ldrh	r3, [r1, #0]
 8013b1a:	8812      	ldrh	r2, [r2, #0]
 8013b1c:	4293      	cmp	r3, r2
 8013b1e:	d213      	bcs.n	8013b48 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8013b20:	4a1d      	ldr	r2, [pc, #116]	@ (8013b98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8013b22:	2114      	movs	r1, #20
 8013b24:	6812      	ldr	r2, [r2, #0]
 8013b26:	fb01 2303 	mla	r3, r1, r3, r2
 8013b2a:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8013b2e:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8013b32:	8a1a      	ldrh	r2, [r3, #16]
 8013b34:	8a5b      	ldrh	r3, [r3, #18]
 8013b36:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013b3a:	8004      	strh	r4, [r0, #0]
 8013b3c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8013b40:	8041      	strh	r1, [r0, #2]
 8013b42:	8082      	strh	r2, [r0, #4]
 8013b44:	80c3      	strh	r3, [r0, #6]
 8013b46:	e00e      	b.n	8013b66 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8013b48:	4914      	ldr	r1, [pc, #80]	@ (8013b9c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8013b4a:	8809      	ldrh	r1, [r1, #0]
 8013b4c:	4411      	add	r1, r2
 8013b4e:	428b      	cmp	r3, r1
 8013b50:	da0a      	bge.n	8013b68 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8013b52:	1a9b      	subs	r3, r3, r2
 8013b54:	4a12      	ldr	r2, [pc, #72]	@ (8013ba0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8013b56:	210e      	movs	r1, #14
 8013b58:	6812      	ldr	r2, [r2, #0]
 8013b5a:	fb01 2303 	mla	r3, r1, r3, r2
 8013b5e:	681a      	ldr	r2, [r3, #0]
 8013b60:	6002      	str	r2, [r0, #0]
 8013b62:	685a      	ldr	r2, [r3, #4]
 8013b64:	6042      	str	r2, [r0, #4]
 8013b66:	bd10      	pop	{r4, pc}
 8013b68:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013b6c:	4293      	cmp	r3, r2
 8013b6e:	d10b      	bne.n	8013b88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8013b70:	4b0c      	ldr	r3, [pc, #48]	@ (8013ba4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8013b72:	f9b3 1000 	ldrsh.w	r1, [r3]
 8013b76:	4b0c      	ldr	r3, [pc, #48]	@ (8013ba8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8013b78:	8081      	strh	r1, [r0, #4]
 8013b7a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013b7e:	2300      	movs	r3, #0
 8013b80:	80c2      	strh	r2, [r0, #6]
 8013b82:	8003      	strh	r3, [r0, #0]
 8013b84:	8043      	strh	r3, [r0, #2]
 8013b86:	e7ee      	b.n	8013b66 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8013b88:	2300      	movs	r3, #0
 8013b8a:	8003      	strh	r3, [r0, #0]
 8013b8c:	8043      	strh	r3, [r0, #2]
 8013b8e:	8083      	strh	r3, [r0, #4]
 8013b90:	e7d8      	b.n	8013b44 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8013b92:	bf00      	nop
 8013b94:	20016d10 	.word	0x20016d10
 8013b98:	20016d18 	.word	0x20016d18
 8013b9c:	20016d14 	.word	0x20016d14
 8013ba0:	20016cf8 	.word	0x20016cf8
 8013ba4:	20016c7c 	.word	0x20016c7c
 8013ba8:	20016c7e 	.word	0x20016c7e

08013bac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8013bac:	4a17      	ldr	r2, [pc, #92]	@ (8013c0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8013bae:	8803      	ldrh	r3, [r0, #0]
 8013bb0:	8812      	ldrh	r2, [r2, #0]
 8013bb2:	4293      	cmp	r3, r2
 8013bb4:	d213      	bcs.n	8013bde <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8013bb6:	4a16      	ldr	r2, [pc, #88]	@ (8013c10 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8013bb8:	2114      	movs	r1, #20
 8013bba:	6812      	ldr	r2, [r2, #0]
 8013bbc:	fb01 2303 	mla	r3, r1, r3, r2
 8013bc0:	8a1a      	ldrh	r2, [r3, #16]
 8013bc2:	8919      	ldrh	r1, [r3, #8]
 8013bc4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013bc8:	428a      	cmp	r2, r1
 8013bca:	db1d      	blt.n	8013c08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013bcc:	8a58      	ldrh	r0, [r3, #18]
 8013bce:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8013bd2:	895b      	ldrh	r3, [r3, #10]
 8013bd4:	4298      	cmp	r0, r3
 8013bd6:	bfac      	ite	ge
 8013bd8:	2000      	movge	r0, #0
 8013bda:	2001      	movlt	r0, #1
 8013bdc:	4770      	bx	lr
 8013bde:	490d      	ldr	r1, [pc, #52]	@ (8013c14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8013be0:	8809      	ldrh	r1, [r1, #0]
 8013be2:	4411      	add	r1, r2
 8013be4:	428b      	cmp	r3, r1
 8013be6:	da0d      	bge.n	8013c04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8013be8:	1a9b      	subs	r3, r3, r2
 8013bea:	4a0b      	ldr	r2, [pc, #44]	@ (8013c18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8013bec:	210e      	movs	r1, #14
 8013bee:	6812      	ldr	r2, [r2, #0]
 8013bf0:	fb01 2303 	mla	r3, r1, r3, r2
 8013bf4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8013bf8:	891a      	ldrh	r2, [r3, #8]
 8013bfa:	4291      	cmp	r1, r2
 8013bfc:	db04      	blt.n	8013c08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013bfe:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8013c02:	e7e6      	b.n	8013bd2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8013c04:	2000      	movs	r0, #0
 8013c06:	4770      	bx	lr
 8013c08:	2001      	movs	r0, #1
 8013c0a:	4770      	bx	lr
 8013c0c:	20016d10 	.word	0x20016d10
 8013c10:	20016d18 	.word	0x20016d18
 8013c14:	20016d14 	.word	0x20016d14
 8013c18:	20016cf8 	.word	0x20016cf8

08013c1c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013c1c:	4a12      	ldr	r2, [pc, #72]	@ (8013c68 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013c1e:	8803      	ldrh	r3, [r0, #0]
 8013c20:	8811      	ldrh	r1, [r2, #0]
 8013c22:	428b      	cmp	r3, r1
 8013c24:	d20b      	bcs.n	8013c3e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8013c26:	4a11      	ldr	r2, [pc, #68]	@ (8013c6c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013c28:	6812      	ldr	r2, [r2, #0]
 8013c2a:	b112      	cbz	r2, 8013c32 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013c2c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013c30:	b9c0      	cbnz	r0, 8013c64 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8013c32:	4a0f      	ldr	r2, [pc, #60]	@ (8013c70 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8013c34:	6811      	ldr	r1, [r2, #0]
 8013c36:	2214      	movs	r2, #20
 8013c38:	4353      	muls	r3, r2
 8013c3a:	58c8      	ldr	r0, [r1, r3]
 8013c3c:	4770      	bx	lr
 8013c3e:	4a0d      	ldr	r2, [pc, #52]	@ (8013c74 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8013c40:	8812      	ldrh	r2, [r2, #0]
 8013c42:	440a      	add	r2, r1
 8013c44:	4293      	cmp	r3, r2
 8013c46:	da04      	bge.n	8013c52 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8013c48:	4a08      	ldr	r2, [pc, #32]	@ (8013c6c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013c4a:	6812      	ldr	r2, [r2, #0]
 8013c4c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013c50:	4770      	bx	lr
 8013c52:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013c56:	4293      	cmp	r3, r2
 8013c58:	d103      	bne.n	8013c62 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8013c5a:	4b07      	ldr	r3, [pc, #28]	@ (8013c78 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8013c5c:	681b      	ldr	r3, [r3, #0]
 8013c5e:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8013c60:	4770      	bx	lr
 8013c62:	2000      	movs	r0, #0
 8013c64:	4770      	bx	lr
 8013c66:	bf00      	nop
 8013c68:	20016d10 	.word	0x20016d10
 8013c6c:	20016cf4 	.word	0x20016cf4
 8013c70:	20016d18 	.word	0x20016d18
 8013c74:	20016d14 	.word	0x20016d14
 8013c78:	20016c88 	.word	0x20016c88

08013c7c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8013c7c:	4b24      	ldr	r3, [pc, #144]	@ (8013d10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8013c7e:	8802      	ldrh	r2, [r0, #0]
 8013c80:	8818      	ldrh	r0, [r3, #0]
 8013c82:	4282      	cmp	r2, r0
 8013c84:	d221      	bcs.n	8013cca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8013c86:	4b23      	ldr	r3, [pc, #140]	@ (8013d14 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8013c88:	6819      	ldr	r1, [r3, #0]
 8013c8a:	2314      	movs	r3, #20
 8013c8c:	fb03 1302 	mla	r3, r3, r2, r1
 8013c90:	6858      	ldr	r0, [r3, #4]
 8013c92:	2800      	cmp	r0, #0
 8013c94:	d03a      	beq.n	8013d0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013c96:	4920      	ldr	r1, [pc, #128]	@ (8013d18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013c98:	6809      	ldr	r1, [r1, #0]
 8013c9a:	2900      	cmp	r1, #0
 8013c9c:	d036      	beq.n	8013d0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013c9e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8013ca2:	2900      	cmp	r1, #0
 8013ca4:	d032      	beq.n	8013d0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013ca6:	891a      	ldrh	r2, [r3, #8]
 8013ca8:	8958      	ldrh	r0, [r3, #10]
 8013caa:	4350      	muls	r0, r2
 8013cac:	7c5a      	ldrb	r2, [r3, #17]
 8013cae:	7cdb      	ldrb	r3, [r3, #19]
 8013cb0:	0952      	lsrs	r2, r2, #5
 8013cb2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8013cb6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8013cba:	2b0b      	cmp	r3, #11
 8013cbc:	bf18      	it	ne
 8013cbe:	0040      	lslne	r0, r0, #1
 8013cc0:	3003      	adds	r0, #3
 8013cc2:	f020 0003 	bic.w	r0, r0, #3
 8013cc6:	4408      	add	r0, r1
 8013cc8:	4770      	bx	lr
 8013cca:	4b14      	ldr	r3, [pc, #80]	@ (8013d1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8013ccc:	881b      	ldrh	r3, [r3, #0]
 8013cce:	4403      	add	r3, r0
 8013cd0:	429a      	cmp	r2, r3
 8013cd2:	da1a      	bge.n	8013d0a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8013cd4:	4b12      	ldr	r3, [pc, #72]	@ (8013d20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8013cd6:	1a10      	subs	r0, r2, r0
 8013cd8:	210e      	movs	r1, #14
 8013cda:	681b      	ldr	r3, [r3, #0]
 8013cdc:	fb01 3000 	mla	r0, r1, r0, r3
 8013ce0:	7b03      	ldrb	r3, [r0, #12]
 8013ce2:	f003 031f 	and.w	r3, r3, #31
 8013ce6:	2b0b      	cmp	r3, #11
 8013ce8:	d10b      	bne.n	8013d02 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8013cea:	8903      	ldrh	r3, [r0, #8]
 8013cec:	8940      	ldrh	r0, [r0, #10]
 8013cee:	4358      	muls	r0, r3
 8013cf0:	4b09      	ldr	r3, [pc, #36]	@ (8013d18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013cf2:	3003      	adds	r0, #3
 8013cf4:	6819      	ldr	r1, [r3, #0]
 8013cf6:	f020 0303 	bic.w	r3, r0, #3
 8013cfa:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8013cfe:	4418      	add	r0, r3
 8013d00:	4770      	bx	lr
 8013d02:	2b0d      	cmp	r3, #13
 8013d04:	d101      	bne.n	8013d0a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8013d06:	300d      	adds	r0, #13
 8013d08:	4770      	bx	lr
 8013d0a:	2000      	movs	r0, #0
 8013d0c:	4770      	bx	lr
 8013d0e:	bf00      	nop
 8013d10:	20016d10 	.word	0x20016d10
 8013d14:	20016d18 	.word	0x20016d18
 8013d18:	20016cf4 	.word	0x20016cf4
 8013d1c:	20016d14 	.word	0x20016d14
 8013d20:	20016cf8 	.word	0x20016cf8

08013d24 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8013d24:	4a17      	ldr	r2, [pc, #92]	@ (8013d84 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8013d26:	b510      	push	{r4, lr}
 8013d28:	8803      	ldrh	r3, [r0, #0]
 8013d2a:	8812      	ldrh	r2, [r2, #0]
 8013d2c:	4293      	cmp	r3, r2
 8013d2e:	d20c      	bcs.n	8013d4a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8013d30:	4a15      	ldr	r2, [pc, #84]	@ (8013d88 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8013d32:	2114      	movs	r1, #20
 8013d34:	6812      	ldr	r2, [r2, #0]
 8013d36:	fb01 2303 	mla	r3, r1, r3, r2
 8013d3a:	7c58      	ldrb	r0, [r3, #17]
 8013d3c:	0942      	lsrs	r2, r0, #5
 8013d3e:	7cd8      	ldrb	r0, [r3, #19]
 8013d40:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8013d44:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8013d48:	bd10      	pop	{r4, pc}
 8013d4a:	4910      	ldr	r1, [pc, #64]	@ (8013d8c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8013d4c:	8809      	ldrh	r1, [r1, #0]
 8013d4e:	4411      	add	r1, r2
 8013d50:	428b      	cmp	r3, r1
 8013d52:	da09      	bge.n	8013d68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8013d54:	1a9b      	subs	r3, r3, r2
 8013d56:	4a0e      	ldr	r2, [pc, #56]	@ (8013d90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8013d58:	210e      	movs	r1, #14
 8013d5a:	6812      	ldr	r2, [r2, #0]
 8013d5c:	fb01 2303 	mla	r3, r1, r3, r2
 8013d60:	7b18      	ldrb	r0, [r3, #12]
 8013d62:	f000 001f 	and.w	r0, r0, #31
 8013d66:	e7ef      	b.n	8013d48 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8013d68:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013d6c:	4293      	cmp	r3, r2
 8013d6e:	d106      	bne.n	8013d7e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8013d70:	f7ee fbde 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 8013d74:	6803      	ldr	r3, [r0, #0]
 8013d76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013d7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013d7c:	4718      	bx	r3
 8013d7e:	2000      	movs	r0, #0
 8013d80:	e7e2      	b.n	8013d48 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8013d82:	bf00      	nop
 8013d84:	20016d10 	.word	0x20016d10
 8013d88:	20016d18 	.word	0x20016d18
 8013d8c:	20016d14 	.word	0x20016d14
 8013d90:	20016cf8 	.word	0x20016cf8

08013d94 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8013d94:	2010      	movs	r0, #16
 8013d96:	4770      	bx	lr

08013d98 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8013d98:	2000      	movs	r0, #0
 8013d9a:	4770      	bx	lr

08013d9c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8013d9c:	4b02      	ldr	r3, [pc, #8]	@ (8013da8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8013d9e:	8818      	ldrh	r0, [r3, #0]
 8013da0:	0040      	lsls	r0, r0, #1
 8013da2:	b280      	uxth	r0, r0
 8013da4:	4770      	bx	lr
 8013da6:	bf00      	nop
 8013da8:	20016c82 	.word	0x20016c82

08013dac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013dac:	2bff      	cmp	r3, #255	@ 0xff
 8013dae:	d050      	beq.n	8013e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8013db0:	2a0b      	cmp	r2, #11
 8013db2:	d04a      	beq.n	8013e4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8013db4:	d80e      	bhi.n	8013dd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8013db6:	2a03      	cmp	r2, #3
 8013db8:	d03f      	beq.n	8013e3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8013dba:	d804      	bhi.n	8013dc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8013dbc:	2a01      	cmp	r2, #1
 8013dbe:	d03e      	beq.n	8013e3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8013dc0:	d93f      	bls.n	8013e42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8013dc2:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8013dc4:	4770      	bx	lr
 8013dc6:	2a09      	cmp	r2, #9
 8013dc8:	d03f      	beq.n	8013e4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8013dca:	d83c      	bhi.n	8013e46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8013dcc:	2a08      	cmp	r2, #8
 8013dce:	d03a      	beq.n	8013e46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8013dd0:	2000      	movs	r0, #0
 8013dd2:	4770      	bx	lr
 8013dd4:	2a2f      	cmp	r2, #47	@ 0x2f
 8013dd6:	d024      	beq.n	8013e22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8013dd8:	d80d      	bhi.n	8013df6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8013dda:	2a2d      	cmp	r2, #45	@ 0x2d
 8013ddc:	d014      	beq.n	8013e08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8013dde:	d826      	bhi.n	8013e2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8013de0:	2a2c      	cmp	r2, #44	@ 0x2c
 8013de2:	d1f5      	bne.n	8013dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013de4:	684b      	ldr	r3, [r1, #4]
 8013de6:	781b      	ldrb	r3, [r3, #0]
 8013de8:	2b01      	cmp	r3, #1
 8013dea:	d018      	beq.n	8013e1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8013dec:	d323      	bcc.n	8013e36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8013dee:	2b02      	cmp	r3, #2
 8013df0:	d1ee      	bne.n	8013dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013df2:	68c0      	ldr	r0, [r0, #12]
 8013df4:	4770      	bx	lr
 8013df6:	2a31      	cmp	r2, #49	@ 0x31
 8013df8:	d004      	beq.n	8013e04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8013dfa:	d328      	bcc.n	8013e4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8013dfc:	2a32      	cmp	r2, #50	@ 0x32
 8013dfe:	d026      	beq.n	8013e4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8013e00:	2a33      	cmp	r2, #51	@ 0x33
 8013e02:	d1e5      	bne.n	8013dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013e04:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 8013e06:	4770      	bx	lr
 8013e08:	684b      	ldr	r3, [r1, #4]
 8013e0a:	781b      	ldrb	r3, [r3, #0]
 8013e0c:	2b01      	cmp	r3, #1
 8013e0e:	d004      	beq.n	8013e1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8013e10:	d30b      	bcc.n	8013e2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013e12:	2b02      	cmp	r3, #2
 8013e14:	d1dc      	bne.n	8013dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013e16:	6940      	ldr	r0, [r0, #20]
 8013e18:	4770      	bx	lr
 8013e1a:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8013e1c:	4770      	bx	lr
 8013e1e:	69c0      	ldr	r0, [r0, #28]
 8013e20:	4770      	bx	lr
 8013e22:	684b      	ldr	r3, [r1, #4]
 8013e24:	781b      	ldrb	r3, [r3, #0]
 8013e26:	2b00      	cmp	r3, #0
 8013e28:	d1d2      	bne.n	8013dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013e2a:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8013e2c:	4770      	bx	lr
 8013e2e:	684b      	ldr	r3, [r1, #4]
 8013e30:	781b      	ldrb	r3, [r3, #0]
 8013e32:	2b00      	cmp	r3, #0
 8013e34:	d1cc      	bne.n	8013dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013e36:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8013e38:	4770      	bx	lr
 8013e3a:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8013e3c:	4770      	bx	lr
 8013e3e:	6d40      	ldr	r0, [r0, #84]	@ 0x54
 8013e40:	4770      	bx	lr
 8013e42:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 8013e44:	4770      	bx	lr
 8013e46:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
 8013e48:	4770      	bx	lr
 8013e4a:	6e40      	ldr	r0, [r0, #100]	@ 0x64
 8013e4c:	4770      	bx	lr
 8013e4e:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
 8013e50:	4770      	bx	lr
 8013e52:	2a0b      	cmp	r2, #11
 8013e54:	d049      	beq.n	8013eea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8013e56:	d80e      	bhi.n	8013e76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8013e58:	2a03      	cmp	r2, #3
 8013e5a:	d040      	beq.n	8013ede <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8013e5c:	d804      	bhi.n	8013e68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8013e5e:	2a01      	cmp	r2, #1
 8013e60:	d03f      	beq.n	8013ee2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8013e62:	d940      	bls.n	8013ee6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8013e64:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 8013e66:	4770      	bx	lr
 8013e68:	2a09      	cmp	r2, #9
 8013e6a:	d03e      	beq.n	8013eea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8013e6c:	d801      	bhi.n	8013e72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8013e6e:	2a08      	cmp	r2, #8
 8013e70:	d1ae      	bne.n	8013dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013e72:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8013e74:	4770      	bx	lr
 8013e76:	2a2f      	cmp	r2, #47	@ 0x2f
 8013e78:	d024      	beq.n	8013ec4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8013e7a:	d80d      	bhi.n	8013e98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8013e7c:	2a2d      	cmp	r2, #45	@ 0x2d
 8013e7e:	d014      	beq.n	8013eaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8013e80:	d826      	bhi.n	8013ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8013e82:	2a2c      	cmp	r2, #44	@ 0x2c
 8013e84:	d1a4      	bne.n	8013dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013e86:	684b      	ldr	r3, [r1, #4]
 8013e88:	781b      	ldrb	r3, [r3, #0]
 8013e8a:	2b01      	cmp	r3, #1
 8013e8c:	d018      	beq.n	8013ec0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8013e8e:	d324      	bcc.n	8013eda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8013e90:	2b02      	cmp	r3, #2
 8013e92:	d19d      	bne.n	8013dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013e94:	6900      	ldr	r0, [r0, #16]
 8013e96:	4770      	bx	lr
 8013e98:	2a31      	cmp	r2, #49	@ 0x31
 8013e9a:	d004      	beq.n	8013ea6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8013e9c:	d327      	bcc.n	8013eee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013e9e:	2a32      	cmp	r2, #50	@ 0x32
 8013ea0:	d025      	beq.n	8013eee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013ea2:	2a33      	cmp	r2, #51	@ 0x33
 8013ea4:	d194      	bne.n	8013dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013ea6:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 8013ea8:	4770      	bx	lr
 8013eaa:	684b      	ldr	r3, [r1, #4]
 8013eac:	781b      	ldrb	r3, [r3, #0]
 8013eae:	2b01      	cmp	r3, #1
 8013eb0:	d004      	beq.n	8013ebc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8013eb2:	d30b      	bcc.n	8013ecc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8013eb4:	2b02      	cmp	r3, #2
 8013eb6:	d18b      	bne.n	8013dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013eb8:	6980      	ldr	r0, [r0, #24]
 8013eba:	4770      	bx	lr
 8013ebc:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8013ebe:	4770      	bx	lr
 8013ec0:	6a00      	ldr	r0, [r0, #32]
 8013ec2:	4770      	bx	lr
 8013ec4:	684b      	ldr	r3, [r1, #4]
 8013ec6:	781b      	ldrb	r3, [r3, #0]
 8013ec8:	2b00      	cmp	r3, #0
 8013eca:	d181      	bne.n	8013dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013ecc:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8013ece:	4770      	bx	lr
 8013ed0:	684b      	ldr	r3, [r1, #4]
 8013ed2:	781b      	ldrb	r3, [r3, #0]
 8013ed4:	2b00      	cmp	r3, #0
 8013ed6:	f47f af7b 	bne.w	8013dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013eda:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8013edc:	4770      	bx	lr
 8013ede:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 8013ee0:	4770      	bx	lr
 8013ee2:	6d80      	ldr	r0, [r0, #88]	@ 0x58
 8013ee4:	4770      	bx	lr
 8013ee6:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8013ee8:	4770      	bx	lr
 8013eea:	6e80      	ldr	r0, [r0, #104]	@ 0x68
 8013eec:	4770      	bx	lr
 8013eee:	6f00      	ldr	r0, [r0, #112]	@ 0x70
 8013ef0:	4770      	bx	lr

08013ef2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013ef2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ef6:	b087      	sub	sp, #28
 8013ef8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8013efa:	9205      	str	r2, [sp, #20]
 8013efc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013f00:	9101      	str	r1, [sp, #4]
 8013f02:	9202      	str	r2, [sp, #8]
 8013f04:	6841      	ldr	r1, [r0, #4]
 8013f06:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8013f0a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013f0e:	fb01 2404 	mla	r4, r1, r4, r2
 8013f12:	6802      	ldr	r2, [r0, #0]
 8013f14:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013f18:	f8de 2000 	ldr.w	r2, [lr]
 8013f1c:	9203      	str	r2, [sp, #12]
 8013f1e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013f22:	3204      	adds	r2, #4
 8013f24:	9204      	str	r2, [sp, #16]
 8013f26:	9a02      	ldr	r2, [sp, #8]
 8013f28:	43d6      	mvns	r6, r2
 8013f2a:	b2f6      	uxtb	r6, r6
 8013f2c:	9a01      	ldr	r2, [sp, #4]
 8013f2e:	2a00      	cmp	r2, #0
 8013f30:	dc03      	bgt.n	8013f3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013f32:	9a05      	ldr	r2, [sp, #20]
 8013f34:	2a00      	cmp	r2, #0
 8013f36:	f340 8129 	ble.w	801418c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013f3a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013f3c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013f40:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013f44:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013f46:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013f4a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013f4e:	2b00      	cmp	r3, #0
 8013f50:	dd0e      	ble.n	8013f70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013f52:	1408      	asrs	r0, r1, #16
 8013f54:	d405      	bmi.n	8013f62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013f56:	4560      	cmp	r0, ip
 8013f58:	da03      	bge.n	8013f62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013f5a:	1410      	asrs	r0, r2, #16
 8013f5c:	d401      	bmi.n	8013f62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013f5e:	42b8      	cmp	r0, r7
 8013f60:	db07      	blt.n	8013f72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013f62:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013f64:	3b01      	subs	r3, #1
 8013f66:	3402      	adds	r4, #2
 8013f68:	4401      	add	r1, r0
 8013f6a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013f6c:	4402      	add	r2, r0
 8013f6e:	e7ee      	b.n	8013f4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013f70:	d071      	beq.n	8014056 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013f72:	1e58      	subs	r0, r3, #1
 8013f74:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013f76:	fb05 1500 	mla	r5, r5, r0, r1
 8013f7a:	142d      	asrs	r5, r5, #16
 8013f7c:	d45f      	bmi.n	801403e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013f7e:	4565      	cmp	r5, ip
 8013f80:	da5d      	bge.n	801403e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013f82:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013f84:	fb05 2000 	mla	r0, r5, r0, r2
 8013f88:	1400      	asrs	r0, r0, #16
 8013f8a:	d458      	bmi.n	801403e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013f8c:	42b8      	cmp	r0, r7
 8013f8e:	da56      	bge.n	801403e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013f90:	4699      	mov	r9, r3
 8013f92:	46a2      	mov	sl, r4
 8013f94:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8013f98:	f1b9 0f00 	cmp.w	r9, #0
 8013f9c:	dd57      	ble.n	801404e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8013f9e:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8013fa2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013fa6:	9803      	ldr	r0, [sp, #12]
 8013fa8:	140d      	asrs	r5, r1, #16
 8013faa:	f109 39ff 	add.w	r9, r9, #4294967295
 8013fae:	fb07 000c 	mla	r0, r7, ip, r0
 8013fb2:	5d40      	ldrb	r0, [r0, r5]
 8013fb4:	9d04      	ldr	r5, [sp, #16]
 8013fb6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013fba:	f8ba 5000 	ldrh.w	r5, [sl]
 8013fbe:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013fc2:	122f      	asrs	r7, r5, #8
 8013fc4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013fc8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013fcc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013fd0:	00ed      	lsls	r5, r5, #3
 8013fd2:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8013fd6:	fb17 f706 	smulbb	r7, r7, r6
 8013fda:	b2ed      	uxtb	r5, r5
 8013fdc:	fb18 f806 	smulbb	r8, r8, r6
 8013fe0:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8013fe4:	10c7      	asrs	r7, r0, #3
 8013fe6:	fb15 f506 	smulbb	r5, r5, r6
 8013fea:	00c0      	lsls	r0, r0, #3
 8013fec:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013ff0:	fa1f fc8c 	uxth.w	ip, ip
 8013ff4:	b2c0      	uxtb	r0, r0
 8013ff6:	fb07 870b 	mla	r7, r7, fp, r8
 8013ffa:	fb00 500b 	mla	r0, r0, fp, r5
 8013ffe:	f10c 0501 	add.w	r5, ip, #1
 8014002:	b2bf      	uxth	r7, r7
 8014004:	b280      	uxth	r0, r0
 8014006:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801400a:	f107 0801 	add.w	r8, r7, #1
 801400e:	1c45      	adds	r5, r0, #1
 8014010:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014014:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014018:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801401c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801401e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014022:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014026:	4401      	add	r1, r0
 8014028:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801402c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801402e:	ea45 0c0c 	orr.w	ip, r5, ip
 8014032:	4402      	add	r2, r0
 8014034:	ea4c 0c08 	orr.w	ip, ip, r8
 8014038:	f82a cb02 	strh.w	ip, [sl], #2
 801403c:	e7ac      	b.n	8013f98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801403e:	f04f 0800 	mov.w	r8, #0
 8014042:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8014046:	eb03 0008 	add.w	r0, r3, r8
 801404a:	2800      	cmp	r0, #0
 801404c:	dc41      	bgt.n	80140d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801404e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014052:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014056:	9b01      	ldr	r3, [sp, #4]
 8014058:	2b00      	cmp	r3, #0
 801405a:	f340 8097 	ble.w	801418c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801405e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8014062:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014064:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014068:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801406c:	eef0 6a62 	vmov.f32	s13, s5
 8014070:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014074:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014078:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801407c:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8014080:	eef0 6a43 	vmov.f32	s13, s6
 8014084:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014088:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801408c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014090:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014094:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014098:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801409c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80140a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80140a4:	ee12 2a90 	vmov	r2, s5
 80140a8:	eef0 2a47 	vmov.f32	s5, s14
 80140ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80140b0:	ee13 2a10 	vmov	r2, s6
 80140b4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80140b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80140b8:	eeb0 3a67 	vmov.f32	s6, s15
 80140bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80140c0:	9314      	str	r3, [sp, #80]	@ 0x50
 80140c2:	9b01      	ldr	r3, [sp, #4]
 80140c4:	9a05      	ldr	r2, [sp, #20]
 80140c6:	3b01      	subs	r3, #1
 80140c8:	9301      	str	r3, [sp, #4]
 80140ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80140cc:	bf08      	it	eq
 80140ce:	4613      	moveq	r3, r2
 80140d0:	e72c      	b.n	8013f2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80140d2:	140f      	asrs	r7, r1, #16
 80140d4:	d453      	bmi.n	801417e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80140d6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80140da:	42bd      	cmp	r5, r7
 80140dc:	dd4f      	ble.n	801417e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80140de:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80140e2:	d44c      	bmi.n	801417e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80140e4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80140e8:	4560      	cmp	r0, ip
 80140ea:	dd48      	ble.n	801417e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80140ec:	9803      	ldr	r0, [sp, #12]
 80140ee:	b22d      	sxth	r5, r5
 80140f0:	fb0c 0505 	mla	r5, ip, r5, r0
 80140f4:	5de8      	ldrb	r0, [r5, r7]
 80140f6:	9d04      	ldr	r5, [sp, #16]
 80140f8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80140fc:	f06f 0501 	mvn.w	r5, #1
 8014100:	fb05 fb08 	mul.w	fp, r5, r8
 8014104:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014108:	f834 500b 	ldrh.w	r5, [r4, fp]
 801410c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014110:	122f      	asrs	r7, r5, #8
 8014112:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014116:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801411a:	00ed      	lsls	r5, r5, #3
 801411c:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8014120:	fb17 f706 	smulbb	r7, r7, r6
 8014124:	b2ed      	uxtb	r5, r5
 8014126:	fb19 f906 	smulbb	r9, r9, r6
 801412a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801412e:	10c7      	asrs	r7, r0, #3
 8014130:	fb15 f506 	smulbb	r5, r5, r6
 8014134:	00c0      	lsls	r0, r0, #3
 8014136:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801413a:	fa1f fc8c 	uxth.w	ip, ip
 801413e:	b2c0      	uxtb	r0, r0
 8014140:	fb07 970a 	mla	r7, r7, sl, r9
 8014144:	fb00 500a 	mla	r0, r0, sl, r5
 8014148:	f10c 0501 	add.w	r5, ip, #1
 801414c:	b2bf      	uxth	r7, r7
 801414e:	b280      	uxth	r0, r0
 8014150:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014154:	f107 0901 	add.w	r9, r7, #1
 8014158:	1c45      	adds	r5, r0, #1
 801415a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801415e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014162:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014166:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801416a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801416e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8014172:	ea45 0c0c 	orr.w	ip, r5, ip
 8014176:	ea4c 0c09 	orr.w	ip, ip, r9
 801417a:	f824 c00b 	strh.w	ip, [r4, fp]
 801417e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014180:	f108 38ff 	add.w	r8, r8, #4294967295
 8014184:	4401      	add	r1, r0
 8014186:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8014188:	4402      	add	r2, r0
 801418a:	e75c      	b.n	8014046 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801418c:	b007      	add	sp, #28
 801418e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014192 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014192:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014196:	b085      	sub	sp, #20
 8014198:	4693      	mov	fp, r2
 801419a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801419e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80141a0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80141a2:	6870      	ldr	r0, [r6, #4]
 80141a4:	9100      	str	r1, [sp, #0]
 80141a6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80141aa:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80141ae:	fb00 2404 	mla	r4, r0, r4, r2
 80141b2:	6832      	ldr	r2, [r6, #0]
 80141b4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80141b8:	682a      	ldr	r2, [r5, #0]
 80141ba:	9201      	str	r2, [sp, #4]
 80141bc:	686a      	ldr	r2, [r5, #4]
 80141be:	3204      	adds	r2, #4
 80141c0:	9202      	str	r2, [sp, #8]
 80141c2:	9a00      	ldr	r2, [sp, #0]
 80141c4:	2a00      	cmp	r2, #0
 80141c6:	dc03      	bgt.n	80141d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80141c8:	f1bb 0f00 	cmp.w	fp, #0
 80141cc:	f340 80a0 	ble.w	8014310 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80141d0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80141d2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80141d6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80141da:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80141dc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80141e0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80141e4:	2b00      	cmp	r3, #0
 80141e6:	dd0c      	ble.n	8014202 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80141e8:	1406      	asrs	r6, r0, #16
 80141ea:	d405      	bmi.n	80141f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80141ec:	454e      	cmp	r6, r9
 80141ee:	da03      	bge.n	80141f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80141f0:	1416      	asrs	r6, r2, #16
 80141f2:	d401      	bmi.n	80141f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80141f4:	4546      	cmp	r6, r8
 80141f6:	db05      	blt.n	8014204 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80141f8:	4470      	add	r0, lr
 80141fa:	4462      	add	r2, ip
 80141fc:	3b01      	subs	r3, #1
 80141fe:	3402      	adds	r4, #2
 8014200:	e7f0      	b.n	80141e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014202:	d00f      	beq.n	8014224 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014204:	1e5e      	subs	r6, r3, #1
 8014206:	fb0e 0706 	mla	r7, lr, r6, r0
 801420a:	143f      	asrs	r7, r7, #16
 801420c:	d541      	bpl.n	8014292 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801420e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014212:	4698      	mov	r8, r3
 8014214:	9603      	str	r6, [sp, #12]
 8014216:	f1b8 0f00 	cmp.w	r8, #0
 801421a:	dc59      	bgt.n	80142d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801421c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014220:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014224:	9b00      	ldr	r3, [sp, #0]
 8014226:	2b00      	cmp	r3, #0
 8014228:	dd72      	ble.n	8014310 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801422a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801422e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014230:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014234:	eeb0 6a62 	vmov.f32	s12, s5
 8014238:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801423c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014240:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014244:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014248:	eeb0 6a43 	vmov.f32	s12, s6
 801424c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014250:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014254:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014258:	ee61 7a27 	vmul.f32	s15, s2, s15
 801425c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014260:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014264:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014268:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801426c:	ee12 2a90 	vmov	r2, s5
 8014270:	eef0 2a47 	vmov.f32	s5, s14
 8014274:	fb92 fef3 	sdiv	lr, r2, r3
 8014278:	ee13 2a10 	vmov	r2, s6
 801427c:	eeb0 3a67 	vmov.f32	s6, s15
 8014280:	fb92 fcf3 	sdiv	ip, r2, r3
 8014284:	9b00      	ldr	r3, [sp, #0]
 8014286:	3b01      	subs	r3, #1
 8014288:	9300      	str	r3, [sp, #0]
 801428a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801428c:	bf08      	it	eq
 801428e:	465b      	moveq	r3, fp
 8014290:	e797      	b.n	80141c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014292:	454f      	cmp	r7, r9
 8014294:	dabb      	bge.n	801420e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014296:	fb0c 2606 	mla	r6, ip, r6, r2
 801429a:	1436      	asrs	r6, r6, #16
 801429c:	d4b7      	bmi.n	801420e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801429e:	4546      	cmp	r6, r8
 80142a0:	dab5      	bge.n	801420e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80142a2:	461e      	mov	r6, r3
 80142a4:	46a0      	mov	r8, r4
 80142a6:	2e00      	cmp	r6, #0
 80142a8:	ddb8      	ble.n	801421c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80142aa:	1417      	asrs	r7, r2, #16
 80142ac:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80142b0:	9901      	ldr	r1, [sp, #4]
 80142b2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80142b6:	4462      	add	r2, ip
 80142b8:	4470      	add	r0, lr
 80142ba:	fb0a 1707 	mla	r7, sl, r7, r1
 80142be:	9902      	ldr	r1, [sp, #8]
 80142c0:	3e01      	subs	r6, #1
 80142c2:	f817 7009 	ldrb.w	r7, [r7, r9]
 80142c6:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80142ca:	f828 7b02 	strh.w	r7, [r8], #2
 80142ce:	e7ea      	b.n	80142a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80142d0:	ea5f 4920 	movs.w	r9, r0, asr #16
 80142d4:	d417      	bmi.n	8014306 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80142d6:	68ae      	ldr	r6, [r5, #8]
 80142d8:	454e      	cmp	r6, r9
 80142da:	dd14      	ble.n	8014306 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80142dc:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80142e0:	d411      	bmi.n	8014306 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80142e2:	68ef      	ldr	r7, [r5, #12]
 80142e4:	4557      	cmp	r7, sl
 80142e6:	dd0e      	ble.n	8014306 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80142e8:	9f01      	ldr	r7, [sp, #4]
 80142ea:	b236      	sxth	r6, r6
 80142ec:	f06f 0101 	mvn.w	r1, #1
 80142f0:	fb0a 7606 	mla	r6, sl, r6, r7
 80142f4:	9f02      	ldr	r7, [sp, #8]
 80142f6:	f816 6009 	ldrb.w	r6, [r6, r9]
 80142fa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80142fe:	fb01 f608 	mul.w	r6, r1, r8
 8014302:	9903      	ldr	r1, [sp, #12]
 8014304:	538f      	strh	r7, [r1, r6]
 8014306:	4470      	add	r0, lr
 8014308:	4462      	add	r2, ip
 801430a:	f108 38ff 	add.w	r8, r8, #4294967295
 801430e:	e782      	b.n	8014216 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014310:	b005      	add	sp, #20
 8014312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014316 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014316:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801431a:	b087      	sub	sp, #28
 801431c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801431e:	9205      	str	r2, [sp, #20]
 8014320:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014324:	9102      	str	r1, [sp, #8]
 8014326:	9203      	str	r2, [sp, #12]
 8014328:	6861      	ldr	r1, [r4, #4]
 801432a:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801432e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8014332:	fb01 2000 	mla	r0, r1, r0, r2
 8014336:	6822      	ldr	r2, [r4, #0]
 8014338:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801433c:	9200      	str	r2, [sp, #0]
 801433e:	f8dc 2000 	ldr.w	r2, [ip]
 8014342:	9204      	str	r2, [sp, #16]
 8014344:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014348:	3204      	adds	r2, #4
 801434a:	9201      	str	r2, [sp, #4]
 801434c:	9a03      	ldr	r2, [sp, #12]
 801434e:	43d5      	mvns	r5, r2
 8014350:	b2ed      	uxtb	r5, r5
 8014352:	9a02      	ldr	r2, [sp, #8]
 8014354:	2a00      	cmp	r2, #0
 8014356:	dc03      	bgt.n	8014360 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014358:	9a05      	ldr	r2, [sp, #20]
 801435a:	2a00      	cmp	r2, #0
 801435c:	f340 812c 	ble.w	80145b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014360:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014362:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8014366:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801436a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801436c:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014370:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014374:	2b00      	cmp	r3, #0
 8014376:	dd10      	ble.n	801439a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014378:	140c      	asrs	r4, r1, #16
 801437a:	d405      	bmi.n	8014388 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801437c:	4574      	cmp	r4, lr
 801437e:	da03      	bge.n	8014388 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014380:	1414      	asrs	r4, r2, #16
 8014382:	d401      	bmi.n	8014388 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014384:	42bc      	cmp	r4, r7
 8014386:	db09      	blt.n	801439c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014388:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801438a:	3b01      	subs	r3, #1
 801438c:	9800      	ldr	r0, [sp, #0]
 801438e:	4421      	add	r1, r4
 8014390:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014392:	3002      	adds	r0, #2
 8014394:	4422      	add	r2, r4
 8014396:	9000      	str	r0, [sp, #0]
 8014398:	e7ec      	b.n	8014374 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801439a:	d071      	beq.n	8014480 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801439c:	1e5c      	subs	r4, r3, #1
 801439e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80143a0:	fb06 1604 	mla	r6, r6, r4, r1
 80143a4:	1436      	asrs	r6, r6, #16
 80143a6:	d45d      	bmi.n	8014464 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80143a8:	4576      	cmp	r6, lr
 80143aa:	da5b      	bge.n	8014464 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80143ac:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 80143ae:	fb06 2404 	mla	r4, r6, r4, r2
 80143b2:	1424      	asrs	r4, r4, #16
 80143b4:	d456      	bmi.n	8014464 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80143b6:	42bc      	cmp	r4, r7
 80143b8:	da54      	bge.n	8014464 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80143ba:	4698      	mov	r8, r3
 80143bc:	f8dd 9000 	ldr.w	r9, [sp]
 80143c0:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80143c4:	f1b8 0f00 	cmp.w	r8, #0
 80143c8:	dd54      	ble.n	8014474 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80143ca:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80143ce:	1414      	asrs	r4, r2, #16
 80143d0:	9804      	ldr	r0, [sp, #16]
 80143d2:	140e      	asrs	r6, r1, #16
 80143d4:	f108 38ff 	add.w	r8, r8, #4294967295
 80143d8:	fb07 0404 	mla	r4, r7, r4, r0
 80143dc:	9801      	ldr	r0, [sp, #4]
 80143de:	f814 e006 	ldrb.w	lr, [r4, r6]
 80143e2:	f8b9 4000 	ldrh.w	r4, [r9]
 80143e6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80143ea:	1227      	asrs	r7, r4, #8
 80143ec:	eb00 0b0e 	add.w	fp, r0, lr
 80143f0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80143f4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80143f8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80143fa:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80143fe:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014402:	4401      	add	r1, r0
 8014404:	fb16 f60a 	smulbb	r6, r6, sl
 8014408:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801440a:	fb1b fb0a 	smulbb	fp, fp, sl
 801440e:	fb07 6705 	mla	r7, r7, r5, r6
 8014412:	10e6      	asrs	r6, r4, #3
 8014414:	00e4      	lsls	r4, r4, #3
 8014416:	4402      	add	r2, r0
 8014418:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801441c:	b2bf      	uxth	r7, r7
 801441e:	b2e4      	uxtb	r4, r4
 8014420:	fb06 b605 	mla	r6, r6, r5, fp
 8014424:	fb14 f405 	smulbb	r4, r4, r5
 8014428:	b2b6      	uxth	r6, r6
 801442a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801442e:	1c7c      	adds	r4, r7, #1
 8014430:	f106 0b01 	add.w	fp, r6, #1
 8014434:	fa1f fe8e 	uxth.w	lr, lr
 8014438:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801443c:	f10e 0401 	add.w	r4, lr, #1
 8014440:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014444:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014448:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801444c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014450:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014454:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8014458:	4327      	orrs	r7, r4
 801445a:	ea47 070b 	orr.w	r7, r7, fp
 801445e:	f829 7b02 	strh.w	r7, [r9], #2
 8014462:	e7af      	b.n	80143c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8014464:	f04f 0e00 	mov.w	lr, #0
 8014468:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801446c:	eb03 040e 	add.w	r4, r3, lr
 8014470:	2c00      	cmp	r4, #0
 8014472:	dc43      	bgt.n	80144fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8014474:	9a00      	ldr	r2, [sp, #0]
 8014476:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801447a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801447e:	9300      	str	r3, [sp, #0]
 8014480:	9b02      	ldr	r3, [sp, #8]
 8014482:	2b00      	cmp	r3, #0
 8014484:	f340 8098 	ble.w	80145b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014488:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801448c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801448e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014492:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014496:	eef0 6a62 	vmov.f32	s13, s5
 801449a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801449e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80144a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80144a6:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80144aa:	eef0 6a43 	vmov.f32	s13, s6
 80144ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80144b2:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 80144b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80144ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80144be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80144c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80144c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80144ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80144ce:	ee12 2a90 	vmov	r2, s5
 80144d2:	eef0 2a47 	vmov.f32	s5, s14
 80144d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80144da:	ee13 2a10 	vmov	r2, s6
 80144de:	9313      	str	r3, [sp, #76]	@ 0x4c
 80144e0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80144e2:	eeb0 3a67 	vmov.f32	s6, s15
 80144e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80144ea:	9314      	str	r3, [sp, #80]	@ 0x50
 80144ec:	9b02      	ldr	r3, [sp, #8]
 80144ee:	9a05      	ldr	r2, [sp, #20]
 80144f0:	3b01      	subs	r3, #1
 80144f2:	9302      	str	r3, [sp, #8]
 80144f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80144f6:	bf08      	it	eq
 80144f8:	4613      	moveq	r3, r2
 80144fa:	e72a      	b.n	8014352 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80144fc:	140f      	asrs	r7, r1, #16
 80144fe:	d454      	bmi.n	80145aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014500:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8014504:	42be      	cmp	r6, r7
 8014506:	dd50      	ble.n	80145aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014508:	ea5f 4822 	movs.w	r8, r2, asr #16
 801450c:	d44d      	bmi.n	80145aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801450e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8014512:	4544      	cmp	r4, r8
 8014514:	dd49      	ble.n	80145aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014516:	9c04      	ldr	r4, [sp, #16]
 8014518:	b236      	sxth	r6, r6
 801451a:	f06f 0001 	mvn.w	r0, #1
 801451e:	fb08 4606 	mla	r6, r8, r6, r4
 8014522:	9c01      	ldr	r4, [sp, #4]
 8014524:	fb00 fa0e 	mul.w	sl, r0, lr
 8014528:	9800      	ldr	r0, [sp, #0]
 801452a:	f816 8007 	ldrb.w	r8, [r6, r7]
 801452e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014532:	eb04 0b08 	add.w	fp, r4, r8
 8014536:	f830 400a 	ldrh.w	r4, [r0, sl]
 801453a:	9801      	ldr	r0, [sp, #4]
 801453c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014540:	1227      	asrs	r7, r4, #8
 8014542:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014546:	fb16 f609 	smulbb	r6, r6, r9
 801454a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801454e:	f810 8008 	ldrb.w	r8, [r0, r8]
 8014552:	fb1b fb09 	smulbb	fp, fp, r9
 8014556:	fb07 6705 	mla	r7, r7, r5, r6
 801455a:	10e6      	asrs	r6, r4, #3
 801455c:	00e4      	lsls	r4, r4, #3
 801455e:	9800      	ldr	r0, [sp, #0]
 8014560:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014564:	b2bf      	uxth	r7, r7
 8014566:	b2e4      	uxtb	r4, r4
 8014568:	fb06 b605 	mla	r6, r6, r5, fp
 801456c:	fb14 f405 	smulbb	r4, r4, r5
 8014570:	b2b6      	uxth	r6, r6
 8014572:	fb08 4809 	mla	r8, r8, r9, r4
 8014576:	1c7c      	adds	r4, r7, #1
 8014578:	f106 0b01 	add.w	fp, r6, #1
 801457c:	fa1f f888 	uxth.w	r8, r8
 8014580:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014584:	f108 0401 	add.w	r4, r8, #1
 8014588:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801458c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014590:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8014594:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014598:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801459c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80145a0:	4327      	orrs	r7, r4
 80145a2:	ea47 070b 	orr.w	r7, r7, fp
 80145a6:	f820 700a 	strh.w	r7, [r0, sl]
 80145aa:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80145ac:	f10e 3eff 	add.w	lr, lr, #4294967295
 80145b0:	4401      	add	r1, r0
 80145b2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80145b4:	4402      	add	r2, r0
 80145b6:	e759      	b.n	801446c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80145b8:	b007      	add	sp, #28
 80145ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080145c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80145c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145c4:	b085      	sub	sp, #20
 80145c6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80145ca:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80145cc:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80145ce:	9203      	str	r2, [sp, #12]
 80145d0:	6870      	ldr	r0, [r6, #4]
 80145d2:	686f      	ldr	r7, [r5, #4]
 80145d4:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 80145d8:	3704      	adds	r7, #4
 80145da:	9101      	str	r1, [sp, #4]
 80145dc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80145e0:	fb00 2404 	mla	r4, r0, r4, r2
 80145e4:	6832      	ldr	r2, [r6, #0]
 80145e6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80145ea:	682a      	ldr	r2, [r5, #0]
 80145ec:	9202      	str	r2, [sp, #8]
 80145ee:	9a01      	ldr	r2, [sp, #4]
 80145f0:	2a00      	cmp	r2, #0
 80145f2:	dc03      	bgt.n	80145fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80145f4:	9a03      	ldr	r2, [sp, #12]
 80145f6:	2a00      	cmp	r2, #0
 80145f8:	f340 80cc 	ble.w	8014794 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80145fc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80145fe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014602:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014606:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014608:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801460c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014610:	2b00      	cmp	r3, #0
 8014612:	dd0d      	ble.n	8014630 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014614:	1406      	asrs	r6, r0, #16
 8014616:	d405      	bmi.n	8014624 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014618:	454e      	cmp	r6, r9
 801461a:	da03      	bge.n	8014624 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801461c:	1416      	asrs	r6, r2, #16
 801461e:	d401      	bmi.n	8014624 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014620:	4546      	cmp	r6, r8
 8014622:	db06      	blt.n	8014632 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014624:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8014626:	4460      	add	r0, ip
 8014628:	3b01      	subs	r3, #1
 801462a:	3402      	adds	r4, #2
 801462c:	4432      	add	r2, r6
 801462e:	e7ef      	b.n	8014610 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8014630:	d00f      	beq.n	8014652 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014632:	1e5e      	subs	r6, r3, #1
 8014634:	fb0c 0e06 	mla	lr, ip, r6, r0
 8014638:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801463c:	d543      	bpl.n	80146c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801463e:	4698      	mov	r8, r3
 8014640:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8014644:	f1b8 0f00 	cmp.w	r8, #0
 8014648:	dc71      	bgt.n	801472e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801464a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801464e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014652:	9b01      	ldr	r3, [sp, #4]
 8014654:	2b00      	cmp	r3, #0
 8014656:	f340 809d 	ble.w	8014794 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801465a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801465e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014660:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014664:	eeb0 6a62 	vmov.f32	s12, s5
 8014668:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801466c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014670:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014674:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014678:	eeb0 6a43 	vmov.f32	s12, s6
 801467c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014680:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014684:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014688:	ee61 7a27 	vmul.f32	s15, s2, s15
 801468c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014690:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014694:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014698:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801469c:	ee12 2a90 	vmov	r2, s5
 80146a0:	eef0 2a47 	vmov.f32	s5, s14
 80146a4:	fb92 fcf3 	sdiv	ip, r2, r3
 80146a8:	ee13 2a10 	vmov	r2, s6
 80146ac:	eeb0 3a67 	vmov.f32	s6, s15
 80146b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80146b4:	9312      	str	r3, [sp, #72]	@ 0x48
 80146b6:	9b01      	ldr	r3, [sp, #4]
 80146b8:	9a03      	ldr	r2, [sp, #12]
 80146ba:	3b01      	subs	r3, #1
 80146bc:	9301      	str	r3, [sp, #4]
 80146be:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80146c0:	bf08      	it	eq
 80146c2:	4613      	moveq	r3, r2
 80146c4:	e793      	b.n	80145ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80146c6:	45ce      	cmp	lr, r9
 80146c8:	dab9      	bge.n	801463e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80146ca:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80146cc:	fb01 2606 	mla	r6, r1, r6, r2
 80146d0:	1436      	asrs	r6, r6, #16
 80146d2:	d4b4      	bmi.n	801463e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80146d4:	4546      	cmp	r6, r8
 80146d6:	dab2      	bge.n	801463e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80146d8:	4698      	mov	r8, r3
 80146da:	46a2      	mov	sl, r4
 80146dc:	f1b8 0f00 	cmp.w	r8, #0
 80146e0:	ddb3      	ble.n	801464a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80146e2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80146e6:	1416      	asrs	r6, r2, #16
 80146e8:	9902      	ldr	r1, [sp, #8]
 80146ea:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80146ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80146f2:	4460      	add	r0, ip
 80146f4:	fb09 1606 	mla	r6, r9, r6, r1
 80146f8:	4928      	ldr	r1, [pc, #160]	@ (801479c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80146fa:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80146fe:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014702:	eb07 0b0e 	add.w	fp, r7, lr
 8014706:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801470a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801470e:	00f6      	lsls	r6, r6, #3
 8014710:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8014714:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8014716:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801471a:	440a      	add	r2, r1
 801471c:	ea49 0606 	orr.w	r6, r9, r6
 8014720:	f817 900e 	ldrb.w	r9, [r7, lr]
 8014724:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8014728:	f82a 6b02 	strh.w	r6, [sl], #2
 801472c:	e7d6      	b.n	80146dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801472e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014732:	d429      	bmi.n	8014788 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014734:	68ae      	ldr	r6, [r5, #8]
 8014736:	454e      	cmp	r6, r9
 8014738:	dd26      	ble.n	8014788 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801473a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801473e:	d423      	bmi.n	8014788 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014740:	68e9      	ldr	r1, [r5, #12]
 8014742:	4559      	cmp	r1, fp
 8014744:	dd20      	ble.n	8014788 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014746:	fa0f fe86 	sxth.w	lr, r6
 801474a:	9902      	ldr	r1, [sp, #8]
 801474c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8014750:	f06f 0101 	mvn.w	r1, #1
 8014754:	f81e e009 	ldrb.w	lr, [lr, r9]
 8014758:	fb01 f908 	mul.w	r9, r1, r8
 801475c:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8014760:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014764:	eb07 060e 	add.w	r6, r7, lr
 8014768:	f896 b002 	ldrb.w	fp, [r6, #2]
 801476c:	7876      	ldrb	r6, [r6, #1]
 801476e:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8014772:	00f6      	lsls	r6, r6, #3
 8014774:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014778:	ea4b 0606 	orr.w	r6, fp, r6
 801477c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8014780:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8014784:	f82a 6009 	strh.w	r6, [sl, r9]
 8014788:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801478a:	4460      	add	r0, ip
 801478c:	f108 38ff 	add.w	r8, r8, #4294967295
 8014790:	440a      	add	r2, r1
 8014792:	e757      	b.n	8014644 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014794:	b005      	add	sp, #20
 8014796:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801479a:	bf00      	nop
 801479c:	fffff800 	.word	0xfffff800

080147a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80147a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80147a4:	b087      	sub	sp, #28
 80147a6:	468b      	mov	fp, r1
 80147a8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80147ac:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80147ae:	9204      	str	r2, [sp, #16]
 80147b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80147b4:	6841      	ldr	r1, [r0, #4]
 80147b6:	9205      	str	r2, [sp, #20]
 80147b8:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 80147bc:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80147c0:	fb01 2404 	mla	r4, r1, r4, r2
 80147c4:	6802      	ldr	r2, [r0, #0]
 80147c6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80147ca:	f8dc 2000 	ldr.w	r2, [ip]
 80147ce:	9201      	str	r2, [sp, #4]
 80147d0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80147d4:	3204      	adds	r2, #4
 80147d6:	9202      	str	r2, [sp, #8]
 80147d8:	f1bb 0f00 	cmp.w	fp, #0
 80147dc:	dc03      	bgt.n	80147e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80147de:	9a04      	ldr	r2, [sp, #16]
 80147e0:	2a00      	cmp	r2, #0
 80147e2:	f340 8138 	ble.w	8014a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80147e6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80147e8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80147ec:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80147f0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80147f2:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80147f6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80147fa:	2b00      	cmp	r3, #0
 80147fc:	dd0e      	ble.n	801481c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80147fe:	1402      	asrs	r2, r0, #16
 8014800:	d405      	bmi.n	801480e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014802:	42ba      	cmp	r2, r7
 8014804:	da03      	bge.n	801480e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014806:	140a      	asrs	r2, r1, #16
 8014808:	d401      	bmi.n	801480e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801480a:	42b2      	cmp	r2, r6
 801480c:	db07      	blt.n	801481e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801480e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014810:	3b01      	subs	r3, #1
 8014812:	3402      	adds	r4, #2
 8014814:	4410      	add	r0, r2
 8014816:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014818:	4411      	add	r1, r2
 801481a:	e7ee      	b.n	80147fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801481c:	d019      	beq.n	8014852 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801481e:	1e5a      	subs	r2, r3, #1
 8014820:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014822:	fb05 0502 	mla	r5, r5, r2, r0
 8014826:	142d      	asrs	r5, r5, #16
 8014828:	d409      	bmi.n	801483e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801482a:	42bd      	cmp	r5, r7
 801482c:	da07      	bge.n	801483e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801482e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014830:	fb05 1202 	mla	r2, r5, r2, r1
 8014834:	1412      	asrs	r2, r2, #16
 8014836:	d402      	bmi.n	801483e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014838:	42b2      	cmp	r2, r6
 801483a:	f2c0 80ac 	blt.w	8014996 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801483e:	f04f 0e00 	mov.w	lr, #0
 8014842:	eb03 020e 	add.w	r2, r3, lr
 8014846:	2a00      	cmp	r2, #0
 8014848:	dc3e      	bgt.n	80148c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801484a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801484e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014852:	f1bb 0f00 	cmp.w	fp, #0
 8014856:	f340 80fe 	ble.w	8014a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801485a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801485e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014860:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014864:	f1bb 0b01 	subs.w	fp, fp, #1
 8014868:	eeb0 6a62 	vmov.f32	s12, s5
 801486c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014870:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014874:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014878:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801487c:	eeb0 6a43 	vmov.f32	s12, s6
 8014880:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014884:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014888:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801488c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014890:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014894:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014898:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801489c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80148a0:	ee12 2a90 	vmov	r2, s5
 80148a4:	eef0 2a47 	vmov.f32	s5, s14
 80148a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80148ac:	ee13 2a10 	vmov	r2, s6
 80148b0:	9313      	str	r3, [sp, #76]	@ 0x4c
 80148b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80148b4:	eeb0 3a67 	vmov.f32	s6, s15
 80148b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80148bc:	9a04      	ldr	r2, [sp, #16]
 80148be:	9314      	str	r3, [sp, #80]	@ 0x50
 80148c0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80148c2:	bf08      	it	eq
 80148c4:	4613      	moveq	r3, r2
 80148c6:	e787      	b.n	80147d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80148c8:	1406      	asrs	r6, r0, #16
 80148ca:	d45d      	bmi.n	8014988 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80148cc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80148d0:	42b5      	cmp	r5, r6
 80148d2:	dd59      	ble.n	8014988 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80148d4:	140f      	asrs	r7, r1, #16
 80148d6:	d457      	bmi.n	8014988 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80148d8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80148dc:	42ba      	cmp	r2, r7
 80148de:	dd53      	ble.n	8014988 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80148e0:	9a01      	ldr	r2, [sp, #4]
 80148e2:	b22d      	sxth	r5, r5
 80148e4:	fb07 2505 	mla	r5, r7, r5, r2
 80148e8:	5daa      	ldrb	r2, [r5, r6]
 80148ea:	9d02      	ldr	r5, [sp, #8]
 80148ec:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80148f0:	0e2e      	lsrs	r6, r5, #24
 80148f2:	d049      	beq.n	8014988 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80148f4:	f06f 0201 	mvn.w	r2, #1
 80148f8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80148fc:	fb02 f20e 	mul.w	r2, r2, lr
 8014900:	f834 8002 	ldrh.w	r8, [r4, r2]
 8014904:	9203      	str	r2, [sp, #12]
 8014906:	9a05      	ldr	r2, [sp, #20]
 8014908:	ea4f 2728 	mov.w	r7, r8, asr #8
 801490c:	4356      	muls	r6, r2
 801490e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014912:	1c72      	adds	r2, r6, #1
 8014914:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014918:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801491c:	b2ed      	uxtb	r5, r5
 801491e:	1212      	asrs	r2, r2, #8
 8014920:	fa1f f982 	uxth.w	r9, r2
 8014924:	43d2      	mvns	r2, r2
 8014926:	fb16 f609 	smulbb	r6, r6, r9
 801492a:	b2d2      	uxtb	r2, r2
 801492c:	fb15 f509 	smulbb	r5, r5, r9
 8014930:	fb07 6702 	mla	r7, r7, r2, r6
 8014934:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8014938:	fb1a fa09 	smulbb	sl, sl, r9
 801493c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014940:	b2bf      	uxth	r7, r7
 8014942:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014946:	fa5f f888 	uxtb.w	r8, r8
 801494a:	fb06 a602 	mla	r6, r6, r2, sl
 801494e:	fb08 5502 	mla	r5, r8, r2, r5
 8014952:	1c7a      	adds	r2, r7, #1
 8014954:	b2b6      	uxth	r6, r6
 8014956:	b2ad      	uxth	r5, r5
 8014958:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801495c:	9a03      	ldr	r2, [sp, #12]
 801495e:	f105 0a01 	add.w	sl, r5, #1
 8014962:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014966:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801496a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801496e:	ea4a 0707 	orr.w	r7, sl, r7
 8014972:	f106 0a01 	add.w	sl, r6, #1
 8014976:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801497a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801497e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014982:	ea47 070a 	orr.w	r7, r7, sl
 8014986:	52a7      	strh	r7, [r4, r2]
 8014988:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801498a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801498e:	4410      	add	r0, r2
 8014990:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014992:	4411      	add	r1, r2
 8014994:	e755      	b.n	8014842 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014996:	f04f 0800 	mov.w	r8, #0
 801499a:	eba3 0208 	sub.w	r2, r3, r8
 801499e:	2a00      	cmp	r2, #0
 80149a0:	f77f af53 	ble.w	801484a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80149a4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80149a8:	140a      	asrs	r2, r1, #16
 80149aa:	9f01      	ldr	r7, [sp, #4]
 80149ac:	1405      	asrs	r5, r0, #16
 80149ae:	fb06 7202 	mla	r2, r6, r2, r7
 80149b2:	5d52      	ldrb	r2, [r2, r5]
 80149b4:	9d02      	ldr	r5, [sp, #8]
 80149b6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80149ba:	0e2e      	lsrs	r6, r5, #24
 80149bc:	d044      	beq.n	8014a48 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80149be:	9a05      	ldr	r2, [sp, #20]
 80149c0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80149c4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80149c8:	4356      	muls	r6, r2
 80149ca:	ea4f 272e 	mov.w	r7, lr, asr #8
 80149ce:	1c72      	adds	r2, r6, #1
 80149d0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80149d4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80149d8:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80149dc:	b2ed      	uxtb	r5, r5
 80149de:	1212      	asrs	r2, r2, #8
 80149e0:	fa1f f982 	uxth.w	r9, r2
 80149e4:	43d2      	mvns	r2, r2
 80149e6:	fb16 f609 	smulbb	r6, r6, r9
 80149ea:	b2d2      	uxtb	r2, r2
 80149ec:	fb15 f509 	smulbb	r5, r5, r9
 80149f0:	fb07 6702 	mla	r7, r7, r2, r6
 80149f4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80149f8:	fb1a fa09 	smulbb	sl, sl, r9
 80149fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014a00:	b2bf      	uxth	r7, r7
 8014a02:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014a06:	fa5f fe8e 	uxtb.w	lr, lr
 8014a0a:	fb06 a602 	mla	r6, r6, r2, sl
 8014a0e:	fb0e 5502 	mla	r5, lr, r2, r5
 8014a12:	1c7a      	adds	r2, r7, #1
 8014a14:	b2b6      	uxth	r6, r6
 8014a16:	b2ad      	uxth	r5, r5
 8014a18:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014a1c:	f105 0a01 	add.w	sl, r5, #1
 8014a20:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014a24:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014a28:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014a2c:	ea4a 0707 	orr.w	r7, sl, r7
 8014a30:	f106 0a01 	add.w	sl, r6, #1
 8014a34:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014a38:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014a3c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014a40:	ea47 070a 	orr.w	r7, r7, sl
 8014a44:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014a48:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014a4a:	f108 0801 	add.w	r8, r8, #1
 8014a4e:	4410      	add	r0, r2
 8014a50:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014a52:	4411      	add	r1, r2
 8014a54:	e7a1      	b.n	801499a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8014a56:	b007      	add	sp, #28
 8014a58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014a5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a60:	b085      	sub	sp, #20
 8014a62:	468b      	mov	fp, r1
 8014a64:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014a68:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014a6a:	9203      	str	r2, [sp, #12]
 8014a6c:	6841      	ldr	r1, [r0, #4]
 8014a6e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014a72:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014a76:	fb01 2404 	mla	r4, r1, r4, r2
 8014a7a:	6802      	ldr	r2, [r0, #0]
 8014a7c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014a80:	f8de 2000 	ldr.w	r2, [lr]
 8014a84:	9200      	str	r2, [sp, #0]
 8014a86:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014a8a:	3204      	adds	r2, #4
 8014a8c:	9201      	str	r2, [sp, #4]
 8014a8e:	f1bb 0f00 	cmp.w	fp, #0
 8014a92:	dc03      	bgt.n	8014a9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014a94:	9a03      	ldr	r2, [sp, #12]
 8014a96:	2a00      	cmp	r2, #0
 8014a98:	f340 8153 	ble.w	8014d42 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014a9c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014a9e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014aa2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014aa6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014aa8:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014aac:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014ab0:	2b00      	cmp	r3, #0
 8014ab2:	dd0e      	ble.n	8014ad2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014ab4:	1408      	asrs	r0, r1, #16
 8014ab6:	d405      	bmi.n	8014ac4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014ab8:	42b8      	cmp	r0, r7
 8014aba:	da03      	bge.n	8014ac4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014abc:	1410      	asrs	r0, r2, #16
 8014abe:	d401      	bmi.n	8014ac4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014ac0:	42b0      	cmp	r0, r6
 8014ac2:	db07      	blt.n	8014ad4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014ac4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014ac6:	3b01      	subs	r3, #1
 8014ac8:	3402      	adds	r4, #2
 8014aca:	4401      	add	r1, r0
 8014acc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014ace:	4402      	add	r2, r0
 8014ad0:	e7ee      	b.n	8014ab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014ad2:	d017      	beq.n	8014b04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014ad4:	1e58      	subs	r0, r3, #1
 8014ad6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014ad8:	fb05 1500 	mla	r5, r5, r0, r1
 8014adc:	142d      	asrs	r5, r5, #16
 8014ade:	d409      	bmi.n	8014af4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014ae0:	42bd      	cmp	r5, r7
 8014ae2:	da07      	bge.n	8014af4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014ae4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014ae6:	fb05 2000 	mla	r0, r5, r0, r2
 8014aea:	1400      	asrs	r0, r0, #16
 8014aec:	d402      	bmi.n	8014af4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014aee:	42b0      	cmp	r0, r6
 8014af0:	f2c0 80bc 	blt.w	8014c6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8014af4:	2600      	movs	r6, #0
 8014af6:	1998      	adds	r0, r3, r6
 8014af8:	2800      	cmp	r0, #0
 8014afa:	dc3e      	bgt.n	8014b7a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8014afc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014b00:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014b04:	f1bb 0f00 	cmp.w	fp, #0
 8014b08:	f340 811b 	ble.w	8014d42 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014b0c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014b10:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014b12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014b16:	f1bb 0b01 	subs.w	fp, fp, #1
 8014b1a:	eeb0 6a62 	vmov.f32	s12, s5
 8014b1e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014b22:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014b26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014b2a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014b2e:	eeb0 6a43 	vmov.f32	s12, s6
 8014b32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014b36:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014b3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014b3e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014b42:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014b46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014b4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014b4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014b52:	ee12 2a90 	vmov	r2, s5
 8014b56:	eef0 2a47 	vmov.f32	s5, s14
 8014b5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b5e:	ee13 2a10 	vmov	r2, s6
 8014b62:	9311      	str	r3, [sp, #68]	@ 0x44
 8014b64:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014b66:	eeb0 3a67 	vmov.f32	s6, s15
 8014b6a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b6e:	9a03      	ldr	r2, [sp, #12]
 8014b70:	9312      	str	r3, [sp, #72]	@ 0x48
 8014b72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014b74:	bf08      	it	eq
 8014b76:	4613      	moveq	r3, r2
 8014b78:	e789      	b.n	8014a8e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014b7a:	140f      	asrs	r7, r1, #16
 8014b7c:	d426      	bmi.n	8014bcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014b7e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014b82:	42bd      	cmp	r5, r7
 8014b84:	dd22      	ble.n	8014bcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014b86:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014b8a:	d41f      	bmi.n	8014bcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014b8c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014b90:	4560      	cmp	r0, ip
 8014b92:	dd1b      	ble.n	8014bcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014b94:	9800      	ldr	r0, [sp, #0]
 8014b96:	b22d      	sxth	r5, r5
 8014b98:	fb0c 0505 	mla	r5, ip, r5, r0
 8014b9c:	5de8      	ldrb	r0, [r5, r7]
 8014b9e:	9d01      	ldr	r5, [sp, #4]
 8014ba0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8014ba4:	0e07      	lsrs	r7, r0, #24
 8014ba6:	2fff      	cmp	r7, #255	@ 0xff
 8014ba8:	d116      	bne.n	8014bd8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014baa:	f06f 0501 	mvn.w	r5, #1
 8014bae:	fb05 f706 	mul.w	r7, r5, r6
 8014bb2:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8014bb6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014bba:	0945      	lsrs	r5, r0, #5
 8014bbc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014bc0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014bc4:	ea4c 0505 	orr.w	r5, ip, r5
 8014bc8:	4305      	orrs	r5, r0
 8014bca:	53e5      	strh	r5, [r4, r7]
 8014bcc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014bce:	3e01      	subs	r6, #1
 8014bd0:	4401      	add	r1, r0
 8014bd2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014bd4:	4402      	add	r2, r0
 8014bd6:	e78e      	b.n	8014af6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8014bd8:	b2fd      	uxtb	r5, r7
 8014bda:	2f00      	cmp	r7, #0
 8014bdc:	d0f6      	beq.n	8014bcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014bde:	f06f 0701 	mvn.w	r7, #1
 8014be2:	fa1f f985 	uxth.w	r9, r5
 8014be6:	43ed      	mvns	r5, r5
 8014be8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014bec:	4377      	muls	r7, r6
 8014bee:	fb1a fa09 	smulbb	sl, sl, r9
 8014bf2:	b2ed      	uxtb	r5, r5
 8014bf4:	f834 8007 	ldrh.w	r8, [r4, r7]
 8014bf8:	9702      	str	r7, [sp, #8]
 8014bfa:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014bfe:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014c02:	fb17 f709 	smulbb	r7, r7, r9
 8014c06:	b2c0      	uxtb	r0, r0
 8014c08:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014c0c:	fb10 f009 	smulbb	r0, r0, r9
 8014c10:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014c14:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8014c18:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014c1c:	fa1f fc8c 	uxth.w	ip, ip
 8014c20:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014c24:	fa5f f888 	uxtb.w	r8, r8
 8014c28:	fb07 a705 	mla	r7, r7, r5, sl
 8014c2c:	fb08 0005 	mla	r0, r8, r5, r0
 8014c30:	f10c 0501 	add.w	r5, ip, #1
 8014c34:	b2bf      	uxth	r7, r7
 8014c36:	b280      	uxth	r0, r0
 8014c38:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014c3c:	f100 0a01 	add.w	sl, r0, #1
 8014c40:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014c44:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014c48:	9802      	ldr	r0, [sp, #8]
 8014c4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014c4e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014c52:	f107 0a01 	add.w	sl, r7, #1
 8014c56:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014c5a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014c5e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014c62:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014c66:	f824 c000 	strh.w	ip, [r4, r0]
 8014c6a:	e7af      	b.n	8014bcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014c6c:	f04f 0800 	mov.w	r8, #0
 8014c70:	eba3 0008 	sub.w	r0, r3, r8
 8014c74:	2800      	cmp	r0, #0
 8014c76:	f77f af41 	ble.w	8014afc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014c7a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014c7e:	1410      	asrs	r0, r2, #16
 8014c80:	9f00      	ldr	r7, [sp, #0]
 8014c82:	140d      	asrs	r5, r1, #16
 8014c84:	fb06 7000 	mla	r0, r6, r0, r7
 8014c88:	5d40      	ldrb	r0, [r0, r5]
 8014c8a:	9d01      	ldr	r5, [sp, #4]
 8014c8c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014c90:	0e2e      	lsrs	r6, r5, #24
 8014c92:	2eff      	cmp	r6, #255	@ 0xff
 8014c94:	d112      	bne.n	8014cbc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8014c96:	482c      	ldr	r0, [pc, #176]	@ (8014d48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8014c98:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014c9c:	0968      	lsrs	r0, r5, #5
 8014c9e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014ca2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8014ca6:	4330      	orrs	r0, r6
 8014ca8:	4328      	orrs	r0, r5
 8014caa:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8014cae:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014cb0:	f108 0801 	add.w	r8, r8, #1
 8014cb4:	4401      	add	r1, r0
 8014cb6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014cb8:	4402      	add	r2, r0
 8014cba:	e7d9      	b.n	8014c70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014cbc:	b2f0      	uxtb	r0, r6
 8014cbe:	2e00      	cmp	r6, #0
 8014cc0:	d0f5      	beq.n	8014cae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8014cc2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8014cc6:	fa1f f980 	uxth.w	r9, r0
 8014cca:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014cce:	43c0      	mvns	r0, r0
 8014cd0:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014cd4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014cd8:	fb16 f609 	smulbb	r6, r6, r9
 8014cdc:	b2c0      	uxtb	r0, r0
 8014cde:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014ce2:	b2ed      	uxtb	r5, r5
 8014ce4:	fb1a fa09 	smulbb	sl, sl, r9
 8014ce8:	fb07 6700 	mla	r7, r7, r0, r6
 8014cec:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014cf0:	fb15 f509 	smulbb	r5, r5, r9
 8014cf4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014cf8:	b2bf      	uxth	r7, r7
 8014cfa:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014cfe:	fa5f fc8c 	uxtb.w	ip, ip
 8014d02:	fb06 a600 	mla	r6, r6, r0, sl
 8014d06:	fb0c 5500 	mla	r5, ip, r0, r5
 8014d0a:	1c78      	adds	r0, r7, #1
 8014d0c:	b2b6      	uxth	r6, r6
 8014d0e:	b2ad      	uxth	r5, r5
 8014d10:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014d14:	f105 0a01 	add.w	sl, r5, #1
 8014d18:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014d1c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014d20:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014d24:	ea4a 0707 	orr.w	r7, sl, r7
 8014d28:	f106 0a01 	add.w	sl, r6, #1
 8014d2c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014d30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014d34:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014d38:	ea47 070a 	orr.w	r7, r7, sl
 8014d3c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014d40:	e7b5      	b.n	8014cae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8014d42:	b005      	add	sp, #20
 8014d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014d48:	fffff800 	.word	0xfffff800

08014d4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d50:	b087      	sub	sp, #28
 8014d52:	468b      	mov	fp, r1
 8014d54:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014d58:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8014d5a:	9204      	str	r2, [sp, #16]
 8014d5c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014d60:	6861      	ldr	r1, [r4, #4]
 8014d62:	9205      	str	r2, [sp, #20]
 8014d64:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8014d68:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8014d6c:	fb01 2000 	mla	r0, r1, r0, r2
 8014d70:	6822      	ldr	r2, [r4, #0]
 8014d72:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014d76:	f8de 2000 	ldr.w	r2, [lr]
 8014d7a:	9201      	str	r2, [sp, #4]
 8014d7c:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014d80:	9202      	str	r2, [sp, #8]
 8014d82:	f1bb 0f00 	cmp.w	fp, #0
 8014d86:	dc03      	bgt.n	8014d90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8014d88:	9a04      	ldr	r2, [sp, #16]
 8014d8a:	2a00      	cmp	r2, #0
 8014d8c:	f340 8142 	ble.w	8015014 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014d90:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014d92:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014d96:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014d9a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014d9c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014da0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014da4:	2b00      	cmp	r3, #0
 8014da6:	dd0e      	ble.n	8014dc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014da8:	140c      	asrs	r4, r1, #16
 8014daa:	d405      	bmi.n	8014db8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014dac:	42bc      	cmp	r4, r7
 8014dae:	da03      	bge.n	8014db8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014db0:	1414      	asrs	r4, r2, #16
 8014db2:	d401      	bmi.n	8014db8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014db4:	42b4      	cmp	r4, r6
 8014db6:	db07      	blt.n	8014dc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014db8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014dba:	3b01      	subs	r3, #1
 8014dbc:	3002      	adds	r0, #2
 8014dbe:	4421      	add	r1, r4
 8014dc0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014dc2:	4422      	add	r2, r4
 8014dc4:	e7ee      	b.n	8014da4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8014dc6:	d019      	beq.n	8014dfc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014dc8:	1e5c      	subs	r4, r3, #1
 8014dca:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014dcc:	fb05 1504 	mla	r5, r5, r4, r1
 8014dd0:	142d      	asrs	r5, r5, #16
 8014dd2:	d409      	bmi.n	8014de8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014dd4:	42bd      	cmp	r5, r7
 8014dd6:	da07      	bge.n	8014de8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014dd8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014dda:	fb05 2404 	mla	r4, r5, r4, r2
 8014dde:	1424      	asrs	r4, r4, #16
 8014de0:	d402      	bmi.n	8014de8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014de2:	42b4      	cmp	r4, r6
 8014de4:	f2c0 80b1 	blt.w	8014f4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8014de8:	f04f 0800 	mov.w	r8, #0
 8014dec:	eb03 0408 	add.w	r4, r3, r8
 8014df0:	2c00      	cmp	r4, #0
 8014df2:	dc3e      	bgt.n	8014e72 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8014df4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014df8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014dfc:	f1bb 0f00 	cmp.w	fp, #0
 8014e00:	f340 8108 	ble.w	8015014 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014e04:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014e08:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014e0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014e0e:	f1bb 0b01 	subs.w	fp, fp, #1
 8014e12:	eeb0 6a62 	vmov.f32	s12, s5
 8014e16:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014e1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014e1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014e22:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014e26:	eeb0 6a43 	vmov.f32	s12, s6
 8014e2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014e2e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014e32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014e36:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014e3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014e3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014e42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014e46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014e4a:	ee12 2a90 	vmov	r2, s5
 8014e4e:	eef0 2a47 	vmov.f32	s5, s14
 8014e52:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e56:	ee13 2a10 	vmov	r2, s6
 8014e5a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014e5c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014e5e:	eeb0 3a67 	vmov.f32	s6, s15
 8014e62:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e66:	9a04      	ldr	r2, [sp, #16]
 8014e68:	9314      	str	r3, [sp, #80]	@ 0x50
 8014e6a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014e6c:	bf08      	it	eq
 8014e6e:	4613      	moveq	r3, r2
 8014e70:	e787      	b.n	8014d82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8014e72:	140e      	asrs	r6, r1, #16
 8014e74:	d462      	bmi.n	8014f3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014e76:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014e7a:	42b5      	cmp	r5, r6
 8014e7c:	dd5e      	ble.n	8014f3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014e7e:	1417      	asrs	r7, r2, #16
 8014e80:	d45c      	bmi.n	8014f3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014e82:	f8de 400c 	ldr.w	r4, [lr, #12]
 8014e86:	42bc      	cmp	r4, r7
 8014e88:	dd58      	ble.n	8014f3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014e8a:	b22d      	sxth	r5, r5
 8014e8c:	9c02      	ldr	r4, [sp, #8]
 8014e8e:	fb07 6505 	mla	r5, r7, r5, r6
 8014e92:	5d66      	ldrb	r6, [r4, r5]
 8014e94:	2e00      	cmp	r6, #0
 8014e96:	d051      	beq.n	8014f3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014e98:	9c01      	ldr	r4, [sp, #4]
 8014e9a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8014e9e:	f06f 0401 	mvn.w	r4, #1
 8014ea2:	fb04 f408 	mul.w	r4, r4, r8
 8014ea6:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8014eaa:	5b05      	ldrh	r5, [r0, r4]
 8014eac:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014eb0:	9403      	str	r4, [sp, #12]
 8014eb2:	9c05      	ldr	r4, [sp, #20]
 8014eb4:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014eb8:	4366      	muls	r6, r4
 8014eba:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014ebe:	1c74      	adds	r4, r6, #1
 8014ec0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014ec4:	122e      	asrs	r6, r5, #8
 8014ec6:	1224      	asrs	r4, r4, #8
 8014ec8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014ecc:	00ed      	lsls	r5, r5, #3
 8014ece:	b2a7      	uxth	r7, r4
 8014ed0:	43e4      	mvns	r4, r4
 8014ed2:	b2ed      	uxtb	r5, r5
 8014ed4:	b2e4      	uxtb	r4, r4
 8014ed6:	fb16 f604 	smulbb	r6, r6, r4
 8014eda:	fb15 f504 	smulbb	r5, r5, r4
 8014ede:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014ee2:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8014ee6:	fb1a fa04 	smulbb	sl, sl, r4
 8014eea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014eee:	fa1f fc8c 	uxth.w	ip, ip
 8014ef2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014ef6:	fa5f f989 	uxtb.w	r9, r9
 8014efa:	fb06 a607 	mla	r6, r6, r7, sl
 8014efe:	f10c 0401 	add.w	r4, ip, #1
 8014f02:	fb09 5507 	mla	r5, r9, r7, r5
 8014f06:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014f0a:	9c03      	ldr	r4, [sp, #12]
 8014f0c:	b2ad      	uxth	r5, r5
 8014f0e:	b2b6      	uxth	r6, r6
 8014f10:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014f14:	f105 0a01 	add.w	sl, r5, #1
 8014f18:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014f1c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014f20:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014f24:	f106 0a01 	add.w	sl, r6, #1
 8014f28:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014f2c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014f30:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014f34:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014f38:	f820 c004 	strh.w	ip, [r0, r4]
 8014f3c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014f3e:	f108 38ff 	add.w	r8, r8, #4294967295
 8014f42:	4421      	add	r1, r4
 8014f44:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014f46:	4422      	add	r2, r4
 8014f48:	e750      	b.n	8014dec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014f4a:	f04f 0900 	mov.w	r9, #0
 8014f4e:	eba3 0409 	sub.w	r4, r3, r9
 8014f52:	2c00      	cmp	r4, #0
 8014f54:	f77f af4e 	ble.w	8014df4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014f58:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014f5c:	140d      	asrs	r5, r1, #16
 8014f5e:	1414      	asrs	r4, r2, #16
 8014f60:	fb06 5404 	mla	r4, r6, r4, r5
 8014f64:	9d02      	ldr	r5, [sp, #8]
 8014f66:	5d2e      	ldrb	r6, [r5, r4]
 8014f68:	2e00      	cmp	r6, #0
 8014f6a:	d04c      	beq.n	8015006 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8014f6c:	9d01      	ldr	r5, [sp, #4]
 8014f6e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8014f72:	9c05      	ldr	r4, [sp, #20]
 8014f74:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014f78:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014f7c:	4366      	muls	r6, r4
 8014f7e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014f82:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014f86:	1c74      	adds	r4, r6, #1
 8014f88:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014f8c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014f90:	122e      	asrs	r6, r5, #8
 8014f92:	1224      	asrs	r4, r4, #8
 8014f94:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014f98:	00ed      	lsls	r5, r5, #3
 8014f9a:	b2a7      	uxth	r7, r4
 8014f9c:	43e4      	mvns	r4, r4
 8014f9e:	b2ed      	uxtb	r5, r5
 8014fa0:	b2e4      	uxtb	r4, r4
 8014fa2:	fb16 f604 	smulbb	r6, r6, r4
 8014fa6:	fb15 f504 	smulbb	r5, r5, r4
 8014faa:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014fae:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8014fb2:	fb1a fa04 	smulbb	sl, sl, r4
 8014fb6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014fba:	fa1f fc8c 	uxth.w	ip, ip
 8014fbe:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014fc2:	fa5f f888 	uxtb.w	r8, r8
 8014fc6:	fb06 a607 	mla	r6, r6, r7, sl
 8014fca:	f10c 0401 	add.w	r4, ip, #1
 8014fce:	fb08 5507 	mla	r5, r8, r7, r5
 8014fd2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014fd6:	b2ad      	uxth	r5, r5
 8014fd8:	b2b6      	uxth	r6, r6
 8014fda:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014fde:	f105 0a01 	add.w	sl, r5, #1
 8014fe2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014fe6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014fea:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014fee:	f106 0a01 	add.w	sl, r6, #1
 8014ff2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014ff6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014ffa:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014ffe:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015002:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015006:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015008:	f109 0901 	add.w	r9, r9, #1
 801500c:	4421      	add	r1, r4
 801500e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015010:	4422      	add	r2, r4
 8015012:	e79c      	b.n	8014f4e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015014:	b007      	add	sp, #28
 8015016:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801501a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801501a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801501e:	b085      	sub	sp, #20
 8015020:	468b      	mov	fp, r1
 8015022:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015026:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015028:	9203      	str	r2, [sp, #12]
 801502a:	6861      	ldr	r1, [r4, #4]
 801502c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8015030:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8015034:	fb01 2000 	mla	r0, r1, r0, r2
 8015038:	6822      	ldr	r2, [r4, #0]
 801503a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801503e:	f8d8 2000 	ldr.w	r2, [r8]
 8015042:	9200      	str	r2, [sp, #0]
 8015044:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8015048:	9201      	str	r2, [sp, #4]
 801504a:	f1bb 0f00 	cmp.w	fp, #0
 801504e:	dc03      	bgt.n	8015058 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015050:	9a03      	ldr	r2, [sp, #12]
 8015052:	2a00      	cmp	r2, #0
 8015054:	f340 8146 	ble.w	80152e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015058:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801505a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801505e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015062:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015064:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015068:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801506c:	2b00      	cmp	r3, #0
 801506e:	dd0e      	ble.n	801508e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015070:	140c      	asrs	r4, r1, #16
 8015072:	d405      	bmi.n	8015080 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015074:	42bc      	cmp	r4, r7
 8015076:	da03      	bge.n	8015080 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015078:	1414      	asrs	r4, r2, #16
 801507a:	d401      	bmi.n	8015080 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801507c:	42b4      	cmp	r4, r6
 801507e:	db07      	blt.n	8015090 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015080:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8015082:	3b01      	subs	r3, #1
 8015084:	3002      	adds	r0, #2
 8015086:	4421      	add	r1, r4
 8015088:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801508a:	4422      	add	r2, r4
 801508c:	e7ee      	b.n	801506c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801508e:	d017      	beq.n	80150c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015090:	1e5c      	subs	r4, r3, #1
 8015092:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8015094:	fb05 1504 	mla	r5, r5, r4, r1
 8015098:	142d      	asrs	r5, r5, #16
 801509a:	d409      	bmi.n	80150b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801509c:	42bd      	cmp	r5, r7
 801509e:	da07      	bge.n	80150b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80150a0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80150a2:	fb05 2404 	mla	r4, r5, r4, r2
 80150a6:	1424      	asrs	r4, r4, #16
 80150a8:	d402      	bmi.n	80150b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80150aa:	42b4      	cmp	r4, r6
 80150ac:	f2c0 80b3 	blt.w	8015216 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80150b0:	2600      	movs	r6, #0
 80150b2:	199c      	adds	r4, r3, r6
 80150b4:	2c00      	cmp	r4, #0
 80150b6:	dc3e      	bgt.n	8015136 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80150b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80150bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80150c0:	f1bb 0f00 	cmp.w	fp, #0
 80150c4:	f340 810e 	ble.w	80152e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80150c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80150cc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80150ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80150d2:	f1bb 0b01 	subs.w	fp, fp, #1
 80150d6:	eeb0 6a62 	vmov.f32	s12, s5
 80150da:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80150de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80150e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80150e6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80150ea:	eeb0 6a43 	vmov.f32	s12, s6
 80150ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80150f2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80150f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80150fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80150fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015102:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015106:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801510a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801510e:	ee12 2a90 	vmov	r2, s5
 8015112:	eef0 2a47 	vmov.f32	s5, s14
 8015116:	fb92 f3f3 	sdiv	r3, r2, r3
 801511a:	ee13 2a10 	vmov	r2, s6
 801511e:	9311      	str	r3, [sp, #68]	@ 0x44
 8015120:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015122:	eeb0 3a67 	vmov.f32	s6, s15
 8015126:	fb92 f3f3 	sdiv	r3, r2, r3
 801512a:	9a03      	ldr	r2, [sp, #12]
 801512c:	9312      	str	r3, [sp, #72]	@ 0x48
 801512e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015130:	bf08      	it	eq
 8015132:	4613      	moveq	r3, r2
 8015134:	e789      	b.n	801504a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015136:	140f      	asrs	r7, r1, #16
 8015138:	d418      	bmi.n	801516c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801513a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801513e:	42bd      	cmp	r5, r7
 8015140:	dd14      	ble.n	801516c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015142:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015146:	d411      	bmi.n	801516c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015148:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801514c:	4564      	cmp	r4, ip
 801514e:	dd0d      	ble.n	801516c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015150:	b22d      	sxth	r5, r5
 8015152:	9c01      	ldr	r4, [sp, #4]
 8015154:	fb0c 7505 	mla	r5, ip, r5, r7
 8015158:	5d64      	ldrb	r4, [r4, r5]
 801515a:	2cff      	cmp	r4, #255	@ 0xff
 801515c:	d10c      	bne.n	8015178 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801515e:	9c00      	ldr	r4, [sp, #0]
 8015160:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8015164:	f06f 0401 	mvn.w	r4, #1
 8015168:	4374      	muls	r4, r6
 801516a:	5305      	strh	r5, [r0, r4]
 801516c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801516e:	3e01      	subs	r6, #1
 8015170:	4421      	add	r1, r4
 8015172:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8015174:	4422      	add	r2, r4
 8015176:	e79c      	b.n	80150b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015178:	2c00      	cmp	r4, #0
 801517a:	d0f7      	beq.n	801516c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801517c:	9f00      	ldr	r7, [sp, #0]
 801517e:	fa1f fc84 	uxth.w	ip, r4
 8015182:	43e4      	mvns	r4, r4
 8015184:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8015188:	f06f 0501 	mvn.w	r5, #1
 801518c:	b2e4      	uxtb	r4, r4
 801518e:	4375      	muls	r5, r6
 8015190:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015194:	9502      	str	r5, [sp, #8]
 8015196:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801519a:	5b45      	ldrh	r5, [r0, r5]
 801519c:	122f      	asrs	r7, r5, #8
 801519e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80151a2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80151a6:	00ed      	lsls	r5, r5, #3
 80151a8:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80151ac:	fb17 f704 	smulbb	r7, r7, r4
 80151b0:	b2ed      	uxtb	r5, r5
 80151b2:	fb1a fa04 	smulbb	sl, sl, r4
 80151b6:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80151ba:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80151be:	fb15 f504 	smulbb	r5, r5, r4
 80151c2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80151c6:	fa1f fe8e 	uxth.w	lr, lr
 80151ca:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80151ce:	fa5f f989 	uxtb.w	r9, r9
 80151d2:	fb07 a70c 	mla	r7, r7, ip, sl
 80151d6:	f10e 0401 	add.w	r4, lr, #1
 80151da:	fb09 550c 	mla	r5, r9, ip, r5
 80151de:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80151e2:	9c02      	ldr	r4, [sp, #8]
 80151e4:	b2ad      	uxth	r5, r5
 80151e6:	b2bf      	uxth	r7, r7
 80151e8:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80151ec:	f105 0a01 	add.w	sl, r5, #1
 80151f0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80151f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80151f8:	ea4a 0e0e 	orr.w	lr, sl, lr
 80151fc:	f107 0a01 	add.w	sl, r7, #1
 8015200:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015204:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015208:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801520c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015210:	f820 e004 	strh.w	lr, [r0, r4]
 8015214:	e7aa      	b.n	801516c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015216:	f04f 0900 	mov.w	r9, #0
 801521a:	eba3 0409 	sub.w	r4, r3, r9
 801521e:	2c00      	cmp	r4, #0
 8015220:	f77f af4a 	ble.w	80150b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015224:	1414      	asrs	r4, r2, #16
 8015226:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801522a:	140d      	asrs	r5, r1, #16
 801522c:	fb06 5504 	mla	r5, r6, r4, r5
 8015230:	9c01      	ldr	r4, [sp, #4]
 8015232:	5d64      	ldrb	r4, [r4, r5]
 8015234:	2cff      	cmp	r4, #255	@ 0xff
 8015236:	d10b      	bne.n	8015250 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015238:	9c00      	ldr	r4, [sp, #0]
 801523a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801523e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015242:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8015244:	f109 0901 	add.w	r9, r9, #1
 8015248:	4421      	add	r1, r4
 801524a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801524c:	4422      	add	r2, r4
 801524e:	e7e4      	b.n	801521a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015250:	2c00      	cmp	r4, #0
 8015252:	d0f6      	beq.n	8015242 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015254:	9e00      	ldr	r6, [sp, #0]
 8015256:	b2a7      	uxth	r7, r4
 8015258:	43e4      	mvns	r4, r4
 801525a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801525e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015262:	b2e4      	uxtb	r4, r4
 8015264:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015268:	122e      	asrs	r6, r5, #8
 801526a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801526e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015272:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015276:	00ed      	lsls	r5, r5, #3
 8015278:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801527c:	fb16 f604 	smulbb	r6, r6, r4
 8015280:	b2ed      	uxtb	r5, r5
 8015282:	fb1a fa04 	smulbb	sl, sl, r4
 8015286:	fb0c 6c07 	mla	ip, ip, r7, r6
 801528a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801528e:	fb15 f504 	smulbb	r5, r5, r4
 8015292:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015296:	fa1f fc8c 	uxth.w	ip, ip
 801529a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801529e:	fa5f fe8e 	uxtb.w	lr, lr
 80152a2:	fb06 a607 	mla	r6, r6, r7, sl
 80152a6:	f10c 0401 	add.w	r4, ip, #1
 80152aa:	fb0e 5507 	mla	r5, lr, r7, r5
 80152ae:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80152b2:	b2ad      	uxth	r5, r5
 80152b4:	b2b6      	uxth	r6, r6
 80152b6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80152ba:	f105 0a01 	add.w	sl, r5, #1
 80152be:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80152c2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80152c6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80152ca:	f106 0a01 	add.w	sl, r6, #1
 80152ce:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80152d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80152d6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80152da:	ea4c 0c0a 	orr.w	ip, ip, sl
 80152de:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80152e2:	e7ae      	b.n	8015242 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80152e4:	b005      	add	sp, #20
 80152e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080152ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80152ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152ee:	b085      	sub	sp, #20
 80152f0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80152f2:	9203      	str	r2, [sp, #12]
 80152f4:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 80152f8:	9100      	str	r1, [sp, #0]
 80152fa:	9201      	str	r2, [sp, #4]
 80152fc:	6841      	ldr	r1, [r0, #4]
 80152fe:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8015302:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015306:	fb01 2404 	mla	r4, r1, r4, r2
 801530a:	6802      	ldr	r2, [r0, #0]
 801530c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015310:	f8de 2000 	ldr.w	r2, [lr]
 8015314:	9202      	str	r2, [sp, #8]
 8015316:	9a01      	ldr	r2, [sp, #4]
 8015318:	43d6      	mvns	r6, r2
 801531a:	b2f6      	uxtb	r6, r6
 801531c:	9a00      	ldr	r2, [sp, #0]
 801531e:	2a00      	cmp	r2, #0
 8015320:	dc03      	bgt.n	801532a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015322:	9a03      	ldr	r2, [sp, #12]
 8015324:	2a00      	cmp	r2, #0
 8015326:	f340 8124 	ble.w	8015572 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801532a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801532c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015330:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015334:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015336:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801533a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801533e:	2b00      	cmp	r3, #0
 8015340:	dd0e      	ble.n	8015360 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015342:	1408      	asrs	r0, r1, #16
 8015344:	d405      	bmi.n	8015352 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015346:	4560      	cmp	r0, ip
 8015348:	da03      	bge.n	8015352 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801534a:	1410      	asrs	r0, r2, #16
 801534c:	d401      	bmi.n	8015352 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801534e:	42b8      	cmp	r0, r7
 8015350:	db07      	blt.n	8015362 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015352:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015354:	3b01      	subs	r3, #1
 8015356:	3402      	adds	r4, #2
 8015358:	4401      	add	r1, r0
 801535a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801535c:	4402      	add	r2, r0
 801535e:	e7ee      	b.n	801533e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015360:	d06e      	beq.n	8015440 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015362:	1e58      	subs	r0, r3, #1
 8015364:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8015366:	fb05 1500 	mla	r5, r5, r0, r1
 801536a:	142d      	asrs	r5, r5, #16
 801536c:	d45c      	bmi.n	8015428 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801536e:	4565      	cmp	r5, ip
 8015370:	da5a      	bge.n	8015428 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015372:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8015374:	fb05 2000 	mla	r0, r5, r0, r2
 8015378:	1400      	asrs	r0, r0, #16
 801537a:	d455      	bmi.n	8015428 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801537c:	42b8      	cmp	r0, r7
 801537e:	da53      	bge.n	8015428 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015380:	4699      	mov	r9, r3
 8015382:	46a2      	mov	sl, r4
 8015384:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8015388:	f1b9 0f00 	cmp.w	r9, #0
 801538c:	dd54      	ble.n	8015438 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801538e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015392:	140d      	asrs	r5, r1, #16
 8015394:	1410      	asrs	r0, r2, #16
 8015396:	f109 39ff 	add.w	r9, r9, #4294967295
 801539a:	fb07 5000 	mla	r0, r7, r0, r5
 801539e:	9d02      	ldr	r5, [sp, #8]
 80153a0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80153a4:	f8ba 5000 	ldrh.w	r5, [sl]
 80153a8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80153ac:	122f      	asrs	r7, r5, #8
 80153ae:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80153b2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80153b6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80153ba:	00ed      	lsls	r5, r5, #3
 80153bc:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 80153c0:	fb17 f706 	smulbb	r7, r7, r6
 80153c4:	b2ed      	uxtb	r5, r5
 80153c6:	fb18 f806 	smulbb	r8, r8, r6
 80153ca:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80153ce:	10c7      	asrs	r7, r0, #3
 80153d0:	fb15 f506 	smulbb	r5, r5, r6
 80153d4:	00c0      	lsls	r0, r0, #3
 80153d6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80153da:	fa1f fc8c 	uxth.w	ip, ip
 80153de:	b2c0      	uxtb	r0, r0
 80153e0:	fb07 870b 	mla	r7, r7, fp, r8
 80153e4:	fb00 500b 	mla	r0, r0, fp, r5
 80153e8:	f10c 0501 	add.w	r5, ip, #1
 80153ec:	b2bf      	uxth	r7, r7
 80153ee:	b280      	uxth	r0, r0
 80153f0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80153f4:	f107 0801 	add.w	r8, r7, #1
 80153f8:	1c45      	adds	r5, r0, #1
 80153fa:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80153fe:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015402:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015406:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015408:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801540c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015410:	4401      	add	r1, r0
 8015412:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8015416:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015418:	ea45 0c0c 	orr.w	ip, r5, ip
 801541c:	4402      	add	r2, r0
 801541e:	ea4c 0c08 	orr.w	ip, ip, r8
 8015422:	f82a cb02 	strh.w	ip, [sl], #2
 8015426:	e7af      	b.n	8015388 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015428:	f04f 0800 	mov.w	r8, #0
 801542c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8015430:	eb03 0008 	add.w	r0, r3, r8
 8015434:	2800      	cmp	r0, #0
 8015436:	dc41      	bgt.n	80154bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015438:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801543c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015440:	9b00      	ldr	r3, [sp, #0]
 8015442:	2b00      	cmp	r3, #0
 8015444:	f340 8095 	ble.w	8015572 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015448:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801544c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801544e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015452:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015456:	eef0 6a62 	vmov.f32	s13, s5
 801545a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801545e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015462:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015466:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 801546a:	eef0 6a43 	vmov.f32	s13, s6
 801546e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015472:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8015476:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801547a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801547e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015482:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015486:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801548a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801548e:	ee12 2a90 	vmov	r2, s5
 8015492:	eef0 2a47 	vmov.f32	s5, s14
 8015496:	fb92 f3f3 	sdiv	r3, r2, r3
 801549a:	ee13 2a10 	vmov	r2, s6
 801549e:	9311      	str	r3, [sp, #68]	@ 0x44
 80154a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80154a2:	eeb0 3a67 	vmov.f32	s6, s15
 80154a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80154aa:	9312      	str	r3, [sp, #72]	@ 0x48
 80154ac:	9b00      	ldr	r3, [sp, #0]
 80154ae:	9a03      	ldr	r2, [sp, #12]
 80154b0:	3b01      	subs	r3, #1
 80154b2:	9300      	str	r3, [sp, #0]
 80154b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80154b6:	bf08      	it	eq
 80154b8:	4613      	moveq	r3, r2
 80154ba:	e72f      	b.n	801531c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80154bc:	140f      	asrs	r7, r1, #16
 80154be:	d451      	bmi.n	8015564 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80154c0:	f8de 5008 	ldr.w	r5, [lr, #8]
 80154c4:	42bd      	cmp	r5, r7
 80154c6:	dd4d      	ble.n	8015564 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80154c8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80154cc:	d44a      	bmi.n	8015564 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80154ce:	f8de 000c 	ldr.w	r0, [lr, #12]
 80154d2:	4560      	cmp	r0, ip
 80154d4:	dd46      	ble.n	8015564 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80154d6:	b22d      	sxth	r5, r5
 80154d8:	9802      	ldr	r0, [sp, #8]
 80154da:	fb0c 7505 	mla	r5, ip, r5, r7
 80154de:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80154e2:	f06f 0501 	mvn.w	r5, #1
 80154e6:	fb05 fb08 	mul.w	fp, r5, r8
 80154ea:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80154ee:	f834 500b 	ldrh.w	r5, [r4, fp]
 80154f2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80154f6:	122f      	asrs	r7, r5, #8
 80154f8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80154fc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015500:	00ed      	lsls	r5, r5, #3
 8015502:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8015506:	fb17 f706 	smulbb	r7, r7, r6
 801550a:	b2ed      	uxtb	r5, r5
 801550c:	fb19 f906 	smulbb	r9, r9, r6
 8015510:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8015514:	10c7      	asrs	r7, r0, #3
 8015516:	fb15 f506 	smulbb	r5, r5, r6
 801551a:	00c0      	lsls	r0, r0, #3
 801551c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015520:	fa1f fc8c 	uxth.w	ip, ip
 8015524:	b2c0      	uxtb	r0, r0
 8015526:	fb07 970a 	mla	r7, r7, sl, r9
 801552a:	fb00 500a 	mla	r0, r0, sl, r5
 801552e:	f10c 0501 	add.w	r5, ip, #1
 8015532:	b2bf      	uxth	r7, r7
 8015534:	b280      	uxth	r0, r0
 8015536:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801553a:	f107 0901 	add.w	r9, r7, #1
 801553e:	1c45      	adds	r5, r0, #1
 8015540:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015544:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015548:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801554c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015550:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015554:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8015558:	ea45 0c0c 	orr.w	ip, r5, ip
 801555c:	ea4c 0c09 	orr.w	ip, ip, r9
 8015560:	f824 c00b 	strh.w	ip, [r4, fp]
 8015564:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015566:	f108 38ff 	add.w	r8, r8, #4294967295
 801556a:	4401      	add	r1, r0
 801556c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801556e:	4402      	add	r2, r0
 8015570:	e75e      	b.n	8015430 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8015572:	b005      	add	sp, #20
 8015574:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015578 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801557c:	b085      	sub	sp, #20
 801557e:	4693      	mov	fp, r2
 8015580:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015584:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8015586:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8015588:	6870      	ldr	r0, [r6, #4]
 801558a:	9101      	str	r1, [sp, #4]
 801558c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015590:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8015594:	fb00 2404 	mla	r4, r0, r4, r2
 8015598:	6832      	ldr	r2, [r6, #0]
 801559a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801559e:	682a      	ldr	r2, [r5, #0]
 80155a0:	9202      	str	r2, [sp, #8]
 80155a2:	9a01      	ldr	r2, [sp, #4]
 80155a4:	2a00      	cmp	r2, #0
 80155a6:	dc03      	bgt.n	80155b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80155a8:	f1bb 0f00 	cmp.w	fp, #0
 80155ac:	f340 809a 	ble.w	80156e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80155b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80155b2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80155b6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80155ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80155bc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80155c0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80155c4:	2b00      	cmp	r3, #0
 80155c6:	dd0c      	ble.n	80155e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80155c8:	1406      	asrs	r6, r0, #16
 80155ca:	d405      	bmi.n	80155d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80155cc:	454e      	cmp	r6, r9
 80155ce:	da03      	bge.n	80155d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80155d0:	1416      	asrs	r6, r2, #16
 80155d2:	d401      	bmi.n	80155d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80155d4:	4546      	cmp	r6, r8
 80155d6:	db05      	blt.n	80155e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80155d8:	4470      	add	r0, lr
 80155da:	4462      	add	r2, ip
 80155dc:	3b01      	subs	r3, #1
 80155de:	3402      	adds	r4, #2
 80155e0:	e7f0      	b.n	80155c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80155e2:	d00f      	beq.n	8015604 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80155e4:	1e5e      	subs	r6, r3, #1
 80155e6:	fb0e 0706 	mla	r7, lr, r6, r0
 80155ea:	143f      	asrs	r7, r7, #16
 80155ec:	d541      	bpl.n	8015672 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80155ee:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80155f2:	4698      	mov	r8, r3
 80155f4:	9603      	str	r6, [sp, #12]
 80155f6:	f1b8 0f00 	cmp.w	r8, #0
 80155fa:	dc56      	bgt.n	80156aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80155fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015600:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015604:	9b01      	ldr	r3, [sp, #4]
 8015606:	2b00      	cmp	r3, #0
 8015608:	dd6c      	ble.n	80156e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801560a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801560e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015610:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015614:	eeb0 6a62 	vmov.f32	s12, s5
 8015618:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801561c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015620:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015624:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015628:	eeb0 6a43 	vmov.f32	s12, s6
 801562c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015630:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8015634:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015638:	ee61 7a27 	vmul.f32	s15, s2, s15
 801563c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015640:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015644:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015648:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801564c:	ee12 2a90 	vmov	r2, s5
 8015650:	eef0 2a47 	vmov.f32	s5, s14
 8015654:	fb92 fef3 	sdiv	lr, r2, r3
 8015658:	ee13 2a10 	vmov	r2, s6
 801565c:	eeb0 3a67 	vmov.f32	s6, s15
 8015660:	fb92 fcf3 	sdiv	ip, r2, r3
 8015664:	9b01      	ldr	r3, [sp, #4]
 8015666:	3b01      	subs	r3, #1
 8015668:	9301      	str	r3, [sp, #4]
 801566a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801566c:	bf08      	it	eq
 801566e:	465b      	moveq	r3, fp
 8015670:	e797      	b.n	80155a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015672:	454f      	cmp	r7, r9
 8015674:	dabb      	bge.n	80155ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015676:	fb0c 2606 	mla	r6, ip, r6, r2
 801567a:	1436      	asrs	r6, r6, #16
 801567c:	d4b7      	bmi.n	80155ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801567e:	4546      	cmp	r6, r8
 8015680:	dab5      	bge.n	80155ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015682:	461e      	mov	r6, r3
 8015684:	46a0      	mov	r8, r4
 8015686:	2e00      	cmp	r6, #0
 8015688:	ddb8      	ble.n	80155fc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801568a:	1417      	asrs	r7, r2, #16
 801568c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015690:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015694:	9902      	ldr	r1, [sp, #8]
 8015696:	4470      	add	r0, lr
 8015698:	4462      	add	r2, ip
 801569a:	fb0a 9707 	mla	r7, sl, r7, r9
 801569e:	3e01      	subs	r6, #1
 80156a0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80156a4:	f828 7b02 	strh.w	r7, [r8], #2
 80156a8:	e7ed      	b.n	8015686 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80156aa:	ea5f 4920 	movs.w	r9, r0, asr #16
 80156ae:	d414      	bmi.n	80156da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80156b0:	68ae      	ldr	r6, [r5, #8]
 80156b2:	454e      	cmp	r6, r9
 80156b4:	dd11      	ble.n	80156da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80156b6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80156ba:	d40e      	bmi.n	80156da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80156bc:	68ef      	ldr	r7, [r5, #12]
 80156be:	4557      	cmp	r7, sl
 80156c0:	dd0b      	ble.n	80156da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80156c2:	b236      	sxth	r6, r6
 80156c4:	f06f 0101 	mvn.w	r1, #1
 80156c8:	9f02      	ldr	r7, [sp, #8]
 80156ca:	fb0a 9606 	mla	r6, sl, r6, r9
 80156ce:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80156d2:	fb01 f608 	mul.w	r6, r1, r8
 80156d6:	9903      	ldr	r1, [sp, #12]
 80156d8:	538f      	strh	r7, [r1, r6]
 80156da:	4470      	add	r0, lr
 80156dc:	4462      	add	r2, ip
 80156de:	f108 38ff 	add.w	r8, r8, #4294967295
 80156e2:	e788      	b.n	80155f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80156e4:	b005      	add	sp, #20
 80156e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080156ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80156ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156ee:	b087      	sub	sp, #28
 80156f0:	468b      	mov	fp, r1
 80156f2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80156f6:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80156f8:	9203      	str	r2, [sp, #12]
 80156fa:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80156fe:	6841      	ldr	r1, [r0, #4]
 8015700:	9204      	str	r2, [sp, #16]
 8015702:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8015706:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 801570a:	fb01 2505 	mla	r5, r1, r5, r2
 801570e:	6802      	ldr	r2, [r0, #0]
 8015710:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8015714:	f8d9 2000 	ldr.w	r2, [r9]
 8015718:	9201      	str	r2, [sp, #4]
 801571a:	f1bb 0f00 	cmp.w	fp, #0
 801571e:	dc03      	bgt.n	8015728 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015720:	9a03      	ldr	r2, [sp, #12]
 8015722:	2a00      	cmp	r2, #0
 8015724:	f340 8158 	ble.w	80159d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8015728:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801572a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801572e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015732:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015734:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015738:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801573c:	2b00      	cmp	r3, #0
 801573e:	dd0e      	ble.n	801575e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015740:	1402      	asrs	r2, r0, #16
 8015742:	d405      	bmi.n	8015750 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015744:	42ba      	cmp	r2, r7
 8015746:	da03      	bge.n	8015750 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015748:	140a      	asrs	r2, r1, #16
 801574a:	d401      	bmi.n	8015750 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801574c:	42b2      	cmp	r2, r6
 801574e:	db07      	blt.n	8015760 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015750:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015752:	3b01      	subs	r3, #1
 8015754:	3502      	adds	r5, #2
 8015756:	4410      	add	r0, r2
 8015758:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801575a:	4411      	add	r1, r2
 801575c:	e7ee      	b.n	801573c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801575e:	d017      	beq.n	8015790 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015760:	1e5a      	subs	r2, r3, #1
 8015762:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015764:	fb04 0402 	mla	r4, r4, r2, r0
 8015768:	1424      	asrs	r4, r4, #16
 801576a:	d409      	bmi.n	8015780 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801576c:	42bc      	cmp	r4, r7
 801576e:	da07      	bge.n	8015780 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015770:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015772:	fb04 1202 	mla	r2, r4, r2, r1
 8015776:	1412      	asrs	r2, r2, #16
 8015778:	d402      	bmi.n	8015780 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801577a:	42b2      	cmp	r2, r6
 801577c:	f2c0 80bf 	blt.w	80158fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015780:	2700      	movs	r7, #0
 8015782:	19da      	adds	r2, r3, r7
 8015784:	2a00      	cmp	r2, #0
 8015786:	dc3e      	bgt.n	8015806 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015788:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801578c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8015790:	f1bb 0f00 	cmp.w	fp, #0
 8015794:	f340 8120 	ble.w	80159d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8015798:	ee30 0a04 	vadd.f32	s0, s0, s8
 801579c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801579e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80157a2:	f1bb 0b01 	subs.w	fp, fp, #1
 80157a6:	eeb0 6a62 	vmov.f32	s12, s5
 80157aa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80157ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80157b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80157b6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80157ba:	eeb0 6a43 	vmov.f32	s12, s6
 80157be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80157c2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80157c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80157ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80157ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80157d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80157d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80157da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80157de:	ee12 2a90 	vmov	r2, s5
 80157e2:	eef0 2a47 	vmov.f32	s5, s14
 80157e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80157ea:	ee13 2a10 	vmov	r2, s6
 80157ee:	9313      	str	r3, [sp, #76]	@ 0x4c
 80157f0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80157f2:	eeb0 3a67 	vmov.f32	s6, s15
 80157f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80157fa:	9a03      	ldr	r2, [sp, #12]
 80157fc:	9314      	str	r3, [sp, #80]	@ 0x50
 80157fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015800:	bf08      	it	eq
 8015802:	4613      	moveq	r3, r2
 8015804:	e789      	b.n	801571a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015806:	1406      	asrs	r6, r0, #16
 8015808:	d42d      	bmi.n	8015866 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801580a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801580e:	42b4      	cmp	r4, r6
 8015810:	dd29      	ble.n	8015866 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015812:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8015816:	d426      	bmi.n	8015866 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015818:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801581c:	4562      	cmp	r2, ip
 801581e:	dd22      	ble.n	8015866 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015820:	b224      	sxth	r4, r4
 8015822:	9a01      	ldr	r2, [sp, #4]
 8015824:	fb0c 6404 	mla	r4, ip, r4, r6
 8015828:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801582c:	0e22      	lsrs	r2, r4, #24
 801582e:	d01a      	beq.n	8015866 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015830:	9e04      	ldr	r6, [sp, #16]
 8015832:	4372      	muls	r2, r6
 8015834:	1c56      	adds	r6, r2, #1
 8015836:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801583a:	0a26      	lsrs	r6, r4, #8
 801583c:	1212      	asrs	r2, r2, #8
 801583e:	9605      	str	r6, [sp, #20]
 8015840:	2aff      	cmp	r2, #255	@ 0xff
 8015842:	d116      	bne.n	8015872 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8015844:	f06f 0201 	mvn.w	r2, #1
 8015848:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801584c:	fb02 fc07 	mul.w	ip, r2, r7
 8015850:	0962      	lsrs	r2, r4, #5
 8015852:	f026 0607 	bic.w	r6, r6, #7
 8015856:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801585a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801585e:	4316      	orrs	r6, r2
 8015860:	4326      	orrs	r6, r4
 8015862:	f825 600c 	strh.w	r6, [r5, ip]
 8015866:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015868:	3f01      	subs	r7, #1
 801586a:	4410      	add	r0, r2
 801586c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801586e:	4411      	add	r1, r2
 8015870:	e787      	b.n	8015782 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015872:	f06f 0601 	mvn.w	r6, #1
 8015876:	fa1f fa82 	uxth.w	sl, r2
 801587a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801587e:	43d2      	mvns	r2, r2
 8015880:	437e      	muls	r6, r7
 8015882:	b2e4      	uxtb	r4, r4
 8015884:	fb1c fc0a 	smulbb	ip, ip, sl
 8015888:	b2d2      	uxtb	r2, r2
 801588a:	f835 8006 	ldrh.w	r8, [r5, r6]
 801588e:	fb14 f40a 	smulbb	r4, r4, sl
 8015892:	9602      	str	r6, [sp, #8]
 8015894:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015898:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801589c:	fb16 f60a 	smulbb	r6, r6, sl
 80158a0:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80158a4:	fb0e ce02 	mla	lr, lr, r2, ip
 80158a8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80158ac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80158b0:	fa1f fe8e 	uxth.w	lr, lr
 80158b4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80158b8:	fa5f f888 	uxtb.w	r8, r8
 80158bc:	fb0c 6c02 	mla	ip, ip, r2, r6
 80158c0:	fb08 4402 	mla	r4, r8, r2, r4
 80158c4:	f10e 0201 	add.w	r2, lr, #1
 80158c8:	fa1f fc8c 	uxth.w	ip, ip
 80158cc:	b2a4      	uxth	r4, r4
 80158ce:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80158d2:	9a02      	ldr	r2, [sp, #8]
 80158d4:	1c66      	adds	r6, r4, #1
 80158d6:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80158da:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80158de:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80158e2:	ea46 0e0e 	orr.w	lr, r6, lr
 80158e6:	f10c 0601 	add.w	r6, ip, #1
 80158ea:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80158ee:	0976      	lsrs	r6, r6, #5
 80158f0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80158f4:	ea4e 0e06 	orr.w	lr, lr, r6
 80158f8:	f825 e002 	strh.w	lr, [r5, r2]
 80158fc:	e7b3      	b.n	8015866 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80158fe:	f04f 0800 	mov.w	r8, #0
 8015902:	eba3 0208 	sub.w	r2, r3, r8
 8015906:	2a00      	cmp	r2, #0
 8015908:	f77f af3e 	ble.w	8015788 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801590c:	1404      	asrs	r4, r0, #16
 801590e:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8015912:	140a      	asrs	r2, r1, #16
 8015914:	fb06 4202 	mla	r2, r6, r2, r4
 8015918:	9c01      	ldr	r4, [sp, #4]
 801591a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801591e:	0e22      	lsrs	r2, r4, #24
 8015920:	d015      	beq.n	801594e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8015922:	9e04      	ldr	r6, [sp, #16]
 8015924:	4372      	muls	r2, r6
 8015926:	1c56      	adds	r6, r2, #1
 8015928:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801592c:	0a26      	lsrs	r6, r4, #8
 801592e:	1212      	asrs	r2, r2, #8
 8015930:	2aff      	cmp	r2, #255	@ 0xff
 8015932:	d113      	bne.n	801595c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8015934:	0962      	lsrs	r2, r4, #5
 8015936:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801593a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801593e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015942:	f026 0607 	bic.w	r6, r6, #7
 8015946:	4316      	orrs	r6, r2
 8015948:	4326      	orrs	r6, r4
 801594a:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801594e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015950:	f108 0801 	add.w	r8, r8, #1
 8015954:	4410      	add	r0, r2
 8015956:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015958:	4411      	add	r1, r2
 801595a:	e7d2      	b.n	8015902 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801595c:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8015960:	fa1f fa82 	uxth.w	sl, r2
 8015964:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8015968:	43d2      	mvns	r2, r2
 801596a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801596e:	fb17 f70a 	smulbb	r7, r7, sl
 8015972:	b2d2      	uxtb	r2, r2
 8015974:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015978:	b2e4      	uxtb	r4, r4
 801597a:	b2f6      	uxtb	r6, r6
 801597c:	fb0c 7c02 	mla	ip, ip, r2, r7
 8015980:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015984:	fb14 f40a 	smulbb	r4, r4, sl
 8015988:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801598c:	fa1f fc8c 	uxth.w	ip, ip
 8015990:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015994:	fb16 f60a 	smulbb	r6, r6, sl
 8015998:	fa5f fe8e 	uxtb.w	lr, lr
 801599c:	fb0e 4402 	mla	r4, lr, r2, r4
 80159a0:	fb07 6702 	mla	r7, r7, r2, r6
 80159a4:	f10c 0201 	add.w	r2, ip, #1
 80159a8:	b2a4      	uxth	r4, r4
 80159aa:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80159ae:	1c66      	adds	r6, r4, #1
 80159b0:	b2bf      	uxth	r7, r7
 80159b2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80159b6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80159ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80159be:	ea46 0c0c 	orr.w	ip, r6, ip
 80159c2:	1c7e      	adds	r6, r7, #1
 80159c4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80159c8:	0976      	lsrs	r6, r6, #5
 80159ca:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80159ce:	ea4c 0c06 	orr.w	ip, ip, r6
 80159d2:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80159d6:	e7ba      	b.n	801594e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80159d8:	b007      	add	sp, #28
 80159da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080159e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80159e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80159e4:	b085      	sub	sp, #20
 80159e6:	468b      	mov	fp, r1
 80159e8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80159ec:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80159ee:	9203      	str	r2, [sp, #12]
 80159f0:	6841      	ldr	r1, [r0, #4]
 80159f2:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80159f6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80159fa:	fb01 2404 	mla	r4, r1, r4, r2
 80159fe:	6802      	ldr	r2, [r0, #0]
 8015a00:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015a04:	f8d8 2000 	ldr.w	r2, [r8]
 8015a08:	9201      	str	r2, [sp, #4]
 8015a0a:	f1bb 0f00 	cmp.w	fp, #0
 8015a0e:	dc03      	bgt.n	8015a18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015a10:	9a03      	ldr	r2, [sp, #12]
 8015a12:	2a00      	cmp	r2, #0
 8015a14:	f340 814f 	ble.w	8015cb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015a18:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015a1a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015a1e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015a22:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015a24:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015a28:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015a2c:	2b00      	cmp	r3, #0
 8015a2e:	dd0e      	ble.n	8015a4e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015a30:	1408      	asrs	r0, r1, #16
 8015a32:	d405      	bmi.n	8015a40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015a34:	42b8      	cmp	r0, r7
 8015a36:	da03      	bge.n	8015a40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015a38:	1410      	asrs	r0, r2, #16
 8015a3a:	d401      	bmi.n	8015a40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015a3c:	42b0      	cmp	r0, r6
 8015a3e:	db07      	blt.n	8015a50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015a40:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015a42:	3b01      	subs	r3, #1
 8015a44:	3402      	adds	r4, #2
 8015a46:	4401      	add	r1, r0
 8015a48:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015a4a:	4402      	add	r2, r0
 8015a4c:	e7ee      	b.n	8015a2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015a4e:	d017      	beq.n	8015a80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015a50:	1e58      	subs	r0, r3, #1
 8015a52:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8015a54:	fb05 1500 	mla	r5, r5, r0, r1
 8015a58:	142d      	asrs	r5, r5, #16
 8015a5a:	d409      	bmi.n	8015a70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015a5c:	42bd      	cmp	r5, r7
 8015a5e:	da07      	bge.n	8015a70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015a60:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8015a62:	fb05 2000 	mla	r0, r5, r0, r2
 8015a66:	1400      	asrs	r0, r0, #16
 8015a68:	d402      	bmi.n	8015a70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015a6a:	42b0      	cmp	r0, r6
 8015a6c:	f2c0 80ba 	blt.w	8015be4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015a70:	2600      	movs	r6, #0
 8015a72:	1998      	adds	r0, r3, r6
 8015a74:	2800      	cmp	r0, #0
 8015a76:	dc3e      	bgt.n	8015af6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015a78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015a7c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015a80:	f1bb 0f00 	cmp.w	fp, #0
 8015a84:	f340 8117 	ble.w	8015cb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015a88:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015a8c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015a8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015a92:	f1bb 0b01 	subs.w	fp, fp, #1
 8015a96:	eeb0 6a62 	vmov.f32	s12, s5
 8015a9a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015a9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015aa2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015aa6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015aaa:	eeb0 6a43 	vmov.f32	s12, s6
 8015aae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ab2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8015ab6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015aba:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015abe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015ac2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015ac6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015aca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015ace:	ee12 2a90 	vmov	r2, s5
 8015ad2:	eef0 2a47 	vmov.f32	s5, s14
 8015ad6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ada:	ee13 2a10 	vmov	r2, s6
 8015ade:	9311      	str	r3, [sp, #68]	@ 0x44
 8015ae0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015ae2:	eeb0 3a67 	vmov.f32	s6, s15
 8015ae6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015aea:	9a03      	ldr	r2, [sp, #12]
 8015aec:	9312      	str	r3, [sp, #72]	@ 0x48
 8015aee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015af0:	bf08      	it	eq
 8015af2:	4613      	moveq	r3, r2
 8015af4:	e789      	b.n	8015a0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015af6:	140f      	asrs	r7, r1, #16
 8015af8:	d424      	bmi.n	8015b44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015afa:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015afe:	42bd      	cmp	r5, r7
 8015b00:	dd20      	ble.n	8015b44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015b02:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015b06:	d41d      	bmi.n	8015b44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015b08:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8015b0c:	4560      	cmp	r0, ip
 8015b0e:	dd19      	ble.n	8015b44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015b10:	b22d      	sxth	r5, r5
 8015b12:	9801      	ldr	r0, [sp, #4]
 8015b14:	fb0c 7505 	mla	r5, ip, r5, r7
 8015b18:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8015b1c:	0e07      	lsrs	r7, r0, #24
 8015b1e:	2fff      	cmp	r7, #255	@ 0xff
 8015b20:	d116      	bne.n	8015b50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015b22:	f06f 0501 	mvn.w	r5, #1
 8015b26:	fb05 f706 	mul.w	r7, r5, r6
 8015b2a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8015b2e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015b32:	0945      	lsrs	r5, r0, #5
 8015b34:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015b38:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015b3c:	ea4c 0505 	orr.w	r5, ip, r5
 8015b40:	4305      	orrs	r5, r0
 8015b42:	53e5      	strh	r5, [r4, r7]
 8015b44:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015b46:	3e01      	subs	r6, #1
 8015b48:	4401      	add	r1, r0
 8015b4a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015b4c:	4402      	add	r2, r0
 8015b4e:	e790      	b.n	8015a72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015b50:	b2fd      	uxtb	r5, r7
 8015b52:	2f00      	cmp	r7, #0
 8015b54:	d0f6      	beq.n	8015b44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015b56:	f06f 0701 	mvn.w	r7, #1
 8015b5a:	fa1f f985 	uxth.w	r9, r5
 8015b5e:	43ed      	mvns	r5, r5
 8015b60:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015b64:	4377      	muls	r7, r6
 8015b66:	fb1a fa09 	smulbb	sl, sl, r9
 8015b6a:	b2ed      	uxtb	r5, r5
 8015b6c:	f834 e007 	ldrh.w	lr, [r4, r7]
 8015b70:	9702      	str	r7, [sp, #8]
 8015b72:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015b76:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015b7a:	fb17 f709 	smulbb	r7, r7, r9
 8015b7e:	b2c0      	uxtb	r0, r0
 8015b80:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015b84:	fb10 f009 	smulbb	r0, r0, r9
 8015b88:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015b8c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015b90:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015b94:	fa1f fc8c 	uxth.w	ip, ip
 8015b98:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015b9c:	fa5f fe8e 	uxtb.w	lr, lr
 8015ba0:	fb07 a705 	mla	r7, r7, r5, sl
 8015ba4:	fb0e 0005 	mla	r0, lr, r5, r0
 8015ba8:	f10c 0501 	add.w	r5, ip, #1
 8015bac:	b2bf      	uxth	r7, r7
 8015bae:	b280      	uxth	r0, r0
 8015bb0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015bb4:	f100 0a01 	add.w	sl, r0, #1
 8015bb8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015bbc:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8015bc0:	9802      	ldr	r0, [sp, #8]
 8015bc2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015bc6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015bca:	f107 0a01 	add.w	sl, r7, #1
 8015bce:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015bd2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015bd6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015bda:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015bde:	f824 c000 	strh.w	ip, [r4, r0]
 8015be2:	e7af      	b.n	8015b44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015be4:	f04f 0e00 	mov.w	lr, #0
 8015be8:	eba3 000e 	sub.w	r0, r3, lr
 8015bec:	2800      	cmp	r0, #0
 8015bee:	f77f af43 	ble.w	8015a78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015bf2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015bf6:	140d      	asrs	r5, r1, #16
 8015bf8:	1410      	asrs	r0, r2, #16
 8015bfa:	fb06 5000 	mla	r0, r6, r0, r5
 8015bfe:	9d01      	ldr	r5, [sp, #4]
 8015c00:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015c04:	0e2e      	lsrs	r6, r5, #24
 8015c06:	2eff      	cmp	r6, #255	@ 0xff
 8015c08:	d112      	bne.n	8015c30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8015c0a:	482c      	ldr	r0, [pc, #176]	@ (8015cbc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8015c0c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015c10:	0968      	lsrs	r0, r5, #5
 8015c12:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015c16:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015c1a:	4330      	orrs	r0, r6
 8015c1c:	4328      	orrs	r0, r5
 8015c1e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8015c22:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015c24:	f10e 0e01 	add.w	lr, lr, #1
 8015c28:	4401      	add	r1, r0
 8015c2a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015c2c:	4402      	add	r2, r0
 8015c2e:	e7db      	b.n	8015be8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8015c30:	b2f0      	uxtb	r0, r6
 8015c32:	2e00      	cmp	r6, #0
 8015c34:	d0f5      	beq.n	8015c22 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8015c36:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015c3a:	fa1f f980 	uxth.w	r9, r0
 8015c3e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015c42:	43c0      	mvns	r0, r0
 8015c44:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015c48:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015c4c:	fb16 f609 	smulbb	r6, r6, r9
 8015c50:	b2c0      	uxtb	r0, r0
 8015c52:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015c56:	b2ed      	uxtb	r5, r5
 8015c58:	fb1a fa09 	smulbb	sl, sl, r9
 8015c5c:	fb07 6700 	mla	r7, r7, r0, r6
 8015c60:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015c64:	fb15 f509 	smulbb	r5, r5, r9
 8015c68:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015c6c:	b2bf      	uxth	r7, r7
 8015c6e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015c72:	fa5f fc8c 	uxtb.w	ip, ip
 8015c76:	fb06 a600 	mla	r6, r6, r0, sl
 8015c7a:	fb0c 5500 	mla	r5, ip, r0, r5
 8015c7e:	1c78      	adds	r0, r7, #1
 8015c80:	b2b6      	uxth	r6, r6
 8015c82:	b2ad      	uxth	r5, r5
 8015c84:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8015c88:	f105 0a01 	add.w	sl, r5, #1
 8015c8c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015c90:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015c94:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015c98:	ea4a 0707 	orr.w	r7, sl, r7
 8015c9c:	f106 0a01 	add.w	sl, r6, #1
 8015ca0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015ca4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015ca8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015cac:	ea47 070a 	orr.w	r7, r7, sl
 8015cb0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8015cb4:	e7b5      	b.n	8015c22 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8015cb6:	b005      	add	sp, #20
 8015cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015cbc:	fffff800 	.word	0xfffff800

08015cc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cc4:	b087      	sub	sp, #28
 8015cc6:	468b      	mov	fp, r1
 8015cc8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015ccc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015cce:	9203      	str	r2, [sp, #12]
 8015cd0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015cd4:	6841      	ldr	r1, [r0, #4]
 8015cd6:	9204      	str	r2, [sp, #16]
 8015cd8:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8015cdc:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8015ce0:	fb01 2404 	mla	r4, r1, r4, r2
 8015ce4:	6802      	ldr	r2, [r0, #0]
 8015ce6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015cea:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015cee:	3201      	adds	r2, #1
 8015cf0:	f022 0201 	bic.w	r2, r2, #1
 8015cf4:	9200      	str	r2, [sp, #0]
 8015cf6:	f8d9 2000 	ldr.w	r2, [r9]
 8015cfa:	9201      	str	r2, [sp, #4]
 8015cfc:	f1bb 0f00 	cmp.w	fp, #0
 8015d00:	dc03      	bgt.n	8015d0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8015d02:	9a03      	ldr	r2, [sp, #12]
 8015d04:	2a00      	cmp	r2, #0
 8015d06:	f340 816a 	ble.w	8015fde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8015d0a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015d0c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8015d10:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015d14:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015d16:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015d1a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015d1e:	2b00      	cmp	r3, #0
 8015d20:	dd0e      	ble.n	8015d40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015d22:	1402      	asrs	r2, r0, #16
 8015d24:	d405      	bmi.n	8015d32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015d26:	42ba      	cmp	r2, r7
 8015d28:	da03      	bge.n	8015d32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015d2a:	140a      	asrs	r2, r1, #16
 8015d2c:	d401      	bmi.n	8015d32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015d2e:	42b2      	cmp	r2, r6
 8015d30:	db07      	blt.n	8015d42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8015d32:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015d34:	3b01      	subs	r3, #1
 8015d36:	3402      	adds	r4, #2
 8015d38:	4410      	add	r0, r2
 8015d3a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015d3c:	4411      	add	r1, r2
 8015d3e:	e7ee      	b.n	8015d1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015d40:	d017      	beq.n	8015d72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015d42:	1e5a      	subs	r2, r3, #1
 8015d44:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8015d46:	fb05 0502 	mla	r5, r5, r2, r0
 8015d4a:	142d      	asrs	r5, r5, #16
 8015d4c:	d409      	bmi.n	8015d62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015d4e:	42bd      	cmp	r5, r7
 8015d50:	da07      	bge.n	8015d62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015d52:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8015d54:	fb05 1202 	mla	r2, r5, r2, r1
 8015d58:	1412      	asrs	r2, r2, #16
 8015d5a:	d402      	bmi.n	8015d62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015d5c:	42b2      	cmp	r2, r6
 8015d5e:	f2c0 80c8 	blt.w	8015ef2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8015d62:	2700      	movs	r7, #0
 8015d64:	19da      	adds	r2, r3, r7
 8015d66:	2a00      	cmp	r2, #0
 8015d68:	dc3e      	bgt.n	8015de8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015d6a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015d6e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015d72:	f1bb 0f00 	cmp.w	fp, #0
 8015d76:	f340 8132 	ble.w	8015fde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8015d7a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015d7e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015d80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015d84:	f1bb 0b01 	subs.w	fp, fp, #1
 8015d88:	eeb0 6a62 	vmov.f32	s12, s5
 8015d8c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015d90:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015d94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015d98:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015d9c:	eeb0 6a43 	vmov.f32	s12, s6
 8015da0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015da4:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015da8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015dac:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015db0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015db4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015db8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015dbc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015dc0:	ee12 2a90 	vmov	r2, s5
 8015dc4:	eef0 2a47 	vmov.f32	s5, s14
 8015dc8:	fb92 f3f3 	sdiv	r3, r2, r3
 8015dcc:	ee13 2a10 	vmov	r2, s6
 8015dd0:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015dd2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015dd4:	eeb0 3a67 	vmov.f32	s6, s15
 8015dd8:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ddc:	9a03      	ldr	r2, [sp, #12]
 8015dde:	9314      	str	r3, [sp, #80]	@ 0x50
 8015de0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015de2:	bf08      	it	eq
 8015de4:	4613      	moveq	r3, r2
 8015de6:	e789      	b.n	8015cfc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015de8:	1405      	asrs	r5, r0, #16
 8015dea:	d436      	bmi.n	8015e5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015dec:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015df0:	42aa      	cmp	r2, r5
 8015df2:	dd32      	ble.n	8015e5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015df4:	140e      	asrs	r6, r1, #16
 8015df6:	d430      	bmi.n	8015e5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015df8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8015dfc:	42b2      	cmp	r2, r6
 8015dfe:	dd2c      	ble.n	8015e5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015e00:	9a00      	ldr	r2, [sp, #0]
 8015e02:	fb06 5502 	mla	r5, r6, r2, r5
 8015e06:	9e01      	ldr	r6, [sp, #4]
 8015e08:	086a      	lsrs	r2, r5, #1
 8015e0a:	5cb2      	ldrb	r2, [r6, r2]
 8015e0c:	07ee      	lsls	r6, r5, #31
 8015e0e:	bf54      	ite	pl
 8015e10:	f002 020f 	andpl.w	r2, r2, #15
 8015e14:	1112      	asrmi	r2, r2, #4
 8015e16:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015e1a:	b2d2      	uxtb	r2, r2
 8015e1c:	b1ea      	cbz	r2, 8015e5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015e1e:	9d04      	ldr	r5, [sp, #16]
 8015e20:	436a      	muls	r2, r5
 8015e22:	1c55      	adds	r5, r2, #1
 8015e24:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015e28:	4d6e      	ldr	r5, [pc, #440]	@ (8015fe4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8015e2a:	1212      	asrs	r2, r2, #8
 8015e2c:	682d      	ldr	r5, [r5, #0]
 8015e2e:	2aff      	cmp	r2, #255	@ 0xff
 8015e30:	ea4f 2615 	mov.w	r6, r5, lsr #8
 8015e34:	9605      	str	r6, [sp, #20]
 8015e36:	d116      	bne.n	8015e66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8015e38:	f06f 0201 	mvn.w	r2, #1
 8015e3c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8015e40:	fb02 fc07 	mul.w	ip, r2, r7
 8015e44:	096a      	lsrs	r2, r5, #5
 8015e46:	f026 0607 	bic.w	r6, r6, #7
 8015e4a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015e4e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015e52:	4316      	orrs	r6, r2
 8015e54:	432e      	orrs	r6, r5
 8015e56:	f824 600c 	strh.w	r6, [r4, ip]
 8015e5a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015e5c:	3f01      	subs	r7, #1
 8015e5e:	4410      	add	r0, r2
 8015e60:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015e62:	4411      	add	r1, r2
 8015e64:	e77e      	b.n	8015d64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8015e66:	f06f 0601 	mvn.w	r6, #1
 8015e6a:	fa1f fa82 	uxth.w	sl, r2
 8015e6e:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8015e72:	43d2      	mvns	r2, r2
 8015e74:	437e      	muls	r6, r7
 8015e76:	b2ed      	uxtb	r5, r5
 8015e78:	fb1c fc0a 	smulbb	ip, ip, sl
 8015e7c:	b2d2      	uxtb	r2, r2
 8015e7e:	f834 8006 	ldrh.w	r8, [r4, r6]
 8015e82:	fb15 f50a 	smulbb	r5, r5, sl
 8015e86:	9602      	str	r6, [sp, #8]
 8015e88:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015e8c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015e90:	fb16 f60a 	smulbb	r6, r6, sl
 8015e94:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8015e98:	fb0e ce02 	mla	lr, lr, r2, ip
 8015e9c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015ea0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015ea4:	fa1f fe8e 	uxth.w	lr, lr
 8015ea8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8015eac:	fa5f f888 	uxtb.w	r8, r8
 8015eb0:	fb0c 6c02 	mla	ip, ip, r2, r6
 8015eb4:	fb08 5502 	mla	r5, r8, r2, r5
 8015eb8:	f10e 0201 	add.w	r2, lr, #1
 8015ebc:	fa1f fc8c 	uxth.w	ip, ip
 8015ec0:	b2ad      	uxth	r5, r5
 8015ec2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015ec6:	9a02      	ldr	r2, [sp, #8]
 8015ec8:	1c6e      	adds	r6, r5, #1
 8015eca:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8015ece:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8015ed2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015ed6:	ea46 0e0e 	orr.w	lr, r6, lr
 8015eda:	f10c 0601 	add.w	r6, ip, #1
 8015ede:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015ee2:	0976      	lsrs	r6, r6, #5
 8015ee4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015ee8:	ea4e 0e06 	orr.w	lr, lr, r6
 8015eec:	f824 e002 	strh.w	lr, [r4, r2]
 8015ef0:	e7b3      	b.n	8015e5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015ef2:	f04f 0800 	mov.w	r8, #0
 8015ef6:	eba3 0208 	sub.w	r2, r3, r8
 8015efa:	2a00      	cmp	r2, #0
 8015efc:	f77f af35 	ble.w	8015d6a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015f00:	1402      	asrs	r2, r0, #16
 8015f02:	9e00      	ldr	r6, [sp, #0]
 8015f04:	140d      	asrs	r5, r1, #16
 8015f06:	fb06 2505 	mla	r5, r6, r5, r2
 8015f0a:	9e01      	ldr	r6, [sp, #4]
 8015f0c:	086a      	lsrs	r2, r5, #1
 8015f0e:	07ed      	lsls	r5, r5, #31
 8015f10:	5cb2      	ldrb	r2, [r6, r2]
 8015f12:	bf54      	ite	pl
 8015f14:	f002 020f 	andpl.w	r2, r2, #15
 8015f18:	1112      	asrmi	r2, r2, #4
 8015f1a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015f1e:	b2d2      	uxtb	r2, r2
 8015f20:	b1c2      	cbz	r2, 8015f54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015f22:	9d04      	ldr	r5, [sp, #16]
 8015f24:	436a      	muls	r2, r5
 8015f26:	1c55      	adds	r5, r2, #1
 8015f28:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015f2c:	4d2d      	ldr	r5, [pc, #180]	@ (8015fe4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8015f2e:	1212      	asrs	r2, r2, #8
 8015f30:	682e      	ldr	r6, [r5, #0]
 8015f32:	2aff      	cmp	r2, #255	@ 0xff
 8015f34:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8015f38:	d113      	bne.n	8015f62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015f3a:	0972      	lsrs	r2, r6, #5
 8015f3c:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8015f40:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8015f44:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015f48:	f025 0507 	bic.w	r5, r5, #7
 8015f4c:	4315      	orrs	r5, r2
 8015f4e:	4335      	orrs	r5, r6
 8015f50:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8015f54:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015f56:	f108 0801 	add.w	r8, r8, #1
 8015f5a:	4410      	add	r0, r2
 8015f5c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015f5e:	4411      	add	r1, r2
 8015f60:	e7c9      	b.n	8015ef6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015f62:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015f66:	fa1f fa82 	uxth.w	sl, r2
 8015f6a:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8015f6e:	43d2      	mvns	r2, r2
 8015f70:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015f74:	fb17 f70a 	smulbb	r7, r7, sl
 8015f78:	b2d2      	uxtb	r2, r2
 8015f7a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015f7e:	b2f6      	uxtb	r6, r6
 8015f80:	b2ed      	uxtb	r5, r5
 8015f82:	fb0c 7c02 	mla	ip, ip, r2, r7
 8015f86:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015f8a:	fb16 f60a 	smulbb	r6, r6, sl
 8015f8e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015f92:	fa1f fc8c 	uxth.w	ip, ip
 8015f96:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015f9a:	fb15 f50a 	smulbb	r5, r5, sl
 8015f9e:	fa5f fe8e 	uxtb.w	lr, lr
 8015fa2:	fb0e 6602 	mla	r6, lr, r2, r6
 8015fa6:	fb07 5702 	mla	r7, r7, r2, r5
 8015faa:	f10c 0201 	add.w	r2, ip, #1
 8015fae:	b2b6      	uxth	r6, r6
 8015fb0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015fb4:	1c75      	adds	r5, r6, #1
 8015fb6:	b2bf      	uxth	r7, r7
 8015fb8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015fbc:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8015fc0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015fc4:	ea45 0c0c 	orr.w	ip, r5, ip
 8015fc8:	1c7d      	adds	r5, r7, #1
 8015fca:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8015fce:	096d      	lsrs	r5, r5, #5
 8015fd0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015fd4:	ea4c 0c05 	orr.w	ip, ip, r5
 8015fd8:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8015fdc:	e7ba      	b.n	8015f54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015fde:	b007      	add	sp, #28
 8015fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015fe4:	20016c98 	.word	0x20016c98

08015fe8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fec:	b087      	sub	sp, #28
 8015fee:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015ff2:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 80162fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8015ff6:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015ff8:	9101      	str	r1, [sp, #4]
 8015ffa:	9205      	str	r2, [sp, #20]
 8015ffc:	6841      	ldr	r1, [r0, #4]
 8015ffe:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8016002:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8016006:	fb01 2404 	mla	r4, r1, r4, r2
 801600a:	6802      	ldr	r2, [r0, #0]
 801600c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016010:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016014:	3201      	adds	r2, #1
 8016016:	f022 0201 	bic.w	r2, r2, #1
 801601a:	9202      	str	r2, [sp, #8]
 801601c:	f8db 2000 	ldr.w	r2, [fp]
 8016020:	9203      	str	r2, [sp, #12]
 8016022:	9a01      	ldr	r2, [sp, #4]
 8016024:	2a00      	cmp	r2, #0
 8016026:	dc03      	bgt.n	8016030 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016028:	9a05      	ldr	r2, [sp, #20]
 801602a:	2a00      	cmp	r2, #0
 801602c:	f340 8162 	ble.w	80162f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016030:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8016032:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8016036:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801603a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801603c:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016040:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016044:	2b00      	cmp	r3, #0
 8016046:	dd0e      	ble.n	8016066 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016048:	1402      	asrs	r2, r0, #16
 801604a:	d405      	bmi.n	8016058 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801604c:	42ba      	cmp	r2, r7
 801604e:	da03      	bge.n	8016058 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016050:	140a      	asrs	r2, r1, #16
 8016052:	d401      	bmi.n	8016058 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016054:	42b2      	cmp	r2, r6
 8016056:	db07      	blt.n	8016068 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016058:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801605a:	3b01      	subs	r3, #1
 801605c:	3402      	adds	r4, #2
 801605e:	4410      	add	r0, r2
 8016060:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016062:	4411      	add	r1, r2
 8016064:	e7ee      	b.n	8016044 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016066:	d017      	beq.n	8016098 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016068:	1e5a      	subs	r2, r3, #1
 801606a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801606c:	fb05 0502 	mla	r5, r5, r2, r0
 8016070:	142d      	asrs	r5, r5, #16
 8016072:	d409      	bmi.n	8016088 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016074:	42bd      	cmp	r5, r7
 8016076:	da07      	bge.n	8016088 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016078:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801607a:	fb05 1202 	mla	r2, r5, r2, r1
 801607e:	1412      	asrs	r2, r2, #16
 8016080:	d402      	bmi.n	8016088 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016082:	42b2      	cmp	r2, r6
 8016084:	f2c0 80c3 	blt.w	801620e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016088:	2500      	movs	r5, #0
 801608a:	195a      	adds	r2, r3, r5
 801608c:	2a00      	cmp	r2, #0
 801608e:	dc3f      	bgt.n	8016110 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016090:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016094:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016098:	9b01      	ldr	r3, [sp, #4]
 801609a:	2b00      	cmp	r3, #0
 801609c:	f340 812a 	ble.w	80162f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80160a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80160a4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80160a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80160aa:	eeb0 6a62 	vmov.f32	s12, s5
 80160ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80160b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80160b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80160ba:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80160be:	eeb0 6a43 	vmov.f32	s12, s6
 80160c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80160c6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80160ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80160ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 80160d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80160d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80160da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80160de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80160e2:	ee12 2a90 	vmov	r2, s5
 80160e6:	eef0 2a47 	vmov.f32	s5, s14
 80160ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80160ee:	ee13 2a10 	vmov	r2, s6
 80160f2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80160f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80160f6:	eeb0 3a67 	vmov.f32	s6, s15
 80160fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80160fe:	9314      	str	r3, [sp, #80]	@ 0x50
 8016100:	9b01      	ldr	r3, [sp, #4]
 8016102:	9a05      	ldr	r2, [sp, #20]
 8016104:	3b01      	subs	r3, #1
 8016106:	9301      	str	r3, [sp, #4]
 8016108:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801610a:	bf08      	it	eq
 801610c:	4613      	moveq	r3, r2
 801610e:	e788      	b.n	8016022 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016110:	1406      	asrs	r6, r0, #16
 8016112:	d42c      	bmi.n	801616e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016114:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016118:	42b2      	cmp	r2, r6
 801611a:	dd28      	ble.n	801616e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801611c:	140f      	asrs	r7, r1, #16
 801611e:	d426      	bmi.n	801616e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016120:	f8db 200c 	ldr.w	r2, [fp, #12]
 8016124:	42ba      	cmp	r2, r7
 8016126:	dd22      	ble.n	801616e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016128:	9a02      	ldr	r2, [sp, #8]
 801612a:	fb07 6602 	mla	r6, r7, r2, r6
 801612e:	9f03      	ldr	r7, [sp, #12]
 8016130:	0872      	lsrs	r2, r6, #1
 8016132:	07f6      	lsls	r6, r6, #31
 8016134:	5cba      	ldrb	r2, [r7, r2]
 8016136:	bf54      	ite	pl
 8016138:	f002 020f 	andpl.w	r2, r2, #15
 801613c:	1112      	asrmi	r2, r2, #4
 801613e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016142:	b2d2      	uxtb	r2, r2
 8016144:	2aff      	cmp	r2, #255	@ 0xff
 8016146:	d118      	bne.n	801617a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016148:	f06f 0601 	mvn.w	r6, #1
 801614c:	f8d8 2000 	ldr.w	r2, [r8]
 8016150:	fb06 f705 	mul.w	r7, r6, r5
 8016154:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8016158:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801615c:	0956      	lsrs	r6, r2, #5
 801615e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016162:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8016166:	ea4c 0606 	orr.w	r6, ip, r6
 801616a:	4316      	orrs	r6, r2
 801616c:	53e6      	strh	r6, [r4, r7]
 801616e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016170:	3d01      	subs	r5, #1
 8016172:	4410      	add	r0, r2
 8016174:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016176:	4411      	add	r1, r2
 8016178:	e787      	b.n	801608a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801617a:	2a00      	cmp	r2, #0
 801617c:	d0f7      	beq.n	801616e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801617e:	f06f 0601 	mvn.w	r6, #1
 8016182:	f8d8 c000 	ldr.w	ip, [r8]
 8016186:	fa1f f982 	uxth.w	r9, r2
 801618a:	43d2      	mvns	r2, r2
 801618c:	436e      	muls	r6, r5
 801618e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016192:	b2d2      	uxtb	r2, r2
 8016194:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016198:	fb1a fa09 	smulbb	sl, sl, r9
 801619c:	9604      	str	r6, [sp, #16]
 801619e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80161a2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80161a6:	fb16 f609 	smulbb	r6, r6, r9
 80161aa:	fa5f fc8c 	uxtb.w	ip, ip
 80161ae:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80161b2:	fb1c fc09 	smulbb	ip, ip, r9
 80161b6:	fb07 6702 	mla	r7, r7, r2, r6
 80161ba:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80161be:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80161c2:	b2bf      	uxth	r7, r7
 80161c4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80161c8:	fa5f fe8e 	uxtb.w	lr, lr
 80161cc:	fb06 a602 	mla	r6, r6, r2, sl
 80161d0:	fb0e cc02 	mla	ip, lr, r2, ip
 80161d4:	1c7a      	adds	r2, r7, #1
 80161d6:	b2b6      	uxth	r6, r6
 80161d8:	fa1f fc8c 	uxth.w	ip, ip
 80161dc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80161e0:	9a04      	ldr	r2, [sp, #16]
 80161e2:	f10c 0a01 	add.w	sl, ip, #1
 80161e6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80161ea:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80161ee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80161f2:	ea4a 0707 	orr.w	r7, sl, r7
 80161f6:	f106 0a01 	add.w	sl, r6, #1
 80161fa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80161fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016202:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016206:	ea47 070a 	orr.w	r7, r7, sl
 801620a:	52a7      	strh	r7, [r4, r2]
 801620c:	e7af      	b.n	801616e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801620e:	f04f 0e00 	mov.w	lr, #0
 8016212:	eba3 020e 	sub.w	r2, r3, lr
 8016216:	2a00      	cmp	r2, #0
 8016218:	f77f af3a 	ble.w	8016090 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801621c:	1402      	asrs	r2, r0, #16
 801621e:	9e02      	ldr	r6, [sp, #8]
 8016220:	140d      	asrs	r5, r1, #16
 8016222:	fb06 2505 	mla	r5, r6, r5, r2
 8016226:	9e03      	ldr	r6, [sp, #12]
 8016228:	086a      	lsrs	r2, r5, #1
 801622a:	07ed      	lsls	r5, r5, #31
 801622c:	5cb2      	ldrb	r2, [r6, r2]
 801622e:	bf54      	ite	pl
 8016230:	f002 020f 	andpl.w	r2, r2, #15
 8016234:	1112      	asrmi	r2, r2, #4
 8016236:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801623a:	b2d2      	uxtb	r2, r2
 801623c:	2aff      	cmp	r2, #255	@ 0xff
 801623e:	d115      	bne.n	801626c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016240:	f8d8 5000 	ldr.w	r5, [r8]
 8016244:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8016248:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801624c:	096a      	lsrs	r2, r5, #5
 801624e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016252:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016256:	4332      	orrs	r2, r6
 8016258:	432a      	orrs	r2, r5
 801625a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801625e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016260:	f10e 0e01 	add.w	lr, lr, #1
 8016264:	4410      	add	r0, r2
 8016266:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016268:	4411      	add	r1, r2
 801626a:	e7d2      	b.n	8016212 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801626c:	2a00      	cmp	r2, #0
 801626e:	d0f6      	beq.n	801625e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016270:	f8d8 7000 	ldr.w	r7, [r8]
 8016274:	fa1f f982 	uxth.w	r9, r2
 8016278:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801627c:	43d2      	mvns	r2, r2
 801627e:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8016282:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016286:	ea4f 262c 	mov.w	r6, ip, asr #8
 801628a:	fb15 f509 	smulbb	r5, r5, r9
 801628e:	b2d2      	uxtb	r2, r2
 8016290:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016294:	b2ff      	uxtb	r7, r7
 8016296:	fb1a fa09 	smulbb	sl, sl, r9
 801629a:	fb06 5602 	mla	r6, r6, r2, r5
 801629e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80162a2:	fb17 f709 	smulbb	r7, r7, r9
 80162a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80162aa:	b2b6      	uxth	r6, r6
 80162ac:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80162b0:	fa5f fc8c 	uxtb.w	ip, ip
 80162b4:	fb05 a502 	mla	r5, r5, r2, sl
 80162b8:	fb0c 7702 	mla	r7, ip, r2, r7
 80162bc:	1c72      	adds	r2, r6, #1
 80162be:	b2ad      	uxth	r5, r5
 80162c0:	b2bf      	uxth	r7, r7
 80162c2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80162c6:	f107 0a01 	add.w	sl, r7, #1
 80162ca:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80162ce:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80162d2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80162d6:	ea4a 0606 	orr.w	r6, sl, r6
 80162da:	f105 0a01 	add.w	sl, r5, #1
 80162de:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80162e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80162e6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80162ea:	ea46 060a 	orr.w	r6, r6, sl
 80162ee:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80162f2:	e7b4      	b.n	801625e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80162f4:	b007      	add	sp, #28
 80162f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80162fa:	bf00      	nop
 80162fc:	20016c98 	.word	0x20016c98

08016300 <_ZN8touchgfx8LCD16bppD1Ev>:
 8016300:	4770      	bx	lr

08016302 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8016302:	4770      	bx	lr

08016304 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8016304:	4770      	bx	lr

08016306 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8016306:	4770      	bx	lr

08016308 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016308:	4770      	bx	lr

0801630a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801630a:	4770      	bx	lr

0801630c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801630c:	4770      	bx	lr

0801630e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801630e:	4770      	bx	lr

08016310 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016310:	4770      	bx	lr

08016312 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016312:	4770      	bx	lr

08016314 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016314:	4770      	bx	lr

08016316 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016316:	4770      	bx	lr

08016318 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016318:	4770      	bx	lr

0801631a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801631a:	4770      	bx	lr

0801631c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801631c:	4770      	bx	lr

0801631e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801631e:	4770      	bx	lr

08016320 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016320:	4770      	bx	lr

08016322 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016322:	4770      	bx	lr

08016324 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016324:	4770      	bx	lr

08016326 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016326:	4770      	bx	lr

08016328 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016328:	4770      	bx	lr

0801632a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801632a:	4770      	bx	lr

0801632c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801632c:	4770      	bx	lr

0801632e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801632e:	4770      	bx	lr

08016330 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016330:	4770      	bx	lr

08016332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016332:	4770      	bx	lr

08016334 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016334:	4770      	bx	lr

08016336 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016336:	4770      	bx	lr

08016338 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016338:	4770      	bx	lr

0801633a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801633a:	4770      	bx	lr

0801633c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801633c:	4770      	bx	lr

0801633e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801633e:	4770      	bx	lr

08016340 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016340:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016344:	b088      	sub	sp, #32
 8016346:	4606      	mov	r6, r0
 8016348:	4688      	mov	r8, r1
 801634a:	4691      	mov	r9, r2
 801634c:	ac08      	add	r4, sp, #32
 801634e:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016352:	4620      	mov	r0, r4
 8016354:	f7fd fc62 	bl	8013c1c <_ZNK8touchgfx6Bitmap7getDataEv>
 8016358:	6833      	ldr	r3, [r6, #0]
 801635a:	4605      	mov	r5, r0
 801635c:	4620      	mov	r0, r4
 801635e:	699f      	ldr	r7, [r3, #24]
 8016360:	f7fd fb70 	bl	8013a44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016364:	4682      	mov	sl, r0
 8016366:	4620      	mov	r0, r4
 8016368:	f7fd fba0 	bl	8013aac <_ZNK8touchgfx6Bitmap9getHeightEv>
 801636c:	9500      	str	r5, [sp, #0]
 801636e:	464b      	mov	r3, r9
 8016370:	4642      	mov	r2, r8
 8016372:	4631      	mov	r1, r6
 8016374:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016378:	a806      	add	r0, sp, #24
 801637a:	47b8      	blx	r7
 801637c:	4628      	mov	r0, r5
 801637e:	b008      	add	sp, #32
 8016380:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08016384 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016384:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016388:	2300      	movs	r3, #0
 801638a:	9300      	str	r3, [sp, #0]
 801638c:	4b3d      	ldr	r3, [pc, #244]	@ (8016484 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801638e:	781b      	ldrb	r3, [r3, #0]
 8016390:	2b00      	cmp	r3, #0
 8016392:	d137      	bne.n	8016404 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016394:	4a3c      	ldr	r2, [pc, #240]	@ (8016488 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016396:	f9b2 2000 	ldrsh.w	r2, [r2]
 801639a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801639e:	2b00      	cmp	r3, #0
 80163a0:	d132      	bne.n	8016408 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80163a2:	4b3a      	ldr	r3, [pc, #232]	@ (801648c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80163a4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80163a8:	ac02      	add	r4, sp, #8
 80163aa:	6808      	ldr	r0, [r1, #0]
 80163ac:	f8ad 3006 	strh.w	r3, [sp, #6]
 80163b0:	ab02      	add	r3, sp, #8
 80163b2:	6849      	ldr	r1, [r1, #4]
 80163b4:	4d36      	ldr	r5, [pc, #216]	@ (8016490 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 80163b6:	c303      	stmia	r3!, {r0, r1}
 80163b8:	4669      	mov	r1, sp
 80163ba:	4620      	mov	r0, r4
 80163bc:	f7fa f8da 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80163c0:	4668      	mov	r0, sp
 80163c2:	f7fa f8af 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80163c6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80163ca:	f8bd 2000 	ldrh.w	r2, [sp]
 80163ce:	462f      	mov	r7, r5
 80163d0:	6828      	ldr	r0, [r5, #0]
 80163d2:	4413      	add	r3, r2
 80163d4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80163d8:	f8ad 3008 	strh.w	r3, [sp, #8]
 80163dc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80163e0:	4413      	add	r3, r2
 80163e2:	f8ad 300a 	strh.w	r3, [sp, #10]
 80163e6:	6803      	ldr	r3, [r0, #0]
 80163e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80163ea:	4798      	blx	r3
 80163ec:	f010 0f01 	tst.w	r0, #1
 80163f0:	d00c      	beq.n	801640c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80163f2:	6828      	ldr	r0, [r5, #0]
 80163f4:	6803      	ldr	r3, [r0, #0]
 80163f6:	e894 0006 	ldmia.w	r4, {r1, r2}
 80163fa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80163fc:	4798      	blx	r3
 80163fe:	b004      	add	sp, #16
 8016400:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016404:	4a21      	ldr	r2, [pc, #132]	@ (801648c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016406:	e7c6      	b.n	8016396 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016408:	4b1f      	ldr	r3, [pc, #124]	@ (8016488 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801640a:	e7cb      	b.n	80163a4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801640c:	6838      	ldr	r0, [r7, #0]
 801640e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016412:	6803      	ldr	r3, [r0, #0]
 8016414:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8016418:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801641c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801641e:	4798      	blx	r3
 8016420:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016424:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016428:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801642c:	fb16 3602 	smlabb	r6, r6, r2, r3
 8016430:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016434:	6838      	ldr	r0, [r7, #0]
 8016436:	6803      	ldr	r3, [r0, #0]
 8016438:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801643a:	4798      	blx	r3
 801643c:	4a12      	ldr	r2, [pc, #72]	@ (8016488 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801643e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8016442:	8813      	ldrh	r3, [r2, #0]
 8016444:	4691      	mov	r9, r2
 8016446:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801644a:	435d      	muls	r5, r3
 801644c:	fb03 1404 	mla	r4, r3, r4, r1
 8016450:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016454:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016458:	6838      	ldr	r0, [r7, #0]
 801645a:	42ac      	cmp	r4, r5
 801645c:	6803      	ldr	r3, [r0, #0]
 801645e:	d20e      	bcs.n	801647e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016460:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 8016464:	4632      	mov	r2, r6
 8016466:	4643      	mov	r3, r8
 8016468:	4621      	mov	r1, r4
 801646a:	47d0      	blx	sl
 801646c:	f8b9 3000 	ldrh.w	r3, [r9]
 8016470:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016474:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8016478:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801647c:	e7ec      	b.n	8016458 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801647e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016480:	4798      	blx	r3
 8016482:	e7bc      	b.n	80163fe <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8016484:	20016c80 	.word	0x20016c80
 8016488:	20016c82 	.word	0x20016c82
 801648c:	20016c84 	.word	0x20016c84
 8016490:	20016c88 	.word	0x20016c88

08016494 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8016494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016498:	b08b      	sub	sp, #44	@ 0x2c
 801649a:	460f      	mov	r7, r1
 801649c:	4616      	mov	r6, r2
 801649e:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 80164a2:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 80164a6:	f1bb 0f00 	cmp.w	fp, #0
 80164aa:	d04a      	beq.n	8016542 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80164ac:	6810      	ldr	r0, [r2, #0]
 80164ae:	ad06      	add	r5, sp, #24
 80164b0:	6851      	ldr	r1, [r2, #4]
 80164b2:	c503      	stmia	r5!, {r0, r1}
 80164b4:	6818      	ldr	r0, [r3, #0]
 80164b6:	ad08      	add	r5, sp, #32
 80164b8:	6859      	ldr	r1, [r3, #4]
 80164ba:	c503      	stmia	r5!, {r0, r1}
 80164bc:	a806      	add	r0, sp, #24
 80164be:	f7fa f831 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80164c2:	4631      	mov	r1, r6
 80164c4:	a808      	add	r0, sp, #32
 80164c6:	f7fa f855 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80164ca:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80164ce:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 80164d2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80164d6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 80164da:	fb16 2103 	smlabb	r1, r6, r3, r2
 80164de:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 80164e2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80164e6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80164ea:	4f5f      	ldr	r7, [pc, #380]	@ (8016668 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80164ec:	440a      	add	r2, r1
 80164ee:	6838      	ldr	r0, [r7, #0]
 80164f0:	46b9      	mov	r9, r7
 80164f2:	f8ad 2020 	strh.w	r2, [sp, #32]
 80164f6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80164fa:	4413      	add	r3, r2
 80164fc:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8016500:	6803      	ldr	r3, [r0, #0]
 8016502:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016504:	4798      	blx	r3
 8016506:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801650a:	d11d      	bne.n	8016548 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801650c:	b9fc      	cbnz	r4, 801654e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801650e:	f010 0f01 	tst.w	r0, #1
 8016512:	d01c      	beq.n	801654e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016514:	f8d9 0000 	ldr.w	r0, [r9]
 8016518:	2700      	movs	r7, #0
 801651a:	b2ad      	uxth	r5, r5
 801651c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8016520:	6801      	ldr	r1, [r0, #0]
 8016522:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8016526:	f8cd b00c 	str.w	fp, [sp, #12]
 801652a:	9501      	str	r5, [sp, #4]
 801652c:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8016530:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8016534:	9402      	str	r4, [sp, #8]
 8016536:	fa1f f488 	uxth.w	r4, r8
 801653a:	9400      	str	r4, [sp, #0]
 801653c:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 801653e:	4631      	mov	r1, r6
 8016540:	47a0      	blx	r4
 8016542:	b00b      	add	sp, #44	@ 0x2c
 8016544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016548:	f010 0f04 	tst.w	r0, #4
 801654c:	e7e1      	b.n	8016512 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801654e:	f8d9 0000 	ldr.w	r0, [r9]
 8016552:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8016556:	6803      	ldr	r3, [r0, #0]
 8016558:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801655a:	4798      	blx	r3
 801655c:	4b43      	ldr	r3, [pc, #268]	@ (801666c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801655e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8016562:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8016566:	881a      	ldrh	r2, [r3, #0]
 8016568:	469a      	mov	sl, r3
 801656a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801656e:	fb05 f502 	mul.w	r5, r5, r2
 8016572:	fb02 1404 	mla	r4, r2, r4, r1
 8016576:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801657a:	d059      	beq.n	8016630 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801657c:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8016580:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016584:	fa1f f28b 	uxth.w	r2, fp
 8016588:	469e      	mov	lr, r3
 801658a:	fa1f f989 	uxth.w	r9, r9
 801658e:	42ac      	cmp	r4, r5
 8016590:	d264      	bcs.n	801665c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8016592:	eb04 0a07 	add.w	sl, r4, r7
 8016596:	4554      	cmp	r4, sl
 8016598:	d23d      	bcs.n	8016616 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801659a:	8821      	ldrh	r1, [r4, #0]
 801659c:	f836 3b02 	ldrh.w	r3, [r6], #2
 80165a0:	1208      	asrs	r0, r1, #8
 80165a2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80165a6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80165aa:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80165ae:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80165b2:	00c9      	lsls	r1, r1, #3
 80165b4:	fb10 f009 	smulbb	r0, r0, r9
 80165b8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80165bc:	b2c9      	uxtb	r1, r1
 80165be:	fb0c 0c02 	mla	ip, ip, r2, r0
 80165c2:	10d8      	asrs	r0, r3, #3
 80165c4:	fb1b fb09 	smulbb	fp, fp, r9
 80165c8:	00db      	lsls	r3, r3, #3
 80165ca:	fa1f fc8c 	uxth.w	ip, ip
 80165ce:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80165d2:	fb11 f109 	smulbb	r1, r1, r9
 80165d6:	b2db      	uxtb	r3, r3
 80165d8:	fb00 b002 	mla	r0, r0, r2, fp
 80165dc:	f10c 0b01 	add.w	fp, ip, #1
 80165e0:	fb03 1302 	mla	r3, r3, r2, r1
 80165e4:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80165e8:	b29b      	uxth	r3, r3
 80165ea:	b280      	uxth	r0, r0
 80165ec:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 80165f0:	f103 0c01 	add.w	ip, r3, #1
 80165f4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80165f8:	1c43      	adds	r3, r0, #1
 80165fa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80165fe:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016602:	0940      	lsrs	r0, r0, #5
 8016604:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016608:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801660c:	ea4c 0c00 	orr.w	ip, ip, r0
 8016610:	f824 cb02 	strh.w	ip, [r4], #2
 8016614:	e7bf      	b.n	8016596 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8016616:	f8be 3000 	ldrh.w	r3, [lr]
 801661a:	eba3 0308 	sub.w	r3, r3, r8
 801661e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016622:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016626:	eba3 0308 	sub.w	r3, r3, r8
 801662a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801662e:	e7ae      	b.n	801658e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8016630:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016634:	f8d9 0000 	ldr.w	r0, [r9]
 8016638:	42ac      	cmp	r4, r5
 801663a:	6803      	ldr	r3, [r0, #0]
 801663c:	d20e      	bcs.n	801665c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801663e:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 8016642:	4632      	mov	r2, r6
 8016644:	463b      	mov	r3, r7
 8016646:	4621      	mov	r1, r4
 8016648:	47c0      	blx	r8
 801664a:	f8ba 3000 	ldrh.w	r3, [sl]
 801664e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016652:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016656:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801665a:	e7eb      	b.n	8016634 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801665c:	4b02      	ldr	r3, [pc, #8]	@ (8016668 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801665e:	6818      	ldr	r0, [r3, #0]
 8016660:	6803      	ldr	r3, [r0, #0]
 8016662:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016664:	4798      	blx	r3
 8016666:	e76c      	b.n	8016542 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8016668:	20016c88 	.word	0x20016c88
 801666c:	20016c82 	.word	0x20016c82

08016670 <_ZN8touchgfx8LCD16bppD0Ev>:
 8016670:	b510      	push	{r4, lr}
 8016672:	4604      	mov	r4, r0
 8016674:	2188      	movs	r1, #136	@ 0x88
 8016676:	f00b f949 	bl	802190c <_ZdlPvj>
 801667a:	4620      	mov	r0, r4
 801667c:	bd10      	pop	{r4, pc}

0801667e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801667e:	b510      	push	{r4, lr}
 8016680:	4604      	mov	r4, r0
 8016682:	2104      	movs	r1, #4
 8016684:	f00b f942 	bl	802190c <_ZdlPvj>
 8016688:	4620      	mov	r0, r4
 801668a:	bd10      	pop	{r4, pc}

0801668c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801668c:	b510      	push	{r4, lr}
 801668e:	4604      	mov	r4, r0
 8016690:	2104      	movs	r1, #4
 8016692:	f00b f93b 	bl	802190c <_ZdlPvj>
 8016696:	4620      	mov	r0, r4
 8016698:	bd10      	pop	{r4, pc}

0801669a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801669a:	b510      	push	{r4, lr}
 801669c:	4604      	mov	r4, r0
 801669e:	f640 0144 	movw	r1, #2116	@ 0x844
 80166a2:	f00b f933 	bl	802190c <_ZdlPvj>
 80166a6:	4620      	mov	r0, r4
 80166a8:	bd10      	pop	{r4, pc}

080166aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80166aa:	b510      	push	{r4, lr}
 80166ac:	4604      	mov	r4, r0
 80166ae:	2104      	movs	r1, #4
 80166b0:	f00b f92c 	bl	802190c <_ZdlPvj>
 80166b4:	4620      	mov	r0, r4
 80166b6:	bd10      	pop	{r4, pc}

080166b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80166b8:	b510      	push	{r4, lr}
 80166ba:	4604      	mov	r4, r0
 80166bc:	2104      	movs	r1, #4
 80166be:	f00b f925 	bl	802190c <_ZdlPvj>
 80166c2:	4620      	mov	r0, r4
 80166c4:	bd10      	pop	{r4, pc}

080166c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80166c6:	b510      	push	{r4, lr}
 80166c8:	4604      	mov	r4, r0
 80166ca:	2104      	movs	r1, #4
 80166cc:	f00b f91e 	bl	802190c <_ZdlPvj>
 80166d0:	4620      	mov	r0, r4
 80166d2:	bd10      	pop	{r4, pc}

080166d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80166d4:	b510      	push	{r4, lr}
 80166d6:	4604      	mov	r4, r0
 80166d8:	2104      	movs	r1, #4
 80166da:	f00b f917 	bl	802190c <_ZdlPvj>
 80166de:	4620      	mov	r0, r4
 80166e0:	bd10      	pop	{r4, pc}

080166e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80166e2:	b510      	push	{r4, lr}
 80166e4:	4604      	mov	r4, r0
 80166e6:	2104      	movs	r1, #4
 80166e8:	f00b f910 	bl	802190c <_ZdlPvj>
 80166ec:	4620      	mov	r0, r4
 80166ee:	bd10      	pop	{r4, pc}

080166f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80166f0:	b510      	push	{r4, lr}
 80166f2:	4604      	mov	r4, r0
 80166f4:	2104      	movs	r1, #4
 80166f6:	f00b f909 	bl	802190c <_ZdlPvj>
 80166fa:	4620      	mov	r0, r4
 80166fc:	bd10      	pop	{r4, pc}

080166fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80166fe:	b510      	push	{r4, lr}
 8016700:	4604      	mov	r4, r0
 8016702:	2104      	movs	r1, #4
 8016704:	f00b f902 	bl	802190c <_ZdlPvj>
 8016708:	4620      	mov	r0, r4
 801670a:	bd10      	pop	{r4, pc}

0801670c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801670c:	b510      	push	{r4, lr}
 801670e:	4604      	mov	r4, r0
 8016710:	2104      	movs	r1, #4
 8016712:	f00b f8fb 	bl	802190c <_ZdlPvj>
 8016716:	4620      	mov	r0, r4
 8016718:	bd10      	pop	{r4, pc}

0801671a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801671a:	b510      	push	{r4, lr}
 801671c:	4604      	mov	r4, r0
 801671e:	2104      	movs	r1, #4
 8016720:	f00b f8f4 	bl	802190c <_ZdlPvj>
 8016724:	4620      	mov	r0, r4
 8016726:	bd10      	pop	{r4, pc}

08016728 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016728:	b510      	push	{r4, lr}
 801672a:	4604      	mov	r4, r0
 801672c:	2104      	movs	r1, #4
 801672e:	f00b f8ed 	bl	802190c <_ZdlPvj>
 8016732:	4620      	mov	r0, r4
 8016734:	bd10      	pop	{r4, pc}

08016736 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016736:	b510      	push	{r4, lr}
 8016738:	4604      	mov	r4, r0
 801673a:	2104      	movs	r1, #4
 801673c:	f00b f8e6 	bl	802190c <_ZdlPvj>
 8016740:	4620      	mov	r0, r4
 8016742:	bd10      	pop	{r4, pc}

08016744 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016744:	b510      	push	{r4, lr}
 8016746:	4604      	mov	r4, r0
 8016748:	2104      	movs	r1, #4
 801674a:	f00b f8df 	bl	802190c <_ZdlPvj>
 801674e:	4620      	mov	r0, r4
 8016750:	bd10      	pop	{r4, pc}

08016752 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016752:	b510      	push	{r4, lr}
 8016754:	4604      	mov	r4, r0
 8016756:	2104      	movs	r1, #4
 8016758:	f00b f8d8 	bl	802190c <_ZdlPvj>
 801675c:	4620      	mov	r0, r4
 801675e:	bd10      	pop	{r4, pc}

08016760 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016760:	b510      	push	{r4, lr}
 8016762:	4604      	mov	r4, r0
 8016764:	2104      	movs	r1, #4
 8016766:	f00b f8d1 	bl	802190c <_ZdlPvj>
 801676a:	4620      	mov	r0, r4
 801676c:	bd10      	pop	{r4, pc}

0801676e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801676e:	b510      	push	{r4, lr}
 8016770:	4604      	mov	r4, r0
 8016772:	2104      	movs	r1, #4
 8016774:	f00b f8ca 	bl	802190c <_ZdlPvj>
 8016778:	4620      	mov	r0, r4
 801677a:	bd10      	pop	{r4, pc}

0801677c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801677c:	b510      	push	{r4, lr}
 801677e:	4604      	mov	r4, r0
 8016780:	2104      	movs	r1, #4
 8016782:	f00b f8c3 	bl	802190c <_ZdlPvj>
 8016786:	4620      	mov	r0, r4
 8016788:	bd10      	pop	{r4, pc}

0801678a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801678a:	b510      	push	{r4, lr}
 801678c:	4604      	mov	r4, r0
 801678e:	2104      	movs	r1, #4
 8016790:	f00b f8bc 	bl	802190c <_ZdlPvj>
 8016794:	4620      	mov	r0, r4
 8016796:	bd10      	pop	{r4, pc}

08016798 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016798:	b510      	push	{r4, lr}
 801679a:	4604      	mov	r4, r0
 801679c:	2104      	movs	r1, #4
 801679e:	f00b f8b5 	bl	802190c <_ZdlPvj>
 80167a2:	4620      	mov	r0, r4
 80167a4:	bd10      	pop	{r4, pc}

080167a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80167a6:	b510      	push	{r4, lr}
 80167a8:	4604      	mov	r4, r0
 80167aa:	2104      	movs	r1, #4
 80167ac:	f00b f8ae 	bl	802190c <_ZdlPvj>
 80167b0:	4620      	mov	r0, r4
 80167b2:	bd10      	pop	{r4, pc}

080167b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80167b4:	b510      	push	{r4, lr}
 80167b6:	4604      	mov	r4, r0
 80167b8:	2104      	movs	r1, #4
 80167ba:	f00b f8a7 	bl	802190c <_ZdlPvj>
 80167be:	4620      	mov	r0, r4
 80167c0:	bd10      	pop	{r4, pc}

080167c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80167c2:	b510      	push	{r4, lr}
 80167c4:	4604      	mov	r4, r0
 80167c6:	2104      	movs	r1, #4
 80167c8:	f00b f8a0 	bl	802190c <_ZdlPvj>
 80167cc:	4620      	mov	r0, r4
 80167ce:	bd10      	pop	{r4, pc}

080167d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80167d0:	b510      	push	{r4, lr}
 80167d2:	4604      	mov	r4, r0
 80167d4:	2104      	movs	r1, #4
 80167d6:	f00b f899 	bl	802190c <_ZdlPvj>
 80167da:	4620      	mov	r0, r4
 80167dc:	bd10      	pop	{r4, pc}

080167de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80167de:	b510      	push	{r4, lr}
 80167e0:	4604      	mov	r4, r0
 80167e2:	2104      	movs	r1, #4
 80167e4:	f00b f892 	bl	802190c <_ZdlPvj>
 80167e8:	4620      	mov	r0, r4
 80167ea:	bd10      	pop	{r4, pc}

080167ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80167ec:	b510      	push	{r4, lr}
 80167ee:	4604      	mov	r4, r0
 80167f0:	2104      	movs	r1, #4
 80167f2:	f00b f88b 	bl	802190c <_ZdlPvj>
 80167f6:	4620      	mov	r0, r4
 80167f8:	bd10      	pop	{r4, pc}

080167fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80167fa:	b510      	push	{r4, lr}
 80167fc:	4604      	mov	r4, r0
 80167fe:	2104      	movs	r1, #4
 8016800:	f00b f884 	bl	802190c <_ZdlPvj>
 8016804:	4620      	mov	r0, r4
 8016806:	bd10      	pop	{r4, pc}

08016808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8016808:	b510      	push	{r4, lr}
 801680a:	4604      	mov	r4, r0
 801680c:	2104      	movs	r1, #4
 801680e:	f00b f87d 	bl	802190c <_ZdlPvj>
 8016812:	4620      	mov	r0, r4
 8016814:	bd10      	pop	{r4, pc}

08016816 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8016816:	b510      	push	{r4, lr}
 8016818:	4604      	mov	r4, r0
 801681a:	2104      	movs	r1, #4
 801681c:	f00b f876 	bl	802190c <_ZdlPvj>
 8016820:	4620      	mov	r0, r4
 8016822:	bd10      	pop	{r4, pc}

08016824 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8016824:	b510      	push	{r4, lr}
 8016826:	4604      	mov	r4, r0
 8016828:	2104      	movs	r1, #4
 801682a:	f00b f86f 	bl	802190c <_ZdlPvj>
 801682e:	4620      	mov	r0, r4
 8016830:	bd10      	pop	{r4, pc}
	...

08016834 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016838:	b08f      	sub	sp, #60	@ 0x3c
 801683a:	461c      	mov	r4, r3
 801683c:	9205      	str	r2, [sp, #20]
 801683e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016842:	9100      	str	r1, [sp, #0]
 8016844:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8016846:	9201      	str	r2, [sp, #4]
 8016848:	2a00      	cmp	r2, #0
 801684a:	f000 8116 	beq.w	8016a7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 801684e:	6820      	ldr	r0, [r4, #0]
 8016850:	aa0a      	add	r2, sp, #40	@ 0x28
 8016852:	6861      	ldr	r1, [r4, #4]
 8016854:	c203      	stmia	r2!, {r0, r1}
 8016856:	6818      	ldr	r0, [r3, #0]
 8016858:	aa0c      	add	r2, sp, #48	@ 0x30
 801685a:	6859      	ldr	r1, [r3, #4]
 801685c:	c203      	stmia	r2!, {r0, r1}
 801685e:	a80a      	add	r0, sp, #40	@ 0x28
 8016860:	f7f9 fe60 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016864:	4621      	mov	r1, r4
 8016866:	a80c      	add	r0, sp, #48	@ 0x30
 8016868:	f7f9 fe84 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801686c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8016870:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8016874:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016878:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801687c:	bfdb      	ittet	le
 801687e:	b2b3      	uxthle	r3, r6
 8016880:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016884:	2301      	movgt	r3, #1
 8016886:	fb92 f3f3 	sdivle	r3, r2, r3
 801688a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801688e:	441d      	add	r5, r3
 8016890:	fb92 f1f3 	sdiv	r1, r2, r3
 8016894:	fa1f fc81 	uxth.w	ip, r1
 8016898:	3d01      	subs	r5, #1
 801689a:	fb0c 2413 	mls	r4, ip, r3, r2
 801689e:	4661      	mov	r1, ip
 80168a0:	fb14 f406 	smulbb	r4, r4, r6
 80168a4:	4404      	add	r4, r0
 80168a6:	fb95 f5f3 	sdiv	r5, r5, r3
 80168aa:	b2a4      	uxth	r4, r4
 80168ac:	b131      	cbz	r1, 80168bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 80168ae:	9b05      	ldr	r3, [sp, #20]
 80168b0:	9900      	ldr	r1, [sp, #0]
 80168b2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80168b6:	ba1b      	rev	r3, r3
 80168b8:	4419      	add	r1, r3
 80168ba:	9100      	str	r1, [sp, #0]
 80168bc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80168c0:	b2ad      	uxth	r5, r5
 80168c2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 80168c6:	4418      	add	r0, r3
 80168c8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80168cc:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80168d0:	00ad      	lsls	r5, r5, #2
 80168d2:	441a      	add	r2, r3
 80168d4:	4b6a      	ldr	r3, [pc, #424]	@ (8016a80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80168d6:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80168da:	6818      	ldr	r0, [r3, #0]
 80168dc:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80168e0:	6803      	ldr	r3, [r0, #0]
 80168e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80168e4:	4798      	blx	r3
 80168e6:	4967      	ldr	r1, [pc, #412]	@ (8016a84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 80168e8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80168ec:	2c00      	cmp	r4, #0
 80168ee:	880b      	ldrh	r3, [r1, #0]
 80168f0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80168f4:	bf0c      	ite	eq
 80168f6:	46c6      	moveq	lr, r8
 80168f8:	f04f 0e00 	movne.w	lr, #0
 80168fc:	9109      	str	r1, [sp, #36]	@ 0x24
 80168fe:	fb03 c202 	mla	r2, r3, r2, ip
 8016902:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8016906:	4373      	muls	r3, r6
 8016908:	fa1f fe8e 	uxth.w	lr, lr
 801690c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016910:	9103      	str	r1, [sp, #12]
 8016912:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016916:	9306      	str	r3, [sp, #24]
 8016918:	1d2b      	adds	r3, r5, #4
 801691a:	9307      	str	r3, [sp, #28]
 801691c:	9b01      	ldr	r3, [sp, #4]
 801691e:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8016922:	2300      	movs	r3, #0
 8016924:	b292      	uxth	r2, r2
 8016926:	9302      	str	r3, [sp, #8]
 8016928:	9204      	str	r2, [sp, #16]
 801692a:	9a06      	ldr	r2, [sp, #24]
 801692c:	4282      	cmp	r2, r0
 801692e:	f240 809f 	bls.w	8016a70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 8016932:	b963      	cbnz	r3, 801694e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8016934:	9b00      	ldr	r3, [sp, #0]
 8016936:	781a      	ldrb	r2, [r3, #0]
 8016938:	0993      	lsrs	r3, r2, #6
 801693a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801693e:	9202      	str	r2, [sp, #8]
 8016940:	1e5a      	subs	r2, r3, #1
 8016942:	2a02      	cmp	r2, #2
 8016944:	d815      	bhi.n	8016972 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8016946:	9a00      	ldr	r2, [sp, #0]
 8016948:	b29b      	uxth	r3, r3
 801694a:	3201      	adds	r2, #1
 801694c:	9200      	str	r2, [sp, #0]
 801694e:	b1b4      	cbz	r4, 801697e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 8016950:	429c      	cmp	r4, r3
 8016952:	bf91      	iteee	ls
 8016954:	1b1c      	subls	r4, r3, r4
 8016956:	1ae4      	subhi	r4, r4, r3
 8016958:	4671      	movhi	r1, lr
 801695a:	f04f 0a00 	movhi.w	sl, #0
 801695e:	bf9b      	ittet	ls
 8016960:	fa1f fa84 	uxthls.w	sl, r4
 8016964:	2400      	movls	r4, #0
 8016966:	b2a4      	uxthhi	r4, r4
 8016968:	fa1f f188 	uxthls.w	r1, r8
 801696c:	4653      	mov	r3, sl
 801696e:	468e      	mov	lr, r1
 8016970:	e7db      	b.n	801692a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 8016972:	9a00      	ldr	r2, [sp, #0]
 8016974:	9b00      	ldr	r3, [sp, #0]
 8016976:	3202      	adds	r2, #2
 8016978:	785b      	ldrb	r3, [r3, #1]
 801697a:	9200      	str	r2, [sp, #0]
 801697c:	e7e7      	b.n	801694e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 801697e:	2202      	movs	r2, #2
 8016980:	9907      	ldr	r1, [sp, #28]
 8016982:	4573      	cmp	r3, lr
 8016984:	4615      	mov	r5, r2
 8016986:	9a02      	ldr	r2, [sp, #8]
 8016988:	bf24      	itt	cs
 801698a:	eba3 0a0e 	subcs.w	sl, r3, lr
 801698e:	46f1      	movcs	r9, lr
 8016990:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016994:	9905      	ldr	r1, [sp, #20]
 8016996:	bf34      	ite	cc
 8016998:	4699      	movcc	r9, r3
 801699a:	fa1f fa8a 	uxthcs.w	sl, sl
 801699e:	f831 c002 	ldrh.w	ip, [r1, r2]
 80169a2:	bf38      	it	cc
 80169a4:	ebae 0103 	subcc.w	r1, lr, r3
 80169a8:	9a01      	ldr	r2, [sp, #4]
 80169aa:	bf2e      	itee	cs
 80169ac:	4621      	movcs	r1, r4
 80169ae:	b289      	uxthcc	r1, r1
 80169b0:	46a2      	movcc	sl, r4
 80169b2:	2aff      	cmp	r2, #255	@ 0xff
 80169b4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80169b8:	d105      	bne.n	80169c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 80169ba:	4481      	add	r9, r0
 80169bc:	4581      	cmp	r9, r0
 80169be:	d045      	beq.n	8016a4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 80169c0:	f820 cb02 	strh.w	ip, [r0], #2
 80169c4:	e7fa      	b.n	80169bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 80169c6:	ea4f 222c 	mov.w	r2, ip, asr #8
 80169ca:	9d03      	ldr	r5, [sp, #12]
 80169cc:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80169d0:	4481      	add	r9, r0
 80169d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80169d6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80169da:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80169de:	fa5f fc8c 	uxtb.w	ip, ip
 80169e2:	436a      	muls	r2, r5
 80169e4:	fb0b fb05 	mul.w	fp, fp, r5
 80169e8:	fb0c fc05 	mul.w	ip, ip, r5
 80169ec:	9208      	str	r2, [sp, #32]
 80169ee:	4581      	cmp	r9, r0
 80169f0:	d02c      	beq.n	8016a4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 80169f2:	8802      	ldrh	r2, [r0, #0]
 80169f4:	9d04      	ldr	r5, [sp, #16]
 80169f6:	1216      	asrs	r6, r2, #8
 80169f8:	9f04      	ldr	r7, [sp, #16]
 80169fa:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80169fe:	fb16 f605 	smulbb	r6, r6, r5
 8016a02:	9d08      	ldr	r5, [sp, #32]
 8016a04:	442e      	add	r6, r5
 8016a06:	10d5      	asrs	r5, r2, #3
 8016a08:	00d2      	lsls	r2, r2, #3
 8016a0a:	b2b6      	uxth	r6, r6
 8016a0c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016a10:	b2d2      	uxtb	r2, r2
 8016a12:	fb15 f507 	smulbb	r5, r5, r7
 8016a16:	fb12 f207 	smulbb	r2, r2, r7
 8016a1a:	1c77      	adds	r7, r6, #1
 8016a1c:	445d      	add	r5, fp
 8016a1e:	4462      	add	r2, ip
 8016a20:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016a24:	b2ad      	uxth	r5, r5
 8016a26:	b292      	uxth	r2, r2
 8016a28:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016a2c:	1c57      	adds	r7, r2, #1
 8016a2e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8016a32:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016a36:	4316      	orrs	r6, r2
 8016a38:	1c6a      	adds	r2, r5, #1
 8016a3a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016a3e:	096d      	lsrs	r5, r5, #5
 8016a40:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016a44:	432e      	orrs	r6, r5
 8016a46:	f820 6b02 	strh.w	r6, [r0], #2
 8016a4a:	e7d0      	b.n	80169ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 8016a4c:	4573      	cmp	r3, lr
 8016a4e:	d38d      	bcc.n	801696c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8016a50:	fa1f f188 	uxth.w	r1, r8
 8016a54:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8016a58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016a5a:	1a64      	subs	r4, r4, r1
 8016a5c:	881b      	ldrh	r3, [r3, #0]
 8016a5e:	b2a4      	uxth	r4, r4
 8016a60:	eba3 0308 	sub.w	r3, r3, r8
 8016a64:	2c00      	cmp	r4, #0
 8016a66:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016a6a:	bf18      	it	ne
 8016a6c:	2100      	movne	r1, #0
 8016a6e:	e77d      	b.n	801696c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8016a70:	4b03      	ldr	r3, [pc, #12]	@ (8016a80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8016a72:	6818      	ldr	r0, [r3, #0]
 8016a74:	6803      	ldr	r3, [r0, #0]
 8016a76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016a78:	4798      	blx	r3
 8016a7a:	b00f      	add	sp, #60	@ 0x3c
 8016a7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a80:	20016c88 	.word	0x20016c88
 8016a84:	20016c82 	.word	0x20016c82

08016a88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a8c:	b09f      	sub	sp, #124	@ 0x7c
 8016a8e:	461d      	mov	r5, r3
 8016a90:	4604      	mov	r4, r0
 8016a92:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8016a94:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8016a98:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8016a9c:	9209      	str	r2, [sp, #36]	@ 0x24
 8016a9e:	2a00      	cmp	r2, #0
 8016aa0:	f000 81ed 	beq.w	8016e7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 8016aa4:	6828      	ldr	r0, [r5, #0]
 8016aa6:	aa1a      	add	r2, sp, #104	@ 0x68
 8016aa8:	6869      	ldr	r1, [r5, #4]
 8016aaa:	c203      	stmia	r2!, {r0, r1}
 8016aac:	6818      	ldr	r0, [r3, #0]
 8016aae:	aa1c      	add	r2, sp, #112	@ 0x70
 8016ab0:	6859      	ldr	r1, [r3, #4]
 8016ab2:	c203      	stmia	r2!, {r0, r1}
 8016ab4:	a81a      	add	r0, sp, #104	@ 0x68
 8016ab6:	f7f9 fd35 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016aba:	4629      	mov	r1, r5
 8016abc:	a81c      	add	r0, sp, #112	@ 0x70
 8016abe:	f7f9 fd59 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016ac2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016ac6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8016aca:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8016ace:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8016ad2:	bfdb      	ittet	le
 8016ad4:	b29a      	uxthle	r2, r3
 8016ad6:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016ada:	2201      	movgt	r2, #1
 8016adc:	fb91 f2f2 	sdivle	r2, r1, r2
 8016ae0:	9202      	str	r2, [sp, #8]
 8016ae2:	9802      	ldr	r0, [sp, #8]
 8016ae4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8016ae8:	9902      	ldr	r1, [sp, #8]
 8016aea:	fb92 f0f0 	sdiv	r0, r2, r0
 8016aee:	b280      	uxth	r0, r0
 8016af0:	4488      	add	r8, r1
 8016af2:	9010      	str	r0, [sp, #64]	@ 0x40
 8016af4:	f108 38ff 	add.w	r8, r8, #4294967295
 8016af8:	9802      	ldr	r0, [sp, #8]
 8016afa:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8016afc:	fb05 2510 	mls	r5, r5, r0, r2
 8016b00:	fb98 f8f1 	sdiv	r8, r8, r1
 8016b04:	fb15 f503 	smulbb	r5, r5, r3
 8016b08:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8016b0c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8016b10:	f108 0801 	add.w	r8, r8, #1
 8016b14:	440d      	add	r5, r1
 8016b16:	4419      	add	r1, r3
 8016b18:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8016b1c:	fa1f f888 	uxth.w	r8, r8
 8016b20:	441a      	add	r2, r3
 8016b22:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8016b26:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8016b2a:	b2ad      	uxth	r5, r5
 8016b2c:	9304      	str	r3, [sp, #16]
 8016b2e:	4b94      	ldr	r3, [pc, #592]	@ (8016d80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016b30:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8016b34:	6818      	ldr	r0, [r3, #0]
 8016b36:	6803      	ldr	r3, [r0, #0]
 8016b38:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016b3a:	4798      	blx	r3
 8016b3c:	4b91      	ldr	r3, [pc, #580]	@ (8016d84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8016b3e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8016b42:	2d00      	cmp	r5, #0
 8016b44:	881a      	ldrh	r2, [r3, #0]
 8016b46:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8016b4a:	fb02 f606 	mul.w	r6, r2, r6
 8016b4e:	fb02 7101 	mla	r1, r2, r1, r7
 8016b52:	9318      	str	r3, [sp, #96]	@ 0x60
 8016b54:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016b58:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8016b5c:	f04f 0100 	mov.w	r1, #0
 8016b60:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8016b64:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016b66:	4b88      	ldr	r3, [pc, #544]	@ (8016d88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 8016b68:	920a      	str	r2, [sp, #40]	@ 0x28
 8016b6a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016b6c:	eba3 0304 	sub.w	r3, r3, r4
 8016b70:	910d      	str	r1, [sp, #52]	@ 0x34
 8016b72:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8016b76:	9319      	str	r3, [sp, #100]	@ 0x64
 8016b78:	f108 0204 	add.w	r2, r8, #4
 8016b7c:	9211      	str	r2, [sp, #68]	@ 0x44
 8016b7e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016b80:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8016b84:	9215      	str	r2, [sp, #84]	@ 0x54
 8016b86:	9a04      	ldr	r2, [sp, #16]
 8016b88:	bf18      	it	ne
 8016b8a:	2200      	movne	r2, #0
 8016b8c:	b292      	uxth	r2, r2
 8016b8e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8016b90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016b92:	fa11 f383 	uxtah	r3, r1, r3
 8016b96:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8016b98:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016b9c:	3304      	adds	r3, #4
 8016b9e:	9306      	str	r3, [sp, #24]
 8016ba0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016ba2:	4283      	cmp	r3, r0
 8016ba4:	f240 8166 	bls.w	8016e74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 8016ba8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8016bac:	f04f 0a01 	mov.w	sl, #1
 8016bb0:	9902      	ldr	r1, [sp, #8]
 8016bb2:	9e06      	ldr	r6, [sp, #24]
 8016bb4:	46d3      	mov	fp, sl
 8016bb6:	4657      	mov	r7, sl
 8016bb8:	7836      	ldrb	r6, [r6, #0]
 8016bba:	fbb5 f3f3 	udiv	r3, r5, r3
 8016bbe:	1acb      	subs	r3, r1, r3
 8016bc0:	9612      	str	r6, [sp, #72]	@ 0x48
 8016bc2:	3601      	adds	r6, #1
 8016bc4:	b29b      	uxth	r3, r3
 8016bc6:	9605      	str	r6, [sp, #20]
 8016bc8:	9316      	str	r3, [sp, #88]	@ 0x58
 8016bca:	9b06      	ldr	r3, [sp, #24]
 8016bcc:	7859      	ldrb	r1, [r3, #1]
 8016bce:	789b      	ldrb	r3, [r3, #2]
 8016bd0:	021b      	lsls	r3, r3, #8
 8016bd2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8016bd6:	9906      	ldr	r1, [sp, #24]
 8016bd8:	78c9      	ldrb	r1, [r1, #3]
 8016bda:	430b      	orrs	r3, r1
 8016bdc:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8016bde:	4419      	add	r1, r3
 8016be0:	1c4e      	adds	r6, r1, #1
 8016be2:	7849      	ldrb	r1, [r1, #1]
 8016be4:	9603      	str	r6, [sp, #12]
 8016be6:	0209      	lsls	r1, r1, #8
 8016be8:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8016bea:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8016bee:	5cf3      	ldrb	r3, [r6, r3]
 8016bf0:	4319      	orrs	r1, r3
 8016bf2:	b28b      	uxth	r3, r1
 8016bf4:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8016bf8:	930c      	str	r3, [sp, #48]	@ 0x30
 8016bfa:	2300      	movs	r3, #0
 8016bfc:	9307      	str	r3, [sp, #28]
 8016bfe:	469c      	mov	ip, r3
 8016c00:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8016c04:	930e      	str	r3, [sp, #56]	@ 0x38
 8016c06:	2d00      	cmp	r5, #0
 8016c08:	d07e      	beq.n	8016d08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 8016c0a:	42af      	cmp	r7, r5
 8016c0c:	d26e      	bcs.n	8016cec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 8016c0e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016c10:	1bed      	subs	r5, r5, r7
 8016c12:	9201      	str	r2, [sp, #4]
 8016c14:	4283      	cmp	r3, r0
 8016c16:	b2ad      	uxth	r5, r5
 8016c18:	d802      	bhi.n	8016c20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 8016c1a:	e073      	b.n	8016d04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8016c1c:	2b00      	cmp	r3, #0
 8016c1e:	d15f      	bne.n	8016ce0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 8016c20:	9b03      	ldr	r3, [sp, #12]
 8016c22:	f1cb 0207 	rsb	r2, fp, #7
 8016c26:	785b      	ldrb	r3, [r3, #1]
 8016c28:	4093      	lsls	r3, r2
 8016c2a:	005b      	lsls	r3, r3, #1
 8016c2c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8016c30:	9b03      	ldr	r3, [sp, #12]
 8016c32:	781b      	ldrb	r3, [r3, #0]
 8016c34:	fa43 f30b 	asr.w	r3, r3, fp
 8016c38:	b2db      	uxtb	r3, r3
 8016c3a:	4313      	orrs	r3, r2
 8016c3c:	f10b 0201 	add.w	r2, fp, #1
 8016c40:	fa5f fb82 	uxtb.w	fp, r2
 8016c44:	9a03      	ldr	r2, [sp, #12]
 8016c46:	b29f      	uxth	r7, r3
 8016c48:	f1bb 0f08 	cmp.w	fp, #8
 8016c4c:	bf13      	iteet	ne
 8016c4e:	3201      	addne	r2, #1
 8016c50:	3202      	addeq	r2, #2
 8016c52:	f04f 0b00 	moveq.w	fp, #0
 8016c56:	9203      	strne	r2, [sp, #12]
 8016c58:	bf08      	it	eq
 8016c5a:	9203      	streq	r2, [sp, #12]
 8016c5c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016c5e:	42ba      	cmp	r2, r7
 8016c60:	d309      	bcc.n	8016c76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 8016c62:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8016c66:	2301      	movs	r3, #1
 8016c68:	9a05      	ldr	r2, [sp, #20]
 8016c6a:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8016c6e:	d30e      	bcc.n	8016c8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8016c70:	469a      	mov	sl, r3
 8016c72:	2600      	movs	r6, #0
 8016c74:	e035      	b.n	8016ce2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 8016c76:	9b05      	ldr	r3, [sp, #20]
 8016c78:	429f      	cmp	r7, r3
 8016c7a:	d318      	bcc.n	8016cae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 8016c7c:	eb04 030a 	add.w	r3, r4, sl
 8016c80:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8016c84:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8016c88:	f10a 0301 	add.w	r3, sl, #1
 8016c8c:	b29b      	uxth	r3, r3
 8016c8e:	9a05      	ldr	r2, [sp, #20]
 8016c90:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8016c94:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016c98:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016c9a:	7116      	strb	r6, [r2, #4]
 8016c9c:	f10a 0601 	add.w	r6, sl, #1
 8016ca0:	80d1      	strh	r1, [r2, #6]
 8016ca2:	7156      	strb	r6, [r2, #5]
 8016ca4:	9a05      	ldr	r2, [sp, #20]
 8016ca6:	3201      	adds	r2, #1
 8016ca8:	b292      	uxth	r2, r2
 8016caa:	9205      	str	r2, [sp, #20]
 8016cac:	e7e0      	b.n	8016c70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 8016cae:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8016cb2:	463a      	mov	r2, r7
 8016cb4:	795b      	ldrb	r3, [r3, #5]
 8016cb6:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8016cba:	4426      	add	r6, r4
 8016cbc:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8016cbe:	eb01 0c06 	add.w	ip, r1, r6
 8016cc2:	f1bc 0f00 	cmp.w	ip, #0
 8016cc6:	dd07      	ble.n	8016cd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 8016cc8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016ccc:	f892 c004 	ldrb.w	ip, [r2, #4]
 8016cd0:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8016cd4:	88d2      	ldrh	r2, [r2, #6]
 8016cd6:	e7f1      	b.n	8016cbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 8016cd8:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8016cdc:	b29b      	uxth	r3, r3
 8016cde:	e7c3      	b.n	8016c68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 8016ce0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8016ce2:	970c      	str	r7, [sp, #48]	@ 0x30
 8016ce4:	46b4      	mov	ip, r6
 8016ce6:	9a01      	ldr	r2, [sp, #4]
 8016ce8:	461f      	mov	r7, r3
 8016cea:	e78c      	b.n	8016c06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 8016cec:	1b7b      	subs	r3, r7, r5
 8016cee:	eb0c 0605 	add.w	r6, ip, r5
 8016cf2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016cf6:	b29b      	uxth	r3, r3
 8016cf8:	b2b6      	uxth	r6, r6
 8016cfa:	9201      	str	r2, [sp, #4]
 8016cfc:	2500      	movs	r5, #0
 8016cfe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016d00:	4282      	cmp	r2, r0
 8016d02:	d88b      	bhi.n	8016c1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8016d04:	9a01      	ldr	r2, [sp, #4]
 8016d06:	e74b      	b.n	8016ba0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 8016d08:	4297      	cmp	r7, r2
 8016d0a:	d332      	bcc.n	8016d72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 8016d0c:	1abb      	subs	r3, r7, r2
 8016d0e:	9208      	str	r2, [sp, #32]
 8016d10:	9501      	str	r5, [sp, #4]
 8016d12:	b29b      	uxth	r3, r3
 8016d14:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016d16:	29ff      	cmp	r1, #255	@ 0xff
 8016d18:	9908      	ldr	r1, [sp, #32]
 8016d1a:	eb0c 0601 	add.w	r6, ip, r1
 8016d1e:	d135      	bne.n	8016d8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8016d20:	f1a0 0e02 	sub.w	lr, r0, #2
 8016d24:	b2b6      	uxth	r6, r6
 8016d26:	45b4      	cmp	ip, r6
 8016d28:	f040 808c 	bne.w	8016e44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 8016d2c:	9908      	ldr	r1, [sp, #32]
 8016d2e:	4297      	cmp	r7, r2
 8016d30:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016d34:	d3e2      	bcc.n	8016cfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 8016d36:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8016d38:	9904      	ldr	r1, [sp, #16]
 8016d3a:	8812      	ldrh	r2, [r2, #0]
 8016d3c:	1a52      	subs	r2, r2, r1
 8016d3e:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8016d40:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016d44:	9a07      	ldr	r2, [sp, #28]
 8016d46:	3201      	adds	r2, #1
 8016d48:	428a      	cmp	r2, r1
 8016d4a:	9207      	str	r2, [sp, #28]
 8016d4c:	f040 8087 	bne.w	8016e5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 8016d50:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8016d54:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8016d58:	9b04      	ldr	r3, [sp, #16]
 8016d5a:	1bed      	subs	r5, r5, r7
 8016d5c:	b2ad      	uxth	r5, r5
 8016d5e:	2d00      	cmp	r5, #0
 8016d60:	bf08      	it	eq
 8016d62:	461a      	moveq	r2, r3
 8016d64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016d66:	bf18      	it	ne
 8016d68:	2200      	movne	r2, #0
 8016d6a:	3301      	adds	r3, #1
 8016d6c:	b292      	uxth	r2, r2
 8016d6e:	930d      	str	r3, [sp, #52]	@ 0x34
 8016d70:	e70d      	b.n	8016b8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 8016d72:	1bd1      	subs	r1, r2, r7
 8016d74:	9708      	str	r7, [sp, #32]
 8016d76:	b28b      	uxth	r3, r1
 8016d78:	9301      	str	r3, [sp, #4]
 8016d7a:	462b      	mov	r3, r5
 8016d7c:	e7ca      	b.n	8016d14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 8016d7e:	bf00      	nop
 8016d80:	20016c88 	.word	0x20016c88
 8016d84:	20016c82 	.word	0x20016c82
 8016d88:	fffff7fb 	.word	0xfffff7fb
 8016d8c:	b2b6      	uxth	r6, r6
 8016d8e:	900b      	str	r0, [sp, #44]	@ 0x2c
 8016d90:	45b4      	cmp	ip, r6
 8016d92:	d0cb      	beq.n	8016d2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 8016d94:	f10c 0101 	add.w	r1, ip, #1
 8016d98:	44a4      	add	ip, r4
 8016d9a:	9117      	str	r1, [sp, #92]	@ 0x5c
 8016d9c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016da0:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016da2:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016da6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016da8:	ea4f 2825 	mov.w	r8, r5, asr #8
 8016dac:	f8b1 c000 	ldrh.w	ip, [r1]
 8016db0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016db2:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8016db6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8016dba:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8016dbe:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8016dc2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016dc6:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8016dca:	fb1e fe01 	smulbb	lr, lr, r1
 8016dce:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016dd0:	fa5f fc8c 	uxtb.w	ip, ip
 8016dd4:	fb08 e801 	mla	r8, r8, r1, lr
 8016dd8:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8016ddc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016dde:	00ed      	lsls	r5, r5, #3
 8016de0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8016de4:	fa1f f888 	uxth.w	r8, r8
 8016de8:	fb19 f901 	smulbb	r9, r9, r1
 8016dec:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016dee:	b2ed      	uxtb	r5, r5
 8016df0:	fb0e 9e01 	mla	lr, lr, r1, r9
 8016df4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016df6:	fb1c fc01 	smulbb	ip, ip, r1
 8016dfa:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016dfc:	fa1f fe8e 	uxth.w	lr, lr
 8016e00:	fb05 c501 	mla	r5, r5, r1, ip
 8016e04:	f108 0c01 	add.w	ip, r8, #1
 8016e08:	f10e 0901 	add.w	r9, lr, #1
 8016e0c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016e0e:	b2ad      	uxth	r5, r5
 8016e10:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016e14:	f105 0c01 	add.w	ip, r5, #1
 8016e18:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8016e1c:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8016e20:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8016e24:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016e28:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016e2c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016e30:	ea4c 0808 	orr.w	r8, ip, r8
 8016e34:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8016e38:	ea48 0809 	orr.w	r8, r8, r9
 8016e3c:	f821 8b02 	strh.w	r8, [r1], #2
 8016e40:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016e42:	e7a5      	b.n	8016d90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 8016e44:	f10c 0801 	add.w	r8, ip, #1
 8016e48:	44a4      	add	ip, r4
 8016e4a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016e4c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016e50:	fa1f fc88 	uxth.w	ip, r8
 8016e54:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016e58:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8016e5c:	e763      	b.n	8016d26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 8016e5e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016e62:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8016e66:	1aad      	subs	r5, r5, r2
 8016e68:	b2ad      	uxth	r5, r5
 8016e6a:	2d00      	cmp	r5, #0
 8016e6c:	bf18      	it	ne
 8016e6e:	2200      	movne	r2, #0
 8016e70:	9201      	str	r2, [sp, #4]
 8016e72:	e744      	b.n	8016cfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 8016e74:	4b03      	ldr	r3, [pc, #12]	@ (8016e84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 8016e76:	6818      	ldr	r0, [r3, #0]
 8016e78:	6803      	ldr	r3, [r0, #0]
 8016e7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016e7c:	4798      	blx	r3
 8016e7e:	b01f      	add	sp, #124	@ 0x7c
 8016e80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e84:	20016c88 	.word	0x20016c88

08016e88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e8c:	b08f      	sub	sp, #60	@ 0x3c
 8016e8e:	461c      	mov	r4, r3
 8016e90:	460f      	mov	r7, r1
 8016e92:	9203      	str	r2, [sp, #12]
 8016e94:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016e98:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8016e9a:	9202      	str	r2, [sp, #8]
 8016e9c:	2a00      	cmp	r2, #0
 8016e9e:	f000 8128 	beq.w	80170f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8016ea2:	6820      	ldr	r0, [r4, #0]
 8016ea4:	aa0a      	add	r2, sp, #40	@ 0x28
 8016ea6:	6861      	ldr	r1, [r4, #4]
 8016ea8:	c203      	stmia	r2!, {r0, r1}
 8016eaa:	6818      	ldr	r0, [r3, #0]
 8016eac:	aa0c      	add	r2, sp, #48	@ 0x30
 8016eae:	6859      	ldr	r1, [r3, #4]
 8016eb0:	c203      	stmia	r2!, {r0, r1}
 8016eb2:	a80a      	add	r0, sp, #40	@ 0x28
 8016eb4:	f7f9 fb36 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016eb8:	4621      	mov	r1, r4
 8016eba:	a80c      	add	r0, sp, #48	@ 0x30
 8016ebc:	f7f9 fb5a 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016ec0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8016ec4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8016ec8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016ecc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8016ed0:	bfdb      	ittet	le
 8016ed2:	b2b3      	uxthle	r3, r6
 8016ed4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016ed8:	2301      	movgt	r3, #1
 8016eda:	fb92 f3f3 	sdivle	r3, r2, r3
 8016ede:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8016ee2:	441d      	add	r5, r3
 8016ee4:	fb92 f1f3 	sdiv	r1, r2, r3
 8016ee8:	fa1f fc81 	uxth.w	ip, r1
 8016eec:	3d01      	subs	r5, #1
 8016eee:	fb0c 2413 	mls	r4, ip, r3, r2
 8016ef2:	4661      	mov	r1, ip
 8016ef4:	fb14 f406 	smulbb	r4, r4, r6
 8016ef8:	4404      	add	r4, r0
 8016efa:	fb95 f5f3 	sdiv	r5, r5, r3
 8016efe:	b2a4      	uxth	r4, r4
 8016f00:	b121      	cbz	r1, 8016f0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 8016f02:	9b03      	ldr	r3, [sp, #12]
 8016f04:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016f08:	ba1b      	rev	r3, r3
 8016f0a:	441f      	add	r7, r3
 8016f0c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016f10:	b2ad      	uxth	r5, r5
 8016f12:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8016f16:	4418      	add	r0, r3
 8016f18:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8016f1c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8016f20:	00ad      	lsls	r5, r5, #2
 8016f22:	441a      	add	r2, r3
 8016f24:	4b74      	ldr	r3, [pc, #464]	@ (80170f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8016f26:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8016f2a:	6818      	ldr	r0, [r3, #0]
 8016f2c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8016f30:	6803      	ldr	r3, [r0, #0]
 8016f32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016f34:	4798      	blx	r3
 8016f36:	4a71      	ldr	r2, [pc, #452]	@ (80170fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8016f38:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8016f3c:	2c00      	cmp	r4, #0
 8016f3e:	8813      	ldrh	r3, [r2, #0]
 8016f40:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8016f44:	bf0c      	ite	eq
 8016f46:	46c8      	moveq	r8, r9
 8016f48:	f04f 0800 	movne.w	r8, #0
 8016f4c:	9209      	str	r2, [sp, #36]	@ 0x24
 8016f4e:	fb03 c101 	mla	r1, r3, r1, ip
 8016f52:	4373      	muls	r3, r6
 8016f54:	fa1f f888 	uxth.w	r8, r8
 8016f58:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016f5c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016f60:	9304      	str	r3, [sp, #16]
 8016f62:	1d2b      	adds	r3, r5, #4
 8016f64:	9305      	str	r3, [sp, #20]
 8016f66:	2300      	movs	r3, #0
 8016f68:	9301      	str	r3, [sp, #4]
 8016f6a:	9a04      	ldr	r2, [sp, #16]
 8016f6c:	4282      	cmp	r2, r0
 8016f6e:	f240 80bb 	bls.w	80170e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8016f72:	b95b      	cbnz	r3, 8016f8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 8016f74:	783a      	ldrb	r2, [r7, #0]
 8016f76:	0993      	lsrs	r3, r2, #6
 8016f78:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016f7c:	9201      	str	r2, [sp, #4]
 8016f7e:	1e5a      	subs	r2, r3, #1
 8016f80:	2a02      	cmp	r2, #2
 8016f82:	bf8d      	iteet	hi
 8016f84:	787b      	ldrbhi	r3, [r7, #1]
 8016f86:	3701      	addls	r7, #1
 8016f88:	b29b      	uxthls	r3, r3
 8016f8a:	3702      	addhi	r7, #2
 8016f8c:	b184      	cbz	r4, 8016fb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 8016f8e:	429c      	cmp	r4, r3
 8016f90:	bf91      	iteee	ls
 8016f92:	1b1c      	subls	r4, r3, r4
 8016f94:	1ae4      	subhi	r4, r4, r3
 8016f96:	46c4      	movhi	ip, r8
 8016f98:	f04f 0a00 	movhi.w	sl, #0
 8016f9c:	bf9b      	ittet	ls
 8016f9e:	fa1f fa84 	uxthls.w	sl, r4
 8016fa2:	2400      	movls	r4, #0
 8016fa4:	b2a4      	uxthhi	r4, r4
 8016fa6:	fa1f fc89 	uxthls.w	ip, r9
 8016faa:	4653      	mov	r3, sl
 8016fac:	46e0      	mov	r8, ip
 8016fae:	e7dc      	b.n	8016f6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 8016fb0:	2204      	movs	r2, #4
 8016fb2:	9905      	ldr	r1, [sp, #20]
 8016fb4:	4543      	cmp	r3, r8
 8016fb6:	4615      	mov	r5, r2
 8016fb8:	9a01      	ldr	r2, [sp, #4]
 8016fba:	bf24      	itt	cs
 8016fbc:	eba3 0a08 	subcs.w	sl, r3, r8
 8016fc0:	46c6      	movcs	lr, r8
 8016fc2:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016fc6:	9903      	ldr	r1, [sp, #12]
 8016fc8:	bf3c      	itt	cc
 8016fca:	eba8 0c03 	subcc.w	ip, r8, r3
 8016fce:	469e      	movcc	lr, r3
 8016fd0:	588a      	ldr	r2, [r1, r2]
 8016fd2:	bf26      	itte	cs
 8016fd4:	fa1f fa8a 	uxthcs.w	sl, sl
 8016fd8:	46a4      	movcs	ip, r4
 8016fda:	fa1f fc8c 	uxthcc.w	ip, ip
 8016fde:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8016fe2:	bf38      	it	cc
 8016fe4:	46a2      	movcc	sl, r4
 8016fe6:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8016fea:	2900      	cmp	r1, #0
 8016fec:	d066      	beq.n	80170bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8016fee:	29ff      	cmp	r1, #255	@ 0xff
 8016ff0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8016ff4:	d114      	bne.n	8017020 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016ff6:	9d02      	ldr	r5, [sp, #8]
 8016ff8:	2dff      	cmp	r5, #255	@ 0xff
 8016ffa:	d111      	bne.n	8017020 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016ffc:	0951      	lsrs	r1, r2, #5
 8016ffe:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8017002:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017006:	4486      	add	lr, r0
 8017008:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801700c:	f026 0607 	bic.w	r6, r6, #7
 8017010:	430e      	orrs	r6, r1
 8017012:	4316      	orrs	r6, r2
 8017014:	b2b6      	uxth	r6, r6
 8017016:	4586      	cmp	lr, r0
 8017018:	d051      	beq.n	80170be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801701a:	f820 6b02 	strh.w	r6, [r0], #2
 801701e:	e7fa      	b.n	8017016 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8017020:	9d02      	ldr	r5, [sp, #8]
 8017022:	b2f6      	uxtb	r6, r6
 8017024:	4486      	add	lr, r0
 8017026:	4369      	muls	r1, r5
 8017028:	1c4d      	adds	r5, r1, #1
 801702a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801702e:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8017032:	b2d2      	uxtb	r2, r2
 8017034:	122d      	asrs	r5, r5, #8
 8017036:	ea6f 0b05 	mvn.w	fp, r5
 801703a:	b2ad      	uxth	r5, r5
 801703c:	fb11 f105 	smulbb	r1, r1, r5
 8017040:	fa5f fb8b 	uxtb.w	fp, fp
 8017044:	fb16 f605 	smulbb	r6, r6, r5
 8017048:	fb12 f205 	smulbb	r2, r2, r5
 801704c:	b289      	uxth	r1, r1
 801704e:	b2b6      	uxth	r6, r6
 8017050:	b292      	uxth	r2, r2
 8017052:	9106      	str	r1, [sp, #24]
 8017054:	9607      	str	r6, [sp, #28]
 8017056:	9208      	str	r2, [sp, #32]
 8017058:	4586      	cmp	lr, r0
 801705a:	d030      	beq.n	80170be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801705c:	8802      	ldrh	r2, [r0, #0]
 801705e:	9906      	ldr	r1, [sp, #24]
 8017060:	1216      	asrs	r6, r2, #8
 8017062:	10d5      	asrs	r5, r2, #3
 8017064:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017068:	00d2      	lsls	r2, r2, #3
 801706a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801706e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017072:	b2d2      	uxtb	r2, r2
 8017074:	fb06 160b 	mla	r6, r6, fp, r1
 8017078:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801707c:	9907      	ldr	r1, [sp, #28]
 801707e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017082:	b2b6      	uxth	r6, r6
 8017084:	fb05 150b 	mla	r5, r5, fp, r1
 8017088:	9908      	ldr	r1, [sp, #32]
 801708a:	fb02 120b 	mla	r2, r2, fp, r1
 801708e:	1c71      	adds	r1, r6, #1
 8017090:	b2ad      	uxth	r5, r5
 8017092:	b292      	uxth	r2, r2
 8017094:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8017098:	1c51      	adds	r1, r2, #1
 801709a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801709e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80170a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80170a6:	4316      	orrs	r6, r2
 80170a8:	1c6a      	adds	r2, r5, #1
 80170aa:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80170ae:	096d      	lsrs	r5, r5, #5
 80170b0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80170b4:	432e      	orrs	r6, r5
 80170b6:	f820 6b02 	strh.w	r6, [r0], #2
 80170ba:	e7cd      	b.n	8017058 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 80170bc:	4470      	add	r0, lr
 80170be:	4543      	cmp	r3, r8
 80170c0:	f4ff af73 	bcc.w	8016faa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80170c4:	fa1f fc89 	uxth.w	ip, r9
 80170c8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 80170cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80170ce:	eba4 040c 	sub.w	r4, r4, ip
 80170d2:	881b      	ldrh	r3, [r3, #0]
 80170d4:	b2a4      	uxth	r4, r4
 80170d6:	eba3 0309 	sub.w	r3, r3, r9
 80170da:	2c00      	cmp	r4, #0
 80170dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80170e0:	bf18      	it	ne
 80170e2:	f04f 0c00 	movne.w	ip, #0
 80170e6:	e760      	b.n	8016faa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80170e8:	4b03      	ldr	r3, [pc, #12]	@ (80170f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80170ea:	6818      	ldr	r0, [r3, #0]
 80170ec:	6803      	ldr	r3, [r0, #0]
 80170ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80170f0:	4798      	blx	r3
 80170f2:	b00f      	add	sp, #60	@ 0x3c
 80170f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170f8:	20016c88 	.word	0x20016c88
 80170fc:	20016c82 	.word	0x20016c82

08017100 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8017100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017104:	b093      	sub	sp, #76	@ 0x4c
 8017106:	461c      	mov	r4, r3
 8017108:	9205      	str	r2, [sp, #20]
 801710a:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801710e:	9101      	str	r1, [sp, #4]
 8017110:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017112:	9202      	str	r2, [sp, #8]
 8017114:	2a00      	cmp	r2, #0
 8017116:	f000 812e 	beq.w	8017376 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801711a:	6820      	ldr	r0, [r4, #0]
 801711c:	aa0e      	add	r2, sp, #56	@ 0x38
 801711e:	6861      	ldr	r1, [r4, #4]
 8017120:	c203      	stmia	r2!, {r0, r1}
 8017122:	6818      	ldr	r0, [r3, #0]
 8017124:	aa10      	add	r2, sp, #64	@ 0x40
 8017126:	6859      	ldr	r1, [r3, #4]
 8017128:	c203      	stmia	r2!, {r0, r1}
 801712a:	a80e      	add	r0, sp, #56	@ 0x38
 801712c:	f7f9 f9fa 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017130:	4621      	mov	r1, r4
 8017132:	a810      	add	r0, sp, #64	@ 0x40
 8017134:	f7f9 fa1e 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017138:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801713c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8017140:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8017144:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8017148:	bfdb      	ittet	le
 801714a:	b2b3      	uxthle	r3, r6
 801714c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8017150:	2301      	movgt	r3, #1
 8017152:	fb92 f3f3 	sdivle	r3, r2, r3
 8017156:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801715a:	441d      	add	r5, r3
 801715c:	fb92 f1f3 	sdiv	r1, r2, r3
 8017160:	fa1f fc81 	uxth.w	ip, r1
 8017164:	3d01      	subs	r5, #1
 8017166:	fb0c 2413 	mls	r4, ip, r3, r2
 801716a:	4661      	mov	r1, ip
 801716c:	fb14 f406 	smulbb	r4, r4, r6
 8017170:	4404      	add	r4, r0
 8017172:	fb95 f5f3 	sdiv	r5, r5, r3
 8017176:	b2a4      	uxth	r4, r4
 8017178:	b131      	cbz	r1, 8017188 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 801717a:	9b05      	ldr	r3, [sp, #20]
 801717c:	9901      	ldr	r1, [sp, #4]
 801717e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8017182:	ba1b      	rev	r3, r3
 8017184:	4419      	add	r1, r3
 8017186:	9101      	str	r1, [sp, #4]
 8017188:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801718c:	b2ad      	uxth	r5, r5
 801718e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8017192:	4418      	add	r0, r3
 8017194:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8017198:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801719c:	00ad      	lsls	r5, r5, #2
 801719e:	441a      	add	r2, r3
 80171a0:	4b76      	ldr	r3, [pc, #472]	@ (801737c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 80171a2:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 80171a6:	6818      	ldr	r0, [r3, #0]
 80171a8:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 80171ac:	6803      	ldr	r3, [r0, #0]
 80171ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80171b0:	4798      	blx	r3
 80171b2:	4973      	ldr	r1, [pc, #460]	@ (8017380 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 80171b4:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 80171b8:	2c00      	cmp	r4, #0
 80171ba:	880b      	ldrh	r3, [r1, #0]
 80171bc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80171c0:	910d      	str	r1, [sp, #52]	@ 0x34
 80171c2:	fb03 c202 	mla	r2, r3, r2, ip
 80171c6:	bf08      	it	eq
 80171c8:	46dc      	moveq	ip, fp
 80171ca:	fb03 f306 	mul.w	r3, r3, r6
 80171ce:	bf18      	it	ne
 80171d0:	f04f 0c00 	movne.w	ip, #0
 80171d4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80171d8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80171dc:	fa1f fc8c 	uxth.w	ip, ip
 80171e0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80171e4:	9106      	str	r1, [sp, #24]
 80171e6:	9308      	str	r3, [sp, #32]
 80171e8:	1d2b      	adds	r3, r5, #4
 80171ea:	9309      	str	r3, [sp, #36]	@ 0x24
 80171ec:	9b02      	ldr	r3, [sp, #8]
 80171ee:	43da      	mvns	r2, r3
 80171f0:	2300      	movs	r3, #0
 80171f2:	b2d2      	uxtb	r2, r2
 80171f4:	9303      	str	r3, [sp, #12]
 80171f6:	9207      	str	r2, [sp, #28]
 80171f8:	9a08      	ldr	r2, [sp, #32]
 80171fa:	4282      	cmp	r2, r0
 80171fc:	f240 80b6 	bls.w	801736c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 8017200:	b963      	cbnz	r3, 801721c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 8017202:	9b01      	ldr	r3, [sp, #4]
 8017204:	781a      	ldrb	r2, [r3, #0]
 8017206:	0993      	lsrs	r3, r2, #6
 8017208:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801720c:	9203      	str	r2, [sp, #12]
 801720e:	1e5a      	subs	r2, r3, #1
 8017210:	2a02      	cmp	r2, #2
 8017212:	d815      	bhi.n	8017240 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 8017214:	9a01      	ldr	r2, [sp, #4]
 8017216:	b29b      	uxth	r3, r3
 8017218:	3201      	adds	r2, #1
 801721a:	9201      	str	r2, [sp, #4]
 801721c:	b1b4      	cbz	r4, 801724c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 801721e:	429c      	cmp	r4, r3
 8017220:	bf91      	iteee	ls
 8017222:	1b1c      	subls	r4, r3, r4
 8017224:	1ae4      	subhi	r4, r4, r3
 8017226:	4666      	movhi	r6, ip
 8017228:	f04f 0800 	movhi.w	r8, #0
 801722c:	bf9b      	ittet	ls
 801722e:	fa1f f884 	uxthls.w	r8, r4
 8017232:	2400      	movls	r4, #0
 8017234:	b2a4      	uxthhi	r4, r4
 8017236:	fa1f f68b 	uxthls.w	r6, fp
 801723a:	4643      	mov	r3, r8
 801723c:	46b4      	mov	ip, r6
 801723e:	e7db      	b.n	80171f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 8017240:	9a01      	ldr	r2, [sp, #4]
 8017242:	9b01      	ldr	r3, [sp, #4]
 8017244:	3202      	adds	r2, #2
 8017246:	785b      	ldrb	r3, [r3, #1]
 8017248:	9201      	str	r2, [sp, #4]
 801724a:	e7e7      	b.n	801721c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801724c:	2203      	movs	r2, #3
 801724e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8017250:	4563      	cmp	r3, ip
 8017252:	4615      	mov	r5, r2
 8017254:	9a03      	ldr	r2, [sp, #12]
 8017256:	bf2c      	ite	cs
 8017258:	eba3 080c 	subcs.w	r8, r3, ip
 801725c:	ebac 0603 	subcc.w	r6, ip, r3
 8017260:	fb15 1202 	smlabb	r2, r5, r2, r1
 8017264:	9905      	ldr	r1, [sp, #20]
 8017266:	bf24      	itt	cs
 8017268:	fa1f f888 	uxthcs.w	r8, r8
 801726c:	46e1      	movcs	r9, ip
 801726e:	eb01 0502 	add.w	r5, r1, r2
 8017272:	9902      	ldr	r1, [sp, #8]
 8017274:	bf2f      	iteee	cs
 8017276:	4626      	movcs	r6, r4
 8017278:	b2b6      	uxthcc	r6, r6
 801727a:	4699      	movcc	r9, r3
 801727c:	46a0      	movcc	r8, r4
 801727e:	29ff      	cmp	r1, #255	@ 0xff
 8017280:	d04a      	beq.n	8017318 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8017282:	9f06      	ldr	r7, [sp, #24]
 8017284:	46ca      	mov	sl, r9
 8017286:	78a9      	ldrb	r1, [r5, #2]
 8017288:	9004      	str	r0, [sp, #16]
 801728a:	4379      	muls	r1, r7
 801728c:	910a      	str	r1, [sp, #40]	@ 0x28
 801728e:	7869      	ldrb	r1, [r5, #1]
 8017290:	4379      	muls	r1, r7
 8017292:	910b      	str	r1, [sp, #44]	@ 0x2c
 8017294:	9905      	ldr	r1, [sp, #20]
 8017296:	5c8a      	ldrb	r2, [r1, r2]
 8017298:	437a      	muls	r2, r7
 801729a:	920c      	str	r2, [sp, #48]	@ 0x30
 801729c:	f1ba 0f00 	cmp.w	sl, #0
 80172a0:	d03d      	beq.n	801731e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 80172a2:	9a04      	ldr	r2, [sp, #16]
 80172a4:	f10a 3aff 	add.w	sl, sl, #4294967295
 80172a8:	9f07      	ldr	r7, [sp, #28]
 80172aa:	8812      	ldrh	r2, [r2, #0]
 80172ac:	fa1f fa8a 	uxth.w	sl, sl
 80172b0:	46be      	mov	lr, r7
 80172b2:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80172b4:	1215      	asrs	r5, r2, #8
 80172b6:	10d1      	asrs	r1, r2, #3
 80172b8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80172bc:	00d2      	lsls	r2, r2, #3
 80172be:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80172c2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80172c6:	b2d2      	uxtb	r2, r2
 80172c8:	fb05 750e 	mla	r5, r5, lr, r7
 80172cc:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80172d0:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80172d2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80172d6:	b2ad      	uxth	r5, r5
 80172d8:	fb01 710e 	mla	r1, r1, lr, r7
 80172dc:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80172de:	fb02 720e 	mla	r2, r2, lr, r7
 80172e2:	f105 0e01 	add.w	lr, r5, #1
 80172e6:	b289      	uxth	r1, r1
 80172e8:	b292      	uxth	r2, r2
 80172ea:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80172ee:	f102 0e01 	add.w	lr, r2, #1
 80172f2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80172f6:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80172fa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80172fe:	4315      	orrs	r5, r2
 8017300:	1c4a      	adds	r2, r1, #1
 8017302:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017306:	9a04      	ldr	r2, [sp, #16]
 8017308:	0949      	lsrs	r1, r1, #5
 801730a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801730e:	430d      	orrs	r5, r1
 8017310:	f822 5b02 	strh.w	r5, [r2], #2
 8017314:	9204      	str	r2, [sp, #16]
 8017316:	e7c1      	b.n	801729c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 8017318:	4649      	mov	r1, r9
 801731a:	4686      	mov	lr, r0
 801731c:	b999      	cbnz	r1, 8017346 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 801731e:	4563      	cmp	r3, ip
 8017320:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8017324:	d389      	bcc.n	801723a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8017326:	fa1f f68b 	uxth.w	r6, fp
 801732a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801732e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017330:	1ba4      	subs	r4, r4, r6
 8017332:	881b      	ldrh	r3, [r3, #0]
 8017334:	b2a4      	uxth	r4, r4
 8017336:	eba3 030b 	sub.w	r3, r3, fp
 801733a:	2c00      	cmp	r4, #0
 801733c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017340:	bf18      	it	ne
 8017342:	2600      	movne	r6, #0
 8017344:	e779      	b.n	801723a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8017346:	78aa      	ldrb	r2, [r5, #2]
 8017348:	3901      	subs	r1, #1
 801734a:	4f0e      	ldr	r7, [pc, #56]	@ (8017384 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 801734c:	b289      	uxth	r1, r1
 801734e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8017352:	786a      	ldrb	r2, [r5, #1]
 8017354:	00d2      	lsls	r2, r2, #3
 8017356:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801735a:	ea4a 0202 	orr.w	r2, sl, r2
 801735e:	f895 a000 	ldrb.w	sl, [r5]
 8017362:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8017366:	f82e 2b02 	strh.w	r2, [lr], #2
 801736a:	e7d7      	b.n	801731c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 801736c:	4b03      	ldr	r3, [pc, #12]	@ (801737c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801736e:	6818      	ldr	r0, [r3, #0]
 8017370:	6803      	ldr	r3, [r0, #0]
 8017372:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017374:	4798      	blx	r3
 8017376:	b013      	add	sp, #76	@ 0x4c
 8017378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801737c:	20016c88 	.word	0x20016c88
 8017380:	20016c82 	.word	0x20016c82
 8017384:	fffff800 	.word	0xfffff800

08017388 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8017388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801738c:	b09d      	sub	sp, #116	@ 0x74
 801738e:	461c      	mov	r4, r3
 8017390:	4683      	mov	fp, r0
 8017392:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8017394:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8017398:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801739c:	920e      	str	r2, [sp, #56]	@ 0x38
 801739e:	2a00      	cmp	r2, #0
 80173a0:	f000 81e4 	beq.w	801776c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 80173a4:	6820      	ldr	r0, [r4, #0]
 80173a6:	aa18      	add	r2, sp, #96	@ 0x60
 80173a8:	6861      	ldr	r1, [r4, #4]
 80173aa:	c203      	stmia	r2!, {r0, r1}
 80173ac:	6818      	ldr	r0, [r3, #0]
 80173ae:	aa1a      	add	r2, sp, #104	@ 0x68
 80173b0:	6859      	ldr	r1, [r3, #4]
 80173b2:	c203      	stmia	r2!, {r0, r1}
 80173b4:	a818      	add	r0, sp, #96	@ 0x60
 80173b6:	f7f9 f8b5 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173ba:	4621      	mov	r1, r4
 80173bc:	a81a      	add	r0, sp, #104	@ 0x68
 80173be:	f7f9 f8d9 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80173c2:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 80173c6:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 80173ca:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80173ce:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 80173d2:	bfdb      	ittet	le
 80173d4:	b29a      	uxthle	r2, r3
 80173d6:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80173da:	2201      	movgt	r2, #1
 80173dc:	fb91 f2f2 	sdivle	r2, r1, r2
 80173e0:	9202      	str	r2, [sp, #8]
 80173e2:	9802      	ldr	r0, [sp, #8]
 80173e4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 80173e8:	9902      	ldr	r1, [sp, #8]
 80173ea:	fb92 f0f0 	sdiv	r0, r2, r0
 80173ee:	b280      	uxth	r0, r0
 80173f0:	440c      	add	r4, r1
 80173f2:	900f      	str	r0, [sp, #60]	@ 0x3c
 80173f4:	3c01      	subs	r4, #1
 80173f6:	9802      	ldr	r0, [sp, #8]
 80173f8:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80173fa:	fb05 2510 	mls	r5, r5, r0, r2
 80173fe:	fb94 f4f1 	sdiv	r4, r4, r1
 8017402:	fb15 f503 	smulbb	r5, r5, r3
 8017406:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801740a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801740e:	3401      	adds	r4, #1
 8017410:	440d      	add	r5, r1
 8017412:	4419      	add	r1, r3
 8017414:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8017418:	b2a4      	uxth	r4, r4
 801741a:	441a      	add	r2, r3
 801741c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8017420:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8017424:	00a4      	lsls	r4, r4, #2
 8017426:	9306      	str	r3, [sp, #24]
 8017428:	b2ad      	uxth	r5, r5
 801742a:	4bb3      	ldr	r3, [pc, #716]	@ (80176f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801742c:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8017430:	6818      	ldr	r0, [r3, #0]
 8017432:	6803      	ldr	r3, [r0, #0]
 8017434:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017436:	4798      	blx	r3
 8017438:	4bb0      	ldr	r3, [pc, #704]	@ (80176fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 801743a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801743e:	2d00      	cmp	r5, #0
 8017440:	881a      	ldrh	r2, [r3, #0]
 8017442:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8017446:	fb02 f606 	mul.w	r6, r2, r6
 801744a:	fb02 7101 	mla	r1, r2, r1, r7
 801744e:	9316      	str	r3, [sp, #88]	@ 0x58
 8017450:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8017454:	4baa      	ldr	r3, [pc, #680]	@ (8017700 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 8017456:	bf18      	it	ne
 8017458:	2100      	movne	r1, #0
 801745a:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801745e:	eba3 030b 	sub.w	r3, r3, fp
 8017462:	920a      	str	r2, [sp, #40]	@ 0x28
 8017464:	f104 0204 	add.w	r2, r4, #4
 8017468:	9317      	str	r3, [sp, #92]	@ 0x5c
 801746a:	9213      	str	r2, [sp, #76]	@ 0x4c
 801746c:	9a06      	ldr	r2, [sp, #24]
 801746e:	bf08      	it	eq
 8017470:	4611      	moveq	r1, r2
 8017472:	2200      	movs	r2, #0
 8017474:	b289      	uxth	r1, r1
 8017476:	920d      	str	r2, [sp, #52]	@ 0x34
 8017478:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801747a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801747c:	fa12 f383 	uxtah	r3, r2, r3
 8017480:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017482:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017486:	3304      	adds	r3, #4
 8017488:	9308      	str	r3, [sp, #32]
 801748a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801748c:	4543      	cmp	r3, r8
 801748e:	f240 8168 	bls.w	8017762 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 8017492:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8017496:	f04f 0e01 	mov.w	lr, #1
 801749a:	9a02      	ldr	r2, [sp, #8]
 801749c:	9808      	ldr	r0, [sp, #32]
 801749e:	fbb5 f3f3 	udiv	r3, r5, r3
 80174a2:	1ad3      	subs	r3, r2, r3
 80174a4:	7800      	ldrb	r0, [r0, #0]
 80174a6:	b29b      	uxth	r3, r3
 80174a8:	9010      	str	r0, [sp, #64]	@ 0x40
 80174aa:	3001      	adds	r0, #1
 80174ac:	9314      	str	r3, [sp, #80]	@ 0x50
 80174ae:	9b08      	ldr	r3, [sp, #32]
 80174b0:	9007      	str	r0, [sp, #28]
 80174b2:	785a      	ldrb	r2, [r3, #1]
 80174b4:	789b      	ldrb	r3, [r3, #2]
 80174b6:	021b      	lsls	r3, r3, #8
 80174b8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80174bc:	9a08      	ldr	r2, [sp, #32]
 80174be:	78d2      	ldrb	r2, [r2, #3]
 80174c0:	4313      	orrs	r3, r2
 80174c2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80174c4:	441a      	add	r2, r3
 80174c6:	1c50      	adds	r0, r2, #1
 80174c8:	7852      	ldrb	r2, [r2, #1]
 80174ca:	9005      	str	r0, [sp, #20]
 80174cc:	0212      	lsls	r2, r2, #8
 80174ce:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80174d0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80174d4:	5cc3      	ldrb	r3, [r0, r3]
 80174d6:	431a      	orrs	r2, r3
 80174d8:	b293      	uxth	r3, r2
 80174da:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 80174de:	930b      	str	r3, [sp, #44]	@ 0x2c
 80174e0:	2300      	movs	r3, #0
 80174e2:	9309      	str	r3, [sp, #36]	@ 0x24
 80174e4:	2301      	movs	r3, #1
 80174e6:	9301      	str	r3, [sp, #4]
 80174e8:	9304      	str	r3, [sp, #16]
 80174ea:	2300      	movs	r3, #0
 80174ec:	9303      	str	r3, [sp, #12]
 80174ee:	2d00      	cmp	r5, #0
 80174f0:	d07d      	beq.n	80175ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 80174f2:	45ae      	cmp	lr, r5
 80174f4:	d26c      	bcs.n	80175d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 80174f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80174f8:	eba5 050e 	sub.w	r5, r5, lr
 80174fc:	460c      	mov	r4, r1
 80174fe:	4543      	cmp	r3, r8
 8017500:	b2ad      	uxth	r5, r5
 8017502:	d802      	bhi.n	801750a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 8017504:	e071      	b.n	80175ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 8017506:	2b00      	cmp	r3, #0
 8017508:	d15d      	bne.n	80175c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 801750a:	9b05      	ldr	r3, [sp, #20]
 801750c:	9a04      	ldr	r2, [sp, #16]
 801750e:	785b      	ldrb	r3, [r3, #1]
 8017510:	f1c2 0207 	rsb	r2, r2, #7
 8017514:	9904      	ldr	r1, [sp, #16]
 8017516:	4093      	lsls	r3, r2
 8017518:	005b      	lsls	r3, r3, #1
 801751a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801751e:	9b05      	ldr	r3, [sp, #20]
 8017520:	781b      	ldrb	r3, [r3, #0]
 8017522:	410b      	asrs	r3, r1
 8017524:	3101      	adds	r1, #1
 8017526:	b2c9      	uxtb	r1, r1
 8017528:	b2db      	uxtb	r3, r3
 801752a:	2908      	cmp	r1, #8
 801752c:	9104      	str	r1, [sp, #16]
 801752e:	9905      	ldr	r1, [sp, #20]
 8017530:	ea43 0302 	orr.w	r3, r3, r2
 8017534:	bf0c      	ite	eq
 8017536:	3102      	addeq	r1, #2
 8017538:	3101      	addne	r1, #1
 801753a:	b29a      	uxth	r2, r3
 801753c:	bf05      	ittet	eq
 801753e:	9105      	streq	r1, [sp, #20]
 8017540:	2100      	moveq	r1, #0
 8017542:	9105      	strne	r1, [sp, #20]
 8017544:	9104      	streq	r1, [sp, #16]
 8017546:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8017548:	4291      	cmp	r1, r2
 801754a:	d30a      	bcc.n	8017562 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 801754c:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8017550:	2301      	movs	r3, #1
 8017552:	9907      	ldr	r1, [sp, #28]
 8017554:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8017558:	d30f      	bcc.n	801757a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 801755a:	2100      	movs	r1, #0
 801755c:	9301      	str	r3, [sp, #4]
 801755e:	9103      	str	r1, [sp, #12]
 8017560:	e032      	b.n	80175c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8017562:	9b07      	ldr	r3, [sp, #28]
 8017564:	429a      	cmp	r2, r3
 8017566:	d318      	bcc.n	801759a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 8017568:	9b01      	ldr	r3, [sp, #4]
 801756a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801756e:	445b      	add	r3, fp
 8017570:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8017574:	9b01      	ldr	r3, [sp, #4]
 8017576:	3301      	adds	r3, #1
 8017578:	b29b      	uxth	r3, r3
 801757a:	9907      	ldr	r1, [sp, #28]
 801757c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8017580:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017584:	7108      	strb	r0, [r1, #4]
 8017586:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8017588:	80c8      	strh	r0, [r1, #6]
 801758a:	9801      	ldr	r0, [sp, #4]
 801758c:	3001      	adds	r0, #1
 801758e:	7148      	strb	r0, [r1, #5]
 8017590:	9907      	ldr	r1, [sp, #28]
 8017592:	3101      	adds	r1, #1
 8017594:	b289      	uxth	r1, r1
 8017596:	9107      	str	r1, [sp, #28]
 8017598:	e7df      	b.n	801755a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801759a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801759e:	4611      	mov	r1, r2
 80175a0:	795b      	ldrb	r3, [r3, #5]
 80175a2:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 80175a6:	4458      	add	r0, fp
 80175a8:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 80175aa:	4406      	add	r6, r0
 80175ac:	2e00      	cmp	r6, #0
 80175ae:	dd06      	ble.n	80175be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80175b0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80175b4:	790e      	ldrb	r6, [r1, #4]
 80175b6:	f800 6d01 	strb.w	r6, [r0, #-1]!
 80175ba:	88c9      	ldrh	r1, [r1, #6]
 80175bc:	e7f4      	b.n	80175a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 80175be:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 80175c2:	b29b      	uxth	r3, r3
 80175c4:	e7c5      	b.n	8017552 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 80175c6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80175c8:	4621      	mov	r1, r4
 80175ca:	920b      	str	r2, [sp, #44]	@ 0x2c
 80175cc:	469e      	mov	lr, r3
 80175ce:	e78e      	b.n	80174ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 80175d0:	9a03      	ldr	r2, [sp, #12]
 80175d2:	ebae 0305 	sub.w	r3, lr, r5
 80175d6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80175da:	442a      	add	r2, r5
 80175dc:	b29b      	uxth	r3, r3
 80175de:	b292      	uxth	r2, r2
 80175e0:	9203      	str	r2, [sp, #12]
 80175e2:	2500      	movs	r5, #0
 80175e4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80175e6:	4542      	cmp	r2, r8
 80175e8:	d88d      	bhi.n	8017506 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 80175ea:	4621      	mov	r1, r4
 80175ec:	e74d      	b.n	801748a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 80175ee:	458e      	cmp	lr, r1
 80175f0:	f04f 0900 	mov.w	r9, #0
 80175f4:	bf2b      	itete	cs
 80175f6:	ebae 0301 	subcs.w	r3, lr, r1
 80175fa:	eba1 040e 	subcc.w	r4, r1, lr
 80175fe:	462c      	movcs	r4, r5
 8017600:	462b      	movcc	r3, r5
 8017602:	bf27      	ittee	cs
 8017604:	b29b      	uxthcs	r3, r3
 8017606:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8017608:	b2a4      	uxthcc	r4, r4
 801760a:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801760e:	9a03      	ldr	r2, [sp, #12]
 8017610:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8017612:	444a      	add	r2, r9
 8017614:	4548      	cmp	r0, r9
 8017616:	b292      	uxth	r2, r2
 8017618:	d074      	beq.n	8017704 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 801761a:	2004      	movs	r0, #4
 801761c:	445a      	add	r2, fp
 801761e:	4605      	mov	r5, r0
 8017620:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8017624:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017626:	fb15 0202 	smlabb	r2, r5, r2, r0
 801762a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801762c:	5880      	ldr	r0, [r0, r2]
 801762e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8017632:	d014      	beq.n	801765e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8017634:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8017638:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801763c:	d112      	bne.n	8017664 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 801763e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017640:	2aff      	cmp	r2, #255	@ 0xff
 8017642:	d10f      	bne.n	8017664 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8017644:	0942      	lsrs	r2, r0, #5
 8017646:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801764a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801764e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017652:	f025 0507 	bic.w	r5, r5, #7
 8017656:	4315      	orrs	r5, r2
 8017658:	4305      	orrs	r5, r0
 801765a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801765e:	f109 0901 	add.w	r9, r9, #1
 8017662:	e7d4      	b.n	801760e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8017664:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8017668:	b2ed      	uxtb	r5, r5
 801766a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801766e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017672:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8017676:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801767a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801767e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017682:	9215      	str	r2, [sp, #84]	@ 0x54
 8017684:	fa5f fc8c 	uxtb.w	ip, ip
 8017688:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801768a:	b2c0      	uxtb	r0, r0
 801768c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017690:	fb02 fa0a 	mul.w	sl, r2, sl
 8017694:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8017698:	f10a 0201 	add.w	r2, sl, #1
 801769c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 80176a0:	1212      	asrs	r2, r2, #8
 80176a2:	fa1f fa82 	uxth.w	sl, r2
 80176a6:	43d2      	mvns	r2, r2
 80176a8:	fb16 f60a 	smulbb	r6, r6, sl
 80176ac:	b2d2      	uxtb	r2, r2
 80176ae:	fb10 f00a 	smulbb	r0, r0, sl
 80176b2:	fb07 6702 	mla	r7, r7, r2, r6
 80176b6:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80176b8:	fb0c 0002 	mla	r0, ip, r2, r0
 80176bc:	fb15 f50a 	smulbb	r5, r5, sl
 80176c0:	b2bf      	uxth	r7, r7
 80176c2:	b280      	uxth	r0, r0
 80176c4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80176c8:	fb06 5602 	mla	r6, r6, r2, r5
 80176cc:	1c7a      	adds	r2, r7, #1
 80176ce:	1c45      	adds	r5, r0, #1
 80176d0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80176d4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80176d8:	b2b6      	uxth	r6, r6
 80176da:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80176de:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80176e2:	432f      	orrs	r7, r5
 80176e4:	1c75      	adds	r5, r6, #1
 80176e6:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80176ea:	096d      	lsrs	r5, r5, #5
 80176ec:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80176f0:	432f      	orrs	r7, r5
 80176f2:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 80176f6:	e7b2      	b.n	801765e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 80176f8:	20016c88 	.word	0x20016c88
 80176fc:	20016c82 	.word	0x20016c82
 8017700:	fffff7fb 	.word	0xfffff7fb
 8017704:	9203      	str	r2, [sp, #12]
 8017706:	458e      	cmp	lr, r1
 8017708:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801770a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801770e:	f4ff af68 	bcc.w	80175e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8017712:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8017714:	9906      	ldr	r1, [sp, #24]
 8017716:	8812      	ldrh	r2, [r2, #0]
 8017718:	1a52      	subs	r2, r2, r1
 801771a:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801771c:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017720:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017722:	3201      	adds	r2, #1
 8017724:	428a      	cmp	r2, r1
 8017726:	9209      	str	r2, [sp, #36]	@ 0x24
 8017728:	d111      	bne.n	801774e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 801772a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801772e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8017732:	9b06      	ldr	r3, [sp, #24]
 8017734:	eba5 0509 	sub.w	r5, r5, r9
 8017738:	b2ad      	uxth	r5, r5
 801773a:	2d00      	cmp	r5, #0
 801773c:	bf08      	it	eq
 801773e:	4619      	moveq	r1, r3
 8017740:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017742:	bf18      	it	ne
 8017744:	2100      	movne	r1, #0
 8017746:	3301      	adds	r3, #1
 8017748:	b289      	uxth	r1, r1
 801774a:	930d      	str	r3, [sp, #52]	@ 0x34
 801774c:	e694      	b.n	8017478 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 801774e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8017752:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8017756:	1b2d      	subs	r5, r5, r4
 8017758:	b2ad      	uxth	r5, r5
 801775a:	2d00      	cmp	r5, #0
 801775c:	bf18      	it	ne
 801775e:	2400      	movne	r4, #0
 8017760:	e740      	b.n	80175e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8017762:	4b04      	ldr	r3, [pc, #16]	@ (8017774 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8017764:	6818      	ldr	r0, [r3, #0]
 8017766:	6803      	ldr	r3, [r0, #0]
 8017768:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801776a:	4798      	blx	r3
 801776c:	b01d      	add	sp, #116	@ 0x74
 801776e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017772:	bf00      	nop
 8017774:	20016c88 	.word	0x20016c88

08017778 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8017778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801777c:	b09f      	sub	sp, #124	@ 0x7c
 801777e:	461d      	mov	r5, r3
 8017780:	4604      	mov	r4, r0
 8017782:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017784:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8017788:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801778c:	920a      	str	r2, [sp, #40]	@ 0x28
 801778e:	2a00      	cmp	r2, #0
 8017790:	f000 81fe 	beq.w	8017b90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8017794:	6828      	ldr	r0, [r5, #0]
 8017796:	aa1a      	add	r2, sp, #104	@ 0x68
 8017798:	6869      	ldr	r1, [r5, #4]
 801779a:	c203      	stmia	r2!, {r0, r1}
 801779c:	6818      	ldr	r0, [r3, #0]
 801779e:	aa1c      	add	r2, sp, #112	@ 0x70
 80177a0:	6859      	ldr	r1, [r3, #4]
 80177a2:	c203      	stmia	r2!, {r0, r1}
 80177a4:	a81a      	add	r0, sp, #104	@ 0x68
 80177a6:	f7f8 febd 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80177aa:	4629      	mov	r1, r5
 80177ac:	a81c      	add	r0, sp, #112	@ 0x70
 80177ae:	f7f8 fee1 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80177b2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80177b6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 80177ba:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80177be:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 80177c2:	bfdb      	ittet	le
 80177c4:	b29a      	uxthle	r2, r3
 80177c6:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80177ca:	2201      	movgt	r2, #1
 80177cc:	fb91 f2f2 	sdivle	r2, r1, r2
 80177d0:	9201      	str	r2, [sp, #4]
 80177d2:	9801      	ldr	r0, [sp, #4]
 80177d4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80177d8:	9901      	ldr	r1, [sp, #4]
 80177da:	fb92 f0f0 	sdiv	r0, r2, r0
 80177de:	b280      	uxth	r0, r0
 80177e0:	440e      	add	r6, r1
 80177e2:	9010      	str	r0, [sp, #64]	@ 0x40
 80177e4:	3e01      	subs	r6, #1
 80177e6:	9801      	ldr	r0, [sp, #4]
 80177e8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80177ea:	fb05 2510 	mls	r5, r5, r0, r2
 80177ee:	fb96 f6f1 	sdiv	r6, r6, r1
 80177f2:	fb15 f503 	smulbb	r5, r5, r3
 80177f6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 80177fa:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80177fe:	3601      	adds	r6, #1
 8017800:	440d      	add	r5, r1
 8017802:	4419      	add	r1, r3
 8017804:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8017808:	b2b6      	uxth	r6, r6
 801780a:	441a      	add	r2, r3
 801780c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8017810:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8017814:	b2ad      	uxth	r5, r5
 8017816:	9304      	str	r3, [sp, #16]
 8017818:	4b96      	ldr	r3, [pc, #600]	@ (8017a74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801781a:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801781e:	6818      	ldr	r0, [r3, #0]
 8017820:	6803      	ldr	r3, [r0, #0]
 8017822:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017824:	4798      	blx	r3
 8017826:	4b94      	ldr	r3, [pc, #592]	@ (8017a78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 8017828:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801782c:	2d00      	cmp	r5, #0
 801782e:	881a      	ldrh	r2, [r3, #0]
 8017830:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8017834:	fb02 f707 	mul.w	r7, r2, r7
 8017838:	fb02 c101 	mla	r1, r2, r1, ip
 801783c:	9318      	str	r3, [sp, #96]	@ 0x60
 801783e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8017842:	4b8e      	ldr	r3, [pc, #568]	@ (8017a7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 8017844:	bf18      	it	ne
 8017846:	2100      	movne	r1, #0
 8017848:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801784c:	eba3 0304 	sub.w	r3, r3, r4
 8017850:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017852:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017854:	9319      	str	r3, [sp, #100]	@ 0x64
 8017856:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801785a:	f106 0204 	add.w	r2, r6, #4
 801785e:	9206      	str	r2, [sp, #24]
 8017860:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017862:	ea6f 0202 	mvn.w	r2, r2
 8017866:	b2d2      	uxtb	r2, r2
 8017868:	9215      	str	r2, [sp, #84]	@ 0x54
 801786a:	9a04      	ldr	r2, [sp, #16]
 801786c:	bf08      	it	eq
 801786e:	4611      	moveq	r1, r2
 8017870:	2200      	movs	r2, #0
 8017872:	b289      	uxth	r1, r1
 8017874:	920d      	str	r2, [sp, #52]	@ 0x34
 8017876:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017878:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801787a:	fa12 f383 	uxtah	r3, r2, r3
 801787e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017880:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017884:	3304      	adds	r3, #4
 8017886:	9307      	str	r3, [sp, #28]
 8017888:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801788a:	455b      	cmp	r3, fp
 801788c:	f240 817b 	bls.w	8017b86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 8017890:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8017894:	f04f 0801 	mov.w	r8, #1
 8017898:	9a01      	ldr	r2, [sp, #4]
 801789a:	9807      	ldr	r0, [sp, #28]
 801789c:	46c4      	mov	ip, r8
 801789e:	f8cd 8008 	str.w	r8, [sp, #8]
 80178a2:	7800      	ldrb	r0, [r0, #0]
 80178a4:	fbb5 f3f3 	udiv	r3, r5, r3
 80178a8:	1ad3      	subs	r3, r2, r3
 80178aa:	9011      	str	r0, [sp, #68]	@ 0x44
 80178ac:	3001      	adds	r0, #1
 80178ae:	b29b      	uxth	r3, r3
 80178b0:	9005      	str	r0, [sp, #20]
 80178b2:	9316      	str	r3, [sp, #88]	@ 0x58
 80178b4:	9b07      	ldr	r3, [sp, #28]
 80178b6:	785a      	ldrb	r2, [r3, #1]
 80178b8:	789b      	ldrb	r3, [r3, #2]
 80178ba:	021b      	lsls	r3, r3, #8
 80178bc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80178c0:	9a07      	ldr	r2, [sp, #28]
 80178c2:	78d2      	ldrb	r2, [r2, #3]
 80178c4:	4313      	orrs	r3, r2
 80178c6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80178c8:	441a      	add	r2, r3
 80178ca:	1c50      	adds	r0, r2, #1
 80178cc:	7852      	ldrb	r2, [r2, #1]
 80178ce:	9003      	str	r0, [sp, #12]
 80178d0:	0212      	lsls	r2, r2, #8
 80178d2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80178d4:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80178d8:	5cc3      	ldrb	r3, [r0, r3]
 80178da:	431a      	orrs	r2, r3
 80178dc:	b293      	uxth	r3, r2
 80178de:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80178e2:	930c      	str	r3, [sp, #48]	@ 0x30
 80178e4:	2300      	movs	r3, #0
 80178e6:	9308      	str	r3, [sp, #32]
 80178e8:	461a      	mov	r2, r3
 80178ea:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80178ee:	930e      	str	r3, [sp, #56]	@ 0x38
 80178f0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80178f4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80178f6:	2d00      	cmp	r5, #0
 80178f8:	d07d      	beq.n	80179f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 80178fa:	45ac      	cmp	ip, r5
 80178fc:	d26d      	bcs.n	80179da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 80178fe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017900:	eba5 050c 	sub.w	r5, r5, ip
 8017904:	4608      	mov	r0, r1
 8017906:	455b      	cmp	r3, fp
 8017908:	b2ad      	uxth	r5, r5
 801790a:	d802      	bhi.n	8017912 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 801790c:	e071      	b.n	80179f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 801790e:	2b00      	cmp	r3, #0
 8017910:	d15d      	bne.n	80179ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8017912:	9b03      	ldr	r3, [sp, #12]
 8017914:	9a02      	ldr	r2, [sp, #8]
 8017916:	785b      	ldrb	r3, [r3, #1]
 8017918:	f1c2 0207 	rsb	r2, r2, #7
 801791c:	9902      	ldr	r1, [sp, #8]
 801791e:	4093      	lsls	r3, r2
 8017920:	005b      	lsls	r3, r3, #1
 8017922:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017926:	9b03      	ldr	r3, [sp, #12]
 8017928:	781b      	ldrb	r3, [r3, #0]
 801792a:	410b      	asrs	r3, r1
 801792c:	3101      	adds	r1, #1
 801792e:	b2c9      	uxtb	r1, r1
 8017930:	b2db      	uxtb	r3, r3
 8017932:	2908      	cmp	r1, #8
 8017934:	9102      	str	r1, [sp, #8]
 8017936:	9903      	ldr	r1, [sp, #12]
 8017938:	ea43 0302 	orr.w	r3, r3, r2
 801793c:	bf0c      	ite	eq
 801793e:	3102      	addeq	r1, #2
 8017940:	3101      	addne	r1, #1
 8017942:	b29a      	uxth	r2, r3
 8017944:	bf05      	ittet	eq
 8017946:	9103      	streq	r1, [sp, #12]
 8017948:	2100      	moveq	r1, #0
 801794a:	9103      	strne	r1, [sp, #12]
 801794c:	9102      	streq	r1, [sp, #8]
 801794e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8017950:	4291      	cmp	r1, r2
 8017952:	d30a      	bcc.n	801796a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8017954:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8017958:	2301      	movs	r3, #1
 801795a:	9905      	ldr	r1, [sp, #20]
 801795c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8017960:	d30f      	bcc.n	8017982 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 8017962:	2100      	movs	r1, #0
 8017964:	4698      	mov	r8, r3
 8017966:	9100      	str	r1, [sp, #0]
 8017968:	e032      	b.n	80179d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 801796a:	9b05      	ldr	r3, [sp, #20]
 801796c:	429a      	cmp	r2, r3
 801796e:	d318      	bcc.n	80179a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 8017970:	eb04 0308 	add.w	r3, r4, r8
 8017974:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8017978:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801797c:	f108 0301 	add.w	r3, r8, #1
 8017980:	b29b      	uxth	r3, r3
 8017982:	9905      	ldr	r1, [sp, #20]
 8017984:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8017988:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801798c:	710e      	strb	r6, [r1, #4]
 801798e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8017990:	80ce      	strh	r6, [r1, #6]
 8017992:	f108 0601 	add.w	r6, r8, #1
 8017996:	714e      	strb	r6, [r1, #5]
 8017998:	9905      	ldr	r1, [sp, #20]
 801799a:	3101      	adds	r1, #1
 801799c:	b289      	uxth	r1, r1
 801799e:	9105      	str	r1, [sp, #20]
 80179a0:	e7df      	b.n	8017962 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 80179a2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80179a6:	4611      	mov	r1, r2
 80179a8:	795b      	ldrb	r3, [r3, #5]
 80179aa:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80179ae:	4426      	add	r6, r4
 80179b0:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 80179b2:	4437      	add	r7, r6
 80179b4:	2f00      	cmp	r7, #0
 80179b6:	dd06      	ble.n	80179c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 80179b8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80179bc:	790f      	ldrb	r7, [r1, #4]
 80179be:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80179c2:	88c9      	ldrh	r1, [r1, #6]
 80179c4:	e7f4      	b.n	80179b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 80179c6:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80179ca:	b29b      	uxth	r3, r3
 80179cc:	e7c5      	b.n	801795a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 80179ce:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80179d0:	920c      	str	r2, [sp, #48]	@ 0x30
 80179d2:	4601      	mov	r1, r0
 80179d4:	9a00      	ldr	r2, [sp, #0]
 80179d6:	469c      	mov	ip, r3
 80179d8:	e78d      	b.n	80178f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 80179da:	ebac 0305 	sub.w	r3, ip, r5
 80179de:	1957      	adds	r7, r2, r5
 80179e0:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80179e4:	b2ba      	uxth	r2, r7
 80179e6:	b29b      	uxth	r3, r3
 80179e8:	9200      	str	r2, [sp, #0]
 80179ea:	2500      	movs	r5, #0
 80179ec:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80179ee:	455a      	cmp	r2, fp
 80179f0:	d88d      	bhi.n	801790e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80179f2:	4601      	mov	r1, r0
 80179f4:	e748      	b.n	8017888 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 80179f6:	458c      	cmp	ip, r1
 80179f8:	bf27      	ittee	cs
 80179fa:	ebac 0301 	subcs.w	r3, ip, r1
 80179fe:	4628      	movcs	r0, r5
 8017a00:	eba1 000c 	subcc.w	r0, r1, ip
 8017a04:	462b      	movcc	r3, r5
 8017a06:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8017a08:	bf27      	ittee	cs
 8017a0a:	b29b      	uxthcs	r3, r3
 8017a0c:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8017a0e:	b280      	uxthcc	r0, r0
 8017a10:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8017a14:	2dff      	cmp	r5, #255	@ 0xff
 8017a16:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8017a18:	eb02 0705 	add.w	r7, r2, r5
 8017a1c:	b2bd      	uxth	r5, r7
 8017a1e:	9500      	str	r5, [sp, #0]
 8017a20:	d12e      	bne.n	8017a80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 8017a22:	465e      	mov	r6, fp
 8017a24:	9d00      	ldr	r5, [sp, #0]
 8017a26:	42aa      	cmp	r2, r5
 8017a28:	f040 8083 	bne.w	8017b32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 8017a2c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017a2e:	458c      	cmp	ip, r1
 8017a30:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017a34:	d3d9      	bcc.n	80179ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8017a36:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8017a38:	9904      	ldr	r1, [sp, #16]
 8017a3a:	8812      	ldrh	r2, [r2, #0]
 8017a3c:	1a52      	subs	r2, r2, r1
 8017a3e:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8017a40:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017a44:	9a08      	ldr	r2, [sp, #32]
 8017a46:	3201      	adds	r2, #1
 8017a48:	428a      	cmp	r2, r1
 8017a4a:	9208      	str	r2, [sp, #32]
 8017a4c:	f040 8091 	bne.w	8017b72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 8017a50:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8017a54:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8017a58:	9b04      	ldr	r3, [sp, #16]
 8017a5a:	eba5 050c 	sub.w	r5, r5, ip
 8017a5e:	b2ad      	uxth	r5, r5
 8017a60:	2d00      	cmp	r5, #0
 8017a62:	bf08      	it	eq
 8017a64:	4619      	moveq	r1, r3
 8017a66:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017a68:	bf18      	it	ne
 8017a6a:	2100      	movne	r1, #0
 8017a6c:	3301      	adds	r3, #1
 8017a6e:	b289      	uxth	r1, r1
 8017a70:	930d      	str	r3, [sp, #52]	@ 0x34
 8017a72:	e700      	b.n	8017876 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 8017a74:	20016c88 	.word	0x20016c88
 8017a78:	20016c82 	.word	0x20016c82
 8017a7c:	fffff7fb 	.word	0xfffff7fb
 8017a80:	46d9      	mov	r9, fp
 8017a82:	9d00      	ldr	r5, [sp, #0]
 8017a84:	42aa      	cmp	r2, r5
 8017a86:	d0d1      	beq.n	8017a2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 8017a88:	1c55      	adds	r5, r2, #1
 8017a8a:	4422      	add	r2, r4
 8017a8c:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8017a90:	9a06      	ldr	r2, [sp, #24]
 8017a92:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017a96:	9517      	str	r5, [sp, #92]	@ 0x5c
 8017a98:	4472      	add	r2, lr
 8017a9a:	9212      	str	r2, [sp, #72]	@ 0x48
 8017a9c:	f8b9 2000 	ldrh.w	r2, [r9]
 8017aa0:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8017aa2:	1216      	asrs	r6, r2, #8
 8017aa4:	f897 a002 	ldrb.w	sl, [r7, #2]
 8017aa8:	10d5      	asrs	r5, r2, #3
 8017aaa:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017aac:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017ab0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017ab4:	00d2      	lsls	r2, r2, #3
 8017ab6:	fb1a fa07 	smulbb	sl, sl, r7
 8017aba:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017abe:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8017ac0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017ac4:	b2d2      	uxtb	r2, r2
 8017ac6:	fb06 a607 	mla	r6, r6, r7, sl
 8017aca:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8017acc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017ad0:	f897 a001 	ldrb.w	sl, [r7, #1]
 8017ad4:	b2b6      	uxth	r6, r6
 8017ad6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017ad8:	fb1a fa07 	smulbb	sl, sl, r7
 8017adc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8017ade:	fb05 a507 	mla	r5, r5, r7, sl
 8017ae2:	9f06      	ldr	r7, [sp, #24]
 8017ae4:	f106 0a01 	add.w	sl, r6, #1
 8017ae8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017aec:	b2ad      	uxth	r5, r5
 8017aee:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017af0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8017af4:	f105 0a01 	add.w	sl, r5, #1
 8017af8:	fb1e fe07 	smulbb	lr, lr, r7
 8017afc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8017afe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017b02:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017b06:	fb02 e207 	mla	r2, r2, r7, lr
 8017b0a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017b0e:	b292      	uxth	r2, r2
 8017b10:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017b14:	f102 0e01 	add.w	lr, r2, #1
 8017b18:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8017b1c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8017b20:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017b24:	ea4e 0606 	orr.w	r6, lr, r6
 8017b28:	ea46 060a 	orr.w	r6, r6, sl
 8017b2c:	f829 6b02 	strh.w	r6, [r9], #2
 8017b30:	e7a7      	b.n	8017a82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 8017b32:	f102 0e01 	add.w	lr, r2, #1
 8017b36:	4422      	add	r2, r4
 8017b38:	9f06      	ldr	r7, [sp, #24]
 8017b3a:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8017b3e:	9a06      	ldr	r2, [sp, #24]
 8017b40:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017b44:	eb02 0a05 	add.w	sl, r2, r5
 8017b48:	4a13      	ldr	r2, [pc, #76]	@ (8017b98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 8017b4a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8017b4e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8017b52:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8017b56:	00d2      	lsls	r2, r2, #3
 8017b58:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017b5c:	ea49 0202 	orr.w	r2, r9, r2
 8017b60:	f817 9005 	ldrb.w	r9, [r7, r5]
 8017b64:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8017b68:	f826 2b02 	strh.w	r2, [r6], #2
 8017b6c:	fa1f f28e 	uxth.w	r2, lr
 8017b70:	e758      	b.n	8017a24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 8017b72:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8017b76:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8017b7a:	1a2d      	subs	r5, r5, r0
 8017b7c:	b2ad      	uxth	r5, r5
 8017b7e:	2d00      	cmp	r5, #0
 8017b80:	bf18      	it	ne
 8017b82:	2000      	movne	r0, #0
 8017b84:	e732      	b.n	80179ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 8017b86:	4b05      	ldr	r3, [pc, #20]	@ (8017b9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 8017b88:	6818      	ldr	r0, [r3, #0]
 8017b8a:	6803      	ldr	r3, [r0, #0]
 8017b8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017b8e:	4798      	blx	r3
 8017b90:	b01f      	add	sp, #124	@ 0x7c
 8017b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b96:	bf00      	nop
 8017b98:	fffff800 	.word	0xfffff800
 8017b9c:	20016c88 	.word	0x20016c88

08017ba0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8017ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017ba4:	b091      	sub	sp, #68	@ 0x44
 8017ba6:	469b      	mov	fp, r3
 8017ba8:	4616      	mov	r6, r2
 8017baa:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017bae:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8017bb2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017bb6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 8017bba:	4604      	mov	r4, r0
 8017bbc:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8017bc0:	4640      	mov	r0, r8
 8017bc2:	460d      	mov	r5, r1
 8017bc4:	4659      	mov	r1, fp
 8017bc6:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017bca:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017bce:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8017bd2:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8017bd6:	f7f2 fb2b 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 8017bda:	4631      	mov	r1, r6
 8017bdc:	4640      	mov	r0, r8
 8017bde:	f7f2 fb27 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 8017be2:	4b74      	ldr	r3, [pc, #464]	@ (8017db4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8017be4:	8818      	ldrh	r0, [r3, #0]
 8017be6:	4b74      	ldr	r3, [pc, #464]	@ (8017db8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017be8:	b202      	sxth	r2, r0
 8017bea:	8819      	ldrh	r1, [r3, #0]
 8017bec:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8017bf0:	b20e      	sxth	r6, r1
 8017bf2:	2b00      	cmp	r3, #0
 8017bf4:	da07      	bge.n	8017c06 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8017bf6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8017bfa:	4463      	add	r3, ip
 8017bfc:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8017c00:	2300      	movs	r3, #0
 8017c02:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8017c06:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8017c0a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8017c0e:	1ad2      	subs	r2, r2, r3
 8017c10:	4594      	cmp	ip, r2
 8017c12:	bfc4      	itt	gt
 8017c14:	1ac2      	subgt	r2, r0, r3
 8017c16:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8017c1a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017c1e:	2a00      	cmp	r2, #0
 8017c20:	da07      	bge.n	8017c32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017c22:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 8017c26:	4462      	add	r2, ip
 8017c28:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8017c2c:	2200      	movs	r2, #0
 8017c2e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8017c32:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 8017c36:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8017c3a:	eba6 060a 	sub.w	r6, r6, sl
 8017c3e:	42b2      	cmp	r2, r6
 8017c40:	bfc4      	itt	gt
 8017c42:	eba1 020a 	subgt.w	r2, r1, sl
 8017c46:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8017c4a:	4a5c      	ldr	r2, [pc, #368]	@ (8017dbc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8017c4c:	7812      	ldrb	r2, [r2, #0]
 8017c4e:	b9a2      	cbnz	r2, 8017c7a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017c50:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8017c54:	4286      	cmp	r6, r0
 8017c56:	4640      	mov	r0, r8
 8017c58:	9303      	str	r3, [sp, #12]
 8017c5a:	bf14      	ite	ne
 8017c5c:	2600      	movne	r6, #0
 8017c5e:	2601      	moveq	r6, #1
 8017c60:	f7f2 fb29 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017c64:	9b03      	ldr	r3, [sp, #12]
 8017c66:	b160      	cbz	r0, 8017c82 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017c68:	2300      	movs	r3, #0
 8017c6a:	8023      	strh	r3, [r4, #0]
 8017c6c:	8063      	strh	r3, [r4, #2]
 8017c6e:	80a3      	strh	r3, [r4, #4]
 8017c70:	4620      	mov	r0, r4
 8017c72:	80e3      	strh	r3, [r4, #6]
 8017c74:	b011      	add	sp, #68	@ 0x44
 8017c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c7a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8017c7e:	428e      	cmp	r6, r1
 8017c80:	e7e9      	b.n	8017c56 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8017c82:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8017c86:	a90e      	add	r1, sp, #56	@ 0x38
 8017c88:	900e      	str	r0, [sp, #56]	@ 0x38
 8017c8a:	a80c      	add	r0, sp, #48	@ 0x30
 8017c8c:	9205      	str	r2, [sp, #20]
 8017c8e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8017c92:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8017c96:	9206      	str	r2, [sp, #24]
 8017c98:	f8bb 2000 	ldrh.w	r2, [fp]
 8017c9c:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8017ca0:	1a9b      	subs	r3, r3, r2
 8017ca2:	b21b      	sxth	r3, r3
 8017ca4:	9303      	str	r3, [sp, #12]
 8017ca6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8017caa:	f8df b118 	ldr.w	fp, [pc, #280]	@ 8017dc4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017cae:	ebaa 0a03 	sub.w	sl, sl, r3
 8017cb2:	fa0f f38a 	sxth.w	r3, sl
 8017cb6:	9304      	str	r3, [sp, #16]
 8017cb8:	9b03      	ldr	r3, [sp, #12]
 8017cba:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8017cbe:	9b04      	ldr	r3, [sp, #16]
 8017cc0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017cc4:	9b05      	ldr	r3, [sp, #20]
 8017cc6:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8017cca:	9b06      	ldr	r3, [sp, #24]
 8017ccc:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8017cd0:	f7f8 fc50 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017cd4:	4640      	mov	r0, r8
 8017cd6:	f7f8 fc25 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017cda:	a80e      	add	r0, sp, #56	@ 0x38
 8017cdc:	f7f8 fc22 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017ce0:	4b37      	ldr	r3, [pc, #220]	@ (8017dc0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8017ce2:	4628      	mov	r0, r5
 8017ce4:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8017ce8:	881b      	ldrh	r3, [r3, #0]
 8017cea:	9307      	str	r3, [sp, #28]
 8017cec:	682b      	ldr	r3, [r5, #0]
 8017cee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017cf0:	4798      	blx	r3
 8017cf2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8017cf6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8017cfa:	4681      	mov	r9, r0
 8017cfc:	f8db 0000 	ldr.w	r0, [fp]
 8017d00:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8017d04:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8017d06:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8017d0a:	6803      	ldr	r3, [r0, #0]
 8017d0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017d0e:	4798      	blx	r3
 8017d10:	4607      	mov	r7, r0
 8017d12:	f8db 0000 	ldr.w	r0, [fp]
 8017d16:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8017d1a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017d1e:	6803      	ldr	r3, [r0, #0]
 8017d20:	9109      	str	r1, [sp, #36]	@ 0x24
 8017d22:	9208      	str	r2, [sp, #32]
 8017d24:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017d26:	4798      	blx	r3
 8017d28:	f010 0f01 	tst.w	r0, #1
 8017d2c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017d30:	d012      	beq.n	8017d58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017d32:	f8db 0000 	ldr.w	r0, [fp]
 8017d36:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8017d3a:	6803      	ldr	r3, [r0, #0]
 8017d3c:	9200      	str	r2, [sp, #0]
 8017d3e:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8017d40:	462b      	mov	r3, r5
 8017d42:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017d46:	47b0      	blx	r6
 8017d48:	9b03      	ldr	r3, [sp, #12]
 8017d4a:	8023      	strh	r3, [r4, #0]
 8017d4c:	9b04      	ldr	r3, [sp, #16]
 8017d4e:	8063      	strh	r3, [r4, #2]
 8017d50:	9b05      	ldr	r3, [sp, #20]
 8017d52:	80a3      	strh	r3, [r4, #4]
 8017d54:	9b06      	ldr	r3, [sp, #24]
 8017d56:	e78b      	b.n	8017c70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017d58:	fb09 f202 	mul.w	r2, r9, r2
 8017d5c:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 8017d60:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017d64:	440f      	add	r7, r1
 8017d66:	b166      	cbz	r6, 8017d82 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017d68:	9a07      	ldr	r2, [sp, #28]
 8017d6a:	4592      	cmp	sl, r2
 8017d6c:	d109      	bne.n	8017d82 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017d6e:	f8db 0000 	ldr.w	r0, [fp]
 8017d72:	fb09 f303 	mul.w	r3, r9, r3
 8017d76:	4629      	mov	r1, r5
 8017d78:	6802      	ldr	r2, [r0, #0]
 8017d7a:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 8017d7c:	463a      	mov	r2, r7
 8017d7e:	47b0      	blx	r6
 8017d80:	e7e2      	b.n	8017d48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017d82:	fb0a f303 	mul.w	r3, sl, r3
 8017d86:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8017d8a:	f8df b038 	ldr.w	fp, [pc, #56]	@ 8017dc4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017d8e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8017d92:	4545      	cmp	r5, r8
 8017d94:	d2d8      	bcs.n	8017d48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017d96:	f8db 0000 	ldr.w	r0, [fp]
 8017d9a:	4629      	mov	r1, r5
 8017d9c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8017da0:	4435      	add	r5, r6
 8017da2:	6802      	ldr	r2, [r0, #0]
 8017da4:	005b      	lsls	r3, r3, #1
 8017da6:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 8017daa:	463a      	mov	r2, r7
 8017dac:	47d0      	blx	sl
 8017dae:	444f      	add	r7, r9
 8017db0:	e7ef      	b.n	8017d92 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8017db2:	bf00      	nop
 8017db4:	20016c7c 	.word	0x20016c7c
 8017db8:	20016c7e 	.word	0x20016c7e
 8017dbc:	20016c80 	.word	0x20016c80
 8017dc0:	20016c82 	.word	0x20016c82
 8017dc4:	20016c88 	.word	0x20016c88

08017dc8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017dc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017dca:	4606      	mov	r6, r0
 8017dcc:	b087      	sub	sp, #28
 8017dce:	460c      	mov	r4, r1
 8017dd0:	4617      	mov	r7, r2
 8017dd2:	461d      	mov	r5, r3
 8017dd4:	b333      	cbz	r3, 8017e24 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017dd6:	4608      	mov	r0, r1
 8017dd8:	f7f2 fa6d 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017ddc:	bb10      	cbnz	r0, 8017e24 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017dde:	6820      	ldr	r0, [r4, #0]
 8017de0:	ab04      	add	r3, sp, #16
 8017de2:	6861      	ldr	r1, [r4, #4]
 8017de4:	4c1b      	ldr	r4, [pc, #108]	@ (8017e54 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8017de6:	c303      	stmia	r3!, {r0, r1}
 8017de8:	a804      	add	r0, sp, #16
 8017dea:	f7f8 fb9b 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017dee:	6820      	ldr	r0, [r4, #0]
 8017df0:	6803      	ldr	r3, [r0, #0]
 8017df2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017df4:	4798      	blx	r3
 8017df6:	2dff      	cmp	r5, #255	@ 0xff
 8017df8:	d016      	beq.n	8017e28 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8017dfa:	f010 0f08 	tst.w	r0, #8
 8017dfe:	6820      	ldr	r0, [r4, #0]
 8017e00:	d015      	beq.n	8017e2e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8017e02:	2400      	movs	r4, #0
 8017e04:	6801      	ldr	r1, [r0, #0]
 8017e06:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017e0a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017e0e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017e12:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017e16:	9401      	str	r4, [sp, #4]
 8017e18:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8017e1c:	9400      	str	r4, [sp, #0]
 8017e1e:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 8017e20:	4639      	mov	r1, r7
 8017e22:	47a0      	blx	r4
 8017e24:	b007      	add	sp, #28
 8017e26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017e28:	f010 0f02 	tst.w	r0, #2
 8017e2c:	e7e7      	b.n	8017dfe <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8017e2e:	6803      	ldr	r3, [r0, #0]
 8017e30:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017e32:	4798      	blx	r3
 8017e34:	4b08      	ldr	r3, [pc, #32]	@ (8017e58 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017e36:	4601      	mov	r1, r0
 8017e38:	4630      	mov	r0, r6
 8017e3a:	881a      	ldrh	r2, [r3, #0]
 8017e3c:	6833      	ldr	r3, [r6, #0]
 8017e3e:	e9cd 7500 	strd	r7, r5, [sp]
 8017e42:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8017e44:	ab04      	add	r3, sp, #16
 8017e46:	47a8      	blx	r5
 8017e48:	6820      	ldr	r0, [r4, #0]
 8017e4a:	6803      	ldr	r3, [r0, #0]
 8017e4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017e4e:	4798      	blx	r3
 8017e50:	e7e8      	b.n	8017e24 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017e52:	bf00      	nop
 8017e54:	20016c88 	.word	0x20016c88
 8017e58:	20016c82 	.word	0x20016c82

08017e5c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017e5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017e60:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8017e64:	4688      	mov	r8, r1
 8017e66:	4614      	mov	r4, r2
 8017e68:	461d      	mov	r5, r3
 8017e6a:	9e08      	ldr	r6, [sp, #32]
 8017e6c:	2f00      	cmp	r7, #0
 8017e6e:	f000 80ab 	beq.w	8017fc8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017e72:	4618      	mov	r0, r3
 8017e74:	f7f2 fa1f 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017e78:	2800      	cmp	r0, #0
 8017e7a:	f040 80a5 	bne.w	8017fc8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017e7e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017e82:	2fff      	cmp	r7, #255	@ 0xff
 8017e84:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017e88:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8017e8c:	fb04 1303 	mla	r3, r4, r3, r1
 8017e90:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8017e94:	eba4 0200 	sub.w	r2, r4, r0
 8017e98:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017e9c:	fb04 f505 	mul.w	r5, r4, r5
 8017ea0:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017ea4:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017ea8:	d04a      	beq.n	8017f40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8017eaa:	b2bc      	uxth	r4, r7
 8017eac:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8017eb0:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8017eb4:	fa5f f788 	uxtb.w	r7, r8
 8017eb8:	b2f3      	uxtb	r3, r6
 8017eba:	0040      	lsls	r0, r0, #1
 8017ebc:	fb0e fe04 	mul.w	lr, lr, r4
 8017ec0:	4367      	muls	r7, r4
 8017ec2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8017ec6:	4363      	muls	r3, r4
 8017ec8:	fa1f fc8c 	uxth.w	ip, ip
 8017ecc:	42a9      	cmp	r1, r5
 8017ece:	d27b      	bcs.n	8017fc8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017ed0:	eb01 0900 	add.w	r9, r1, r0
 8017ed4:	4549      	cmp	r1, r9
 8017ed6:	d231      	bcs.n	8017f3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8017ed8:	880a      	ldrh	r2, [r1, #0]
 8017eda:	1214      	asrs	r4, r2, #8
 8017edc:	10d6      	asrs	r6, r2, #3
 8017ede:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8017ee2:	00d2      	lsls	r2, r2, #3
 8017ee4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017ee8:	b2d2      	uxtb	r2, r2
 8017eea:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017eee:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017ef2:	fb14 f40c 	smulbb	r4, r4, ip
 8017ef6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017efa:	fb12 f20c 	smulbb	r2, r2, ip
 8017efe:	fb16 f60c 	smulbb	r6, r6, ip
 8017f02:	4474      	add	r4, lr
 8017f04:	441a      	add	r2, r3
 8017f06:	b2a4      	uxth	r4, r4
 8017f08:	443e      	add	r6, r7
 8017f0a:	b292      	uxth	r2, r2
 8017f0c:	f104 0a01 	add.w	sl, r4, #1
 8017f10:	b2b6      	uxth	r6, r6
 8017f12:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017f16:	f102 0a01 	add.w	sl, r2, #1
 8017f1a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017f1e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8017f22:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017f26:	4322      	orrs	r2, r4
 8017f28:	1c74      	adds	r4, r6, #1
 8017f2a:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017f2e:	0976      	lsrs	r6, r6, #5
 8017f30:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017f34:	4332      	orrs	r2, r6
 8017f36:	f821 2b02 	strh.w	r2, [r1], #2
 8017f3a:	e7cb      	b.n	8017ed4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8017f3c:	4441      	add	r1, r8
 8017f3e:	e7c5      	b.n	8017ecc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8017f40:	0973      	lsrs	r3, r6, #5
 8017f42:	4f22      	ldr	r7, [pc, #136]	@ (8017fcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 8017f44:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017f48:	ea08 0707 	and.w	r7, r8, r7
 8017f4c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017f50:	433b      	orrs	r3, r7
 8017f52:	07e7      	lsls	r7, r4, #31
 8017f54:	ea43 0306 	orr.w	r3, r3, r6
 8017f58:	b29b      	uxth	r3, r3
 8017f5a:	d50b      	bpl.n	8017f74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 8017f5c:	0040      	lsls	r0, r0, #1
 8017f5e:	0052      	lsls	r2, r2, #1
 8017f60:	42a9      	cmp	r1, r5
 8017f62:	d231      	bcs.n	8017fc8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017f64:	180c      	adds	r4, r1, r0
 8017f66:	42a1      	cmp	r1, r4
 8017f68:	d202      	bcs.n	8017f70 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017f6a:	f821 3b02 	strh.w	r3, [r1], #2
 8017f6e:	e7fa      	b.n	8017f66 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 8017f70:	4411      	add	r1, r2
 8017f72:	e7f5      	b.n	8017f60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 8017f74:	078e      	lsls	r6, r1, #30
 8017f76:	d008      	beq.n	8017f8a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 8017f78:	0066      	lsls	r6, r4, #1
 8017f7a:	460a      	mov	r2, r1
 8017f7c:	42aa      	cmp	r2, r5
 8017f7e:	d202      	bcs.n	8017f86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017f80:	8013      	strh	r3, [r2, #0]
 8017f82:	4432      	add	r2, r6
 8017f84:	e7fa      	b.n	8017f7c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 8017f86:	3102      	adds	r1, #2
 8017f88:	3801      	subs	r0, #1
 8017f8a:	07c2      	lsls	r2, r0, #31
 8017f8c:	d50b      	bpl.n	8017fa6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 8017f8e:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8017f92:	0066      	lsls	r6, r4, #1
 8017f94:	3a01      	subs	r2, #1
 8017f96:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017f9a:	42aa      	cmp	r2, r5
 8017f9c:	d202      	bcs.n	8017fa4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8017f9e:	8013      	strh	r3, [r2, #0]
 8017fa0:	4432      	add	r2, r6
 8017fa2:	e7fa      	b.n	8017f9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 8017fa4:	3801      	subs	r0, #1
 8017fa6:	b178      	cbz	r0, 8017fc8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017fa8:	1040      	asrs	r0, r0, #1
 8017faa:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017fae:	0080      	lsls	r0, r0, #2
 8017fb0:	0064      	lsls	r4, r4, #1
 8017fb2:	42a9      	cmp	r1, r5
 8017fb4:	d208      	bcs.n	8017fc8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017fb6:	180e      	adds	r6, r1, r0
 8017fb8:	460a      	mov	r2, r1
 8017fba:	42b2      	cmp	r2, r6
 8017fbc:	d202      	bcs.n	8017fc4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017fbe:	f842 3b04 	str.w	r3, [r2], #4
 8017fc2:	e7fa      	b.n	8017fba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 8017fc4:	4421      	add	r1, r4
 8017fc6:	e7f4      	b.n	8017fb2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 8017fc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017fcc:	00fff800 	.word	0x00fff800

08017fd0 <_ZN8touchgfx8LCD16bppC1Ev>:
 8017fd0:	2200      	movs	r2, #0
 8017fd2:	4912      	ldr	r1, [pc, #72]	@ (801801c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8017fd4:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8017fd8:	6001      	str	r1, [r0, #0]
 8017fda:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8017fde:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8017fe2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8017fe6:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8017fea:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8017fee:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8017ff2:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8017ff6:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8017ffa:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8017ffe:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8018002:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8018006:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801800a:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801800e:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8018012:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8018016:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 801801a:	4770      	bx	lr
 801801c:	08025a04 	.word	0x08025a04

08018020 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8018020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018024:	b08d      	sub	sp, #52	@ 0x34
 8018026:	460d      	mov	r5, r1
 8018028:	4604      	mov	r4, r0
 801802a:	4699      	mov	r9, r3
 801802c:	6808      	ldr	r0, [r1, #0]
 801802e:	ab08      	add	r3, sp, #32
 8018030:	6849      	ldr	r1, [r1, #4]
 8018032:	c303      	stmia	r3!, {r0, r1}
 8018034:	6810      	ldr	r0, [r2, #0]
 8018036:	ab0a      	add	r3, sp, #40	@ 0x28
 8018038:	6851      	ldr	r1, [r2, #4]
 801803a:	c303      	stmia	r3!, {r0, r1}
 801803c:	a808      	add	r0, sp, #32
 801803e:	f7f8 fa71 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018042:	4629      	mov	r1, r5
 8018044:	a80a      	add	r0, sp, #40	@ 0x28
 8018046:	4d67      	ldr	r5, [pc, #412]	@ (80181e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8018048:	f7f8 fa94 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801804c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8018050:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8018054:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8018058:	6828      	ldr	r0, [r5, #0]
 801805a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801805e:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8018062:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8018066:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801806a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801806e:	440a      	add	r2, r1
 8018070:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8018074:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8018078:	4413      	add	r3, r2
 801807a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801807e:	6803      	ldr	r3, [r0, #0]
 8018080:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018082:	4798      	blx	r3
 8018084:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8018088:	d119      	bne.n	80180be <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801808a:	f010 0f20 	tst.w	r0, #32
 801808e:	6828      	ldr	r0, [r5, #0]
 8018090:	d018      	beq.n	80180c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8018092:	2500      	movs	r5, #0
 8018094:	6801      	ldr	r1, [r0, #0]
 8018096:	b2b6      	uxth	r6, r6
 8018098:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801809c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 80180a0:	9601      	str	r6, [sp, #4]
 80180a2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80180a6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 80180aa:	9502      	str	r5, [sp, #8]
 80180ac:	fa1f f588 	uxth.w	r5, r8
 80180b0:	9500      	str	r5, [sp, #0]
 80180b2:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 80180b4:	4621      	mov	r1, r4
 80180b6:	47a8      	blx	r5
 80180b8:	b00d      	add	sp, #52	@ 0x34
 80180ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80180be:	f010 0f40 	tst.w	r0, #64	@ 0x40
 80180c2:	e7e4      	b.n	801808e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80180c4:	6803      	ldr	r3, [r0, #0]
 80180c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80180c8:	4798      	blx	r3
 80180ca:	4947      	ldr	r1, [pc, #284]	@ (80181e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80180cc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80180d0:	880b      	ldrh	r3, [r1, #0]
 80180d2:	468a      	mov	sl, r1
 80180d4:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 80180d8:	fb03 5202 	mla	r2, r3, r2, r5
 80180dc:	4373      	muls	r3, r6
 80180de:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80180e2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80180e6:	9307      	str	r3, [sp, #28]
 80180e8:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80180ec:	9306      	str	r3, [sp, #24]
 80180ee:	9b07      	ldr	r3, [sp, #28]
 80180f0:	4298      	cmp	r0, r3
 80180f2:	d270      	bcs.n	80181d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80180f4:	9b06      	ldr	r3, [sp, #24]
 80180f6:	4621      	mov	r1, r4
 80180f8:	eb00 0b03 	add.w	fp, r0, r3
 80180fc:	4558      	cmp	r0, fp
 80180fe:	d25d      	bcs.n	80181bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8018100:	f851 4b04 	ldr.w	r4, [r1], #4
 8018104:	0e23      	lsrs	r3, r4, #24
 8018106:	d014      	beq.n	8018132 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8018108:	2bff      	cmp	r3, #255	@ 0xff
 801810a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801810e:	d112      	bne.n	8018136 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8018110:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8018114:	d10f      	bne.n	8018136 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8018116:	0963      	lsrs	r3, r4, #5
 8018118:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801811c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8018120:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018124:	f02c 0c07 	bic.w	ip, ip, #7
 8018128:	ea43 0c0c 	orr.w	ip, r3, ip
 801812c:	ea4c 0404 	orr.w	r4, ip, r4
 8018130:	8004      	strh	r4, [r0, #0]
 8018132:	3002      	adds	r0, #2
 8018134:	e7e2      	b.n	80180fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8018136:	fb09 f303 	mul.w	r3, r9, r3
 801813a:	8807      	ldrh	r7, [r0, #0]
 801813c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8018140:	fa5f fc8c 	uxtb.w	ip, ip
 8018144:	1c5a      	adds	r2, r3, #1
 8018146:	123e      	asrs	r6, r7, #8
 8018148:	10fd      	asrs	r5, r7, #3
 801814a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801814e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018152:	00ff      	lsls	r7, r7, #3
 8018154:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018158:	1212      	asrs	r2, r2, #8
 801815a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801815e:	b293      	uxth	r3, r2
 8018160:	43d2      	mvns	r2, r2
 8018162:	b2ff      	uxtb	r7, r7
 8018164:	fb1e fe03 	smulbb	lr, lr, r3
 8018168:	b2d2      	uxtb	r2, r2
 801816a:	fb1c fc03 	smulbb	ip, ip, r3
 801816e:	b2e4      	uxtb	r4, r4
 8018170:	fb06 e602 	mla	r6, r6, r2, lr
 8018174:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018178:	fb14 f403 	smulbb	r4, r4, r3
 801817c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8018180:	b2b6      	uxth	r6, r6
 8018182:	fb05 c502 	mla	r5, r5, r2, ip
 8018186:	fb07 4702 	mla	r7, r7, r2, r4
 801818a:	f106 0e01 	add.w	lr, r6, #1
 801818e:	b2ad      	uxth	r5, r5
 8018190:	b2bf      	uxth	r7, r7
 8018192:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8018196:	f105 0c01 	add.w	ip, r5, #1
 801819a:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801819e:	1c7e      	adds	r6, r7, #1
 80181a0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80181a4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80181a8:	096d      	lsrs	r5, r5, #5
 80181aa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80181ae:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80181b2:	ea46 060e 	orr.w	r6, r6, lr
 80181b6:	432e      	orrs	r6, r5
 80181b8:	8006      	strh	r6, [r0, #0]
 80181ba:	e7ba      	b.n	8018132 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80181bc:	f8ba 3000 	ldrh.w	r3, [sl]
 80181c0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 80181c4:	eba3 0308 	sub.w	r3, r3, r8
 80181c8:	eba4 0408 	sub.w	r4, r4, r8
 80181cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80181d0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80181d4:	e78b      	b.n	80180ee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80181d6:	4b03      	ldr	r3, [pc, #12]	@ (80181e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80181d8:	6818      	ldr	r0, [r3, #0]
 80181da:	6803      	ldr	r3, [r0, #0]
 80181dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80181de:	4798      	blx	r3
 80181e0:	e76a      	b.n	80180b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80181e2:	bf00      	nop
 80181e4:	20016c88 	.word	0x20016c88
 80181e8:	20016c82 	.word	0x20016c82

080181ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80181ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80181f0:	b085      	sub	sp, #20
 80181f2:	6810      	ldr	r0, [r2, #0]
 80181f4:	460c      	mov	r4, r1
 80181f6:	6851      	ldr	r1, [r2, #4]
 80181f8:	466d      	mov	r5, sp
 80181fa:	4616      	mov	r6, r2
 80181fc:	c503      	stmia	r5!, {r0, r1}
 80181fe:	6818      	ldr	r0, [r3, #0]
 8018200:	6859      	ldr	r1, [r3, #4]
 8018202:	c503      	stmia	r5!, {r0, r1}
 8018204:	4668      	mov	r0, sp
 8018206:	4d2e      	ldr	r5, [pc, #184]	@ (80182c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8018208:	f7f8 f98c 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801820c:	4631      	mov	r1, r6
 801820e:	a802      	add	r0, sp, #8
 8018210:	4e2c      	ldr	r6, [pc, #176]	@ (80182c4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8018212:	f7f8 f9af 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018216:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801821a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801821e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8018222:	6828      	ldr	r0, [r5, #0]
 8018224:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018228:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801822c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8018230:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8018234:	f8bd 1000 	ldrh.w	r1, [sp]
 8018238:	440a      	add	r2, r1
 801823a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801823e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8018242:	4413      	add	r3, r2
 8018244:	f8ad 300a 	strh.w	r3, [sp, #10]
 8018248:	6803      	ldr	r3, [r0, #0]
 801824a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801824c:	4798      	blx	r3
 801824e:	8833      	ldrh	r3, [r6, #0]
 8018250:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8018254:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8018258:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801825c:	f8df e068 	ldr.w	lr, [pc, #104]	@ 80182c8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8018260:	fb03 1202 	mla	r2, r3, r2, r1
 8018264:	fb08 f303 	mul.w	r3, r8, r3
 8018268:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801826c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018270:	4298      	cmp	r0, r3
 8018272:	d21d      	bcs.n	80182b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8018274:	eb00 080c 	add.w	r8, r0, ip
 8018278:	4540      	cmp	r0, r8
 801827a:	d20f      	bcs.n	801829c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801827c:	f854 1b04 	ldr.w	r1, [r4], #4
 8018280:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8018284:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8018288:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801828c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8018290:	ea42 0209 	orr.w	r2, r2, r9
 8018294:	430a      	orrs	r2, r1
 8018296:	f820 2b02 	strh.w	r2, [r0], #2
 801829a:	e7ed      	b.n	8018278 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801829c:	8832      	ldrh	r2, [r6, #0]
 801829e:	1bd2      	subs	r2, r2, r7
 80182a0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80182a4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80182a8:	1bd2      	subs	r2, r2, r7
 80182aa:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80182ae:	e7df      	b.n	8018270 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80182b0:	6828      	ldr	r0, [r5, #0]
 80182b2:	6803      	ldr	r3, [r0, #0]
 80182b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80182b6:	4798      	blx	r3
 80182b8:	b005      	add	sp, #20
 80182ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80182be:	bf00      	nop
 80182c0:	20016c88 	.word	0x20016c88
 80182c4:	20016c82 	.word	0x20016c82
 80182c8:	fffff800 	.word	0xfffff800

080182cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80182cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80182d0:	b08e      	sub	sp, #56	@ 0x38
 80182d2:	460e      	mov	r6, r1
 80182d4:	4604      	mov	r4, r0
 80182d6:	461d      	mov	r5, r3
 80182d8:	6808      	ldr	r0, [r1, #0]
 80182da:	ab0a      	add	r3, sp, #40	@ 0x28
 80182dc:	6849      	ldr	r1, [r1, #4]
 80182de:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 80184b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80182e2:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 80184b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80182e6:	c303      	stmia	r3!, {r0, r1}
 80182e8:	6810      	ldr	r0, [r2, #0]
 80182ea:	ab0c      	add	r3, sp, #48	@ 0x30
 80182ec:	6851      	ldr	r1, [r2, #4]
 80182ee:	c303      	stmia	r3!, {r0, r1}
 80182f0:	a80a      	add	r0, sp, #40	@ 0x28
 80182f2:	f7f8 f917 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80182f6:	4631      	mov	r1, r6
 80182f8:	a80c      	add	r0, sp, #48	@ 0x30
 80182fa:	f7f8 f93b 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80182fe:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8018302:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8018306:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801830a:	f8d8 0000 	ldr.w	r0, [r8]
 801830e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018312:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8018316:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801831a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801831e:	440c      	add	r4, r1
 8018320:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8018324:	440a      	add	r2, r1
 8018326:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801832a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801832e:	4413      	add	r3, r2
 8018330:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8018334:	6803      	ldr	r3, [r0, #0]
 8018336:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018338:	4798      	blx	r3
 801833a:	2dff      	cmp	r5, #255	@ 0xff
 801833c:	d124      	bne.n	8018388 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801833e:	f010 0f01 	tst.w	r0, #1
 8018342:	f8d8 0000 	ldr.w	r0, [r8]
 8018346:	d022      	beq.n	801838e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8018348:	2100      	movs	r1, #0
 801834a:	f04f 0e01 	mov.w	lr, #1
 801834e:	f8d0 c000 	ldr.w	ip, [r0]
 8018352:	b2b6      	uxth	r6, r6
 8018354:	f8cd e018 	str.w	lr, [sp, #24]
 8018358:	b2bf      	uxth	r7, r7
 801835a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801835e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8018362:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8018366:	f8b9 e000 	ldrh.w	lr, [r9]
 801836a:	9503      	str	r5, [sp, #12]
 801836c:	9601      	str	r6, [sp, #4]
 801836e:	9700      	str	r7, [sp, #0]
 8018370:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8018374:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8018378:	9102      	str	r1, [sp, #8]
 801837a:	4621      	mov	r1, r4
 801837c:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 8018380:	47a8      	blx	r5
 8018382:	b00e      	add	sp, #56	@ 0x38
 8018384:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018388:	f010 0f04 	tst.w	r0, #4
 801838c:	e7d9      	b.n	8018342 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801838e:	6803      	ldr	r3, [r0, #0]
 8018390:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018392:	4798      	blx	r3
 8018394:	f8b9 3000 	ldrh.w	r3, [r9]
 8018398:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801839c:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80183a0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 80183a4:	435e      	muls	r6, r3
 80183a6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80183aa:	2dff      	cmp	r5, #255	@ 0xff
 80183ac:	fb03 1202 	mla	r2, r3, r2, r1
 80183b0:	ebac 0c07 	sub.w	ip, ip, r7
 80183b4:	eba3 0707 	sub.w	r7, r3, r7
 80183b8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80183bc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80183c0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80183c4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80183c8:	d049      	beq.n	801845e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80183ca:	43eb      	mvns	r3, r5
 80183cc:	fa1f f985 	uxth.w	r9, r5
 80183d0:	b2db      	uxtb	r3, r3
 80183d2:	42b0      	cmp	r0, r6
 80183d4:	d266      	bcs.n	80184a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80183d6:	eb00 0a0e 	add.w	sl, r0, lr
 80183da:	4550      	cmp	r0, sl
 80183dc:	4621      	mov	r1, r4
 80183de:	f104 0403 	add.w	r4, r4, #3
 80183e2:	d25b      	bcs.n	801849c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 80183e4:	8802      	ldrh	r2, [r0, #0]
 80183e6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80183ea:	ea4f 2822 	mov.w	r8, r2, asr #8
 80183ee:	fb11 f109 	smulbb	r1, r1, r9
 80183f2:	10d5      	asrs	r5, r2, #3
 80183f4:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80183f8:	00d2      	lsls	r2, r2, #3
 80183fa:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80183fe:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8018402:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018406:	fb08 1803 	mla	r8, r8, r3, r1
 801840a:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801840e:	b2d2      	uxtb	r2, r2
 8018410:	fb11 f109 	smulbb	r1, r1, r9
 8018414:	fa1f f888 	uxth.w	r8, r8
 8018418:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801841c:	fb05 1503 	mla	r5, r5, r3, r1
 8018420:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8018424:	fb11 f109 	smulbb	r1, r1, r9
 8018428:	b2ad      	uxth	r5, r5
 801842a:	fb02 1203 	mla	r2, r2, r3, r1
 801842e:	f108 0101 	add.w	r1, r8, #1
 8018432:	b292      	uxth	r2, r2
 8018434:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8018438:	1c51      	adds	r1, r2, #1
 801843a:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801843e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018442:	1c69      	adds	r1, r5, #1
 8018444:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018448:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801844c:	096d      	lsrs	r5, r5, #5
 801844e:	ea42 0208 	orr.w	r2, r2, r8
 8018452:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018456:	432a      	orrs	r2, r5
 8018458:	f820 2b02 	strh.w	r2, [r0], #2
 801845c:	e7bd      	b.n	80183da <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801845e:	4a14      	ldr	r2, [pc, #80]	@ (80184b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8018460:	42b0      	cmp	r0, r6
 8018462:	d21f      	bcs.n	80184a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018464:	eb00 050e 	add.w	r5, r0, lr
 8018468:	42a8      	cmp	r0, r5
 801846a:	4621      	mov	r1, r4
 801846c:	f104 0403 	add.w	r4, r4, #3
 8018470:	d210      	bcs.n	8018494 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8018472:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8018476:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801847a:	00db      	lsls	r3, r3, #3
 801847c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8018480:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018484:	430b      	orrs	r3, r1
 8018486:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801848a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801848e:	f820 3b02 	strh.w	r3, [r0], #2
 8018492:	e7e9      	b.n	8018468 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8018494:	4438      	add	r0, r7
 8018496:	eb01 040c 	add.w	r4, r1, ip
 801849a:	e7e1      	b.n	8018460 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801849c:	4438      	add	r0, r7
 801849e:	eb01 040c 	add.w	r4, r1, ip
 80184a2:	e796      	b.n	80183d2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80184a4:	4b03      	ldr	r3, [pc, #12]	@ (80184b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80184a6:	6818      	ldr	r0, [r3, #0]
 80184a8:	6803      	ldr	r3, [r0, #0]
 80184aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80184ac:	4798      	blx	r3
 80184ae:	e768      	b.n	8018382 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80184b0:	fffff800 	.word	0xfffff800
 80184b4:	20016c88 	.word	0x20016c88
 80184b8:	20016c82 	.word	0x20016c82

080184bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80184bc:	b4f0      	push	{r4, r5, r6, r7}
 80184be:	4616      	mov	r6, r2
 80184c0:	461c      	mov	r4, r3
 80184c2:	460d      	mov	r5, r1
 80184c4:	9a04      	ldr	r2, [sp, #16]
 80184c6:	2e01      	cmp	r6, #1
 80184c8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80184cc:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80184d0:	d012      	beq.n	80184f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 80184d2:	d303      	bcc.n	80184dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 80184d4:	2e02      	cmp	r6, #2
 80184d6:	d00a      	beq.n	80184ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 80184d8:	bcf0      	pop	{r4, r5, r6, r7}
 80184da:	4770      	bx	lr
 80184dc:	6805      	ldr	r5, [r0, #0]
 80184de:	e9cd 3704 	strd	r3, r7, [sp, #16]
 80184e2:	68ed      	ldr	r5, [r5, #12]
 80184e4:	4613      	mov	r3, r2
 80184e6:	4622      	mov	r2, r4
 80184e8:	46ac      	mov	ip, r5
 80184ea:	bcf0      	pop	{r4, r5, r6, r7}
 80184ec:	4760      	bx	ip
 80184ee:	4621      	mov	r1, r4
 80184f0:	4628      	mov	r0, r5
 80184f2:	bcf0      	pop	{r4, r5, r6, r7}
 80184f4:	f7ff bd94 	b.w	8018020 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80184f8:	4621      	mov	r1, r4
 80184fa:	4628      	mov	r0, r5
 80184fc:	bcf0      	pop	{r4, r5, r6, r7}
 80184fe:	f7ff bee5 	b.w	80182cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08018504 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8018504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018508:	b093      	sub	sp, #76	@ 0x4c
 801850a:	4681      	mov	r9, r0
 801850c:	4688      	mov	r8, r1
 801850e:	6810      	ldr	r0, [r2, #0]
 8018510:	6851      	ldr	r1, [r2, #4]
 8018512:	ac0e      	add	r4, sp, #56	@ 0x38
 8018514:	4616      	mov	r6, r2
 8018516:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801851a:	4f6b      	ldr	r7, [pc, #428]	@ (80186c8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801851c:	c403      	stmia	r4!, {r0, r1}
 801851e:	6818      	ldr	r0, [r3, #0]
 8018520:	ac10      	add	r4, sp, #64	@ 0x40
 8018522:	6859      	ldr	r1, [r3, #4]
 8018524:	c403      	stmia	r4!, {r0, r1}
 8018526:	a80e      	add	r0, sp, #56	@ 0x38
 8018528:	f7f7 fffc 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801852c:	4631      	mov	r1, r6
 801852e:	a810      	add	r0, sp, #64	@ 0x40
 8018530:	4e66      	ldr	r6, [pc, #408]	@ (80186cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018532:	f7f8 f81f 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018536:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801853a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801853e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8018542:	6830      	ldr	r0, [r6, #0]
 8018544:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018548:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801854c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8018550:	4489      	add	r9, r1
 8018552:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8018556:	440a      	add	r2, r1
 8018558:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801855c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018560:	4413      	add	r3, r2
 8018562:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8018566:	6803      	ldr	r3, [r0, #0]
 8018568:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801856a:	4798      	blx	r3
 801856c:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018570:	6830      	ldr	r0, [r6, #0]
 8018572:	d01d      	beq.n	80185b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8018574:	2200      	movs	r2, #0
 8018576:	6801      	ldr	r1, [r0, #0]
 8018578:	b2a4      	uxth	r4, r4
 801857a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801857e:	b2ad      	uxth	r5, r5
 8018580:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018584:	220b      	movs	r2, #11
 8018586:	9207      	str	r2, [sp, #28]
 8018588:	883a      	ldrh	r2, [r7, #0]
 801858a:	9502      	str	r5, [sp, #8]
 801858c:	9206      	str	r2, [sp, #24]
 801858e:	2201      	movs	r2, #1
 8018590:	9401      	str	r4, [sp, #4]
 8018592:	e9cd a204 	strd	sl, r2, [sp, #16]
 8018596:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801859a:	9203      	str	r2, [sp, #12]
 801859c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 80185a0:	9200      	str	r2, [sp, #0]
 80185a2:	4642      	mov	r2, r8
 80185a4:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 80185a6:	4649      	mov	r1, r9
 80185a8:	47a0      	blx	r4
 80185aa:	b013      	add	sp, #76	@ 0x4c
 80185ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185b0:	6803      	ldr	r3, [r0, #0]
 80185b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80185b4:	4798      	blx	r3
 80185b6:	883b      	ldrh	r3, [r7, #0]
 80185b8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80185bc:	f04f 0e04 	mov.w	lr, #4
 80185c0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 80185c4:	435d      	muls	r5, r3
 80185c6:	fb03 1202 	mla	r2, r3, r2, r1
 80185ca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80185ce:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80185d2:	920c      	str	r2, [sp, #48]	@ 0x30
 80185d4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80185d8:	1b12      	subs	r2, r2, r4
 80185da:	920d      	str	r2, [sp, #52]	@ 0x34
 80185dc:	0062      	lsls	r2, r4, #1
 80185de:	1b1c      	subs	r4, r3, r4
 80185e0:	920a      	str	r2, [sp, #40]	@ 0x28
 80185e2:	0063      	lsls	r3, r4, #1
 80185e4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80185e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80185e8:	4298      	cmp	r0, r3
 80185ea:	d266      	bcs.n	80186ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 80185ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80185ee:	eb00 0b03 	add.w	fp, r0, r3
 80185f2:	4558      	cmp	r0, fp
 80185f4:	d25c      	bcs.n	80186b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 80185f6:	f819 3b01 	ldrb.w	r3, [r9], #1
 80185fa:	fb1e e303 	smlabb	r3, lr, r3, lr
 80185fe:	f858 2003 	ldr.w	r2, [r8, r3]
 8018602:	0e11      	lsrs	r1, r2, #24
 8018604:	d012      	beq.n	801862c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018606:	29ff      	cmp	r1, #255	@ 0xff
 8018608:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801860c:	d110      	bne.n	8018630 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801860e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8018612:	d10d      	bne.n	8018630 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018614:	0953      	lsrs	r3, r2, #5
 8018616:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801861a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801861e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018622:	f027 0707 	bic.w	r7, r7, #7
 8018626:	431f      	orrs	r7, r3
 8018628:	433a      	orrs	r2, r7
 801862a:	8002      	strh	r2, [r0, #0]
 801862c:	3002      	adds	r0, #2
 801862e:	e7e0      	b.n	80185f2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8018630:	fb0a f101 	mul.w	r1, sl, r1
 8018634:	8806      	ldrh	r6, [r0, #0]
 8018636:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801863a:	b2d2      	uxtb	r2, r2
 801863c:	1c4b      	adds	r3, r1, #1
 801863e:	1235      	asrs	r5, r6, #8
 8018640:	10f4      	asrs	r4, r6, #3
 8018642:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8018646:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801864a:	00f6      	lsls	r6, r6, #3
 801864c:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8018650:	121b      	asrs	r3, r3, #8
 8018652:	b2f6      	uxtb	r6, r6
 8018654:	b299      	uxth	r1, r3
 8018656:	43db      	mvns	r3, r3
 8018658:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801865c:	fb1c fc01 	smulbb	ip, ip, r1
 8018660:	b2db      	uxtb	r3, r3
 8018662:	fb12 f201 	smulbb	r2, r2, r1
 8018666:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801866a:	fb05 c503 	mla	r5, r5, r3, ip
 801866e:	b2ff      	uxtb	r7, r7
 8018670:	fb06 2203 	mla	r2, r6, r3, r2
 8018674:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8018678:	fb17 f701 	smulbb	r7, r7, r1
 801867c:	b2ad      	uxth	r5, r5
 801867e:	b292      	uxth	r2, r2
 8018680:	fb04 7403 	mla	r4, r4, r3, r7
 8018684:	f105 0c01 	add.w	ip, r5, #1
 8018688:	1c57      	adds	r7, r2, #1
 801868a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801868e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018692:	b2a4      	uxth	r4, r4
 8018694:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018698:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801869c:	433d      	orrs	r5, r7
 801869e:	1c67      	adds	r7, r4, #1
 80186a0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80186a4:	0964      	lsrs	r4, r4, #5
 80186a6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80186aa:	4325      	orrs	r5, r4
 80186ac:	8005      	strh	r5, [r0, #0]
 80186ae:	e7bd      	b.n	801862c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80186b0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80186b2:	4418      	add	r0, r3
 80186b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80186b6:	4499      	add	r9, r3
 80186b8:	e795      	b.n	80185e6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80186ba:	4b04      	ldr	r3, [pc, #16]	@ (80186cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80186bc:	6818      	ldr	r0, [r3, #0]
 80186be:	6803      	ldr	r3, [r0, #0]
 80186c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80186c2:	4798      	blx	r3
 80186c4:	e771      	b.n	80185aa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 80186c6:	bf00      	nop
 80186c8:	20016c82 	.word	0x20016c82
 80186cc:	20016c88 	.word	0x20016c88

080186d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80186d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186d4:	b087      	sub	sp, #28
 80186d6:	4680      	mov	r8, r0
 80186d8:	460d      	mov	r5, r1
 80186da:	4614      	mov	r4, r2
 80186dc:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 80186e0:	2e00      	cmp	r6, #0
 80186e2:	f000 80b9 	beq.w	8018858 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 80186e6:	6810      	ldr	r0, [r2, #0]
 80186e8:	af02      	add	r7, sp, #8
 80186ea:	6851      	ldr	r1, [r2, #4]
 80186ec:	c703      	stmia	r7!, {r0, r1}
 80186ee:	6818      	ldr	r0, [r3, #0]
 80186f0:	af04      	add	r7, sp, #16
 80186f2:	6859      	ldr	r1, [r3, #4]
 80186f4:	c703      	stmia	r7!, {r0, r1}
 80186f6:	a802      	add	r0, sp, #8
 80186f8:	f7f7 ff14 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80186fc:	4621      	mov	r1, r4
 80186fe:	a804      	add	r0, sp, #16
 8018700:	f7f7 ff38 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018704:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018708:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801870c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8018710:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8018714:	fb14 2103 	smlabb	r1, r4, r3, r2
 8018718:	eb08 0401 	add.w	r4, r8, r1
 801871c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018720:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018724:	440a      	add	r2, r1
 8018726:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801872a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801872e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018732:	4413      	add	r3, r2
 8018734:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018738:	4b49      	ldr	r3, [pc, #292]	@ (8018860 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801873a:	6818      	ldr	r0, [r3, #0]
 801873c:	6803      	ldr	r3, [r0, #0]
 801873e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018740:	4798      	blx	r3
 8018742:	4b48      	ldr	r3, [pc, #288]	@ (8018864 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8018744:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018748:	2eff      	cmp	r6, #255	@ 0xff
 801874a:	881a      	ldrh	r2, [r3, #0]
 801874c:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8018750:	fb02 c101 	mla	r1, r2, r1, ip
 8018754:	fb02 f207 	mul.w	r2, r2, r7
 8018758:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801875c:	f105 0104 	add.w	r1, r5, #4
 8018760:	461d      	mov	r5, r3
 8018762:	d05a      	beq.n	801881a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8018764:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8018768:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801876c:	b2b6      	uxth	r6, r6
 801876e:	9301      	str	r3, [sp, #4]
 8018770:	fa1f fe8e 	uxth.w	lr, lr
 8018774:	4282      	cmp	r2, r0
 8018776:	d96a      	bls.n	801884e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018778:	eb00 0b0a 	add.w	fp, r0, sl
 801877c:	4583      	cmp	fp, r0
 801877e:	d940      	bls.n	8018802 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8018780:	8805      	ldrh	r5, [r0, #0]
 8018782:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018786:	122f      	asrs	r7, r5, #8
 8018788:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801878c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018790:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018794:	00ed      	lsls	r5, r5, #3
 8018796:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801879a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801879e:	fb17 f70e 	smulbb	r7, r7, lr
 80187a2:	b2ed      	uxtb	r5, r5
 80187a4:	fb19 f90e 	smulbb	r9, r9, lr
 80187a8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80187ac:	fb15 f50e 	smulbb	r5, r5, lr
 80187b0:	fb0c 7c06 	mla	ip, ip, r6, r7
 80187b4:	10df      	asrs	r7, r3, #3
 80187b6:	00db      	lsls	r3, r3, #3
 80187b8:	fa1f fc8c 	uxth.w	ip, ip
 80187bc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80187c0:	b2db      	uxtb	r3, r3
 80187c2:	fb07 9706 	mla	r7, r7, r6, r9
 80187c6:	f10c 0901 	add.w	r9, ip, #1
 80187ca:	fb03 5306 	mla	r3, r3, r6, r5
 80187ce:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80187d2:	b29b      	uxth	r3, r3
 80187d4:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 80187d8:	b2bf      	uxth	r7, r7
 80187da:	f103 0c01 	add.w	ip, r3, #1
 80187de:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80187e2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80187e6:	ea4c 0c09 	orr.w	ip, ip, r9
 80187ea:	f107 0901 	add.w	r9, r7, #1
 80187ee:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80187f2:	097f      	lsrs	r7, r7, #5
 80187f4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80187f8:	ea4c 0c07 	orr.w	ip, ip, r7
 80187fc:	f820 cb02 	strh.w	ip, [r0], #2
 8018800:	e7bc      	b.n	801877c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8018802:	9b01      	ldr	r3, [sp, #4]
 8018804:	881b      	ldrh	r3, [r3, #0]
 8018806:	eba3 0308 	sub.w	r3, r3, r8
 801880a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801880e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018812:	eba3 0308 	sub.w	r3, r3, r8
 8018816:	441c      	add	r4, r3
 8018818:	e7ac      	b.n	8018774 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801881a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801881e:	4282      	cmp	r2, r0
 8018820:	d915      	bls.n	801884e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018822:	eb00 060a 	add.w	r6, r0, sl
 8018826:	4286      	cmp	r6, r0
 8018828:	d906      	bls.n	8018838 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801882a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801882e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018832:	f820 3b02 	strh.w	r3, [r0], #2
 8018836:	e7f6      	b.n	8018826 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8018838:	882b      	ldrh	r3, [r5, #0]
 801883a:	eba3 0308 	sub.w	r3, r3, r8
 801883e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018842:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018846:	eba3 0308 	sub.w	r3, r3, r8
 801884a:	441c      	add	r4, r3
 801884c:	e7e7      	b.n	801881e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801884e:	4b04      	ldr	r3, [pc, #16]	@ (8018860 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018850:	6818      	ldr	r0, [r3, #0]
 8018852:	6803      	ldr	r3, [r0, #0]
 8018854:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018856:	4798      	blx	r3
 8018858:	b007      	add	sp, #28
 801885a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801885e:	bf00      	nop
 8018860:	20016c88 	.word	0x20016c88
 8018864:	20016c82 	.word	0x20016c82

08018868 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8018868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801886c:	b091      	sub	sp, #68	@ 0x44
 801886e:	4680      	mov	r8, r0
 8018870:	460f      	mov	r7, r1
 8018872:	4614      	mov	r4, r2
 8018874:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8018878:	2d00      	cmp	r5, #0
 801887a:	d051      	beq.n	8018920 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801887c:	6810      	ldr	r0, [r2, #0]
 801887e:	ae0c      	add	r6, sp, #48	@ 0x30
 8018880:	6851      	ldr	r1, [r2, #4]
 8018882:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8018a84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8018886:	c603      	stmia	r6!, {r0, r1}
 8018888:	6818      	ldr	r0, [r3, #0]
 801888a:	ae0e      	add	r6, sp, #56	@ 0x38
 801888c:	6859      	ldr	r1, [r3, #4]
 801888e:	c603      	stmia	r6!, {r0, r1}
 8018890:	a80c      	add	r0, sp, #48	@ 0x30
 8018892:	f7f7 fe47 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018896:	4621      	mov	r1, r4
 8018898:	a80e      	add	r0, sp, #56	@ 0x38
 801889a:	f7f7 fe6b 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801889e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 80188a2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80188a6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80188aa:	f8d9 0000 	ldr.w	r0, [r9]
 80188ae:	fb11 2103 	smlabb	r1, r1, r3, r2
 80188b2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80188b6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 80188ba:	eb08 0401 	add.w	r4, r8, r1
 80188be:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80188c2:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8018a88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80188c6:	440a      	add	r2, r1
 80188c8:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 80188cc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 80188d0:	4413      	add	r3, r2
 80188d2:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 80188d6:	6803      	ldr	r3, [r0, #0]
 80188d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80188da:	4798      	blx	r3
 80188dc:	f010 0f80 	tst.w	r0, #128	@ 0x80
 80188e0:	f8d9 0000 	ldr.w	r0, [r9]
 80188e4:	d01f      	beq.n	8018926 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80188e6:	2200      	movs	r2, #0
 80188e8:	6801      	ldr	r1, [r0, #0]
 80188ea:	b2b6      	uxth	r6, r6
 80188ec:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80188f0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80188f4:	220b      	movs	r2, #11
 80188f6:	9207      	str	r2, [sp, #28]
 80188f8:	f8b8 2000 	ldrh.w	r2, [r8]
 80188fc:	9601      	str	r6, [sp, #4]
 80188fe:	9206      	str	r2, [sp, #24]
 8018900:	2201      	movs	r2, #1
 8018902:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018906:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801890a:	9203      	str	r2, [sp, #12]
 801890c:	fa1f f28a 	uxth.w	r2, sl
 8018910:	9202      	str	r2, [sp, #8]
 8018912:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018916:	9200      	str	r2, [sp, #0]
 8018918:	463a      	mov	r2, r7
 801891a:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801891c:	4621      	mov	r1, r4
 801891e:	47a8      	blx	r5
 8018920:	b011      	add	sp, #68	@ 0x44
 8018922:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018926:	6803      	ldr	r3, [r0, #0]
 8018928:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801892c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801892e:	4798      	blx	r3
 8018930:	f8b8 2000 	ldrh.w	r2, [r8]
 8018934:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8018938:	2dff      	cmp	r5, #255	@ 0xff
 801893a:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801893e:	fb0a fa02 	mul.w	sl, sl, r2
 8018942:	fb02 1303 	mla	r3, r2, r3, r1
 8018946:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801894a:	d062      	beq.n	8018a12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801894c:	ea6f 0c05 	mvn.w	ip, r5
 8018950:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018954:	b2ad      	uxth	r5, r5
 8018956:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801895a:	fa5f fc8c 	uxtb.w	ip, ip
 801895e:	930a      	str	r3, [sp, #40]	@ 0x28
 8018960:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018962:	4298      	cmp	r0, r3
 8018964:	f080 8085 	bcs.w	8018a72 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018968:	eb00 0b09 	add.w	fp, r0, r9
 801896c:	4558      	cmp	r0, fp
 801896e:	d246      	bcs.n	80189fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018970:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018974:	2303      	movs	r3, #3
 8018976:	2204      	movs	r2, #4
 8018978:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801897c:	8803      	ldrh	r3, [r0, #0]
 801897e:	eb07 0a0e 	add.w	sl, r7, lr
 8018982:	1219      	asrs	r1, r3, #8
 8018984:	10da      	asrs	r2, r3, #3
 8018986:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801898a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801898e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018992:	00db      	lsls	r3, r3, #3
 8018994:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8018998:	fb18 f805 	smulbb	r8, r8, r5
 801899c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80189a0:	fb1e fe05 	smulbb	lr, lr, r5
 80189a4:	b2db      	uxtb	r3, r3
 80189a6:	fb01 810c 	mla	r1, r1, ip, r8
 80189aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80189ae:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80189b2:	fb18 f805 	smulbb	r8, r8, r5
 80189b6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80189ba:	b289      	uxth	r1, r1
 80189bc:	fb02 820c 	mla	r2, r2, ip, r8
 80189c0:	fb03 e30c 	mla	r3, r3, ip, lr
 80189c4:	f101 0801 	add.w	r8, r1, #1
 80189c8:	b292      	uxth	r2, r2
 80189ca:	b29b      	uxth	r3, r3
 80189cc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80189d0:	f102 0801 	add.w	r8, r2, #1
 80189d4:	f103 0e01 	add.w	lr, r3, #1
 80189d8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80189dc:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80189e0:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80189e4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80189e8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80189ec:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80189f0:	ea4e 0101 	orr.w	r1, lr, r1
 80189f4:	ea41 0108 	orr.w	r1, r1, r8
 80189f8:	f820 1b02 	strh.w	r1, [r0], #2
 80189fc:	e7b6      	b.n	801896c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80189fe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018a00:	881b      	ldrh	r3, [r3, #0]
 8018a02:	1b9b      	subs	r3, r3, r6
 8018a04:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018a08:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018a0c:	1b9b      	subs	r3, r3, r6
 8018a0e:	441c      	add	r4, r3
 8018a10:	e7a6      	b.n	8018960 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8018a12:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8018a16:	2203      	movs	r2, #3
 8018a18:	2504      	movs	r5, #4
 8018a1a:	4919      	ldr	r1, [pc, #100]	@ (8018a80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018a1c:	4550      	cmp	r0, sl
 8018a1e:	d228      	bcs.n	8018a72 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018a20:	eb00 0c09 	add.w	ip, r0, r9
 8018a24:	4560      	cmp	r0, ip
 8018a26:	4623      	mov	r3, r4
 8018a28:	d219      	bcs.n	8018a5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8018a2a:	f893 e000 	ldrb.w	lr, [r3]
 8018a2e:	3401      	adds	r4, #1
 8018a30:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018a34:	eb07 0b0e 	add.w	fp, r7, lr
 8018a38:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018a3c:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018a40:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018a44:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8018a48:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8018a4c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8018a50:	ea43 030b 	orr.w	r3, r3, fp
 8018a54:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8018a58:	f820 3b02 	strh.w	r3, [r0], #2
 8018a5c:	e7e2      	b.n	8018a24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018a5e:	f8b8 3000 	ldrh.w	r3, [r8]
 8018a62:	1b9b      	subs	r3, r3, r6
 8018a64:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018a68:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018a6c:	1b9b      	subs	r3, r3, r6
 8018a6e:	441c      	add	r4, r3
 8018a70:	e7d4      	b.n	8018a1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018a72:	4b04      	ldr	r3, [pc, #16]	@ (8018a84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018a74:	6818      	ldr	r0, [r3, #0]
 8018a76:	6803      	ldr	r3, [r0, #0]
 8018a78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018a7a:	4798      	blx	r3
 8018a7c:	e750      	b.n	8018920 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018a7e:	bf00      	nop
 8018a80:	fffff800 	.word	0xfffff800
 8018a84:	20016c88 	.word	0x20016c88
 8018a88:	20016c82 	.word	0x20016c82

08018a8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8018a8c:	b4f0      	push	{r4, r5, r6, r7}
 8018a8e:	460c      	mov	r4, r1
 8018a90:	4611      	mov	r1, r2
 8018a92:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8018a96:	461a      	mov	r2, r3
 8018a98:	780f      	ldrb	r7, [r1, #0]
 8018a9a:	9b04      	ldr	r3, [sp, #16]
 8018a9c:	2f01      	cmp	r7, #1
 8018a9e:	784e      	ldrb	r6, [r1, #1]
 8018aa0:	d038      	beq.n	8018b14 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8018aa2:	d31f      	bcc.n	8018ae4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8018aa4:	2f02      	cmp	r7, #2
 8018aa6:	d14d      	bne.n	8018b44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018aa8:	2e03      	cmp	r6, #3
 8018aaa:	d84b      	bhi.n	8018b44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018aac:	e8df f006 	tbb	[pc, r6]
 8018ab0:	17140702 	.word	0x17140702
 8018ab4:	9504      	str	r5, [sp, #16]
 8018ab6:	4620      	mov	r0, r4
 8018ab8:	bcf0      	pop	{r4, r5, r6, r7}
 8018aba:	f7ff be09 	b.w	80186d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8018abe:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018ac0:	2800      	cmp	r0, #0
 8018ac2:	d03f      	beq.n	8018b44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018ac4:	6806      	ldr	r6, [r0, #0]
 8018ac6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018aca:	68b5      	ldr	r5, [r6, #8]
 8018acc:	4613      	mov	r3, r2
 8018ace:	46ac      	mov	ip, r5
 8018ad0:	460a      	mov	r2, r1
 8018ad2:	4621      	mov	r1, r4
 8018ad4:	bcf0      	pop	{r4, r5, r6, r7}
 8018ad6:	4760      	bx	ip
 8018ad8:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018adc:	e7f0      	b.n	8018ac0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8018ade:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8018ae2:	e7ed      	b.n	8018ac0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8018ae4:	2e03      	cmp	r6, #3
 8018ae6:	d82d      	bhi.n	8018b44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018ae8:	e8df f006 	tbb	[pc, r6]
 8018aec:	110e0702 	.word	0x110e0702
 8018af0:	9504      	str	r5, [sp, #16]
 8018af2:	4620      	mov	r0, r4
 8018af4:	bcf0      	pop	{r4, r5, r6, r7}
 8018af6:	f7ff bd05 	b.w	8018504 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8018afa:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018afc:	b310      	cbz	r0, 8018b44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018afe:	6806      	ldr	r6, [r0, #0]
 8018b00:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018b04:	68f5      	ldr	r5, [r6, #12]
 8018b06:	e7e1      	b.n	8018acc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8018b08:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018b0c:	e7f6      	b.n	8018afc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8018b0e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8018b12:	e7f3      	b.n	8018afc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8018b14:	2e03      	cmp	r6, #3
 8018b16:	d815      	bhi.n	8018b44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018b18:	e8df f006 	tbb	[pc, r6]
 8018b1c:	110e0702 	.word	0x110e0702
 8018b20:	9504      	str	r5, [sp, #16]
 8018b22:	4620      	mov	r0, r4
 8018b24:	bcf0      	pop	{r4, r5, r6, r7}
 8018b26:	f7ff be9f 	b.w	8018868 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8018b2a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018b2c:	b150      	cbz	r0, 8018b44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018b2e:	6806      	ldr	r6, [r0, #0]
 8018b30:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018b34:	6935      	ldr	r5, [r6, #16]
 8018b36:	e7c9      	b.n	8018acc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8018b38:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018b3c:	e7f6      	b.n	8018b2c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8018b3e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8018b42:	e7f3      	b.n	8018b2c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8018b44:	bcf0      	pop	{r4, r5, r6, r7}
 8018b46:	4770      	bx	lr

08018b48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8018b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b4c:	b087      	sub	sp, #28
 8018b4e:	4604      	mov	r4, r0
 8018b50:	460e      	mov	r6, r1
 8018b52:	6810      	ldr	r0, [r2, #0]
 8018b54:	6851      	ldr	r1, [r2, #4]
 8018b56:	ad02      	add	r5, sp, #8
 8018b58:	4617      	mov	r7, r2
 8018b5a:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 8018b5e:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 8018d90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8018b62:	c503      	stmia	r5!, {r0, r1}
 8018b64:	6818      	ldr	r0, [r3, #0]
 8018b66:	ad04      	add	r5, sp, #16
 8018b68:	6859      	ldr	r1, [r3, #4]
 8018b6a:	c503      	stmia	r5!, {r0, r1}
 8018b6c:	a802      	add	r0, sp, #8
 8018b6e:	f7f7 fcd9 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018b72:	4639      	mov	r1, r7
 8018b74:	a804      	add	r0, sp, #16
 8018b76:	f7f7 fcfd 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018b7a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018b7e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018b82:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8018b86:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018b8a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018b8e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8018b92:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8018b96:	440e      	add	r6, r1
 8018b98:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018b9c:	440a      	add	r2, r1
 8018b9e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018ba2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018ba6:	4413      	add	r3, r2
 8018ba8:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018bac:	4b77      	ldr	r3, [pc, #476]	@ (8018d8c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018bae:	6818      	ldr	r0, [r3, #0]
 8018bb0:	6803      	ldr	r3, [r0, #0]
 8018bb2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018bb4:	4798      	blx	r3
 8018bb6:	f8b9 b000 	ldrh.w	fp, [r9]
 8018bba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018bbe:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8018bc2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018bc6:	fb05 f50b 	mul.w	r5, r5, fp
 8018bca:	fb0b 2303 	mla	r3, fp, r3, r2
 8018bce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018bd2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018bd6:	9300      	str	r3, [sp, #0]
 8018bd8:	d069      	beq.n	8018cae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018bda:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018bde:	4558      	cmp	r0, fp
 8018be0:	f080 80cc 	bcs.w	8018d7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018be4:	9b00      	ldr	r3, [sp, #0]
 8018be6:	4631      	mov	r1, r6
 8018be8:	18c3      	adds	r3, r0, r3
 8018bea:	9301      	str	r3, [sp, #4]
 8018bec:	9b01      	ldr	r3, [sp, #4]
 8018bee:	4298      	cmp	r0, r3
 8018bf0:	d24f      	bcs.n	8018c92 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8018bf2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8018bf6:	2a00      	cmp	r2, #0
 8018bf8:	d048      	beq.n	8018c8c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018bfa:	fb0a f202 	mul.w	r2, sl, r2
 8018bfe:	1c53      	adds	r3, r2, #1
 8018c00:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018c04:	121b      	asrs	r3, r3, #8
 8018c06:	d041      	beq.n	8018c8c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018c08:	8802      	ldrh	r2, [r0, #0]
 8018c0a:	b29e      	uxth	r6, r3
 8018c0c:	f8b4 c000 	ldrh.w	ip, [r4]
 8018c10:	43db      	mvns	r3, r3
 8018c12:	1215      	asrs	r5, r2, #8
 8018c14:	b2db      	uxtb	r3, r3
 8018c16:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018c1a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018c1e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8018c22:	fb15 f503 	smulbb	r5, r5, r3
 8018c26:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018c2a:	00d2      	lsls	r2, r2, #3
 8018c2c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8018c30:	fb07 5706 	mla	r7, r7, r6, r5
 8018c34:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018c38:	b2d2      	uxtb	r2, r2
 8018c3a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018c3e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018c42:	fb1e fe03 	smulbb	lr, lr, r3
 8018c46:	b2bf      	uxth	r7, r7
 8018c48:	fb12 f203 	smulbb	r2, r2, r3
 8018c4c:	fa5f fc8c 	uxtb.w	ip, ip
 8018c50:	fb05 e506 	mla	r5, r5, r6, lr
 8018c54:	f107 0e01 	add.w	lr, r7, #1
 8018c58:	fb0c 2c06 	mla	ip, ip, r6, r2
 8018c5c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8018c60:	fa1f fc8c 	uxth.w	ip, ip
 8018c64:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8018c68:	b2ad      	uxth	r5, r5
 8018c6a:	f10c 0701 	add.w	r7, ip, #1
 8018c6e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018c72:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018c76:	ea47 070e 	orr.w	r7, r7, lr
 8018c7a:	f105 0e01 	add.w	lr, r5, #1
 8018c7e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8018c82:	096d      	lsrs	r5, r5, #5
 8018c84:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018c88:	432f      	orrs	r7, r5
 8018c8a:	8007      	strh	r7, [r0, #0]
 8018c8c:	3002      	adds	r0, #2
 8018c8e:	3402      	adds	r4, #2
 8018c90:	e7ac      	b.n	8018bec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8018c92:	f8b9 3000 	ldrh.w	r3, [r9]
 8018c96:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018c9a:	eba3 0308 	sub.w	r3, r3, r8
 8018c9e:	eba6 0608 	sub.w	r6, r6, r8
 8018ca2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018ca6:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8018caa:	440e      	add	r6, r1
 8018cac:	e797      	b.n	8018bde <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018cae:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8018cb2:	42a8      	cmp	r0, r5
 8018cb4:	d262      	bcs.n	8018d7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018cb6:	9b00      	ldr	r3, [sp, #0]
 8018cb8:	4631      	mov	r1, r6
 8018cba:	eb00 0b03 	add.w	fp, r0, r3
 8018cbe:	4558      	cmp	r0, fp
 8018cc0:	d24e      	bcs.n	8018d60 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8018cc2:	f811 3b01 	ldrb.w	r3, [r1], #1
 8018cc6:	b12b      	cbz	r3, 8018cd4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018cc8:	2bff      	cmp	r3, #255	@ 0xff
 8018cca:	f8b4 e000 	ldrh.w	lr, [r4]
 8018cce:	d104      	bne.n	8018cda <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018cd0:	f8a0 e000 	strh.w	lr, [r0]
 8018cd4:	3002      	adds	r0, #2
 8018cd6:	3402      	adds	r4, #2
 8018cd8:	e7f1      	b.n	8018cbe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018cda:	8802      	ldrh	r2, [r0, #0]
 8018cdc:	b29f      	uxth	r7, r3
 8018cde:	43db      	mvns	r3, r3
 8018ce0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018ce4:	1216      	asrs	r6, r2, #8
 8018ce6:	b2db      	uxtb	r3, r3
 8018ce8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018cec:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018cf0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8018cf4:	00d2      	lsls	r2, r2, #3
 8018cf6:	fb16 f603 	smulbb	r6, r6, r3
 8018cfa:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018cfe:	b2d2      	uxtb	r2, r2
 8018d00:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018d04:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018d08:	fb1a fa03 	smulbb	sl, sl, r3
 8018d0c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018d10:	fa1f fc8c 	uxth.w	ip, ip
 8018d14:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018d18:	fb12 f303 	smulbb	r3, r2, r3
 8018d1c:	fa5f fe8e 	uxtb.w	lr, lr
 8018d20:	fb06 a607 	mla	r6, r6, r7, sl
 8018d24:	f10c 0201 	add.w	r2, ip, #1
 8018d28:	fb0e 3307 	mla	r3, lr, r7, r3
 8018d2c:	b2b6      	uxth	r6, r6
 8018d2e:	b29b      	uxth	r3, r3
 8018d30:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018d34:	f106 0a01 	add.w	sl, r6, #1
 8018d38:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8018d3c:	f103 0c01 	add.w	ip, r3, #1
 8018d40:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018d44:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018d48:	0976      	lsrs	r6, r6, #5
 8018d4a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018d4e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018d52:	ea4c 0c02 	orr.w	ip, ip, r2
 8018d56:	ea4c 0c06 	orr.w	ip, ip, r6
 8018d5a:	f8a0 c000 	strh.w	ip, [r0]
 8018d5e:	e7b9      	b.n	8018cd4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018d60:	f8b9 3000 	ldrh.w	r3, [r9]
 8018d64:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018d68:	eba3 0308 	sub.w	r3, r3, r8
 8018d6c:	eba6 0608 	sub.w	r6, r6, r8
 8018d70:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018d74:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8018d78:	440e      	add	r6, r1
 8018d7a:	e79a      	b.n	8018cb2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8018d7c:	4b03      	ldr	r3, [pc, #12]	@ (8018d8c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018d7e:	6818      	ldr	r0, [r3, #0]
 8018d80:	6803      	ldr	r3, [r0, #0]
 8018d82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018d84:	4798      	blx	r3
 8018d86:	b007      	add	sp, #28
 8018d88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d8c:	20016c88 	.word	0x20016c88
 8018d90:	20016c82 	.word	0x20016c82

08018d94 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8018d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d98:	b089      	sub	sp, #36	@ 0x24
 8018d9a:	4682      	mov	sl, r0
 8018d9c:	460f      	mov	r7, r1
 8018d9e:	4691      	mov	r9, r2
 8018da0:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8018da4:	4698      	mov	r8, r3
 8018da6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018da8:	2e00      	cmp	r6, #0
 8018daa:	d03d      	beq.n	8018e28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018dac:	4608      	mov	r0, r1
 8018dae:	f7fa fe49 	bl	8013a44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018db2:	4605      	mov	r5, r0
 8018db4:	4638      	mov	r0, r7
 8018db6:	f7fa fe79 	bl	8013aac <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018dba:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018dbe:	4638      	mov	r0, r7
 8018dc0:	f8ad 9008 	strh.w	r9, [sp, #8]
 8018dc4:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018dc8:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018dcc:	f7fa ff26 	bl	8013c1c <_ZNK8touchgfx6Bitmap7getDataEv>
 8018dd0:	4605      	mov	r5, r0
 8018dd2:	4638      	mov	r0, r7
 8018dd4:	f7fa ff52 	bl	8013c7c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018dd8:	4681      	mov	r9, r0
 8018dda:	4638      	mov	r0, r7
 8018ddc:	f7fa ffa2 	bl	8013d24 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018de0:	280b      	cmp	r0, #11
 8018de2:	d821      	bhi.n	8018e28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018de4:	e8df f000 	tbb	[pc, r0]
 8018de8:	2006aebe 	.word	0x2006aebe
 8018dec:	20202020 	.word	0x20202020
 8018df0:	b5202020 	.word	0xb5202020
 8018df4:	4bb0      	ldr	r3, [pc, #704]	@ (80190b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8018df6:	6818      	ldr	r0, [r3, #0]
 8018df8:	6803      	ldr	r3, [r0, #0]
 8018dfa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018dfc:	4798      	blx	r3
 8018dfe:	2eff      	cmp	r6, #255	@ 0xff
 8018e00:	d101      	bne.n	8018e06 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8018e02:	0683      	lsls	r3, r0, #26
 8018e04:	d506      	bpl.n	8018e14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 8018e06:	4633      	mov	r3, r6
 8018e08:	4622      	mov	r2, r4
 8018e0a:	a902      	add	r1, sp, #8
 8018e0c:	4628      	mov	r0, r5
 8018e0e:	f7ff f907 	bl	8018020 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018e12:	e009      	b.n	8018e28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018e14:	4638      	mov	r0, r7
 8018e16:	f7fa fec9 	bl	8013bac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018e1a:	b940      	cbnz	r0, 8018e2e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8018e1c:	4623      	mov	r3, r4
 8018e1e:	aa02      	add	r2, sp, #8
 8018e20:	4629      	mov	r1, r5
 8018e22:	4650      	mov	r0, sl
 8018e24:	f7ff f9e2 	bl	80181ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018e28:	b009      	add	sp, #36	@ 0x24
 8018e2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018e2e:	f10d 0818 	add.w	r8, sp, #24
 8018e32:	4639      	mov	r1, r7
 8018e34:	af04      	add	r7, sp, #16
 8018e36:	4640      	mov	r0, r8
 8018e38:	f7fa fe6c 	bl	8013b14 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018e3c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018e40:	e887 0003 	stmia.w	r7, {r0, r1}
 8018e44:	4638      	mov	r0, r7
 8018e46:	4621      	mov	r1, r4
 8018e48:	f7f1 f9f2 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 8018e4c:	4638      	mov	r0, r7
 8018e4e:	f7f1 fa32 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018e52:	2800      	cmp	r0, #0
 8018e54:	d1d7      	bne.n	8018e06 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8018e56:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018e5a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018e5e:	4293      	cmp	r3, r2
 8018e60:	dd12      	ble.n	8018e88 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 8018e62:	1a9b      	subs	r3, r3, r2
 8018e64:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018e68:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018e6c:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018e70:	4628      	mov	r0, r5
 8018e72:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018e76:	4642      	mov	r2, r8
 8018e78:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018e7c:	a902      	add	r1, sp, #8
 8018e7e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018e82:	4633      	mov	r3, r6
 8018e84:	f7ff f8cc 	bl	8018020 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018e88:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018e8c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018e90:	4293      	cmp	r3, r2
 8018e92:	dd12      	ble.n	8018eba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8018e94:	1a9b      	subs	r3, r3, r2
 8018e96:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018e9a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018e9e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018ea2:	4642      	mov	r2, r8
 8018ea4:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018ea8:	4628      	mov	r0, r5
 8018eaa:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018eae:	23ff      	movs	r3, #255	@ 0xff
 8018eb0:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018eb4:	a902      	add	r1, sp, #8
 8018eb6:	f7ff f8b3 	bl	8018020 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018eba:	463b      	mov	r3, r7
 8018ebc:	aa02      	add	r2, sp, #8
 8018ebe:	4629      	mov	r1, r5
 8018ec0:	4650      	mov	r0, sl
 8018ec2:	f7ff f993 	bl	80181ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018ec6:	88a2      	ldrh	r2, [r4, #4]
 8018ec8:	8823      	ldrh	r3, [r4, #0]
 8018eca:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018ece:	4413      	add	r3, r2
 8018ed0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018ed4:	440a      	add	r2, r1
 8018ed6:	b29b      	uxth	r3, r3
 8018ed8:	b292      	uxth	r2, r2
 8018eda:	b218      	sxth	r0, r3
 8018edc:	b211      	sxth	r1, r2
 8018ede:	4288      	cmp	r0, r1
 8018ee0:	dd12      	ble.n	8018f08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8018ee2:	1a9b      	subs	r3, r3, r2
 8018ee4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018ee8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018eec:	4642      	mov	r2, r8
 8018eee:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018ef2:	a902      	add	r1, sp, #8
 8018ef4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018ef8:	23ff      	movs	r3, #255	@ 0xff
 8018efa:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018efe:	4628      	mov	r0, r5
 8018f00:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018f04:	f7ff f88c 	bl	8018020 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018f08:	88e2      	ldrh	r2, [r4, #6]
 8018f0a:	8863      	ldrh	r3, [r4, #2]
 8018f0c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018f10:	4413      	add	r3, r2
 8018f12:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018f16:	440a      	add	r2, r1
 8018f18:	b29b      	uxth	r3, r3
 8018f1a:	b292      	uxth	r2, r2
 8018f1c:	b218      	sxth	r0, r3
 8018f1e:	b211      	sxth	r1, r2
 8018f20:	4288      	cmp	r0, r1
 8018f22:	dd81      	ble.n	8018e28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018f24:	1a9b      	subs	r3, r3, r2
 8018f26:	f9b4 6000 	ldrsh.w	r6, [r4]
 8018f2a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018f2e:	4642      	mov	r2, r8
 8018f30:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018f34:	23ff      	movs	r3, #255	@ 0xff
 8018f36:	f8ad 6018 	strh.w	r6, [sp, #24]
 8018f3a:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018f3e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018f42:	e762      	b.n	8018e0a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8018f44:	4633      	mov	r3, r6
 8018f46:	4622      	mov	r2, r4
 8018f48:	a902      	add	r1, sp, #8
 8018f4a:	4628      	mov	r0, r5
 8018f4c:	f7ff f9be 	bl	80182cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018f50:	e76a      	b.n	8018e28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018f52:	e9cd 4600 	strd	r4, r6, [sp]
 8018f56:	ab02      	add	r3, sp, #8
 8018f58:	464a      	mov	r2, r9
 8018f5a:	4629      	mov	r1, r5
 8018f5c:	4650      	mov	r0, sl
 8018f5e:	f7ff fd95 	bl	8018a8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018f62:	e761      	b.n	8018e28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018f64:	4638      	mov	r0, r7
 8018f66:	f7fa fe21 	bl	8013bac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018f6a:	b950      	cbnz	r0, 8018f82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8018f6c:	f8da 3000 	ldr.w	r3, [sl]
 8018f70:	aa02      	add	r2, sp, #8
 8018f72:	4629      	mov	r1, r5
 8018f74:	e9cd 6000 	strd	r6, r0, [sp]
 8018f78:	4650      	mov	r0, sl
 8018f7a:	68de      	ldr	r6, [r3, #12]
 8018f7c:	4623      	mov	r3, r4
 8018f7e:	47b0      	blx	r6
 8018f80:	e752      	b.n	8018e28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018f82:	f10d 0818 	add.w	r8, sp, #24
 8018f86:	4639      	mov	r1, r7
 8018f88:	af04      	add	r7, sp, #16
 8018f8a:	4640      	mov	r0, r8
 8018f8c:	f7fa fdc2 	bl	8013b14 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018f90:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018f94:	e887 0003 	stmia.w	r7, {r0, r1}
 8018f98:	4638      	mov	r0, r7
 8018f9a:	4621      	mov	r1, r4
 8018f9c:	f7f1 f948 	bl	800a230 <_ZN8touchgfx4RectaNERKS0_>
 8018fa0:	4638      	mov	r0, r7
 8018fa2:	f7f1 f988 	bl	800a2b6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018fa6:	b138      	cbz	r0, 8018fb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8018fa8:	4623      	mov	r3, r4
 8018faa:	9600      	str	r6, [sp, #0]
 8018fac:	aa02      	add	r2, sp, #8
 8018fae:	4649      	mov	r1, r9
 8018fb0:	4628      	mov	r0, r5
 8018fb2:	f7ff fdc9 	bl	8018b48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018fb6:	e737      	b.n	8018e28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018fb8:	f8da 3000 	ldr.w	r3, [sl]
 8018fbc:	aa02      	add	r2, sp, #8
 8018fbe:	4629      	mov	r1, r5
 8018fc0:	e9cd 6000 	strd	r6, r0, [sp]
 8018fc4:	4650      	mov	r0, sl
 8018fc6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8018fca:	463b      	mov	r3, r7
 8018fcc:	47d8      	blx	fp
 8018fce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018fd2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018fd6:	4293      	cmp	r3, r2
 8018fd8:	dd13      	ble.n	8019002 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8018fda:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018fde:	1a9b      	subs	r3, r3, r2
 8018fe0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018fe4:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018fe8:	4628      	mov	r0, r5
 8018fea:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018fee:	aa02      	add	r2, sp, #8
 8018ff0:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018ff4:	4649      	mov	r1, r9
 8018ff6:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018ffa:	4643      	mov	r3, r8
 8018ffc:	9600      	str	r6, [sp, #0]
 8018ffe:	f7ff fda3 	bl	8018b48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019002:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8019006:	f9b4 2000 	ldrsh.w	r2, [r4]
 801900a:	4293      	cmp	r3, r2
 801900c:	dd13      	ble.n	8019036 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801900e:	1a9b      	subs	r3, r3, r2
 8019010:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8019014:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8019018:	f8ad 2018 	strh.w	r2, [sp, #24]
 801901c:	aa02      	add	r2, sp, #8
 801901e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019022:	4628      	mov	r0, r5
 8019024:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019028:	4643      	mov	r3, r8
 801902a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801902e:	4649      	mov	r1, r9
 8019030:	9600      	str	r6, [sp, #0]
 8019032:	f7ff fd89 	bl	8018b48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019036:	88a2      	ldrh	r2, [r4, #4]
 8019038:	8823      	ldrh	r3, [r4, #0]
 801903a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801903e:	4413      	add	r3, r2
 8019040:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019044:	440a      	add	r2, r1
 8019046:	b29b      	uxth	r3, r3
 8019048:	b292      	uxth	r2, r2
 801904a:	b218      	sxth	r0, r3
 801904c:	b211      	sxth	r1, r2
 801904e:	4288      	cmp	r0, r1
 8019050:	dd13      	ble.n	801907a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 8019052:	1a9b      	subs	r3, r3, r2
 8019054:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8019058:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801905c:	aa02      	add	r2, sp, #8
 801905e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8019062:	4649      	mov	r1, r9
 8019064:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019068:	4643      	mov	r3, r8
 801906a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801906e:	4628      	mov	r0, r5
 8019070:	9600      	str	r6, [sp, #0]
 8019072:	f8ad 701a 	strh.w	r7, [sp, #26]
 8019076:	f7ff fd67 	bl	8018b48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801907a:	88e2      	ldrh	r2, [r4, #6]
 801907c:	8863      	ldrh	r3, [r4, #2]
 801907e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8019082:	4413      	add	r3, r2
 8019084:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8019088:	440a      	add	r2, r1
 801908a:	b29b      	uxth	r3, r3
 801908c:	b292      	uxth	r2, r2
 801908e:	b218      	sxth	r0, r3
 8019090:	b211      	sxth	r1, r2
 8019092:	4288      	cmp	r0, r1
 8019094:	f77f aec8 	ble.w	8018e28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8019098:	f9b4 7000 	ldrsh.w	r7, [r4]
 801909c:	1a9b      	subs	r3, r3, r2
 801909e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80190a2:	f8ad 301e 	strh.w	r3, [sp, #30]
 80190a6:	4643      	mov	r3, r8
 80190a8:	f8ad 7018 	strh.w	r7, [sp, #24]
 80190ac:	f8ad 101a 	strh.w	r1, [sp, #26]
 80190b0:	f8ad 001c 	strh.w	r0, [sp, #28]
 80190b4:	9600      	str	r6, [sp, #0]
 80190b6:	e779      	b.n	8018fac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 80190b8:	20016c88 	.word	0x20016c88

080190bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80190bc:	b180      	cbz	r0, 80190e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80190be:	2903      	cmp	r1, #3
 80190c0:	d81c      	bhi.n	80190fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80190c2:	e8df f001 	tbb	[pc, r1]
 80190c6:	1d02      	.short	0x1d02
 80190c8:	1f08      	.short	0x1f08
 80190ca:	4b10      	ldr	r3, [pc, #64]	@ (801910c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80190cc:	8818      	ldrh	r0, [r3, #0]
 80190ce:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80190d2:	4240      	negs	r0, r0
 80190d4:	4770      	bx	lr
 80190d6:	4b0d      	ldr	r3, [pc, #52]	@ (801910c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80190d8:	8818      	ldrh	r0, [r3, #0]
 80190da:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80190de:	4770      	bx	lr
 80190e0:	2903      	cmp	r1, #3
 80190e2:	d80b      	bhi.n	80190fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80190e4:	a301      	add	r3, pc, #4	@ (adr r3, 80190ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80190e6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80190ea:	bf00      	nop
 80190ec:	08019101 	.word	0x08019101
 80190f0:	080190d7 	.word	0x080190d7
 80190f4:	08019105 	.word	0x08019105
 80190f8:	080190cb 	.word	0x080190cb
 80190fc:	2000      	movs	r0, #0
 80190fe:	4770      	bx	lr
 8019100:	2001      	movs	r0, #1
 8019102:	4770      	bx	lr
 8019104:	f04f 30ff 	mov.w	r0, #4294967295
 8019108:	4770      	bx	lr
 801910a:	bf00      	nop
 801910c:	20016c82 	.word	0x20016c82

08019110 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8019110:	b180      	cbz	r0, 8019134 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8019112:	2903      	cmp	r1, #3
 8019114:	d81c      	bhi.n	8019150 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8019116:	e8df f001 	tbb	[pc, r1]
 801911a:	021d      	.short	0x021d
 801911c:	071f      	.short	0x071f
 801911e:	4b10      	ldr	r3, [pc, #64]	@ (8019160 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8019120:	8818      	ldrh	r0, [r3, #0]
 8019122:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019126:	4770      	bx	lr
 8019128:	4b0d      	ldr	r3, [pc, #52]	@ (8019160 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801912a:	8818      	ldrh	r0, [r3, #0]
 801912c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019130:	4240      	negs	r0, r0
 8019132:	4770      	bx	lr
 8019134:	2903      	cmp	r1, #3
 8019136:	d80b      	bhi.n	8019150 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8019138:	a301      	add	r3, pc, #4	@ (adr r3, 8019140 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801913a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801913e:	bf00      	nop
 8019140:	0801911f 	.word	0x0801911f
 8019144:	08019159 	.word	0x08019159
 8019148:	08019129 	.word	0x08019129
 801914c:	08019155 	.word	0x08019155
 8019150:	2000      	movs	r0, #0
 8019152:	4770      	bx	lr
 8019154:	2001      	movs	r0, #1
 8019156:	4770      	bx	lr
 8019158:	f04f 30ff 	mov.w	r0, #4294967295
 801915c:	4770      	bx	lr
 801915e:	bf00      	nop
 8019160:	20016c82 	.word	0x20016c82

08019164 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8019164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019168:	b099      	sub	sp, #100	@ 0x64
 801916a:	910b      	str	r1, [sp, #44]	@ 0x2c
 801916c:	a914      	add	r1, sp, #80	@ 0x50
 801916e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8019172:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8019176:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801917a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801917e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8019182:	e881 000c 	stmia.w	r1, {r2, r3}
 8019186:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801918a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801918e:	9309      	str	r3, [sp, #36]	@ 0x24
 8019190:	f891 900d 	ldrb.w	r9, [r1, #13]
 8019194:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8019198:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801919c:	9310      	str	r3, [sp, #64]	@ 0x40
 801919e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 80191a2:	930c      	str	r3, [sp, #48]	@ 0x30
 80191a4:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 80191a8:	798f      	ldrb	r7, [r1, #6]
 80191aa:	431f      	orrs	r7, r3
 80191ac:	f000 8195 	beq.w	80194da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80191b0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80191b4:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 80191b8:	f891 9007 	ldrb.w	r9, [r1, #7]
 80191bc:	ea59 0903 	orrs.w	r9, r9, r3
 80191c0:	f000 818b 	beq.w	80194da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80191c4:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80191c8:	b29b      	uxth	r3, r3
 80191ca:	2d00      	cmp	r5, #0
 80191cc:	f000 812e 	beq.w	801942c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80191d0:	1aed      	subs	r5, r5, r3
 80191d2:	b2ad      	uxth	r5, r5
 80191d4:	042b      	lsls	r3, r5, #16
 80191d6:	d502      	bpl.n	80191de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80191d8:	1b64      	subs	r4, r4, r5
 80191da:	2500      	movs	r5, #0
 80191dc:	b224      	sxth	r4, r4
 80191de:	f9b2 1000 	ldrsh.w	r1, [r2]
 80191e2:	a814      	add	r0, sp, #80	@ 0x50
 80191e4:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 80191e8:	428c      	cmp	r4, r1
 80191ea:	b28b      	uxth	r3, r1
 80191ec:	bfbf      	itttt	lt
 80191ee:	18ed      	addlt	r5, r5, r3
 80191f0:	1b2c      	sublt	r4, r5, r4
 80191f2:	b2a5      	uxthlt	r5, r4
 80191f4:	460c      	movlt	r4, r1
 80191f6:	8891      	ldrh	r1, [r2, #4]
 80191f8:	440b      	add	r3, r1
 80191fa:	4621      	mov	r1, r4
 80191fc:	b21b      	sxth	r3, r3
 80191fe:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019200:	88d3      	ldrh	r3, [r2, #6]
 8019202:	8852      	ldrh	r2, [r2, #2]
 8019204:	4413      	add	r3, r2
 8019206:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019208:	b21b      	sxth	r3, r3
 801920a:	930d      	str	r3, [sp, #52]	@ 0x34
 801920c:	4bbd      	ldr	r3, [pc, #756]	@ (8019504 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801920e:	f893 b000 	ldrb.w	fp, [r3]
 8019212:	f10b 3cff 	add.w	ip, fp, #4294967295
 8019216:	f1dc 0300 	rsbs	r3, ip, #0
 801921a:	eb43 030c 	adc.w	r3, r3, ip
 801921e:	930e      	str	r3, [sp, #56]	@ 0x38
 8019220:	4653      	mov	r3, sl
 8019222:	f7f6 fff4 	bl	801020e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8019226:	4621      	mov	r1, r4
 8019228:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801922c:	4653      	mov	r3, sl
 801922e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019230:	a814      	add	r0, sp, #80	@ 0x50
 8019232:	f7f7 f809 	bl	8010248 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8019236:	a918      	add	r1, sp, #96	@ 0x60
 8019238:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801923c:	a817      	add	r0, sp, #92	@ 0x5c
 801923e:	f7f7 f92f 	bl	80104a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8019242:	f1ba 0f00 	cmp.w	sl, #0
 8019246:	f040 80f4 	bne.w	8019432 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801924a:	f1bb 0f01 	cmp.w	fp, #1
 801924e:	f040 80f8 	bne.w	8019442 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8019252:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019254:	2b00      	cmp	r3, #0
 8019256:	f040 8145 	bne.w	80194e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801925a:	b2ba      	uxth	r2, r7
 801925c:	b905      	cbnz	r5, 8019260 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801925e:	b16e      	cbz	r6, 801927c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8019260:	fb06 5302 	mla	r3, r6, r2, r5
 8019264:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8019266:	4631      	mov	r1, r6
 8019268:	fb08 f303 	mul.w	r3, r8, r3
 801926c:	f003 0607 	and.w	r6, r3, #7
 8019270:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8019274:	9328      	str	r3, [sp, #160]	@ 0xa0
 8019276:	eba9 0301 	sub.w	r3, r9, r1
 801927a:	930a      	str	r3, [sp, #40]	@ 0x28
 801927c:	4651      	mov	r1, sl
 801927e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8019280:	f7ff ff1c 	bl	80190bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8019284:	4681      	mov	r9, r0
 8019286:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8019288:	f7ff ff42 	bl	8019110 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801928c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801928e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019290:	4683      	mov	fp, r0
 8019292:	eba3 0a01 	sub.w	sl, r3, r1
 8019296:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019298:	459a      	cmp	sl, r3
 801929a:	bfa8      	it	ge
 801929c:	469a      	movge	sl, r3
 801929e:	f1ba 0f00 	cmp.w	sl, #0
 80192a2:	f340 811a 	ble.w	80194da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80192a6:	1b64      	subs	r4, r4, r5
 80192a8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80192aa:	1b1c      	subs	r4, r3, r4
 80192ac:	42bc      	cmp	r4, r7
 80192ae:	bfd4      	ite	le
 80192b0:	ebc5 0504 	rsble	r5, r5, r4
 80192b4:	ebc5 0507 	rsbgt	r5, r5, r7
 80192b8:	2d00      	cmp	r5, #0
 80192ba:	f340 810e 	ble.w	80194da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80192be:	1b52      	subs	r2, r2, r5
 80192c0:	fb08 f302 	mul.w	r3, r8, r2
 80192c4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80192c6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80192c8:	2b00      	cmp	r3, #0
 80192ca:	f040 8116 	bne.w	80194fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80192ce:	4b8e      	ldr	r3, [pc, #568]	@ (8019508 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80192d0:	6818      	ldr	r0, [r3, #0]
 80192d2:	6803      	ldr	r3, [r0, #0]
 80192d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80192d6:	4798      	blx	r3
 80192d8:	2301      	movs	r3, #1
 80192da:	4a8c      	ldr	r2, [pc, #560]	@ (801950c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80192dc:	fa03 f308 	lsl.w	r3, r3, r8
 80192e0:	8811      	ldrh	r1, [r2, #0]
 80192e2:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 80192e6:	3b01      	subs	r3, #1
 80192e8:	b2db      	uxtb	r3, r3
 80192ea:	930e      	str	r3, [sp, #56]	@ 0x38
 80192ec:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 80192f0:	fb01 2303 	mla	r3, r1, r3, r2
 80192f4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80192f8:	930a      	str	r3, [sp, #40]	@ 0x28
 80192fa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80192fc:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8019300:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019302:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019304:	0a19      	lsrs	r1, r3, #8
 8019306:	b2cb      	uxtb	r3, r1
 8019308:	9312      	str	r3, [sp, #72]	@ 0x48
 801930a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801930c:	b2db      	uxtb	r3, r3
 801930e:	9311      	str	r3, [sp, #68]	@ 0x44
 8019310:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019312:	095a      	lsrs	r2, r3, #5
 8019314:	4b7e      	ldr	r3, [pc, #504]	@ (8019510 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 8019316:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801931a:	400b      	ands	r3, r1
 801931c:	4313      	orrs	r3, r2
 801931e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8019320:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019324:	4313      	orrs	r3, r2
 8019326:	b29b      	uxth	r3, r3
 8019328:	9310      	str	r3, [sp, #64]	@ 0x40
 801932a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801932c:	781a      	ldrb	r2, [r3, #0]
 801932e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8019332:	fb05 b919 	mls	r9, r5, r9, fp
 8019336:	4132      	asrs	r2, r6
 8019338:	fb03 fb05 	mul.w	fp, r3, r5
 801933c:	930d      	str	r3, [sp, #52]	@ 0x34
 801933e:	b2d2      	uxtb	r2, r2
 8019340:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8019344:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8019348:	f0c0 80f5 	bcc.w	8019536 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801934c:	46ae      	mov	lr, r5
 801934e:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 8019352:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8019356:	f0c0 80dd 	bcc.w	8019514 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801935a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801935c:	4013      	ands	r3, r2
 801935e:	d055      	beq.n	801940c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8019360:	20ff      	movs	r0, #255	@ 0xff
 8019362:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8019364:	fb90 f1f1 	sdiv	r1, r0, r1
 8019368:	434b      	muls	r3, r1
 801936a:	2bfe      	cmp	r3, #254	@ 0xfe
 801936c:	dd03      	ble.n	8019376 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801936e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019370:	4281      	cmp	r1, r0
 8019372:	f000 80c4 	beq.w	80194fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 8019376:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019378:	f8bc 4000 	ldrh.w	r4, [ip]
 801937c:	fb11 f303 	smulbb	r3, r1, r3
 8019380:	1220      	asrs	r0, r4, #8
 8019382:	b29b      	uxth	r3, r3
 8019384:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019388:	1c59      	adds	r1, r3, #1
 801938a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801938e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019392:	10e1      	asrs	r1, r4, #3
 8019394:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019398:	00e4      	lsls	r4, r4, #3
 801939a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801939e:	b29f      	uxth	r7, r3
 80193a0:	43db      	mvns	r3, r3
 80193a2:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80193a6:	b2db      	uxtb	r3, r3
 80193a8:	b2e4      	uxtb	r4, r4
 80193aa:	9309      	str	r3, [sp, #36]	@ 0x24
 80193ac:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80193ae:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80193b2:	fb13 f907 	smulbb	r9, r3, r7
 80193b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80193b8:	fb00 9003 	mla	r0, r0, r3, r9
 80193bc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80193be:	fb13 f907 	smulbb	r9, r3, r7
 80193c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80193c4:	b280      	uxth	r0, r0
 80193c6:	fb01 9103 	mla	r1, r1, r3, r9
 80193ca:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80193cc:	fb13 f707 	smulbb	r7, r3, r7
 80193d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80193d2:	b289      	uxth	r1, r1
 80193d4:	fb04 7403 	mla	r4, r4, r3, r7
 80193d8:	1c43      	adds	r3, r0, #1
 80193da:	b2a4      	uxth	r4, r4
 80193dc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80193e0:	f104 0901 	add.w	r9, r4, #1
 80193e4:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80193e8:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80193ec:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80193f0:	ea49 0000 	orr.w	r0, r9, r0
 80193f4:	f101 0901 	add.w	r9, r1, #1
 80193f8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80193fc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019400:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019404:	ea40 0009 	orr.w	r0, r0, r9
 8019408:	f8ac 0000 	strh.w	r0, [ip]
 801940c:	4446      	add	r6, r8
 801940e:	b2b6      	uxth	r6, r6
 8019410:	2e07      	cmp	r6, #7
 8019412:	bf89      	itett	hi
 8019414:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 8019416:	fa42 f208 	asrls.w	r2, r2, r8
 801941a:	2600      	movhi	r6, #0
 801941c:	785a      	ldrbhi	r2, [r3, #1]
 801941e:	bf8a      	itet	hi
 8019420:	3301      	addhi	r3, #1
 8019422:	b2d2      	uxtbls	r2, r2
 8019424:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 8019426:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019428:	449c      	add	ip, r3
 801942a:	e792      	b.n	8019352 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801942c:	441c      	add	r4, r3
 801942e:	b224      	sxth	r4, r4
 8019430:	e6d5      	b.n	80191de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8019432:	f1ba 0f01 	cmp.w	sl, #1
 8019436:	f47f af0c 	bne.w	8019252 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801943a:	f1bb 0f01 	cmp.w	fp, #1
 801943e:	f47f af08 	bne.w	8019252 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019442:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 8019508 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 8019446:	f8db 0000 	ldr.w	r0, [fp]
 801944a:	6803      	ldr	r3, [r0, #0]
 801944c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801944e:	4798      	blx	r3
 8019450:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8019454:	465a      	mov	r2, fp
 8019456:	d006      	beq.n	8019466 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8019458:	f1b8 0f04 	cmp.w	r8, #4
 801945c:	d140      	bne.n	80194e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801945e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019460:	3300      	adds	r3, #0
 8019462:	bf18      	it	ne
 8019464:	2301      	movne	r3, #1
 8019466:	0580      	lsls	r0, r0, #22
 8019468:	d56e      	bpl.n	8019548 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801946a:	f1b8 0f08 	cmp.w	r8, #8
 801946e:	d16b      	bne.n	8019548 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8019470:	2b00      	cmp	r3, #0
 8019472:	bf0c      	ite	eq
 8019474:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 8019478:	f44f 7180 	movne.w	r1, #256	@ 0x100
 801947c:	2d00      	cmp	r5, #0
 801947e:	f47f aee8 	bne.w	8019252 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019482:	2e00      	cmp	r6, #0
 8019484:	f47f aee5 	bne.w	8019252 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019488:	19e3      	adds	r3, r4, r7
 801948a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801948c:	4283      	cmp	r3, r0
 801948e:	f73f aee0 	bgt.w	8019252 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019492:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019494:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8019496:	444b      	add	r3, r9
 8019498:	4283      	cmp	r3, r0
 801949a:	f73f aeda 	bgt.w	8019252 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801949e:	b2bf      	uxth	r7, r7
 80194a0:	f1b8 0f08 	cmp.w	r8, #8
 80194a4:	6810      	ldr	r0, [r2, #0]
 80194a6:	f04f 0500 	mov.w	r5, #0
 80194aa:	bf18      	it	ne
 80194ac:	3701      	addne	r7, #1
 80194ae:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 80194b2:	6804      	ldr	r4, [r0, #0]
 80194b4:	bf18      	it	ne
 80194b6:	f027 0701 	bicne.w	r7, r7, #1
 80194ba:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80194be:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80194c2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80194c4:	bf18      	it	ne
 80194c6:	b2bf      	uxthne	r7, r7
 80194c8:	9104      	str	r1, [sp, #16]
 80194ca:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80194cc:	e9cd 7900 	strd	r7, r9, [sp]
 80194d0:	e9cd 7102 	strd	r7, r1, [sp, #8]
 80194d4:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 80194d6:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 80194d8:	47a0      	blx	r4
 80194da:	b019      	add	sp, #100	@ 0x64
 80194dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80194e0:	2300      	movs	r3, #0
 80194e2:	e7c0      	b.n	8019466 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80194e4:	2208      	movs	r2, #8
 80194e6:	fb92 f3f8 	sdiv	r3, r2, r8
 80194ea:	1e5a      	subs	r2, r3, #1
 80194ec:	443a      	add	r2, r7
 80194ee:	fb92 f2f3 	sdiv	r2, r2, r3
 80194f2:	fb12 f203 	smulbb	r2, r2, r3
 80194f6:	b292      	uxth	r2, r2
 80194f8:	e6b0      	b.n	801925c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 80194fa:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80194fc:	e6ec      	b.n	80192d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 80194fe:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8019500:	e782      	b.n	8019408 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8019502:	bf00      	nop
 8019504:	20016c80 	.word	0x20016c80
 8019508:	20016c88 	.word	0x20016c88
 801950c:	20016c82 	.word	0x20016c82
 8019510:	00fff800 	.word	0x00fff800
 8019514:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019516:	b153      	cbz	r3, 801952e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8019518:	441e      	add	r6, r3
 801951a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801951c:	b2b6      	uxth	r6, r6
 801951e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8019522:	f006 0607 	and.w	r6, r6, #7
 8019526:	781a      	ldrb	r2, [r3, #0]
 8019528:	9328      	str	r3, [sp, #160]	@ 0xa0
 801952a:	4132      	asrs	r2, r6
 801952c:	b2d2      	uxtb	r2, r2
 801952e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019530:	445b      	add	r3, fp
 8019532:	930a      	str	r3, [sp, #40]	@ 0x28
 8019534:	e706      	b.n	8019344 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8019536:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019538:	2b00      	cmp	r3, #0
 801953a:	d1ce      	bne.n	80194da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801953c:	4b05      	ldr	r3, [pc, #20]	@ (8019554 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801953e:	6818      	ldr	r0, [r3, #0]
 8019540:	6803      	ldr	r3, [r0, #0]
 8019542:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019544:	4798      	blx	r3
 8019546:	e7c8      	b.n	80194da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019548:	2b00      	cmp	r3, #0
 801954a:	f43f ae82 	beq.w	8019252 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801954e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8019552:	e793      	b.n	801947c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8019554:	20016c88 	.word	0x20016c88

08019558 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8019558:	b538      	push	{r3, r4, r5, lr}
 801955a:	4c15      	ldr	r4, [pc, #84]	@ (80195b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801955c:	4605      	mov	r5, r0
 801955e:	7823      	ldrb	r3, [r4, #0]
 8019560:	f3bf 8f5b 	dmb	ish
 8019564:	07da      	lsls	r2, r3, #31
 8019566:	d40b      	bmi.n	8019580 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019568:	4620      	mov	r0, r4
 801956a:	f008 f9d1 	bl	8021910 <__cxa_guard_acquire>
 801956e:	b138      	cbz	r0, 8019580 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019570:	4620      	mov	r0, r4
 8019572:	f008 f9d9 	bl	8021928 <__cxa_guard_release>
 8019576:	4a0f      	ldr	r2, [pc, #60]	@ (80195b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019578:	490f      	ldr	r1, [pc, #60]	@ (80195b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801957a:	4810      	ldr	r0, [pc, #64]	@ (80195bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801957c:	f008 f9c1 	bl	8021902 <__aeabi_atexit>
 8019580:	4c0f      	ldr	r4, [pc, #60]	@ (80195c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8019582:	7823      	ldrb	r3, [r4, #0]
 8019584:	f3bf 8f5b 	dmb	ish
 8019588:	07db      	lsls	r3, r3, #31
 801958a:	d40b      	bmi.n	80195a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801958c:	4620      	mov	r0, r4
 801958e:	f008 f9bf 	bl	8021910 <__cxa_guard_acquire>
 8019592:	b138      	cbz	r0, 80195a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8019594:	4620      	mov	r0, r4
 8019596:	f008 f9c7 	bl	8021928 <__cxa_guard_release>
 801959a:	4a06      	ldr	r2, [pc, #24]	@ (80195b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801959c:	4909      	ldr	r1, [pc, #36]	@ (80195c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801959e:	480a      	ldr	r0, [pc, #40]	@ (80195c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80195a0:	f008 f9af 	bl	8021902 <__aeabi_atexit>
 80195a4:	4b05      	ldr	r3, [pc, #20]	@ (80195bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80195a6:	616b      	str	r3, [r5, #20]
 80195a8:	4b07      	ldr	r3, [pc, #28]	@ (80195c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80195aa:	61ab      	str	r3, [r5, #24]
 80195ac:	bd38      	pop	{r3, r4, r5, pc}
 80195ae:	bf00      	nop
 80195b0:	20016d68 	.word	0x20016d68
 80195b4:	20000000 	.word	0x20000000
 80195b8:	0801633b 	.word	0x0801633b
 80195bc:	20000090 	.word	0x20000090
 80195c0:	20016d6c 	.word	0x20016d6c
 80195c4:	08016339 	.word	0x08016339
 80195c8:	20000094 	.word	0x20000094

080195cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80195cc:	b538      	push	{r3, r4, r5, lr}
 80195ce:	4c15      	ldr	r4, [pc, #84]	@ (8019624 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80195d0:	4605      	mov	r5, r0
 80195d2:	7823      	ldrb	r3, [r4, #0]
 80195d4:	f3bf 8f5b 	dmb	ish
 80195d8:	07da      	lsls	r2, r3, #31
 80195da:	d40b      	bmi.n	80195f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80195dc:	4620      	mov	r0, r4
 80195de:	f008 f997 	bl	8021910 <__cxa_guard_acquire>
 80195e2:	b138      	cbz	r0, 80195f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80195e4:	4620      	mov	r0, r4
 80195e6:	f008 f99f 	bl	8021928 <__cxa_guard_release>
 80195ea:	4a0f      	ldr	r2, [pc, #60]	@ (8019628 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80195ec:	490f      	ldr	r1, [pc, #60]	@ (801962c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80195ee:	4810      	ldr	r0, [pc, #64]	@ (8019630 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80195f0:	f008 f987 	bl	8021902 <__aeabi_atexit>
 80195f4:	4c0f      	ldr	r4, [pc, #60]	@ (8019634 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80195f6:	7823      	ldrb	r3, [r4, #0]
 80195f8:	f3bf 8f5b 	dmb	ish
 80195fc:	07db      	lsls	r3, r3, #31
 80195fe:	d40b      	bmi.n	8019618 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019600:	4620      	mov	r0, r4
 8019602:	f008 f985 	bl	8021910 <__cxa_guard_acquire>
 8019606:	b138      	cbz	r0, 8019618 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019608:	4620      	mov	r0, r4
 801960a:	f008 f98d 	bl	8021928 <__cxa_guard_release>
 801960e:	4a06      	ldr	r2, [pc, #24]	@ (8019628 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019610:	4909      	ldr	r1, [pc, #36]	@ (8019638 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8019612:	480a      	ldr	r0, [pc, #40]	@ (801963c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019614:	f008 f975 	bl	8021902 <__aeabi_atexit>
 8019618:	4b05      	ldr	r3, [pc, #20]	@ (8019630 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801961a:	60eb      	str	r3, [r5, #12]
 801961c:	4b07      	ldr	r3, [pc, #28]	@ (801963c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801961e:	612b      	str	r3, [r5, #16]
 8019620:	bd38      	pop	{r3, r4, r5, pc}
 8019622:	bf00      	nop
 8019624:	20016d40 	.word	0x20016d40
 8019628:	20000000 	.word	0x20000000
 801962c:	0801633f 	.word	0x0801633f
 8019630:	20000068 	.word	0x20000068
 8019634:	20016d44 	.word	0x20016d44
 8019638:	0801633d 	.word	0x0801633d
 801963c:	2000006c 	.word	0x2000006c

08019640 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8019640:	b510      	push	{r4, lr}
 8019642:	4604      	mov	r4, r0
 8019644:	f7ff ff88 	bl	8019558 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8019648:	4620      	mov	r0, r4
 801964a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801964e:	f7ff bfbd 	b.w	80195cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08019654 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8019654:	b538      	push	{r3, r4, r5, lr}
 8019656:	4c15      	ldr	r4, [pc, #84]	@ (80196ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8019658:	4605      	mov	r5, r0
 801965a:	7823      	ldrb	r3, [r4, #0]
 801965c:	f3bf 8f5b 	dmb	ish
 8019660:	07da      	lsls	r2, r3, #31
 8019662:	d40b      	bmi.n	801967c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8019664:	4620      	mov	r0, r4
 8019666:	f008 f953 	bl	8021910 <__cxa_guard_acquire>
 801966a:	b138      	cbz	r0, 801967c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801966c:	4620      	mov	r0, r4
 801966e:	f008 f95b 	bl	8021928 <__cxa_guard_release>
 8019672:	4a0f      	ldr	r2, [pc, #60]	@ (80196b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019674:	490f      	ldr	r1, [pc, #60]	@ (80196b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8019676:	4810      	ldr	r0, [pc, #64]	@ (80196b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019678:	f008 f943 	bl	8021902 <__aeabi_atexit>
 801967c:	4c0f      	ldr	r4, [pc, #60]	@ (80196bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801967e:	7823      	ldrb	r3, [r4, #0]
 8019680:	f3bf 8f5b 	dmb	ish
 8019684:	07db      	lsls	r3, r3, #31
 8019686:	d40b      	bmi.n	80196a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019688:	4620      	mov	r0, r4
 801968a:	f008 f941 	bl	8021910 <__cxa_guard_acquire>
 801968e:	b138      	cbz	r0, 80196a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019690:	4620      	mov	r0, r4
 8019692:	f008 f949 	bl	8021928 <__cxa_guard_release>
 8019696:	4a06      	ldr	r2, [pc, #24]	@ (80196b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019698:	4909      	ldr	r1, [pc, #36]	@ (80196c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801969a:	480a      	ldr	r0, [pc, #40]	@ (80196c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801969c:	f008 f931 	bl	8021902 <__aeabi_atexit>
 80196a0:	4b05      	ldr	r3, [pc, #20]	@ (80196b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80196a2:	626b      	str	r3, [r5, #36]	@ 0x24
 80196a4:	4b07      	ldr	r3, [pc, #28]	@ (80196c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80196a6:	62ab      	str	r3, [r5, #40]	@ 0x28
 80196a8:	bd38      	pop	{r3, r4, r5, pc}
 80196aa:	bf00      	nop
 80196ac:	20016d70 	.word	0x20016d70
 80196b0:	20000000 	.word	0x20000000
 80196b4:	08016333 	.word	0x08016333
 80196b8:	20000098 	.word	0x20000098
 80196bc:	20016d74 	.word	0x20016d74
 80196c0:	08016331 	.word	0x08016331
 80196c4:	2000009c 	.word	0x2000009c

080196c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80196c8:	b538      	push	{r3, r4, r5, lr}
 80196ca:	4c15      	ldr	r4, [pc, #84]	@ (8019720 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80196cc:	4605      	mov	r5, r0
 80196ce:	7823      	ldrb	r3, [r4, #0]
 80196d0:	f3bf 8f5b 	dmb	ish
 80196d4:	07da      	lsls	r2, r3, #31
 80196d6:	d40b      	bmi.n	80196f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80196d8:	4620      	mov	r0, r4
 80196da:	f008 f919 	bl	8021910 <__cxa_guard_acquire>
 80196de:	b138      	cbz	r0, 80196f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80196e0:	4620      	mov	r0, r4
 80196e2:	f008 f921 	bl	8021928 <__cxa_guard_release>
 80196e6:	4a0f      	ldr	r2, [pc, #60]	@ (8019724 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80196e8:	490f      	ldr	r1, [pc, #60]	@ (8019728 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80196ea:	4810      	ldr	r0, [pc, #64]	@ (801972c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80196ec:	f008 f909 	bl	8021902 <__aeabi_atexit>
 80196f0:	4c0f      	ldr	r4, [pc, #60]	@ (8019730 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80196f2:	7823      	ldrb	r3, [r4, #0]
 80196f4:	f3bf 8f5b 	dmb	ish
 80196f8:	07db      	lsls	r3, r3, #31
 80196fa:	d40b      	bmi.n	8019714 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80196fc:	4620      	mov	r0, r4
 80196fe:	f008 f907 	bl	8021910 <__cxa_guard_acquire>
 8019702:	b138      	cbz	r0, 8019714 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019704:	4620      	mov	r0, r4
 8019706:	f008 f90f 	bl	8021928 <__cxa_guard_release>
 801970a:	4a06      	ldr	r2, [pc, #24]	@ (8019724 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801970c:	4909      	ldr	r1, [pc, #36]	@ (8019734 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801970e:	480a      	ldr	r0, [pc, #40]	@ (8019738 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019710:	f008 f8f7 	bl	8021902 <__aeabi_atexit>
 8019714:	4b05      	ldr	r3, [pc, #20]	@ (801972c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019716:	61eb      	str	r3, [r5, #28]
 8019718:	4b07      	ldr	r3, [pc, #28]	@ (8019738 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801971a:	622b      	str	r3, [r5, #32]
 801971c:	bd38      	pop	{r3, r4, r5, pc}
 801971e:	bf00      	nop
 8019720:	20016d48 	.word	0x20016d48
 8019724:	20000000 	.word	0x20000000
 8019728:	08016337 	.word	0x08016337
 801972c:	20000070 	.word	0x20000070
 8019730:	20016d4c 	.word	0x20016d4c
 8019734:	08016335 	.word	0x08016335
 8019738:	20000074 	.word	0x20000074

0801973c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801973c:	b510      	push	{r4, lr}
 801973e:	4604      	mov	r4, r0
 8019740:	f7ff ff88 	bl	8019654 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8019744:	4620      	mov	r0, r4
 8019746:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801974a:	f7ff bfbd 	b.w	80196c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08019750 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8019750:	b538      	push	{r3, r4, r5, lr}
 8019752:	4c15      	ldr	r4, [pc, #84]	@ (80197a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8019754:	4605      	mov	r5, r0
 8019756:	7823      	ldrb	r3, [r4, #0]
 8019758:	f3bf 8f5b 	dmb	ish
 801975c:	07da      	lsls	r2, r3, #31
 801975e:	d40b      	bmi.n	8019778 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019760:	4620      	mov	r0, r4
 8019762:	f008 f8d5 	bl	8021910 <__cxa_guard_acquire>
 8019766:	b138      	cbz	r0, 8019778 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019768:	4620      	mov	r0, r4
 801976a:	f008 f8dd 	bl	8021928 <__cxa_guard_release>
 801976e:	4a0f      	ldr	r2, [pc, #60]	@ (80197ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019770:	490f      	ldr	r1, [pc, #60]	@ (80197b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8019772:	4810      	ldr	r0, [pc, #64]	@ (80197b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019774:	f008 f8c5 	bl	8021902 <__aeabi_atexit>
 8019778:	4c0f      	ldr	r4, [pc, #60]	@ (80197b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801977a:	7823      	ldrb	r3, [r4, #0]
 801977c:	f3bf 8f5b 	dmb	ish
 8019780:	07db      	lsls	r3, r3, #31
 8019782:	d40b      	bmi.n	801979c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019784:	4620      	mov	r0, r4
 8019786:	f008 f8c3 	bl	8021910 <__cxa_guard_acquire>
 801978a:	b138      	cbz	r0, 801979c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801978c:	4620      	mov	r0, r4
 801978e:	f008 f8cb 	bl	8021928 <__cxa_guard_release>
 8019792:	4a06      	ldr	r2, [pc, #24]	@ (80197ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019794:	4909      	ldr	r1, [pc, #36]	@ (80197bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8019796:	480a      	ldr	r0, [pc, #40]	@ (80197c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019798:	f008 f8b3 	bl	8021902 <__aeabi_atexit>
 801979c:	4b05      	ldr	r3, [pc, #20]	@ (80197b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801979e:	636b      	str	r3, [r5, #52]	@ 0x34
 80197a0:	4b07      	ldr	r3, [pc, #28]	@ (80197c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80197a2:	63ab      	str	r3, [r5, #56]	@ 0x38
 80197a4:	bd38      	pop	{r3, r4, r5, pc}
 80197a6:	bf00      	nop
 80197a8:	20016d80 	.word	0x20016d80
 80197ac:	20000000 	.word	0x20000000
 80197b0:	0801632b 	.word	0x0801632b
 80197b4:	200000a8 	.word	0x200000a8
 80197b8:	20016d84 	.word	0x20016d84
 80197bc:	08016329 	.word	0x08016329
 80197c0:	200000ac 	.word	0x200000ac

080197c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80197c4:	b538      	push	{r3, r4, r5, lr}
 80197c6:	4c15      	ldr	r4, [pc, #84]	@ (801981c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80197c8:	4605      	mov	r5, r0
 80197ca:	7823      	ldrb	r3, [r4, #0]
 80197cc:	f3bf 8f5b 	dmb	ish
 80197d0:	07da      	lsls	r2, r3, #31
 80197d2:	d40b      	bmi.n	80197ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80197d4:	4620      	mov	r0, r4
 80197d6:	f008 f89b 	bl	8021910 <__cxa_guard_acquire>
 80197da:	b138      	cbz	r0, 80197ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80197dc:	4620      	mov	r0, r4
 80197de:	f008 f8a3 	bl	8021928 <__cxa_guard_release>
 80197e2:	4a0f      	ldr	r2, [pc, #60]	@ (8019820 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80197e4:	490f      	ldr	r1, [pc, #60]	@ (8019824 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80197e6:	4810      	ldr	r0, [pc, #64]	@ (8019828 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80197e8:	f008 f88b 	bl	8021902 <__aeabi_atexit>
 80197ec:	4c0f      	ldr	r4, [pc, #60]	@ (801982c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80197ee:	7823      	ldrb	r3, [r4, #0]
 80197f0:	f3bf 8f5b 	dmb	ish
 80197f4:	07db      	lsls	r3, r3, #31
 80197f6:	d40b      	bmi.n	8019810 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80197f8:	4620      	mov	r0, r4
 80197fa:	f008 f889 	bl	8021910 <__cxa_guard_acquire>
 80197fe:	b138      	cbz	r0, 8019810 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019800:	4620      	mov	r0, r4
 8019802:	f008 f891 	bl	8021928 <__cxa_guard_release>
 8019806:	4a06      	ldr	r2, [pc, #24]	@ (8019820 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019808:	4909      	ldr	r1, [pc, #36]	@ (8019830 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801980a:	480a      	ldr	r0, [pc, #40]	@ (8019834 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801980c:	f008 f879 	bl	8021902 <__aeabi_atexit>
 8019810:	4b05      	ldr	r3, [pc, #20]	@ (8019828 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019812:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8019814:	4b07      	ldr	r3, [pc, #28]	@ (8019834 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019816:	632b      	str	r3, [r5, #48]	@ 0x30
 8019818:	bd38      	pop	{r3, r4, r5, pc}
 801981a:	bf00      	nop
 801981c:	20016d50 	.word	0x20016d50
 8019820:	20000000 	.word	0x20000000
 8019824:	0801632f 	.word	0x0801632f
 8019828:	20000078 	.word	0x20000078
 801982c:	20016d54 	.word	0x20016d54
 8019830:	0801632d 	.word	0x0801632d
 8019834:	2000007c 	.word	0x2000007c

08019838 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8019838:	b510      	push	{r4, lr}
 801983a:	4604      	mov	r4, r0
 801983c:	f7ff ff88 	bl	8019750 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8019840:	4620      	mov	r0, r4
 8019842:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019846:	f7ff bfbd 	b.w	80197c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801984c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801984c:	b538      	push	{r3, r4, r5, lr}
 801984e:	4c15      	ldr	r4, [pc, #84]	@ (80198a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8019850:	4605      	mov	r5, r0
 8019852:	7823      	ldrb	r3, [r4, #0]
 8019854:	f3bf 8f5b 	dmb	ish
 8019858:	07da      	lsls	r2, r3, #31
 801985a:	d40b      	bmi.n	8019874 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801985c:	4620      	mov	r0, r4
 801985e:	f008 f857 	bl	8021910 <__cxa_guard_acquire>
 8019862:	b138      	cbz	r0, 8019874 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019864:	4620      	mov	r0, r4
 8019866:	f008 f85f 	bl	8021928 <__cxa_guard_release>
 801986a:	4a0f      	ldr	r2, [pc, #60]	@ (80198a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801986c:	490f      	ldr	r1, [pc, #60]	@ (80198ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801986e:	4810      	ldr	r0, [pc, #64]	@ (80198b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019870:	f008 f847 	bl	8021902 <__aeabi_atexit>
 8019874:	4c0f      	ldr	r4, [pc, #60]	@ (80198b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8019876:	7823      	ldrb	r3, [r4, #0]
 8019878:	f3bf 8f5b 	dmb	ish
 801987c:	07db      	lsls	r3, r3, #31
 801987e:	d40b      	bmi.n	8019898 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019880:	4620      	mov	r0, r4
 8019882:	f008 f845 	bl	8021910 <__cxa_guard_acquire>
 8019886:	b138      	cbz	r0, 8019898 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019888:	4620      	mov	r0, r4
 801988a:	f008 f84d 	bl	8021928 <__cxa_guard_release>
 801988e:	4a06      	ldr	r2, [pc, #24]	@ (80198a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019890:	4909      	ldr	r1, [pc, #36]	@ (80198b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8019892:	480a      	ldr	r0, [pc, #40]	@ (80198bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019894:	f008 f835 	bl	8021902 <__aeabi_atexit>
 8019898:	4b05      	ldr	r3, [pc, #20]	@ (80198b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801989a:	656b      	str	r3, [r5, #84]	@ 0x54
 801989c:	4b07      	ldr	r3, [pc, #28]	@ (80198bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801989e:	65ab      	str	r3, [r5, #88]	@ 0x58
 80198a0:	bd38      	pop	{r3, r4, r5, pc}
 80198a2:	bf00      	nop
 80198a4:	20016d88 	.word	0x20016d88
 80198a8:	20000000 	.word	0x20000000
 80198ac:	0801631b 	.word	0x0801631b
 80198b0:	200000b0 	.word	0x200000b0
 80198b4:	20016d8c 	.word	0x20016d8c
 80198b8:	08016319 	.word	0x08016319
 80198bc:	200000b4 	.word	0x200000b4

080198c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80198c0:	b538      	push	{r3, r4, r5, lr}
 80198c2:	4c15      	ldr	r4, [pc, #84]	@ (8019918 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80198c4:	4605      	mov	r5, r0
 80198c6:	7823      	ldrb	r3, [r4, #0]
 80198c8:	f3bf 8f5b 	dmb	ish
 80198cc:	07da      	lsls	r2, r3, #31
 80198ce:	d40b      	bmi.n	80198e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80198d0:	4620      	mov	r0, r4
 80198d2:	f008 f81d 	bl	8021910 <__cxa_guard_acquire>
 80198d6:	b138      	cbz	r0, 80198e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80198d8:	4620      	mov	r0, r4
 80198da:	f008 f825 	bl	8021928 <__cxa_guard_release>
 80198de:	4a0f      	ldr	r2, [pc, #60]	@ (801991c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80198e0:	490f      	ldr	r1, [pc, #60]	@ (8019920 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80198e2:	4810      	ldr	r0, [pc, #64]	@ (8019924 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80198e4:	f008 f80d 	bl	8021902 <__aeabi_atexit>
 80198e8:	4c0f      	ldr	r4, [pc, #60]	@ (8019928 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80198ea:	7823      	ldrb	r3, [r4, #0]
 80198ec:	f3bf 8f5b 	dmb	ish
 80198f0:	07db      	lsls	r3, r3, #31
 80198f2:	d40b      	bmi.n	801990c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80198f4:	4620      	mov	r0, r4
 80198f6:	f008 f80b 	bl	8021910 <__cxa_guard_acquire>
 80198fa:	b138      	cbz	r0, 801990c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80198fc:	4620      	mov	r0, r4
 80198fe:	f008 f813 	bl	8021928 <__cxa_guard_release>
 8019902:	4a06      	ldr	r2, [pc, #24]	@ (801991c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019904:	4909      	ldr	r1, [pc, #36]	@ (801992c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8019906:	480a      	ldr	r0, [pc, #40]	@ (8019930 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019908:	f007 fffb 	bl	8021902 <__aeabi_atexit>
 801990c:	4b05      	ldr	r3, [pc, #20]	@ (8019924 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801990e:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8019910:	4b07      	ldr	r3, [pc, #28]	@ (8019930 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019912:	652b      	str	r3, [r5, #80]	@ 0x50
 8019914:	bd38      	pop	{r3, r4, r5, pc}
 8019916:	bf00      	nop
 8019918:	20016d90 	.word	0x20016d90
 801991c:	20000000 	.word	0x20000000
 8019920:	0801631f 	.word	0x0801631f
 8019924:	200000b8 	.word	0x200000b8
 8019928:	20016d94 	.word	0x20016d94
 801992c:	0801631d 	.word	0x0801631d
 8019930:	200000bc 	.word	0x200000bc

08019934 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8019934:	b538      	push	{r3, r4, r5, lr}
 8019936:	4c15      	ldr	r4, [pc, #84]	@ (801998c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019938:	4605      	mov	r5, r0
 801993a:	7823      	ldrb	r3, [r4, #0]
 801993c:	f3bf 8f5b 	dmb	ish
 8019940:	07da      	lsls	r2, r3, #31
 8019942:	d40b      	bmi.n	801995c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019944:	4620      	mov	r0, r4
 8019946:	f007 ffe3 	bl	8021910 <__cxa_guard_acquire>
 801994a:	b138      	cbz	r0, 801995c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801994c:	4620      	mov	r0, r4
 801994e:	f007 ffeb 	bl	8021928 <__cxa_guard_release>
 8019952:	4a0f      	ldr	r2, [pc, #60]	@ (8019990 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019954:	490f      	ldr	r1, [pc, #60]	@ (8019994 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8019956:	4810      	ldr	r0, [pc, #64]	@ (8019998 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019958:	f007 ffd3 	bl	8021902 <__aeabi_atexit>
 801995c:	4c0f      	ldr	r4, [pc, #60]	@ (801999c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801995e:	7823      	ldrb	r3, [r4, #0]
 8019960:	f3bf 8f5b 	dmb	ish
 8019964:	07db      	lsls	r3, r3, #31
 8019966:	d40b      	bmi.n	8019980 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019968:	4620      	mov	r0, r4
 801996a:	f007 ffd1 	bl	8021910 <__cxa_guard_acquire>
 801996e:	b138      	cbz	r0, 8019980 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019970:	4620      	mov	r0, r4
 8019972:	f007 ffd9 	bl	8021928 <__cxa_guard_release>
 8019976:	4a06      	ldr	r2, [pc, #24]	@ (8019990 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019978:	4909      	ldr	r1, [pc, #36]	@ (80199a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801997a:	480a      	ldr	r0, [pc, #40]	@ (80199a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801997c:	f007 ffc1 	bl	8021902 <__aeabi_atexit>
 8019980:	4b05      	ldr	r3, [pc, #20]	@ (8019998 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019982:	646b      	str	r3, [r5, #68]	@ 0x44
 8019984:	4b07      	ldr	r3, [pc, #28]	@ (80199a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019986:	64ab      	str	r3, [r5, #72]	@ 0x48
 8019988:	bd38      	pop	{r3, r4, r5, pc}
 801998a:	bf00      	nop
 801998c:	20016d58 	.word	0x20016d58
 8019990:	20000000 	.word	0x20000000
 8019994:	08016323 	.word	0x08016323
 8019998:	20000080 	.word	0x20000080
 801999c:	20016d5c 	.word	0x20016d5c
 80199a0:	08016321 	.word	0x08016321
 80199a4:	20000084 	.word	0x20000084

080199a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80199a8:	b538      	push	{r3, r4, r5, lr}
 80199aa:	4c15      	ldr	r4, [pc, #84]	@ (8019a00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80199ac:	4605      	mov	r5, r0
 80199ae:	7823      	ldrb	r3, [r4, #0]
 80199b0:	f3bf 8f5b 	dmb	ish
 80199b4:	07da      	lsls	r2, r3, #31
 80199b6:	d40b      	bmi.n	80199d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80199b8:	4620      	mov	r0, r4
 80199ba:	f007 ffa9 	bl	8021910 <__cxa_guard_acquire>
 80199be:	b138      	cbz	r0, 80199d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80199c0:	4620      	mov	r0, r4
 80199c2:	f007 ffb1 	bl	8021928 <__cxa_guard_release>
 80199c6:	4a0f      	ldr	r2, [pc, #60]	@ (8019a04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80199c8:	490f      	ldr	r1, [pc, #60]	@ (8019a08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80199ca:	4810      	ldr	r0, [pc, #64]	@ (8019a0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80199cc:	f007 ff99 	bl	8021902 <__aeabi_atexit>
 80199d0:	4c0f      	ldr	r4, [pc, #60]	@ (8019a10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80199d2:	7823      	ldrb	r3, [r4, #0]
 80199d4:	f3bf 8f5b 	dmb	ish
 80199d8:	07db      	lsls	r3, r3, #31
 80199da:	d40b      	bmi.n	80199f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80199dc:	4620      	mov	r0, r4
 80199de:	f007 ff97 	bl	8021910 <__cxa_guard_acquire>
 80199e2:	b138      	cbz	r0, 80199f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80199e4:	4620      	mov	r0, r4
 80199e6:	f007 ff9f 	bl	8021928 <__cxa_guard_release>
 80199ea:	4a06      	ldr	r2, [pc, #24]	@ (8019a04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80199ec:	4909      	ldr	r1, [pc, #36]	@ (8019a14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80199ee:	480a      	ldr	r0, [pc, #40]	@ (8019a18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80199f0:	f007 ff87 	bl	8021902 <__aeabi_atexit>
 80199f4:	4b05      	ldr	r3, [pc, #20]	@ (8019a0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80199f6:	63eb      	str	r3, [r5, #60]	@ 0x3c
 80199f8:	4b07      	ldr	r3, [pc, #28]	@ (8019a18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80199fa:	642b      	str	r3, [r5, #64]	@ 0x40
 80199fc:	bd38      	pop	{r3, r4, r5, pc}
 80199fe:	bf00      	nop
 8019a00:	20016d78 	.word	0x20016d78
 8019a04:	20000000 	.word	0x20000000
 8019a08:	08016327 	.word	0x08016327
 8019a0c:	200000a0 	.word	0x200000a0
 8019a10:	20016d7c 	.word	0x20016d7c
 8019a14:	08016325 	.word	0x08016325
 8019a18:	200000a4 	.word	0x200000a4

08019a1c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019a1c:	b510      	push	{r4, lr}
 8019a1e:	4604      	mov	r4, r0
 8019a20:	f7ff ff14 	bl	801984c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8019a24:	4620      	mov	r0, r4
 8019a26:	f7ff ff85 	bl	8019934 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8019a2a:	4620      	mov	r0, r4
 8019a2c:	f7ff ff48 	bl	80198c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8019a30:	4620      	mov	r0, r4
 8019a32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019a36:	f7ff bfb7 	b.w	80199a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08019a3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8019a3c:	b538      	push	{r3, r4, r5, lr}
 8019a3e:	4c15      	ldr	r4, [pc, #84]	@ (8019a94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8019a40:	4605      	mov	r5, r0
 8019a42:	7823      	ldrb	r3, [r4, #0]
 8019a44:	f3bf 8f5b 	dmb	ish
 8019a48:	07da      	lsls	r2, r3, #31
 8019a4a:	d40b      	bmi.n	8019a64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019a4c:	4620      	mov	r0, r4
 8019a4e:	f007 ff5f 	bl	8021910 <__cxa_guard_acquire>
 8019a52:	b138      	cbz	r0, 8019a64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019a54:	4620      	mov	r0, r4
 8019a56:	f007 ff67 	bl	8021928 <__cxa_guard_release>
 8019a5a:	4a0f      	ldr	r2, [pc, #60]	@ (8019a98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019a5c:	490f      	ldr	r1, [pc, #60]	@ (8019a9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8019a5e:	4810      	ldr	r0, [pc, #64]	@ (8019aa0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019a60:	f007 ff4f 	bl	8021902 <__aeabi_atexit>
 8019a64:	4c0f      	ldr	r4, [pc, #60]	@ (8019aa4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8019a66:	7823      	ldrb	r3, [r4, #0]
 8019a68:	f3bf 8f5b 	dmb	ish
 8019a6c:	07db      	lsls	r3, r3, #31
 8019a6e:	d40b      	bmi.n	8019a88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019a70:	4620      	mov	r0, r4
 8019a72:	f007 ff4d 	bl	8021910 <__cxa_guard_acquire>
 8019a76:	b138      	cbz	r0, 8019a88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019a78:	4620      	mov	r0, r4
 8019a7a:	f007 ff55 	bl	8021928 <__cxa_guard_release>
 8019a7e:	4a06      	ldr	r2, [pc, #24]	@ (8019a98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019a80:	4909      	ldr	r1, [pc, #36]	@ (8019aa8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8019a82:	480a      	ldr	r0, [pc, #40]	@ (8019aac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019a84:	f007 ff3d 	bl	8021902 <__aeabi_atexit>
 8019a88:	4b05      	ldr	r3, [pc, #20]	@ (8019aa0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019a8a:	666b      	str	r3, [r5, #100]	@ 0x64
 8019a8c:	4b07      	ldr	r3, [pc, #28]	@ (8019aac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019a8e:	66ab      	str	r3, [r5, #104]	@ 0x68
 8019a90:	bd38      	pop	{r3, r4, r5, pc}
 8019a92:	bf00      	nop
 8019a94:	20016d60 	.word	0x20016d60
 8019a98:	20000000 	.word	0x20000000
 8019a9c:	08016313 	.word	0x08016313
 8019aa0:	20000088 	.word	0x20000088
 8019aa4:	20016d64 	.word	0x20016d64
 8019aa8:	08016311 	.word	0x08016311
 8019aac:	2000008c 	.word	0x2000008c

08019ab0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8019ab0:	b538      	push	{r3, r4, r5, lr}
 8019ab2:	4c15      	ldr	r4, [pc, #84]	@ (8019b08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8019ab4:	4605      	mov	r5, r0
 8019ab6:	7823      	ldrb	r3, [r4, #0]
 8019ab8:	f3bf 8f5b 	dmb	ish
 8019abc:	07da      	lsls	r2, r3, #31
 8019abe:	d40b      	bmi.n	8019ad8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019ac0:	4620      	mov	r0, r4
 8019ac2:	f007 ff25 	bl	8021910 <__cxa_guard_acquire>
 8019ac6:	b138      	cbz	r0, 8019ad8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019ac8:	4620      	mov	r0, r4
 8019aca:	f007 ff2d 	bl	8021928 <__cxa_guard_release>
 8019ace:	4a0f      	ldr	r2, [pc, #60]	@ (8019b0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019ad0:	490f      	ldr	r1, [pc, #60]	@ (8019b10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8019ad2:	4810      	ldr	r0, [pc, #64]	@ (8019b14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019ad4:	f007 ff15 	bl	8021902 <__aeabi_atexit>
 8019ad8:	4c0f      	ldr	r4, [pc, #60]	@ (8019b18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019ada:	7823      	ldrb	r3, [r4, #0]
 8019adc:	f3bf 8f5b 	dmb	ish
 8019ae0:	07db      	lsls	r3, r3, #31
 8019ae2:	d40b      	bmi.n	8019afc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019ae4:	4620      	mov	r0, r4
 8019ae6:	f007 ff13 	bl	8021910 <__cxa_guard_acquire>
 8019aea:	b138      	cbz	r0, 8019afc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019aec:	4620      	mov	r0, r4
 8019aee:	f007 ff1b 	bl	8021928 <__cxa_guard_release>
 8019af2:	4a06      	ldr	r2, [pc, #24]	@ (8019b0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019af4:	4909      	ldr	r1, [pc, #36]	@ (8019b1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8019af6:	480a      	ldr	r0, [pc, #40]	@ (8019b20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019af8:	f007 ff03 	bl	8021902 <__aeabi_atexit>
 8019afc:	4b05      	ldr	r3, [pc, #20]	@ (8019b14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019afe:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8019b00:	4b07      	ldr	r3, [pc, #28]	@ (8019b20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019b02:	662b      	str	r3, [r5, #96]	@ 0x60
 8019b04:	bd38      	pop	{r3, r4, r5, pc}
 8019b06:	bf00      	nop
 8019b08:	20016d38 	.word	0x20016d38
 8019b0c:	20000000 	.word	0x20000000
 8019b10:	08016317 	.word	0x08016317
 8019b14:	20000060 	.word	0x20000060
 8019b18:	20016d3c 	.word	0x20016d3c
 8019b1c:	08016315 	.word	0x08016315
 8019b20:	20000064 	.word	0x20000064

08019b24 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8019b24:	b510      	push	{r4, lr}
 8019b26:	4604      	mov	r4, r0
 8019b28:	f7ff ff88 	bl	8019a3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019b2c:	4620      	mov	r0, r4
 8019b2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019b32:	f7ff bfbd 	b.w	8019ab0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08019b38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8019b38:	b538      	push	{r3, r4, r5, lr}
 8019b3a:	4c15      	ldr	r4, [pc, #84]	@ (8019b90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019b3c:	4605      	mov	r5, r0
 8019b3e:	7823      	ldrb	r3, [r4, #0]
 8019b40:	f3bf 8f5b 	dmb	ish
 8019b44:	07da      	lsls	r2, r3, #31
 8019b46:	d40b      	bmi.n	8019b60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019b48:	4620      	mov	r0, r4
 8019b4a:	f007 fee1 	bl	8021910 <__cxa_guard_acquire>
 8019b4e:	b138      	cbz	r0, 8019b60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019b50:	4620      	mov	r0, r4
 8019b52:	f007 fee9 	bl	8021928 <__cxa_guard_release>
 8019b56:	4a0f      	ldr	r2, [pc, #60]	@ (8019b94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019b58:	490f      	ldr	r1, [pc, #60]	@ (8019b98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8019b5a:	4810      	ldr	r0, [pc, #64]	@ (8019b9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019b5c:	f007 fed1 	bl	8021902 <__aeabi_atexit>
 8019b60:	4c0f      	ldr	r4, [pc, #60]	@ (8019ba0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8019b62:	7823      	ldrb	r3, [r4, #0]
 8019b64:	f3bf 8f5b 	dmb	ish
 8019b68:	07db      	lsls	r3, r3, #31
 8019b6a:	d40b      	bmi.n	8019b84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019b6c:	4620      	mov	r0, r4
 8019b6e:	f007 fecf 	bl	8021910 <__cxa_guard_acquire>
 8019b72:	b138      	cbz	r0, 8019b84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019b74:	4620      	mov	r0, r4
 8019b76:	f007 fed7 	bl	8021928 <__cxa_guard_release>
 8019b7a:	4a06      	ldr	r2, [pc, #24]	@ (8019b94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019b7c:	4909      	ldr	r1, [pc, #36]	@ (8019ba4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8019b7e:	480a      	ldr	r0, [pc, #40]	@ (8019ba8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019b80:	f007 febf 	bl	8021902 <__aeabi_atexit>
 8019b84:	4b05      	ldr	r3, [pc, #20]	@ (8019b9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019b86:	676b      	str	r3, [r5, #116]	@ 0x74
 8019b88:	4b07      	ldr	r3, [pc, #28]	@ (8019ba8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019b8a:	67ab      	str	r3, [r5, #120]	@ 0x78
 8019b8c:	bd38      	pop	{r3, r4, r5, pc}
 8019b8e:	bf00      	nop
 8019b90:	20016d30 	.word	0x20016d30
 8019b94:	20000000 	.word	0x20000000
 8019b98:	0801630b 	.word	0x0801630b
 8019b9c:	20000058 	.word	0x20000058
 8019ba0:	20016d34 	.word	0x20016d34
 8019ba4:	08016309 	.word	0x08016309
 8019ba8:	2000005c 	.word	0x2000005c

08019bac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019bac:	b538      	push	{r3, r4, r5, lr}
 8019bae:	4c15      	ldr	r4, [pc, #84]	@ (8019c04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019bb0:	4605      	mov	r5, r0
 8019bb2:	7823      	ldrb	r3, [r4, #0]
 8019bb4:	f3bf 8f5b 	dmb	ish
 8019bb8:	07da      	lsls	r2, r3, #31
 8019bba:	d40b      	bmi.n	8019bd4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019bbc:	4620      	mov	r0, r4
 8019bbe:	f007 fea7 	bl	8021910 <__cxa_guard_acquire>
 8019bc2:	b138      	cbz	r0, 8019bd4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019bc4:	4620      	mov	r0, r4
 8019bc6:	f007 feaf 	bl	8021928 <__cxa_guard_release>
 8019bca:	4a0f      	ldr	r2, [pc, #60]	@ (8019c08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019bcc:	490f      	ldr	r1, [pc, #60]	@ (8019c0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019bce:	4810      	ldr	r0, [pc, #64]	@ (8019c10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019bd0:	f007 fe97 	bl	8021902 <__aeabi_atexit>
 8019bd4:	4c0f      	ldr	r4, [pc, #60]	@ (8019c14 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8019bd6:	7823      	ldrb	r3, [r4, #0]
 8019bd8:	f3bf 8f5b 	dmb	ish
 8019bdc:	07db      	lsls	r3, r3, #31
 8019bde:	d40b      	bmi.n	8019bf8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019be0:	4620      	mov	r0, r4
 8019be2:	f007 fe95 	bl	8021910 <__cxa_guard_acquire>
 8019be6:	b138      	cbz	r0, 8019bf8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019be8:	4620      	mov	r0, r4
 8019bea:	f007 fe9d 	bl	8021928 <__cxa_guard_release>
 8019bee:	4a06      	ldr	r2, [pc, #24]	@ (8019c08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019bf0:	4909      	ldr	r1, [pc, #36]	@ (8019c18 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8019bf2:	480a      	ldr	r0, [pc, #40]	@ (8019c1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019bf4:	f007 fe85 	bl	8021902 <__aeabi_atexit>
 8019bf8:	4b05      	ldr	r3, [pc, #20]	@ (8019c10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019bfa:	66eb      	str	r3, [r5, #108]	@ 0x6c
 8019bfc:	4b07      	ldr	r3, [pc, #28]	@ (8019c1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019bfe:	672b      	str	r3, [r5, #112]	@ 0x70
 8019c00:	bd38      	pop	{r3, r4, r5, pc}
 8019c02:	bf00      	nop
 8019c04:	20016d28 	.word	0x20016d28
 8019c08:	20000000 	.word	0x20000000
 8019c0c:	0801630f 	.word	0x0801630f
 8019c10:	20000050 	.word	0x20000050
 8019c14:	20016d2c 	.word	0x20016d2c
 8019c18:	0801630d 	.word	0x0801630d
 8019c1c:	20000054 	.word	0x20000054

08019c20 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019c20:	b510      	push	{r4, lr}
 8019c22:	4604      	mov	r4, r0
 8019c24:	f7ff ff88 	bl	8019b38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019c28:	4620      	mov	r0, r4
 8019c2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019c2e:	f7ff bfbd 	b.w	8019bac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08019c32 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8019c32:	b510      	push	{r4, lr}
 8019c34:	4604      	mov	r4, r0
 8019c36:	f7ff fff3 	bl	8019c20 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8019c3a:	4620      	mov	r0, r4
 8019c3c:	f7ff ff72 	bl	8019b24 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019c40:	4620      	mov	r0, r4
 8019c42:	f7ff fdf9 	bl	8019838 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8019c46:	4620      	mov	r0, r4
 8019c48:	f7ff fcfa 	bl	8019640 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019c4c:	4620      	mov	r0, r4
 8019c4e:	f7ff fd75 	bl	801973c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8019c52:	4620      	mov	r0, r4
 8019c54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019c58:	f7ff bee0 	b.w	8019a1c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08019c5c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8019c5c:	b538      	push	{r3, r4, r5, lr}
 8019c5e:	4c0b      	ldr	r4, [pc, #44]	@ (8019c8c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8019c60:	4605      	mov	r5, r0
 8019c62:	7823      	ldrb	r3, [r4, #0]
 8019c64:	f3bf 8f5b 	dmb	ish
 8019c68:	07db      	lsls	r3, r3, #31
 8019c6a:	d40b      	bmi.n	8019c84 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8019c6c:	4620      	mov	r0, r4
 8019c6e:	f007 fe4f 	bl	8021910 <__cxa_guard_acquire>
 8019c72:	b138      	cbz	r0, 8019c84 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8019c74:	4620      	mov	r0, r4
 8019c76:	f007 fe57 	bl	8021928 <__cxa_guard_release>
 8019c7a:	4a05      	ldr	r2, [pc, #20]	@ (8019c90 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8019c7c:	4905      	ldr	r1, [pc, #20]	@ (8019c94 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8019c7e:	4806      	ldr	r0, [pc, #24]	@ (8019c98 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8019c80:	f007 fe3f 	bl	8021902 <__aeabi_atexit>
 8019c84:	4b04      	ldr	r3, [pc, #16]	@ (8019c98 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8019c86:	67eb      	str	r3, [r5, #124]	@ 0x7c
 8019c88:	bd38      	pop	{r3, r4, r5, pc}
 8019c8a:	bf00      	nop
 8019c8c:	20016d1c 	.word	0x20016d1c
 8019c90:	20000000 	.word	0x20000000
 8019c94:	08016307 	.word	0x08016307
 8019c98:	20000048 	.word	0x20000048

08019c9c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8019c9c:	b538      	push	{r3, r4, r5, lr}
 8019c9e:	4c0b      	ldr	r4, [pc, #44]	@ (8019ccc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8019ca0:	4605      	mov	r5, r0
 8019ca2:	7823      	ldrb	r3, [r4, #0]
 8019ca4:	f3bf 8f5b 	dmb	ish
 8019ca8:	07db      	lsls	r3, r3, #31
 8019caa:	d40b      	bmi.n	8019cc4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019cac:	4620      	mov	r0, r4
 8019cae:	f007 fe2f 	bl	8021910 <__cxa_guard_acquire>
 8019cb2:	b138      	cbz	r0, 8019cc4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019cb4:	4620      	mov	r0, r4
 8019cb6:	f007 fe37 	bl	8021928 <__cxa_guard_release>
 8019cba:	4a05      	ldr	r2, [pc, #20]	@ (8019cd0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8019cbc:	4905      	ldr	r1, [pc, #20]	@ (8019cd4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8019cbe:	4806      	ldr	r0, [pc, #24]	@ (8019cd8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8019cc0:	f007 fe1f 	bl	8021902 <__aeabi_atexit>
 8019cc4:	4b04      	ldr	r3, [pc, #16]	@ (8019cd8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8019cc6:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 8019cca:	bd38      	pop	{r3, r4, r5, pc}
 8019ccc:	20016d20 	.word	0x20016d20
 8019cd0:	20000000 	.word	0x20000000
 8019cd4:	08016305 	.word	0x08016305
 8019cd8:	2000004c 	.word	0x2000004c

08019cdc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8019cdc:	b570      	push	{r4, r5, r6, lr}
 8019cde:	4d0d      	ldr	r5, [pc, #52]	@ (8019d14 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8019ce0:	4606      	mov	r6, r0
 8019ce2:	4c0d      	ldr	r4, [pc, #52]	@ (8019d18 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8019ce4:	782b      	ldrb	r3, [r5, #0]
 8019ce6:	f3bf 8f5b 	dmb	ish
 8019cea:	f013 0f01 	tst.w	r3, #1
 8019cee:	d10d      	bne.n	8019d0c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8019cf0:	4628      	mov	r0, r5
 8019cf2:	f007 fe0d 	bl	8021910 <__cxa_guard_acquire>
 8019cf6:	b148      	cbz	r0, 8019d0c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8019cf8:	4b08      	ldr	r3, [pc, #32]	@ (8019d1c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8019cfa:	4628      	mov	r0, r5
 8019cfc:	6023      	str	r3, [r4, #0]
 8019cfe:	f007 fe13 	bl	8021928 <__cxa_guard_release>
 8019d02:	4a07      	ldr	r2, [pc, #28]	@ (8019d20 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8019d04:	4620      	mov	r0, r4
 8019d06:	4907      	ldr	r1, [pc, #28]	@ (8019d24 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8019d08:	f007 fdfb 	bl	8021902 <__aeabi_atexit>
 8019d0c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 8019d10:	bd70      	pop	{r4, r5, r6, pc}
 8019d12:	bf00      	nop
 8019d14:	20016d24 	.word	0x20016d24
 8019d18:	20016d98 	.word	0x20016d98
 8019d1c:	080257b8 	.word	0x080257b8
 8019d20:	20000000 	.word	0x20000000
 8019d24:	08016303 	.word	0x08016303

08019d28 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8019d28:	b510      	push	{r4, lr}
 8019d2a:	4604      	mov	r4, r0
 8019d2c:	f7ff ff96 	bl	8019c5c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8019d30:	4620      	mov	r0, r4
 8019d32:	f7ff ffb3 	bl	8019c9c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8019d36:	4620      	mov	r0, r4
 8019d38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019d3c:	f7ff bfce 	b.w	8019cdc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08019d40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8019d40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d44:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8019d48:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8019d4c:	2d00      	cmp	r5, #0
 8019d4e:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8019d52:	fb05 4c0e 	mla	ip, r5, lr, r4
 8019d56:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8019d5a:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8019d5e:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8019d62:	eb02 0a0c 	add.w	sl, r2, ip
 8019d66:	8808      	ldrh	r0, [r1, #0]
 8019d68:	f2c0 80b0 	blt.w	8019ecc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019d6c:	45ab      	cmp	fp, r5
 8019d6e:	f340 80ad 	ble.w	8019ecc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019d72:	2c00      	cmp	r4, #0
 8019d74:	f2c0 80a8 	blt.w	8019ec8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019d78:	45a6      	cmp	lr, r4
 8019d7a:	f340 80a5 	ble.w	8019ec8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019d7e:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019d82:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8019d86:	1c62      	adds	r2, r4, #1
 8019d88:	f100 80a3 	bmi.w	8019ed2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019d8c:	4596      	cmp	lr, r2
 8019d8e:	f340 80a0 	ble.w	8019ed2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019d92:	f1b9 0f00 	cmp.w	r9, #0
 8019d96:	f000 809c 	beq.w	8019ed2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019d9a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019d9e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019da2:	3501      	adds	r5, #1
 8019da4:	f100 8099 	bmi.w	8019eda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019da8:	45ab      	cmp	fp, r5
 8019daa:	f340 8096 	ble.w	8019eda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019dae:	2f00      	cmp	r7, #0
 8019db0:	f000 8093 	beq.w	8019eda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019db4:	2c00      	cmp	r4, #0
 8019db6:	f2c0 808e 	blt.w	8019ed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019dba:	45a6      	cmp	lr, r4
 8019dbc:	f340 808b 	ble.w	8019ed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019dc0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019dc4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8019dc8:	3401      	adds	r4, #1
 8019dca:	f100 8089 	bmi.w	8019ee0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019dce:	45a6      	cmp	lr, r4
 8019dd0:	f340 8086 	ble.w	8019ee0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019dd4:	f1b9 0f00 	cmp.w	r9, #0
 8019dd8:	f000 8082 	beq.w	8019ee0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019ddc:	44d6      	add	lr, sl
 8019dde:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019de2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8019de6:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8019dea:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8019dee:	fb19 fe07 	smulbb	lr, r9, r7
 8019df2:	f1c7 0210 	rsb	r2, r7, #16
 8019df6:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019dfa:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019dfe:	eba2 0209 	sub.w	r2, r2, r9
 8019e02:	ea44 0808 	orr.w	r8, r4, r8
 8019e06:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019e0a:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019e0e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019e12:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019e16:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8019e1a:	ea44 0c0c 	orr.w	ip, r4, ip
 8019e1e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019e22:	fb04 f40c 	mul.w	r4, r4, ip
 8019e26:	fb02 4808 	mla	r8, r2, r8, r4
 8019e2a:	041a      	lsls	r2, r3, #16
 8019e2c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019e30:	b2b4      	uxth	r4, r6
 8019e32:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019e36:	43f6      	mvns	r6, r6
 8019e38:	4313      	orrs	r3, r2
 8019e3a:	042a      	lsls	r2, r5, #16
 8019e3c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019e40:	b2f6      	uxtb	r6, r6
 8019e42:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019e46:	fb0e 8303 	mla	r3, lr, r3, r8
 8019e4a:	432a      	orrs	r2, r5
 8019e4c:	fb07 3202 	mla	r2, r7, r2, r3
 8019e50:	10c7      	asrs	r7, r0, #3
 8019e52:	0d53      	lsrs	r3, r2, #21
 8019e54:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019e58:	0952      	lsrs	r2, r2, #5
 8019e5a:	fb17 f706 	smulbb	r7, r7, r6
 8019e5e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019e62:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019e66:	431a      	orrs	r2, r3
 8019e68:	b293      	uxth	r3, r2
 8019e6a:	1202      	asrs	r2, r0, #8
 8019e6c:	121d      	asrs	r5, r3, #8
 8019e6e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019e72:	00c0      	lsls	r0, r0, #3
 8019e74:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019e78:	fb12 f206 	smulbb	r2, r2, r6
 8019e7c:	b2c0      	uxtb	r0, r0
 8019e7e:	fb05 2504 	mla	r5, r5, r4, r2
 8019e82:	10da      	asrs	r2, r3, #3
 8019e84:	fb10 f006 	smulbb	r0, r0, r6
 8019e88:	00db      	lsls	r3, r3, #3
 8019e8a:	b2ad      	uxth	r5, r5
 8019e8c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019e90:	b2db      	uxtb	r3, r3
 8019e92:	fb02 7204 	mla	r2, r2, r4, r7
 8019e96:	fb03 0004 	mla	r0, r3, r4, r0
 8019e9a:	1c6b      	adds	r3, r5, #1
 8019e9c:	b292      	uxth	r2, r2
 8019e9e:	b280      	uxth	r0, r0
 8019ea0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019ea4:	1c43      	adds	r3, r0, #1
 8019ea6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019eaa:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019eae:	1c50      	adds	r0, r2, #1
 8019eb0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019eb4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019eb8:	0952      	lsrs	r2, r2, #5
 8019eba:	432b      	orrs	r3, r5
 8019ebc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019ec0:	4313      	orrs	r3, r2
 8019ec2:	800b      	strh	r3, [r1, #0]
 8019ec4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019ec8:	4680      	mov	r8, r0
 8019eca:	e75c      	b.n	8019d86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019ecc:	4684      	mov	ip, r0
 8019ece:	4680      	mov	r8, r0
 8019ed0:	e767      	b.n	8019da2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019ed2:	4684      	mov	ip, r0
 8019ed4:	e765      	b.n	8019da2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019ed6:	4605      	mov	r5, r0
 8019ed8:	e776      	b.n	8019dc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8019eda:	4603      	mov	r3, r0
 8019edc:	4605      	mov	r5, r0
 8019ede:	e782      	b.n	8019de6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019ee0:	4603      	mov	r3, r0
 8019ee2:	e780      	b.n	8019de6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019ee4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019ee4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ee8:	b099      	sub	sp, #100	@ 0x64
 8019eea:	9215      	str	r2, [sp, #84]	@ 0x54
 8019eec:	9309      	str	r3, [sp, #36]	@ 0x24
 8019eee:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8019ef0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8019ef4:	9016      	str	r0, [sp, #88]	@ 0x58
 8019ef6:	930d      	str	r3, [sp, #52]	@ 0x34
 8019ef8:	6850      	ldr	r0, [r2, #4]
 8019efa:	910c      	str	r1, [sp, #48]	@ 0x30
 8019efc:	6812      	ldr	r2, [r2, #0]
 8019efe:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8019f02:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8019f06:	fb00 1303 	mla	r3, r0, r3, r1
 8019f0a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019f0e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019f10:	681b      	ldr	r3, [r3, #0]
 8019f12:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019f14:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019f16:	685e      	ldr	r6, [r3, #4]
 8019f18:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019f1a:	3604      	adds	r6, #4
 8019f1c:	43db      	mvns	r3, r3
 8019f1e:	b2db      	uxtb	r3, r3
 8019f20:	930a      	str	r3, [sp, #40]	@ 0x28
 8019f22:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019f24:	2b00      	cmp	r3, #0
 8019f26:	dc03      	bgt.n	8019f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019f28:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8019f2a:	2b00      	cmp	r3, #0
 8019f2c:	f340 8225 	ble.w	801a37a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019f30:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019f32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019f36:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019f3a:	1e48      	subs	r0, r1, #1
 8019f3c:	1e57      	subs	r7, r2, #1
 8019f3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019f40:	2b00      	cmp	r3, #0
 8019f42:	f340 80e3 	ble.w	801a10c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019f46:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8019f4a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019f4e:	d406      	bmi.n	8019f5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019f50:	4584      	cmp	ip, r0
 8019f52:	da04      	bge.n	8019f5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019f54:	2b00      	cmp	r3, #0
 8019f56:	db02      	blt.n	8019f5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019f58:	42bb      	cmp	r3, r7
 8019f5a:	f2c0 80d8 	blt.w	801a10e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019f5e:	f11c 0c01 	adds.w	ip, ip, #1
 8019f62:	f100 80c9 	bmi.w	801a0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019f66:	4561      	cmp	r1, ip
 8019f68:	f2c0 80c6 	blt.w	801a0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019f6c:	3301      	adds	r3, #1
 8019f6e:	f100 80c3 	bmi.w	801a0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019f72:	429a      	cmp	r2, r3
 8019f74:	f2c0 80c0 	blt.w	801a0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019f78:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8019f7c:	4647      	mov	r7, r8
 8019f7e:	f1bb 0f00 	cmp.w	fp, #0
 8019f82:	f340 80e3 	ble.w	801a14c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019f86:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8019f88:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019f8c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019f8e:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019f92:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019f96:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019f9a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019f9e:	689b      	ldr	r3, [r3, #8]
 8019fa0:	f100 8121 	bmi.w	801a1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019fa4:	f103 39ff 	add.w	r9, r3, #4294967295
 8019fa8:	454a      	cmp	r2, r9
 8019faa:	f280 811c 	bge.w	801a1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019fae:	f1bc 0f00 	cmp.w	ip, #0
 8019fb2:	f2c0 8118 	blt.w	801a1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019fb6:	f10e 39ff 	add.w	r9, lr, #4294967295
 8019fba:	45cc      	cmp	ip, r9
 8019fbc:	f280 8113 	bge.w	801a1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019fc0:	b21b      	sxth	r3, r3
 8019fc2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019fc4:	fb0c 2203 	mla	r2, ip, r3, r2
 8019fc8:	eb04 0902 	add.w	r9, r4, r2
 8019fcc:	5ca2      	ldrb	r2, [r4, r2]
 8019fce:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019fd2:	2800      	cmp	r0, #0
 8019fd4:	f000 80fe 	beq.w	801a1d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019fd8:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019fdc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019fe0:	9211      	str	r2, [sp, #68]	@ 0x44
 8019fe2:	b151      	cbz	r1, 8019ffa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019fe4:	eb09 0203 	add.w	r2, r9, r3
 8019fe8:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019fec:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019ff0:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019ff2:	7853      	ldrb	r3, [r2, #1]
 8019ff4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019ff8:	9312      	str	r3, [sp, #72]	@ 0x48
 8019ffa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019ffc:	fb10 f201 	smulbb	r2, r0, r1
 801a000:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a002:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a006:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a00a:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801a00e:	10d2      	asrs	r2, r2, #3
 801a010:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a014:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801a018:	ea4c 0c03 	orr.w	ip, ip, r3
 801a01c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a01e:	041b      	lsls	r3, r3, #16
 801a020:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a024:	4323      	orrs	r3, r4
 801a026:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a028:	4353      	muls	r3, r2
 801a02a:	fb09 330c 	mla	r3, r9, ip, r3
 801a02e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a032:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a036:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a03a:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a03e:	f1c1 0c10 	rsb	ip, r1, #16
 801a042:	ebac 0c00 	sub.w	ip, ip, r0
 801a046:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a04a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a04e:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a052:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a054:	0418      	lsls	r0, r3, #16
 801a056:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a05a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a05e:	4318      	orrs	r0, r3
 801a060:	fb02 c200 	mla	r2, r2, r0, ip
 801a064:	8838      	ldrh	r0, [r7, #0]
 801a066:	0d53      	lsrs	r3, r2, #21
 801a068:	0952      	lsrs	r2, r2, #5
 801a06a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a06e:	1201      	asrs	r1, r0, #8
 801a070:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a074:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a078:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a07c:	00c0      	lsls	r0, r0, #3
 801a07e:	431a      	orrs	r2, r3
 801a080:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801a084:	fb11 f104 	smulbb	r1, r1, r4
 801a088:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801a08c:	b292      	uxth	r2, r2
 801a08e:	fb1e fe04 	smulbb	lr, lr, r4
 801a092:	b2c0      	uxtb	r0, r0
 801a094:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a098:	fb10 f004 	smulbb	r0, r0, r4
 801a09c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a0a0:	fb0c 1c03 	mla	ip, ip, r3, r1
 801a0a4:	10d1      	asrs	r1, r2, #3
 801a0a6:	00d2      	lsls	r2, r2, #3
 801a0a8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a0ac:	fa1f fc8c 	uxth.w	ip, ip
 801a0b0:	b2d2      	uxtb	r2, r2
 801a0b2:	fb01 e103 	mla	r1, r1, r3, lr
 801a0b6:	fb02 0303 	mla	r3, r2, r3, r0
 801a0ba:	b289      	uxth	r1, r1
 801a0bc:	b29a      	uxth	r2, r3
 801a0be:	f10c 0301 	add.w	r3, ip, #1
 801a0c2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a0c6:	1c53      	adds	r3, r2, #1
 801a0c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a0cc:	1c4a      	adds	r2, r1, #1
 801a0ce:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a0d2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a0d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a0da:	0949      	lsrs	r1, r1, #5
 801a0dc:	ea43 030c 	orr.w	r3, r3, ip
 801a0e0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a0e4:	430b      	orrs	r3, r1
 801a0e6:	803b      	strh	r3, [r7, #0]
 801a0e8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a0ea:	3702      	adds	r7, #2
 801a0ec:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a0f0:	449a      	add	sl, r3
 801a0f2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a0f4:	441d      	add	r5, r3
 801a0f6:	e742      	b.n	8019f7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a0f8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a0fa:	f108 0802 	add.w	r8, r8, #2
 801a0fe:	449a      	add	sl, r3
 801a100:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a102:	441d      	add	r5, r3
 801a104:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a106:	3b01      	subs	r3, #1
 801a108:	9309      	str	r3, [sp, #36]	@ 0x24
 801a10a:	e718      	b.n	8019f3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a10c:	d023      	beq.n	801a156 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801a10e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a110:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801a112:	3b01      	subs	r3, #1
 801a114:	fb00 a003 	mla	r0, r0, r3, sl
 801a118:	1400      	asrs	r0, r0, #16
 801a11a:	f53f af2d 	bmi.w	8019f78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a11e:	3901      	subs	r1, #1
 801a120:	4288      	cmp	r0, r1
 801a122:	f6bf af29 	bge.w	8019f78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a126:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801a128:	fb01 5303 	mla	r3, r1, r3, r5
 801a12c:	141b      	asrs	r3, r3, #16
 801a12e:	f53f af23 	bmi.w	8019f78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a132:	3a01      	subs	r2, #1
 801a134:	4293      	cmp	r3, r2
 801a136:	f6bf af1f 	bge.w	8019f78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a13a:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801a13e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801a142:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801a146:	f1be 0f00 	cmp.w	lr, #0
 801a14a:	dc6c      	bgt.n	801a226 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a14c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a14e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a152:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a156:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a158:	2b00      	cmp	r3, #0
 801a15a:	f340 810e 	ble.w	801a37a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a15e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a162:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a164:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a168:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a16c:	eef0 6a62 	vmov.f32	s13, s5
 801a170:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a174:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a178:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a17c:	ee16 aa90 	vmov	sl, s13
 801a180:	eef0 6a43 	vmov.f32	s13, s6
 801a184:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a188:	ee16 5a90 	vmov	r5, s13
 801a18c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a190:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a194:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a198:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a19c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a1a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a1a4:	ee12 2a90 	vmov	r2, s5
 801a1a8:	eef0 2a47 	vmov.f32	s5, s14
 801a1ac:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1b0:	ee13 2a10 	vmov	r2, s6
 801a1b4:	9325      	str	r3, [sp, #148]	@ 0x94
 801a1b6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a1b8:	eeb0 3a67 	vmov.f32	s6, s15
 801a1bc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1c0:	9326      	str	r3, [sp, #152]	@ 0x98
 801a1c2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a1c4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801a1c6:	3b01      	subs	r3, #1
 801a1c8:	930c      	str	r3, [sp, #48]	@ 0x30
 801a1ca:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a1cc:	bf08      	it	eq
 801a1ce:	4613      	moveq	r3, r2
 801a1d0:	9309      	str	r3, [sp, #36]	@ 0x24
 801a1d2:	e6a6      	b.n	8019f22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a1d4:	2900      	cmp	r1, #0
 801a1d6:	f43f af10 	beq.w	8019ffa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a1da:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a1de:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a1e2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a1e4:	e709      	b.n	8019ffa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a1e6:	f112 0901 	adds.w	r9, r2, #1
 801a1ea:	f53f af7d 	bmi.w	801a0e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a1ee:	454b      	cmp	r3, r9
 801a1f0:	f6ff af7a 	blt.w	801a0e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a1f4:	f11c 0901 	adds.w	r9, ip, #1
 801a1f8:	f53f af76 	bmi.w	801a0e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a1fc:	45ce      	cmp	lr, r9
 801a1fe:	f6ff af73 	blt.w	801a0e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a202:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a204:	b21b      	sxth	r3, r3
 801a206:	9202      	str	r2, [sp, #8]
 801a208:	fa0f f28e 	sxth.w	r2, lr
 801a20c:	9300      	str	r3, [sp, #0]
 801a20e:	4633      	mov	r3, r6
 801a210:	9201      	str	r2, [sp, #4]
 801a212:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a214:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a218:	e9cd c003 	strd	ip, r0, [sp, #12]
 801a21c:	4639      	mov	r1, r7
 801a21e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801a220:	f7ff fd8e 	bl	8019d40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801a224:	e760      	b.n	801a0e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a226:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a228:	ea4f 422a 	mov.w	r2, sl, asr #16
 801a22c:	1429      	asrs	r1, r5, #16
 801a22e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a230:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a234:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801a238:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a23c:	fb03 2101 	mla	r1, r3, r1, r2
 801a240:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a242:	440a      	add	r2, r1
 801a244:	5c61      	ldrb	r1, [r4, r1]
 801a246:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801a24a:	f1bc 0f00 	cmp.w	ip, #0
 801a24e:	f000 808c 	beq.w	801a36a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801a252:	7857      	ldrb	r7, [r2, #1]
 801a254:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801a258:	9413      	str	r4, [sp, #76]	@ 0x4c
 801a25a:	b140      	cbz	r0, 801a26e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a25c:	18d7      	adds	r7, r2, r3
 801a25e:	5cd3      	ldrb	r3, [r2, r3]
 801a260:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a264:	9310      	str	r3, [sp, #64]	@ 0x40
 801a266:	787b      	ldrb	r3, [r7, #1]
 801a268:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a26c:	9314      	str	r3, [sp, #80]	@ 0x50
 801a26e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a270:	fb1c f200 	smulbb	r2, ip, r0
 801a274:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a276:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a27a:	041f      	lsls	r7, r3, #16
 801a27c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a280:	10d2      	asrs	r2, r2, #3
 801a282:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801a286:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801a28a:	431f      	orrs	r7, r3
 801a28c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801a290:	9317      	str	r3, [sp, #92]	@ 0x5c
 801a292:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801a294:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801a296:	041b      	lsls	r3, r3, #16
 801a298:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a29c:	ea43 030b 	orr.w	r3, r3, fp
 801a2a0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a2a4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a2a8:	4353      	muls	r3, r2
 801a2aa:	fb04 3707 	mla	r7, r4, r7, r3
 801a2ae:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801a2b2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a2b4:	ea43 0b01 	orr.w	fp, r3, r1
 801a2b8:	f1c0 0110 	rsb	r1, r0, #16
 801a2bc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a2be:	eba1 0c0c 	sub.w	ip, r1, ip
 801a2c2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a2c6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a2ca:	fb0c 770b 	mla	r7, ip, fp, r7
 801a2ce:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a2d2:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801a2d6:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a2da:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a2de:	fb02 770c 	mla	r7, r2, ip, r7
 801a2e2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a2e4:	0d79      	lsrs	r1, r7, #21
 801a2e6:	8812      	ldrh	r2, [r2, #0]
 801a2e8:	097f      	lsrs	r7, r7, #5
 801a2ea:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a2ee:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a2f2:	430f      	orrs	r7, r1
 801a2f4:	1211      	asrs	r1, r2, #8
 801a2f6:	b2bb      	uxth	r3, r7
 801a2f8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a2fc:	10d7      	asrs	r7, r2, #3
 801a2fe:	fb11 f104 	smulbb	r1, r1, r4
 801a302:	1218      	asrs	r0, r3, #8
 801a304:	00d2      	lsls	r2, r2, #3
 801a306:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a30a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a30e:	fb17 f704 	smulbb	r7, r7, r4
 801a312:	b2d2      	uxtb	r2, r2
 801a314:	fb00 1009 	mla	r0, r0, r9, r1
 801a318:	10d9      	asrs	r1, r3, #3
 801a31a:	fb12 f204 	smulbb	r2, r2, r4
 801a31e:	00db      	lsls	r3, r3, #3
 801a320:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a324:	b280      	uxth	r0, r0
 801a326:	b2db      	uxtb	r3, r3
 801a328:	fb01 7109 	mla	r1, r1, r9, r7
 801a32c:	fb03 2309 	mla	r3, r3, r9, r2
 801a330:	1c42      	adds	r2, r0, #1
 801a332:	b289      	uxth	r1, r1
 801a334:	b29b      	uxth	r3, r3
 801a336:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a33a:	1c4f      	adds	r7, r1, #1
 801a33c:	1c5a      	adds	r2, r3, #1
 801a33e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801a342:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801a346:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a34a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a34c:	0949      	lsrs	r1, r1, #5
 801a34e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a352:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a356:	4310      	orrs	r0, r2
 801a358:	4308      	orrs	r0, r1
 801a35a:	f823 0b02 	strh.w	r0, [r3], #2
 801a35e:	930e      	str	r3, [sp, #56]	@ 0x38
 801a360:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a362:	449a      	add	sl, r3
 801a364:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a366:	441d      	add	r5, r3
 801a368:	e6ed      	b.n	801a146 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801a36a:	2800      	cmp	r0, #0
 801a36c:	f43f af7f 	beq.w	801a26e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a370:	5cd3      	ldrb	r3, [r2, r3]
 801a372:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a376:	9310      	str	r3, [sp, #64]	@ 0x40
 801a378:	e779      	b.n	801a26e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a37a:	b019      	add	sp, #100	@ 0x64
 801a37c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a380 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a384:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801a388:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801a38c:	f1b8 0f00 	cmp.w	r8, #0
 801a390:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801a394:	fb08 470e 	mla	r7, r8, lr, r4
 801a398:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801a39c:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801a3a0:	eb02 0907 	add.w	r9, r2, r7
 801a3a4:	8808      	ldrh	r0, [r1, #0]
 801a3a6:	db67      	blt.n	801a478 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a3a8:	45c2      	cmp	sl, r8
 801a3aa:	dd65      	ble.n	801a478 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a3ac:	2c00      	cmp	r4, #0
 801a3ae:	db61      	blt.n	801a474 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a3b0:	45a6      	cmp	lr, r4
 801a3b2:	dd5f      	ble.n	801a474 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a3b4:	5dd2      	ldrb	r2, [r2, r7]
 801a3b6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a3ba:	1c62      	adds	r2, r4, #1
 801a3bc:	d45f      	bmi.n	801a47e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a3be:	4596      	cmp	lr, r2
 801a3c0:	dd5d      	ble.n	801a47e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a3c2:	2d00      	cmp	r5, #0
 801a3c4:	d05b      	beq.n	801a47e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a3c6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a3ca:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801a3ce:	f118 0801 	adds.w	r8, r8, #1
 801a3d2:	d458      	bmi.n	801a486 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a3d4:	45c2      	cmp	sl, r8
 801a3d6:	dd56      	ble.n	801a486 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a3d8:	2e00      	cmp	r6, #0
 801a3da:	d054      	beq.n	801a486 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a3dc:	2c00      	cmp	r4, #0
 801a3de:	db50      	blt.n	801a482 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a3e0:	45a6      	cmp	lr, r4
 801a3e2:	dd4e      	ble.n	801a482 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a3e4:	f819 200e 	ldrb.w	r2, [r9, lr]
 801a3e8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801a3ec:	3401      	adds	r4, #1
 801a3ee:	d407      	bmi.n	801a400 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a3f0:	45a6      	cmp	lr, r4
 801a3f2:	dd05      	ble.n	801a400 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a3f4:	b125      	cbz	r5, 801a400 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a3f6:	44ce      	add	lr, r9
 801a3f8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801a3fc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801a400:	fb15 f406 	smulbb	r4, r5, r6
 801a404:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801a408:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801a40c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a410:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a414:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801a418:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801a41c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a420:	ea43 0c0c 	orr.w	ip, r3, ip
 801a424:	f1c6 0310 	rsb	r3, r6, #16
 801a428:	ea4e 0707 	orr.w	r7, lr, r7
 801a42c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801a430:	1b5b      	subs	r3, r3, r5
 801a432:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801a436:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a43a:	437d      	muls	r5, r7
 801a43c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801a440:	0403      	lsls	r3, r0, #16
 801a442:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a446:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a44a:	4318      	orrs	r0, r3
 801a44c:	0413      	lsls	r3, r2, #16
 801a44e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a452:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a456:	fb04 c000 	mla	r0, r4, r0, ip
 801a45a:	4313      	orrs	r3, r2
 801a45c:	fb06 0003 	mla	r0, r6, r3, r0
 801a460:	0d43      	lsrs	r3, r0, #21
 801a462:	0940      	lsrs	r0, r0, #5
 801a464:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a468:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a46c:	4318      	orrs	r0, r3
 801a46e:	8008      	strh	r0, [r1, #0]
 801a470:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a474:	4684      	mov	ip, r0
 801a476:	e7a0      	b.n	801a3ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801a478:	4607      	mov	r7, r0
 801a47a:	4684      	mov	ip, r0
 801a47c:	e7a7      	b.n	801a3ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a47e:	4607      	mov	r7, r0
 801a480:	e7a5      	b.n	801a3ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a482:	4602      	mov	r2, r0
 801a484:	e7b2      	b.n	801a3ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801a486:	4602      	mov	r2, r0
 801a488:	e7ba      	b.n	801a400 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801a48a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a48a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a48e:	b093      	sub	sp, #76	@ 0x4c
 801a490:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a494:	920f      	str	r2, [sp, #60]	@ 0x3c
 801a496:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a498:	9010      	str	r0, [sp, #64]	@ 0x40
 801a49a:	9108      	str	r1, [sp, #32]
 801a49c:	6850      	ldr	r0, [r2, #4]
 801a49e:	9306      	str	r3, [sp, #24]
 801a4a0:	6812      	ldr	r2, [r2, #0]
 801a4a2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801a4a6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801a4aa:	fb00 1303 	mla	r3, r0, r3, r1
 801a4ae:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801a4b2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a4b4:	681b      	ldr	r3, [r3, #0]
 801a4b6:	9307      	str	r3, [sp, #28]
 801a4b8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a4ba:	685f      	ldr	r7, [r3, #4]
 801a4bc:	3704      	adds	r7, #4
 801a4be:	9b08      	ldr	r3, [sp, #32]
 801a4c0:	2b00      	cmp	r3, #0
 801a4c2:	dc03      	bgt.n	801a4cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801a4c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a4c6:	2b00      	cmp	r3, #0
 801a4c8:	f340 81b2 	ble.w	801a830 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a4cc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a4ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a4d2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a4d6:	1e48      	subs	r0, r1, #1
 801a4d8:	f102 3cff 	add.w	ip, r2, #4294967295
 801a4dc:	9b06      	ldr	r3, [sp, #24]
 801a4de:	2b00      	cmp	r3, #0
 801a4e0:	f340 80a9 	ble.w	801a636 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a4e4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a4e8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a4ec:	d406      	bmi.n	801a4fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a4ee:	4586      	cmp	lr, r0
 801a4f0:	da04      	bge.n	801a4fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a4f2:	2b00      	cmp	r3, #0
 801a4f4:	db02      	blt.n	801a4fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a4f6:	4563      	cmp	r3, ip
 801a4f8:	f2c0 809e 	blt.w	801a638 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a4fc:	f11e 0e01 	adds.w	lr, lr, #1
 801a500:	f100 808f 	bmi.w	801a622 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a504:	4571      	cmp	r1, lr
 801a506:	f2c0 808c 	blt.w	801a622 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a50a:	3301      	adds	r3, #1
 801a50c:	f100 8089 	bmi.w	801a622 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a510:	429a      	cmp	r2, r3
 801a512:	f2c0 8086 	blt.w	801a622 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a516:	f8dd b018 	ldr.w	fp, [sp, #24]
 801a51a:	46c8      	mov	r8, r9
 801a51c:	f1bb 0f00 	cmp.w	fp, #0
 801a520:	f340 80a6 	ble.w	801a670 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a524:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801a526:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a52a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a52c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a530:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a534:	1422      	asrs	r2, r4, #16
 801a536:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a53a:	689b      	ldr	r3, [r3, #8]
 801a53c:	f100 80e3 	bmi.w	801a706 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a540:	f103 3aff 	add.w	sl, r3, #4294967295
 801a544:	4552      	cmp	r2, sl
 801a546:	f280 80de 	bge.w	801a706 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a54a:	f1bc 0f00 	cmp.w	ip, #0
 801a54e:	f2c0 80da 	blt.w	801a706 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a552:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a556:	45d4      	cmp	ip, sl
 801a558:	f280 80d5 	bge.w	801a706 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a55c:	b21b      	sxth	r3, r3
 801a55e:	9d07      	ldr	r5, [sp, #28]
 801a560:	fb0c 2203 	mla	r2, ip, r3, r2
 801a564:	eb05 0a02 	add.w	sl, r5, r2
 801a568:	5caa      	ldrb	r2, [r5, r2]
 801a56a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801a56e:	2800      	cmp	r0, #0
 801a570:	f000 80c0 	beq.w	801a6f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801a574:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a578:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801a57c:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a57e:	b151      	cbz	r1, 801a596 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a580:	eb0a 0203 	add.w	r2, sl, r3
 801a584:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a588:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a58c:	9309      	str	r3, [sp, #36]	@ 0x24
 801a58e:	7853      	ldrb	r3, [r2, #1]
 801a590:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a594:	930c      	str	r3, [sp, #48]	@ 0x30
 801a596:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a598:	fb10 f201 	smulbb	r2, r0, r1
 801a59c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801a59e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a5a2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a5a6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a5aa:	10d2      	asrs	r2, r2, #3
 801a5ac:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a5b0:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801a5b4:	ea4c 0c03 	orr.w	ip, ip, r3
 801a5b8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a5ba:	041b      	lsls	r3, r3, #16
 801a5bc:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a5c0:	432b      	orrs	r3, r5
 801a5c2:	4353      	muls	r3, r2
 801a5c4:	fb0a 330c 	mla	r3, sl, ip, r3
 801a5c8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a5cc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a5d0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a5d4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a5d8:	f1c1 0c10 	rsb	ip, r1, #16
 801a5dc:	ebac 0c00 	sub.w	ip, ip, r0
 801a5e0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a5e4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a5e8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a5ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a5ee:	0418      	lsls	r0, r3, #16
 801a5f0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a5f4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a5f8:	4318      	orrs	r0, r3
 801a5fa:	fb02 c200 	mla	r2, r2, r0, ip
 801a5fe:	0d53      	lsrs	r3, r2, #21
 801a600:	0952      	lsrs	r2, r2, #5
 801a602:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a606:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a60a:	431a      	orrs	r2, r3
 801a60c:	f8a8 2000 	strh.w	r2, [r8]
 801a610:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a612:	f108 0802 	add.w	r8, r8, #2
 801a616:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a61a:	441c      	add	r4, r3
 801a61c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a61e:	441e      	add	r6, r3
 801a620:	e77c      	b.n	801a51c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a622:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a624:	f109 0902 	add.w	r9, r9, #2
 801a628:	441c      	add	r4, r3
 801a62a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a62c:	441e      	add	r6, r3
 801a62e:	9b06      	ldr	r3, [sp, #24]
 801a630:	3b01      	subs	r3, #1
 801a632:	9306      	str	r3, [sp, #24]
 801a634:	e752      	b.n	801a4dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a636:	d020      	beq.n	801a67a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a638:	9b06      	ldr	r3, [sp, #24]
 801a63a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a63c:	3b01      	subs	r3, #1
 801a63e:	fb00 4003 	mla	r0, r0, r3, r4
 801a642:	1400      	asrs	r0, r0, #16
 801a644:	f53f af67 	bmi.w	801a516 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a648:	3901      	subs	r1, #1
 801a64a:	4288      	cmp	r0, r1
 801a64c:	f6bf af63 	bge.w	801a516 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a650:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801a652:	fb01 6303 	mla	r3, r1, r3, r6
 801a656:	141b      	asrs	r3, r3, #16
 801a658:	f53f af5d 	bmi.w	801a516 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a65c:	3a01      	subs	r2, #1
 801a65e:	4293      	cmp	r3, r2
 801a660:	f6bf af59 	bge.w	801a516 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a664:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801a668:	46ca      	mov	sl, r9
 801a66a:	f1b8 0f00 	cmp.w	r8, #0
 801a66e:	dc67      	bgt.n	801a740 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a670:	9b06      	ldr	r3, [sp, #24]
 801a672:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a676:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801a67a:	9b08      	ldr	r3, [sp, #32]
 801a67c:	2b00      	cmp	r3, #0
 801a67e:	f340 80d7 	ble.w	801a830 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a682:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a686:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a688:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a68c:	eeb0 6a62 	vmov.f32	s12, s5
 801a690:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a694:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a698:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a69c:	ee16 4a10 	vmov	r4, s12
 801a6a0:	eeb0 6a43 	vmov.f32	s12, s6
 801a6a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6a8:	ee16 6a10 	vmov	r6, s12
 801a6ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a6b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a6b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a6b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a6bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a6c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a6c4:	ee12 2a90 	vmov	r2, s5
 801a6c8:	eef0 2a47 	vmov.f32	s5, s14
 801a6cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6d0:	ee13 2a10 	vmov	r2, s6
 801a6d4:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a6d6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a6d8:	eeb0 3a67 	vmov.f32	s6, s15
 801a6dc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6e0:	9320      	str	r3, [sp, #128]	@ 0x80
 801a6e2:	9b08      	ldr	r3, [sp, #32]
 801a6e4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a6e6:	3b01      	subs	r3, #1
 801a6e8:	9308      	str	r3, [sp, #32]
 801a6ea:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a6ec:	bf08      	it	eq
 801a6ee:	4613      	moveq	r3, r2
 801a6f0:	9306      	str	r3, [sp, #24]
 801a6f2:	e6e4      	b.n	801a4be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801a6f4:	2900      	cmp	r1, #0
 801a6f6:	f43f af4e 	beq.w	801a596 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a6fa:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a6fe:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a702:	9309      	str	r3, [sp, #36]	@ 0x24
 801a704:	e747      	b.n	801a596 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a706:	f112 0a01 	adds.w	sl, r2, #1
 801a70a:	d481      	bmi.n	801a610 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a70c:	4553      	cmp	r3, sl
 801a70e:	f6ff af7f 	blt.w	801a610 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a712:	f11c 0a01 	adds.w	sl, ip, #1
 801a716:	f53f af7b 	bmi.w	801a610 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a71a:	45d6      	cmp	lr, sl
 801a71c:	f6ff af78 	blt.w	801a610 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a720:	b21b      	sxth	r3, r3
 801a722:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801a726:	fa0f f28e 	sxth.w	r2, lr
 801a72a:	9300      	str	r3, [sp, #0]
 801a72c:	463b      	mov	r3, r7
 801a72e:	9201      	str	r2, [sp, #4]
 801a730:	9a07      	ldr	r2, [sp, #28]
 801a732:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801a736:	4641      	mov	r1, r8
 801a738:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801a73a:	f7ff fe21 	bl	801a380 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a73e:	e767      	b.n	801a610 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a740:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a742:	1422      	asrs	r2, r4, #16
 801a744:	1431      	asrs	r1, r6, #16
 801a746:	9d07      	ldr	r5, [sp, #28]
 801a748:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a74c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801a750:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a754:	fb03 2101 	mla	r1, r3, r1, r2
 801a758:	9a07      	ldr	r2, [sp, #28]
 801a75a:	440a      	add	r2, r1
 801a75c:	5c69      	ldrb	r1, [r5, r1]
 801a75e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801a762:	f1be 0f00 	cmp.w	lr, #0
 801a766:	d05c      	beq.n	801a822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a768:	f892 c001 	ldrb.w	ip, [r2, #1]
 801a76c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801a770:	950d      	str	r5, [sp, #52]	@ 0x34
 801a772:	b150      	cbz	r0, 801a78a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a774:	eb02 0c03 	add.w	ip, r2, r3
 801a778:	5cd3      	ldrb	r3, [r2, r3]
 801a77a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a77e:	930a      	str	r3, [sp, #40]	@ 0x28
 801a780:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801a784:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a788:	930e      	str	r3, [sp, #56]	@ 0x38
 801a78a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a78c:	fb1e f200 	smulbb	r2, lr, r0
 801a790:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801a792:	f108 38ff 	add.w	r8, r8, #4294967295
 801a796:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a79a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a79e:	10d2      	asrs	r2, r2, #3
 801a7a0:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801a7a4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a7a8:	ea4c 0c03 	orr.w	ip, ip, r3
 801a7ac:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801a7b0:	9311      	str	r3, [sp, #68]	@ 0x44
 801a7b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a7b4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a7b6:	041b      	lsls	r3, r3, #16
 801a7b8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a7bc:	ea43 030b 	orr.w	r3, r3, fp
 801a7c0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a7c4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a7c8:	4353      	muls	r3, r2
 801a7ca:	fb05 3c0c 	mla	ip, r5, ip, r3
 801a7ce:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801a7d2:	ea43 0b01 	orr.w	fp, r3, r1
 801a7d6:	f1c0 0110 	rsb	r1, r0, #16
 801a7da:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a7dc:	eba1 0e0e 	sub.w	lr, r1, lr
 801a7e0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801a7e4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a7e8:	fb0e cc0b 	mla	ip, lr, fp, ip
 801a7ec:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801a7f0:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801a7f4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a7f8:	ea4b 0e0e 	orr.w	lr, fp, lr
 801a7fc:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a800:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801a804:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a808:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a80c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a810:	ea43 0c0c 	orr.w	ip, r3, ip
 801a814:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a816:	441c      	add	r4, r3
 801a818:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a81a:	f82a cb02 	strh.w	ip, [sl], #2
 801a81e:	441e      	add	r6, r3
 801a820:	e723      	b.n	801a66a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a822:	2800      	cmp	r0, #0
 801a824:	d0b1      	beq.n	801a78a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a826:	5cd3      	ldrb	r3, [r2, r3]
 801a828:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a82c:	930a      	str	r3, [sp, #40]	@ 0x28
 801a82e:	e7ac      	b.n	801a78a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a830:	b013      	add	sp, #76	@ 0x4c
 801a832:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a836 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801a836:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a83a:	880d      	ldrh	r5, [r1, #0]
 801a83c:	b087      	sub	sp, #28
 801a83e:	10ef      	asrs	r7, r5, #3
 801a840:	9103      	str	r1, [sp, #12]
 801a842:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801a846:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801a84a:	00ed      	lsls	r5, r5, #3
 801a84c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a850:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801a854:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801a858:	b2ed      	uxtb	r5, r5
 801a85a:	9701      	str	r7, [sp, #4]
 801a85c:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801a860:	9502      	str	r5, [sp, #8]
 801a862:	9d01      	ldr	r5, [sp, #4]
 801a864:	9902      	ldr	r1, [sp, #8]
 801a866:	022d      	lsls	r5, r5, #8
 801a868:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801a86c:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801a870:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801a874:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801a878:	430d      	orrs	r5, r1
 801a87a:	fb06 0709 	mla	r7, r6, r9, r0
 801a87e:	2e00      	cmp	r6, #0
 801a880:	9505      	str	r5, [sp, #20]
 801a882:	eb02 0c07 	add.w	ip, r2, r7
 801a886:	f2c0 80b6 	blt.w	801a9f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a88a:	45b3      	cmp	fp, r6
 801a88c:	f340 80b3 	ble.w	801a9f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a890:	2800      	cmp	r0, #0
 801a892:	f2c0 80ae 	blt.w	801a9f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a896:	4581      	cmp	r9, r0
 801a898:	f340 80ab 	ble.w	801a9f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a89c:	5dd7      	ldrb	r7, [r2, r7]
 801a89e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a8a2:	441f      	add	r7, r3
 801a8a4:	1c42      	adds	r2, r0, #1
 801a8a6:	f100 80a9 	bmi.w	801a9fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a8aa:	4591      	cmp	r9, r2
 801a8ac:	f340 80a6 	ble.w	801a9fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a8b0:	2c00      	cmp	r4, #0
 801a8b2:	f000 80a3 	beq.w	801a9fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a8b6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a8ba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a8be:	441d      	add	r5, r3
 801a8c0:	3601      	adds	r6, #1
 801a8c2:	f100 809f 	bmi.w	801aa04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a8c6:	45b3      	cmp	fp, r6
 801a8c8:	f340 809c 	ble.w	801aa04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a8cc:	f1be 0f00 	cmp.w	lr, #0
 801a8d0:	f000 8098 	beq.w	801aa04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a8d4:	2800      	cmp	r0, #0
 801a8d6:	f2c0 8093 	blt.w	801aa00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a8da:	4581      	cmp	r9, r0
 801a8dc:	f340 8090 	ble.w	801aa00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a8e0:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801a8e4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a8e8:	441e      	add	r6, r3
 801a8ea:	3001      	adds	r0, #1
 801a8ec:	f100 808d 	bmi.w	801aa0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a8f0:	4581      	cmp	r9, r0
 801a8f2:	f340 808a 	ble.w	801aa0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a8f6:	2c00      	cmp	r4, #0
 801a8f8:	f000 8087 	beq.w	801aa0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a8fc:	44e1      	add	r9, ip
 801a8fe:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a902:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a906:	4413      	add	r3, r2
 801a908:	b2a4      	uxth	r4, r4
 801a90a:	f897 c002 	ldrb.w	ip, [r7, #2]
 801a90e:	fa1f fe8e 	uxth.w	lr, lr
 801a912:	9901      	ldr	r1, [sp, #4]
 801a914:	fb04 fb0e 	mul.w	fp, r4, lr
 801a918:	0124      	lsls	r4, r4, #4
 801a91a:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801a91e:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801a922:	eba4 040b 	sub.w	r4, r4, fp
 801a926:	fa1f f08e 	uxth.w	r0, lr
 801a92a:	b2a2      	uxth	r2, r4
 801a92c:	78ac      	ldrb	r4, [r5, #2]
 801a92e:	eba9 0900 	sub.w	r9, r9, r0
 801a932:	fa1f fe88 	uxth.w	lr, r8
 801a936:	4354      	muls	r4, r2
 801a938:	ea6f 0808 	mvn.w	r8, r8
 801a93c:	fa1f f989 	uxth.w	r9, r9
 801a940:	fa5f f888 	uxtb.w	r8, r8
 801a944:	fb09 440c 	mla	r4, r9, ip, r4
 801a948:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a94c:	fb1a fa08 	smulbb	sl, sl, r8
 801a950:	fb00 440c 	mla	r4, r0, ip, r4
 801a954:	f893 c002 	ldrb.w	ip, [r3, #2]
 801a958:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801a95c:	787c      	ldrb	r4, [r7, #1]
 801a95e:	783f      	ldrb	r7, [r7, #0]
 801a960:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a964:	fb0c ac0e 	mla	ip, ip, lr, sl
 801a968:	f895 a001 	ldrb.w	sl, [r5, #1]
 801a96c:	782d      	ldrb	r5, [r5, #0]
 801a96e:	fb02 fa0a 	mul.w	sl, r2, sl
 801a972:	fa1f fc8c 	uxth.w	ip, ip
 801a976:	436a      	muls	r2, r5
 801a978:	7835      	ldrb	r5, [r6, #0]
 801a97a:	fb09 aa04 	mla	sl, r9, r4, sl
 801a97e:	7874      	ldrb	r4, [r6, #1]
 801a980:	fb09 2207 	mla	r2, r9, r7, r2
 801a984:	fb00 aa04 	mla	sl, r0, r4, sl
 801a988:	785c      	ldrb	r4, [r3, #1]
 801a98a:	fb00 2005 	mla	r0, r0, r5, r2
 801a98e:	781b      	ldrb	r3, [r3, #0]
 801a990:	fb0b a404 	mla	r4, fp, r4, sl
 801a994:	fb11 fa08 	smulbb	sl, r1, r8
 801a998:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a99c:	9b02      	ldr	r3, [sp, #8]
 801a99e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a9a2:	fb13 f808 	smulbb	r8, r3, r8
 801a9a6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a9aa:	fb04 a40e 	mla	r4, r4, lr, sl
 801a9ae:	f10c 0301 	add.w	r3, ip, #1
 801a9b2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a9b6:	b2a4      	uxth	r4, r4
 801a9b8:	fa1f fe8e 	uxth.w	lr, lr
 801a9bc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a9c0:	f104 0a01 	add.w	sl, r4, #1
 801a9c4:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801a9c8:	f10e 0c01 	add.w	ip, lr, #1
 801a9cc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a9d0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a9d4:	0964      	lsrs	r4, r4, #5
 801a9d6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a9da:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801a9de:	ea4c 0c03 	orr.w	ip, ip, r3
 801a9e2:	9b03      	ldr	r3, [sp, #12]
 801a9e4:	ea4c 0c04 	orr.w	ip, ip, r4
 801a9e8:	f8a3 c000 	strh.w	ip, [r3]
 801a9ec:	b007      	add	sp, #28
 801a9ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9f2:	af05      	add	r7, sp, #20
 801a9f4:	e756      	b.n	801a8a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a9f6:	ad05      	add	r5, sp, #20
 801a9f8:	462f      	mov	r7, r5
 801a9fa:	e761      	b.n	801a8c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a9fc:	ad05      	add	r5, sp, #20
 801a9fe:	e75f      	b.n	801a8c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801aa00:	ae05      	add	r6, sp, #20
 801aa02:	e772      	b.n	801a8ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801aa04:	ab05      	add	r3, sp, #20
 801aa06:	461e      	mov	r6, r3
 801aa08:	e77e      	b.n	801a908 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801aa0a:	ab05      	add	r3, sp, #20
 801aa0c:	e77c      	b.n	801a908 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801aa0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa12:	b095      	sub	sp, #84	@ 0x54
 801aa14:	9212      	str	r2, [sp, #72]	@ 0x48
 801aa16:	9309      	str	r3, [sp, #36]	@ 0x24
 801aa18:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801aa1a:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801aa1e:	9013      	str	r0, [sp, #76]	@ 0x4c
 801aa20:	930f      	str	r3, [sp, #60]	@ 0x3c
 801aa22:	6850      	ldr	r0, [r2, #4]
 801aa24:	910e      	str	r1, [sp, #56]	@ 0x38
 801aa26:	6812      	ldr	r2, [r2, #0]
 801aa28:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801aa2c:	fb00 1303 	mla	r3, r0, r3, r1
 801aa30:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aa34:	930a      	str	r3, [sp, #40]	@ 0x28
 801aa36:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801aa38:	681b      	ldr	r3, [r3, #0]
 801aa3a:	930d      	str	r3, [sp, #52]	@ 0x34
 801aa3c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801aa3e:	685c      	ldr	r4, [r3, #4]
 801aa40:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801aa42:	3404      	adds	r4, #4
 801aa44:	43db      	mvns	r3, r3
 801aa46:	b2db      	uxtb	r3, r3
 801aa48:	930b      	str	r3, [sp, #44]	@ 0x2c
 801aa4a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801aa4c:	2b00      	cmp	r3, #0
 801aa4e:	dc03      	bgt.n	801aa58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801aa50:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801aa52:	2b00      	cmp	r3, #0
 801aa54:	f340 8255 	ble.w	801af02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801aa58:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801aa5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aa5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801aa62:	1e48      	subs	r0, r1, #1
 801aa64:	1e55      	subs	r5, r2, #1
 801aa66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aa68:	2b00      	cmp	r3, #0
 801aa6a:	f340 80f9 	ble.w	801ac60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801aa6e:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801aa70:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801aa72:	1436      	asrs	r6, r6, #16
 801aa74:	ea4f 4323 	mov.w	r3, r3, asr #16
 801aa78:	d406      	bmi.n	801aa88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aa7a:	4286      	cmp	r6, r0
 801aa7c:	da04      	bge.n	801aa88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aa7e:	2b00      	cmp	r3, #0
 801aa80:	db02      	blt.n	801aa88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aa82:	42ab      	cmp	r3, r5
 801aa84:	f2c0 80ed 	blt.w	801ac62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801aa88:	3601      	adds	r6, #1
 801aa8a:	f100 80da 	bmi.w	801ac42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aa8e:	42b1      	cmp	r1, r6
 801aa90:	f2c0 80d7 	blt.w	801ac42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aa94:	3301      	adds	r3, #1
 801aa96:	f100 80d4 	bmi.w	801ac42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aa9a:	429a      	cmp	r2, r3
 801aa9c:	f2c0 80d1 	blt.w	801ac42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aaa0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aaa2:	9311      	str	r3, [sp, #68]	@ 0x44
 801aaa4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801aaa6:	930c      	str	r3, [sp, #48]	@ 0x30
 801aaa8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801aaaa:	2b00      	cmp	r3, #0
 801aaac:	f340 80fa 	ble.w	801aca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801aab0:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801aab2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801aab4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801aab6:	68c6      	ldr	r6, [r0, #12]
 801aab8:	141d      	asrs	r5, r3, #16
 801aaba:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801aabc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801aac0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aac2:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801aac4:	1400      	asrs	r0, r0, #16
 801aac6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801aaca:	6892      	ldr	r2, [r2, #8]
 801aacc:	f100 813e 	bmi.w	801ad4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801aad0:	1e57      	subs	r7, r2, #1
 801aad2:	42b8      	cmp	r0, r7
 801aad4:	f280 813a 	bge.w	801ad4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801aad8:	2d00      	cmp	r5, #0
 801aada:	f2c0 8137 	blt.w	801ad4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801aade:	1e77      	subs	r7, r6, #1
 801aae0:	42bd      	cmp	r5, r7
 801aae2:	f280 8133 	bge.w	801ad4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801aae6:	b212      	sxth	r2, r2
 801aae8:	fb05 0002 	mla	r0, r5, r2, r0
 801aaec:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801aaee:	f815 a000 	ldrb.w	sl, [r5, r0]
 801aaf2:	182e      	adds	r6, r5, r0
 801aaf4:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801aaf8:	eb04 050a 	add.w	r5, r4, sl
 801aafc:	2b00      	cmp	r3, #0
 801aafe:	f000 8117 	beq.w	801ad30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801ab02:	f896 c001 	ldrb.w	ip, [r6, #1]
 801ab06:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801ab0a:	44a4      	add	ip, r4
 801ab0c:	2900      	cmp	r1, #0
 801ab0e:	f000 8117 	beq.w	801ad40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801ab12:	18b0      	adds	r0, r6, r2
 801ab14:	5cb2      	ldrb	r2, [r6, r2]
 801ab16:	7840      	ldrb	r0, [r0, #1]
 801ab18:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ab1c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ab20:	4422      	add	r2, r4
 801ab22:	4420      	add	r0, r4
 801ab24:	b29b      	uxth	r3, r3
 801ab26:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801ab2a:	b289      	uxth	r1, r1
 801ab2c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801ab30:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801ab32:	fb03 f901 	mul.w	r9, r3, r1
 801ab36:	011b      	lsls	r3, r3, #4
 801ab38:	f8b6 e000 	ldrh.w	lr, [r6]
 801ab3c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ab40:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801ab44:	eba3 0309 	sub.w	r3, r3, r9
 801ab48:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801ab4c:	b289      	uxth	r1, r1
 801ab4e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801ab52:	b29b      	uxth	r3, r3
 801ab54:	eba8 0801 	sub.w	r8, r8, r1
 801ab58:	435f      	muls	r7, r3
 801ab5a:	fa1f f888 	uxth.w	r8, r8
 801ab5e:	9310      	str	r3, [sp, #64]	@ 0x40
 801ab60:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab62:	fb08 770b 	mla	r7, r8, fp, r7
 801ab66:	f892 b002 	ldrb.w	fp, [r2, #2]
 801ab6a:	fb01 770b 	mla	r7, r1, fp, r7
 801ab6e:	f890 b002 	ldrb.w	fp, [r0, #2]
 801ab72:	fb09 770b 	mla	r7, r9, fp, r7
 801ab76:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801ab7a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801ab7e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801ab82:	fb1b fb03 	smulbb	fp, fp, r3
 801ab86:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ab88:	fb07 b706 	mla	r7, r7, r6, fp
 801ab8c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801ab90:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801ab94:	f89c c000 	ldrb.w	ip, [ip]
 801ab98:	b2bf      	uxth	r7, r7
 801ab9a:	435d      	muls	r5, r3
 801ab9c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab9e:	fb08 550b 	mla	r5, r8, fp, r5
 801aba2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801aba6:	fb01 550b 	mla	r5, r1, fp, r5
 801abaa:	f890 b001 	ldrb.w	fp, [r0, #1]
 801abae:	fb09 550b 	mla	r5, r9, fp, r5
 801abb2:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801abb6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801abba:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801abbe:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801abc2:	fa5f fe8e 	uxtb.w	lr, lr
 801abc6:	fb1b fb03 	smulbb	fp, fp, r3
 801abca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801abcc:	fb03 f30c 	mul.w	r3, r3, ip
 801abd0:	f892 c000 	ldrb.w	ip, [r2]
 801abd4:	fb05 b506 	mla	r5, r5, r6, fp
 801abd8:	fb08 330a 	mla	r3, r8, sl, r3
 801abdc:	b2ad      	uxth	r5, r5
 801abde:	fb01 330c 	mla	r3, r1, ip, r3
 801abe2:	f890 c000 	ldrb.w	ip, [r0]
 801abe6:	f105 0b01 	add.w	fp, r5, #1
 801abea:	fb09 3c0c 	mla	ip, r9, ip, r3
 801abee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801abf0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801abf4:	fb1e fe03 	smulbb	lr, lr, r3
 801abf8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801abfc:	1c7b      	adds	r3, r7, #1
 801abfe:	096d      	lsrs	r5, r5, #5
 801ac00:	fb0c e606 	mla	r6, ip, r6, lr
 801ac04:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801ac08:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ac0c:	b2b6      	uxth	r6, r6
 801ac0e:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801ac12:	1c77      	adds	r7, r6, #1
 801ac14:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801ac18:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ac1c:	431f      	orrs	r7, r3
 801ac1e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ac20:	433d      	orrs	r5, r7
 801ac22:	801d      	strh	r5, [r3, #0]
 801ac24:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ac26:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ac28:	3302      	adds	r3, #2
 801ac2a:	930c      	str	r3, [sp, #48]	@ 0x30
 801ac2c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ac2e:	4413      	add	r3, r2
 801ac30:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801ac32:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ac34:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ac36:	4413      	add	r3, r2
 801ac38:	9320      	str	r3, [sp, #128]	@ 0x80
 801ac3a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ac3c:	3b01      	subs	r3, #1
 801ac3e:	9311      	str	r3, [sp, #68]	@ 0x44
 801ac40:	e732      	b.n	801aaa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ac42:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ac44:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801ac46:	4433      	add	r3, r6
 801ac48:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801ac4a:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ac4c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ac4e:	4433      	add	r3, r6
 801ac50:	9320      	str	r3, [sp, #128]	@ 0x80
 801ac52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ac54:	3b01      	subs	r3, #1
 801ac56:	9309      	str	r3, [sp, #36]	@ 0x24
 801ac58:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ac5a:	3302      	adds	r3, #2
 801ac5c:	930a      	str	r3, [sp, #40]	@ 0x28
 801ac5e:	e702      	b.n	801aa66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ac60:	d027      	beq.n	801acb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801ac62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ac64:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801ac66:	3b01      	subs	r3, #1
 801ac68:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801ac6a:	fb00 5003 	mla	r0, r0, r3, r5
 801ac6e:	1400      	asrs	r0, r0, #16
 801ac70:	f53f af16 	bmi.w	801aaa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ac74:	3901      	subs	r1, #1
 801ac76:	4288      	cmp	r0, r1
 801ac78:	f6bf af12 	bge.w	801aaa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ac7c:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801ac7e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801ac80:	fb01 0303 	mla	r3, r1, r3, r0
 801ac84:	141b      	asrs	r3, r3, #16
 801ac86:	f53f af0b 	bmi.w	801aaa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ac8a:	3a01      	subs	r2, #1
 801ac8c:	4293      	cmp	r3, r2
 801ac8e:	f6bf af07 	bge.w	801aaa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ac92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ac94:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801ac98:	9311      	str	r3, [sp, #68]	@ 0x44
 801ac9a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ac9c:	930c      	str	r3, [sp, #48]	@ 0x30
 801ac9e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801aca0:	2b00      	cmp	r3, #0
 801aca2:	dc70      	bgt.n	801ad86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801aca4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aca6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801aca8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801acac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801acb0:	930a      	str	r3, [sp, #40]	@ 0x28
 801acb2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801acb4:	2b00      	cmp	r3, #0
 801acb6:	f340 8124 	ble.w	801af02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801acba:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801acbe:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801acc0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801acc4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801acc8:	eef0 6a62 	vmov.f32	s13, s5
 801accc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801acd0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801acd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801acd8:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801acdc:	eef0 6a43 	vmov.f32	s13, s6
 801ace0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ace4:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801ace8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801acec:	ee61 7a27 	vmul.f32	s15, s2, s15
 801acf0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801acf4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801acf8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801acfc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad00:	ee12 2a90 	vmov	r2, s5
 801ad04:	eef0 2a47 	vmov.f32	s5, s14
 801ad08:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad0c:	ee13 2a10 	vmov	r2, s6
 801ad10:	9321      	str	r3, [sp, #132]	@ 0x84
 801ad12:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ad14:	eeb0 3a67 	vmov.f32	s6, s15
 801ad18:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad1c:	9322      	str	r3, [sp, #136]	@ 0x88
 801ad1e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ad20:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ad22:	3b01      	subs	r3, #1
 801ad24:	930e      	str	r3, [sp, #56]	@ 0x38
 801ad26:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ad28:	bf08      	it	eq
 801ad2a:	4613      	moveq	r3, r2
 801ad2c:	9309      	str	r3, [sp, #36]	@ 0x24
 801ad2e:	e68c      	b.n	801aa4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ad30:	b149      	cbz	r1, 801ad46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801ad32:	5cb2      	ldrb	r2, [r6, r2]
 801ad34:	4628      	mov	r0, r5
 801ad36:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ad3a:	4422      	add	r2, r4
 801ad3c:	46ac      	mov	ip, r5
 801ad3e:	e6f1      	b.n	801ab24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ad40:	4628      	mov	r0, r5
 801ad42:	462a      	mov	r2, r5
 801ad44:	e6ee      	b.n	801ab24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ad46:	4628      	mov	r0, r5
 801ad48:	462a      	mov	r2, r5
 801ad4a:	e7f7      	b.n	801ad3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801ad4c:	1c47      	adds	r7, r0, #1
 801ad4e:	f53f af69 	bmi.w	801ac24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ad52:	42ba      	cmp	r2, r7
 801ad54:	f6ff af66 	blt.w	801ac24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ad58:	1c6f      	adds	r7, r5, #1
 801ad5a:	f53f af63 	bmi.w	801ac24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ad5e:	42be      	cmp	r6, r7
 801ad60:	f6ff af60 	blt.w	801ac24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ad64:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801ad66:	b236      	sxth	r6, r6
 801ad68:	b212      	sxth	r2, r2
 801ad6a:	9002      	str	r0, [sp, #8]
 801ad6c:	9601      	str	r6, [sp, #4]
 801ad6e:	9200      	str	r2, [sp, #0]
 801ad70:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801ad72:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801ad76:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801ad7a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801ad7e:	4623      	mov	r3, r4
 801ad80:	f7ff fd59 	bl	801a836 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801ad84:	e74e      	b.n	801ac24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ad86:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801ad88:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801ad8a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ad8e:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801ad90:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801ad92:	1400      	asrs	r0, r0, #16
 801ad94:	142d      	asrs	r5, r5, #16
 801ad96:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ad98:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ad9c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ada0:	fb02 5000 	mla	r0, r2, r0, r5
 801ada4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ada6:	f815 9000 	ldrb.w	r9, [r5, r0]
 801adaa:	182e      	adds	r6, r5, r0
 801adac:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801adb0:	eb04 0509 	add.w	r5, r4, r9
 801adb4:	2b00      	cmp	r3, #0
 801adb6:	f000 8096 	beq.w	801aee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801adba:	7877      	ldrb	r7, [r6, #1]
 801adbc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801adc0:	4427      	add	r7, r4
 801adc2:	2900      	cmp	r1, #0
 801adc4:	f000 8097 	beq.w	801aef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801adc8:	18b0      	adds	r0, r6, r2
 801adca:	5cb2      	ldrb	r2, [r6, r2]
 801adcc:	7840      	ldrb	r0, [r0, #1]
 801adce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801add2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801add6:	4422      	add	r2, r4
 801add8:	4420      	add	r0, r4
 801adda:	b29b      	uxth	r3, r3
 801addc:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801adde:	b289      	uxth	r1, r1
 801ade0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801ade4:	f8b6 c000 	ldrh.w	ip, [r6]
 801ade8:	fb03 f801 	mul.w	r8, r3, r1
 801adec:	011b      	lsls	r3, r3, #4
 801adee:	78be      	ldrb	r6, [r7, #2]
 801adf0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801adf4:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801adf8:	eba3 0308 	sub.w	r3, r3, r8
 801adfc:	f814 9009 	ldrb.w	r9, [r4, r9]
 801ae00:	b289      	uxth	r1, r1
 801ae02:	b29b      	uxth	r3, r3
 801ae04:	ebae 0e01 	sub.w	lr, lr, r1
 801ae08:	435e      	muls	r6, r3
 801ae0a:	fa1f fe8e 	uxth.w	lr, lr
 801ae0e:	9310      	str	r3, [sp, #64]	@ 0x40
 801ae10:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ae12:	fb0e 660b 	mla	r6, lr, fp, r6
 801ae16:	f892 b002 	ldrb.w	fp, [r2, #2]
 801ae1a:	fb01 660b 	mla	r6, r1, fp, r6
 801ae1e:	f890 b002 	ldrb.w	fp, [r0, #2]
 801ae22:	fb08 660b 	mla	r6, r8, fp, r6
 801ae26:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801ae2a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801ae2e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ae32:	fb1b fb03 	smulbb	fp, fp, r3
 801ae36:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ae38:	fb06 b60a 	mla	r6, r6, sl, fp
 801ae3c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801ae40:	787d      	ldrb	r5, [r7, #1]
 801ae42:	783f      	ldrb	r7, [r7, #0]
 801ae44:	b2b6      	uxth	r6, r6
 801ae46:	435d      	muls	r5, r3
 801ae48:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ae4a:	fb0e 550b 	mla	r5, lr, fp, r5
 801ae4e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801ae52:	fb01 550b 	mla	r5, r1, fp, r5
 801ae56:	f890 b001 	ldrb.w	fp, [r0, #1]
 801ae5a:	fb08 550b 	mla	r5, r8, fp, r5
 801ae5e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801ae62:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ae66:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801ae6a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801ae6e:	fa5f fc8c 	uxtb.w	ip, ip
 801ae72:	fb1b fb03 	smulbb	fp, fp, r3
 801ae76:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ae78:	437b      	muls	r3, r7
 801ae7a:	7817      	ldrb	r7, [r2, #0]
 801ae7c:	fb05 b50a 	mla	r5, r5, sl, fp
 801ae80:	fb0e 3309 	mla	r3, lr, r9, r3
 801ae84:	b2ad      	uxth	r5, r5
 801ae86:	fb01 3307 	mla	r3, r1, r7, r3
 801ae8a:	7807      	ldrb	r7, [r0, #0]
 801ae8c:	f105 0b01 	add.w	fp, r5, #1
 801ae90:	fb08 3707 	mla	r7, r8, r7, r3
 801ae94:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ae96:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801ae9a:	fb1c fc03 	smulbb	ip, ip, r3
 801ae9e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801aea2:	1c73      	adds	r3, r6, #1
 801aea4:	096d      	lsrs	r5, r5, #5
 801aea6:	fb07 c70a 	mla	r7, r7, sl, ip
 801aeaa:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801aeae:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801aeb2:	b2bf      	uxth	r7, r7
 801aeb4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801aeb6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801aeba:	1c7a      	adds	r2, r7, #1
 801aebc:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801aec0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aec4:	4316      	orrs	r6, r2
 801aec6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801aec8:	432e      	orrs	r6, r5
 801aeca:	f823 6b02 	strh.w	r6, [r3], #2
 801aece:	930c      	str	r3, [sp, #48]	@ 0x30
 801aed0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aed2:	4413      	add	r3, r2
 801aed4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801aed6:	931f      	str	r3, [sp, #124]	@ 0x7c
 801aed8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801aeda:	4413      	add	r3, r2
 801aedc:	9320      	str	r3, [sp, #128]	@ 0x80
 801aede:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801aee0:	3b01      	subs	r3, #1
 801aee2:	9311      	str	r3, [sp, #68]	@ 0x44
 801aee4:	e6db      	b.n	801ac9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801aee6:	b149      	cbz	r1, 801aefc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801aee8:	5cb2      	ldrb	r2, [r6, r2]
 801aeea:	4628      	mov	r0, r5
 801aeec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aef0:	4422      	add	r2, r4
 801aef2:	462f      	mov	r7, r5
 801aef4:	e771      	b.n	801adda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801aef6:	4628      	mov	r0, r5
 801aef8:	462a      	mov	r2, r5
 801aefa:	e76e      	b.n	801adda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801aefc:	4628      	mov	r0, r5
 801aefe:	462a      	mov	r2, r5
 801af00:	e7f7      	b.n	801aef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801af02:	b015      	add	sp, #84	@ 0x54
 801af04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801af08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801af08:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af0c:	880f      	ldrh	r7, [r1, #0]
 801af0e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801af12:	023c      	lsls	r4, r7, #8
 801af14:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801af18:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801af1c:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801af20:	017c      	lsls	r4, r7, #5
 801af22:	00ff      	lsls	r7, r7, #3
 801af24:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801af28:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801af2c:	b2ff      	uxtb	r7, r7
 801af2e:	ea4b 0404 	orr.w	r4, fp, r4
 801af32:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801af36:	4327      	orrs	r7, r4
 801af38:	fb05 ca0e 	mla	sl, r5, lr, ip
 801af3c:	2d00      	cmp	r5, #0
 801af3e:	9701      	str	r7, [sp, #4]
 801af40:	eb02 080a 	add.w	r8, r2, sl
 801af44:	db7e      	blt.n	801b044 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801af46:	45a9      	cmp	r9, r5
 801af48:	dd7c      	ble.n	801b044 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801af4a:	f1bc 0f00 	cmp.w	ip, #0
 801af4e:	db77      	blt.n	801b040 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801af50:	45e6      	cmp	lr, ip
 801af52:	dd75      	ble.n	801b040 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801af54:	f812 700a 	ldrb.w	r7, [r2, sl]
 801af58:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801af5c:	441f      	add	r7, r3
 801af5e:	f11c 0201 	adds.w	r2, ip, #1
 801af62:	d472      	bmi.n	801b04a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801af64:	4596      	cmp	lr, r2
 801af66:	dd70      	ble.n	801b04a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801af68:	2800      	cmp	r0, #0
 801af6a:	d06e      	beq.n	801b04a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801af6c:	f898 4001 	ldrb.w	r4, [r8, #1]
 801af70:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801af74:	441c      	add	r4, r3
 801af76:	3501      	adds	r5, #1
 801af78:	d46b      	bmi.n	801b052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801af7a:	45a9      	cmp	r9, r5
 801af7c:	dd69      	ble.n	801b052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801af7e:	2e00      	cmp	r6, #0
 801af80:	d067      	beq.n	801b052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801af82:	f1bc 0f00 	cmp.w	ip, #0
 801af86:	db62      	blt.n	801b04e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801af88:	45e6      	cmp	lr, ip
 801af8a:	dd60      	ble.n	801b04e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801af8c:	f818 500e 	ldrb.w	r5, [r8, lr]
 801af90:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801af94:	441d      	add	r5, r3
 801af96:	f11c 0201 	adds.w	r2, ip, #1
 801af9a:	d45d      	bmi.n	801b058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801af9c:	4596      	cmp	lr, r2
 801af9e:	dd5b      	ble.n	801b058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801afa0:	2800      	cmp	r0, #0
 801afa2:	d059      	beq.n	801b058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801afa4:	44c6      	add	lr, r8
 801afa6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801afaa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801afae:	4413      	add	r3, r2
 801afb0:	b280      	uxth	r0, r0
 801afb2:	f897 e002 	ldrb.w	lr, [r7, #2]
 801afb6:	b2b2      	uxth	r2, r6
 801afb8:	f897 9000 	ldrb.w	r9, [r7]
 801afbc:	787f      	ldrb	r7, [r7, #1]
 801afbe:	fb00 f602 	mul.w	r6, r0, r2
 801afc2:	0100      	lsls	r0, r0, #4
 801afc4:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801afc8:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801afcc:	1b80      	subs	r0, r0, r6
 801afce:	fa1f fc82 	uxth.w	ip, r2
 801afd2:	b282      	uxth	r2, r0
 801afd4:	78a0      	ldrb	r0, [r4, #2]
 801afd6:	eba8 080c 	sub.w	r8, r8, ip
 801afda:	4350      	muls	r0, r2
 801afdc:	fa1f f888 	uxth.w	r8, r8
 801afe0:	fb08 0e0e 	mla	lr, r8, lr, r0
 801afe4:	78a8      	ldrb	r0, [r5, #2]
 801afe6:	fb0c e000 	mla	r0, ip, r0, lr
 801afea:	f893 e002 	ldrb.w	lr, [r3, #2]
 801afee:	fb06 0e0e 	mla	lr, r6, lr, r0
 801aff2:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801aff6:	f894 e000 	ldrb.w	lr, [r4]
 801affa:	fb02 fe0e 	mul.w	lr, r2, lr
 801affe:	fb08 e909 	mla	r9, r8, r9, lr
 801b002:	f895 e000 	ldrb.w	lr, [r5]
 801b006:	fb0c 990e 	mla	r9, ip, lr, r9
 801b00a:	f893 e000 	ldrb.w	lr, [r3]
 801b00e:	785b      	ldrb	r3, [r3, #1]
 801b010:	fb06 9e0e 	mla	lr, r6, lr, r9
 801b014:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801b018:	ea4e 0e00 	orr.w	lr, lr, r0
 801b01c:	7860      	ldrb	r0, [r4, #1]
 801b01e:	4350      	muls	r0, r2
 801b020:	786a      	ldrb	r2, [r5, #1]
 801b022:	fb08 0007 	mla	r0, r8, r7, r0
 801b026:	fb0c 0202 	mla	r2, ip, r2, r0
 801b02a:	fb06 2303 	mla	r3, r6, r3, r2
 801b02e:	095b      	lsrs	r3, r3, #5
 801b030:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b034:	ea4e 0303 	orr.w	r3, lr, r3
 801b038:	800b      	strh	r3, [r1, #0]
 801b03a:	b003      	add	sp, #12
 801b03c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b040:	af01      	add	r7, sp, #4
 801b042:	e78c      	b.n	801af5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801b044:	ac01      	add	r4, sp, #4
 801b046:	4627      	mov	r7, r4
 801b048:	e795      	b.n	801af76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b04a:	ac01      	add	r4, sp, #4
 801b04c:	e793      	b.n	801af76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b04e:	ad01      	add	r5, sp, #4
 801b050:	e7a1      	b.n	801af96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801b052:	ab01      	add	r3, sp, #4
 801b054:	461d      	mov	r5, r3
 801b056:	e7ab      	b.n	801afb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801b058:	ab01      	add	r3, sp, #4
 801b05a:	e7a9      	b.n	801afb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801b05c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b05c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b060:	b08f      	sub	sp, #60	@ 0x3c
 801b062:	920c      	str	r2, [sp, #48]	@ 0x30
 801b064:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801b066:	900d      	str	r0, [sp, #52]	@ 0x34
 801b068:	910a      	str	r1, [sp, #40]	@ 0x28
 801b06a:	6850      	ldr	r0, [r2, #4]
 801b06c:	9306      	str	r3, [sp, #24]
 801b06e:	6812      	ldr	r2, [r2, #0]
 801b070:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801b074:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801b078:	fb00 1303 	mla	r3, r0, r3, r1
 801b07c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b080:	9307      	str	r3, [sp, #28]
 801b082:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b084:	681b      	ldr	r3, [r3, #0]
 801b086:	9308      	str	r3, [sp, #32]
 801b088:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b08a:	685c      	ldr	r4, [r3, #4]
 801b08c:	3404      	adds	r4, #4
 801b08e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b090:	2b00      	cmp	r3, #0
 801b092:	dc03      	bgt.n	801b09c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b094:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b096:	2b00      	cmp	r3, #0
 801b098:	f340 81d5 	ble.w	801b446 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801b09c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b09e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b0a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b0a6:	1e48      	subs	r0, r1, #1
 801b0a8:	1e56      	subs	r6, r2, #1
 801b0aa:	9b06      	ldr	r3, [sp, #24]
 801b0ac:	2b00      	cmp	r3, #0
 801b0ae:	f340 80b6 	ble.w	801b21e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801b0b2:	ea5f 472b 	movs.w	r7, fp, asr #16
 801b0b6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b0ba:	d406      	bmi.n	801b0ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b0bc:	4287      	cmp	r7, r0
 801b0be:	da04      	bge.n	801b0ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b0c0:	2b00      	cmp	r3, #0
 801b0c2:	db02      	blt.n	801b0ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b0c4:	42b3      	cmp	r3, r6
 801b0c6:	f2c0 80ab 	blt.w	801b220 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801b0ca:	3701      	adds	r7, #1
 801b0cc:	f100 809c 	bmi.w	801b208 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801b0d0:	42b9      	cmp	r1, r7
 801b0d2:	f2c0 8099 	blt.w	801b208 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801b0d6:	3301      	adds	r3, #1
 801b0d8:	f100 8096 	bmi.w	801b208 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801b0dc:	429a      	cmp	r2, r3
 801b0de:	f2c0 8093 	blt.w	801b208 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801b0e2:	9b06      	ldr	r3, [sp, #24]
 801b0e4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b0e6:	9b07      	ldr	r3, [sp, #28]
 801b0e8:	9309      	str	r3, [sp, #36]	@ 0x24
 801b0ea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b0ec:	2b00      	cmp	r3, #0
 801b0ee:	f340 80b4 	ble.w	801b25a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801b0f2:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801b0f4:	142e      	asrs	r6, r5, #16
 801b0f6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b0f8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b0fc:	68c7      	ldr	r7, [r0, #12]
 801b0fe:	ea5f 402b 	movs.w	r0, fp, asr #16
 801b102:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b106:	6892      	ldr	r2, [r2, #8]
 801b108:	f100 80fb 	bmi.w	801b302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801b10c:	f102 3cff 	add.w	ip, r2, #4294967295
 801b110:	4560      	cmp	r0, ip
 801b112:	f280 80f6 	bge.w	801b302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801b116:	2e00      	cmp	r6, #0
 801b118:	f2c0 80f3 	blt.w	801b302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801b11c:	f107 3cff 	add.w	ip, r7, #4294967295
 801b120:	4566      	cmp	r6, ip
 801b122:	f280 80ee 	bge.w	801b302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801b126:	b212      	sxth	r2, r2
 801b128:	fb06 0002 	mla	r0, r6, r2, r0
 801b12c:	9e08      	ldr	r6, [sp, #32]
 801b12e:	1837      	adds	r7, r6, r0
 801b130:	5c30      	ldrb	r0, [r6, r0]
 801b132:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801b136:	eb04 0c08 	add.w	ip, r4, r8
 801b13a:	2b00      	cmp	r3, #0
 801b13c:	f000 80d3 	beq.w	801b2e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801b140:	787e      	ldrb	r6, [r7, #1]
 801b142:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b146:	4426      	add	r6, r4
 801b148:	2900      	cmp	r1, #0
 801b14a:	f000 80d4 	beq.w	801b2f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801b14e:	18b8      	adds	r0, r7, r2
 801b150:	5cba      	ldrb	r2, [r7, r2]
 801b152:	7840      	ldrb	r0, [r0, #1]
 801b154:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b158:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b15c:	4422      	add	r2, r4
 801b15e:	4420      	add	r0, r4
 801b160:	b29b      	uxth	r3, r3
 801b162:	78b7      	ldrb	r7, [r6, #2]
 801b164:	b289      	uxth	r1, r1
 801b166:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b16a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b16e:	fb03 f901 	mul.w	r9, r3, r1
 801b172:	011b      	lsls	r3, r3, #4
 801b174:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b178:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b17c:	eba3 0309 	sub.w	r3, r3, r9
 801b180:	b289      	uxth	r1, r1
 801b182:	b29b      	uxth	r3, r3
 801b184:	ebae 0e01 	sub.w	lr, lr, r1
 801b188:	435f      	muls	r7, r3
 801b18a:	fa1f fe8e 	uxth.w	lr, lr
 801b18e:	fb0e 770a 	mla	r7, lr, sl, r7
 801b192:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b196:	fb01 770a 	mla	r7, r1, sl, r7
 801b19a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b19e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b1a2:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b1a6:	f896 8000 	ldrb.w	r8, [r6]
 801b1aa:	7876      	ldrb	r6, [r6, #1]
 801b1ac:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801b1b0:	fb03 f808 	mul.w	r8, r3, r8
 801b1b4:	4373      	muls	r3, r6
 801b1b6:	fb0e 8807 	mla	r8, lr, r7, r8
 801b1ba:	7817      	ldrb	r7, [r2, #0]
 801b1bc:	fb0e 330c 	mla	r3, lr, ip, r3
 801b1c0:	fb01 8807 	mla	r8, r1, r7, r8
 801b1c4:	7807      	ldrb	r7, [r0, #0]
 801b1c6:	fb09 8707 	mla	r7, r9, r7, r8
 801b1ca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b1ce:	ea47 070a 	orr.w	r7, r7, sl
 801b1d2:	f892 a001 	ldrb.w	sl, [r2, #1]
 801b1d6:	fb01 310a 	mla	r1, r1, sl, r3
 801b1da:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b1de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b1e0:	fb09 1a0a 	mla	sl, r9, sl, r1
 801b1e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b1e8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b1ec:	ea47 070a 	orr.w	r7, r7, sl
 801b1f0:	801f      	strh	r7, [r3, #0]
 801b1f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b1f4:	3302      	adds	r3, #2
 801b1f6:	9309      	str	r3, [sp, #36]	@ 0x24
 801b1f8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b1fa:	449b      	add	fp, r3
 801b1fc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b1fe:	441d      	add	r5, r3
 801b200:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b202:	3b01      	subs	r3, #1
 801b204:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b206:	e770      	b.n	801b0ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b208:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b20a:	449b      	add	fp, r3
 801b20c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b20e:	441d      	add	r5, r3
 801b210:	9b06      	ldr	r3, [sp, #24]
 801b212:	3b01      	subs	r3, #1
 801b214:	9306      	str	r3, [sp, #24]
 801b216:	9b07      	ldr	r3, [sp, #28]
 801b218:	3302      	adds	r3, #2
 801b21a:	9307      	str	r3, [sp, #28]
 801b21c:	e745      	b.n	801b0aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801b21e:	d023      	beq.n	801b268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801b220:	9b06      	ldr	r3, [sp, #24]
 801b222:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801b224:	3b01      	subs	r3, #1
 801b226:	fb00 b003 	mla	r0, r0, r3, fp
 801b22a:	1400      	asrs	r0, r0, #16
 801b22c:	f53f af59 	bmi.w	801b0e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b230:	3901      	subs	r1, #1
 801b232:	4288      	cmp	r0, r1
 801b234:	f6bf af55 	bge.w	801b0e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b238:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801b23a:	fb01 5303 	mla	r3, r1, r3, r5
 801b23e:	141b      	asrs	r3, r3, #16
 801b240:	f53f af4f 	bmi.w	801b0e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b244:	3a01      	subs	r2, #1
 801b246:	4293      	cmp	r3, r2
 801b248:	f6bf af4b 	bge.w	801b0e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b24c:	9b06      	ldr	r3, [sp, #24]
 801b24e:	9309      	str	r3, [sp, #36]	@ 0x24
 801b250:	9b07      	ldr	r3, [sp, #28]
 801b252:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b254:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b256:	2b00      	cmp	r3, #0
 801b258:	dc70      	bgt.n	801b33c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801b25a:	9b06      	ldr	r3, [sp, #24]
 801b25c:	9a07      	ldr	r2, [sp, #28]
 801b25e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b262:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b266:	9307      	str	r3, [sp, #28]
 801b268:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b26a:	2b00      	cmp	r3, #0
 801b26c:	f340 80eb 	ble.w	801b446 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801b270:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b274:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b276:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b27a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b27e:	eef0 6a62 	vmov.f32	s13, s5
 801b282:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b286:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b28a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b28e:	ee16 ba90 	vmov	fp, s13
 801b292:	eef0 6a43 	vmov.f32	s13, s6
 801b296:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b29a:	ee16 5a90 	vmov	r5, s13
 801b29e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b2a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b2a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b2aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b2ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b2b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b2b6:	ee12 2a90 	vmov	r2, s5
 801b2ba:	eef0 2a47 	vmov.f32	s5, s14
 801b2be:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2c2:	ee13 2a10 	vmov	r2, s6
 801b2c6:	931b      	str	r3, [sp, #108]	@ 0x6c
 801b2c8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b2ca:	eeb0 3a67 	vmov.f32	s6, s15
 801b2ce:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2d2:	931c      	str	r3, [sp, #112]	@ 0x70
 801b2d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b2d6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801b2d8:	3b01      	subs	r3, #1
 801b2da:	930a      	str	r3, [sp, #40]	@ 0x28
 801b2dc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b2de:	bf08      	it	eq
 801b2e0:	4613      	moveq	r3, r2
 801b2e2:	9306      	str	r3, [sp, #24]
 801b2e4:	e6d3      	b.n	801b08e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b2e6:	b149      	cbz	r1, 801b2fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801b2e8:	5cba      	ldrb	r2, [r7, r2]
 801b2ea:	4660      	mov	r0, ip
 801b2ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b2f0:	4422      	add	r2, r4
 801b2f2:	4666      	mov	r6, ip
 801b2f4:	e734      	b.n	801b160 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801b2f6:	4660      	mov	r0, ip
 801b2f8:	4662      	mov	r2, ip
 801b2fa:	e731      	b.n	801b160 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801b2fc:	4660      	mov	r0, ip
 801b2fe:	4662      	mov	r2, ip
 801b300:	e7f7      	b.n	801b2f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801b302:	f110 0c01 	adds.w	ip, r0, #1
 801b306:	f53f af74 	bmi.w	801b1f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b30a:	4562      	cmp	r2, ip
 801b30c:	f6ff af71 	blt.w	801b1f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b310:	f116 0c01 	adds.w	ip, r6, #1
 801b314:	f53f af6d 	bmi.w	801b1f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b318:	4567      	cmp	r7, ip
 801b31a:	f6ff af6a 	blt.w	801b1f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b31e:	b23f      	sxth	r7, r7
 801b320:	b212      	sxth	r2, r2
 801b322:	9701      	str	r7, [sp, #4]
 801b324:	9200      	str	r2, [sp, #0]
 801b326:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801b32a:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801b32e:	4623      	mov	r3, r4
 801b330:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801b332:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b336:	f7ff fde7 	bl	801af08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801b33a:	e75a      	b.n	801b1f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b33c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b33e:	ea4f 462b 	mov.w	r6, fp, asr #16
 801b342:	1428      	asrs	r0, r5, #16
 801b344:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b348:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b34c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b350:	fb02 6000 	mla	r0, r2, r0, r6
 801b354:	9e08      	ldr	r6, [sp, #32]
 801b356:	f816 8000 	ldrb.w	r8, [r6, r0]
 801b35a:	1837      	adds	r7, r6, r0
 801b35c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b360:	eb04 0c08 	add.w	ip, r4, r8
 801b364:	2b00      	cmp	r3, #0
 801b366:	d060      	beq.n	801b42a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801b368:	787e      	ldrb	r6, [r7, #1]
 801b36a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b36e:	4426      	add	r6, r4
 801b370:	2900      	cmp	r1, #0
 801b372:	d062      	beq.n	801b43a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801b374:	18b8      	adds	r0, r7, r2
 801b376:	5cba      	ldrb	r2, [r7, r2]
 801b378:	7840      	ldrb	r0, [r0, #1]
 801b37a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b37e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b382:	4422      	add	r2, r4
 801b384:	4420      	add	r0, r4
 801b386:	b29b      	uxth	r3, r3
 801b388:	78b7      	ldrb	r7, [r6, #2]
 801b38a:	b289      	uxth	r1, r1
 801b38c:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b390:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b394:	fb03 f901 	mul.w	r9, r3, r1
 801b398:	011b      	lsls	r3, r3, #4
 801b39a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b39e:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b3a2:	eba3 0309 	sub.w	r3, r3, r9
 801b3a6:	b289      	uxth	r1, r1
 801b3a8:	b29b      	uxth	r3, r3
 801b3aa:	ebae 0e01 	sub.w	lr, lr, r1
 801b3ae:	435f      	muls	r7, r3
 801b3b0:	fa1f fe8e 	uxth.w	lr, lr
 801b3b4:	fb0e 770a 	mla	r7, lr, sl, r7
 801b3b8:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b3bc:	fb01 770a 	mla	r7, r1, sl, r7
 801b3c0:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b3c4:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b3c8:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b3cc:	f896 8000 	ldrb.w	r8, [r6]
 801b3d0:	7876      	ldrb	r6, [r6, #1]
 801b3d2:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801b3d6:	fb03 f808 	mul.w	r8, r3, r8
 801b3da:	4373      	muls	r3, r6
 801b3dc:	7856      	ldrb	r6, [r2, #1]
 801b3de:	fb0e 8807 	mla	r8, lr, r7, r8
 801b3e2:	7817      	ldrb	r7, [r2, #0]
 801b3e4:	fb0e 330c 	mla	r3, lr, ip, r3
 801b3e8:	fb01 8807 	mla	r8, r1, r7, r8
 801b3ec:	7807      	ldrb	r7, [r0, #0]
 801b3ee:	fb01 3306 	mla	r3, r1, r6, r3
 801b3f2:	fb09 8707 	mla	r7, r9, r7, r8
 801b3f6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b3fa:	ea47 070a 	orr.w	r7, r7, sl
 801b3fe:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b402:	fb09 3a0a 	mla	sl, r9, sl, r3
 801b406:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b408:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b40c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b410:	ea47 070a 	orr.w	r7, r7, sl
 801b414:	f823 7b02 	strh.w	r7, [r3], #2
 801b418:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b41a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b41c:	449b      	add	fp, r3
 801b41e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b420:	441d      	add	r5, r3
 801b422:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b424:	3b01      	subs	r3, #1
 801b426:	9309      	str	r3, [sp, #36]	@ 0x24
 801b428:	e714      	b.n	801b254 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801b42a:	b149      	cbz	r1, 801b440 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801b42c:	5cba      	ldrb	r2, [r7, r2]
 801b42e:	4660      	mov	r0, ip
 801b430:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b434:	4422      	add	r2, r4
 801b436:	4666      	mov	r6, ip
 801b438:	e7a5      	b.n	801b386 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801b43a:	4660      	mov	r0, ip
 801b43c:	4662      	mov	r2, ip
 801b43e:	e7a2      	b.n	801b386 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801b440:	4660      	mov	r0, ip
 801b442:	4662      	mov	r2, ip
 801b444:	e7f7      	b.n	801b436 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801b446:	b00f      	add	sp, #60	@ 0x3c
 801b448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b44c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801b44c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b450:	b085      	sub	sp, #20
 801b452:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801b456:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801b45a:	9102      	str	r1, [sp, #8]
 801b45c:	2c00      	cmp	r4, #0
 801b45e:	fb04 710c 	mla	r1, r4, ip, r7
 801b462:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801b466:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801b46a:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801b46e:	eb02 0e01 	add.w	lr, r2, r1
 801b472:	f2c0 8122 	blt.w	801b6ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b476:	45a0      	cmp	r8, r4
 801b478:	f340 811f 	ble.w	801b6ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b47c:	2f00      	cmp	r7, #0
 801b47e:	f2c0 811a 	blt.w	801b6b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b482:	45bc      	cmp	ip, r7
 801b484:	f340 8117 	ble.w	801b6b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b488:	5c52      	ldrb	r2, [r2, r1]
 801b48a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801b48e:	1c7a      	adds	r2, r7, #1
 801b490:	f100 8116 	bmi.w	801b6c0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b494:	4594      	cmp	ip, r2
 801b496:	f340 8113 	ble.w	801b6c0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b49a:	2e00      	cmp	r6, #0
 801b49c:	f000 8112 	beq.w	801b6c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801b4a0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b4a4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b4a8:	3401      	adds	r4, #1
 801b4aa:	f100 810f 	bmi.w	801b6cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b4ae:	45a0      	cmp	r8, r4
 801b4b0:	f340 810c 	ble.w	801b6cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b4b4:	2800      	cmp	r0, #0
 801b4b6:	f000 810c 	beq.w	801b6d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801b4ba:	2f00      	cmp	r7, #0
 801b4bc:	f2c0 8104 	blt.w	801b6c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b4c0:	45bc      	cmp	ip, r7
 801b4c2:	f340 8101 	ble.w	801b6c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b4c6:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801b4ca:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801b4ce:	3701      	adds	r7, #1
 801b4d0:	f100 8102 	bmi.w	801b6d8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b4d4:	45bc      	cmp	ip, r7
 801b4d6:	f340 80ff 	ble.w	801b6d8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b4da:	2e00      	cmp	r6, #0
 801b4dc:	f000 80fe 	beq.w	801b6dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801b4e0:	44f4      	add	ip, lr
 801b4e2:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801b4e6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801b4ea:	b2b6      	uxth	r6, r6
 801b4ec:	b280      	uxth	r0, r0
 801b4ee:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b4f2:	fb00 fe06 	mul.w	lr, r0, r6
 801b4f6:	0136      	lsls	r6, r6, #4
 801b4f8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b4fc:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b500:	eba6 070e 	sub.w	r7, r6, lr
 801b504:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801b508:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b50c:	b280      	uxth	r0, r0
 801b50e:	b2bf      	uxth	r7, r7
 801b510:	1a1b      	subs	r3, r3, r0
 801b512:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b516:	fb0a f607 	mul.w	r6, sl, r7
 801b51a:	b29b      	uxth	r3, r3
 801b51c:	fb0b 6603 	mla	r6, fp, r3, r6
 801b520:	fb00 6609 	mla	r6, r0, r9, r6
 801b524:	fb0e 6608 	mla	r6, lr, r8, r6
 801b528:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b52c:	9600      	str	r6, [sp, #0]
 801b52e:	2e00      	cmp	r6, #0
 801b530:	f000 80be 	beq.w	801b6b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801b534:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b538:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801b53c:	9e02      	ldr	r6, [sp, #8]
 801b53e:	fb0b fc0c 	mul.w	ip, fp, ip
 801b542:	fb0b f505 	mul.w	r5, fp, r5
 801b546:	8836      	ldrh	r6, [r6, #0]
 801b548:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b54c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b550:	9501      	str	r5, [sp, #4]
 801b552:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801b556:	44dc      	add	ip, fp
 801b558:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b55c:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801b560:	9503      	str	r5, [sp, #12]
 801b562:	9d01      	ldr	r5, [sp, #4]
 801b564:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801b568:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b56c:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801b570:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b574:	fb0a fc0c 	mul.w	ip, sl, ip
 801b578:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b57c:	fb0a fa01 	mul.w	sl, sl, r1
 801b580:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b584:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b588:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801b58c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b590:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b594:	4465      	add	r5, ip
 801b596:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b59a:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801b59e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b5a2:	fb09 fc0c 	mul.w	ip, r9, ip
 801b5a6:	0a2d      	lsrs	r5, r5, #8
 801b5a8:	fb09 f904 	mul.w	r9, r9, r4
 801b5ac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b5b0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b5b4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b5b8:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801b5bc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b5c0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b5c4:	437d      	muls	r5, r7
 801b5c6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b5ca:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801b5ce:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b5d2:	4461      	add	r1, ip
 801b5d4:	fb08 f404 	mul.w	r4, r8, r4
 801b5d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b5dc:	fb08 f802 	mul.w	r8, r8, r2
 801b5e0:	0a09      	lsrs	r1, r1, #8
 801b5e2:	0a22      	lsrs	r2, r4, #8
 801b5e4:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801b5e8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b5ec:	fb07 f70a 	mul.w	r7, r7, sl
 801b5f0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b5f4:	4414      	add	r4, r2
 801b5f6:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801b5fa:	0a24      	lsrs	r4, r4, #8
 801b5fc:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b600:	9a03      	ldr	r2, [sp, #12]
 801b602:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801b606:	fb02 5503 	mla	r5, r2, r3, r5
 801b60a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b60e:	9a00      	ldr	r2, [sp, #0]
 801b610:	fb04 540e 	mla	r4, r4, lr, r5
 801b614:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801b618:	1235      	asrs	r5, r6, #8
 801b61a:	fb01 4100 	mla	r1, r1, r0, r4
 801b61e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b622:	0a09      	lsrs	r1, r1, #8
 801b624:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801b628:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801b62c:	fb03 7101 	mla	r1, r3, r1, r7
 801b630:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b634:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801b638:	fb00 e101 	mla	r1, r0, r1, lr
 801b63c:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801b640:	b287      	uxth	r7, r0
 801b642:	0a09      	lsrs	r1, r1, #8
 801b644:	437a      	muls	r2, r7
 801b646:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b64a:	1c53      	adds	r3, r2, #1
 801b64c:	4321      	orrs	r1, r4
 801b64e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b652:	0c0a      	lsrs	r2, r1, #16
 801b654:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801b658:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b65c:	b2c8      	uxtb	r0, r1
 801b65e:	fb12 f207 	smulbb	r2, r2, r7
 801b662:	fb14 f407 	smulbb	r4, r4, r7
 801b666:	b2db      	uxtb	r3, r3
 801b668:	fb10 f007 	smulbb	r0, r0, r7
 801b66c:	fb05 2503 	mla	r5, r5, r3, r2
 801b670:	10f2      	asrs	r2, r6, #3
 801b672:	00f6      	lsls	r6, r6, #3
 801b674:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b678:	b2ad      	uxth	r5, r5
 801b67a:	b2f6      	uxtb	r6, r6
 801b67c:	fb02 4203 	mla	r2, r2, r3, r4
 801b680:	fb06 0303 	mla	r3, r6, r3, r0
 801b684:	b294      	uxth	r4, r2
 801b686:	b299      	uxth	r1, r3
 801b688:	1c6b      	adds	r3, r5, #1
 801b68a:	1c62      	adds	r2, r4, #1
 801b68c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b690:	1c4b      	adds	r3, r1, #1
 801b692:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b696:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b69a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b69e:	0952      	lsrs	r2, r2, #5
 801b6a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b6a4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b6a8:	432b      	orrs	r3, r5
 801b6aa:	4313      	orrs	r3, r2
 801b6ac:	9a02      	ldr	r2, [sp, #8]
 801b6ae:	8013      	strh	r3, [r2, #0]
 801b6b0:	b005      	add	sp, #20
 801b6b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b6b6:	2500      	movs	r5, #0
 801b6b8:	e6e9      	b.n	801b48e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801b6ba:	2100      	movs	r1, #0
 801b6bc:	460d      	mov	r5, r1
 801b6be:	e6f3      	b.n	801b4a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b6c0:	2100      	movs	r1, #0
 801b6c2:	e6f1      	b.n	801b4a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b6c4:	4631      	mov	r1, r6
 801b6c6:	e6ef      	b.n	801b4a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b6c8:	2400      	movs	r4, #0
 801b6ca:	e700      	b.n	801b4ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801b6cc:	2200      	movs	r2, #0
 801b6ce:	4614      	mov	r4, r2
 801b6d0:	e70b      	b.n	801b4ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b6d2:	4602      	mov	r2, r0
 801b6d4:	4604      	mov	r4, r0
 801b6d6:	e708      	b.n	801b4ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b6d8:	2200      	movs	r2, #0
 801b6da:	e706      	b.n	801b4ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b6dc:	4632      	mov	r2, r6
 801b6de:	e704      	b.n	801b4ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801b6e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b6e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6e4:	b09f      	sub	sp, #124	@ 0x7c
 801b6e6:	921b      	str	r2, [sp, #108]	@ 0x6c
 801b6e8:	9309      	str	r3, [sp, #36]	@ 0x24
 801b6ea:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801b6ec:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801b6f0:	901d      	str	r0, [sp, #116]	@ 0x74
 801b6f2:	931c      	str	r3, [sp, #112]	@ 0x70
 801b6f4:	6850      	ldr	r0, [r2, #4]
 801b6f6:	9119      	str	r1, [sp, #100]	@ 0x64
 801b6f8:	6812      	ldr	r2, [r2, #0]
 801b6fa:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801b6fc:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801b700:	fb00 1303 	mla	r3, r0, r3, r1
 801b704:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b708:	930c      	str	r3, [sp, #48]	@ 0x30
 801b70a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b70c:	681b      	ldr	r3, [r3, #0]
 801b70e:	9312      	str	r3, [sp, #72]	@ 0x48
 801b710:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b712:	685e      	ldr	r6, [r3, #4]
 801b714:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801b718:	3604      	adds	r6, #4
 801b71a:	930d      	str	r3, [sp, #52]	@ 0x34
 801b71c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b71e:	2b00      	cmp	r3, #0
 801b720:	dc03      	bgt.n	801b72a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b722:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b724:	2b00      	cmp	r3, #0
 801b726:	f340 8387 	ble.w	801be38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801b72a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b72c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b730:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b734:	1e48      	subs	r0, r1, #1
 801b736:	1e57      	subs	r7, r2, #1
 801b738:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b73a:	2b00      	cmp	r3, #0
 801b73c:	f340 8194 	ble.w	801ba68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801b740:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b742:	142b      	asrs	r3, r5, #16
 801b744:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b748:	d406      	bmi.n	801b758 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b74a:	4584      	cmp	ip, r0
 801b74c:	da04      	bge.n	801b758 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b74e:	2b00      	cmp	r3, #0
 801b750:	db02      	blt.n	801b758 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b752:	42bb      	cmp	r3, r7
 801b754:	f2c0 8189 	blt.w	801ba6a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b758:	f11c 0c01 	adds.w	ip, ip, #1
 801b75c:	f100 8177 	bmi.w	801ba4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801b760:	4561      	cmp	r1, ip
 801b762:	f2c0 8174 	blt.w	801ba4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801b766:	3301      	adds	r3, #1
 801b768:	f100 8171 	bmi.w	801ba4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801b76c:	429a      	cmp	r2, r3
 801b76e:	f2c0 816e 	blt.w	801ba4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801b772:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b774:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801b776:	931a      	str	r3, [sp, #104]	@ 0x68
 801b778:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b77a:	2b00      	cmp	r3, #0
 801b77c:	f340 8193 	ble.w	801baa6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801b780:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b782:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b786:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b78a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b78e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b790:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801b794:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b796:	141b      	asrs	r3, r3, #16
 801b798:	f100 81d6 	bmi.w	801bb48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801b79c:	f100 38ff 	add.w	r8, r0, #4294967295
 801b7a0:	4543      	cmp	r3, r8
 801b7a2:	f280 81d1 	bge.w	801bb48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801b7a6:	f1bc 0f00 	cmp.w	ip, #0
 801b7aa:	f2c0 81cd 	blt.w	801bb48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801b7ae:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b7b2:	45c4      	cmp	ip, r8
 801b7b4:	f280 81c8 	bge.w	801bb48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801b7b8:	b200      	sxth	r0, r0
 801b7ba:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b7bc:	fb0c 3300 	mla	r3, ip, r0, r3
 801b7c0:	eb04 0803 	add.w	r8, r4, r3
 801b7c4:	5ce3      	ldrb	r3, [r4, r3]
 801b7c6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b7ca:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b7ce:	2a00      	cmp	r2, #0
 801b7d0:	f000 81af 	beq.w	801bb32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b7d4:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b7d8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b7dc:	940e      	str	r4, [sp, #56]	@ 0x38
 801b7de:	0e24      	lsrs	r4, r4, #24
 801b7e0:	9415      	str	r4, [sp, #84]	@ 0x54
 801b7e2:	b179      	cbz	r1, 801b804 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801b7e4:	eb08 0c00 	add.w	ip, r8, r0
 801b7e8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b7ec:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b7f0:	900a      	str	r0, [sp, #40]	@ 0x28
 801b7f2:	0e00      	lsrs	r0, r0, #24
 801b7f4:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b7f6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801b7fa:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b7fe:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b800:	0e00      	lsrs	r0, r0, #24
 801b802:	9016      	str	r0, [sp, #88]	@ 0x58
 801b804:	b292      	uxth	r2, r2
 801b806:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b808:	b289      	uxth	r1, r1
 801b80a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b80c:	fb02 f901 	mul.w	r9, r2, r1
 801b810:	0112      	lsls	r2, r2, #4
 801b812:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b816:	eba2 0809 	sub.w	r8, r2, r9
 801b81a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b81e:	b289      	uxth	r1, r1
 801b820:	fa1f f888 	uxth.w	r8, r8
 801b824:	1a52      	subs	r2, r2, r1
 801b826:	fb08 f000 	mul.w	r0, r8, r0
 801b82a:	b292      	uxth	r2, r2
 801b82c:	fb02 000e 	mla	r0, r2, lr, r0
 801b830:	fb01 0004 	mla	r0, r1, r4, r0
 801b834:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b836:	fb09 0004 	mla	r0, r9, r4, r0
 801b83a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b83e:	2800      	cmp	r0, #0
 801b840:	f000 80fa 	beq.w	801ba38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b844:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801b848:	d01b      	beq.n	801b882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801b84a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b84e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b852:	fb0e fa0a 	mul.w	sl, lr, sl
 801b856:	fb0e fe03 	mul.w	lr, lr, r3
 801b85a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b85e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b862:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801b866:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b86a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b86e:	4453      	add	r3, sl
 801b870:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b874:	0a1b      	lsrs	r3, r3, #8
 801b876:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b87a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b87e:	ea43 030c 	orr.w	r3, r3, ip
 801b882:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b884:	2cff      	cmp	r4, #255	@ 0xff
 801b886:	d021      	beq.n	801b8cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801b888:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b88a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b88e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b890:	fb04 fb0b 	mul.w	fp, r4, fp
 801b894:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b896:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b89a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b89c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b8a0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b8a4:	fb04 fa0a 	mul.w	sl, r4, sl
 801b8a8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b8ac:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b8b0:	44de      	add	lr, fp
 801b8b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b8b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b8ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b8be:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b8c2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b8c6:	ea4e 040a 	orr.w	r4, lr, sl
 801b8ca:	940e      	str	r4, [sp, #56]	@ 0x38
 801b8cc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b8ce:	2cff      	cmp	r4, #255	@ 0xff
 801b8d0:	d021      	beq.n	801b916 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b8d2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b8d4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b8d8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b8da:	fb04 fb0b 	mul.w	fp, r4, fp
 801b8de:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b8e0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b8e4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b8e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b8ea:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b8ee:	fb04 fa0a 	mul.w	sl, r4, sl
 801b8f2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b8f6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b8fa:	44de      	add	lr, fp
 801b8fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b900:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b904:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b908:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b90c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b910:	ea4e 040a 	orr.w	r4, lr, sl
 801b914:	940a      	str	r4, [sp, #40]	@ 0x28
 801b916:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b918:	2cff      	cmp	r4, #255	@ 0xff
 801b91a:	d021      	beq.n	801b960 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801b91c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b91e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b922:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b924:	fb04 fb0b 	mul.w	fp, r4, fp
 801b928:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b92a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b92e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b930:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b934:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b938:	fb04 fa0a 	mul.w	sl, r4, sl
 801b93c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b940:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b944:	44de      	add	lr, fp
 801b946:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b94a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b94e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b952:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b956:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b95a:	ea4e 040a 	orr.w	r4, lr, sl
 801b95e:	940f      	str	r4, [sp, #60]	@ 0x3c
 801b960:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b962:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801b966:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b96a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b96e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b970:	fb08 fc0c 	mul.w	ip, r8, ip
 801b974:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b978:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b97c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b97e:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b982:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b986:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b988:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b98c:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801b990:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b992:	fb08 f80e 	mul.w	r8, r8, lr
 801b996:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b99a:	fb02 8303 	mla	r3, r2, r3, r8
 801b99e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b9a0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b9a4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b9a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b9aa:	fb01 330a 	mla	r3, r1, sl, r3
 801b9ae:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801b9b2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801b9b4:	fb09 3901 	mla	r9, r9, r1, r3
 801b9b8:	883b      	ldrh	r3, [r7, #0]
 801b9ba:	4342      	muls	r2, r0
 801b9bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b9c0:	1c50      	adds	r0, r2, #1
 801b9c2:	1219      	asrs	r1, r3, #8
 801b9c4:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b9c8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b9cc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b9d0:	ea4c 0c09 	orr.w	ip, ip, r9
 801b9d4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b9d8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b9dc:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b9e0:	b2c0      	uxtb	r0, r0
 801b9e2:	fb12 f204 	smulbb	r2, r2, r4
 801b9e6:	fa5f fc8c 	uxtb.w	ip, ip
 801b9ea:	fb1e fe04 	smulbb	lr, lr, r4
 801b9ee:	fb01 2100 	mla	r1, r1, r0, r2
 801b9f2:	10da      	asrs	r2, r3, #3
 801b9f4:	fb1c fc04 	smulbb	ip, ip, r4
 801b9f8:	00db      	lsls	r3, r3, #3
 801b9fa:	b289      	uxth	r1, r1
 801b9fc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ba00:	b2db      	uxtb	r3, r3
 801ba02:	fb02 e200 	mla	r2, r2, r0, lr
 801ba06:	fb03 c300 	mla	r3, r3, r0, ip
 801ba0a:	b292      	uxth	r2, r2
 801ba0c:	fa1f fc83 	uxth.w	ip, r3
 801ba10:	1c4b      	adds	r3, r1, #1
 801ba12:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ba16:	f10c 0301 	add.w	r3, ip, #1
 801ba1a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ba1e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801ba22:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ba26:	430b      	orrs	r3, r1
 801ba28:	1c51      	adds	r1, r2, #1
 801ba2a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ba2e:	0952      	lsrs	r2, r2, #5
 801ba30:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ba34:	4313      	orrs	r3, r2
 801ba36:	803b      	strh	r3, [r7, #0]
 801ba38:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801ba3a:	3702      	adds	r7, #2
 801ba3c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801ba3e:	441a      	add	r2, r3
 801ba40:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ba42:	441d      	add	r5, r3
 801ba44:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801ba46:	9229      	str	r2, [sp, #164]	@ 0xa4
 801ba48:	3b01      	subs	r3, #1
 801ba4a:	931a      	str	r3, [sp, #104]	@ 0x68
 801ba4c:	e694      	b.n	801b778 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ba4e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801ba50:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801ba52:	441c      	add	r4, r3
 801ba54:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ba56:	441d      	add	r5, r3
 801ba58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ba5a:	9429      	str	r4, [sp, #164]	@ 0xa4
 801ba5c:	3b01      	subs	r3, #1
 801ba5e:	9309      	str	r3, [sp, #36]	@ 0x24
 801ba60:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ba62:	3302      	adds	r3, #2
 801ba64:	930c      	str	r3, [sp, #48]	@ 0x30
 801ba66:	e667      	b.n	801b738 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ba68:	d024      	beq.n	801bab4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801ba6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ba6c:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801ba6e:	3b01      	subs	r3, #1
 801ba70:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801ba72:	fb00 4003 	mla	r0, r0, r3, r4
 801ba76:	1400      	asrs	r0, r0, #16
 801ba78:	f53f ae7b 	bmi.w	801b772 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ba7c:	3901      	subs	r1, #1
 801ba7e:	4288      	cmp	r0, r1
 801ba80:	f6bf ae77 	bge.w	801b772 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ba84:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801ba86:	fb01 5303 	mla	r3, r1, r3, r5
 801ba8a:	141b      	asrs	r3, r3, #16
 801ba8c:	f53f ae71 	bmi.w	801b772 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ba90:	3a01      	subs	r2, #1
 801ba92:	4293      	cmp	r3, r2
 801ba94:	f6bf ae6d 	bge.w	801b772 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ba98:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801ba9c:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801baa0:	f1bb 0f00 	cmp.w	fp, #0
 801baa4:	dc70      	bgt.n	801bb88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801baa6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801baa8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801baac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801baae:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801bab2:	930c      	str	r3, [sp, #48]	@ 0x30
 801bab4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801bab6:	2b00      	cmp	r3, #0
 801bab8:	f340 81be 	ble.w	801be38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801babc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801bac0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bac2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bac6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801baca:	eef0 6a62 	vmov.f32	s13, s5
 801bace:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bad2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bad6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bada:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801bade:	eef0 6a43 	vmov.f32	s13, s6
 801bae2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bae6:	ee16 5a90 	vmov	r5, s13
 801baea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801baee:	ee61 7a27 	vmul.f32	s15, s2, s15
 801baf2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801baf6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bafa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bafe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bb02:	ee12 2a90 	vmov	r2, s5
 801bb06:	eef0 2a47 	vmov.f32	s5, s14
 801bb0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb0e:	ee13 2a10 	vmov	r2, s6
 801bb12:	932b      	str	r3, [sp, #172]	@ 0xac
 801bb14:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bb16:	eeb0 3a67 	vmov.f32	s6, s15
 801bb1a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb1e:	932c      	str	r3, [sp, #176]	@ 0xb0
 801bb20:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801bb22:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801bb24:	3b01      	subs	r3, #1
 801bb26:	9319      	str	r3, [sp, #100]	@ 0x64
 801bb28:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bb2a:	bf08      	it	eq
 801bb2c:	4613      	moveq	r3, r2
 801bb2e:	9309      	str	r3, [sp, #36]	@ 0x24
 801bb30:	e5f4      	b.n	801b71c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801bb32:	2900      	cmp	r1, #0
 801bb34:	f43f ae66 	beq.w	801b804 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801bb38:	f818 0000 	ldrb.w	r0, [r8, r0]
 801bb3c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801bb40:	900a      	str	r0, [sp, #40]	@ 0x28
 801bb42:	0e00      	lsrs	r0, r0, #24
 801bb44:	9013      	str	r0, [sp, #76]	@ 0x4c
 801bb46:	e65d      	b.n	801b804 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801bb48:	f113 0801 	adds.w	r8, r3, #1
 801bb4c:	f53f af74 	bmi.w	801ba38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801bb50:	4540      	cmp	r0, r8
 801bb52:	f6ff af71 	blt.w	801ba38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801bb56:	f11c 0801 	adds.w	r8, ip, #1
 801bb5a:	f53f af6d 	bmi.w	801ba38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801bb5e:	45c6      	cmp	lr, r8
 801bb60:	f6ff af6a 	blt.w	801ba38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801bb64:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801bb66:	b200      	sxth	r0, r0
 801bb68:	9302      	str	r3, [sp, #8]
 801bb6a:	fa0f f38e 	sxth.w	r3, lr
 801bb6e:	9000      	str	r0, [sp, #0]
 801bb70:	9301      	str	r3, [sp, #4]
 801bb72:	4633      	mov	r3, r6
 801bb74:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801bb76:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801bb7a:	e9cd c203 	strd	ip, r2, [sp, #12]
 801bb7e:	4639      	mov	r1, r7
 801bb80:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801bb82:	f7ff fc63 	bl	801b44c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801bb86:	e757      	b.n	801ba38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801bb88:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801bb8a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bb8e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801bb90:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bb94:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801bb96:	1427      	asrs	r7, r4, #16
 801bb98:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bb9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bb9e:	142b      	asrs	r3, r5, #16
 801bba0:	fb01 7303 	mla	r3, r1, r3, r7
 801bba4:	18e7      	adds	r7, r4, r3
 801bba6:	5ce3      	ldrb	r3, [r4, r3]
 801bba8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bbac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bbb0:	2a00      	cmp	r2, #0
 801bbb2:	f000 8137 	beq.w	801be24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801bbb6:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bbba:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bbbe:	9410      	str	r4, [sp, #64]	@ 0x40
 801bbc0:	0e24      	lsrs	r4, r4, #24
 801bbc2:	9417      	str	r4, [sp, #92]	@ 0x5c
 801bbc4:	b170      	cbz	r0, 801bbe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801bbc6:	eb07 0e01 	add.w	lr, r7, r1
 801bbca:	5c79      	ldrb	r1, [r7, r1]
 801bbcc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bbd0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801bbd2:	0e09      	lsrs	r1, r1, #24
 801bbd4:	9114      	str	r1, [sp, #80]	@ 0x50
 801bbd6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bbda:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bbde:	9111      	str	r1, [sp, #68]	@ 0x44
 801bbe0:	0e09      	lsrs	r1, r1, #24
 801bbe2:	9118      	str	r1, [sp, #96]	@ 0x60
 801bbe4:	b292      	uxth	r2, r2
 801bbe6:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801bbe8:	b280      	uxth	r0, r0
 801bbea:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bbec:	fb02 f800 	mul.w	r8, r2, r0
 801bbf0:	0112      	lsls	r2, r2, #4
 801bbf2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bbf6:	eba2 0e08 	sub.w	lr, r2, r8
 801bbfa:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801bbfe:	b280      	uxth	r0, r0
 801bc00:	fa1f fe8e 	uxth.w	lr, lr
 801bc04:	1a12      	subs	r2, r2, r0
 801bc06:	fb0e f101 	mul.w	r1, lr, r1
 801bc0a:	b292      	uxth	r2, r2
 801bc0c:	fb02 110c 	mla	r1, r2, ip, r1
 801bc10:	fb00 1104 	mla	r1, r0, r4, r1
 801bc14:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801bc16:	fb08 1104 	mla	r1, r8, r4, r1
 801bc1a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bc1e:	2900      	cmp	r1, #0
 801bc20:	f000 80f5 	beq.w	801be0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801bc24:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801bc28:	d019      	beq.n	801bc5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801bc2a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bc2e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bc32:	fb0c fa0a 	mul.w	sl, ip, sl
 801bc36:	fb0c fc03 	mul.w	ip, ip, r3
 801bc3a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bc3e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bc42:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801bc46:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bc4a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bc4e:	4453      	add	r3, sl
 801bc50:	0a3f      	lsrs	r7, r7, #8
 801bc52:	0a1b      	lsrs	r3, r3, #8
 801bc54:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bc58:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bc5c:	433b      	orrs	r3, r7
 801bc5e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801bc60:	2cff      	cmp	r4, #255	@ 0xff
 801bc62:	d020      	beq.n	801bca6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801bc64:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bc66:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bc6a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801bc6c:	4367      	muls	r7, r4
 801bc6e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bc70:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc74:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bc78:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801bc7a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bc7e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc82:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc86:	44bc      	add	ip, r7
 801bc88:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bc8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc90:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc94:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc98:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc9c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bca0:	ea4c 040a 	orr.w	r4, ip, sl
 801bca4:	9410      	str	r4, [sp, #64]	@ 0x40
 801bca6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bca8:	2cff      	cmp	r4, #255	@ 0xff
 801bcaa:	d020      	beq.n	801bcee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801bcac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bcae:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bcb2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bcb4:	4367      	muls	r7, r4
 801bcb6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bcb8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bcbc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bcc0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bcc2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bcc6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bcca:	fb04 fa0a 	mul.w	sl, r4, sl
 801bcce:	44bc      	add	ip, r7
 801bcd0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bcd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bcd8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bcdc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bce0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bce4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bce8:	ea4c 040a 	orr.w	r4, ip, sl
 801bcec:	940b      	str	r4, [sp, #44]	@ 0x2c
 801bcee:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801bcf0:	2cff      	cmp	r4, #255	@ 0xff
 801bcf2:	d020      	beq.n	801bd36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801bcf4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bcf6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bcfa:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801bcfc:	4367      	muls	r7, r4
 801bcfe:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bd00:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bd04:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bd08:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801bd0a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bd0e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bd12:	fb04 fa0a 	mul.w	sl, r4, sl
 801bd16:	44bc      	add	ip, r7
 801bd18:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bd1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd20:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bd24:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bd28:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bd2c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bd30:	ea4c 040a 	orr.w	r4, ip, sl
 801bd34:	9411      	str	r4, [sp, #68]	@ 0x44
 801bd36:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bd38:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801bd3c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bd40:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bd44:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bd46:	fb0e f707 	mul.w	r7, lr, r7
 801bd4a:	fb02 770c 	mla	r7, r2, ip, r7
 801bd4e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bd52:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bd54:	fb00 770c 	mla	r7, r0, ip, r7
 801bd58:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bd5c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bd5e:	fb08 770c 	mla	r7, r8, ip, r7
 801bd62:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801bd66:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bd68:	fb0e fe0c 	mul.w	lr, lr, ip
 801bd6c:	0a3f      	lsrs	r7, r7, #8
 801bd6e:	fb02 e303 	mla	r3, r2, r3, lr
 801bd72:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bd74:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801bd78:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801bd7c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bd7e:	fb00 330a 	mla	r3, r0, sl, r3
 801bd82:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801bd86:	f8b9 0000 	ldrh.w	r0, [r9]
 801bd8a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bd8e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bd90:	1202      	asrs	r2, r0, #8
 801bd92:	434b      	muls	r3, r1
 801bd94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd98:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801bd9c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bda0:	1c59      	adds	r1, r3, #1
 801bda2:	ea47 070c 	orr.w	r7, r7, ip
 801bda6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801bdaa:	0c3b      	lsrs	r3, r7, #16
 801bdac:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801bdb0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801bdb4:	b2ff      	uxtb	r7, r7
 801bdb6:	fb13 f304 	smulbb	r3, r3, r4
 801bdba:	b2c9      	uxtb	r1, r1
 801bdbc:	fb1c fc04 	smulbb	ip, ip, r4
 801bdc0:	fb02 3201 	mla	r2, r2, r1, r3
 801bdc4:	10c3      	asrs	r3, r0, #3
 801bdc6:	fb17 f704 	smulbb	r7, r7, r4
 801bdca:	00c0      	lsls	r0, r0, #3
 801bdcc:	b292      	uxth	r2, r2
 801bdce:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801bdd2:	b2c0      	uxtb	r0, r0
 801bdd4:	fb03 c301 	mla	r3, r3, r1, ip
 801bdd8:	f102 0c01 	add.w	ip, r2, #1
 801bddc:	fb00 7001 	mla	r0, r0, r1, r7
 801bde0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801bde4:	b280      	uxth	r0, r0
 801bde6:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801bdea:	b29b      	uxth	r3, r3
 801bdec:	1c42      	adds	r2, r0, #1
 801bdee:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bdf2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bdf6:	ea42 020c 	orr.w	r2, r2, ip
 801bdfa:	f103 0c01 	add.w	ip, r3, #1
 801bdfe:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801be02:	095b      	lsrs	r3, r3, #5
 801be04:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801be08:	431a      	orrs	r2, r3
 801be0a:	f8a9 2000 	strh.w	r2, [r9]
 801be0e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801be10:	f109 0902 	add.w	r9, r9, #2
 801be14:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801be16:	f10b 3bff 	add.w	fp, fp, #4294967295
 801be1a:	441a      	add	r2, r3
 801be1c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801be1e:	9229      	str	r2, [sp, #164]	@ 0xa4
 801be20:	441d      	add	r5, r3
 801be22:	e63d      	b.n	801baa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801be24:	2800      	cmp	r0, #0
 801be26:	f43f aedd 	beq.w	801bbe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801be2a:	5c79      	ldrb	r1, [r7, r1]
 801be2c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801be30:	910b      	str	r1, [sp, #44]	@ 0x2c
 801be32:	0e09      	lsrs	r1, r1, #24
 801be34:	9114      	str	r1, [sp, #80]	@ 0x50
 801be36:	e6d5      	b.n	801bbe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801be38:	b01f      	add	sp, #124	@ 0x7c
 801be3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801be3e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801be3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be42:	b089      	sub	sp, #36	@ 0x24
 801be44:	9101      	str	r1, [sp, #4]
 801be46:	9801      	ldr	r0, [sp, #4]
 801be48:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801be4c:	8800      	ldrh	r0, [r0, #0]
 801be4e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801be52:	1206      	asrs	r6, r0, #8
 801be54:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801be58:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801be5c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801be60:	9602      	str	r6, [sp, #8]
 801be62:	10c6      	asrs	r6, r0, #3
 801be64:	00c0      	lsls	r0, r0, #3
 801be66:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801be6a:	b2c0      	uxtb	r0, r0
 801be6c:	9603      	str	r6, [sp, #12]
 801be6e:	9004      	str	r0, [sp, #16]
 801be70:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801be74:	fb07 100c 	mla	r0, r7, ip, r1
 801be78:	2f00      	cmp	r7, #0
 801be7a:	eb02 0e00 	add.w	lr, r2, r0
 801be7e:	f2c0 810a 	blt.w	801c096 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801be82:	45b8      	cmp	r8, r7
 801be84:	f340 8107 	ble.w	801c096 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801be88:	2900      	cmp	r1, #0
 801be8a:	f2c0 8102 	blt.w	801c092 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801be8e:	458c      	cmp	ip, r1
 801be90:	f340 80ff 	ble.w	801c092 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801be94:	5c12      	ldrb	r2, [r2, r0]
 801be96:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801be9a:	1c4a      	adds	r2, r1, #1
 801be9c:	f100 80fe 	bmi.w	801c09c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801bea0:	4594      	cmp	ip, r2
 801bea2:	f340 80fb 	ble.w	801c09c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801bea6:	2d00      	cmp	r5, #0
 801bea8:	f000 80fa 	beq.w	801c0a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801beac:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801beb0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801beb4:	3701      	adds	r7, #1
 801beb6:	f100 80f7 	bmi.w	801c0a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801beba:	45b8      	cmp	r8, r7
 801bebc:	f340 80f4 	ble.w	801c0a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801bec0:	2c00      	cmp	r4, #0
 801bec2:	f000 80f4 	beq.w	801c0ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801bec6:	2900      	cmp	r1, #0
 801bec8:	eb0e 020c 	add.w	r2, lr, ip
 801becc:	f2c0 80ea 	blt.w	801c0a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801bed0:	458c      	cmp	ip, r1
 801bed2:	f340 80e7 	ble.w	801c0a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801bed6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801beda:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801bede:	3101      	adds	r1, #1
 801bee0:	f100 80e8 	bmi.w	801c0b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801bee4:	458c      	cmp	ip, r1
 801bee6:	f340 80e5 	ble.w	801c0b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801beea:	2d00      	cmp	r5, #0
 801beec:	f000 80e4 	beq.w	801c0b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801bef0:	7852      	ldrb	r2, [r2, #1]
 801bef2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801bef6:	0e0b      	lsrs	r3, r1, #24
 801bef8:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801befc:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801bf00:	9300      	str	r3, [sp, #0]
 801bf02:	b2a4      	uxth	r4, r4
 801bf04:	b2ab      	uxth	r3, r5
 801bf06:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801bf0a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801bf0e:	fb03 f904 	mul.w	r9, r3, r4
 801bf12:	011b      	lsls	r3, r3, #4
 801bf14:	fb0a f505 	mul.w	r5, sl, r5
 801bf18:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801bf1c:	eba3 0e09 	sub.w	lr, r3, r9
 801bf20:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801bf24:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801bf28:	0a28      	lsrs	r0, r5, #8
 801bf2a:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801bf2e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bf32:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bf36:	fb0a f303 	mul.w	r3, sl, r3
 801bf3a:	fb08 f707 	mul.w	r7, r8, r7
 801bf3e:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801bf42:	4405      	add	r5, r0
 801bf44:	fb08 fc0c 	mul.w	ip, r8, ip
 801bf48:	b2a4      	uxth	r4, r4
 801bf4a:	0a2d      	lsrs	r5, r5, #8
 801bf4c:	fa1f fe8e 	uxth.w	lr, lr
 801bf50:	1b12      	subs	r2, r2, r4
 801bf52:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801bf56:	b292      	uxth	r2, r2
 801bf58:	9005      	str	r0, [sp, #20]
 801bf5a:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801bf5e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801bf62:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801bf66:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bf6a:	0a1b      	lsrs	r3, r3, #8
 801bf6c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bf70:	9306      	str	r3, [sp, #24]
 801bf72:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801bf76:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801bf7a:	4460      	add	r0, ip
 801bf7c:	fb0b f303 	mul.w	r3, fp, r3
 801bf80:	fb0b f606 	mul.w	r6, fp, r6
 801bf84:	0a00      	lsrs	r0, r0, #8
 801bf86:	0a1d      	lsrs	r5, r3, #8
 801bf88:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801bf8c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bf90:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bf94:	441d      	add	r5, r3
 801bf96:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801bf9a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801bf9e:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801bfa2:	0a2d      	lsrs	r5, r5, #8
 801bfa4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801bfa8:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801bfac:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bfb0:	0a36      	lsrs	r6, r6, #8
 801bfb2:	0a1b      	lsrs	r3, r3, #8
 801bfb4:	fb05 f50e 	mul.w	r5, r5, lr
 801bfb8:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801bfbc:	9307      	str	r3, [sp, #28]
 801bfbe:	0e0b      	lsrs	r3, r1, #24
 801bfc0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bfc4:	fb0e f606 	mul.w	r6, lr, r6
 801bfc8:	435f      	muls	r7, r3
 801bfca:	4359      	muls	r1, r3
 801bfcc:	9b05      	ldr	r3, [sp, #20]
 801bfce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bfd2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bfd6:	fb03 5502 	mla	r5, r3, r2, r5
 801bfda:	9b06      	ldr	r3, [sp, #24]
 801bfdc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bfe0:	fb0e fe0b 	mul.w	lr, lr, fp
 801bfe4:	44bc      	add	ip, r7
 801bfe6:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801bfea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bfee:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801bff2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bff6:	0a09      	lsrs	r1, r1, #8
 801bff8:	fb0c 5509 	mla	r5, ip, r9, r5
 801bffc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c000:	fb00 5504 	mla	r5, r0, r4, r5
 801c004:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801c008:	9b07      	ldr	r3, [sp, #28]
 801c00a:	fb02 6000 	mla	r0, r2, r0, r6
 801c00e:	0a2d      	lsrs	r5, r5, #8
 801c010:	fb02 e20a 	mla	r2, r2, sl, lr
 801c014:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c018:	fb09 0001 	mla	r0, r9, r1, r0
 801c01c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c020:	fb04 0003 	mla	r0, r4, r3, r0
 801c024:	9b00      	ldr	r3, [sp, #0]
 801c026:	fb04 2408 	mla	r4, r4, r8, r2
 801c02a:	9a04      	ldr	r2, [sp, #16]
 801c02c:	0a00      	lsrs	r0, r0, #8
 801c02e:	fb09 4903 	mla	r9, r9, r3, r4
 801c032:	9b02      	ldr	r3, [sp, #8]
 801c034:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801c038:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801c03c:	4305      	orrs	r5, r0
 801c03e:	fa5f f989 	uxtb.w	r9, r9
 801c042:	fb03 f109 	mul.w	r1, r3, r9
 801c046:	9b03      	ldr	r3, [sp, #12]
 801c048:	fb03 f309 	mul.w	r3, r3, r9
 801c04c:	fb02 f909 	mul.w	r9, r2, r9
 801c050:	1c4a      	adds	r2, r1, #1
 801c052:	1c58      	adds	r0, r3, #1
 801c054:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c058:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c05c:	0c2a      	lsrs	r2, r5, #16
 801c05e:	0a2b      	lsrs	r3, r5, #8
 801c060:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801c064:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c068:	0212      	lsls	r2, r2, #8
 801c06a:	00db      	lsls	r3, r3, #3
 801c06c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801c070:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c074:	4313      	orrs	r3, r2
 801c076:	f109 0201 	add.w	r2, r9, #1
 801c07a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801c07e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801c082:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c086:	431d      	orrs	r5, r3
 801c088:	9b01      	ldr	r3, [sp, #4]
 801c08a:	801d      	strh	r5, [r3, #0]
 801c08c:	b009      	add	sp, #36	@ 0x24
 801c08e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c092:	2000      	movs	r0, #0
 801c094:	e701      	b.n	801be9a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801c096:	2600      	movs	r6, #0
 801c098:	4630      	mov	r0, r6
 801c09a:	e70b      	b.n	801beb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c09c:	2600      	movs	r6, #0
 801c09e:	e709      	b.n	801beb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c0a0:	462e      	mov	r6, r5
 801c0a2:	e707      	b.n	801beb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c0a4:	2700      	movs	r7, #0
 801c0a6:	e71a      	b.n	801bede <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801c0a8:	2100      	movs	r1, #0
 801c0aa:	460f      	mov	r7, r1
 801c0ac:	e723      	b.n	801bef6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c0ae:	4621      	mov	r1, r4
 801c0b0:	4627      	mov	r7, r4
 801c0b2:	e720      	b.n	801bef6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c0b4:	2100      	movs	r1, #0
 801c0b6:	e71e      	b.n	801bef6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c0b8:	4629      	mov	r1, r5
 801c0ba:	e71c      	b.n	801bef6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801c0bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c0bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0c0:	b09b      	sub	sp, #108	@ 0x6c
 801c0c2:	9218      	str	r2, [sp, #96]	@ 0x60
 801c0c4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c0c6:	9019      	str	r0, [sp, #100]	@ 0x64
 801c0c8:	9116      	str	r1, [sp, #88]	@ 0x58
 801c0ca:	6850      	ldr	r0, [r2, #4]
 801c0cc:	9307      	str	r3, [sp, #28]
 801c0ce:	6812      	ldr	r2, [r2, #0]
 801c0d0:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801c0d2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801c0d6:	fb00 1303 	mla	r3, r0, r3, r1
 801c0da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c0de:	930a      	str	r3, [sp, #40]	@ 0x28
 801c0e0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c0e2:	681b      	ldr	r3, [r3, #0]
 801c0e4:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c0e6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c0e8:	685e      	ldr	r6, [r3, #4]
 801c0ea:	3604      	adds	r6, #4
 801c0ec:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c0ee:	2b00      	cmp	r3, #0
 801c0f0:	dc03      	bgt.n	801c0fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c0f2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c0f4:	2b00      	cmp	r3, #0
 801c0f6:	f340 8373 	ble.w	801c7e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c0fa:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c0fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c100:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c104:	1e48      	subs	r0, r1, #1
 801c106:	1e57      	subs	r7, r2, #1
 801c108:	9b07      	ldr	r3, [sp, #28]
 801c10a:	2b00      	cmp	r3, #0
 801c10c:	f340 818f 	ble.w	801c42e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801c110:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c112:	142b      	asrs	r3, r5, #16
 801c114:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c118:	d406      	bmi.n	801c128 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c11a:	4584      	cmp	ip, r0
 801c11c:	da04      	bge.n	801c128 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c11e:	2b00      	cmp	r3, #0
 801c120:	db02      	blt.n	801c128 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c122:	42bb      	cmp	r3, r7
 801c124:	f2c0 8184 	blt.w	801c430 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c128:	f11c 0c01 	adds.w	ip, ip, #1
 801c12c:	f100 8172 	bmi.w	801c414 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c130:	4561      	cmp	r1, ip
 801c132:	f2c0 816f 	blt.w	801c414 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c136:	3301      	adds	r3, #1
 801c138:	f100 816c 	bmi.w	801c414 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c13c:	429a      	cmp	r2, r3
 801c13e:	f2c0 8169 	blt.w	801c414 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c142:	9b07      	ldr	r3, [sp, #28]
 801c144:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801c146:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c148:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c14a:	2b00      	cmp	r3, #0
 801c14c:	f340 818e 	ble.w	801c46c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801c150:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c152:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c156:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c15a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c15e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c160:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801c164:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c166:	141b      	asrs	r3, r3, #16
 801c168:	f100 81d1 	bmi.w	801c50e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c16c:	f101 38ff 	add.w	r8, r1, #4294967295
 801c170:	4543      	cmp	r3, r8
 801c172:	f280 81cc 	bge.w	801c50e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c176:	f1bc 0f00 	cmp.w	ip, #0
 801c17a:	f2c0 81c8 	blt.w	801c50e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c17e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c182:	45c4      	cmp	ip, r8
 801c184:	f280 81c3 	bge.w	801c50e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c188:	b209      	sxth	r1, r1
 801c18a:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c18c:	fb0c 3301 	mla	r3, ip, r1, r3
 801c190:	eb04 0803 	add.w	r8, r4, r3
 801c194:	5ce3      	ldrb	r3, [r4, r3]
 801c196:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c19a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c19e:	2a00      	cmp	r2, #0
 801c1a0:	f000 81aa 	beq.w	801c4f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801c1a4:	f898 c001 	ldrb.w	ip, [r8, #1]
 801c1a8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801c1ac:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c1ae:	0e24      	lsrs	r4, r4, #24
 801c1b0:	9412      	str	r4, [sp, #72]	@ 0x48
 801c1b2:	b178      	cbz	r0, 801c1d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801c1b4:	eb08 0c01 	add.w	ip, r8, r1
 801c1b8:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c1bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c1c0:	9108      	str	r1, [sp, #32]
 801c1c2:	0e09      	lsrs	r1, r1, #24
 801c1c4:	9110      	str	r1, [sp, #64]	@ 0x40
 801c1c6:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801c1ca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c1ce:	910c      	str	r1, [sp, #48]	@ 0x30
 801c1d0:	0e09      	lsrs	r1, r1, #24
 801c1d2:	9113      	str	r1, [sp, #76]	@ 0x4c
 801c1d4:	b292      	uxth	r2, r2
 801c1d6:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801c1d8:	b280      	uxth	r0, r0
 801c1da:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c1dc:	fb02 f900 	mul.w	r9, r2, r0
 801c1e0:	0112      	lsls	r2, r2, #4
 801c1e2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c1e6:	eba2 0809 	sub.w	r8, r2, r9
 801c1ea:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c1ee:	b280      	uxth	r0, r0
 801c1f0:	fa1f f888 	uxth.w	r8, r8
 801c1f4:	1a12      	subs	r2, r2, r0
 801c1f6:	fb08 f101 	mul.w	r1, r8, r1
 801c1fa:	b292      	uxth	r2, r2
 801c1fc:	fb02 110e 	mla	r1, r2, lr, r1
 801c200:	fb00 1104 	mla	r1, r0, r4, r1
 801c204:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c206:	fb09 1104 	mla	r1, r9, r4, r1
 801c20a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c20e:	2900      	cmp	r1, #0
 801c210:	f000 80f5 	beq.w	801c3fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c214:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801c218:	d01b      	beq.n	801c252 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c21a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c21e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c222:	fb0e fa0a 	mul.w	sl, lr, sl
 801c226:	fb0e fe03 	mul.w	lr, lr, r3
 801c22a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c22e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c232:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801c236:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c23a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c23e:	4453      	add	r3, sl
 801c240:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c244:	0a1b      	lsrs	r3, r3, #8
 801c246:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c24a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c24e:	ea43 030c 	orr.w	r3, r3, ip
 801c252:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c254:	2cff      	cmp	r4, #255	@ 0xff
 801c256:	d021      	beq.n	801c29c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c258:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c25a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c25e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c260:	fb04 fb0b 	mul.w	fp, r4, fp
 801c264:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c266:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c26a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c26c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c270:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c274:	fb04 fa0a 	mul.w	sl, r4, sl
 801c278:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c27c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c280:	44de      	add	lr, fp
 801c282:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c286:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c28a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c28e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c292:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c296:	ea4e 040a 	orr.w	r4, lr, sl
 801c29a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c29c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c29e:	2cff      	cmp	r4, #255	@ 0xff
 801c2a0:	d021      	beq.n	801c2e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c2a2:	9c08      	ldr	r4, [sp, #32]
 801c2a4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c2a8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c2aa:	fb04 fb0b 	mul.w	fp, r4, fp
 801c2ae:	9c08      	ldr	r4, [sp, #32]
 801c2b0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c2b4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c2b6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c2ba:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c2be:	fb04 fa0a 	mul.w	sl, r4, sl
 801c2c2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c2c6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c2ca:	44de      	add	lr, fp
 801c2cc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c2d0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c2d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c2d8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c2dc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c2e0:	ea4e 040a 	orr.w	r4, lr, sl
 801c2e4:	9408      	str	r4, [sp, #32]
 801c2e6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c2e8:	2cff      	cmp	r4, #255	@ 0xff
 801c2ea:	d021      	beq.n	801c330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801c2ec:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c2ee:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c2f2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c2f4:	fb04 fb0b 	mul.w	fp, r4, fp
 801c2f8:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c2fa:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c2fe:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c300:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c304:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c308:	fb04 fa0a 	mul.w	sl, r4, sl
 801c30c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c310:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c314:	44de      	add	lr, fp
 801c316:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c31a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c31e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c322:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c326:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c32a:	ea4e 040a 	orr.w	r4, lr, sl
 801c32e:	940c      	str	r4, [sp, #48]	@ 0x30
 801c330:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c332:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801c336:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c33a:	43c9      	mvns	r1, r1
 801c33c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c340:	9c08      	ldr	r4, [sp, #32]
 801c342:	fb08 fc0c 	mul.w	ip, r8, ip
 801c346:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c34a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c34e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c350:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c354:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c358:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c35a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c35e:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801c362:	fb08 f80e 	mul.w	r8, r8, lr
 801c366:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c36a:	fa5f fe81 	uxtb.w	lr, r1
 801c36e:	fb02 8303 	mla	r3, r2, r3, r8
 801c372:	9a08      	ldr	r2, [sp, #32]
 801c374:	f8b7 8000 	ldrh.w	r8, [r7]
 801c378:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c37c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c380:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c382:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801c386:	fb00 330a 	mla	r3, r0, sl, r3
 801c38a:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801c38e:	ea4f 2228 	mov.w	r2, r8, asr #8
 801c392:	fb09 3900 	mla	r9, r9, r0, r3
 801c396:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801c39a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c39e:	b2c9      	uxtb	r1, r1
 801c3a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c3a4:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c3a8:	fb02 f20e 	mul.w	r2, r2, lr
 801c3ac:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c3b0:	fb00 f00e 	mul.w	r0, r0, lr
 801c3b4:	1c53      	adds	r3, r2, #1
 801c3b6:	fb01 f10e 	mul.w	r1, r1, lr
 801c3ba:	ea4c 0c09 	orr.w	ip, ip, r9
 801c3be:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801c3c2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801c3c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c3ca:	4a60      	ldr	r2, [pc, #384]	@ (801c54c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801c3cc:	b2db      	uxtb	r3, r3
 801c3ce:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801c3d2:	1c43      	adds	r3, r0, #1
 801c3d4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c3d8:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801c3dc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c3e0:	00db      	lsls	r3, r3, #3
 801c3e2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c3e6:	4313      	orrs	r3, r2
 801c3e8:	1c4a      	adds	r2, r1, #1
 801c3ea:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c3ee:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801c3f2:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801c3f6:	ea4c 0c03 	orr.w	ip, ip, r3
 801c3fa:	f8a7 c000 	strh.w	ip, [r7]
 801c3fe:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c400:	3702      	adds	r7, #2
 801c402:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c404:	441a      	add	r2, r3
 801c406:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c408:	441d      	add	r5, r3
 801c40a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c40c:	9225      	str	r2, [sp, #148]	@ 0x94
 801c40e:	3b01      	subs	r3, #1
 801c410:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c412:	e699      	b.n	801c148 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c414:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c416:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c418:	441c      	add	r4, r3
 801c41a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c41c:	441d      	add	r5, r3
 801c41e:	9b07      	ldr	r3, [sp, #28]
 801c420:	9425      	str	r4, [sp, #148]	@ 0x94
 801c422:	3b01      	subs	r3, #1
 801c424:	9307      	str	r3, [sp, #28]
 801c426:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c428:	3302      	adds	r3, #2
 801c42a:	930a      	str	r3, [sp, #40]	@ 0x28
 801c42c:	e66c      	b.n	801c108 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c42e:	d024      	beq.n	801c47a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801c430:	9b07      	ldr	r3, [sp, #28]
 801c432:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801c434:	3b01      	subs	r3, #1
 801c436:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c438:	fb00 4003 	mla	r0, r0, r3, r4
 801c43c:	1400      	asrs	r0, r0, #16
 801c43e:	f53f ae80 	bmi.w	801c142 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c442:	3901      	subs	r1, #1
 801c444:	4288      	cmp	r0, r1
 801c446:	f6bf ae7c 	bge.w	801c142 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c44a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801c44c:	fb01 5303 	mla	r3, r1, r3, r5
 801c450:	141b      	asrs	r3, r3, #16
 801c452:	f53f ae76 	bmi.w	801c142 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c456:	3a01      	subs	r2, #1
 801c458:	4293      	cmp	r3, r2
 801c45a:	f6bf ae72 	bge.w	801c142 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c45e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c462:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801c466:	f1bb 0f00 	cmp.w	fp, #0
 801c46a:	dc71      	bgt.n	801c550 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801c46c:	9b07      	ldr	r3, [sp, #28]
 801c46e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c472:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c474:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c478:	930a      	str	r3, [sp, #40]	@ 0x28
 801c47a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c47c:	2b00      	cmp	r3, #0
 801c47e:	f340 81af 	ble.w	801c7e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c482:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c486:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c488:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c48c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c490:	eef0 6a62 	vmov.f32	s13, s5
 801c494:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c498:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c49c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c4a0:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801c4a4:	eef0 6a43 	vmov.f32	s13, s6
 801c4a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c4ac:	ee16 5a90 	vmov	r5, s13
 801c4b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c4b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c4b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c4bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c4c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c4c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c4c8:	ee12 2a90 	vmov	r2, s5
 801c4cc:	eef0 2a47 	vmov.f32	s5, s14
 801c4d0:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4d4:	ee13 2a10 	vmov	r2, s6
 801c4d8:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c4da:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c4dc:	eeb0 3a67 	vmov.f32	s6, s15
 801c4e0:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4e4:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c4e6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c4e8:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c4ea:	3b01      	subs	r3, #1
 801c4ec:	9316      	str	r3, [sp, #88]	@ 0x58
 801c4ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c4f0:	bf08      	it	eq
 801c4f2:	4613      	moveq	r3, r2
 801c4f4:	9307      	str	r3, [sp, #28]
 801c4f6:	e5f9      	b.n	801c0ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c4f8:	2800      	cmp	r0, #0
 801c4fa:	f43f ae6b 	beq.w	801c1d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801c4fe:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c502:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c506:	9108      	str	r1, [sp, #32]
 801c508:	0e09      	lsrs	r1, r1, #24
 801c50a:	9110      	str	r1, [sp, #64]	@ 0x40
 801c50c:	e662      	b.n	801c1d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801c50e:	f113 0801 	adds.w	r8, r3, #1
 801c512:	f53f af74 	bmi.w	801c3fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c516:	4541      	cmp	r1, r8
 801c518:	f6ff af71 	blt.w	801c3fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c51c:	f11c 0801 	adds.w	r8, ip, #1
 801c520:	f53f af6d 	bmi.w	801c3fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c524:	45c6      	cmp	lr, r8
 801c526:	f6ff af6a 	blt.w	801c3fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c52a:	b209      	sxth	r1, r1
 801c52c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801c530:	fa0f f38e 	sxth.w	r3, lr
 801c534:	9100      	str	r1, [sp, #0]
 801c536:	4639      	mov	r1, r7
 801c538:	9301      	str	r3, [sp, #4]
 801c53a:	4633      	mov	r3, r6
 801c53c:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801c540:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c542:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801c544:	f7ff fc7b 	bl	801be3e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801c548:	e759      	b.n	801c3fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c54a:	bf00      	nop
 801c54c:	fffff800 	.word	0xfffff800
 801c550:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c552:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c556:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c558:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c55c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c55e:	1427      	asrs	r7, r4, #16
 801c560:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c562:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c566:	142b      	asrs	r3, r5, #16
 801c568:	fb01 7303 	mla	r3, r1, r3, r7
 801c56c:	18e7      	adds	r7, r4, r3
 801c56e:	5ce3      	ldrb	r3, [r4, r3]
 801c570:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c574:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c578:	2a00      	cmp	r2, #0
 801c57a:	f000 8127 	beq.w	801c7cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c57e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c582:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c586:	940d      	str	r4, [sp, #52]	@ 0x34
 801c588:	0e24      	lsrs	r4, r4, #24
 801c58a:	9414      	str	r4, [sp, #80]	@ 0x50
 801c58c:	b170      	cbz	r0, 801c5ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c58e:	eb07 0e01 	add.w	lr, r7, r1
 801c592:	5c79      	ldrb	r1, [r7, r1]
 801c594:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c598:	9109      	str	r1, [sp, #36]	@ 0x24
 801c59a:	0e09      	lsrs	r1, r1, #24
 801c59c:	9111      	str	r1, [sp, #68]	@ 0x44
 801c59e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c5a2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c5a6:	910e      	str	r1, [sp, #56]	@ 0x38
 801c5a8:	0e09      	lsrs	r1, r1, #24
 801c5aa:	9115      	str	r1, [sp, #84]	@ 0x54
 801c5ac:	b292      	uxth	r2, r2
 801c5ae:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c5b0:	b280      	uxth	r0, r0
 801c5b2:	fb02 f800 	mul.w	r8, r2, r0
 801c5b6:	0112      	lsls	r2, r2, #4
 801c5b8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c5bc:	eba2 0e08 	sub.w	lr, r2, r8
 801c5c0:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801c5c4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c5c6:	b280      	uxth	r0, r0
 801c5c8:	fa1f fe8e 	uxth.w	lr, lr
 801c5cc:	1a09      	subs	r1, r1, r0
 801c5ce:	fb0e f202 	mul.w	r2, lr, r2
 801c5d2:	b289      	uxth	r1, r1
 801c5d4:	fb01 220c 	mla	r2, r1, ip, r2
 801c5d8:	fb00 2204 	mla	r2, r0, r4, r2
 801c5dc:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c5de:	fb08 2204 	mla	r2, r8, r4, r2
 801c5e2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c5e6:	2a00      	cmp	r2, #0
 801c5e8:	f000 80e5 	beq.w	801c7b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801c5ec:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801c5f0:	d019      	beq.n	801c626 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801c5f2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c5f6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c5fa:	fb0c fa0a 	mul.w	sl, ip, sl
 801c5fe:	fb0c fc03 	mul.w	ip, ip, r3
 801c602:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c606:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c60a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801c60e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c612:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c616:	4453      	add	r3, sl
 801c618:	0a3f      	lsrs	r7, r7, #8
 801c61a:	0a1b      	lsrs	r3, r3, #8
 801c61c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c620:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c624:	433b      	orrs	r3, r7
 801c626:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c628:	2cff      	cmp	r4, #255	@ 0xff
 801c62a:	d020      	beq.n	801c66e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801c62c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c62e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c632:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c634:	4367      	muls	r7, r4
 801c636:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c638:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c63c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c640:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c642:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c646:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c64a:	fb04 fa0a 	mul.w	sl, r4, sl
 801c64e:	44bc      	add	ip, r7
 801c650:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c654:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c658:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c65c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c660:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c664:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c668:	ea4c 040a 	orr.w	r4, ip, sl
 801c66c:	940d      	str	r4, [sp, #52]	@ 0x34
 801c66e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c670:	2cff      	cmp	r4, #255	@ 0xff
 801c672:	d020      	beq.n	801c6b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801c674:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c676:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c67a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c67c:	4367      	muls	r7, r4
 801c67e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c680:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c684:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c688:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c68a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c68e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c692:	fb04 fa0a 	mul.w	sl, r4, sl
 801c696:	44bc      	add	ip, r7
 801c698:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c69c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c6a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c6a4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c6a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c6ac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c6b0:	ea4c 040a 	orr.w	r4, ip, sl
 801c6b4:	9409      	str	r4, [sp, #36]	@ 0x24
 801c6b6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c6b8:	2cff      	cmp	r4, #255	@ 0xff
 801c6ba:	d020      	beq.n	801c6fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801c6bc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c6be:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c6c2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c6c4:	4367      	muls	r7, r4
 801c6c6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c6c8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c6cc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c6d0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c6d2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c6d6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c6da:	fb04 fa0a 	mul.w	sl, r4, sl
 801c6de:	44bc      	add	ip, r7
 801c6e0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c6e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c6e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c6ec:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c6f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c6f4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c6f8:	ea4c 040a 	orr.w	r4, ip, sl
 801c6fc:	940e      	str	r4, [sp, #56]	@ 0x38
 801c6fe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c700:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c704:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c708:	43d2      	mvns	r2, r2
 801c70a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c70e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c710:	b2d2      	uxtb	r2, r2
 801c712:	fb0e f707 	mul.w	r7, lr, r7
 801c716:	fb01 770c 	mla	r7, r1, ip, r7
 801c71a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c71e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c720:	fb00 770c 	mla	r7, r0, ip, r7
 801c724:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c728:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c72a:	fb08 770c 	mla	r7, r8, ip, r7
 801c72e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801c732:	fb0e fe0c 	mul.w	lr, lr, ip
 801c736:	0a3f      	lsrs	r7, r7, #8
 801c738:	fb01 e303 	mla	r3, r1, r3, lr
 801c73c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801c73e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c742:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801c746:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801c748:	fb00 330a 	mla	r3, r0, sl, r3
 801c74c:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801c750:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c754:	f8b9 3000 	ldrh.w	r3, [r9]
 801c758:	1218      	asrs	r0, r3, #8
 801c75a:	10d9      	asrs	r1, r3, #3
 801c75c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c760:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c764:	00db      	lsls	r3, r3, #3
 801c766:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c76a:	4350      	muls	r0, r2
 801c76c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c770:	b2db      	uxtb	r3, r3
 801c772:	4351      	muls	r1, r2
 801c774:	ea47 070c 	orr.w	r7, r7, ip
 801c778:	4353      	muls	r3, r2
 801c77a:	1c42      	adds	r2, r0, #1
 801c77c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c780:	0c3a      	lsrs	r2, r7, #16
 801c782:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c786:	4a18      	ldr	r2, [pc, #96]	@ (801c7e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801c788:	b2c0      	uxtb	r0, r0
 801c78a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801c78e:	1c4a      	adds	r2, r1, #1
 801c790:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c794:	0a3a      	lsrs	r2, r7, #8
 801c796:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c79a:	00c9      	lsls	r1, r1, #3
 801c79c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c7a0:	4301      	orrs	r1, r0
 801c7a2:	1c58      	adds	r0, r3, #1
 801c7a4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c7a8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c7ac:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801c7b0:	4308      	orrs	r0, r1
 801c7b2:	f8a9 0000 	strh.w	r0, [r9]
 801c7b6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c7b8:	f109 0902 	add.w	r9, r9, #2
 801c7bc:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c7be:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c7c2:	441a      	add	r2, r3
 801c7c4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c7c6:	9225      	str	r2, [sp, #148]	@ 0x94
 801c7c8:	441d      	add	r5, r3
 801c7ca:	e64c      	b.n	801c466 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801c7cc:	2800      	cmp	r0, #0
 801c7ce:	f43f aeed 	beq.w	801c5ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c7d2:	5c79      	ldrb	r1, [r7, r1]
 801c7d4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c7d8:	9109      	str	r1, [sp, #36]	@ 0x24
 801c7da:	0e09      	lsrs	r1, r1, #24
 801c7dc:	9111      	str	r1, [sp, #68]	@ 0x44
 801c7de:	e6e5      	b.n	801c5ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c7e0:	b01b      	add	sp, #108	@ 0x6c
 801c7e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7e6:	bf00      	nop
 801c7e8:	fffff800 	.word	0xfffff800

0801c7ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801c7ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7f0:	b085      	sub	sp, #20
 801c7f2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801c7f6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801c7fa:	2800      	cmp	r0, #0
 801c7fc:	9103      	str	r1, [sp, #12]
 801c7fe:	fb00 7406 	mla	r4, r0, r6, r7
 801c802:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801c806:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801c80a:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801c80e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801c812:	eb03 0904 	add.w	r9, r3, r4
 801c816:	9501      	str	r5, [sp, #4]
 801c818:	f2c0 8150 	blt.w	801cabc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c81c:	4583      	cmp	fp, r0
 801c81e:	f340 814d 	ble.w	801cabc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c822:	2f00      	cmp	r7, #0
 801c824:	f2c0 8146 	blt.w	801cab4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c828:	42be      	cmp	r6, r7
 801c82a:	f340 8143 	ble.w	801cab4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c82e:	f813 c004 	ldrb.w	ip, [r3, r4]
 801c832:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801c836:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801c83a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c83e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801c842:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c846:	4355      	muls	r5, r2
 801c848:	fb0c f203 	mul.w	r2, ip, r3
 801c84c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c850:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801c854:	441d      	add	r5, r3
 801c856:	f102 0320 	add.w	r3, r2, #32
 801c85a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c85e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c862:	0a1b      	lsrs	r3, r3, #8
 801c864:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c868:	431c      	orrs	r4, r3
 801c86a:	1c7b      	adds	r3, r7, #1
 801c86c:	f100 812b 	bmi.w	801cac6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c870:	429e      	cmp	r6, r3
 801c872:	f340 8128 	ble.w	801cac6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c876:	2900      	cmp	r1, #0
 801c878:	f000 8128 	beq.w	801cacc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801c87c:	9a01      	ldr	r2, [sp, #4]
 801c87e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c882:	8855      	ldrh	r5, [r2, #2]
 801c884:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c888:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801c88c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c890:	fb08 f802 	mul.w	r8, r8, r2
 801c894:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801c898:	435d      	muls	r5, r3
 801c89a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c89e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c8a2:	44d0      	add	r8, sl
 801c8a4:	f105 0a20 	add.w	sl, r5, #32
 801c8a8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c8ac:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c8b0:	0a2d      	lsrs	r5, r5, #8
 801c8b2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c8b6:	432a      	orrs	r2, r5
 801c8b8:	3001      	adds	r0, #1
 801c8ba:	f100 810d 	bmi.w	801cad8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c8be:	4583      	cmp	fp, r0
 801c8c0:	f340 810a 	ble.w	801cad8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c8c4:	f1be 0f00 	cmp.w	lr, #0
 801c8c8:	f000 810b 	beq.w	801cae2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801c8cc:	2f00      	cmp	r7, #0
 801c8ce:	f2c0 8100 	blt.w	801cad2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c8d2:	42be      	cmp	r6, r7
 801c8d4:	f340 80fd 	ble.w	801cad2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c8d8:	9801      	ldr	r0, [sp, #4]
 801c8da:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801c8de:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c8e2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c8e6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c8ea:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801c8ee:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801c8f2:	fb0a fa00 	mul.w	sl, sl, r0
 801c8f6:	fb05 f808 	mul.w	r8, r5, r8
 801c8fa:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c8fe:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801c902:	4482      	add	sl, r0
 801c904:	f108 0020 	add.w	r0, r8, #32
 801c908:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c90c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c910:	0a00      	lsrs	r0, r0, #8
 801c912:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c916:	ea4b 0b00 	orr.w	fp, fp, r0
 801c91a:	3701      	adds	r7, #1
 801c91c:	f100 80e6 	bmi.w	801caec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c920:	42be      	cmp	r6, r7
 801c922:	f340 80e3 	ble.w	801caec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c926:	2900      	cmp	r1, #0
 801c928:	f000 80e3 	beq.w	801caf2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801c92c:	3601      	adds	r6, #1
 801c92e:	9801      	ldr	r0, [sp, #4]
 801c930:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c934:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c938:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c93c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801c940:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c944:	fb09 f906 	mul.w	r9, r9, r6
 801c948:	fb07 f800 	mul.w	r8, r7, r0
 801c94c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801c950:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c954:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801c958:	44d1      	add	r9, sl
 801c95a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c95e:	f108 0020 	add.w	r0, r8, #32
 801c962:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c966:	0a00      	lsrs	r0, r0, #8
 801c968:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c96c:	4330      	orrs	r0, r6
 801c96e:	b28e      	uxth	r6, r1
 801c970:	fa1f f98e 	uxth.w	r9, lr
 801c974:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c978:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801c97c:	fb06 f809 	mul.w	r8, r6, r9
 801c980:	0136      	lsls	r6, r6, #4
 801c982:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c986:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c98a:	9601      	str	r6, [sp, #4]
 801c98c:	ea4a 0404 	orr.w	r4, sl, r4
 801c990:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c994:	fa1f f689 	uxth.w	r6, r9
 801c998:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c99c:	fb11 f90e 	smulbb	r9, r1, lr
 801c9a0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c9a4:	9602      	str	r6, [sp, #8]
 801c9a6:	4626      	mov	r6, r4
 801c9a8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c9ac:	f1ce 0410 	rsb	r4, lr, #16
 801c9b0:	ea4a 0202 	orr.w	r2, sl, r2
 801c9b4:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c9b8:	1a64      	subs	r4, r4, r1
 801c9ba:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c9be:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c9c2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c9c6:	434a      	muls	r2, r1
 801c9c8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c9cc:	ea4a 0000 	orr.w	r0, sl, r0
 801c9d0:	9903      	ldr	r1, [sp, #12]
 801c9d2:	fb04 2406 	mla	r4, r4, r6, r2
 801c9d6:	9e02      	ldr	r6, [sp, #8]
 801c9d8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c9dc:	fb09 4200 	mla	r2, r9, r0, r4
 801c9e0:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c9e4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801c9e8:	8808      	ldrh	r0, [r1, #0]
 801c9ea:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c9ee:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801c9f2:	ea44 0b0b 	orr.w	fp, r4, fp
 801c9f6:	9c01      	ldr	r4, [sp, #4]
 801c9f8:	b289      	uxth	r1, r1
 801c9fa:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801c9fe:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801ca02:	1ba4      	subs	r4, r4, r6
 801ca04:	9e01      	ldr	r6, [sp, #4]
 801ca06:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ca0a:	eba6 0608 	sub.w	r6, r6, r8
 801ca0e:	b2a4      	uxth	r4, r4
 801ca10:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ca14:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ca18:	b2b6      	uxth	r6, r6
 801ca1a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ca1e:	4373      	muls	r3, r6
 801ca20:	ea42 0e0e 	orr.w	lr, r2, lr
 801ca24:	fb0c 3304 	mla	r3, ip, r4, r3
 801ca28:	9c02      	ldr	r4, [sp, #8]
 801ca2a:	fa1f f28e 	uxth.w	r2, lr
 801ca2e:	fb04 3505 	mla	r5, r4, r5, r3
 801ca32:	10d4      	asrs	r4, r2, #3
 801ca34:	fb08 5707 	mla	r7, r8, r7, r5
 801ca38:	1215      	asrs	r5, r2, #8
 801ca3a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801ca3e:	00d2      	lsls	r2, r2, #3
 801ca40:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801ca44:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ca48:	b2d2      	uxtb	r2, r2
 801ca4a:	434f      	muls	r7, r1
 801ca4c:	1c7b      	adds	r3, r7, #1
 801ca4e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801ca52:	1203      	asrs	r3, r0, #8
 801ca54:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801ca58:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801ca5c:	b2ff      	uxtb	r7, r7
 801ca5e:	fb13 f307 	smulbb	r3, r3, r7
 801ca62:	fb05 3501 	mla	r5, r5, r1, r3
 801ca66:	10c3      	asrs	r3, r0, #3
 801ca68:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801ca6c:	b2ad      	uxth	r5, r5
 801ca6e:	fb13 f307 	smulbb	r3, r3, r7
 801ca72:	fb04 3401 	mla	r4, r4, r1, r3
 801ca76:	00c3      	lsls	r3, r0, #3
 801ca78:	b2db      	uxtb	r3, r3
 801ca7a:	b2a4      	uxth	r4, r4
 801ca7c:	fb13 f307 	smulbb	r3, r3, r7
 801ca80:	fb02 3101 	mla	r1, r2, r1, r3
 801ca84:	1c6b      	adds	r3, r5, #1
 801ca86:	1c62      	adds	r2, r4, #1
 801ca88:	b289      	uxth	r1, r1
 801ca8a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ca8e:	1c4b      	adds	r3, r1, #1
 801ca90:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801ca94:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801ca98:	9a03      	ldr	r2, [sp, #12]
 801ca9a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ca9e:	0964      	lsrs	r4, r4, #5
 801caa0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801caa4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801caa8:	432b      	orrs	r3, r5
 801caaa:	4323      	orrs	r3, r4
 801caac:	8013      	strh	r3, [r2, #0]
 801caae:	b005      	add	sp, #20
 801cab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cab4:	f04f 0c00 	mov.w	ip, #0
 801cab8:	4664      	mov	r4, ip
 801caba:	e6d6      	b.n	801c86a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801cabc:	2300      	movs	r3, #0
 801cabe:	469c      	mov	ip, r3
 801cac0:	461a      	mov	r2, r3
 801cac2:	461c      	mov	r4, r3
 801cac4:	e6f8      	b.n	801c8b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801cac6:	2300      	movs	r3, #0
 801cac8:	461a      	mov	r2, r3
 801caca:	e6f5      	b.n	801c8b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801cacc:	460b      	mov	r3, r1
 801cace:	460a      	mov	r2, r1
 801cad0:	e6f2      	b.n	801c8b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801cad2:	2500      	movs	r5, #0
 801cad4:	46ab      	mov	fp, r5
 801cad6:	e720      	b.n	801c91a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801cad8:	2700      	movs	r7, #0
 801cada:	463d      	mov	r5, r7
 801cadc:	4638      	mov	r0, r7
 801cade:	46bb      	mov	fp, r7
 801cae0:	e745      	b.n	801c96e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801cae2:	4677      	mov	r7, lr
 801cae4:	4675      	mov	r5, lr
 801cae6:	4670      	mov	r0, lr
 801cae8:	46f3      	mov	fp, lr
 801caea:	e740      	b.n	801c96e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801caec:	2700      	movs	r7, #0
 801caee:	4638      	mov	r0, r7
 801caf0:	e73d      	b.n	801c96e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801caf2:	460f      	mov	r7, r1
 801caf4:	4608      	mov	r0, r1
 801caf6:	e73a      	b.n	801c96e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801caf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801caf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cafc:	b097      	sub	sp, #92	@ 0x5c
 801cafe:	9214      	str	r2, [sp, #80]	@ 0x50
 801cb00:	9308      	str	r3, [sp, #32]
 801cb02:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801cb04:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801cb08:	9015      	str	r0, [sp, #84]	@ 0x54
 801cb0a:	9312      	str	r3, [sp, #72]	@ 0x48
 801cb0c:	6850      	ldr	r0, [r2, #4]
 801cb0e:	9111      	str	r1, [sp, #68]	@ 0x44
 801cb10:	6812      	ldr	r2, [r2, #0]
 801cb12:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801cb16:	fb00 1303 	mla	r3, r0, r3, r1
 801cb1a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cb1e:	9309      	str	r3, [sp, #36]	@ 0x24
 801cb20:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cb22:	681b      	ldr	r3, [r3, #0]
 801cb24:	930b      	str	r3, [sp, #44]	@ 0x2c
 801cb26:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cb28:	685b      	ldr	r3, [r3, #4]
 801cb2a:	930c      	str	r3, [sp, #48]	@ 0x30
 801cb2c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801cb30:	930a      	str	r3, [sp, #40]	@ 0x28
 801cb32:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cb34:	2b00      	cmp	r3, #0
 801cb36:	dc03      	bgt.n	801cb40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801cb38:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801cb3a:	2b00      	cmp	r3, #0
 801cb3c:	f340 83cd 	ble.w	801d2da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801cb40:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cb42:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cb46:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cb4a:	1e48      	subs	r0, r1, #1
 801cb4c:	1e55      	subs	r5, r2, #1
 801cb4e:	9b08      	ldr	r3, [sp, #32]
 801cb50:	2b00      	cmp	r3, #0
 801cb52:	f340 81a5 	ble.w	801cea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801cb56:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801cb58:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cb5a:	1436      	asrs	r6, r6, #16
 801cb5c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cb60:	d406      	bmi.n	801cb70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cb62:	4286      	cmp	r6, r0
 801cb64:	da04      	bge.n	801cb70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cb66:	2b00      	cmp	r3, #0
 801cb68:	db02      	blt.n	801cb70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cb6a:	42ab      	cmp	r3, r5
 801cb6c:	f2c0 8199 	blt.w	801cea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801cb70:	3601      	adds	r6, #1
 801cb72:	f100 8186 	bmi.w	801ce82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801cb76:	42b1      	cmp	r1, r6
 801cb78:	f2c0 8183 	blt.w	801ce82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801cb7c:	3301      	adds	r3, #1
 801cb7e:	f100 8180 	bmi.w	801ce82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801cb82:	429a      	cmp	r2, r3
 801cb84:	f2c0 817d 	blt.w	801ce82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801cb88:	9b08      	ldr	r3, [sp, #32]
 801cb8a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801cb8e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801cb90:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cb92:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cb94:	2b00      	cmp	r3, #0
 801cb96:	f340 81a6 	ble.w	801cee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801cb9a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cb9c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801cb9e:	1418      	asrs	r0, r3, #16
 801cba0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cba2:	142d      	asrs	r5, r5, #16
 801cba4:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cba8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cbaa:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cbae:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cbb0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cbb4:	f100 81fa 	bmi.w	801cfac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801cbb8:	f102 3eff 	add.w	lr, r2, #4294967295
 801cbbc:	4575      	cmp	r5, lr
 801cbbe:	f280 81f5 	bge.w	801cfac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801cbc2:	2800      	cmp	r0, #0
 801cbc4:	f2c0 81f2 	blt.w	801cfac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801cbc8:	f103 3eff 	add.w	lr, r3, #4294967295
 801cbcc:	4570      	cmp	r0, lr
 801cbce:	f280 81ed 	bge.w	801cfac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801cbd2:	b212      	sxth	r2, r2
 801cbd4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cbd6:	fa1f fe81 	uxth.w	lr, r1
 801cbda:	fb00 5002 	mla	r0, r0, r2, r5
 801cbde:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cbe2:	eb03 0a00 	add.w	sl, r3, r0
 801cbe6:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cbea:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801cbee:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cbf2:	b29b      	uxth	r3, r3
 801cbf4:	f1bc 0f00 	cmp.w	ip, #0
 801cbf8:	f000 81bb 	beq.w	801cf72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801cbfc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cc00:	eb0a 0b02 	add.w	fp, sl, r2
 801cc04:	fa1f fa8c 	uxth.w	sl, ip
 801cc08:	940d      	str	r4, [sp, #52]	@ 0x34
 801cc0a:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc0e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cc12:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cc16:	eba5 050e 	sub.w	r5, r5, lr
 801cc1a:	940e      	str	r4, [sp, #56]	@ 0x38
 801cc1c:	fa1f fa8a 	uxth.w	sl, sl
 801cc20:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cc22:	b2ad      	uxth	r5, r5
 801cc24:	eba3 030a 	sub.w	r3, r3, sl
 801cc28:	fb08 f505 	mul.w	r5, r8, r5
 801cc2c:	b29b      	uxth	r3, r3
 801cc2e:	fb09 5303 	mla	r3, r9, r3, r5
 801cc32:	fb0a 3304 	mla	r3, sl, r4, r3
 801cc36:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801cc38:	fb0e 3304 	mla	r3, lr, r4, r3
 801cc3c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cc40:	2b00      	cmp	r3, #0
 801cc42:	f000 8111 	beq.w	801ce68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801cc46:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cc48:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801cc4c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801cc50:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cc54:	f000 8192 	beq.w	801cf7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801cc58:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801cc5c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cc60:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cc64:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc68:	fb09 f000 	mul.w	r0, r9, r0
 801cc6c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cc70:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801cc74:	f100 0b20 	add.w	fp, r0, #32
 801cc78:	44ce      	add	lr, r9
 801cc7a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801cc7e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cc82:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cc86:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801cc8a:	ea4e 0909 	orr.w	r9, lr, r9
 801cc8e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801cc92:	8868      	ldrh	r0, [r5, #2]
 801cc94:	d019      	beq.n	801ccca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801cc96:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801cc9a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cc9e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cca2:	fb0a fe0e 	mul.w	lr, sl, lr
 801cca6:	fb08 f800 	mul.w	r8, r8, r0
 801ccaa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801ccae:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801ccb2:	f108 0b20 	add.w	fp, r8, #32
 801ccb6:	4486      	add	lr, r0
 801ccb8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801ccbc:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ccc0:	0a00      	lsrs	r0, r0, #8
 801ccc2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ccc6:	ea4e 0000 	orr.w	r0, lr, r0
 801ccca:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801ccce:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ccd2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ccd6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ccda:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801ccde:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cce2:	ea4e 0909 	orr.w	r9, lr, r9
 801cce6:	ea4a 0000 	orr.w	r0, sl, r0
 801ccea:	f1bc 0f00 	cmp.w	ip, #0
 801ccee:	f000 8147 	beq.w	801cf80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801ccf2:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801ccf6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ccf8:	3a01      	subs	r2, #1
 801ccfa:	2cff      	cmp	r4, #255	@ 0xff
 801ccfc:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801cd00:	f102 0202 	add.w	r2, r2, #2
 801cd04:	eb05 0e02 	add.w	lr, r5, r2
 801cd08:	5aaa      	ldrh	r2, [r5, r2]
 801cd0a:	d018      	beq.n	801cd3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801cd0c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801cd10:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cd14:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cd18:	fb04 fa02 	mul.w	sl, r4, r2
 801cd1c:	fb08 f805 	mul.w	r8, r8, r5
 801cd20:	f10a 0520 	add.w	r5, sl, #32
 801cd24:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cd28:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801cd2c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cd30:	4442      	add	r2, r8
 801cd32:	0a2d      	lsrs	r5, r5, #8
 801cd34:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cd38:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cd3c:	432a      	orrs	r2, r5
 801cd3e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801cd40:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801cd44:	2cff      	cmp	r4, #255	@ 0xff
 801cd46:	d01a      	beq.n	801cd7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801cd48:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801cd4c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cd50:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cd54:	fb04 fa05 	mul.w	sl, r4, r5
 801cd58:	fb08 f80e 	mul.w	r8, r8, lr
 801cd5c:	f10a 0e20 	add.w	lr, sl, #32
 801cd60:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801cd64:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801cd68:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cd6c:	4445      	add	r5, r8
 801cd6e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cd72:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801cd76:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801cd7a:	ea45 050e 	orr.w	r5, r5, lr
 801cd7e:	fb1c fe01 	smulbb	lr, ip, r1
 801cd82:	f1cc 0810 	rsb	r8, ip, #16
 801cd86:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cd8a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cd8e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801cd92:	eba8 0801 	sub.w	r8, r8, r1
 801cd96:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801cd9a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cd9e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801cda2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801cda6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801cdaa:	ea4a 0202 	orr.w	r2, sl, r2
 801cdae:	4341      	muls	r1, r0
 801cdb0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801cdb4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801cdb8:	fb09 1108 	mla	r1, r9, r8, r1
 801cdbc:	ea4b 0505 	orr.w	r5, fp, r5
 801cdc0:	fb0c 1102 	mla	r1, ip, r2, r1
 801cdc4:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cdc8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cdcc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cdd0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cdd4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801cdd8:	ea42 0e0e 	orr.w	lr, r2, lr
 801cddc:	fa1f f28e 	uxth.w	r2, lr
 801cde0:	2bff      	cmp	r3, #255	@ 0xff
 801cde2:	d103      	bne.n	801cdec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cde4:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801cde6:	29ff      	cmp	r1, #255	@ 0xff
 801cde8:	f000 80de 	beq.w	801cfa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cdec:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801cdee:	1215      	asrs	r5, r2, #8
 801cdf0:	8838      	ldrh	r0, [r7, #0]
 801cdf2:	434b      	muls	r3, r1
 801cdf4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cdf8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cdfa:	f103 0c01 	add.w	ip, r3, #1
 801cdfe:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801ce02:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801ce06:	fa5f fc83 	uxtb.w	ip, r3
 801ce0a:	1203      	asrs	r3, r0, #8
 801ce0c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801ce10:	fb13 f30c 	smulbb	r3, r3, ip
 801ce14:	fb05 3501 	mla	r5, r5, r1, r3
 801ce18:	10c3      	asrs	r3, r0, #3
 801ce1a:	10d1      	asrs	r1, r2, #3
 801ce1c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801ce20:	00d2      	lsls	r2, r2, #3
 801ce22:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ce26:	b2ad      	uxth	r5, r5
 801ce28:	fb13 f30c 	smulbb	r3, r3, ip
 801ce2c:	b2d2      	uxtb	r2, r2
 801ce2e:	fb01 3104 	mla	r1, r1, r4, r3
 801ce32:	00c3      	lsls	r3, r0, #3
 801ce34:	b2db      	uxtb	r3, r3
 801ce36:	b289      	uxth	r1, r1
 801ce38:	fb13 f30c 	smulbb	r3, r3, ip
 801ce3c:	fb02 3304 	mla	r3, r2, r4, r3
 801ce40:	b29a      	uxth	r2, r3
 801ce42:	1c6b      	adds	r3, r5, #1
 801ce44:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ce48:	1c53      	adds	r3, r2, #1
 801ce4a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ce4e:	1c4a      	adds	r2, r1, #1
 801ce50:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801ce54:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ce58:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ce5c:	0949      	lsrs	r1, r1, #5
 801ce5e:	432b      	orrs	r3, r5
 801ce60:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ce64:	430b      	orrs	r3, r1
 801ce66:	803b      	strh	r3, [r7, #0]
 801ce68:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801ce6a:	3702      	adds	r7, #2
 801ce6c:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801ce6e:	4413      	add	r3, r2
 801ce70:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801ce72:	9321      	str	r3, [sp, #132]	@ 0x84
 801ce74:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ce76:	441a      	add	r2, r3
 801ce78:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801ce7a:	3b01      	subs	r3, #1
 801ce7c:	9222      	str	r2, [sp, #136]	@ 0x88
 801ce7e:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ce80:	e687      	b.n	801cb92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ce82:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801ce84:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801ce86:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801ce88:	4433      	add	r3, r6
 801ce8a:	9321      	str	r3, [sp, #132]	@ 0x84
 801ce8c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ce8e:	441c      	add	r4, r3
 801ce90:	9b08      	ldr	r3, [sp, #32]
 801ce92:	3b01      	subs	r3, #1
 801ce94:	9422      	str	r4, [sp, #136]	@ 0x88
 801ce96:	9308      	str	r3, [sp, #32]
 801ce98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ce9a:	3302      	adds	r3, #2
 801ce9c:	9309      	str	r3, [sp, #36]	@ 0x24
 801ce9e:	e656      	b.n	801cb4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801cea0:	d028      	beq.n	801cef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801cea2:	9b08      	ldr	r3, [sp, #32]
 801cea4:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801cea6:	3b01      	subs	r3, #1
 801cea8:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801ceaa:	fb00 5003 	mla	r0, r0, r3, r5
 801ceae:	1400      	asrs	r0, r0, #16
 801ceb0:	f53f ae6a 	bmi.w	801cb88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ceb4:	3901      	subs	r1, #1
 801ceb6:	4288      	cmp	r0, r1
 801ceb8:	f6bf ae66 	bge.w	801cb88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cebc:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801cebe:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801cec0:	fb01 0303 	mla	r3, r1, r3, r0
 801cec4:	141b      	asrs	r3, r3, #16
 801cec6:	f53f ae5f 	bmi.w	801cb88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ceca:	3a01      	subs	r2, #1
 801cecc:	4293      	cmp	r3, r2
 801cece:	f6bf ae5b 	bge.w	801cb88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ced2:	9b08      	ldr	r3, [sp, #32]
 801ced4:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801ced8:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801cedc:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cede:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cee0:	2b00      	cmp	r3, #0
 801cee2:	f300 8082 	bgt.w	801cfea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801cee6:	9b08      	ldr	r3, [sp, #32]
 801cee8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ceec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ceee:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cef2:	9309      	str	r3, [sp, #36]	@ 0x24
 801cef4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cef6:	2b00      	cmp	r3, #0
 801cef8:	f340 81ef 	ble.w	801d2da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801cefc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cf00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cf02:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cf06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cf0a:	eef0 6a62 	vmov.f32	s13, s5
 801cf0e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cf12:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cf16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf1a:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801cf1e:	eef0 6a43 	vmov.f32	s13, s6
 801cf22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf26:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801cf2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cf2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cf32:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cf36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cf3a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cf3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cf42:	ee12 2a90 	vmov	r2, s5
 801cf46:	eef0 2a47 	vmov.f32	s5, s14
 801cf4a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf4e:	ee13 2a10 	vmov	r2, s6
 801cf52:	9323      	str	r3, [sp, #140]	@ 0x8c
 801cf54:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cf56:	eeb0 3a67 	vmov.f32	s6, s15
 801cf5a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf5e:	9324      	str	r3, [sp, #144]	@ 0x90
 801cf60:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cf62:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cf64:	3b01      	subs	r3, #1
 801cf66:	9311      	str	r3, [sp, #68]	@ 0x44
 801cf68:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cf6a:	bf08      	it	eq
 801cf6c:	4613      	moveq	r3, r2
 801cf6e:	9308      	str	r3, [sp, #32]
 801cf70:	e5df      	b.n	801cb32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cf72:	fb08 f505 	mul.w	r5, r8, r5
 801cf76:	fb09 5303 	mla	r3, r9, r3, r5
 801cf7a:	e65f      	b.n	801cc3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801cf7c:	4681      	mov	r9, r0
 801cf7e:	e686      	b.n	801cc8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801cf80:	f1c1 0210 	rsb	r2, r1, #16
 801cf84:	4341      	muls	r1, r0
 801cf86:	fb09 1902 	mla	r9, r9, r2, r1
 801cf8a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cf8e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cf92:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cf96:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cf9a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cf9e:	ea42 0909 	orr.w	r9, r2, r9
 801cfa2:	fa1f f289 	uxth.w	r2, r9
 801cfa6:	e71b      	b.n	801cde0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801cfa8:	803a      	strh	r2, [r7, #0]
 801cfaa:	e75d      	b.n	801ce68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801cfac:	f115 0e01 	adds.w	lr, r5, #1
 801cfb0:	f53f af5a 	bmi.w	801ce68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801cfb4:	4572      	cmp	r2, lr
 801cfb6:	f6ff af57 	blt.w	801ce68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801cfba:	f110 0e01 	adds.w	lr, r0, #1
 801cfbe:	f53f af53 	bmi.w	801ce68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801cfc2:	4573      	cmp	r3, lr
 801cfc4:	f6ff af50 	blt.w	801ce68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801cfc8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801cfca:	b21b      	sxth	r3, r3
 801cfcc:	b212      	sxth	r2, r2
 801cfce:	9502      	str	r5, [sp, #8]
 801cfd0:	9301      	str	r3, [sp, #4]
 801cfd2:	9200      	str	r2, [sp, #0]
 801cfd4:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801cfd8:	e9cd c405 	strd	ip, r4, [sp, #20]
 801cfdc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801cfe0:	4639      	mov	r1, r7
 801cfe2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801cfe4:	f7ff fc02 	bl	801c7ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801cfe8:	e73e      	b.n	801ce68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801cfea:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cfec:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cff0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cff2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801cff6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cff8:	fa1f fc82 	uxth.w	ip, r2
 801cffc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d000:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d002:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d006:	141f      	asrs	r7, r3, #16
 801d008:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d00a:	141b      	asrs	r3, r3, #16
 801d00c:	fb01 3707 	mla	r7, r1, r7, r3
 801d010:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d012:	eb03 0a07 	add.w	sl, r3, r7
 801d016:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d01a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801d01e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d022:	b29b      	uxth	r3, r3
 801d024:	2d00      	cmp	r5, #0
 801d026:	f000 813d 	beq.w	801d2a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801d02a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d02e:	eb0a 0b01 	add.w	fp, sl, r1
 801d032:	fa1f fa85 	uxth.w	sl, r5
 801d036:	940f      	str	r4, [sp, #60]	@ 0x3c
 801d038:	fb0a fc0c 	mul.w	ip, sl, ip
 801d03c:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d040:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d044:	eba0 000c 	sub.w	r0, r0, ip
 801d048:	9410      	str	r4, [sp, #64]	@ 0x40
 801d04a:	fa1f fa8a 	uxth.w	sl, sl
 801d04e:	b280      	uxth	r0, r0
 801d050:	eba3 030a 	sub.w	r3, r3, sl
 801d054:	fb08 f000 	mul.w	r0, r8, r0
 801d058:	b29b      	uxth	r3, r3
 801d05a:	fb09 0303 	mla	r3, r9, r3, r0
 801d05e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801d060:	fb0a 3300 	mla	r3, sl, r0, r3
 801d064:	fb0c 3304 	mla	r3, ip, r4, r3
 801d068:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d06c:	2b00      	cmp	r3, #0
 801d06e:	f000 810b 	beq.w	801d288 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801d072:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801d074:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d078:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d07a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d07e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d082:	f000 8114 	beq.w	801d2ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801d086:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d08a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d08e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d092:	fb0a fc0c 	mul.w	ip, sl, ip
 801d096:	fb09 f707 	mul.w	r7, r9, r7
 801d09a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d09e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d0a2:	f107 0b20 	add.w	fp, r7, #32
 801d0a6:	44cc      	add	ip, r9
 801d0a8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d0ac:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d0b0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d0b4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d0b8:	ea4c 0909 	orr.w	r9, ip, r9
 801d0bc:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d0c0:	8847      	ldrh	r7, [r0, #2]
 801d0c2:	d019      	beq.n	801d0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801d0c4:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d0c8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d0cc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d0d0:	fb0a fc0c 	mul.w	ip, sl, ip
 801d0d4:	fb08 f807 	mul.w	r8, r8, r7
 801d0d8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d0dc:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d0e0:	f108 0b20 	add.w	fp, r8, #32
 801d0e4:	44bc      	add	ip, r7
 801d0e6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d0ea:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d0ee:	0a3f      	lsrs	r7, r7, #8
 801d0f0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d0f4:	ea4c 0707 	orr.w	r7, ip, r7
 801d0f8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d0fc:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d100:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d104:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d108:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d10c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d110:	ea4c 0909 	orr.w	r9, ip, r9
 801d114:	ea4a 0707 	orr.w	r7, sl, r7
 801d118:	2d00      	cmp	r5, #0
 801d11a:	f000 80ca 	beq.w	801d2b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801d11e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d122:	3901      	subs	r1, #1
 801d124:	0049      	lsls	r1, r1, #1
 801d126:	3102      	adds	r1, #2
 801d128:	eb00 0c01 	add.w	ip, r0, r1
 801d12c:	5a41      	ldrh	r1, [r0, r1]
 801d12e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801d130:	28ff      	cmp	r0, #255	@ 0xff
 801d132:	d019      	beq.n	801d168 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801d134:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801d138:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d13a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d13e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d142:	fb04 fa01 	mul.w	sl, r4, r1
 801d146:	fb08 f800 	mul.w	r8, r8, r0
 801d14a:	f10a 0020 	add.w	r0, sl, #32
 801d14e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d152:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d156:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d15a:	4441      	add	r1, r8
 801d15c:	0a00      	lsrs	r0, r0, #8
 801d15e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d162:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d166:	4301      	orrs	r1, r0
 801d168:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d16a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d16e:	2cff      	cmp	r4, #255	@ 0xff
 801d170:	d01a      	beq.n	801d1a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801d172:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801d176:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d17a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d17e:	fb04 fa00 	mul.w	sl, r4, r0
 801d182:	fb08 f80c 	mul.w	r8, r8, ip
 801d186:	f10a 0c20 	add.w	ip, sl, #32
 801d18a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d18e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d192:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d196:	4440      	add	r0, r8
 801d198:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d19c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d1a0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d1a4:	ea40 000c 	orr.w	r0, r0, ip
 801d1a8:	fb15 fc02 	smulbb	ip, r5, r2
 801d1ac:	f1c5 0810 	rsb	r8, r5, #16
 801d1b0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d1b4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d1b8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d1bc:	eba8 0802 	sub.w	r8, r8, r2
 801d1c0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d1c4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d1c8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d1cc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d1d0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d1d4:	ea4a 0101 	orr.w	r1, sl, r1
 801d1d8:	437a      	muls	r2, r7
 801d1da:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d1de:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d1e2:	fb09 2208 	mla	r2, r9, r8, r2
 801d1e6:	ea4b 0000 	orr.w	r0, fp, r0
 801d1ea:	fb05 2201 	mla	r2, r5, r1, r2
 801d1ee:	fb0c 2200 	mla	r2, ip, r0, r2
 801d1f2:	0d57      	lsrs	r7, r2, #21
 801d1f4:	0952      	lsrs	r2, r2, #5
 801d1f6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d1fa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d1fe:	433a      	orrs	r2, r7
 801d200:	2bff      	cmp	r3, #255	@ 0xff
 801d202:	b292      	uxth	r2, r2
 801d204:	d102      	bne.n	801d20c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d206:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801d208:	29ff      	cmp	r1, #255	@ 0xff
 801d20a:	d063      	beq.n	801d2d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801d20c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801d20e:	1215      	asrs	r5, r2, #8
 801d210:	f8be 1000 	ldrh.w	r1, [lr]
 801d214:	4343      	muls	r3, r0
 801d216:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d218:	10cf      	asrs	r7, r1, #3
 801d21a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d21e:	1c58      	adds	r0, r3, #1
 801d220:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d224:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801d228:	1208      	asrs	r0, r1, #8
 801d22a:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d22e:	00c9      	lsls	r1, r1, #3
 801d230:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d234:	b2db      	uxtb	r3, r3
 801d236:	b2c9      	uxtb	r1, r1
 801d238:	fb10 f003 	smulbb	r0, r0, r3
 801d23c:	fb11 f103 	smulbb	r1, r1, r3
 801d240:	fb05 0504 	mla	r5, r5, r4, r0
 801d244:	10d0      	asrs	r0, r2, #3
 801d246:	fb17 f703 	smulbb	r7, r7, r3
 801d24a:	00d2      	lsls	r2, r2, #3
 801d24c:	b2ad      	uxth	r5, r5
 801d24e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d252:	b2d2      	uxtb	r2, r2
 801d254:	fb00 7004 	mla	r0, r0, r4, r7
 801d258:	1c6b      	adds	r3, r5, #1
 801d25a:	fb02 1204 	mla	r2, r2, r4, r1
 801d25e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d262:	b292      	uxth	r2, r2
 801d264:	b280      	uxth	r0, r0
 801d266:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d26a:	1c57      	adds	r7, r2, #1
 801d26c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d270:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d274:	433d      	orrs	r5, r7
 801d276:	1c47      	adds	r7, r0, #1
 801d278:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801d27c:	097f      	lsrs	r7, r7, #5
 801d27e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d282:	433d      	orrs	r5, r7
 801d284:	f8ae 5000 	strh.w	r5, [lr]
 801d288:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d28a:	f10e 0e02 	add.w	lr, lr, #2
 801d28e:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d290:	4413      	add	r3, r2
 801d292:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d294:	9321      	str	r3, [sp, #132]	@ 0x84
 801d296:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d298:	441a      	add	r2, r3
 801d29a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d29c:	3b01      	subs	r3, #1
 801d29e:	9222      	str	r2, [sp, #136]	@ 0x88
 801d2a0:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d2a2:	e61c      	b.n	801cede <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801d2a4:	fb08 f000 	mul.w	r0, r8, r0
 801d2a8:	fb09 0303 	mla	r3, r9, r3, r0
 801d2ac:	e6dc      	b.n	801d068 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801d2ae:	46b9      	mov	r9, r7
 801d2b0:	e704      	b.n	801d0bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801d2b2:	f1c2 0110 	rsb	r1, r2, #16
 801d2b6:	437a      	muls	r2, r7
 801d2b8:	fb09 2901 	mla	r9, r9, r1, r2
 801d2bc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d2c0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d2c4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d2c8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d2cc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d2d0:	4302      	orrs	r2, r0
 801d2d2:	e795      	b.n	801d200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801d2d4:	f8ae 2000 	strh.w	r2, [lr]
 801d2d8:	e7d6      	b.n	801d288 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801d2da:	b017      	add	sp, #92	@ 0x5c
 801d2dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d2e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801d2e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d2e4:	b085      	sub	sp, #20
 801d2e6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801d2ea:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801d2ee:	2800      	cmp	r0, #0
 801d2f0:	9103      	str	r1, [sp, #12]
 801d2f2:	fb00 7406 	mla	r4, r0, r6, r7
 801d2f6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801d2fa:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801d2fe:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801d302:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801d306:	eb02 0904 	add.w	r9, r2, r4
 801d30a:	9501      	str	r5, [sp, #4]
 801d30c:	f2c0 8141 	blt.w	801d592 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d310:	4583      	cmp	fp, r0
 801d312:	f340 813e 	ble.w	801d592 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d316:	2f00      	cmp	r7, #0
 801d318:	f2c0 8137 	blt.w	801d58a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d31c:	42be      	cmp	r6, r7
 801d31e:	f340 8134 	ble.w	801d58a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d322:	f812 c004 	ldrb.w	ip, [r2, r4]
 801d326:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801d32a:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801d32e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d332:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801d336:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d33a:	4355      	muls	r5, r2
 801d33c:	fb0c f203 	mul.w	r2, ip, r3
 801d340:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801d344:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801d348:	441d      	add	r5, r3
 801d34a:	f102 0320 	add.w	r3, r2, #32
 801d34e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d352:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801d356:	0a1b      	lsrs	r3, r3, #8
 801d358:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d35c:	431c      	orrs	r4, r3
 801d35e:	1c7b      	adds	r3, r7, #1
 801d360:	f100 811c 	bmi.w	801d59c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d364:	429e      	cmp	r6, r3
 801d366:	f340 8119 	ble.w	801d59c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d36a:	2900      	cmp	r1, #0
 801d36c:	f000 8119 	beq.w	801d5a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801d370:	9a01      	ldr	r2, [sp, #4]
 801d372:	f899 3001 	ldrb.w	r3, [r9, #1]
 801d376:	8855      	ldrh	r5, [r2, #2]
 801d378:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801d37c:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801d380:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d384:	fb08 f802 	mul.w	r8, r8, r2
 801d388:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801d38c:	435d      	muls	r5, r3
 801d38e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d392:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d396:	44d0      	add	r8, sl
 801d398:	f105 0a20 	add.w	sl, r5, #32
 801d39c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d3a0:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d3a4:	0a2d      	lsrs	r5, r5, #8
 801d3a6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d3aa:	432a      	orrs	r2, r5
 801d3ac:	3001      	adds	r0, #1
 801d3ae:	f100 80fe 	bmi.w	801d5ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d3b2:	4583      	cmp	fp, r0
 801d3b4:	f340 80fb 	ble.w	801d5ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d3b8:	f1be 0f00 	cmp.w	lr, #0
 801d3bc:	f000 80fc 	beq.w	801d5b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801d3c0:	2f00      	cmp	r7, #0
 801d3c2:	f2c0 80f1 	blt.w	801d5a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d3c6:	42be      	cmp	r6, r7
 801d3c8:	f340 80ee 	ble.w	801d5a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d3cc:	9801      	ldr	r0, [sp, #4]
 801d3ce:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801d3d2:	f819 5006 	ldrb.w	r5, [r9, r6]
 801d3d6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801d3da:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d3de:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801d3e2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d3e6:	fb0a fa00 	mul.w	sl, sl, r0
 801d3ea:	fb05 f808 	mul.w	r8, r5, r8
 801d3ee:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801d3f2:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801d3f6:	4482      	add	sl, r0
 801d3f8:	f108 0020 	add.w	r0, r8, #32
 801d3fc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d400:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801d404:	0a00      	lsrs	r0, r0, #8
 801d406:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d40a:	ea4b 0b00 	orr.w	fp, fp, r0
 801d40e:	3701      	adds	r7, #1
 801d410:	f100 80d7 	bmi.w	801d5c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d414:	42be      	cmp	r6, r7
 801d416:	f340 80d4 	ble.w	801d5c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d41a:	2900      	cmp	r1, #0
 801d41c:	f000 80d4 	beq.w	801d5c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801d420:	3601      	adds	r6, #1
 801d422:	9801      	ldr	r0, [sp, #4]
 801d424:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d428:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d42c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d430:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801d434:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d438:	fb09 f906 	mul.w	r9, r9, r6
 801d43c:	fb07 f800 	mul.w	r8, r7, r0
 801d440:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801d444:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d448:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801d44c:	44d1      	add	r9, sl
 801d44e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d452:	f108 0020 	add.w	r0, r8, #32
 801d456:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d45a:	0a00      	lsrs	r0, r0, #8
 801d45c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d460:	4330      	orrs	r0, r6
 801d462:	b28e      	uxth	r6, r1
 801d464:	fa1f f98e 	uxth.w	r9, lr
 801d468:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d46c:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801d470:	fb06 f809 	mul.w	r8, r6, r9
 801d474:	0136      	lsls	r6, r6, #4
 801d476:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d47a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d47e:	9601      	str	r6, [sp, #4]
 801d480:	ea4a 0404 	orr.w	r4, sl, r4
 801d484:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d488:	fa1f f689 	uxth.w	r6, r9
 801d48c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d490:	fb11 f90e 	smulbb	r9, r1, lr
 801d494:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d498:	9602      	str	r6, [sp, #8]
 801d49a:	4626      	mov	r6, r4
 801d49c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d4a0:	f1ce 0410 	rsb	r4, lr, #16
 801d4a4:	ea4a 0202 	orr.w	r2, sl, r2
 801d4a8:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d4ac:	1a64      	subs	r4, r4, r1
 801d4ae:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d4b2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d4b6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d4ba:	434a      	muls	r2, r1
 801d4bc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d4c0:	ea4a 0000 	orr.w	r0, sl, r0
 801d4c4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d4c8:	fb04 2406 	mla	r4, r4, r6, r2
 801d4cc:	9903      	ldr	r1, [sp, #12]
 801d4ce:	fb09 4200 	mla	r2, r9, r0, r4
 801d4d2:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d4d6:	9801      	ldr	r0, [sp, #4]
 801d4d8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801d4dc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d4e0:	8809      	ldrh	r1, [r1, #0]
 801d4e2:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801d4e6:	ea44 0b0b 	orr.w	fp, r4, fp
 801d4ea:	9c02      	ldr	r4, [sp, #8]
 801d4ec:	1b00      	subs	r0, r0, r4
 801d4ee:	9c01      	ldr	r4, [sp, #4]
 801d4f0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d4f4:	eba4 0608 	sub.w	r6, r4, r8
 801d4f8:	b280      	uxth	r0, r0
 801d4fa:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d4fe:	b2b6      	uxth	r6, r6
 801d500:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d504:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d508:	4373      	muls	r3, r6
 801d50a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d50e:	fb0c 3300 	mla	r3, ip, r0, r3
 801d512:	9802      	ldr	r0, [sp, #8]
 801d514:	ea42 0e0e 	orr.w	lr, r2, lr
 801d518:	fb00 3505 	mla	r5, r0, r5, r3
 801d51c:	120b      	asrs	r3, r1, #8
 801d51e:	10c8      	asrs	r0, r1, #3
 801d520:	fb08 5707 	mla	r7, r8, r7, r5
 801d524:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d528:	00c9      	lsls	r1, r1, #3
 801d52a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d52e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801d532:	fa1f f28e 	uxth.w	r2, lr
 801d536:	b2c9      	uxtb	r1, r1
 801d538:	b2ff      	uxtb	r7, r7
 801d53a:	437b      	muls	r3, r7
 801d53c:	4378      	muls	r0, r7
 801d53e:	434f      	muls	r7, r1
 801d540:	1c59      	adds	r1, r3, #1
 801d542:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d546:	1213      	asrs	r3, r2, #8
 801d548:	f023 0307 	bic.w	r3, r3, #7
 801d54c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d550:	1c41      	adds	r1, r0, #1
 801d552:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d556:	10d1      	asrs	r1, r2, #3
 801d558:	021b      	lsls	r3, r3, #8
 801d55a:	f021 0103 	bic.w	r1, r1, #3
 801d55e:	00d2      	lsls	r2, r2, #3
 801d560:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801d564:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d568:	00c9      	lsls	r1, r1, #3
 801d56a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d56e:	430b      	orrs	r3, r1
 801d570:	1c79      	adds	r1, r7, #1
 801d572:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801d576:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d57a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d57e:	431a      	orrs	r2, r3
 801d580:	9b03      	ldr	r3, [sp, #12]
 801d582:	801a      	strh	r2, [r3, #0]
 801d584:	b005      	add	sp, #20
 801d586:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d58a:	f04f 0c00 	mov.w	ip, #0
 801d58e:	4664      	mov	r4, ip
 801d590:	e6e5      	b.n	801d35e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801d592:	2300      	movs	r3, #0
 801d594:	469c      	mov	ip, r3
 801d596:	461a      	mov	r2, r3
 801d598:	461c      	mov	r4, r3
 801d59a:	e707      	b.n	801d3ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d59c:	2300      	movs	r3, #0
 801d59e:	461a      	mov	r2, r3
 801d5a0:	e704      	b.n	801d3ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d5a2:	460b      	mov	r3, r1
 801d5a4:	460a      	mov	r2, r1
 801d5a6:	e701      	b.n	801d3ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d5a8:	2500      	movs	r5, #0
 801d5aa:	46ab      	mov	fp, r5
 801d5ac:	e72f      	b.n	801d40e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801d5ae:	2700      	movs	r7, #0
 801d5b0:	463d      	mov	r5, r7
 801d5b2:	4638      	mov	r0, r7
 801d5b4:	46bb      	mov	fp, r7
 801d5b6:	e754      	b.n	801d462 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d5b8:	4677      	mov	r7, lr
 801d5ba:	4675      	mov	r5, lr
 801d5bc:	4670      	mov	r0, lr
 801d5be:	46f3      	mov	fp, lr
 801d5c0:	e74f      	b.n	801d462 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d5c2:	2700      	movs	r7, #0
 801d5c4:	4638      	mov	r0, r7
 801d5c6:	e74c      	b.n	801d462 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d5c8:	460f      	mov	r7, r1
 801d5ca:	4608      	mov	r0, r1
 801d5cc:	e749      	b.n	801d462 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801d5d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d5d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5d4:	b093      	sub	sp, #76	@ 0x4c
 801d5d6:	9210      	str	r2, [sp, #64]	@ 0x40
 801d5d8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d5da:	9011      	str	r0, [sp, #68]	@ 0x44
 801d5dc:	910e      	str	r1, [sp, #56]	@ 0x38
 801d5de:	6850      	ldr	r0, [r2, #4]
 801d5e0:	9306      	str	r3, [sp, #24]
 801d5e2:	6812      	ldr	r2, [r2, #0]
 801d5e4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801d5e8:	fb00 1303 	mla	r3, r0, r3, r1
 801d5ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d5f0:	9307      	str	r3, [sp, #28]
 801d5f2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d5f4:	681b      	ldr	r3, [r3, #0]
 801d5f6:	9308      	str	r3, [sp, #32]
 801d5f8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d5fa:	685b      	ldr	r3, [r3, #4]
 801d5fc:	9309      	str	r3, [sp, #36]	@ 0x24
 801d5fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d600:	2b00      	cmp	r3, #0
 801d602:	dc03      	bgt.n	801d60c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d604:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d606:	2b00      	cmp	r3, #0
 801d608:	f340 83b6 	ble.w	801dd78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801d60c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d60e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d612:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d616:	1e48      	subs	r0, r1, #1
 801d618:	1e55      	subs	r5, r2, #1
 801d61a:	9b06      	ldr	r3, [sp, #24]
 801d61c:	2b00      	cmp	r3, #0
 801d61e:	f340 8165 	ble.w	801d8ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801d622:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801d624:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d626:	1436      	asrs	r6, r6, #16
 801d628:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d62c:	d406      	bmi.n	801d63c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d62e:	4286      	cmp	r6, r0
 801d630:	da04      	bge.n	801d63c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d632:	2b00      	cmp	r3, #0
 801d634:	db02      	blt.n	801d63c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d636:	42ab      	cmp	r3, r5
 801d638:	f2c0 8159 	blt.w	801d8ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801d63c:	3601      	adds	r6, #1
 801d63e:	f100 8146 	bmi.w	801d8ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801d642:	42b1      	cmp	r1, r6
 801d644:	f2c0 8143 	blt.w	801d8ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801d648:	3301      	adds	r3, #1
 801d64a:	f100 8140 	bmi.w	801d8ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801d64e:	429a      	cmp	r2, r3
 801d650:	f2c0 813d 	blt.w	801d8ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801d654:	9b06      	ldr	r3, [sp, #24]
 801d656:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d65a:	9f07      	ldr	r7, [sp, #28]
 801d65c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d65e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d660:	2b00      	cmp	r3, #0
 801d662:	f340 8166 	ble.w	801d932 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d666:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d668:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d66a:	1418      	asrs	r0, r3, #16
 801d66c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d66e:	142d      	asrs	r5, r5, #16
 801d670:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d674:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d676:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d67a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d67c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d680:	f100 81f0 	bmi.w	801da64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801d684:	f102 3eff 	add.w	lr, r2, #4294967295
 801d688:	4575      	cmp	r5, lr
 801d68a:	f280 81eb 	bge.w	801da64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801d68e:	2800      	cmp	r0, #0
 801d690:	f2c0 81e8 	blt.w	801da64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801d694:	f103 3eff 	add.w	lr, r3, #4294967295
 801d698:	4570      	cmp	r0, lr
 801d69a:	f280 81e3 	bge.w	801da64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801d69e:	b212      	sxth	r2, r2
 801d6a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d6a2:	fa1f fe81 	uxth.w	lr, r1
 801d6a6:	fb00 5002 	mla	r0, r0, r2, r5
 801d6aa:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d6ae:	eb03 0a00 	add.w	sl, r3, r0
 801d6b2:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d6b6:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801d6ba:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d6be:	b29b      	uxth	r3, r3
 801d6c0:	f1bc 0f00 	cmp.w	ip, #0
 801d6c4:	f000 817b 	beq.w	801d9be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801d6c8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d6cc:	eb0a 0b02 	add.w	fp, sl, r2
 801d6d0:	fa1f fa8c 	uxth.w	sl, ip
 801d6d4:	940a      	str	r4, [sp, #40]	@ 0x28
 801d6d6:	fb0a fe0e 	mul.w	lr, sl, lr
 801d6da:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d6de:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d6e2:	eba5 050e 	sub.w	r5, r5, lr
 801d6e6:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d6e8:	fa1f fa8a 	uxth.w	sl, sl
 801d6ec:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d6ee:	b2ad      	uxth	r5, r5
 801d6f0:	eba3 030a 	sub.w	r3, r3, sl
 801d6f4:	fb08 f505 	mul.w	r5, r8, r5
 801d6f8:	b29b      	uxth	r3, r3
 801d6fa:	fb09 5303 	mla	r3, r9, r3, r5
 801d6fe:	fb0a 3304 	mla	r3, sl, r4, r3
 801d702:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d704:	fb0e 3304 	mla	r3, lr, r4, r3
 801d708:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d70c:	2b00      	cmp	r3, #0
 801d70e:	f000 80d1 	beq.w	801d8b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d712:	9c08      	ldr	r4, [sp, #32]
 801d714:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d718:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d71c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d720:	f000 8152 	beq.w	801d9c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d724:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d728:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d72c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d730:	fb0a fe0e 	mul.w	lr, sl, lr
 801d734:	fb09 f000 	mul.w	r0, r9, r0
 801d738:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d73c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d740:	f100 0b20 	add.w	fp, r0, #32
 801d744:	44ce      	add	lr, r9
 801d746:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d74a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d74e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d752:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d756:	ea4e 0909 	orr.w	r9, lr, r9
 801d75a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d75e:	8868      	ldrh	r0, [r5, #2]
 801d760:	d019      	beq.n	801d796 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d762:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d766:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d76a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d76e:	fb0a fe0e 	mul.w	lr, sl, lr
 801d772:	fb08 f800 	mul.w	r8, r8, r0
 801d776:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d77a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d77e:	f108 0b20 	add.w	fp, r8, #32
 801d782:	4486      	add	lr, r0
 801d784:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d788:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d78c:	0a00      	lsrs	r0, r0, #8
 801d78e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d792:	ea4e 0000 	orr.w	r0, lr, r0
 801d796:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d79a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d79e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d7a2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d7a6:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801d7aa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d7ae:	ea4e 0909 	orr.w	r9, lr, r9
 801d7b2:	ea4a 0000 	orr.w	r0, sl, r0
 801d7b6:	f1bc 0f00 	cmp.w	ip, #0
 801d7ba:	f000 8107 	beq.w	801d9cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801d7be:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801d7c2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d7c4:	3a01      	subs	r2, #1
 801d7c6:	2cff      	cmp	r4, #255	@ 0xff
 801d7c8:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801d7cc:	f102 0202 	add.w	r2, r2, #2
 801d7d0:	eb05 0e02 	add.w	lr, r5, r2
 801d7d4:	5aaa      	ldrh	r2, [r5, r2]
 801d7d6:	d018      	beq.n	801d80a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801d7d8:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801d7dc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d7e0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d7e4:	fb04 fa02 	mul.w	sl, r4, r2
 801d7e8:	fb08 f805 	mul.w	r8, r8, r5
 801d7ec:	f10a 0520 	add.w	r5, sl, #32
 801d7f0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d7f4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d7f8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d7fc:	4442      	add	r2, r8
 801d7fe:	0a2d      	lsrs	r5, r5, #8
 801d800:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d804:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d808:	432a      	orrs	r2, r5
 801d80a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d80c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d810:	2cff      	cmp	r4, #255	@ 0xff
 801d812:	d01a      	beq.n	801d84a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801d814:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801d818:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d81c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d820:	fb04 fa05 	mul.w	sl, r4, r5
 801d824:	fb08 f80e 	mul.w	r8, r8, lr
 801d828:	f10a 0e20 	add.w	lr, sl, #32
 801d82c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d830:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d834:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d838:	4445      	add	r5, r8
 801d83a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d83e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d842:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801d846:	ea45 050e 	orr.w	r5, r5, lr
 801d84a:	fb1c fe01 	smulbb	lr, ip, r1
 801d84e:	f1cc 0810 	rsb	r8, ip, #16
 801d852:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d856:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d85a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d85e:	eba8 0801 	sub.w	r8, r8, r1
 801d862:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d866:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d86a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d86e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d872:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d876:	ea4a 0202 	orr.w	r2, sl, r2
 801d87a:	4341      	muls	r1, r0
 801d87c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d880:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d884:	fb09 1108 	mla	r1, r9, r8, r1
 801d888:	ea4b 0505 	orr.w	r5, fp, r5
 801d88c:	fb0c 1102 	mla	r1, ip, r2, r1
 801d890:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d894:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d898:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d89c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d8a0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d8a4:	ea42 0e0e 	orr.w	lr, r2, lr
 801d8a8:	fa1f f28e 	uxth.w	r2, lr
 801d8ac:	2bff      	cmp	r3, #255	@ 0xff
 801d8ae:	f040 80a1 	bne.w	801d9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801d8b2:	803a      	strh	r2, [r7, #0]
 801d8b4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d8b6:	3702      	adds	r7, #2
 801d8b8:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d8ba:	4413      	add	r3, r2
 801d8bc:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d8be:	931d      	str	r3, [sp, #116]	@ 0x74
 801d8c0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d8c2:	441a      	add	r2, r3
 801d8c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d8c6:	3b01      	subs	r3, #1
 801d8c8:	921e      	str	r2, [sp, #120]	@ 0x78
 801d8ca:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d8cc:	e6c7      	b.n	801d65e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d8ce:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d8d0:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801d8d2:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801d8d4:	4433      	add	r3, r6
 801d8d6:	931d      	str	r3, [sp, #116]	@ 0x74
 801d8d8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d8da:	441c      	add	r4, r3
 801d8dc:	9b06      	ldr	r3, [sp, #24]
 801d8de:	3b01      	subs	r3, #1
 801d8e0:	941e      	str	r4, [sp, #120]	@ 0x78
 801d8e2:	9306      	str	r3, [sp, #24]
 801d8e4:	9b07      	ldr	r3, [sp, #28]
 801d8e6:	3302      	adds	r3, #2
 801d8e8:	9307      	str	r3, [sp, #28]
 801d8ea:	e696      	b.n	801d61a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d8ec:	d028      	beq.n	801d940 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d8ee:	9b06      	ldr	r3, [sp, #24]
 801d8f0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d8f2:	3b01      	subs	r3, #1
 801d8f4:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d8f6:	fb00 5003 	mla	r0, r0, r3, r5
 801d8fa:	1400      	asrs	r0, r0, #16
 801d8fc:	f53f aeaa 	bmi.w	801d654 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d900:	3901      	subs	r1, #1
 801d902:	4288      	cmp	r0, r1
 801d904:	f6bf aea6 	bge.w	801d654 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d908:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801d90a:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801d90c:	fb01 0303 	mla	r3, r1, r3, r0
 801d910:	141b      	asrs	r3, r3, #16
 801d912:	f53f ae9f 	bmi.w	801d654 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d916:	3a01      	subs	r2, #1
 801d918:	4293      	cmp	r3, r2
 801d91a:	f6bf ae9b 	bge.w	801d654 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d91e:	9b06      	ldr	r3, [sp, #24]
 801d920:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d924:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801d928:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d92a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d92c:	2b00      	cmp	r3, #0
 801d92e:	f300 80b6 	bgt.w	801da9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801d932:	9b06      	ldr	r3, [sp, #24]
 801d934:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d938:	9b07      	ldr	r3, [sp, #28]
 801d93a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d93e:	9307      	str	r3, [sp, #28]
 801d940:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d942:	2b00      	cmp	r3, #0
 801d944:	f340 8218 	ble.w	801dd78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801d948:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d94c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d94e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d952:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d956:	eef0 6a62 	vmov.f32	s13, s5
 801d95a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d95e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d962:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d966:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801d96a:	eef0 6a43 	vmov.f32	s13, s6
 801d96e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d972:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801d976:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d97a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d97e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d982:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d986:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d98a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d98e:	ee12 2a90 	vmov	r2, s5
 801d992:	eef0 2a47 	vmov.f32	s5, s14
 801d996:	fb92 f3f3 	sdiv	r3, r2, r3
 801d99a:	ee13 2a10 	vmov	r2, s6
 801d99e:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d9a0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d9a2:	eeb0 3a67 	vmov.f32	s6, s15
 801d9a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d9aa:	9320      	str	r3, [sp, #128]	@ 0x80
 801d9ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d9ae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801d9b0:	3b01      	subs	r3, #1
 801d9b2:	930e      	str	r3, [sp, #56]	@ 0x38
 801d9b4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d9b6:	bf08      	it	eq
 801d9b8:	4613      	moveq	r3, r2
 801d9ba:	9306      	str	r3, [sp, #24]
 801d9bc:	e61f      	b.n	801d5fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d9be:	fb08 f505 	mul.w	r5, r8, r5
 801d9c2:	fb09 5303 	mla	r3, r9, r3, r5
 801d9c6:	e69f      	b.n	801d708 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d9c8:	4681      	mov	r9, r0
 801d9ca:	e6c6      	b.n	801d75a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d9cc:	f1c1 0210 	rsb	r2, r1, #16
 801d9d0:	4341      	muls	r1, r0
 801d9d2:	fb09 1902 	mla	r9, r9, r2, r1
 801d9d6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d9da:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d9de:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d9e2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d9e6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d9ea:	ea42 0909 	orr.w	r9, r2, r9
 801d9ee:	fa1f f289 	uxth.w	r2, r9
 801d9f2:	e75b      	b.n	801d8ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 801d9f4:	f8b7 c000 	ldrh.w	ip, [r7]
 801d9f8:	43db      	mvns	r3, r3
 801d9fa:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d9fe:	fa5f fe83 	uxtb.w	lr, r3
 801da02:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801da06:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801da0a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801da0e:	fb00 f00e 	mul.w	r0, r0, lr
 801da12:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801da16:	b2db      	uxtb	r3, r3
 801da18:	1c41      	adds	r1, r0, #1
 801da1a:	fb05 f50e 	mul.w	r5, r5, lr
 801da1e:	fb03 f30e 	mul.w	r3, r3, lr
 801da22:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801da26:	1211      	asrs	r1, r2, #8
 801da28:	f021 0107 	bic.w	r1, r1, #7
 801da2c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801da30:	48d3      	ldr	r0, [pc, #844]	@ (801dd80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801da32:	b2c9      	uxtb	r1, r1
 801da34:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801da38:	1c69      	adds	r1, r5, #1
 801da3a:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801da3e:	10d1      	asrs	r1, r2, #3
 801da40:	00d2      	lsls	r2, r2, #3
 801da42:	f021 0103 	bic.w	r1, r1, #3
 801da46:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801da4a:	00c9      	lsls	r1, r1, #3
 801da4c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801da50:	4301      	orrs	r1, r0
 801da52:	1c58      	adds	r0, r3, #1
 801da54:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801da58:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801da5c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801da60:	430a      	orrs	r2, r1
 801da62:	e726      	b.n	801d8b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801da64:	f115 0e01 	adds.w	lr, r5, #1
 801da68:	f53f af24 	bmi.w	801d8b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801da6c:	4572      	cmp	r2, lr
 801da6e:	f6ff af21 	blt.w	801d8b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801da72:	f110 0e01 	adds.w	lr, r0, #1
 801da76:	f53f af1d 	bmi.w	801d8b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801da7a:	4573      	cmp	r3, lr
 801da7c:	f6ff af1a 	blt.w	801d8b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801da80:	b21b      	sxth	r3, r3
 801da82:	b212      	sxth	r2, r2
 801da84:	9301      	str	r3, [sp, #4]
 801da86:	9200      	str	r2, [sp, #0]
 801da88:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801da8c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801da90:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801da94:	4639      	mov	r1, r7
 801da96:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801da98:	f7ff fc22 	bl	801d2e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801da9c:	e70a      	b.n	801d8b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801da9e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801daa0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801daa4:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801daa6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801daaa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801daac:	fa1f fc82 	uxth.w	ip, r2
 801dab0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dab4:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801dab6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801daba:	141f      	asrs	r7, r3, #16
 801dabc:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801dabe:	141b      	asrs	r3, r3, #16
 801dac0:	fb01 3707 	mla	r7, r1, r7, r3
 801dac4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dac6:	eb03 0a07 	add.w	sl, r3, r7
 801daca:	f813 9007 	ldrb.w	r9, [r3, r7]
 801dace:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801dad2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801dad6:	b29b      	uxth	r3, r3
 801dad8:	2d00      	cmp	r5, #0
 801dada:	f000 80fe 	beq.w	801dcda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801dade:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801dae2:	eb0a 0b01 	add.w	fp, sl, r1
 801dae6:	fa1f fa85 	uxth.w	sl, r5
 801daea:	940c      	str	r4, [sp, #48]	@ 0x30
 801daec:	fb0a fc0c 	mul.w	ip, sl, ip
 801daf0:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801daf4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801daf8:	eba0 000c 	sub.w	r0, r0, ip
 801dafc:	940d      	str	r4, [sp, #52]	@ 0x34
 801dafe:	fa1f fa8a 	uxth.w	sl, sl
 801db02:	b280      	uxth	r0, r0
 801db04:	eba3 030a 	sub.w	r3, r3, sl
 801db08:	fb08 f000 	mul.w	r0, r8, r0
 801db0c:	b29b      	uxth	r3, r3
 801db0e:	fb09 0303 	mla	r3, r9, r3, r0
 801db12:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801db14:	fb0a 3300 	mla	r3, sl, r0, r3
 801db18:	fb0c 3304 	mla	r3, ip, r4, r3
 801db1c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801db20:	2b00      	cmp	r3, #0
 801db22:	f000 80cc 	beq.w	801dcbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801db26:	9808      	ldr	r0, [sp, #32]
 801db28:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801db2c:	9c08      	ldr	r4, [sp, #32]
 801db2e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801db32:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801db36:	f000 80d5 	beq.w	801dce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801db3a:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801db3e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801db42:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801db46:	fb0a fc0c 	mul.w	ip, sl, ip
 801db4a:	fb09 f707 	mul.w	r7, r9, r7
 801db4e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801db52:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801db56:	f107 0b20 	add.w	fp, r7, #32
 801db5a:	44cc      	add	ip, r9
 801db5c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801db60:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801db64:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801db68:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801db6c:	ea4c 0909 	orr.w	r9, ip, r9
 801db70:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801db74:	8847      	ldrh	r7, [r0, #2]
 801db76:	d019      	beq.n	801dbac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 801db78:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801db7c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801db80:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801db84:	fb0a fc0c 	mul.w	ip, sl, ip
 801db88:	fb08 f807 	mul.w	r8, r8, r7
 801db8c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801db90:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801db94:	f108 0b20 	add.w	fp, r8, #32
 801db98:	44bc      	add	ip, r7
 801db9a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801db9e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801dba2:	0a3f      	lsrs	r7, r7, #8
 801dba4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801dba8:	ea4c 0707 	orr.w	r7, ip, r7
 801dbac:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801dbb0:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801dbb4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801dbb8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801dbbc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801dbc0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dbc4:	ea4c 0909 	orr.w	r9, ip, r9
 801dbc8:	ea4a 0707 	orr.w	r7, sl, r7
 801dbcc:	2d00      	cmp	r5, #0
 801dbce:	f000 808b 	beq.w	801dce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801dbd2:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801dbd6:	3901      	subs	r1, #1
 801dbd8:	0049      	lsls	r1, r1, #1
 801dbda:	3102      	adds	r1, #2
 801dbdc:	eb00 0c01 	add.w	ip, r0, r1
 801dbe0:	5a41      	ldrh	r1, [r0, r1]
 801dbe2:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801dbe4:	28ff      	cmp	r0, #255	@ 0xff
 801dbe6:	d019      	beq.n	801dc1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 801dbe8:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801dbec:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801dbee:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801dbf2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dbf6:	fb04 fa01 	mul.w	sl, r4, r1
 801dbfa:	fb08 f800 	mul.w	r8, r8, r0
 801dbfe:	f10a 0020 	add.w	r0, sl, #32
 801dc02:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801dc06:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801dc0a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801dc0e:	4441      	add	r1, r8
 801dc10:	0a00      	lsrs	r0, r0, #8
 801dc12:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801dc16:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801dc1a:	4301      	orrs	r1, r0
 801dc1c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801dc1e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801dc22:	2cff      	cmp	r4, #255	@ 0xff
 801dc24:	d01a      	beq.n	801dc5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 801dc26:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801dc2a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801dc2e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dc32:	fb04 fa00 	mul.w	sl, r4, r0
 801dc36:	fb08 f80c 	mul.w	r8, r8, ip
 801dc3a:	f10a 0c20 	add.w	ip, sl, #32
 801dc3e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801dc42:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801dc46:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801dc4a:	4440      	add	r0, r8
 801dc4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dc50:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801dc54:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801dc58:	ea40 000c 	orr.w	r0, r0, ip
 801dc5c:	fb15 fc02 	smulbb	ip, r5, r2
 801dc60:	f1c5 0810 	rsb	r8, r5, #16
 801dc64:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801dc68:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801dc6c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801dc70:	eba8 0802 	sub.w	r8, r8, r2
 801dc74:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801dc78:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dc7c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801dc80:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801dc84:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801dc88:	ea4a 0101 	orr.w	r1, sl, r1
 801dc8c:	437a      	muls	r2, r7
 801dc8e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801dc92:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801dc96:	fb09 2208 	mla	r2, r9, r8, r2
 801dc9a:	ea4b 0000 	orr.w	r0, fp, r0
 801dc9e:	fb05 2201 	mla	r2, r5, r1, r2
 801dca2:	fb0c 2200 	mla	r2, ip, r0, r2
 801dca6:	0d57      	lsrs	r7, r2, #21
 801dca8:	0952      	lsrs	r2, r2, #5
 801dcaa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801dcae:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dcb2:	433a      	orrs	r2, r7
 801dcb4:	2bff      	cmp	r3, #255	@ 0xff
 801dcb6:	b292      	uxth	r2, r2
 801dcb8:	d127      	bne.n	801dd0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 801dcba:	f8ae 2000 	strh.w	r2, [lr]
 801dcbe:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801dcc0:	f10e 0e02 	add.w	lr, lr, #2
 801dcc4:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801dcc6:	4413      	add	r3, r2
 801dcc8:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801dcca:	931d      	str	r3, [sp, #116]	@ 0x74
 801dccc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dcce:	441a      	add	r2, r3
 801dcd0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801dcd2:	3b01      	subs	r3, #1
 801dcd4:	921e      	str	r2, [sp, #120]	@ 0x78
 801dcd6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801dcd8:	e627      	b.n	801d92a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801dcda:	fb08 f000 	mul.w	r0, r8, r0
 801dcde:	fb09 0303 	mla	r3, r9, r3, r0
 801dce2:	e71b      	b.n	801db1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 801dce4:	46b9      	mov	r9, r7
 801dce6:	e743      	b.n	801db70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 801dce8:	f1c2 0110 	rsb	r1, r2, #16
 801dcec:	437a      	muls	r2, r7
 801dcee:	fb09 2901 	mla	r9, r9, r1, r2
 801dcf2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801dcf6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801dcfa:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801dcfe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801dd02:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dd06:	4302      	orrs	r2, r0
 801dd08:	e7d4      	b.n	801dcb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 801dd0a:	f8be 7000 	ldrh.w	r7, [lr]
 801dd0e:	43db      	mvns	r3, r3
 801dd10:	4c1b      	ldr	r4, [pc, #108]	@ (801dd80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801dd12:	1238      	asrs	r0, r7, #8
 801dd14:	fa5f fc83 	uxtb.w	ip, r3
 801dd18:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801dd1c:	10fd      	asrs	r5, r7, #3
 801dd1e:	00fb      	lsls	r3, r7, #3
 801dd20:	fb00 f00c 	mul.w	r0, r0, ip
 801dd24:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801dd28:	b2db      	uxtb	r3, r3
 801dd2a:	fb05 f10c 	mul.w	r1, r5, ip
 801dd2e:	1c45      	adds	r5, r0, #1
 801dd30:	fb03 f30c 	mul.w	r3, r3, ip
 801dd34:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801dd38:	1215      	asrs	r5, r2, #8
 801dd3a:	f025 0507 	bic.w	r5, r5, #7
 801dd3e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801dd42:	1c4d      	adds	r5, r1, #1
 801dd44:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801dd48:	10d1      	asrs	r1, r2, #3
 801dd4a:	b2c0      	uxtb	r0, r0
 801dd4c:	f021 0103 	bic.w	r1, r1, #3
 801dd50:	00d2      	lsls	r2, r2, #3
 801dd52:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801dd56:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801dd5a:	00c9      	lsls	r1, r1, #3
 801dd5c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801dd60:	4308      	orrs	r0, r1
 801dd62:	1c59      	adds	r1, r3, #1
 801dd64:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dd68:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801dd6c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801dd70:	4318      	orrs	r0, r3
 801dd72:	f8ae 0000 	strh.w	r0, [lr]
 801dd76:	e7a2      	b.n	801dcbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801dd78:	b013      	add	sp, #76	@ 0x4c
 801dd7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd7e:	bf00      	nop
 801dd80:	fffff800 	.word	0xfffff800

0801dd84 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801dd84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dd88:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801dd8c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801dd90:	fb05 4c03 	mla	ip, r5, r3, r4
 801dd94:	2d00      	cmp	r5, #0
 801dd96:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801dd9a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801dd9e:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801dda2:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801dda6:	8808      	ldrh	r0, [r1, #0]
 801dda8:	f2c0 80a7 	blt.w	801defa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801ddac:	45aa      	cmp	sl, r5
 801ddae:	f340 80a4 	ble.w	801defa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801ddb2:	2c00      	cmp	r4, #0
 801ddb4:	f2c0 809f 	blt.w	801def6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801ddb8:	42a3      	cmp	r3, r4
 801ddba:	f340 809c 	ble.w	801def6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801ddbe:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801ddc2:	1c62      	adds	r2, r4, #1
 801ddc4:	f100 809c 	bmi.w	801df00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801ddc8:	4293      	cmp	r3, r2
 801ddca:	f340 8099 	ble.w	801df00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801ddce:	f1b9 0f00 	cmp.w	r9, #0
 801ddd2:	f000 8095 	beq.w	801df00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801ddd6:	f8be c002 	ldrh.w	ip, [lr, #2]
 801ddda:	3501      	adds	r5, #1
 801dddc:	f100 8094 	bmi.w	801df08 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801dde0:	45aa      	cmp	sl, r5
 801dde2:	f340 8091 	ble.w	801df08 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801dde6:	2f00      	cmp	r7, #0
 801dde8:	f000 808e 	beq.w	801df08 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801ddec:	2c00      	cmp	r4, #0
 801ddee:	f2c0 8089 	blt.w	801df04 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801ddf2:	42a3      	cmp	r3, r4
 801ddf4:	f340 8086 	ble.w	801df04 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801ddf8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801ddfc:	3401      	adds	r4, #1
 801ddfe:	f100 8086 	bmi.w	801df0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801de02:	42a3      	cmp	r3, r4
 801de04:	f340 8083 	ble.w	801df0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801de08:	f1b9 0f00 	cmp.w	r9, #0
 801de0c:	d07f      	beq.n	801df0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801de0e:	3301      	adds	r3, #1
 801de10:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801de14:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801de18:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801de1c:	fb19 fe07 	smulbb	lr, r9, r7
 801de20:	f1c7 0210 	rsb	r2, r7, #16
 801de24:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801de28:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801de2c:	eba2 0209 	sub.w	r2, r2, r9
 801de30:	ea44 0808 	orr.w	r8, r4, r8
 801de34:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801de38:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801de3c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801de40:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801de44:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801de48:	ea44 0c0c 	orr.w	ip, r4, ip
 801de4c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801de50:	fb04 f40c 	mul.w	r4, r4, ip
 801de54:	fb02 4808 	mla	r8, r2, r8, r4
 801de58:	041a      	lsls	r2, r3, #16
 801de5a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801de5e:	b2b4      	uxth	r4, r6
 801de60:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801de64:	43f6      	mvns	r6, r6
 801de66:	4313      	orrs	r3, r2
 801de68:	042a      	lsls	r2, r5, #16
 801de6a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801de6e:	b2f6      	uxtb	r6, r6
 801de70:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801de74:	fb0e 8303 	mla	r3, lr, r3, r8
 801de78:	432a      	orrs	r2, r5
 801de7a:	fb07 3202 	mla	r2, r7, r2, r3
 801de7e:	10c7      	asrs	r7, r0, #3
 801de80:	0d53      	lsrs	r3, r2, #21
 801de82:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801de86:	0952      	lsrs	r2, r2, #5
 801de88:	fb17 f706 	smulbb	r7, r7, r6
 801de8c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801de90:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801de94:	431a      	orrs	r2, r3
 801de96:	b293      	uxth	r3, r2
 801de98:	1202      	asrs	r2, r0, #8
 801de9a:	121d      	asrs	r5, r3, #8
 801de9c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801dea0:	00c0      	lsls	r0, r0, #3
 801dea2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801dea6:	fb12 f206 	smulbb	r2, r2, r6
 801deaa:	b2c0      	uxtb	r0, r0
 801deac:	fb05 2504 	mla	r5, r5, r4, r2
 801deb0:	10da      	asrs	r2, r3, #3
 801deb2:	fb10 f006 	smulbb	r0, r0, r6
 801deb6:	00db      	lsls	r3, r3, #3
 801deb8:	b2ad      	uxth	r5, r5
 801deba:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801debe:	b2db      	uxtb	r3, r3
 801dec0:	fb02 7204 	mla	r2, r2, r4, r7
 801dec4:	fb03 0004 	mla	r0, r3, r4, r0
 801dec8:	1c6b      	adds	r3, r5, #1
 801deca:	b292      	uxth	r2, r2
 801decc:	b280      	uxth	r0, r0
 801dece:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ded2:	1c43      	adds	r3, r0, #1
 801ded4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801ded8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801dedc:	1c50      	adds	r0, r2, #1
 801dede:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801dee2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dee6:	0952      	lsrs	r2, r2, #5
 801dee8:	432b      	orrs	r3, r5
 801deea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801deee:	4313      	orrs	r3, r2
 801def0:	800b      	strh	r3, [r1, #0]
 801def2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801def6:	4680      	mov	r8, r0
 801def8:	e763      	b.n	801ddc2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801defa:	4684      	mov	ip, r0
 801defc:	4680      	mov	r8, r0
 801defe:	e76c      	b.n	801ddda <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801df00:	4684      	mov	ip, r0
 801df02:	e76a      	b.n	801ddda <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801df04:	4605      	mov	r5, r0
 801df06:	e779      	b.n	801ddfc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801df08:	4603      	mov	r3, r0
 801df0a:	4605      	mov	r5, r0
 801df0c:	e782      	b.n	801de14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801df0e:	4603      	mov	r3, r0
 801df10:	e780      	b.n	801de14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801df12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801df12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df16:	b093      	sub	sp, #76	@ 0x4c
 801df18:	461d      	mov	r5, r3
 801df1a:	9210      	str	r2, [sp, #64]	@ 0x40
 801df1c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801df1e:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801df22:	910a      	str	r1, [sp, #40]	@ 0x28
 801df24:	920b      	str	r2, [sp, #44]	@ 0x2c
 801df26:	6859      	ldr	r1, [r3, #4]
 801df28:	681b      	ldr	r3, [r3, #0]
 801df2a:	9011      	str	r0, [sp, #68]	@ 0x44
 801df2c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801df30:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801df34:	fb01 2707 	mla	r7, r1, r7, r2
 801df38:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801df3c:	9307      	str	r3, [sp, #28]
 801df3e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801df40:	681b      	ldr	r3, [r3, #0]
 801df42:	9309      	str	r3, [sp, #36]	@ 0x24
 801df44:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801df46:	43db      	mvns	r3, r3
 801df48:	b2db      	uxtb	r3, r3
 801df4a:	9308      	str	r3, [sp, #32]
 801df4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801df4e:	2b00      	cmp	r3, #0
 801df50:	dc03      	bgt.n	801df5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801df52:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801df54:	2b00      	cmp	r3, #0
 801df56:	f340 8205 	ble.w	801e364 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801df5a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801df5c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801df60:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801df64:	1e48      	subs	r0, r1, #1
 801df66:	f102 3cff 	add.w	ip, r2, #4294967295
 801df6a:	2d00      	cmp	r5, #0
 801df6c:	f340 80da 	ble.w	801e124 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801df70:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801df74:	ea4f 4326 	mov.w	r3, r6, asr #16
 801df78:	d406      	bmi.n	801df88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df7a:	4586      	cmp	lr, r0
 801df7c:	da04      	bge.n	801df88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df7e:	2b00      	cmp	r3, #0
 801df80:	db02      	blt.n	801df88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df82:	4563      	cmp	r3, ip
 801df84:	f2c0 80cf 	blt.w	801e126 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801df88:	f11e 0e01 	adds.w	lr, lr, #1
 801df8c:	f100 80c1 	bmi.w	801e112 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801df90:	4571      	cmp	r1, lr
 801df92:	f2c0 80be 	blt.w	801e112 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801df96:	3301      	adds	r3, #1
 801df98:	f100 80bb 	bmi.w	801e112 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801df9c:	429a      	cmp	r2, r3
 801df9e:	f2c0 80b8 	blt.w	801e112 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dfa2:	46a9      	mov	r9, r5
 801dfa4:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801dfa8:	f1b9 0f00 	cmp.w	r9, #0
 801dfac:	f340 80d8 	ble.w	801e160 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801dfb0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dfb2:	1421      	asrs	r1, r4, #16
 801dfb4:	ea4f 4026 	mov.w	r0, r6, asr #16
 801dfb8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dfbc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801dfc0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801dfc4:	f100 8112 	bmi.w	801e1ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801dfc8:	f10e 3aff 	add.w	sl, lr, #4294967295
 801dfcc:	4551      	cmp	r1, sl
 801dfce:	f280 810d 	bge.w	801e1ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801dfd2:	2800      	cmp	r0, #0
 801dfd4:	f2c0 810a 	blt.w	801e1ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801dfd8:	f103 3aff 	add.w	sl, r3, #4294967295
 801dfdc:	4550      	cmp	r0, sl
 801dfde:	f280 8105 	bge.w	801e1ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801dfe2:	fa0f f38e 	sxth.w	r3, lr
 801dfe6:	fb00 1103 	mla	r1, r0, r3, r1
 801dfea:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801dfec:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801dff0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801dff4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801dff8:	f1bc 0f00 	cmp.w	ip, #0
 801dffc:	d007      	beq.n	801e00e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801dffe:	005b      	lsls	r3, r3, #1
 801e000:	eb0a 0003 	add.w	r0, sl, r3
 801e004:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801e008:	930c      	str	r3, [sp, #48]	@ 0x30
 801e00a:	8843      	ldrh	r3, [r0, #2]
 801e00c:	930d      	str	r3, [sp, #52]	@ 0x34
 801e00e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801e012:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e016:	fb12 f30c 	smulbb	r3, r2, ip
 801e01a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e01e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e022:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e026:	10db      	asrs	r3, r3, #3
 801e028:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e02c:	ea40 000e 	orr.w	r0, r0, lr
 801e030:	f1cc 0e10 	rsb	lr, ip, #16
 801e034:	ea4a 0101 	orr.w	r1, sl, r1
 801e038:	9f08      	ldr	r7, [sp, #32]
 801e03a:	ebae 0e02 	sub.w	lr, lr, r2
 801e03e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e042:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e046:	4351      	muls	r1, r2
 801e048:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e04a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e04e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801e050:	0410      	lsls	r0, r2, #16
 801e052:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e056:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e05a:	4310      	orrs	r0, r2
 801e05c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e05e:	0412      	lsls	r2, r2, #16
 801e060:	fb03 e000 	mla	r0, r3, r0, lr
 801e064:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801e068:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e06c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e070:	ea42 020e 	orr.w	r2, r2, lr
 801e074:	fb03 0302 	mla	r3, r3, r2, r0
 801e078:	f8b8 0000 	ldrh.w	r0, [r8]
 801e07c:	0d5a      	lsrs	r2, r3, #21
 801e07e:	095b      	lsrs	r3, r3, #5
 801e080:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e084:	1201      	asrs	r1, r0, #8
 801e086:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e08a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e08e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e092:	00c0      	lsls	r0, r0, #3
 801e094:	4313      	orrs	r3, r2
 801e096:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801e09a:	fb11 f107 	smulbb	r1, r1, r7
 801e09e:	b2c0      	uxtb	r0, r0
 801e0a0:	b29b      	uxth	r3, r3
 801e0a2:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801e0a6:	fb10 f007 	smulbb	r0, r0, r7
 801e0aa:	fb1e fe07 	smulbb	lr, lr, r7
 801e0ae:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e0b2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801e0b6:	fb0c 1c02 	mla	ip, ip, r2, r1
 801e0ba:	10d9      	asrs	r1, r3, #3
 801e0bc:	00db      	lsls	r3, r3, #3
 801e0be:	fa1f fc8c 	uxth.w	ip, ip
 801e0c2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e0c6:	b2db      	uxtb	r3, r3
 801e0c8:	fb01 e102 	mla	r1, r1, r2, lr
 801e0cc:	fb03 0302 	mla	r3, r3, r2, r0
 801e0d0:	b289      	uxth	r1, r1
 801e0d2:	b29a      	uxth	r2, r3
 801e0d4:	f10c 0301 	add.w	r3, ip, #1
 801e0d8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e0dc:	1c53      	adds	r3, r2, #1
 801e0de:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e0e2:	1c4a      	adds	r2, r1, #1
 801e0e4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801e0e8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e0ec:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e0f0:	0949      	lsrs	r1, r1, #5
 801e0f2:	ea43 030c 	orr.w	r3, r3, ip
 801e0f6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e0fa:	430b      	orrs	r3, r1
 801e0fc:	f8a8 3000 	strh.w	r3, [r8]
 801e100:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e102:	f108 0802 	add.w	r8, r8, #2
 801e106:	f109 39ff 	add.w	r9, r9, #4294967295
 801e10a:	441c      	add	r4, r3
 801e10c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e10e:	441e      	add	r6, r3
 801e110:	e74a      	b.n	801dfa8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e112:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e114:	3d01      	subs	r5, #1
 801e116:	441c      	add	r4, r3
 801e118:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e11a:	441e      	add	r6, r3
 801e11c:	9b07      	ldr	r3, [sp, #28]
 801e11e:	3302      	adds	r3, #2
 801e120:	9307      	str	r3, [sp, #28]
 801e122:	e722      	b.n	801df6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e124:	d022      	beq.n	801e16c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801e126:	1e6b      	subs	r3, r5, #1
 801e128:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801e12a:	fb00 4003 	mla	r0, r0, r3, r4
 801e12e:	1400      	asrs	r0, r0, #16
 801e130:	f53f af37 	bmi.w	801dfa2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e134:	3901      	subs	r1, #1
 801e136:	4288      	cmp	r0, r1
 801e138:	f6bf af33 	bge.w	801dfa2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e13c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801e13e:	fb01 6303 	mla	r3, r1, r3, r6
 801e142:	141b      	asrs	r3, r3, #16
 801e144:	f53f af2d 	bmi.w	801dfa2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e148:	3a01      	subs	r2, #1
 801e14a:	4293      	cmp	r3, r2
 801e14c:	f6bf af29 	bge.w	801dfa2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e150:	46a8      	mov	r8, r5
 801e152:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801e156:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801e15a:	f1b8 0f00 	cmp.w	r8, #0
 801e15e:	dc60      	bgt.n	801e222 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801e160:	9b07      	ldr	r3, [sp, #28]
 801e162:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e166:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e16a:	9307      	str	r3, [sp, #28]
 801e16c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e16e:	2b00      	cmp	r3, #0
 801e170:	f340 80f8 	ble.w	801e364 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e174:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e178:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e17a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e17e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e182:	eef0 6a62 	vmov.f32	s13, s5
 801e186:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e18a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e18e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e192:	ee16 4a90 	vmov	r4, s13
 801e196:	eef0 6a43 	vmov.f32	s13, s6
 801e19a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e19e:	ee16 6a90 	vmov	r6, s13
 801e1a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e1a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e1aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e1ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e1b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e1b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e1ba:	ee12 2a90 	vmov	r2, s5
 801e1be:	eef0 2a47 	vmov.f32	s5, s14
 801e1c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801e1c6:	ee13 2a10 	vmov	r2, s6
 801e1ca:	931f      	str	r3, [sp, #124]	@ 0x7c
 801e1cc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e1ce:	eeb0 3a67 	vmov.f32	s6, s15
 801e1d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801e1d6:	9320      	str	r3, [sp, #128]	@ 0x80
 801e1d8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e1da:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e1dc:	3b01      	subs	r3, #1
 801e1de:	930a      	str	r3, [sp, #40]	@ 0x28
 801e1e0:	bf08      	it	eq
 801e1e2:	4615      	moveq	r5, r2
 801e1e4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e1e6:	bf18      	it	ne
 801e1e8:	461d      	movne	r5, r3
 801e1ea:	e6af      	b.n	801df4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e1ec:	f111 0a01 	adds.w	sl, r1, #1
 801e1f0:	d486      	bmi.n	801e100 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e1f2:	45d6      	cmp	lr, sl
 801e1f4:	db84      	blt.n	801e100 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e1f6:	f110 0a01 	adds.w	sl, r0, #1
 801e1fa:	d481      	bmi.n	801e100 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e1fc:	4553      	cmp	r3, sl
 801e1fe:	f6ff af7f 	blt.w	801e100 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e202:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801e204:	b21b      	sxth	r3, r3
 801e206:	9101      	str	r1, [sp, #4]
 801e208:	4641      	mov	r1, r8
 801e20a:	9300      	str	r3, [sp, #0]
 801e20c:	fa0f f38e 	sxth.w	r3, lr
 801e210:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801e214:	e9cd c704 	strd	ip, r7, [sp, #16]
 801e218:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e21a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801e21c:	f7ff fdb2 	bl	801dd84 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801e220:	e76e      	b.n	801e100 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e222:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e224:	1430      	asrs	r0, r6, #16
 801e226:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801e228:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e22c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e230:	1423      	asrs	r3, r4, #16
 801e232:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e236:	fb01 3000 	mla	r0, r1, r0, r3
 801e23a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e23c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801e240:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801e244:	8858      	ldrh	r0, [r3, #2]
 801e246:	f1be 0f00 	cmp.w	lr, #0
 801e24a:	d00b      	beq.n	801e264 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801e24c:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801e250:	3901      	subs	r1, #1
 801e252:	0049      	lsls	r1, r1, #1
 801e254:	3102      	adds	r1, #2
 801e256:	eb03 0b01 	add.w	fp, r3, r1
 801e25a:	5a5b      	ldrh	r3, [r3, r1]
 801e25c:	930e      	str	r3, [sp, #56]	@ 0x38
 801e25e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e262:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e264:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801e268:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e26c:	fb12 f30e 	smulbb	r3, r2, lr
 801e270:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e274:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801e278:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e27c:	10db      	asrs	r3, r3, #3
 801e27e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e282:	ea41 010c 	orr.w	r1, r1, ip
 801e286:	f1ce 0c10 	rsb	ip, lr, #16
 801e28a:	ea4b 0000 	orr.w	r0, fp, r0
 801e28e:	9f08      	ldr	r7, [sp, #32]
 801e290:	ebac 0c02 	sub.w	ip, ip, r2
 801e294:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e298:	f108 38ff 	add.w	r8, r8, #4294967295
 801e29c:	4350      	muls	r0, r2
 801e29e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e2a2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e2a4:	fb0c 0c01 	mla	ip, ip, r1, r0
 801e2a8:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801e2aa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e2ae:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801e2b2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801e2b4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e2b8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e2bc:	0412      	lsls	r2, r2, #16
 801e2be:	ea4b 0101 	orr.w	r1, fp, r1
 801e2c2:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e2c6:	fb03 c101 	mla	r1, r3, r1, ip
 801e2ca:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e2ce:	4302      	orrs	r2, r0
 801e2d0:	fb03 1202 	mla	r2, r3, r2, r1
 801e2d4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801e2d8:	0952      	lsrs	r2, r2, #5
 801e2da:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801e2de:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801e2e2:	f8b9 2000 	ldrh.w	r2, [r9]
 801e2e6:	ea4b 0303 	orr.w	r3, fp, r3
 801e2ea:	1211      	asrs	r1, r2, #8
 801e2ec:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801e2f0:	b29b      	uxth	r3, r3
 801e2f2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e2f6:	00d2      	lsls	r2, r2, #3
 801e2f8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801e2fc:	fb11 f107 	smulbb	r1, r1, r7
 801e300:	1218      	asrs	r0, r3, #8
 801e302:	fb1c fc07 	smulbb	ip, ip, r7
 801e306:	b2d2      	uxtb	r2, r2
 801e308:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e30c:	fb12 f207 	smulbb	r2, r2, r7
 801e310:	fb00 100a 	mla	r0, r0, sl, r1
 801e314:	10d9      	asrs	r1, r3, #3
 801e316:	00db      	lsls	r3, r3, #3
 801e318:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e31c:	b280      	uxth	r0, r0
 801e31e:	b2db      	uxtb	r3, r3
 801e320:	fb01 c10a 	mla	r1, r1, sl, ip
 801e324:	fb03 230a 	mla	r3, r3, sl, r2
 801e328:	1c42      	adds	r2, r0, #1
 801e32a:	b289      	uxth	r1, r1
 801e32c:	b29b      	uxth	r3, r3
 801e32e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e332:	f101 0c01 	add.w	ip, r1, #1
 801e336:	1c5a      	adds	r2, r3, #1
 801e338:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801e33c:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801e340:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e344:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e346:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e34a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e34e:	441c      	add	r4, r3
 801e350:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801e354:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e356:	4310      	orrs	r0, r2
 801e358:	441e      	add	r6, r3
 801e35a:	ea40 000c 	orr.w	r0, r0, ip
 801e35e:	f829 0b02 	strh.w	r0, [r9], #2
 801e362:	e6fa      	b.n	801e15a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801e364:	b013      	add	sp, #76	@ 0x4c
 801e366:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e36a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801e36a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e36e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801e372:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801e376:	fb0e 4703 	mla	r7, lr, r3, r4
 801e37a:	f1be 0f00 	cmp.w	lr, #0
 801e37e:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801e382:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801e386:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801e38a:	8808      	ldrh	r0, [r1, #0]
 801e38c:	db60      	blt.n	801e450 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e38e:	45f1      	cmp	r9, lr
 801e390:	dd5e      	ble.n	801e450 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e392:	2c00      	cmp	r4, #0
 801e394:	db5a      	blt.n	801e44c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e396:	42a3      	cmp	r3, r4
 801e398:	dd58      	ble.n	801e44c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e39a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801e39e:	1c62      	adds	r2, r4, #1
 801e3a0:	d459      	bmi.n	801e456 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e3a2:	4293      	cmp	r3, r2
 801e3a4:	dd57      	ble.n	801e456 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e3a6:	2d00      	cmp	r5, #0
 801e3a8:	d055      	beq.n	801e456 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e3aa:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801e3ae:	f11e 0e01 	adds.w	lr, lr, #1
 801e3b2:	d454      	bmi.n	801e45e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e3b4:	45f1      	cmp	r9, lr
 801e3b6:	dd52      	ble.n	801e45e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e3b8:	2e00      	cmp	r6, #0
 801e3ba:	d050      	beq.n	801e45e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e3bc:	2c00      	cmp	r4, #0
 801e3be:	db4c      	blt.n	801e45a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e3c0:	42a3      	cmp	r3, r4
 801e3c2:	dd4a      	ble.n	801e45a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e3c4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801e3c8:	3401      	adds	r4, #1
 801e3ca:	d405      	bmi.n	801e3d8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e3cc:	42a3      	cmp	r3, r4
 801e3ce:	dd03      	ble.n	801e3d8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e3d0:	b115      	cbz	r5, 801e3d8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e3d2:	3301      	adds	r3, #1
 801e3d4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801e3d8:	fb15 f406 	smulbb	r4, r5, r6
 801e3dc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e3e0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e3e4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e3e8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e3ec:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801e3f0:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801e3f4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e3f8:	ea43 0c0c 	orr.w	ip, r3, ip
 801e3fc:	f1c6 0310 	rsb	r3, r6, #16
 801e400:	ea4e 0707 	orr.w	r7, lr, r7
 801e404:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801e408:	1b5b      	subs	r3, r3, r5
 801e40a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801e40e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e412:	437d      	muls	r5, r7
 801e414:	fb03 5c0c 	mla	ip, r3, ip, r5
 801e418:	0403      	lsls	r3, r0, #16
 801e41a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e41e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e422:	4318      	orrs	r0, r3
 801e424:	0413      	lsls	r3, r2, #16
 801e426:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e42a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e42e:	fb04 c000 	mla	r0, r4, r0, ip
 801e432:	4313      	orrs	r3, r2
 801e434:	fb06 0003 	mla	r0, r6, r3, r0
 801e438:	0d43      	lsrs	r3, r0, #21
 801e43a:	0940      	lsrs	r0, r0, #5
 801e43c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e440:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e444:	4318      	orrs	r0, r3
 801e446:	8008      	strh	r0, [r1, #0]
 801e448:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e44c:	4684      	mov	ip, r0
 801e44e:	e7a6      	b.n	801e39e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801e450:	4607      	mov	r7, r0
 801e452:	4684      	mov	ip, r0
 801e454:	e7ab      	b.n	801e3ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e456:	4607      	mov	r7, r0
 801e458:	e7a9      	b.n	801e3ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e45a:	4602      	mov	r2, r0
 801e45c:	e7b4      	b.n	801e3c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801e45e:	4602      	mov	r2, r0
 801e460:	e7ba      	b.n	801e3d8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801e462 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e462:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e466:	b08f      	sub	sp, #60	@ 0x3c
 801e468:	461d      	mov	r5, r3
 801e46a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e46c:	9107      	str	r1, [sp, #28]
 801e46e:	920c      	str	r2, [sp, #48]	@ 0x30
 801e470:	6859      	ldr	r1, [r3, #4]
 801e472:	681b      	ldr	r3, [r3, #0]
 801e474:	900d      	str	r0, [sp, #52]	@ 0x34
 801e476:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801e47a:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801e47e:	fb01 2707 	mla	r7, r1, r7, r2
 801e482:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801e486:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e488:	f8d3 8000 	ldr.w	r8, [r3]
 801e48c:	9b07      	ldr	r3, [sp, #28]
 801e48e:	2b00      	cmp	r3, #0
 801e490:	dc03      	bgt.n	801e49a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e492:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e494:	2b00      	cmp	r3, #0
 801e496:	f340 8182 	ble.w	801e79e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801e49a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e49c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e4a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e4a4:	1e48      	subs	r0, r1, #1
 801e4a6:	f102 3cff 	add.w	ip, r2, #4294967295
 801e4aa:	2d00      	cmp	r5, #0
 801e4ac:	f340 809b 	ble.w	801e5e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801e4b0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e4b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e4b8:	d406      	bmi.n	801e4c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e4ba:	4586      	cmp	lr, r0
 801e4bc:	da04      	bge.n	801e4c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e4be:	2b00      	cmp	r3, #0
 801e4c0:	db02      	blt.n	801e4c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e4c2:	4563      	cmp	r3, ip
 801e4c4:	f2c0 8090 	blt.w	801e5e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e4c8:	f11e 0e01 	adds.w	lr, lr, #1
 801e4cc:	f100 8084 	bmi.w	801e5d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e4d0:	4571      	cmp	r1, lr
 801e4d2:	f2c0 8081 	blt.w	801e5d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e4d6:	3301      	adds	r3, #1
 801e4d8:	d47e      	bmi.n	801e5d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e4da:	429a      	cmp	r2, r3
 801e4dc:	db7c      	blt.n	801e5d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e4de:	46aa      	mov	sl, r5
 801e4e0:	46b9      	mov	r9, r7
 801e4e2:	f1ba 0f00 	cmp.w	sl, #0
 801e4e6:	f340 8099 	ble.w	801e61c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801e4ea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e4ec:	1421      	asrs	r1, r4, #16
 801e4ee:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e4f2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e4f6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e4fa:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e4fe:	f100 80d1 	bmi.w	801e6a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e502:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e506:	4559      	cmp	r1, fp
 801e508:	f280 80cc 	bge.w	801e6a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e50c:	2800      	cmp	r0, #0
 801e50e:	f2c0 80c9 	blt.w	801e6a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e512:	f103 3bff 	add.w	fp, r3, #4294967295
 801e516:	4558      	cmp	r0, fp
 801e518:	f280 80c4 	bge.w	801e6a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e51c:	fa0f fe8e 	sxth.w	lr, lr
 801e520:	fb00 110e 	mla	r1, r0, lr, r1
 801e524:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e528:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801e52c:	8841      	ldrh	r1, [r0, #2]
 801e52e:	f1bc 0f00 	cmp.w	ip, #0
 801e532:	d00b      	beq.n	801e54c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801e534:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801e538:	3b01      	subs	r3, #1
 801e53a:	005b      	lsls	r3, r3, #1
 801e53c:	3302      	adds	r3, #2
 801e53e:	eb00 0e03 	add.w	lr, r0, r3
 801e542:	5ac3      	ldrh	r3, [r0, r3]
 801e544:	9308      	str	r3, [sp, #32]
 801e546:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801e54a:	9309      	str	r3, [sp, #36]	@ 0x24
 801e54c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801e550:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801e554:	fb12 f30c 	smulbb	r3, r2, ip
 801e558:	f1cc 0e10 	rsb	lr, ip, #16
 801e55c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e560:	10db      	asrs	r3, r3, #3
 801e562:	ebae 0e02 	sub.w	lr, lr, r2
 801e566:	ea40 000b 	orr.w	r0, r0, fp
 801e56a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e56e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e572:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e576:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e57a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e57e:	ea4b 0101 	orr.w	r1, fp, r1
 801e582:	4351      	muls	r1, r2
 801e584:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e586:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e58a:	0410      	lsls	r0, r2, #16
 801e58c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e590:	9908      	ldr	r1, [sp, #32]
 801e592:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e596:	4310      	orrs	r0, r2
 801e598:	9a08      	ldr	r2, [sp, #32]
 801e59a:	0412      	lsls	r2, r2, #16
 801e59c:	fb03 e000 	mla	r0, r3, r0, lr
 801e5a0:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801e5a4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e5a8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e5ac:	ea42 020e 	orr.w	r2, r2, lr
 801e5b0:	fb03 0302 	mla	r3, r3, r2, r0
 801e5b4:	0d5a      	lsrs	r2, r3, #21
 801e5b6:	095b      	lsrs	r3, r3, #5
 801e5b8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e5bc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e5c0:	4313      	orrs	r3, r2
 801e5c2:	f8a9 3000 	strh.w	r3, [r9]
 801e5c6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e5c8:	f109 0902 	add.w	r9, r9, #2
 801e5cc:	f10a 3aff 	add.w	sl, sl, #4294967295
 801e5d0:	441c      	add	r4, r3
 801e5d2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e5d4:	441e      	add	r6, r3
 801e5d6:	e784      	b.n	801e4e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e5d8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e5da:	3d01      	subs	r5, #1
 801e5dc:	3702      	adds	r7, #2
 801e5de:	441c      	add	r4, r3
 801e5e0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e5e2:	441e      	add	r6, r3
 801e5e4:	e761      	b.n	801e4aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e5e6:	d01d      	beq.n	801e624 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e5e8:	1e6b      	subs	r3, r5, #1
 801e5ea:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801e5ec:	fb00 4003 	mla	r0, r0, r3, r4
 801e5f0:	1400      	asrs	r0, r0, #16
 801e5f2:	f53f af74 	bmi.w	801e4de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e5f6:	3901      	subs	r1, #1
 801e5f8:	4288      	cmp	r0, r1
 801e5fa:	f6bf af70 	bge.w	801e4de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e5fe:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801e600:	fb01 6303 	mla	r3, r1, r3, r6
 801e604:	141b      	asrs	r3, r3, #16
 801e606:	f53f af6a 	bmi.w	801e4de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e60a:	3a01      	subs	r2, #1
 801e60c:	4293      	cmp	r3, r2
 801e60e:	f6bf af66 	bge.w	801e4de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e612:	46a9      	mov	r9, r5
 801e614:	46ba      	mov	sl, r7
 801e616:	f1b9 0f00 	cmp.w	r9, #0
 801e61a:	dc5b      	bgt.n	801e6d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801e61c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e620:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801e624:	9b07      	ldr	r3, [sp, #28]
 801e626:	2b00      	cmp	r3, #0
 801e628:	f340 80b9 	ble.w	801e79e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801e62c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e630:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e632:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e636:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e63a:	eef0 6a62 	vmov.f32	s13, s5
 801e63e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e642:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e646:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e64a:	ee16 4a90 	vmov	r4, s13
 801e64e:	eef0 6a43 	vmov.f32	s13, s6
 801e652:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e656:	ee16 6a90 	vmov	r6, s13
 801e65a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e65e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e662:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e666:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e66a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e66e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e672:	ee12 2a90 	vmov	r2, s5
 801e676:	eef0 2a47 	vmov.f32	s5, s14
 801e67a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e67e:	ee13 2a10 	vmov	r2, s6
 801e682:	931b      	str	r3, [sp, #108]	@ 0x6c
 801e684:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e686:	eeb0 3a67 	vmov.f32	s6, s15
 801e68a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e68e:	931c      	str	r3, [sp, #112]	@ 0x70
 801e690:	9b07      	ldr	r3, [sp, #28]
 801e692:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e694:	3b01      	subs	r3, #1
 801e696:	9307      	str	r3, [sp, #28]
 801e698:	bf08      	it	eq
 801e69a:	4615      	moveq	r5, r2
 801e69c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e69e:	bf18      	it	ne
 801e6a0:	461d      	movne	r5, r3
 801e6a2:	e6f3      	b.n	801e48c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e6a4:	f111 0b01 	adds.w	fp, r1, #1
 801e6a8:	d48d      	bmi.n	801e5c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e6aa:	45de      	cmp	lr, fp
 801e6ac:	db8b      	blt.n	801e5c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e6ae:	f110 0b01 	adds.w	fp, r0, #1
 801e6b2:	d488      	bmi.n	801e5c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e6b4:	455b      	cmp	r3, fp
 801e6b6:	db86      	blt.n	801e5c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e6b8:	b21b      	sxth	r3, r3
 801e6ba:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801e6be:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801e6c2:	9300      	str	r3, [sp, #0]
 801e6c4:	4642      	mov	r2, r8
 801e6c6:	fa0f f38e 	sxth.w	r3, lr
 801e6ca:	4649      	mov	r1, r9
 801e6cc:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801e6ce:	f7ff fe4c 	bl	801e36a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801e6d2:	e778      	b.n	801e5c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e6d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e6d6:	1420      	asrs	r0, r4, #16
 801e6d8:	1431      	asrs	r1, r6, #16
 801e6da:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e6de:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e6e2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e6e6:	fb03 0101 	mla	r1, r3, r1, r0
 801e6ea:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e6ee:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801e6f2:	8841      	ldrh	r1, [r0, #2]
 801e6f4:	f1be 0f00 	cmp.w	lr, #0
 801e6f8:	d00b      	beq.n	801e712 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801e6fa:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e6fe:	3b01      	subs	r3, #1
 801e700:	005b      	lsls	r3, r3, #1
 801e702:	3302      	adds	r3, #2
 801e704:	eb00 0b03 	add.w	fp, r0, r3
 801e708:	5ac3      	ldrh	r3, [r0, r3]
 801e70a:	930a      	str	r3, [sp, #40]	@ 0x28
 801e70c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e710:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e712:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801e716:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e71a:	fb12 f30e 	smulbb	r3, r2, lr
 801e71e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e722:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e726:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e72a:	10db      	asrs	r3, r3, #3
 801e72c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e730:	ea40 000c 	orr.w	r0, r0, ip
 801e734:	f1ce 0c10 	rsb	ip, lr, #16
 801e738:	ea4b 0101 	orr.w	r1, fp, r1
 801e73c:	f109 39ff 	add.w	r9, r9, #4294967295
 801e740:	ebac 0c02 	sub.w	ip, ip, r2
 801e744:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e748:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e74c:	4351      	muls	r1, r2
 801e74e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e750:	fb0c 1c00 	mla	ip, ip, r0, r1
 801e754:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801e756:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e75a:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801e75e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e760:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e764:	0412      	lsls	r2, r2, #16
 801e766:	ea4b 0000 	orr.w	r0, fp, r0
 801e76a:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801e76e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e772:	fb03 c000 	mla	r0, r3, r0, ip
 801e776:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e77a:	ea42 0b0b 	orr.w	fp, r2, fp
 801e77e:	fb03 000b 	mla	r0, r3, fp, r0
 801e782:	0d43      	lsrs	r3, r0, #21
 801e784:	0940      	lsrs	r0, r0, #5
 801e786:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e78a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e78e:	4318      	orrs	r0, r3
 801e790:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e792:	441c      	add	r4, r3
 801e794:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e796:	f82a 0b02 	strh.w	r0, [sl], #2
 801e79a:	441e      	add	r6, r3
 801e79c:	e73b      	b.n	801e616 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801e79e:	b00f      	add	sp, #60	@ 0x3c
 801e7a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e7a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801e7a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7a8:	b085      	sub	sp, #20
 801e7aa:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801e7ae:	9102      	str	r1, [sp, #8]
 801e7b0:	2c00      	cmp	r4, #0
 801e7b2:	fb04 7103 	mla	r1, r4, r3, r7
 801e7b6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801e7ba:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801e7be:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e7c2:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801e7c6:	f2c0 811b 	blt.w	801ea00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e7ca:	45a6      	cmp	lr, r4
 801e7cc:	f340 8118 	ble.w	801ea00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e7d0:	2f00      	cmp	r7, #0
 801e7d2:	f2c0 8113 	blt.w	801e9fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e7d6:	42bb      	cmp	r3, r7
 801e7d8:	f340 8110 	ble.w	801e9fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e7dc:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e7e0:	1c7a      	adds	r2, r7, #1
 801e7e2:	f100 8110 	bmi.w	801ea06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e7e6:	4293      	cmp	r3, r2
 801e7e8:	f340 810d 	ble.w	801ea06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e7ec:	2e00      	cmp	r6, #0
 801e7ee:	f000 810c 	beq.w	801ea0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801e7f2:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e7f6:	3401      	adds	r4, #1
 801e7f8:	f100 810b 	bmi.w	801ea12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e7fc:	45a6      	cmp	lr, r4
 801e7fe:	f340 8108 	ble.w	801ea12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e802:	2800      	cmp	r0, #0
 801e804:	f000 8108 	beq.w	801ea18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801e808:	2f00      	cmp	r7, #0
 801e80a:	f2c0 8100 	blt.w	801ea0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e80e:	42bb      	cmp	r3, r7
 801e810:	f340 80fd 	ble.w	801ea0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e814:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e818:	3701      	adds	r7, #1
 801e81a:	f100 8100 	bmi.w	801ea1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e81e:	42bb      	cmp	r3, r7
 801e820:	f340 80fd 	ble.w	801ea1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e824:	2e00      	cmp	r6, #0
 801e826:	f000 80fc 	beq.w	801ea22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801e82a:	3301      	adds	r3, #1
 801e82c:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801e830:	b2b6      	uxth	r6, r6
 801e832:	b280      	uxth	r0, r0
 801e834:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e838:	fb00 fe06 	mul.w	lr, r0, r6
 801e83c:	0136      	lsls	r6, r6, #4
 801e83e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e842:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e846:	eba6 070e 	sub.w	r7, r6, lr
 801e84a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801e84e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e852:	b280      	uxth	r0, r0
 801e854:	b2bf      	uxth	r7, r7
 801e856:	1a1b      	subs	r3, r3, r0
 801e858:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e85c:	fb0a f607 	mul.w	r6, sl, r7
 801e860:	b29b      	uxth	r3, r3
 801e862:	fb0b 6603 	mla	r6, fp, r3, r6
 801e866:	fb00 6609 	mla	r6, r0, r9, r6
 801e86a:	fb0e 6608 	mla	r6, lr, r8, r6
 801e86e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e872:	9600      	str	r6, [sp, #0]
 801e874:	2e00      	cmp	r6, #0
 801e876:	f000 80be 	beq.w	801e9f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801e87a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e87e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801e882:	9e02      	ldr	r6, [sp, #8]
 801e884:	fb0b fc0c 	mul.w	ip, fp, ip
 801e888:	fb0b f505 	mul.w	r5, fp, r5
 801e88c:	8836      	ldrh	r6, [r6, #0]
 801e88e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e892:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e896:	9501      	str	r5, [sp, #4]
 801e898:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801e89c:	44dc      	add	ip, fp
 801e89e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e8a2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801e8a6:	9503      	str	r5, [sp, #12]
 801e8a8:	9d01      	ldr	r5, [sp, #4]
 801e8aa:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801e8ae:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e8b2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801e8b6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e8ba:	fb0a fc0c 	mul.w	ip, sl, ip
 801e8be:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e8c2:	fb0a fa01 	mul.w	sl, sl, r1
 801e8c6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e8ca:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e8ce:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801e8d2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e8d6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e8da:	4465      	add	r5, ip
 801e8dc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e8e0:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801e8e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e8e8:	fb09 fc0c 	mul.w	ip, r9, ip
 801e8ec:	0a2d      	lsrs	r5, r5, #8
 801e8ee:	fb09 f904 	mul.w	r9, r9, r4
 801e8f2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e8f6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e8fa:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e8fe:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801e902:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e906:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e90a:	437d      	muls	r5, r7
 801e90c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e910:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801e914:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e918:	4461      	add	r1, ip
 801e91a:	fb08 f404 	mul.w	r4, r8, r4
 801e91e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e922:	fb08 f802 	mul.w	r8, r8, r2
 801e926:	0a09      	lsrs	r1, r1, #8
 801e928:	0a22      	lsrs	r2, r4, #8
 801e92a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801e92e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e932:	fb07 f70a 	mul.w	r7, r7, sl
 801e936:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e93a:	4414      	add	r4, r2
 801e93c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801e940:	0a24      	lsrs	r4, r4, #8
 801e942:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e946:	9a03      	ldr	r2, [sp, #12]
 801e948:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801e94c:	fb02 5503 	mla	r5, r2, r3, r5
 801e950:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e954:	9a00      	ldr	r2, [sp, #0]
 801e956:	fb04 540e 	mla	r4, r4, lr, r5
 801e95a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801e95e:	1235      	asrs	r5, r6, #8
 801e960:	fb01 4100 	mla	r1, r1, r0, r4
 801e964:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e968:	0a09      	lsrs	r1, r1, #8
 801e96a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801e96e:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801e972:	fb03 7101 	mla	r1, r3, r1, r7
 801e976:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e97a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801e97e:	fb00 e101 	mla	r1, r0, r1, lr
 801e982:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801e986:	b287      	uxth	r7, r0
 801e988:	0a09      	lsrs	r1, r1, #8
 801e98a:	437a      	muls	r2, r7
 801e98c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e990:	1c53      	adds	r3, r2, #1
 801e992:	4321      	orrs	r1, r4
 801e994:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e998:	0c0a      	lsrs	r2, r1, #16
 801e99a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e99e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e9a2:	b2c8      	uxtb	r0, r1
 801e9a4:	fb12 f207 	smulbb	r2, r2, r7
 801e9a8:	fb14 f407 	smulbb	r4, r4, r7
 801e9ac:	b2db      	uxtb	r3, r3
 801e9ae:	fb10 f007 	smulbb	r0, r0, r7
 801e9b2:	fb05 2503 	mla	r5, r5, r3, r2
 801e9b6:	10f2      	asrs	r2, r6, #3
 801e9b8:	00f6      	lsls	r6, r6, #3
 801e9ba:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e9be:	b2ad      	uxth	r5, r5
 801e9c0:	b2f6      	uxtb	r6, r6
 801e9c2:	fb02 4203 	mla	r2, r2, r3, r4
 801e9c6:	fb06 0303 	mla	r3, r6, r3, r0
 801e9ca:	b294      	uxth	r4, r2
 801e9cc:	b299      	uxth	r1, r3
 801e9ce:	1c6b      	adds	r3, r5, #1
 801e9d0:	1c62      	adds	r2, r4, #1
 801e9d2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e9d6:	1c4b      	adds	r3, r1, #1
 801e9d8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e9dc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e9e0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e9e4:	0952      	lsrs	r2, r2, #5
 801e9e6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e9ea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e9ee:	432b      	orrs	r3, r5
 801e9f0:	4313      	orrs	r3, r2
 801e9f2:	9a02      	ldr	r2, [sp, #8]
 801e9f4:	8013      	strh	r3, [r2, #0]
 801e9f6:	b005      	add	sp, #20
 801e9f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e9fc:	2500      	movs	r5, #0
 801e9fe:	e6ef      	b.n	801e7e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801ea00:	2100      	movs	r1, #0
 801ea02:	460d      	mov	r5, r1
 801ea04:	e6f7      	b.n	801e7f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ea06:	2100      	movs	r1, #0
 801ea08:	e6f5      	b.n	801e7f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ea0a:	4631      	mov	r1, r6
 801ea0c:	e6f3      	b.n	801e7f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ea0e:	2400      	movs	r4, #0
 801ea10:	e702      	b.n	801e818 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801ea12:	2200      	movs	r2, #0
 801ea14:	4614      	mov	r4, r2
 801ea16:	e70b      	b.n	801e830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801ea18:	4602      	mov	r2, r0
 801ea1a:	4604      	mov	r4, r0
 801ea1c:	e708      	b.n	801e830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801ea1e:	2200      	movs	r2, #0
 801ea20:	e706      	b.n	801e830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801ea22:	4632      	mov	r2, r6
 801ea24:	e704      	b.n	801e830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801ea26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ea26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea2a:	b09d      	sub	sp, #116	@ 0x74
 801ea2c:	9219      	str	r2, [sp, #100]	@ 0x64
 801ea2e:	9307      	str	r3, [sp, #28]
 801ea30:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801ea32:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801ea36:	901b      	str	r0, [sp, #108]	@ 0x6c
 801ea38:	931a      	str	r3, [sp, #104]	@ 0x68
 801ea3a:	6850      	ldr	r0, [r2, #4]
 801ea3c:	9117      	str	r1, [sp, #92]	@ 0x5c
 801ea3e:	6812      	ldr	r2, [r2, #0]
 801ea40:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801ea44:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801ea48:	fb00 1303 	mla	r3, r0, r3, r1
 801ea4c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ea50:	930a      	str	r3, [sp, #40]	@ 0x28
 801ea52:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801ea54:	681b      	ldr	r3, [r3, #0]
 801ea56:	9310      	str	r3, [sp, #64]	@ 0x40
 801ea58:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801ea5c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ea5e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ea60:	2b00      	cmp	r3, #0
 801ea62:	dc03      	bgt.n	801ea6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801ea64:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801ea66:	2b00      	cmp	r3, #0
 801ea68:	f340 8375 	ble.w	801f156 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ea6c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801ea6e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ea72:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ea76:	1e48      	subs	r0, r1, #1
 801ea78:	1e57      	subs	r7, r2, #1
 801ea7a:	9b07      	ldr	r3, [sp, #28]
 801ea7c:	2b00      	cmp	r3, #0
 801ea7e:	f340 818e 	ble.w	801ed9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801ea82:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ea86:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ea8a:	d406      	bmi.n	801ea9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ea8c:	4584      	cmp	ip, r0
 801ea8e:	da04      	bge.n	801ea9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ea90:	2b00      	cmp	r3, #0
 801ea92:	db02      	blt.n	801ea9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ea94:	42bb      	cmp	r3, r7
 801ea96:	f2c0 8183 	blt.w	801eda0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ea9a:	f11c 0c01 	adds.w	ip, ip, #1
 801ea9e:	f100 8173 	bmi.w	801ed88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801eaa2:	4561      	cmp	r1, ip
 801eaa4:	f2c0 8170 	blt.w	801ed88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801eaa8:	3301      	adds	r3, #1
 801eaaa:	f100 816d 	bmi.w	801ed88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801eaae:	429a      	cmp	r2, r3
 801eab0:	f2c0 816a 	blt.w	801ed88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801eab4:	9b07      	ldr	r3, [sp, #28]
 801eab6:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801eab8:	9318      	str	r3, [sp, #96]	@ 0x60
 801eaba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801eabc:	2b00      	cmp	r3, #0
 801eabe:	f340 818c 	ble.w	801edda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801eac2:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801eac4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801eac8:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801eaca:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801eace:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ead2:	1422      	asrs	r2, r4, #16
 801ead4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ead8:	689b      	ldr	r3, [r3, #8]
 801eada:	f100 81cd 	bmi.w	801ee78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801eade:	f103 38ff 	add.w	r8, r3, #4294967295
 801eae2:	4542      	cmp	r2, r8
 801eae4:	f280 81c8 	bge.w	801ee78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801eae8:	f1bc 0f00 	cmp.w	ip, #0
 801eaec:	f2c0 81c4 	blt.w	801ee78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801eaf0:	f10e 38ff 	add.w	r8, lr, #4294967295
 801eaf4:	45c4      	cmp	ip, r8
 801eaf6:	f280 81bf 	bge.w	801ee78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801eafa:	b21b      	sxth	r3, r3
 801eafc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801eafe:	fb0c 2203 	mla	r2, ip, r3, r2
 801eb02:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801eb06:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801eb0a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801eb0e:	2800      	cmp	r0, #0
 801eb10:	f000 81a9 	beq.w	801ee66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801eb14:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801eb18:	950c      	str	r5, [sp, #48]	@ 0x30
 801eb1a:	0e2d      	lsrs	r5, r5, #24
 801eb1c:	9513      	str	r5, [sp, #76]	@ 0x4c
 801eb1e:	b181      	cbz	r1, 801eb42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801eb20:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801eb24:	3b01      	subs	r3, #1
 801eb26:	009b      	lsls	r3, r3, #2
 801eb28:	3304      	adds	r3, #4
 801eb2a:	eb08 0c03 	add.w	ip, r8, r3
 801eb2e:	f858 3003 	ldr.w	r3, [r8, r3]
 801eb32:	9308      	str	r3, [sp, #32]
 801eb34:	0e1b      	lsrs	r3, r3, #24
 801eb36:	9311      	str	r3, [sp, #68]	@ 0x44
 801eb38:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801eb3c:	930d      	str	r3, [sp, #52]	@ 0x34
 801eb3e:	0e1b      	lsrs	r3, r3, #24
 801eb40:	9314      	str	r3, [sp, #80]	@ 0x50
 801eb42:	b280      	uxth	r0, r0
 801eb44:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801eb46:	b289      	uxth	r1, r1
 801eb48:	fb00 f901 	mul.w	r9, r0, r1
 801eb4c:	0100      	lsls	r0, r0, #4
 801eb4e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801eb52:	eba0 0809 	sub.w	r8, r0, r9
 801eb56:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801eb5a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801eb5c:	b289      	uxth	r1, r1
 801eb5e:	fa1f f888 	uxth.w	r8, r8
 801eb62:	1a5b      	subs	r3, r3, r1
 801eb64:	fb08 f000 	mul.w	r0, r8, r0
 801eb68:	b29b      	uxth	r3, r3
 801eb6a:	fb03 000e 	mla	r0, r3, lr, r0
 801eb6e:	fb01 0005 	mla	r0, r1, r5, r0
 801eb72:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801eb74:	fb09 0005 	mla	r0, r9, r5, r0
 801eb78:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801eb7c:	2800      	cmp	r0, #0
 801eb7e:	f000 80fa 	beq.w	801ed76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb82:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801eb86:	d01b      	beq.n	801ebc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801eb88:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801eb8c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801eb90:	fb0e fa0a 	mul.w	sl, lr, sl
 801eb94:	fb0e fe02 	mul.w	lr, lr, r2
 801eb98:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801eb9c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801eba0:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801eba4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801eba8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ebac:	4452      	add	r2, sl
 801ebae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ebb2:	0a12      	lsrs	r2, r2, #8
 801ebb4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ebb8:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801ebbc:	ea42 020c 	orr.w	r2, r2, ip
 801ebc0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ebc2:	2dff      	cmp	r5, #255	@ 0xff
 801ebc4:	d021      	beq.n	801ec0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801ebc6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ebc8:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801ebcc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ebce:	fb05 fb0b 	mul.w	fp, r5, fp
 801ebd2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ebd4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ebd8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ebda:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ebde:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ebe2:	fb05 fa0a 	mul.w	sl, r5, sl
 801ebe6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ebea:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ebee:	44de      	add	lr, fp
 801ebf0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ebf4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ebf8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ebfc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ec00:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ec04:	ea4e 050a 	orr.w	r5, lr, sl
 801ec08:	950c      	str	r5, [sp, #48]	@ 0x30
 801ec0a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ec0c:	2dff      	cmp	r5, #255	@ 0xff
 801ec0e:	d021      	beq.n	801ec54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801ec10:	9d08      	ldr	r5, [sp, #32]
 801ec12:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801ec16:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ec18:	fb05 fb0b 	mul.w	fp, r5, fp
 801ec1c:	9d08      	ldr	r5, [sp, #32]
 801ec1e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ec22:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ec24:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ec28:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ec2c:	fb05 fa0a 	mul.w	sl, r5, sl
 801ec30:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ec34:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ec38:	44de      	add	lr, fp
 801ec3a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ec3e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ec42:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec46:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ec4a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ec4e:	ea4e 050a 	orr.w	r5, lr, sl
 801ec52:	9508      	str	r5, [sp, #32]
 801ec54:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ec56:	2dff      	cmp	r5, #255	@ 0xff
 801ec58:	d021      	beq.n	801ec9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801ec5a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ec5c:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801ec60:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ec62:	fb05 fb0b 	mul.w	fp, r5, fp
 801ec66:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ec68:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ec6c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ec6e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ec72:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ec76:	fb05 fa0a 	mul.w	sl, r5, sl
 801ec7a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ec7e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ec82:	44de      	add	lr, fp
 801ec84:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ec88:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ec8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec90:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ec94:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ec98:	ea4e 050a 	orr.w	r5, lr, sl
 801ec9c:	950d      	str	r5, [sp, #52]	@ 0x34
 801ec9e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801eca0:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801eca4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801eca8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ecac:	9d08      	ldr	r5, [sp, #32]
 801ecae:	fb08 fc0c 	mul.w	ip, r8, ip
 801ecb2:	fb03 cc0e 	mla	ip, r3, lr, ip
 801ecb6:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ecba:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ecbc:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ecc0:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ecc4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ecc6:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ecca:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801ecce:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ecd0:	fb08 f80e 	mul.w	r8, r8, lr
 801ecd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ecd8:	fb03 8202 	mla	r2, r3, r2, r8
 801ecdc:	9b08      	ldr	r3, [sp, #32]
 801ecde:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ece2:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801ece6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ece8:	fb01 220a 	mla	r2, r1, sl, r2
 801ecec:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801ecf0:	883b      	ldrh	r3, [r7, #0]
 801ecf2:	fb09 2901 	mla	r9, r9, r1, r2
 801ecf6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801ecf8:	1219      	asrs	r1, r3, #8
 801ecfa:	4342      	muls	r2, r0
 801ecfc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ed00:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ed04:	1c50      	adds	r0, r2, #1
 801ed06:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801ed0a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ed0e:	ea4c 0c09 	orr.w	ip, ip, r9
 801ed12:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ed16:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ed1a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ed1e:	fa5f fc8c 	uxtb.w	ip, ip
 801ed22:	fb12 f205 	smulbb	r2, r2, r5
 801ed26:	b2c0      	uxtb	r0, r0
 801ed28:	fb1c fc05 	smulbb	ip, ip, r5
 801ed2c:	fb01 2100 	mla	r1, r1, r0, r2
 801ed30:	10da      	asrs	r2, r3, #3
 801ed32:	fb1e fe05 	smulbb	lr, lr, r5
 801ed36:	00db      	lsls	r3, r3, #3
 801ed38:	b289      	uxth	r1, r1
 801ed3a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ed3e:	b2db      	uxtb	r3, r3
 801ed40:	fb02 e200 	mla	r2, r2, r0, lr
 801ed44:	fb03 c300 	mla	r3, r3, r0, ip
 801ed48:	b292      	uxth	r2, r2
 801ed4a:	fa1f fc83 	uxth.w	ip, r3
 801ed4e:	1c4b      	adds	r3, r1, #1
 801ed50:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ed54:	f10c 0301 	add.w	r3, ip, #1
 801ed58:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ed5c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801ed60:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ed64:	430b      	orrs	r3, r1
 801ed66:	1c51      	adds	r1, r2, #1
 801ed68:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ed6c:	0952      	lsrs	r2, r2, #5
 801ed6e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ed72:	4313      	orrs	r3, r2
 801ed74:	803b      	strh	r3, [r7, #0]
 801ed76:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ed78:	3702      	adds	r7, #2
 801ed7a:	441c      	add	r4, r3
 801ed7c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ed7e:	441e      	add	r6, r3
 801ed80:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ed82:	3b01      	subs	r3, #1
 801ed84:	9318      	str	r3, [sp, #96]	@ 0x60
 801ed86:	e698      	b.n	801eaba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ed88:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ed8a:	441c      	add	r4, r3
 801ed8c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ed8e:	441e      	add	r6, r3
 801ed90:	9b07      	ldr	r3, [sp, #28]
 801ed92:	3b01      	subs	r3, #1
 801ed94:	9307      	str	r3, [sp, #28]
 801ed96:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ed98:	3302      	adds	r3, #2
 801ed9a:	930a      	str	r3, [sp, #40]	@ 0x28
 801ed9c:	e66d      	b.n	801ea7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ed9e:	d023      	beq.n	801ede8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801eda0:	9b07      	ldr	r3, [sp, #28]
 801eda2:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801eda4:	3b01      	subs	r3, #1
 801eda6:	fb00 4003 	mla	r0, r0, r3, r4
 801edaa:	1400      	asrs	r0, r0, #16
 801edac:	f53f ae82 	bmi.w	801eab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801edb0:	3901      	subs	r1, #1
 801edb2:	4288      	cmp	r0, r1
 801edb4:	f6bf ae7e 	bge.w	801eab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801edb8:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801edba:	fb01 6303 	mla	r3, r1, r3, r6
 801edbe:	141b      	asrs	r3, r3, #16
 801edc0:	f53f ae78 	bmi.w	801eab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801edc4:	3a01      	subs	r2, #1
 801edc6:	4293      	cmp	r3, r2
 801edc8:	f6bf ae74 	bge.w	801eab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801edcc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801edd0:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801edd4:	f1bb 0f00 	cmp.w	fp, #0
 801edd8:	dc6c      	bgt.n	801eeb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801edda:	9b07      	ldr	r3, [sp, #28]
 801eddc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ede0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ede2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ede6:	930a      	str	r3, [sp, #40]	@ 0x28
 801ede8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801edea:	2b00      	cmp	r3, #0
 801edec:	f340 81b3 	ble.w	801f156 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801edf0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801edf4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801edf6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801edfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801edfe:	eef0 6a62 	vmov.f32	s13, s5
 801ee02:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ee06:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ee0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ee0e:	ee16 4a90 	vmov	r4, s13
 801ee12:	eef0 6a43 	vmov.f32	s13, s6
 801ee16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ee1a:	ee16 6a90 	vmov	r6, s13
 801ee1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ee22:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ee26:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ee2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ee2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ee32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ee36:	ee12 2a90 	vmov	r2, s5
 801ee3a:	eef0 2a47 	vmov.f32	s5, s14
 801ee3e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee42:	ee13 2a10 	vmov	r2, s6
 801ee46:	9329      	str	r3, [sp, #164]	@ 0xa4
 801ee48:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ee4a:	eeb0 3a67 	vmov.f32	s6, s15
 801ee4e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee52:	932a      	str	r3, [sp, #168]	@ 0xa8
 801ee54:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ee56:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801ee58:	3b01      	subs	r3, #1
 801ee5a:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ee5c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ee5e:	bf08      	it	eq
 801ee60:	4613      	moveq	r3, r2
 801ee62:	9307      	str	r3, [sp, #28]
 801ee64:	e5fb      	b.n	801ea5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801ee66:	2900      	cmp	r1, #0
 801ee68:	f43f ae6b 	beq.w	801eb42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ee6c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ee70:	9308      	str	r3, [sp, #32]
 801ee72:	0e1b      	lsrs	r3, r3, #24
 801ee74:	9311      	str	r3, [sp, #68]	@ 0x44
 801ee76:	e664      	b.n	801eb42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ee78:	f112 0801 	adds.w	r8, r2, #1
 801ee7c:	f53f af7b 	bmi.w	801ed76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ee80:	4543      	cmp	r3, r8
 801ee82:	f6ff af78 	blt.w	801ed76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ee86:	f11c 0801 	adds.w	r8, ip, #1
 801ee8a:	f53f af74 	bmi.w	801ed76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ee8e:	45c6      	cmp	lr, r8
 801ee90:	f6ff af71 	blt.w	801ed76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ee94:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801ee96:	b21b      	sxth	r3, r3
 801ee98:	9201      	str	r2, [sp, #4]
 801ee9a:	fa0f f28e 	sxth.w	r2, lr
 801ee9e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801eea2:	e9cd c002 	strd	ip, r0, [sp, #8]
 801eea6:	9200      	str	r2, [sp, #0]
 801eea8:	4639      	mov	r1, r7
 801eeaa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801eeac:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801eeae:	f7ff fc79 	bl	801e7a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801eeb2:	e760      	b.n	801ed76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eeb4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801eeb6:	1427      	asrs	r7, r4, #16
 801eeb8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801eeba:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801eebe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eec2:	1433      	asrs	r3, r6, #16
 801eec4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801eec8:	fb01 7303 	mla	r3, r1, r3, r7
 801eecc:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801eed0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801eed4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801eed8:	2a00      	cmp	r2, #0
 801eeda:	f000 8133 	beq.w	801f144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801eede:	687d      	ldr	r5, [r7, #4]
 801eee0:	950e      	str	r5, [sp, #56]	@ 0x38
 801eee2:	0e2d      	lsrs	r5, r5, #24
 801eee4:	9515      	str	r5, [sp, #84]	@ 0x54
 801eee6:	b178      	cbz	r0, 801ef08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801eee8:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801eeec:	3901      	subs	r1, #1
 801eeee:	0089      	lsls	r1, r1, #2
 801eef0:	3104      	adds	r1, #4
 801eef2:	eb07 0e01 	add.w	lr, r7, r1
 801eef6:	5879      	ldr	r1, [r7, r1]
 801eef8:	9109      	str	r1, [sp, #36]	@ 0x24
 801eefa:	0e09      	lsrs	r1, r1, #24
 801eefc:	9112      	str	r1, [sp, #72]	@ 0x48
 801eefe:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ef02:	910f      	str	r1, [sp, #60]	@ 0x3c
 801ef04:	0e09      	lsrs	r1, r1, #24
 801ef06:	9116      	str	r1, [sp, #88]	@ 0x58
 801ef08:	b292      	uxth	r2, r2
 801ef0a:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801ef0c:	b280      	uxth	r0, r0
 801ef0e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ef10:	fb02 f800 	mul.w	r8, r2, r0
 801ef14:	0112      	lsls	r2, r2, #4
 801ef16:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ef1a:	eba2 0e08 	sub.w	lr, r2, r8
 801ef1e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ef22:	b280      	uxth	r0, r0
 801ef24:	fa1f fe8e 	uxth.w	lr, lr
 801ef28:	1a12      	subs	r2, r2, r0
 801ef2a:	fb0e f101 	mul.w	r1, lr, r1
 801ef2e:	b292      	uxth	r2, r2
 801ef30:	fb02 110c 	mla	r1, r2, ip, r1
 801ef34:	fb00 1105 	mla	r1, r0, r5, r1
 801ef38:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ef3a:	fb08 1105 	mla	r1, r8, r5, r1
 801ef3e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ef42:	2900      	cmp	r1, #0
 801ef44:	f000 80f5 	beq.w	801f132 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801ef48:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ef4c:	d019      	beq.n	801ef82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801ef4e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ef52:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ef56:	fb0c fa0a 	mul.w	sl, ip, sl
 801ef5a:	fb0c fc03 	mul.w	ip, ip, r3
 801ef5e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ef62:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ef66:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ef6a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ef6e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ef72:	4453      	add	r3, sl
 801ef74:	0a3f      	lsrs	r7, r7, #8
 801ef76:	0a1b      	lsrs	r3, r3, #8
 801ef78:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ef7c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ef80:	433b      	orrs	r3, r7
 801ef82:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ef84:	2dff      	cmp	r5, #255	@ 0xff
 801ef86:	d020      	beq.n	801efca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801ef88:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ef8a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ef8e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ef90:	436f      	muls	r7, r5
 801ef92:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ef94:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef98:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ef9c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ef9e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801efa2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801efa6:	fb05 fa0a 	mul.w	sl, r5, sl
 801efaa:	44bc      	add	ip, r7
 801efac:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801efb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801efb4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801efb8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801efbc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801efc0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801efc4:	ea4c 050a 	orr.w	r5, ip, sl
 801efc8:	950e      	str	r5, [sp, #56]	@ 0x38
 801efca:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801efcc:	2dff      	cmp	r5, #255	@ 0xff
 801efce:	d020      	beq.n	801f012 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801efd0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801efd2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801efd6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801efd8:	436f      	muls	r7, r5
 801efda:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801efdc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801efe0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801efe4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801efe6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801efea:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801efee:	fb05 fa0a 	mul.w	sl, r5, sl
 801eff2:	44bc      	add	ip, r7
 801eff4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801eff8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801effc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f000:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f004:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f008:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f00c:	ea4c 050a 	orr.w	r5, ip, sl
 801f010:	9509      	str	r5, [sp, #36]	@ 0x24
 801f012:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f014:	2dff      	cmp	r5, #255	@ 0xff
 801f016:	d020      	beq.n	801f05a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801f018:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f01a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f01e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f020:	436f      	muls	r7, r5
 801f022:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f024:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f028:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f02c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f02e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f032:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f036:	fb05 fa0a 	mul.w	sl, r5, sl
 801f03a:	44bc      	add	ip, r7
 801f03c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f040:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f044:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f048:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f04c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f050:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f054:	ea4c 050a 	orr.w	r5, ip, sl
 801f058:	950f      	str	r5, [sp, #60]	@ 0x3c
 801f05a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f05c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f060:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f064:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f068:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f06a:	fb0e f707 	mul.w	r7, lr, r7
 801f06e:	fb02 770c 	mla	r7, r2, ip, r7
 801f072:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f076:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f078:	fb00 770c 	mla	r7, r0, ip, r7
 801f07c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f080:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f082:	fb08 770c 	mla	r7, r8, ip, r7
 801f086:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f08a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f08c:	fb0e fe0c 	mul.w	lr, lr, ip
 801f090:	0a3f      	lsrs	r7, r7, #8
 801f092:	fb02 e303 	mla	r3, r2, r3, lr
 801f096:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f098:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f09c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801f0a0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f0a2:	fb00 330a 	mla	r3, r0, sl, r3
 801f0a6:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801f0aa:	f8b9 0000 	ldrh.w	r0, [r9]
 801f0ae:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f0b2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f0b4:	1202      	asrs	r2, r0, #8
 801f0b6:	4359      	muls	r1, r3
 801f0b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f0bc:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801f0c0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f0c4:	1c4b      	adds	r3, r1, #1
 801f0c6:	ea47 070c 	orr.w	r7, r7, ip
 801f0ca:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f0ce:	0c3b      	lsrs	r3, r7, #16
 801f0d0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f0d4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f0d8:	b2ff      	uxtb	r7, r7
 801f0da:	fb13 f305 	smulbb	r3, r3, r5
 801f0de:	b2c9      	uxtb	r1, r1
 801f0e0:	fb17 f705 	smulbb	r7, r7, r5
 801f0e4:	fb02 3201 	mla	r2, r2, r1, r3
 801f0e8:	10c3      	asrs	r3, r0, #3
 801f0ea:	fb1c fc05 	smulbb	ip, ip, r5
 801f0ee:	00c0      	lsls	r0, r0, #3
 801f0f0:	b292      	uxth	r2, r2
 801f0f2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f0f6:	b2c0      	uxtb	r0, r0
 801f0f8:	fb03 c301 	mla	r3, r3, r1, ip
 801f0fc:	fb00 7001 	mla	r0, r0, r1, r7
 801f100:	1c51      	adds	r1, r2, #1
 801f102:	b29b      	uxth	r3, r3
 801f104:	b280      	uxth	r0, r0
 801f106:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f10a:	f100 0c01 	add.w	ip, r0, #1
 801f10e:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801f112:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801f116:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f11a:	ea4c 0202 	orr.w	r2, ip, r2
 801f11e:	f103 0c01 	add.w	ip, r3, #1
 801f122:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f126:	095b      	lsrs	r3, r3, #5
 801f128:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f12c:	431a      	orrs	r2, r3
 801f12e:	f8a9 2000 	strh.w	r2, [r9]
 801f132:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f134:	f109 0902 	add.w	r9, r9, #2
 801f138:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f13c:	441c      	add	r4, r3
 801f13e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f140:	441e      	add	r6, r3
 801f142:	e647      	b.n	801edd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801f144:	2800      	cmp	r0, #0
 801f146:	f43f aedf 	beq.w	801ef08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f14a:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801f14e:	9109      	str	r1, [sp, #36]	@ 0x24
 801f150:	0e09      	lsrs	r1, r1, #24
 801f152:	9112      	str	r1, [sp, #72]	@ 0x48
 801f154:	e6d8      	b.n	801ef08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f156:	b01d      	add	sp, #116	@ 0x74
 801f158:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f15c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801f15c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f160:	b085      	sub	sp, #20
 801f162:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801f166:	9102      	str	r1, [sp, #8]
 801f168:	2c00      	cmp	r4, #0
 801f16a:	fb04 7103 	mla	r1, r4, r3, r7
 801f16e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801f172:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801f176:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801f17a:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801f17e:	f2c0 810c 	blt.w	801f39a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f182:	45a6      	cmp	lr, r4
 801f184:	f340 8109 	ble.w	801f39a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f188:	2f00      	cmp	r7, #0
 801f18a:	f2c0 8104 	blt.w	801f396 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f18e:	42bb      	cmp	r3, r7
 801f190:	f340 8101 	ble.w	801f396 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f194:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801f198:	1c7a      	adds	r2, r7, #1
 801f19a:	f100 8101 	bmi.w	801f3a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f19e:	4293      	cmp	r3, r2
 801f1a0:	f340 80fe 	ble.w	801f3a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f1a4:	2e00      	cmp	r6, #0
 801f1a6:	f000 80fd 	beq.w	801f3a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801f1aa:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801f1ae:	3401      	adds	r4, #1
 801f1b0:	f100 80fc 	bmi.w	801f3ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f1b4:	45a6      	cmp	lr, r4
 801f1b6:	f340 80f9 	ble.w	801f3ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f1ba:	2800      	cmp	r0, #0
 801f1bc:	f000 80f9 	beq.w	801f3b2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801f1c0:	2f00      	cmp	r7, #0
 801f1c2:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801f1c6:	f2c0 80ef 	blt.w	801f3a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f1ca:	42bb      	cmp	r3, r7
 801f1cc:	f340 80ec 	ble.w	801f3a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f1d0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801f1d4:	3701      	adds	r7, #1
 801f1d6:	f100 80ef 	bmi.w	801f3b8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f1da:	42bb      	cmp	r3, r7
 801f1dc:	f340 80ec 	ble.w	801f3b8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f1e0:	2e00      	cmp	r6, #0
 801f1e2:	f000 80eb 	beq.w	801f3bc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801f1e6:	6852      	ldr	r2, [r2, #4]
 801f1e8:	b2b6      	uxth	r6, r6
 801f1ea:	b280      	uxth	r0, r0
 801f1ec:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f1f0:	fb00 fe06 	mul.w	lr, r0, r6
 801f1f4:	0136      	lsls	r6, r6, #4
 801f1f6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f1fa:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f1fe:	eba6 070e 	sub.w	r7, r6, lr
 801f202:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801f206:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f20a:	b280      	uxth	r0, r0
 801f20c:	b2bf      	uxth	r7, r7
 801f20e:	1a1b      	subs	r3, r3, r0
 801f210:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f214:	fb07 f60a 	mul.w	r6, r7, sl
 801f218:	b29b      	uxth	r3, r3
 801f21a:	fb0b 6603 	mla	r6, fp, r3, r6
 801f21e:	fb00 6609 	mla	r6, r0, r9, r6
 801f222:	fb0e 6608 	mla	r6, lr, r8, r6
 801f226:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f22a:	9600      	str	r6, [sp, #0]
 801f22c:	2e00      	cmp	r6, #0
 801f22e:	f000 80af 	beq.w	801f390 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801f232:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f236:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801f23a:	9e02      	ldr	r6, [sp, #8]
 801f23c:	fb0b fc0c 	mul.w	ip, fp, ip
 801f240:	fb0b f505 	mul.w	r5, fp, r5
 801f244:	8836      	ldrh	r6, [r6, #0]
 801f246:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f24a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f24e:	9501      	str	r5, [sp, #4]
 801f250:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801f254:	44dc      	add	ip, fp
 801f256:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f25a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801f25e:	9503      	str	r5, [sp, #12]
 801f260:	9d01      	ldr	r5, [sp, #4]
 801f262:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801f266:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f26a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801f26e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f272:	fb0a fc0c 	mul.w	ip, sl, ip
 801f276:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f27a:	fb0a fa01 	mul.w	sl, sl, r1
 801f27e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f282:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f286:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801f28a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f28e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f292:	4465      	add	r5, ip
 801f294:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f298:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801f29c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f2a0:	fb09 fc0c 	mul.w	ip, r9, ip
 801f2a4:	0a2d      	lsrs	r5, r5, #8
 801f2a6:	fb09 f904 	mul.w	r9, r9, r4
 801f2aa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f2ae:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f2b2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f2b6:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801f2ba:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f2be:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f2c2:	437d      	muls	r5, r7
 801f2c4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f2c8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801f2cc:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f2d0:	4461      	add	r1, ip
 801f2d2:	fb08 f404 	mul.w	r4, r8, r4
 801f2d6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f2da:	fb08 f802 	mul.w	r8, r8, r2
 801f2de:	0a09      	lsrs	r1, r1, #8
 801f2e0:	0a22      	lsrs	r2, r4, #8
 801f2e2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801f2e6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f2ea:	fb07 f70a 	mul.w	r7, r7, sl
 801f2ee:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f2f2:	4414      	add	r4, r2
 801f2f4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801f2f8:	0a24      	lsrs	r4, r4, #8
 801f2fa:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801f2fe:	9a03      	ldr	r2, [sp, #12]
 801f300:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801f304:	fb02 5503 	mla	r5, r2, r3, r5
 801f308:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f30c:	fb04 540e 	mla	r4, r4, lr, r5
 801f310:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801f314:	fb01 4100 	mla	r1, r1, r0, r4
 801f318:	0a09      	lsrs	r1, r1, #8
 801f31a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801f31e:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801f322:	fb03 7101 	mla	r1, r3, r1, r7
 801f326:	9b00      	ldr	r3, [sp, #0]
 801f328:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f32c:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801f330:	43da      	mvns	r2, r3
 801f332:	1233      	asrs	r3, r6, #8
 801f334:	fb00 e101 	mla	r1, r0, r1, lr
 801f338:	10f0      	asrs	r0, r6, #3
 801f33a:	b2d2      	uxtb	r2, r2
 801f33c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f340:	0a09      	lsrs	r1, r1, #8
 801f342:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f346:	00f6      	lsls	r6, r6, #3
 801f348:	4353      	muls	r3, r2
 801f34a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f34e:	4350      	muls	r0, r2
 801f350:	b2f6      	uxtb	r6, r6
 801f352:	4321      	orrs	r1, r4
 801f354:	4356      	muls	r6, r2
 801f356:	1c5a      	adds	r2, r3, #1
 801f358:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f35c:	0c0b      	lsrs	r3, r1, #16
 801f35e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f362:	1c42      	adds	r2, r0, #1
 801f364:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f368:	0a0a      	lsrs	r2, r1, #8
 801f36a:	021b      	lsls	r3, r3, #8
 801f36c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f370:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801f374:	00d2      	lsls	r2, r2, #3
 801f376:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f37a:	4313      	orrs	r3, r2
 801f37c:	1c72      	adds	r2, r6, #1
 801f37e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801f382:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801f386:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f38a:	4319      	orrs	r1, r3
 801f38c:	9b02      	ldr	r3, [sp, #8]
 801f38e:	8019      	strh	r1, [r3, #0]
 801f390:	b005      	add	sp, #20
 801f392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f396:	2500      	movs	r5, #0
 801f398:	e6fe      	b.n	801f198 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801f39a:	2100      	movs	r1, #0
 801f39c:	460d      	mov	r5, r1
 801f39e:	e706      	b.n	801f1ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f3a0:	2100      	movs	r1, #0
 801f3a2:	e704      	b.n	801f1ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f3a4:	4631      	mov	r1, r6
 801f3a6:	e702      	b.n	801f1ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f3a8:	2400      	movs	r4, #0
 801f3aa:	e713      	b.n	801f1d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801f3ac:	2200      	movs	r2, #0
 801f3ae:	4614      	mov	r4, r2
 801f3b0:	e71a      	b.n	801f1e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f3b2:	4602      	mov	r2, r0
 801f3b4:	4604      	mov	r4, r0
 801f3b6:	e717      	b.n	801f1e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f3b8:	2200      	movs	r2, #0
 801f3ba:	e715      	b.n	801f1e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f3bc:	4632      	mov	r2, r6
 801f3be:	e713      	b.n	801f1e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

0801f3c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f3c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f3c4:	b09b      	sub	sp, #108	@ 0x6c
 801f3c6:	9218      	str	r2, [sp, #96]	@ 0x60
 801f3c8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801f3ca:	9019      	str	r0, [sp, #100]	@ 0x64
 801f3cc:	9116      	str	r1, [sp, #88]	@ 0x58
 801f3ce:	6850      	ldr	r0, [r2, #4]
 801f3d0:	9307      	str	r3, [sp, #28]
 801f3d2:	6812      	ldr	r2, [r2, #0]
 801f3d4:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801f3d8:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801f3dc:	fb00 1303 	mla	r3, r0, r3, r1
 801f3e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f3e4:	930a      	str	r3, [sp, #40]	@ 0x28
 801f3e6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f3e8:	681b      	ldr	r3, [r3, #0]
 801f3ea:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f3ec:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f3ee:	2b00      	cmp	r3, #0
 801f3f0:	dc03      	bgt.n	801f3fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f3f2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f3f4:	2b00      	cmp	r3, #0
 801f3f6:	f340 8387 	ble.w	801fb08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801f3fa:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f3fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f400:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f404:	1e48      	subs	r0, r1, #1
 801f406:	1e57      	subs	r7, r2, #1
 801f408:	9b07      	ldr	r3, [sp, #28]
 801f40a:	2b00      	cmp	r3, #0
 801f40c:	f340 8166 	ble.w	801f6dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801f410:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f414:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f418:	d406      	bmi.n	801f428 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f41a:	4584      	cmp	ip, r0
 801f41c:	da04      	bge.n	801f428 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f41e:	2b00      	cmp	r3, #0
 801f420:	db02      	blt.n	801f428 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f422:	42bb      	cmp	r3, r7
 801f424:	f2c0 815b 	blt.w	801f6de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f428:	f11c 0c01 	adds.w	ip, ip, #1
 801f42c:	f100 814b 	bmi.w	801f6c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f430:	4561      	cmp	r1, ip
 801f432:	f2c0 8148 	blt.w	801f6c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f436:	3301      	adds	r3, #1
 801f438:	f100 8145 	bmi.w	801f6c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f43c:	429a      	cmp	r2, r3
 801f43e:	f2c0 8142 	blt.w	801f6c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f442:	9b07      	ldr	r3, [sp, #28]
 801f444:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801f446:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f448:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f44a:	2b00      	cmp	r3, #0
 801f44c:	f340 8165 	ble.w	801f71a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f450:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801f452:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f456:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f458:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f45c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f460:	1422      	asrs	r2, r4, #16
 801f462:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f466:	689b      	ldr	r3, [r3, #8]
 801f468:	f100 81d5 	bmi.w	801f816 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f46c:	f103 38ff 	add.w	r8, r3, #4294967295
 801f470:	4542      	cmp	r2, r8
 801f472:	f280 81d0 	bge.w	801f816 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f476:	f1bc 0f00 	cmp.w	ip, #0
 801f47a:	f2c0 81cc 	blt.w	801f816 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f47e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f482:	45c4      	cmp	ip, r8
 801f484:	f280 81c7 	bge.w	801f816 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f488:	b21b      	sxth	r3, r3
 801f48a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f48c:	fb0c 2203 	mla	r2, ip, r3, r2
 801f490:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f494:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f498:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f49c:	2900      	cmp	r1, #0
 801f49e:	f000 8182 	beq.w	801f7a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f4a2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f4a6:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f4a8:	0e2d      	lsrs	r5, r5, #24
 801f4aa:	9512      	str	r5, [sp, #72]	@ 0x48
 801f4ac:	b180      	cbz	r0, 801f4d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f4ae:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801f4b2:	3b01      	subs	r3, #1
 801f4b4:	009b      	lsls	r3, r3, #2
 801f4b6:	3304      	adds	r3, #4
 801f4b8:	eb08 0c03 	add.w	ip, r8, r3
 801f4bc:	f858 3003 	ldr.w	r3, [r8, r3]
 801f4c0:	9308      	str	r3, [sp, #32]
 801f4c2:	0e1b      	lsrs	r3, r3, #24
 801f4c4:	9310      	str	r3, [sp, #64]	@ 0x40
 801f4c6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f4ca:	930c      	str	r3, [sp, #48]	@ 0x30
 801f4cc:	0e1b      	lsrs	r3, r3, #24
 801f4ce:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f4d0:	b289      	uxth	r1, r1
 801f4d2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f4d4:	b280      	uxth	r0, r0
 801f4d6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f4d8:	fb01 f900 	mul.w	r9, r1, r0
 801f4dc:	0109      	lsls	r1, r1, #4
 801f4de:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f4e2:	eba1 0809 	sub.w	r8, r1, r9
 801f4e6:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801f4ea:	b280      	uxth	r0, r0
 801f4ec:	fa1f f888 	uxth.w	r8, r8
 801f4f0:	1a09      	subs	r1, r1, r0
 801f4f2:	fb08 f303 	mul.w	r3, r8, r3
 801f4f6:	b289      	uxth	r1, r1
 801f4f8:	fb01 330e 	mla	r3, r1, lr, r3
 801f4fc:	fb00 3305 	mla	r3, r0, r5, r3
 801f500:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f502:	fb09 3305 	mla	r3, r9, r5, r3
 801f506:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f50a:	2b00      	cmp	r3, #0
 801f50c:	f000 80d2 	beq.w	801f6b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f510:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801f514:	d01b      	beq.n	801f54e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801f516:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801f51a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f51e:	fb0e fa0a 	mul.w	sl, lr, sl
 801f522:	fb0e fe02 	mul.w	lr, lr, r2
 801f526:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f52a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f52e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801f532:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f536:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f53a:	4452      	add	r2, sl
 801f53c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f540:	0a12      	lsrs	r2, r2, #8
 801f542:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f546:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f54a:	ea42 020c 	orr.w	r2, r2, ip
 801f54e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f550:	2dff      	cmp	r5, #255	@ 0xff
 801f552:	d021      	beq.n	801f598 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801f554:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f556:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f55a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f55c:	fb05 fb0b 	mul.w	fp, r5, fp
 801f560:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f562:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f566:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f568:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f56c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f570:	fb05 fa0a 	mul.w	sl, r5, sl
 801f574:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f578:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f57c:	44de      	add	lr, fp
 801f57e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f582:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f586:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f58a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f58e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f592:	ea4e 050a 	orr.w	r5, lr, sl
 801f596:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f598:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f59a:	2dff      	cmp	r5, #255	@ 0xff
 801f59c:	d021      	beq.n	801f5e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f59e:	9d08      	ldr	r5, [sp, #32]
 801f5a0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f5a4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f5a6:	fb05 fb0b 	mul.w	fp, r5, fp
 801f5aa:	9d08      	ldr	r5, [sp, #32]
 801f5ac:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f5b0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f5b2:	fb05 fa0e 	mul.w	sl, r5, lr
 801f5b6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f5ba:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f5be:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f5c2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f5c6:	44de      	add	lr, fp
 801f5c8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f5cc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f5d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f5d4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f5d8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f5dc:	ea4e 050a 	orr.w	r5, lr, sl
 801f5e0:	9508      	str	r5, [sp, #32]
 801f5e2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f5e4:	2dff      	cmp	r5, #255	@ 0xff
 801f5e6:	d021      	beq.n	801f62c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801f5e8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f5ea:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f5ee:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f5f0:	fb05 fb0b 	mul.w	fp, r5, fp
 801f5f4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f5f6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f5fa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f5fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f600:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f604:	fb05 fa0a 	mul.w	sl, r5, sl
 801f608:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f60c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f610:	44de      	add	lr, fp
 801f612:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f616:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f61a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f61e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f622:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f626:	ea4e 050a 	orr.w	r5, lr, sl
 801f62a:	950c      	str	r5, [sp, #48]	@ 0x30
 801f62c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f62e:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801f632:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f636:	2bff      	cmp	r3, #255	@ 0xff
 801f638:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f63c:	9d08      	ldr	r5, [sp, #32]
 801f63e:	fb08 fc0c 	mul.w	ip, r8, ip
 801f642:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f646:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f64a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f64c:	fb00 cc0e 	mla	ip, r0, lr, ip
 801f650:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f654:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f656:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f65a:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f65e:	fb08 f80e 	mul.w	r8, r8, lr
 801f662:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f666:	fb01 8202 	mla	r2, r1, r2, r8
 801f66a:	9908      	ldr	r1, [sp, #32]
 801f66c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f670:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f674:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f676:	fb00 220a 	mla	r2, r0, sl, r2
 801f67a:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801f67e:	fb09 2900 	mla	r9, r9, r0, r2
 801f682:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f686:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801f68a:	ea4c 0c09 	orr.w	ip, ip, r9
 801f68e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801f692:	f040 8091 	bne.w	801f7b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f696:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801f69a:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801f69e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f6a2:	f022 0207 	bic.w	r2, r2, #7
 801f6a6:	431a      	orrs	r2, r3
 801f6a8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801f6ac:	ea4c 0c02 	orr.w	ip, ip, r2
 801f6b0:	f8a7 c000 	strh.w	ip, [r7]
 801f6b4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f6b6:	3702      	adds	r7, #2
 801f6b8:	441c      	add	r4, r3
 801f6ba:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f6bc:	441e      	add	r6, r3
 801f6be:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f6c0:	3b01      	subs	r3, #1
 801f6c2:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f6c4:	e6c0      	b.n	801f448 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f6c6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f6c8:	441c      	add	r4, r3
 801f6ca:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f6cc:	441e      	add	r6, r3
 801f6ce:	9b07      	ldr	r3, [sp, #28]
 801f6d0:	3b01      	subs	r3, #1
 801f6d2:	9307      	str	r3, [sp, #28]
 801f6d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f6d6:	3302      	adds	r3, #2
 801f6d8:	930a      	str	r3, [sp, #40]	@ 0x28
 801f6da:	e695      	b.n	801f408 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f6dc:	d024      	beq.n	801f728 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801f6de:	9b07      	ldr	r3, [sp, #28]
 801f6e0:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801f6e2:	3b01      	subs	r3, #1
 801f6e4:	fb00 4003 	mla	r0, r0, r3, r4
 801f6e8:	1400      	asrs	r0, r0, #16
 801f6ea:	f53f aeaa 	bmi.w	801f442 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f6ee:	3901      	subs	r1, #1
 801f6f0:	4288      	cmp	r0, r1
 801f6f2:	f6bf aea6 	bge.w	801f442 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f6f6:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801f6f8:	fb01 6303 	mla	r3, r1, r3, r6
 801f6fc:	141b      	asrs	r3, r3, #16
 801f6fe:	f53f aea0 	bmi.w	801f442 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f702:	3a01      	subs	r2, #1
 801f704:	4293      	cmp	r3, r2
 801f706:	f6bf ae9c 	bge.w	801f442 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f70a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f70e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801f712:	f1bb 0f00 	cmp.w	fp, #0
 801f716:	f300 809a 	bgt.w	801f84e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f71a:	9b07      	ldr	r3, [sp, #28]
 801f71c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f720:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f722:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f726:	930a      	str	r3, [sp, #40]	@ 0x28
 801f728:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f72a:	2b00      	cmp	r3, #0
 801f72c:	f340 81ec 	ble.w	801fb08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801f730:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f734:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f736:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f73a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f73e:	eef0 6a62 	vmov.f32	s13, s5
 801f742:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f746:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f74a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f74e:	ee16 4a90 	vmov	r4, s13
 801f752:	eef0 6a43 	vmov.f32	s13, s6
 801f756:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f75a:	ee16 6a90 	vmov	r6, s13
 801f75e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f762:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f766:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f76a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f76e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f772:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f776:	ee12 2a90 	vmov	r2, s5
 801f77a:	eef0 2a47 	vmov.f32	s5, s14
 801f77e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f782:	ee13 2a10 	vmov	r2, s6
 801f786:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f788:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f78a:	eeb0 3a67 	vmov.f32	s6, s15
 801f78e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f792:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f794:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f796:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801f798:	3b01      	subs	r3, #1
 801f79a:	9316      	str	r3, [sp, #88]	@ 0x58
 801f79c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f79e:	bf08      	it	eq
 801f7a0:	4613      	moveq	r3, r2
 801f7a2:	9307      	str	r3, [sp, #28]
 801f7a4:	e622      	b.n	801f3ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801f7a6:	2800      	cmp	r0, #0
 801f7a8:	f43f ae92 	beq.w	801f4d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f7ac:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f7b0:	9308      	str	r3, [sp, #32]
 801f7b2:	0e1b      	lsrs	r3, r3, #24
 801f7b4:	9310      	str	r3, [sp, #64]	@ 0x40
 801f7b6:	e68b      	b.n	801f4d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f7b8:	8839      	ldrh	r1, [r7, #0]
 801f7ba:	43db      	mvns	r3, r3
 801f7bc:	4dd4      	ldr	r5, [pc, #848]	@ (801fb10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801f7be:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801f7c2:	fa5f f883 	uxtb.w	r8, r3
 801f7c6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801f7ca:	10c8      	asrs	r0, r1, #3
 801f7cc:	00cb      	lsls	r3, r1, #3
 801f7ce:	fb0e fe08 	mul.w	lr, lr, r8
 801f7d2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f7d6:	b2db      	uxtb	r3, r3
 801f7d8:	f10e 0101 	add.w	r1, lr, #1
 801f7dc:	fb00 f008 	mul.w	r0, r0, r8
 801f7e0:	fb03 f308 	mul.w	r3, r3, r8
 801f7e4:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801f7e8:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801f7ec:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801f7f0:	f100 0e01 	add.w	lr, r0, #1
 801f7f4:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801f7f8:	b2c9      	uxtb	r1, r1
 801f7fa:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f7fe:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801f802:	00d2      	lsls	r2, r2, #3
 801f804:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f808:	430a      	orrs	r2, r1
 801f80a:	1c59      	adds	r1, r3, #1
 801f80c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f810:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f814:	e748      	b.n	801f6a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f816:	f112 0801 	adds.w	r8, r2, #1
 801f81a:	f53f af4b 	bmi.w	801f6b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f81e:	4543      	cmp	r3, r8
 801f820:	f6ff af48 	blt.w	801f6b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f824:	f11c 0801 	adds.w	r8, ip, #1
 801f828:	f53f af44 	bmi.w	801f6b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f82c:	45c6      	cmp	lr, r8
 801f82e:	f6ff af41 	blt.w	801f6b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f832:	b21b      	sxth	r3, r3
 801f834:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801f838:	fa0f f28e 	sxth.w	r2, lr
 801f83c:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801f840:	9200      	str	r2, [sp, #0]
 801f842:	4639      	mov	r1, r7
 801f844:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f846:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801f848:	f7ff fc88 	bl	801f15c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801f84c:	e732      	b.n	801f6b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f84e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f850:	1421      	asrs	r1, r4, #16
 801f852:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f854:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f858:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801f85c:	1433      	asrs	r3, r6, #16
 801f85e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f862:	fb07 1303 	mla	r3, r7, r3, r1
 801f866:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801f868:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801f86c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f870:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f874:	2a00      	cmp	r2, #0
 801f876:	f000 8108 	beq.w	801fa8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 801f87a:	684d      	ldr	r5, [r1, #4]
 801f87c:	950d      	str	r5, [sp, #52]	@ 0x34
 801f87e:	0e2d      	lsrs	r5, r5, #24
 801f880:	9514      	str	r5, [sp, #80]	@ 0x50
 801f882:	b178      	cbz	r0, 801f8a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f884:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801f888:	3f01      	subs	r7, #1
 801f88a:	00bf      	lsls	r7, r7, #2
 801f88c:	3704      	adds	r7, #4
 801f88e:	eb01 0e07 	add.w	lr, r1, r7
 801f892:	59c9      	ldr	r1, [r1, r7]
 801f894:	9109      	str	r1, [sp, #36]	@ 0x24
 801f896:	0e09      	lsrs	r1, r1, #24
 801f898:	9111      	str	r1, [sp, #68]	@ 0x44
 801f89a:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f89e:	910e      	str	r1, [sp, #56]	@ 0x38
 801f8a0:	0e09      	lsrs	r1, r1, #24
 801f8a2:	9115      	str	r1, [sp, #84]	@ 0x54
 801f8a4:	b292      	uxth	r2, r2
 801f8a6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f8a8:	b280      	uxth	r0, r0
 801f8aa:	fb02 f900 	mul.w	r9, r2, r0
 801f8ae:	0112      	lsls	r2, r2, #4
 801f8b0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f8b4:	eba2 0e09 	sub.w	lr, r2, r9
 801f8b8:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801f8bc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f8be:	b280      	uxth	r0, r0
 801f8c0:	fa1f fe8e 	uxth.w	lr, lr
 801f8c4:	1a09      	subs	r1, r1, r0
 801f8c6:	fb0e f202 	mul.w	r2, lr, r2
 801f8ca:	b289      	uxth	r1, r1
 801f8cc:	fb01 220c 	mla	r2, r1, ip, r2
 801f8d0:	fb00 2205 	mla	r2, r0, r5, r2
 801f8d4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f8d6:	fb09 2205 	mla	r2, r9, r5, r2
 801f8da:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f8de:	2a00      	cmp	r2, #0
 801f8e0:	f000 80ca 	beq.w	801fa78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801f8e4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801f8e8:	d019      	beq.n	801f91e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801f8ea:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801f8ee:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f8f2:	fb0c fa0a 	mul.w	sl, ip, sl
 801f8f6:	fb0c fc03 	mul.w	ip, ip, r3
 801f8fa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f8fe:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f902:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801f906:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f90a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f90e:	4453      	add	r3, sl
 801f910:	0a3f      	lsrs	r7, r7, #8
 801f912:	0a1b      	lsrs	r3, r3, #8
 801f914:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801f918:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f91c:	433b      	orrs	r3, r7
 801f91e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f920:	2dff      	cmp	r5, #255	@ 0xff
 801f922:	d020      	beq.n	801f966 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801f924:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f926:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f92a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f92c:	436f      	muls	r7, r5
 801f92e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f930:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f934:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f938:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f93a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f93e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f942:	fb05 fa0a 	mul.w	sl, r5, sl
 801f946:	44bc      	add	ip, r7
 801f948:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f94c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f950:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f954:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f958:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f95c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f960:	ea4c 050a 	orr.w	r5, ip, sl
 801f964:	950d      	str	r5, [sp, #52]	@ 0x34
 801f966:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f968:	2dff      	cmp	r5, #255	@ 0xff
 801f96a:	d020      	beq.n	801f9ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801f96c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f96e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f972:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f974:	436f      	muls	r7, r5
 801f976:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f978:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f97c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f97e:	fb05 fa0c 	mul.w	sl, r5, ip
 801f982:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f986:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f98a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f98e:	44bc      	add	ip, r7
 801f990:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f994:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f998:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f99c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f9a0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f9a4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f9a8:	ea4c 050a 	orr.w	r5, ip, sl
 801f9ac:	9509      	str	r5, [sp, #36]	@ 0x24
 801f9ae:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f9b0:	2dff      	cmp	r5, #255	@ 0xff
 801f9b2:	d020      	beq.n	801f9f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f9b4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f9b6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f9ba:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f9bc:	436f      	muls	r7, r5
 801f9be:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f9c0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f9c4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f9c8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f9ca:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f9ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f9d2:	fb05 fa0a 	mul.w	sl, r5, sl
 801f9d6:	44bc      	add	ip, r7
 801f9d8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f9dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f9e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f9e4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f9e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f9ec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f9f0:	ea4c 050a 	orr.w	r5, ip, sl
 801f9f4:	950e      	str	r5, [sp, #56]	@ 0x38
 801f9f6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f9f8:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f9fc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801fa00:	2aff      	cmp	r2, #255	@ 0xff
 801fa02:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801fa06:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801fa08:	fb0e f707 	mul.w	r7, lr, r7
 801fa0c:	fb01 770c 	mla	r7, r1, ip, r7
 801fa10:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801fa14:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801fa16:	fb00 770c 	mla	r7, r0, ip, r7
 801fa1a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801fa1e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801fa20:	fb09 770c 	mla	r7, r9, ip, r7
 801fa24:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801fa28:	fb0e fe0c 	mul.w	lr, lr, ip
 801fa2c:	ea4f 2717 	mov.w	r7, r7, lsr #8
 801fa30:	fb01 e303 	mla	r3, r1, r3, lr
 801fa34:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801fa36:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801fa3a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801fa3e:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801fa40:	fb00 330a 	mla	r3, r0, sl, r3
 801fa44:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801fa48:	fb09 3c0c 	mla	ip, r9, ip, r3
 801fa4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fa50:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801fa54:	ea47 070c 	orr.w	r7, r7, ip
 801fa58:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801fa5c:	d11e      	bne.n	801fa9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 801fa5e:	097a      	lsrs	r2, r7, #5
 801fa60:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801fa64:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801fa68:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fa6c:	f023 0307 	bic.w	r3, r3, #7
 801fa70:	4313      	orrs	r3, r2
 801fa72:	431f      	orrs	r7, r3
 801fa74:	f8a8 7000 	strh.w	r7, [r8]
 801fa78:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801fa7a:	f108 0802 	add.w	r8, r8, #2
 801fa7e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fa82:	441c      	add	r4, r3
 801fa84:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fa86:	441e      	add	r6, r3
 801fa88:	e643      	b.n	801f712 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801fa8a:	2800      	cmp	r0, #0
 801fa8c:	f43f af0a 	beq.w	801f8a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fa90:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801fa94:	9109      	str	r1, [sp, #36]	@ 0x24
 801fa96:	0e09      	lsrs	r1, r1, #24
 801fa98:	9111      	str	r1, [sp, #68]	@ 0x44
 801fa9a:	e703      	b.n	801f8a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fa9c:	f8b8 1000 	ldrh.w	r1, [r8]
 801faa0:	43d2      	mvns	r2, r2
 801faa2:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801faa6:	fa5f fe82 	uxtb.w	lr, r2
 801faaa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801faae:	10c8      	asrs	r0, r1, #3
 801fab0:	00ca      	lsls	r2, r1, #3
 801fab2:	fb0c fc0e 	mul.w	ip, ip, lr
 801fab6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801faba:	b2d2      	uxtb	r2, r2
 801fabc:	f10c 0101 	add.w	r1, ip, #1
 801fac0:	fb00 f00e 	mul.w	r0, r0, lr
 801fac4:	fb02 f20e 	mul.w	r2, r2, lr
 801fac8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801facc:	0c39      	lsrs	r1, r7, #16
 801face:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fad2:	490f      	ldr	r1, [pc, #60]	@ (801fb10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801fad4:	fa5f fc8c 	uxtb.w	ip, ip
 801fad8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801fadc:	1c41      	adds	r1, r0, #1
 801fade:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801fae2:	1c51      	adds	r1, r2, #1
 801fae4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fae8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801faec:	00c0      	lsls	r0, r0, #3
 801faee:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801faf2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801faf6:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801fafa:	ea4c 0c00 	orr.w	ip, ip, r0
 801fafe:	ea47 0c0c 	orr.w	ip, r7, ip
 801fb02:	f8a8 c000 	strh.w	ip, [r8]
 801fb06:	e7b7      	b.n	801fa78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801fb08:	b01b      	add	sp, #108	@ 0x6c
 801fb0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb0e:	bf00      	nop
 801fb10:	fffff800 	.word	0xfffff800

0801fb14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801fb14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fb18:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801fb1c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801fb20:	2d00      	cmp	r5, #0
 801fb22:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801fb26:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801fb2a:	fb05 0e03 	mla	lr, r5, r3, r0
 801fb2e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801fb32:	f2c0 808c 	blt.w	801fc4e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801fb36:	45a9      	cmp	r9, r5
 801fb38:	f340 8089 	ble.w	801fc4e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801fb3c:	2800      	cmp	r0, #0
 801fb3e:	f2c0 8084 	blt.w	801fc4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801fb42:	4580      	cmp	r8, r0
 801fb44:	f340 8081 	ble.w	801fc4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801fb48:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801fb4c:	f01e 0f01 	tst.w	lr, #1
 801fb50:	5d16      	ldrb	r6, [r2, r4]
 801fb52:	bf0c      	ite	eq
 801fb54:	f006 060f 	andeq.w	r6, r6, #15
 801fb58:	1136      	asrne	r6, r6, #4
 801fb5a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801fb5e:	b2f6      	uxtb	r6, r6
 801fb60:	1c44      	adds	r4, r0, #1
 801fb62:	d477      	bmi.n	801fc54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801fb64:	45a0      	cmp	r8, r4
 801fb66:	dd75      	ble.n	801fc54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801fb68:	2f00      	cmp	r7, #0
 801fb6a:	d075      	beq.n	801fc58 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801fb6c:	f10e 0a01 	add.w	sl, lr, #1
 801fb70:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801fb74:	f01a 0f01 	tst.w	sl, #1
 801fb78:	5d14      	ldrb	r4, [r2, r4]
 801fb7a:	bf0c      	ite	eq
 801fb7c:	f004 040f 	andeq.w	r4, r4, #15
 801fb80:	1124      	asrne	r4, r4, #4
 801fb82:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801fb86:	b2e4      	uxtb	r4, r4
 801fb88:	3501      	adds	r5, #1
 801fb8a:	d469      	bmi.n	801fc60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801fb8c:	45a9      	cmp	r9, r5
 801fb8e:	dd67      	ble.n	801fc60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801fb90:	f1bc 0f00 	cmp.w	ip, #0
 801fb94:	d067      	beq.n	801fc66 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801fb96:	2800      	cmp	r0, #0
 801fb98:	db60      	blt.n	801fc5c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801fb9a:	4580      	cmp	r8, r0
 801fb9c:	dd5e      	ble.n	801fc5c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801fb9e:	eb03 090e 	add.w	r9, r3, lr
 801fba2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801fba6:	f019 0f01 	tst.w	r9, #1
 801fbaa:	5d55      	ldrb	r5, [r2, r5]
 801fbac:	bf0c      	ite	eq
 801fbae:	f005 050f 	andeq.w	r5, r5, #15
 801fbb2:	112d      	asrne	r5, r5, #4
 801fbb4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801fbb8:	b2ed      	uxtb	r5, r5
 801fbba:	3001      	adds	r0, #1
 801fbbc:	d456      	bmi.n	801fc6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801fbbe:	4580      	cmp	r8, r0
 801fbc0:	dd54      	ble.n	801fc6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801fbc2:	2f00      	cmp	r7, #0
 801fbc4:	d054      	beq.n	801fc70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801fbc6:	3301      	adds	r3, #1
 801fbc8:	449e      	add	lr, r3
 801fbca:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801fbce:	f01e 0f01 	tst.w	lr, #1
 801fbd2:	5cd0      	ldrb	r0, [r2, r3]
 801fbd4:	bf0c      	ite	eq
 801fbd6:	f000 000f 	andeq.w	r0, r0, #15
 801fbda:	1100      	asrne	r0, r0, #4
 801fbdc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fbe0:	b2c3      	uxtb	r3, r0
 801fbe2:	b2ba      	uxth	r2, r7
 801fbe4:	fa1f fc8c 	uxth.w	ip, ip
 801fbe8:	fb02 f00c 	mul.w	r0, r2, ip
 801fbec:	0112      	lsls	r2, r2, #4
 801fbee:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801fbf2:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801fbf6:	1a12      	subs	r2, r2, r0
 801fbf8:	fa1f fc8c 	uxth.w	ip, ip
 801fbfc:	b292      	uxth	r2, r2
 801fbfe:	eba7 070c 	sub.w	r7, r7, ip
 801fc02:	4362      	muls	r2, r4
 801fc04:	b2bf      	uxth	r7, r7
 801fc06:	fb06 2207 	mla	r2, r6, r7, r2
 801fc0a:	fb0c 2505 	mla	r5, ip, r5, r2
 801fc0e:	fb00 5303 	mla	r3, r0, r3, r5
 801fc12:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fc16:	b1b3      	cbz	r3, 801fc46 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801fc18:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801fc1c:	435a      	muls	r2, r3
 801fc1e:	1c53      	adds	r3, r2, #1
 801fc20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fc24:	4a2d      	ldr	r2, [pc, #180]	@ (801fcdc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801fc26:	121b      	asrs	r3, r3, #8
 801fc28:	6812      	ldr	r2, [r2, #0]
 801fc2a:	2bff      	cmp	r3, #255	@ 0xff
 801fc2c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801fc30:	d120      	bne.n	801fc74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801fc32:	0950      	lsrs	r0, r2, #5
 801fc34:	4b2a      	ldr	r3, [pc, #168]	@ (801fce0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801fc36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fc3a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fc3e:	4033      	ands	r3, r6
 801fc40:	4318      	orrs	r0, r3
 801fc42:	4302      	orrs	r2, r0
 801fc44:	800a      	strh	r2, [r1, #0]
 801fc46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fc4a:	2600      	movs	r6, #0
 801fc4c:	e788      	b.n	801fb60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801fc4e:	2400      	movs	r4, #0
 801fc50:	4626      	mov	r6, r4
 801fc52:	e799      	b.n	801fb88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801fc54:	2400      	movs	r4, #0
 801fc56:	e797      	b.n	801fb88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801fc58:	463c      	mov	r4, r7
 801fc5a:	e795      	b.n	801fb88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801fc5c:	2500      	movs	r5, #0
 801fc5e:	e7ac      	b.n	801fbba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801fc60:	2300      	movs	r3, #0
 801fc62:	461d      	mov	r5, r3
 801fc64:	e7bd      	b.n	801fbe2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fc66:	4663      	mov	r3, ip
 801fc68:	4665      	mov	r5, ip
 801fc6a:	e7ba      	b.n	801fbe2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fc6c:	2300      	movs	r3, #0
 801fc6e:	e7b8      	b.n	801fbe2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fc70:	463b      	mov	r3, r7
 801fc72:	e7b6      	b.n	801fbe2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fc74:	880d      	ldrh	r5, [r1, #0]
 801fc76:	b29f      	uxth	r7, r3
 801fc78:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801fc7c:	43db      	mvns	r3, r3
 801fc7e:	122c      	asrs	r4, r5, #8
 801fc80:	fb10 f007 	smulbb	r0, r0, r7
 801fc84:	b2db      	uxtb	r3, r3
 801fc86:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801fc8a:	b2f6      	uxtb	r6, r6
 801fc8c:	b2d2      	uxtb	r2, r2
 801fc8e:	fb04 0403 	mla	r4, r4, r3, r0
 801fc92:	10e8      	asrs	r0, r5, #3
 801fc94:	fb12 f207 	smulbb	r2, r2, r7
 801fc98:	00ed      	lsls	r5, r5, #3
 801fc9a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fc9e:	b2a4      	uxth	r4, r4
 801fca0:	fb16 f607 	smulbb	r6, r6, r7
 801fca4:	b2ed      	uxtb	r5, r5
 801fca6:	fb00 6603 	mla	r6, r0, r3, r6
 801fcaa:	fb05 2303 	mla	r3, r5, r3, r2
 801fcae:	b2b0      	uxth	r0, r6
 801fcb0:	b29a      	uxth	r2, r3
 801fcb2:	1c63      	adds	r3, r4, #1
 801fcb4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801fcb8:	1c53      	adds	r3, r2, #1
 801fcba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fcbe:	1c42      	adds	r2, r0, #1
 801fcc0:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801fcc4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fcc8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fccc:	0940      	lsrs	r0, r0, #5
 801fcce:	4323      	orrs	r3, r4
 801fcd0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fcd4:	4303      	orrs	r3, r0
 801fcd6:	800b      	strh	r3, [r1, #0]
 801fcd8:	e7b5      	b.n	801fc46 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801fcda:	bf00      	nop
 801fcdc:	20016c98 	.word	0x20016c98
 801fce0:	00fff800 	.word	0x00fff800

0801fce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fce8:	b097      	sub	sp, #92	@ 0x5c
 801fcea:	9214      	str	r2, [sp, #80]	@ 0x50
 801fcec:	9309      	str	r3, [sp, #36]	@ 0x24
 801fcee:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801fcf0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801fcf4:	9015      	str	r0, [sp, #84]	@ 0x54
 801fcf6:	910d      	str	r1, [sp, #52]	@ 0x34
 801fcf8:	6850      	ldr	r0, [r2, #4]
 801fcfa:	930f      	str	r3, [sp, #60]	@ 0x3c
 801fcfc:	6812      	ldr	r2, [r2, #0]
 801fcfe:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801fd02:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801fd06:	fb00 1303 	mla	r3, r0, r3, r1
 801fd0a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fd0e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fd10:	689b      	ldr	r3, [r3, #8]
 801fd12:	3301      	adds	r3, #1
 801fd14:	f023 0301 	bic.w	r3, r3, #1
 801fd18:	930a      	str	r3, [sp, #40]	@ 0x28
 801fd1a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fd1c:	681f      	ldr	r7, [r3, #0]
 801fd1e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fd20:	2b00      	cmp	r3, #0
 801fd22:	dc03      	bgt.n	801fd2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fd24:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801fd26:	2b00      	cmp	r3, #0
 801fd28:	f340 8289 	ble.w	802023e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801fd2c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fd2e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fd32:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fd36:	1e48      	subs	r0, r1, #1
 801fd38:	f102 3cff 	add.w	ip, r2, #4294967295
 801fd3c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fd3e:	2b00      	cmp	r3, #0
 801fd40:	f340 80c5 	ble.w	801fece <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801fd44:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fd48:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fd4c:	d406      	bmi.n	801fd5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fd4e:	4586      	cmp	lr, r0
 801fd50:	da04      	bge.n	801fd5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fd52:	2b00      	cmp	r3, #0
 801fd54:	db02      	blt.n	801fd5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fd56:	4563      	cmp	r3, ip
 801fd58:	f2c0 80ba 	blt.w	801fed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801fd5c:	f11e 0e01 	adds.w	lr, lr, #1
 801fd60:	f100 80ab 	bmi.w	801feba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801fd64:	4571      	cmp	r1, lr
 801fd66:	f2c0 80a8 	blt.w	801feba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801fd6a:	3301      	adds	r3, #1
 801fd6c:	f100 80a5 	bmi.w	801feba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801fd70:	429a      	cmp	r2, r3
 801fd72:	f2c0 80a2 	blt.w	801feba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801fd76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fd78:	46c8      	mov	r8, r9
 801fd7a:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801fd7e:	930e      	str	r3, [sp, #56]	@ 0x38
 801fd80:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fd82:	2b00      	cmp	r3, #0
 801fd84:	f340 80c4 	ble.w	801ff10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801fd88:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fd8a:	1430      	asrs	r0, r6, #16
 801fd8c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fd90:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fd94:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fd98:	1423      	asrs	r3, r4, #16
 801fd9a:	f100 814f 	bmi.w	802003c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801fd9e:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fda2:	455b      	cmp	r3, fp
 801fda4:	f280 814a 	bge.w	802003c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801fda8:	2800      	cmp	r0, #0
 801fdaa:	f2c0 8147 	blt.w	802003c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801fdae:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fdb2:	4558      	cmp	r0, fp
 801fdb4:	f280 8142 	bge.w	802003c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801fdb8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801fdba:	fb00 3305 	mla	r3, r0, r5, r3
 801fdbe:	0858      	lsrs	r0, r3, #1
 801fdc0:	07dd      	lsls	r5, r3, #31
 801fdc2:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fdc6:	bf54      	ite	pl
 801fdc8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fdcc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fdd0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fdd4:	fa5f fc8c 	uxtb.w	ip, ip
 801fdd8:	2a00      	cmp	r2, #0
 801fdda:	f000 80dd 	beq.w	801ff98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801fdde:	1c58      	adds	r0, r3, #1
 801fde0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fde4:	07c0      	lsls	r0, r0, #31
 801fde6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fdea:	bf54      	ite	pl
 801fdec:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fdf0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fdf4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fdf8:	fa5f f08e 	uxtb.w	r0, lr
 801fdfc:	9010      	str	r0, [sp, #64]	@ 0x40
 801fdfe:	b1d9      	cbz	r1, 801fe38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801fe00:	4453      	add	r3, sl
 801fe02:	0858      	lsrs	r0, r3, #1
 801fe04:	07dd      	lsls	r5, r3, #31
 801fe06:	f103 0301 	add.w	r3, r3, #1
 801fe0a:	5c38      	ldrb	r0, [r7, r0]
 801fe0c:	bf54      	ite	pl
 801fe0e:	f000 000f 	andpl.w	r0, r0, #15
 801fe12:	1100      	asrmi	r0, r0, #4
 801fe14:	07dd      	lsls	r5, r3, #31
 801fe16:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fe1a:	b2c0      	uxtb	r0, r0
 801fe1c:	900b      	str	r0, [sp, #44]	@ 0x2c
 801fe1e:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801fe22:	f817 e000 	ldrb.w	lr, [r7, r0]
 801fe26:	bf54      	ite	pl
 801fe28:	f00e 030f 	andpl.w	r3, lr, #15
 801fe2c:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801fe30:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fe34:	b2db      	uxtb	r3, r3
 801fe36:	9311      	str	r3, [sp, #68]	@ 0x44
 801fe38:	b292      	uxth	r2, r2
 801fe3a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fe3c:	b289      	uxth	r1, r1
 801fe3e:	fb02 f301 	mul.w	r3, r2, r1
 801fe42:	0112      	lsls	r2, r2, #4
 801fe44:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fe48:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801fe4c:	1ad2      	subs	r2, r2, r3
 801fe4e:	b289      	uxth	r1, r1
 801fe50:	b292      	uxth	r2, r2
 801fe52:	1a40      	subs	r0, r0, r1
 801fe54:	436a      	muls	r2, r5
 801fe56:	b280      	uxth	r0, r0
 801fe58:	fb0c 2c00 	mla	ip, ip, r0, r2
 801fe5c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801fe5e:	fb01 c102 	mla	r1, r1, r2, ip
 801fe62:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801fe64:	fb03 1302 	mla	r3, r3, r2, r1
 801fe68:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fe6c:	b1db      	cbz	r3, 801fea6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801fe6e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fe70:	4353      	muls	r3, r2
 801fe72:	1c5a      	adds	r2, r3, #1
 801fe74:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fe78:	4ac6      	ldr	r2, [pc, #792]	@ (8020194 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801fe7a:	121b      	asrs	r3, r3, #8
 801fe7c:	6812      	ldr	r2, [r2, #0]
 801fe7e:	2bff      	cmp	r3, #255	@ 0xff
 801fe80:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fe84:	f040 8099 	bne.w	801ffba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801fe88:	0953      	lsrs	r3, r2, #5
 801fe8a:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801fe8e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fe92:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fe96:	f02c 0c07 	bic.w	ip, ip, #7
 801fe9a:	ea43 0c0c 	orr.w	ip, r3, ip
 801fe9e:	ea4c 0202 	orr.w	r2, ip, r2
 801fea2:	f8a8 2000 	strh.w	r2, [r8]
 801fea6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fea8:	f108 0802 	add.w	r8, r8, #2
 801feac:	441c      	add	r4, r3
 801feae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801feb0:	441e      	add	r6, r3
 801feb2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801feb4:	3b01      	subs	r3, #1
 801feb6:	930e      	str	r3, [sp, #56]	@ 0x38
 801feb8:	e762      	b.n	801fd80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801feba:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801febc:	f109 0902 	add.w	r9, r9, #2
 801fec0:	441c      	add	r4, r3
 801fec2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fec4:	441e      	add	r6, r3
 801fec6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fec8:	3b01      	subs	r3, #1
 801feca:	9309      	str	r3, [sp, #36]	@ 0x24
 801fecc:	e736      	b.n	801fd3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fece:	d024      	beq.n	801ff1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801fed0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fed2:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801fed4:	3b01      	subs	r3, #1
 801fed6:	fb00 4003 	mla	r0, r0, r3, r4
 801feda:	1400      	asrs	r0, r0, #16
 801fedc:	f53f af4b 	bmi.w	801fd76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fee0:	3901      	subs	r1, #1
 801fee2:	4288      	cmp	r0, r1
 801fee4:	f6bf af47 	bge.w	801fd76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fee8:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801feea:	fb01 6303 	mla	r3, r1, r3, r6
 801feee:	141b      	asrs	r3, r3, #16
 801fef0:	f53f af41 	bmi.w	801fd76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fef4:	3a01      	subs	r2, #1
 801fef6:	4293      	cmp	r3, r2
 801fef8:	f6bf af3d 	bge.w	801fd76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fefc:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801ff00:	46c8      	mov	r8, r9
 801ff02:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801ff06:	930e      	str	r3, [sp, #56]	@ 0x38
 801ff08:	f1bb 0f00 	cmp.w	fp, #0
 801ff0c:	f300 80b7 	bgt.w	802007e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 801ff10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ff12:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ff16:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ff1a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ff1c:	2b00      	cmp	r3, #0
 801ff1e:	f340 818e 	ble.w	802023e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801ff22:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ff26:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ff28:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ff2c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ff30:	eef0 6a62 	vmov.f32	s13, s5
 801ff34:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ff38:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ff3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff40:	ee16 4a90 	vmov	r4, s13
 801ff44:	eef0 6a43 	vmov.f32	s13, s6
 801ff48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff4c:	ee16 6a90 	vmov	r6, s13
 801ff50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ff54:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ff58:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ff5c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ff60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ff64:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ff68:	ee12 2a90 	vmov	r2, s5
 801ff6c:	eef0 2a47 	vmov.f32	s5, s14
 801ff70:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff74:	ee13 2a10 	vmov	r2, s6
 801ff78:	9323      	str	r3, [sp, #140]	@ 0x8c
 801ff7a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ff7c:	eeb0 3a67 	vmov.f32	s6, s15
 801ff80:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff84:	9324      	str	r3, [sp, #144]	@ 0x90
 801ff86:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ff88:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ff8a:	3b01      	subs	r3, #1
 801ff8c:	930d      	str	r3, [sp, #52]	@ 0x34
 801ff8e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ff90:	bf08      	it	eq
 801ff92:	4613      	moveq	r3, r2
 801ff94:	9309      	str	r3, [sp, #36]	@ 0x24
 801ff96:	e6c2      	b.n	801fd1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ff98:	2900      	cmp	r1, #0
 801ff9a:	f43f af4d 	beq.w	801fe38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801ff9e:	eb0a 0003 	add.w	r0, sl, r3
 801ffa2:	0843      	lsrs	r3, r0, #1
 801ffa4:	07c0      	lsls	r0, r0, #31
 801ffa6:	5cfb      	ldrb	r3, [r7, r3]
 801ffa8:	bf54      	ite	pl
 801ffaa:	f003 030f 	andpl.w	r3, r3, #15
 801ffae:	111b      	asrmi	r3, r3, #4
 801ffb0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ffb4:	b2db      	uxtb	r3, r3
 801ffb6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ffb8:	e73e      	b.n	801fe38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801ffba:	f8b8 e000 	ldrh.w	lr, [r8]
 801ffbe:	fa1f fb83 	uxth.w	fp, r3
 801ffc2:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ffc6:	43db      	mvns	r3, r3
 801ffc8:	ea4f 202e 	mov.w	r0, lr, asr #8
 801ffcc:	fb11 f10b 	smulbb	r1, r1, fp
 801ffd0:	b2db      	uxtb	r3, r3
 801ffd2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ffd6:	fa5f fc8c 	uxtb.w	ip, ip
 801ffda:	b2d2      	uxtb	r2, r2
 801ffdc:	fb00 1003 	mla	r0, r0, r3, r1
 801ffe0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801ffe4:	fb1c fc0b 	smulbb	ip, ip, fp
 801ffe8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ffec:	b280      	uxth	r0, r0
 801ffee:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801fff2:	fb12 fb0b 	smulbb	fp, r2, fp
 801fff6:	fa5f fe8e 	uxtb.w	lr, lr
 801fffa:	fb01 cc03 	mla	ip, r1, r3, ip
 801fffe:	fb0e bb03 	mla	fp, lr, r3, fp
 8020002:	1c43      	adds	r3, r0, #1
 8020004:	fa1f fc8c 	uxth.w	ip, ip
 8020008:	fa1f fb8b 	uxth.w	fp, fp
 802000c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020010:	f10c 0101 	add.w	r1, ip, #1
 8020014:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8020018:	f10b 0001 	add.w	r0, fp, #1
 802001c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020020:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8020024:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020028:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802002c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8020030:	4318      	orrs	r0, r3
 8020032:	ea40 000c 	orr.w	r0, r0, ip
 8020036:	f8a8 0000 	strh.w	r0, [r8]
 802003a:	e734      	b.n	801fea6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802003c:	f113 0b01 	adds.w	fp, r3, #1
 8020040:	f53f af31 	bmi.w	801fea6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8020044:	45dc      	cmp	ip, fp
 8020046:	f6ff af2e 	blt.w	801fea6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802004a:	f110 0b01 	adds.w	fp, r0, #1
 802004e:	f53f af2a 	bmi.w	801fea6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8020052:	45de      	cmp	lr, fp
 8020054:	f6ff af27 	blt.w	801fea6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8020058:	9302      	str	r3, [sp, #8]
 802005a:	fa0f f38e 	sxth.w	r3, lr
 802005e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8020060:	9301      	str	r3, [sp, #4]
 8020062:	fa0f f38c 	sxth.w	r3, ip
 8020066:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802006a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802006e:	9300      	str	r3, [sp, #0]
 8020070:	463a      	mov	r2, r7
 8020072:	4653      	mov	r3, sl
 8020074:	4641      	mov	r1, r8
 8020076:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8020078:	f7ff fd4c 	bl	801fb14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802007c:	e713      	b.n	801fea6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802007e:	1422      	asrs	r2, r4, #16
 8020080:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8020082:	1433      	asrs	r3, r6, #16
 8020084:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8020088:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802008c:	fb05 2303 	mla	r3, r5, r3, r2
 8020090:	085a      	lsrs	r2, r3, #1
 8020092:	07dd      	lsls	r5, r3, #31
 8020094:	5cba      	ldrb	r2, [r7, r2]
 8020096:	bf54      	ite	pl
 8020098:	f002 020f 	andpl.w	r2, r2, #15
 802009c:	1112      	asrmi	r2, r2, #4
 802009e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80200a2:	b2d2      	uxtb	r2, r2
 80200a4:	2900      	cmp	r1, #0
 80200a6:	d077      	beq.n	8020198 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80200a8:	f103 0e01 	add.w	lr, r3, #1
 80200ac:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80200b0:	f01e 0f01 	tst.w	lr, #1
 80200b4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80200b8:	bf0c      	ite	eq
 80200ba:	f00c 0c0f 	andeq.w	ip, ip, #15
 80200be:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80200c2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80200c6:	fa5f f58c 	uxtb.w	r5, ip
 80200ca:	9512      	str	r5, [sp, #72]	@ 0x48
 80200cc:	b308      	cbz	r0, 8020112 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 80200ce:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80200d0:	442b      	add	r3, r5
 80200d2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80200d6:	07dd      	lsls	r5, r3, #31
 80200d8:	f103 0301 	add.w	r3, r3, #1
 80200dc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80200e0:	bf54      	ite	pl
 80200e2:	f00c 0c0f 	andpl.w	ip, ip, #15
 80200e6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80200ea:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80200ee:	fa5f f58c 	uxtb.w	r5, ip
 80200f2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80200f6:	950c      	str	r5, [sp, #48]	@ 0x30
 80200f8:	07dd      	lsls	r5, r3, #31
 80200fa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80200fe:	bf54      	ite	pl
 8020100:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020104:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020108:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802010c:	fa5f f38c 	uxtb.w	r3, ip
 8020110:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020112:	b289      	uxth	r1, r1
 8020114:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020116:	b280      	uxth	r0, r0
 8020118:	fb01 f300 	mul.w	r3, r1, r0
 802011c:	0109      	lsls	r1, r1, #4
 802011e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8020122:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8020126:	1ac9      	subs	r1, r1, r3
 8020128:	b280      	uxth	r0, r0
 802012a:	b289      	uxth	r1, r1
 802012c:	ebac 0c00 	sub.w	ip, ip, r0
 8020130:	4369      	muls	r1, r5
 8020132:	fa1f fc8c 	uxth.w	ip, ip
 8020136:	fb02 120c 	mla	r2, r2, ip, r1
 802013a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802013c:	fb00 2001 	mla	r0, r0, r1, r2
 8020140:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020142:	fb03 0302 	mla	r3, r3, r2, r0
 8020146:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802014a:	b1d3      	cbz	r3, 8020182 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 802014c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802014e:	4353      	muls	r3, r2
 8020150:	1c5a      	adds	r2, r3, #1
 8020152:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8020156:	4a0f      	ldr	r2, [pc, #60]	@ (8020194 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8020158:	121b      	asrs	r3, r3, #8
 802015a:	6812      	ldr	r2, [r2, #0]
 802015c:	2bff      	cmp	r3, #255	@ 0xff
 802015e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8020162:	d12d      	bne.n	80201c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 8020164:	0953      	lsrs	r3, r2, #5
 8020166:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802016a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802016e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020172:	f02c 0c07 	bic.w	ip, ip, #7
 8020176:	ea43 0c0c 	orr.w	ip, r3, ip
 802017a:	ea4c 0202 	orr.w	r2, ip, r2
 802017e:	f8a8 2000 	strh.w	r2, [r8]
 8020182:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8020184:	f108 0802 	add.w	r8, r8, #2
 8020188:	f10b 3bff 	add.w	fp, fp, #4294967295
 802018c:	441c      	add	r4, r3
 802018e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020190:	441e      	add	r6, r3
 8020192:	e6b9      	b.n	801ff08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8020194:	20016c98 	.word	0x20016c98
 8020198:	2800      	cmp	r0, #0
 802019a:	d0ba      	beq.n	8020112 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 802019c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802019e:	442b      	add	r3, r5
 80201a0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80201a4:	07db      	lsls	r3, r3, #31
 80201a6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80201aa:	bf54      	ite	pl
 80201ac:	f00c 0c0f 	andpl.w	ip, ip, #15
 80201b0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80201b4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80201b8:	fa5f f38c 	uxtb.w	r3, ip
 80201bc:	930c      	str	r3, [sp, #48]	@ 0x30
 80201be:	e7a8      	b.n	8020112 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 80201c0:	f8b8 e000 	ldrh.w	lr, [r8]
 80201c4:	fa1f fa83 	uxth.w	sl, r3
 80201c8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80201cc:	43db      	mvns	r3, r3
 80201ce:	ea4f 202e 	mov.w	r0, lr, asr #8
 80201d2:	fb11 f10a 	smulbb	r1, r1, sl
 80201d6:	b2db      	uxtb	r3, r3
 80201d8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80201dc:	b2d2      	uxtb	r2, r2
 80201de:	fa5f fc8c 	uxtb.w	ip, ip
 80201e2:	fb00 1003 	mla	r0, r0, r3, r1
 80201e6:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80201ea:	fb12 f20a 	smulbb	r2, r2, sl
 80201ee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80201f2:	b280      	uxth	r0, r0
 80201f4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80201f8:	fb1c fc0a 	smulbb	ip, ip, sl
 80201fc:	fa5f fe8e 	uxtb.w	lr, lr
 8020200:	fb0e 2203 	mla	r2, lr, r3, r2
 8020204:	fb01 cc03 	mla	ip, r1, r3, ip
 8020208:	1c43      	adds	r3, r0, #1
 802020a:	b292      	uxth	r2, r2
 802020c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020210:	1c51      	adds	r1, r2, #1
 8020212:	fa1f fc8c 	uxth.w	ip, ip
 8020216:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802021a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802021e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020222:	4308      	orrs	r0, r1
 8020224:	f10c 0101 	add.w	r1, ip, #1
 8020228:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802022c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020230:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8020234:	ea40 000c 	orr.w	r0, r0, ip
 8020238:	f8a8 0000 	strh.w	r0, [r8]
 802023c:	e7a1      	b.n	8020182 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 802023e:	b017      	add	sp, #92	@ 0x5c
 8020240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020244 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8020244:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020248:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802024c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8020250:	2d00      	cmp	r5, #0
 8020252:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8020256:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802025a:	fb05 0e03 	mla	lr, r5, r3, r0
 802025e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8020262:	f2c0 80b0 	blt.w	80203c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8020266:	45a9      	cmp	r9, r5
 8020268:	f340 80ad 	ble.w	80203c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802026c:	2800      	cmp	r0, #0
 802026e:	f2c0 80a8 	blt.w	80203c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8020272:	4580      	cmp	r8, r0
 8020274:	f340 80a5 	ble.w	80203c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8020278:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802027c:	f01e 0f01 	tst.w	lr, #1
 8020280:	5d16      	ldrb	r6, [r2, r4]
 8020282:	bf0c      	ite	eq
 8020284:	f006 060f 	andeq.w	r6, r6, #15
 8020288:	1136      	asrne	r6, r6, #4
 802028a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802028e:	b2f6      	uxtb	r6, r6
 8020290:	1c44      	adds	r4, r0, #1
 8020292:	f100 809b 	bmi.w	80203cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8020296:	45a0      	cmp	r8, r4
 8020298:	f340 8098 	ble.w	80203cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802029c:	2f00      	cmp	r7, #0
 802029e:	f000 8097 	beq.w	80203d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80202a2:	f10e 0a01 	add.w	sl, lr, #1
 80202a6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80202aa:	f01a 0f01 	tst.w	sl, #1
 80202ae:	5d14      	ldrb	r4, [r2, r4]
 80202b0:	bf0c      	ite	eq
 80202b2:	f004 040f 	andeq.w	r4, r4, #15
 80202b6:	1124      	asrne	r4, r4, #4
 80202b8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80202bc:	b2e4      	uxtb	r4, r4
 80202be:	3501      	adds	r5, #1
 80202c0:	f100 808a 	bmi.w	80203d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80202c4:	45a9      	cmp	r9, r5
 80202c6:	f340 8087 	ble.w	80203d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80202ca:	f1bc 0f00 	cmp.w	ip, #0
 80202ce:	f000 8086 	beq.w	80203de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80202d2:	2800      	cmp	r0, #0
 80202d4:	db7e      	blt.n	80203d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80202d6:	4580      	cmp	r8, r0
 80202d8:	dd7c      	ble.n	80203d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80202da:	eb03 090e 	add.w	r9, r3, lr
 80202de:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80202e2:	f019 0f01 	tst.w	r9, #1
 80202e6:	5d55      	ldrb	r5, [r2, r5]
 80202e8:	bf0c      	ite	eq
 80202ea:	f005 050f 	andeq.w	r5, r5, #15
 80202ee:	112d      	asrne	r5, r5, #4
 80202f0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80202f4:	b2ed      	uxtb	r5, r5
 80202f6:	3001      	adds	r0, #1
 80202f8:	d474      	bmi.n	80203e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80202fa:	4580      	cmp	r8, r0
 80202fc:	dd72      	ble.n	80203e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80202fe:	2f00      	cmp	r7, #0
 8020300:	d072      	beq.n	80203e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8020302:	3301      	adds	r3, #1
 8020304:	449e      	add	lr, r3
 8020306:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802030a:	f01e 0f01 	tst.w	lr, #1
 802030e:	5cd0      	ldrb	r0, [r2, r3]
 8020310:	bf0c      	ite	eq
 8020312:	f000 000f 	andeq.w	r0, r0, #15
 8020316:	1100      	asrne	r0, r0, #4
 8020318:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802031c:	b2c3      	uxtb	r3, r0
 802031e:	b2ba      	uxth	r2, r7
 8020320:	fa1f fc8c 	uxth.w	ip, ip
 8020324:	fb02 f00c 	mul.w	r0, r2, ip
 8020328:	0112      	lsls	r2, r2, #4
 802032a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802032e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8020332:	1a12      	subs	r2, r2, r0
 8020334:	fa1f fc8c 	uxth.w	ip, ip
 8020338:	b292      	uxth	r2, r2
 802033a:	eba7 070c 	sub.w	r7, r7, ip
 802033e:	4362      	muls	r2, r4
 8020340:	b2bf      	uxth	r7, r7
 8020342:	fb06 2207 	mla	r2, r6, r7, r2
 8020346:	fb0c 2505 	mla	r5, ip, r5, r2
 802034a:	fb00 5303 	mla	r3, r0, r3, r5
 802034e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020352:	b3a3      	cbz	r3, 80203be <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8020354:	4a25      	ldr	r2, [pc, #148]	@ (80203ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8020356:	880e      	ldrh	r6, [r1, #0]
 8020358:	6815      	ldr	r5, [r2, #0]
 802035a:	b29a      	uxth	r2, r3
 802035c:	1234      	asrs	r4, r6, #8
 802035e:	43db      	mvns	r3, r3
 8020360:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8020364:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8020368:	b2db      	uxtb	r3, r3
 802036a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802036e:	fb10 f002 	smulbb	r0, r0, r2
 8020372:	b2ed      	uxtb	r5, r5
 8020374:	fb17 f702 	smulbb	r7, r7, r2
 8020378:	fb04 0403 	mla	r4, r4, r3, r0
 802037c:	10f0      	asrs	r0, r6, #3
 802037e:	fb15 f202 	smulbb	r2, r5, r2
 8020382:	00f6      	lsls	r6, r6, #3
 8020384:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020388:	b2a4      	uxth	r4, r4
 802038a:	b2f6      	uxtb	r6, r6
 802038c:	fb00 7003 	mla	r0, r0, r3, r7
 8020390:	fb06 2303 	mla	r3, r6, r3, r2
 8020394:	b280      	uxth	r0, r0
 8020396:	b29a      	uxth	r2, r3
 8020398:	1c63      	adds	r3, r4, #1
 802039a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802039e:	1c53      	adds	r3, r2, #1
 80203a0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80203a4:	1c42      	adds	r2, r0, #1
 80203a6:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80203aa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80203ae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80203b2:	0940      	lsrs	r0, r0, #5
 80203b4:	4323      	orrs	r3, r4
 80203b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80203ba:	4303      	orrs	r3, r0
 80203bc:	800b      	strh	r3, [r1, #0]
 80203be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80203c2:	2600      	movs	r6, #0
 80203c4:	e764      	b.n	8020290 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80203c6:	2400      	movs	r4, #0
 80203c8:	4626      	mov	r6, r4
 80203ca:	e778      	b.n	80202be <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80203cc:	2400      	movs	r4, #0
 80203ce:	e776      	b.n	80202be <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80203d0:	463c      	mov	r4, r7
 80203d2:	e774      	b.n	80202be <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80203d4:	2500      	movs	r5, #0
 80203d6:	e78e      	b.n	80202f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80203d8:	2300      	movs	r3, #0
 80203da:	461d      	mov	r5, r3
 80203dc:	e79f      	b.n	802031e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80203de:	4663      	mov	r3, ip
 80203e0:	4665      	mov	r5, ip
 80203e2:	e79c      	b.n	802031e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80203e4:	2300      	movs	r3, #0
 80203e6:	e79a      	b.n	802031e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80203e8:	463b      	mov	r3, r7
 80203ea:	e798      	b.n	802031e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80203ec:	20016c98 	.word	0x20016c98

080203f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80203f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80203f4:	b093      	sub	sp, #76	@ 0x4c
 80203f6:	461d      	mov	r5, r3
 80203f8:	920c      	str	r2, [sp, #48]	@ 0x30
 80203fa:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80203fc:	9011      	str	r0, [sp, #68]	@ 0x44
 80203fe:	9107      	str	r1, [sp, #28]
 8020400:	6850      	ldr	r0, [r2, #4]
 8020402:	6812      	ldr	r2, [r2, #0]
 8020404:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8020408:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802040c:	fb00 1303 	mla	r3, r0, r3, r1
 8020410:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020414:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020416:	689b      	ldr	r3, [r3, #8]
 8020418:	3301      	adds	r3, #1
 802041a:	f023 0301 	bic.w	r3, r3, #1
 802041e:	9306      	str	r3, [sp, #24]
 8020420:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020422:	681f      	ldr	r7, [r3, #0]
 8020424:	9b07      	ldr	r3, [sp, #28]
 8020426:	2b00      	cmp	r3, #0
 8020428:	dc03      	bgt.n	8020432 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802042a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802042c:	2b00      	cmp	r3, #0
 802042e:	f340 8267 	ble.w	8020900 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8020432:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020434:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020438:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802043c:	1e48      	subs	r0, r1, #1
 802043e:	f102 3cff 	add.w	ip, r2, #4294967295
 8020442:	2d00      	cmp	r5, #0
 8020444:	f340 80b7 	ble.w	80205b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020448:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802044c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020450:	d406      	bmi.n	8020460 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020452:	4586      	cmp	lr, r0
 8020454:	da04      	bge.n	8020460 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020456:	2b00      	cmp	r3, #0
 8020458:	db02      	blt.n	8020460 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802045a:	4563      	cmp	r3, ip
 802045c:	f2c0 80ac 	blt.w	80205b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8020460:	f11e 0e01 	adds.w	lr, lr, #1
 8020464:	f100 809f 	bmi.w	80205a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8020468:	4571      	cmp	r1, lr
 802046a:	f2c0 809c 	blt.w	80205a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 802046e:	3301      	adds	r3, #1
 8020470:	f100 8099 	bmi.w	80205a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8020474:	429a      	cmp	r2, r3
 8020476:	f2c0 8096 	blt.w	80205a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 802047a:	46c8      	mov	r8, r9
 802047c:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8020480:	9509      	str	r5, [sp, #36]	@ 0x24
 8020482:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020484:	2b00      	cmp	r3, #0
 8020486:	f340 80b5 	ble.w	80205f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802048a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802048e:	1430      	asrs	r0, r6, #16
 8020490:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020494:	9308      	str	r3, [sp, #32]
 8020496:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020498:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802049c:	1423      	asrs	r3, r4, #16
 802049e:	f100 813f 	bmi.w	8020720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80204a2:	f10c 3bff 	add.w	fp, ip, #4294967295
 80204a6:	455b      	cmp	r3, fp
 80204a8:	f280 813a 	bge.w	8020720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80204ac:	2800      	cmp	r0, #0
 80204ae:	f2c0 8137 	blt.w	8020720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80204b2:	f10e 3bff 	add.w	fp, lr, #4294967295
 80204b6:	4558      	cmp	r0, fp
 80204b8:	f280 8132 	bge.w	8020720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80204bc:	9a06      	ldr	r2, [sp, #24]
 80204be:	fb00 3302 	mla	r3, r0, r2, r3
 80204c2:	0858      	lsrs	r0, r3, #1
 80204c4:	07da      	lsls	r2, r3, #31
 80204c6:	9a08      	ldr	r2, [sp, #32]
 80204c8:	f817 c000 	ldrb.w	ip, [r7, r0]
 80204cc:	bf54      	ite	pl
 80204ce:	f00c 0c0f 	andpl.w	ip, ip, #15
 80204d2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80204d6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80204da:	fa5f fc8c 	uxtb.w	ip, ip
 80204de:	2a00      	cmp	r2, #0
 80204e0:	f000 80cc 	beq.w	802067c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80204e4:	1c58      	adds	r0, r3, #1
 80204e6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80204ea:	07c0      	lsls	r0, r0, #31
 80204ec:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80204f0:	bf54      	ite	pl
 80204f2:	f00e 0e0f 	andpl.w	lr, lr, #15
 80204f6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80204fa:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80204fe:	fa5f fe8e 	uxtb.w	lr, lr
 8020502:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8020506:	b1b9      	cbz	r1, 8020538 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8020508:	4453      	add	r3, sl
 802050a:	0858      	lsrs	r0, r3, #1
 802050c:	07da      	lsls	r2, r3, #31
 802050e:	5c38      	ldrb	r0, [r7, r0]
 8020510:	bf54      	ite	pl
 8020512:	f000 000f 	andpl.w	r0, r0, #15
 8020516:	1100      	asrmi	r0, r0, #4
 8020518:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802051c:	b2c0      	uxtb	r0, r0
 802051e:	900a      	str	r0, [sp, #40]	@ 0x28
 8020520:	1c58      	adds	r0, r3, #1
 8020522:	0843      	lsrs	r3, r0, #1
 8020524:	07c2      	lsls	r2, r0, #31
 8020526:	5cfb      	ldrb	r3, [r7, r3]
 8020528:	bf54      	ite	pl
 802052a:	f003 030f 	andpl.w	r3, r3, #15
 802052e:	111b      	asrmi	r3, r3, #4
 8020530:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020534:	b2db      	uxtb	r3, r3
 8020536:	930e      	str	r3, [sp, #56]	@ 0x38
 8020538:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802053c:	b289      	uxth	r1, r1
 802053e:	fb02 f301 	mul.w	r3, r2, r1
 8020542:	0112      	lsls	r2, r2, #4
 8020544:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8020548:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802054c:	1ad2      	subs	r2, r2, r3
 802054e:	b289      	uxth	r1, r1
 8020550:	b292      	uxth	r2, r2
 8020552:	1a40      	subs	r0, r0, r1
 8020554:	fa1f fe80 	uxth.w	lr, r0
 8020558:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802055a:	4342      	muls	r2, r0
 802055c:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8020560:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020562:	fb01 c102 	mla	r1, r1, r2, ip
 8020566:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8020568:	fb03 1302 	mla	r3, r3, r2, r1
 802056c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020570:	2bff      	cmp	r3, #255	@ 0xff
 8020572:	f040 8094 	bne.w	802069e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8020576:	4bbf      	ldr	r3, [pc, #764]	@ (8020874 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020578:	681a      	ldr	r2, [r3, #0]
 802057a:	4bbf      	ldr	r3, [pc, #764]	@ (8020878 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802057c:	0951      	lsrs	r1, r2, #5
 802057e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020582:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020586:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802058a:	430b      	orrs	r3, r1
 802058c:	4313      	orrs	r3, r2
 802058e:	f8a8 3000 	strh.w	r3, [r8]
 8020592:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020594:	f108 0802 	add.w	r8, r8, #2
 8020598:	441c      	add	r4, r3
 802059a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802059c:	441e      	add	r6, r3
 802059e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80205a0:	3b01      	subs	r3, #1
 80205a2:	9309      	str	r3, [sp, #36]	@ 0x24
 80205a4:	e76d      	b.n	8020482 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80205a6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80205a8:	3d01      	subs	r5, #1
 80205aa:	f109 0902 	add.w	r9, r9, #2
 80205ae:	441c      	add	r4, r3
 80205b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80205b2:	441e      	add	r6, r3
 80205b4:	e745      	b.n	8020442 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80205b6:	d021      	beq.n	80205fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 80205b8:	1e6b      	subs	r3, r5, #1
 80205ba:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80205bc:	fb00 4003 	mla	r0, r0, r3, r4
 80205c0:	1400      	asrs	r0, r0, #16
 80205c2:	f53f af5a 	bmi.w	802047a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80205c6:	3901      	subs	r1, #1
 80205c8:	4288      	cmp	r0, r1
 80205ca:	f6bf af56 	bge.w	802047a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80205ce:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80205d0:	fb01 6303 	mla	r3, r1, r3, r6
 80205d4:	141b      	asrs	r3, r3, #16
 80205d6:	f53f af50 	bmi.w	802047a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80205da:	3a01      	subs	r2, #1
 80205dc:	4293      	cmp	r3, r2
 80205de:	f6bf af4c 	bge.w	802047a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80205e2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80205e6:	46a8      	mov	r8, r5
 80205e8:	46ce      	mov	lr, r9
 80205ea:	9308      	str	r3, [sp, #32]
 80205ec:	f1b8 0f00 	cmp.w	r8, #0
 80205f0:	f300 80b6 	bgt.w	8020760 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80205f4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80205f8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80205fc:	9b07      	ldr	r3, [sp, #28]
 80205fe:	2b00      	cmp	r3, #0
 8020600:	f340 817e 	ble.w	8020900 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8020604:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020608:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802060a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802060e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020612:	eef0 6a62 	vmov.f32	s13, s5
 8020616:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802061a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802061e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020622:	ee16 4a90 	vmov	r4, s13
 8020626:	eef0 6a43 	vmov.f32	s13, s6
 802062a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802062e:	ee16 6a90 	vmov	r6, s13
 8020632:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020636:	ee61 7a27 	vmul.f32	s15, s2, s15
 802063a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802063e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020642:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020646:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802064a:	ee12 2a90 	vmov	r2, s5
 802064e:	eef0 2a47 	vmov.f32	s5, s14
 8020652:	fb92 f3f3 	sdiv	r3, r2, r3
 8020656:	ee13 2a10 	vmov	r2, s6
 802065a:	931f      	str	r3, [sp, #124]	@ 0x7c
 802065c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802065e:	eeb0 3a67 	vmov.f32	s6, s15
 8020662:	fb92 f3f3 	sdiv	r3, r2, r3
 8020666:	9320      	str	r3, [sp, #128]	@ 0x80
 8020668:	9b07      	ldr	r3, [sp, #28]
 802066a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802066c:	3b01      	subs	r3, #1
 802066e:	9307      	str	r3, [sp, #28]
 8020670:	bf08      	it	eq
 8020672:	4615      	moveq	r5, r2
 8020674:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020676:	bf18      	it	ne
 8020678:	461d      	movne	r5, r3
 802067a:	e6d3      	b.n	8020424 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802067c:	2900      	cmp	r1, #0
 802067e:	f43f af5b 	beq.w	8020538 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8020682:	eb0a 0003 	add.w	r0, sl, r3
 8020686:	0843      	lsrs	r3, r0, #1
 8020688:	07c0      	lsls	r0, r0, #31
 802068a:	5cfb      	ldrb	r3, [r7, r3]
 802068c:	bf54      	ite	pl
 802068e:	f003 030f 	andpl.w	r3, r3, #15
 8020692:	111b      	asrmi	r3, r3, #4
 8020694:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020698:	b2db      	uxtb	r3, r3
 802069a:	930a      	str	r3, [sp, #40]	@ 0x28
 802069c:	e74c      	b.n	8020538 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 802069e:	2b00      	cmp	r3, #0
 80206a0:	f43f af77 	beq.w	8020592 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 80206a4:	4a73      	ldr	r2, [pc, #460]	@ (8020874 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80206a6:	fa1f fe83 	uxth.w	lr, r3
 80206aa:	f8b8 c000 	ldrh.w	ip, [r8]
 80206ae:	43db      	mvns	r3, r3
 80206b0:	6810      	ldr	r0, [r2, #0]
 80206b2:	ea4f 212c 	mov.w	r1, ip, asr #8
 80206b6:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80206ba:	b2db      	uxtb	r3, r3
 80206bc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80206c0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80206c4:	fb12 f20e 	smulbb	r2, r2, lr
 80206c8:	b2c0      	uxtb	r0, r0
 80206ca:	fb1b fb0e 	smulbb	fp, fp, lr
 80206ce:	fb01 2103 	mla	r1, r1, r3, r2
 80206d2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80206d6:	fb10 fe0e 	smulbb	lr, r0, lr
 80206da:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80206de:	b289      	uxth	r1, r1
 80206e0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80206e4:	fa5f fc8c 	uxtb.w	ip, ip
 80206e8:	fb02 b203 	mla	r2, r2, r3, fp
 80206ec:	1c48      	adds	r0, r1, #1
 80206ee:	fb0c e303 	mla	r3, ip, r3, lr
 80206f2:	b292      	uxth	r2, r2
 80206f4:	b29b      	uxth	r3, r3
 80206f6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80206fa:	f102 0b01 	add.w	fp, r2, #1
 80206fe:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8020702:	1c59      	adds	r1, r3, #1
 8020704:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020708:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802070c:	0952      	lsrs	r2, r2, #5
 802070e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020712:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020716:	4301      	orrs	r1, r0
 8020718:	4311      	orrs	r1, r2
 802071a:	f8a8 1000 	strh.w	r1, [r8]
 802071e:	e738      	b.n	8020592 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020720:	f113 0b01 	adds.w	fp, r3, #1
 8020724:	f53f af35 	bmi.w	8020592 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020728:	45dc      	cmp	ip, fp
 802072a:	f6ff af32 	blt.w	8020592 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802072e:	f110 0b01 	adds.w	fp, r0, #1
 8020732:	f53f af2e 	bmi.w	8020592 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020736:	45de      	cmp	lr, fp
 8020738:	f6ff af2b 	blt.w	8020592 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802073c:	9302      	str	r3, [sp, #8]
 802073e:	fa0f f38e 	sxth.w	r3, lr
 8020742:	9a08      	ldr	r2, [sp, #32]
 8020744:	9301      	str	r3, [sp, #4]
 8020746:	fa0f f38c 	sxth.w	r3, ip
 802074a:	9105      	str	r1, [sp, #20]
 802074c:	4641      	mov	r1, r8
 802074e:	9300      	str	r3, [sp, #0]
 8020750:	4653      	mov	r3, sl
 8020752:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8020756:	463a      	mov	r2, r7
 8020758:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802075a:	f7ff fd73 	bl	8020244 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802075e:	e718      	b.n	8020592 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020760:	1422      	asrs	r2, r4, #16
 8020762:	9906      	ldr	r1, [sp, #24]
 8020764:	1433      	asrs	r3, r6, #16
 8020766:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802076a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802076e:	fb01 2303 	mla	r3, r1, r3, r2
 8020772:	085a      	lsrs	r2, r3, #1
 8020774:	07d9      	lsls	r1, r3, #31
 8020776:	5cba      	ldrb	r2, [r7, r2]
 8020778:	bf54      	ite	pl
 802077a:	f002 020f 	andpl.w	r2, r2, #15
 802077e:	1112      	asrmi	r2, r2, #4
 8020780:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020784:	b2d2      	uxtb	r2, r2
 8020786:	2800      	cmp	r0, #0
 8020788:	d063      	beq.n	8020852 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 802078a:	f103 0a01 	add.w	sl, r3, #1
 802078e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8020792:	f01a 0f01 	tst.w	sl, #1
 8020796:	5c79      	ldrb	r1, [r7, r1]
 8020798:	bf0c      	ite	eq
 802079a:	f001 010f 	andeq.w	r1, r1, #15
 802079e:	1109      	asrne	r1, r1, #4
 80207a0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80207a4:	b2c9      	uxtb	r1, r1
 80207a6:	910f      	str	r1, [sp, #60]	@ 0x3c
 80207a8:	f1bc 0f00 	cmp.w	ip, #0
 80207ac:	d01a      	beq.n	80207e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80207ae:	9908      	ldr	r1, [sp, #32]
 80207b0:	440b      	add	r3, r1
 80207b2:	0859      	lsrs	r1, r3, #1
 80207b4:	f013 0f01 	tst.w	r3, #1
 80207b8:	f103 0301 	add.w	r3, r3, #1
 80207bc:	5c79      	ldrb	r1, [r7, r1]
 80207be:	bf0c      	ite	eq
 80207c0:	f001 010f 	andeq.w	r1, r1, #15
 80207c4:	1109      	asrne	r1, r1, #4
 80207c6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80207ca:	b2c9      	uxtb	r1, r1
 80207cc:	910b      	str	r1, [sp, #44]	@ 0x2c
 80207ce:	0859      	lsrs	r1, r3, #1
 80207d0:	07db      	lsls	r3, r3, #31
 80207d2:	5c79      	ldrb	r1, [r7, r1]
 80207d4:	bf54      	ite	pl
 80207d6:	f001 010f 	andpl.w	r1, r1, #15
 80207da:	1109      	asrmi	r1, r1, #4
 80207dc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80207e0:	b2c9      	uxtb	r1, r1
 80207e2:	9110      	str	r1, [sp, #64]	@ 0x40
 80207e4:	b280      	uxth	r0, r0
 80207e6:	fa1f fc8c 	uxth.w	ip, ip
 80207ea:	fb00 f30c 	mul.w	r3, r0, ip
 80207ee:	0100      	lsls	r0, r0, #4
 80207f0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80207f4:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 80207f8:	1ac0      	subs	r0, r0, r3
 80207fa:	fa1f fc8c 	uxth.w	ip, ip
 80207fe:	b280      	uxth	r0, r0
 8020800:	eba1 010c 	sub.w	r1, r1, ip
 8020804:	fa1f fa81 	uxth.w	sl, r1
 8020808:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802080a:	4348      	muls	r0, r1
 802080c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802080e:	fb02 020a 	mla	r2, r2, sl, r0
 8020812:	fb0c 2c01 	mla	ip, ip, r1, r2
 8020816:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020818:	fb03 c302 	mla	r3, r3, r2, ip
 802081c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020820:	2bff      	cmp	r3, #255	@ 0xff
 8020822:	d12b      	bne.n	802087c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8020824:	4b13      	ldr	r3, [pc, #76]	@ (8020874 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020826:	681a      	ldr	r2, [r3, #0]
 8020828:	4b13      	ldr	r3, [pc, #76]	@ (8020878 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802082a:	0951      	lsrs	r1, r2, #5
 802082c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020830:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020834:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020838:	430b      	orrs	r3, r1
 802083a:	4313      	orrs	r3, r2
 802083c:	f8ae 3000 	strh.w	r3, [lr]
 8020840:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020842:	f10e 0e02 	add.w	lr, lr, #2
 8020846:	f108 38ff 	add.w	r8, r8, #4294967295
 802084a:	441c      	add	r4, r3
 802084c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802084e:	441e      	add	r6, r3
 8020850:	e6cc      	b.n	80205ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8020852:	f1bc 0f00 	cmp.w	ip, #0
 8020856:	d0c5      	beq.n	80207e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8020858:	9908      	ldr	r1, [sp, #32]
 802085a:	440b      	add	r3, r1
 802085c:	0859      	lsrs	r1, r3, #1
 802085e:	07db      	lsls	r3, r3, #31
 8020860:	5c79      	ldrb	r1, [r7, r1]
 8020862:	bf54      	ite	pl
 8020864:	f001 010f 	andpl.w	r1, r1, #15
 8020868:	1109      	asrmi	r1, r1, #4
 802086a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802086e:	b2c9      	uxtb	r1, r1
 8020870:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020872:	e7b7      	b.n	80207e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8020874:	20016c98 	.word	0x20016c98
 8020878:	fffff800 	.word	0xfffff800
 802087c:	2b00      	cmp	r3, #0
 802087e:	d0df      	beq.n	8020840 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8020880:	4a21      	ldr	r2, [pc, #132]	@ (8020908 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8020882:	fa1f fa83 	uxth.w	sl, r3
 8020886:	f8be c000 	ldrh.w	ip, [lr]
 802088a:	43db      	mvns	r3, r3
 802088c:	6810      	ldr	r0, [r2, #0]
 802088e:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020892:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020896:	b2db      	uxtb	r3, r3
 8020898:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802089c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80208a0:	fb12 f20a 	smulbb	r2, r2, sl
 80208a4:	b2c0      	uxtb	r0, r0
 80208a6:	fb1b fb0a 	smulbb	fp, fp, sl
 80208aa:	fb01 2103 	mla	r1, r1, r3, r2
 80208ae:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80208b2:	fb10 f00a 	smulbb	r0, r0, sl
 80208b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80208ba:	b289      	uxth	r1, r1
 80208bc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80208c0:	fa5f fc8c 	uxtb.w	ip, ip
 80208c4:	fb02 b203 	mla	r2, r2, r3, fp
 80208c8:	fb0c 0003 	mla	r0, ip, r3, r0
 80208cc:	1c4b      	adds	r3, r1, #1
 80208ce:	b292      	uxth	r2, r2
 80208d0:	b280      	uxth	r0, r0
 80208d2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80208d6:	f100 0b01 	add.w	fp, r0, #1
 80208da:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80208de:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80208e2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80208e6:	ea4b 0101 	orr.w	r1, fp, r1
 80208ea:	f102 0b01 	add.w	fp, r2, #1
 80208ee:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80208f2:	0952      	lsrs	r2, r2, #5
 80208f4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80208f8:	4311      	orrs	r1, r2
 80208fa:	f8ae 1000 	strh.w	r1, [lr]
 80208fe:	e79f      	b.n	8020840 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8020900:	b013      	add	sp, #76	@ 0x4c
 8020902:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020906:	bf00      	nop
 8020908:	20016c98 	.word	0x20016c98

0802090c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802090c:	b570      	push	{r4, r5, r6, lr}
 802090e:	1208      	asrs	r0, r1, #8
 8020910:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8020914:	b29e      	uxth	r6, r3
 8020916:	1213      	asrs	r3, r2, #8
 8020918:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802091c:	10cc      	asrs	r4, r1, #3
 802091e:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020922:	00c9      	lsls	r1, r1, #3
 8020924:	fb10 f006 	smulbb	r0, r0, r6
 8020928:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802092c:	fb13 f305 	smulbb	r3, r3, r5
 8020930:	fb14 f406 	smulbb	r4, r4, r6
 8020934:	4418      	add	r0, r3
 8020936:	10d3      	asrs	r3, r2, #3
 8020938:	00d2      	lsls	r2, r2, #3
 802093a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802093e:	b280      	uxth	r0, r0
 8020940:	b2d2      	uxtb	r2, r2
 8020942:	fb13 f305 	smulbb	r3, r3, r5
 8020946:	fb12 f205 	smulbb	r2, r2, r5
 802094a:	441c      	add	r4, r3
 802094c:	b2cb      	uxtb	r3, r1
 802094e:	fb13 f306 	smulbb	r3, r3, r6
 8020952:	b2a4      	uxth	r4, r4
 8020954:	4413      	add	r3, r2
 8020956:	1c42      	adds	r2, r0, #1
 8020958:	b29b      	uxth	r3, r3
 802095a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802095e:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8020962:	1c58      	adds	r0, r3, #1
 8020964:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020968:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802096c:	4310      	orrs	r0, r2
 802096e:	1c62      	adds	r2, r4, #1
 8020970:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020974:	0964      	lsrs	r4, r4, #5
 8020976:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802097a:	4320      	orrs	r0, r4
 802097c:	bd70      	pop	{r4, r5, r6, pc}
	...

08020980 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8020980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020984:	b08f      	sub	sp, #60	@ 0x3c
 8020986:	461c      	mov	r4, r3
 8020988:	460d      	mov	r5, r1
 802098a:	4616      	mov	r6, r2
 802098c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8020990:	9004      	str	r0, [sp, #16]
 8020992:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020994:	2f00      	cmp	r7, #0
 8020996:	f000 80f6 	beq.w	8020b86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802099a:	6820      	ldr	r0, [r4, #0]
 802099c:	aa0a      	add	r2, sp, #40	@ 0x28
 802099e:	6861      	ldr	r1, [r4, #4]
 80209a0:	f04f 0802 	mov.w	r8, #2
 80209a4:	3604      	adds	r6, #4
 80209a6:	c203      	stmia	r2!, {r0, r1}
 80209a8:	6818      	ldr	r0, [r3, #0]
 80209aa:	aa0c      	add	r2, sp, #48	@ 0x30
 80209ac:	6859      	ldr	r1, [r3, #4]
 80209ae:	c203      	stmia	r2!, {r0, r1}
 80209b0:	a80a      	add	r0, sp, #40	@ 0x28
 80209b2:	f7ef fdb7 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80209b6:	4621      	mov	r1, r4
 80209b8:	a80c      	add	r0, sp, #48	@ 0x30
 80209ba:	f7ef fddb 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80209be:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80209c2:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80209c6:	f002 0301 	and.w	r3, r2, #1
 80209ca:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80209ce:	9306      	str	r3, [sp, #24]
 80209d0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80209d4:	f003 0101 	and.w	r1, r3, #1
 80209d8:	9105      	str	r1, [sp, #20]
 80209da:	9805      	ldr	r0, [sp, #20]
 80209dc:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80209e0:	4403      	add	r3, r0
 80209e2:	fb01 2303 	mla	r3, r1, r3, r2
 80209e6:	fb93 f3f8 	sdiv	r3, r3, r8
 80209ea:	441d      	add	r5, r3
 80209ec:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80209f0:	441a      	add	r2, r3
 80209f2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80209f6:	4419      	add	r1, r3
 80209f8:	4b64      	ldr	r3, [pc, #400]	@ (8020b8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80209fa:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80209fe:	6818      	ldr	r0, [r3, #0]
 8020a00:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8020a04:	6803      	ldr	r3, [r0, #0]
 8020a06:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8020a08:	4798      	blx	r3
 8020a0a:	4a61      	ldr	r2, [pc, #388]	@ (8020b90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8020a0c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020a10:	2fff      	cmp	r7, #255	@ 0xff
 8020a12:	8813      	ldrh	r3, [r2, #0]
 8020a14:	4611      	mov	r1, r2
 8020a16:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8020a1a:	fb03 fb0b 	mul.w	fp, r3, fp
 8020a1e:	fb03 a404 	mla	r4, r3, r4, sl
 8020a22:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020a26:	d06b      	beq.n	8020b00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 8020a28:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 8020a2c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8020a30:	9303      	str	r3, [sp, #12]
 8020a32:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8020a36:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8020a3a:	9b07      	ldr	r3, [sp, #28]
 8020a3c:	42a3      	cmp	r3, r4
 8020a3e:	f240 809d 	bls.w	8020b7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8020a42:	9b06      	ldr	r3, [sp, #24]
 8020a44:	2b00      	cmp	r3, #0
 8020a46:	d039      	beq.n	8020abc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 8020a48:	782b      	ldrb	r3, [r5, #0]
 8020a4a:	f105 0801 	add.w	r8, r5, #1
 8020a4e:	f109 3bff 	add.w	fp, r9, #4294967295
 8020a52:	8822      	ldrh	r2, [r4, #0]
 8020a54:	f003 030f 	and.w	r3, r3, #15
 8020a58:	9804      	ldr	r0, [sp, #16]
 8020a5a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020a5e:	9b03      	ldr	r3, [sp, #12]
 8020a60:	9300      	str	r3, [sp, #0]
 8020a62:	463b      	mov	r3, r7
 8020a64:	f7ff ff52 	bl	802090c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020a68:	f824 0b02 	strh.w	r0, [r4], #2
 8020a6c:	f1bb 0f01 	cmp.w	fp, #1
 8020a70:	46a2      	mov	sl, r4
 8020a72:	f104 0404 	add.w	r4, r4, #4
 8020a76:	dd24      	ble.n	8020ac2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 8020a78:	f898 3000 	ldrb.w	r3, [r8]
 8020a7c:	f1ab 0b02 	sub.w	fp, fp, #2
 8020a80:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020a84:	091b      	lsrs	r3, r3, #4
 8020a86:	9804      	ldr	r0, [sp, #16]
 8020a88:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020a8c:	9b03      	ldr	r3, [sp, #12]
 8020a8e:	9300      	str	r3, [sp, #0]
 8020a90:	463b      	mov	r3, r7
 8020a92:	f7ff ff3b 	bl	802090c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020a96:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020a9a:	f818 3b01 	ldrb.w	r3, [r8], #1
 8020a9e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020aa2:	f003 030f 	and.w	r3, r3, #15
 8020aa6:	9804      	ldr	r0, [sp, #16]
 8020aa8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020aac:	9b03      	ldr	r3, [sp, #12]
 8020aae:	9300      	str	r3, [sp, #0]
 8020ab0:	463b      	mov	r3, r7
 8020ab2:	f7ff ff2b 	bl	802090c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020ab6:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020aba:	e7d7      	b.n	8020a6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8020abc:	46a8      	mov	r8, r5
 8020abe:	46cb      	mov	fp, r9
 8020ac0:	e7d4      	b.n	8020a6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8020ac2:	d10e      	bne.n	8020ae2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 8020ac4:	f898 3000 	ldrb.w	r3, [r8]
 8020ac8:	f8ba 2000 	ldrh.w	r2, [sl]
 8020acc:	091b      	lsrs	r3, r3, #4
 8020ace:	9804      	ldr	r0, [sp, #16]
 8020ad0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020ad4:	9b03      	ldr	r3, [sp, #12]
 8020ad6:	9300      	str	r3, [sp, #0]
 8020ad8:	463b      	mov	r3, r7
 8020ada:	f7ff ff17 	bl	802090c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020ade:	f82a 0b02 	strh.w	r0, [sl], #2
 8020ae2:	9b08      	ldr	r3, [sp, #32]
 8020ae4:	9a05      	ldr	r2, [sp, #20]
 8020ae6:	881c      	ldrh	r4, [r3, #0]
 8020ae8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020aec:	eba4 0409 	sub.w	r4, r4, r9
 8020af0:	4413      	add	r3, r2
 8020af2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020af4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8020af8:	fb93 f3f2 	sdiv	r3, r3, r2
 8020afc:	441d      	add	r5, r3
 8020afe:	e79c      	b.n	8020a3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 8020b00:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8020b04:	45a3      	cmp	fp, r4
 8020b06:	d939      	bls.n	8020b7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8020b08:	9b06      	ldr	r3, [sp, #24]
 8020b0a:	b1fb      	cbz	r3, 8020b4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8020b0c:	782b      	ldrb	r3, [r5, #0]
 8020b0e:	1c6a      	adds	r2, r5, #1
 8020b10:	f109 30ff 	add.w	r0, r9, #4294967295
 8020b14:	3402      	adds	r4, #2
 8020b16:	f003 030f 	and.w	r3, r3, #15
 8020b1a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020b1e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8020b22:	2801      	cmp	r0, #1
 8020b24:	4623      	mov	r3, r4
 8020b26:	f104 0404 	add.w	r4, r4, #4
 8020b2a:	dd12      	ble.n	8020b52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8020b2c:	7813      	ldrb	r3, [r2, #0]
 8020b2e:	3802      	subs	r0, #2
 8020b30:	091b      	lsrs	r3, r3, #4
 8020b32:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020b36:	f824 3c04 	strh.w	r3, [r4, #-4]
 8020b3a:	f812 3b01 	ldrb.w	r3, [r2], #1
 8020b3e:	f003 030f 	and.w	r3, r3, #15
 8020b42:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020b46:	f824 3c02 	strh.w	r3, [r4, #-2]
 8020b4a:	e7ea      	b.n	8020b22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020b4c:	462a      	mov	r2, r5
 8020b4e:	4648      	mov	r0, r9
 8020b50:	e7e7      	b.n	8020b22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020b52:	d106      	bne.n	8020b62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8020b54:	7812      	ldrb	r2, [r2, #0]
 8020b56:	3302      	adds	r3, #2
 8020b58:	0912      	lsrs	r2, r2, #4
 8020b5a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020b5e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8020b62:	880c      	ldrh	r4, [r1, #0]
 8020b64:	9a05      	ldr	r2, [sp, #20]
 8020b66:	eba4 0409 	sub.w	r4, r4, r9
 8020b6a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8020b6e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020b72:	4413      	add	r3, r2
 8020b74:	fb93 f3f8 	sdiv	r3, r3, r8
 8020b78:	441d      	add	r5, r3
 8020b7a:	e7c3      	b.n	8020b04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 8020b7c:	4b03      	ldr	r3, [pc, #12]	@ (8020b8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8020b7e:	6818      	ldr	r0, [r3, #0]
 8020b80:	6803      	ldr	r3, [r0, #0]
 8020b82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020b84:	4798      	blx	r3
 8020b86:	b00f      	add	sp, #60	@ 0x3c
 8020b88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020b8c:	20016c88 	.word	0x20016c88
 8020b90:	20016c82 	.word	0x20016c82

08020b94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8020b94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020b96:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8020b9a:	0a0f      	lsrs	r7, r1, #8
 8020b9c:	2dff      	cmp	r5, #255	@ 0xff
 8020b9e:	d10c      	bne.n	8020bba <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8020ba0:	2bff      	cmp	r3, #255	@ 0xff
 8020ba2:	d10a      	bne.n	8020bba <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8020ba4:	0948      	lsrs	r0, r1, #5
 8020ba6:	4b25      	ldr	r3, [pc, #148]	@ (8020c3c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8020ba8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020bac:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020bb0:	403b      	ands	r3, r7
 8020bb2:	4318      	orrs	r0, r3
 8020bb4:	4308      	orrs	r0, r1
 8020bb6:	b280      	uxth	r0, r0
 8020bb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020bba:	fb15 f503 	smulbb	r5, r5, r3
 8020bbe:	1214      	asrs	r4, r2, #8
 8020bc0:	10d6      	asrs	r6, r2, #3
 8020bc2:	b2ab      	uxth	r3, r5
 8020bc4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020bc8:	00d0      	lsls	r0, r2, #3
 8020bca:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8020bce:	1c5d      	adds	r5, r3, #1
 8020bd0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020bd4:	b2c0      	uxtb	r0, r0
 8020bd6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020bda:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8020bde:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8020be2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020be6:	fa1f fc85 	uxth.w	ip, r5
 8020bea:	43ed      	mvns	r5, r5
 8020bec:	fb12 f20c 	smulbb	r2, r2, ip
 8020bf0:	b2eb      	uxtb	r3, r5
 8020bf2:	b2fd      	uxtb	r5, r7
 8020bf4:	fb04 2403 	mla	r4, r4, r3, r2
 8020bf8:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8020bfc:	fb15 f50c 	smulbb	r5, r5, ip
 8020c00:	b2c8      	uxtb	r0, r1
 8020c02:	b2a4      	uxth	r4, r4
 8020c04:	fb10 f00c 	smulbb	r0, r0, ip
 8020c08:	fb06 5503 	mla	r5, r6, r3, r5
 8020c0c:	fb02 0003 	mla	r0, r2, r3, r0
 8020c10:	b2ad      	uxth	r5, r5
 8020c12:	b283      	uxth	r3, r0
 8020c14:	1c60      	adds	r0, r4, #1
 8020c16:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8020c1a:	1c58      	adds	r0, r3, #1
 8020c1c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020c20:	1c6b      	adds	r3, r5, #1
 8020c22:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020c26:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020c2a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020c2e:	096d      	lsrs	r5, r5, #5
 8020c30:	4320      	orrs	r0, r4
 8020c32:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020c36:	4328      	orrs	r0, r5
 8020c38:	e7be      	b.n	8020bb8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 8020c3a:	bf00      	nop
 8020c3c:	00fff800 	.word	0x00fff800

08020c40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8020c40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c44:	461c      	mov	r4, r3
 8020c46:	b08d      	sub	sp, #52	@ 0x34
 8020c48:	460d      	mov	r5, r1
 8020c4a:	4616      	mov	r6, r2
 8020c4c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020c4e:	4680      	mov	r8, r0
 8020c50:	6861      	ldr	r1, [r4, #4]
 8020c52:	aa08      	add	r2, sp, #32
 8020c54:	6820      	ldr	r0, [r4, #0]
 8020c56:	f04f 0a02 	mov.w	sl, #2
 8020c5a:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8020c5e:	3604      	adds	r6, #4
 8020c60:	c203      	stmia	r2!, {r0, r1}
 8020c62:	6818      	ldr	r0, [r3, #0]
 8020c64:	aa0a      	add	r2, sp, #40	@ 0x28
 8020c66:	6859      	ldr	r1, [r3, #4]
 8020c68:	c203      	stmia	r2!, {r0, r1}
 8020c6a:	a808      	add	r0, sp, #32
 8020c6c:	f7ef fc5a 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020c70:	4621      	mov	r1, r4
 8020c72:	a80a      	add	r0, sp, #40	@ 0x28
 8020c74:	f7ef fc7e 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020c78:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8020c7c:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8020c80:	f002 0301 	and.w	r3, r2, #1
 8020c84:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8020c88:	9303      	str	r3, [sp, #12]
 8020c8a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020c8e:	f003 0101 	and.w	r1, r3, #1
 8020c92:	9102      	str	r1, [sp, #8]
 8020c94:	9802      	ldr	r0, [sp, #8]
 8020c96:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8020c9a:	4403      	add	r3, r0
 8020c9c:	fb01 2303 	mla	r3, r1, r3, r2
 8020ca0:	fb93 f3fa 	sdiv	r3, r3, sl
 8020ca4:	441d      	add	r5, r3
 8020ca6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8020caa:	441a      	add	r2, r3
 8020cac:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8020cb0:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8020cb4:	4419      	add	r1, r3
 8020cb6:	4a3e      	ldr	r2, [pc, #248]	@ (8020db0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8020cb8:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8020cbc:	6810      	ldr	r0, [r2, #0]
 8020cbe:	9205      	str	r2, [sp, #20]
 8020cc0:	6803      	ldr	r3, [r0, #0]
 8020cc2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8020cc4:	4798      	blx	r3
 8020cc6:	4b3b      	ldr	r3, [pc, #236]	@ (8020db4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8020cc8:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8020ccc:	8819      	ldrh	r1, [r3, #0]
 8020cce:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8020cd2:	434f      	muls	r7, r1
 8020cd4:	fb01 c404 	mla	r4, r1, r4, ip
 8020cd8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020cdc:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8020ce0:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8020ce4:	9204      	str	r2, [sp, #16]
 8020ce6:	9b04      	ldr	r3, [sp, #16]
 8020ce8:	429c      	cmp	r4, r3
 8020cea:	d258      	bcs.n	8020d9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8020cec:	9b03      	ldr	r3, [sp, #12]
 8020cee:	2b00      	cmp	r3, #0
 8020cf0:	d034      	beq.n	8020d5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8020cf2:	782b      	ldrb	r3, [r5, #0]
 8020cf4:	1c6f      	adds	r7, r5, #1
 8020cf6:	f003 030f 	and.w	r3, r3, #15
 8020cfa:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020cfe:	0e0b      	lsrs	r3, r1, #24
 8020d00:	d006      	beq.n	8020d10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8020d02:	8822      	ldrh	r2, [r4, #0]
 8020d04:	4640      	mov	r0, r8
 8020d06:	9300      	str	r3, [sp, #0]
 8020d08:	464b      	mov	r3, r9
 8020d0a:	f7ff ff43 	bl	8020b94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020d0e:	8020      	strh	r0, [r4, #0]
 8020d10:	3402      	adds	r4, #2
 8020d12:	f10b 3aff 	add.w	sl, fp, #4294967295
 8020d16:	f1ba 0f01 	cmp.w	sl, #1
 8020d1a:	dd22      	ble.n	8020d62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8020d1c:	783b      	ldrb	r3, [r7, #0]
 8020d1e:	091b      	lsrs	r3, r3, #4
 8020d20:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020d24:	0e0b      	lsrs	r3, r1, #24
 8020d26:	d006      	beq.n	8020d36 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8020d28:	8822      	ldrh	r2, [r4, #0]
 8020d2a:	4640      	mov	r0, r8
 8020d2c:	9300      	str	r3, [sp, #0]
 8020d2e:	464b      	mov	r3, r9
 8020d30:	f7ff ff30 	bl	8020b94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020d34:	8020      	strh	r0, [r4, #0]
 8020d36:	f817 3b01 	ldrb.w	r3, [r7], #1
 8020d3a:	f003 030f 	and.w	r3, r3, #15
 8020d3e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020d42:	0e0b      	lsrs	r3, r1, #24
 8020d44:	d006      	beq.n	8020d54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8020d46:	8862      	ldrh	r2, [r4, #2]
 8020d48:	4640      	mov	r0, r8
 8020d4a:	9300      	str	r3, [sp, #0]
 8020d4c:	464b      	mov	r3, r9
 8020d4e:	f7ff ff21 	bl	8020b94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020d52:	8060      	strh	r0, [r4, #2]
 8020d54:	3404      	adds	r4, #4
 8020d56:	f1aa 0a02 	sub.w	sl, sl, #2
 8020d5a:	e7dc      	b.n	8020d16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020d5c:	462f      	mov	r7, r5
 8020d5e:	46da      	mov	sl, fp
 8020d60:	e7d9      	b.n	8020d16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020d62:	d10d      	bne.n	8020d80 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8020d64:	783b      	ldrb	r3, [r7, #0]
 8020d66:	091b      	lsrs	r3, r3, #4
 8020d68:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020d6c:	0e0b      	lsrs	r3, r1, #24
 8020d6e:	d006      	beq.n	8020d7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8020d70:	8822      	ldrh	r2, [r4, #0]
 8020d72:	4640      	mov	r0, r8
 8020d74:	9300      	str	r3, [sp, #0]
 8020d76:	464b      	mov	r3, r9
 8020d78:	f7ff ff0c 	bl	8020b94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020d7c:	8020      	strh	r0, [r4, #0]
 8020d7e:	3402      	adds	r4, #2
 8020d80:	9b06      	ldr	r3, [sp, #24]
 8020d82:	9a02      	ldr	r2, [sp, #8]
 8020d84:	881b      	ldrh	r3, [r3, #0]
 8020d86:	eba3 030b 	sub.w	r3, r3, fp
 8020d8a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020d8e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020d92:	4413      	add	r3, r2
 8020d94:	9a07      	ldr	r2, [sp, #28]
 8020d96:	fb93 f3f2 	sdiv	r3, r3, r2
 8020d9a:	441d      	add	r5, r3
 8020d9c:	e7a3      	b.n	8020ce6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8020d9e:	9b05      	ldr	r3, [sp, #20]
 8020da0:	6818      	ldr	r0, [r3, #0]
 8020da2:	6803      	ldr	r3, [r0, #0]
 8020da4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020da6:	4798      	blx	r3
 8020da8:	b00d      	add	sp, #52	@ 0x34
 8020daa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020dae:	bf00      	nop
 8020db0:	20016c88 	.word	0x20016c88
 8020db4:	20016c82 	.word	0x20016c82

08020db8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8020db8:	b570      	push	{r4, r5, r6, lr}
 8020dba:	1214      	asrs	r4, r2, #8
 8020dbc:	788d      	ldrb	r5, [r1, #2]
 8020dbe:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8020dc2:	10d0      	asrs	r0, r2, #3
 8020dc4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020dc8:	00d2      	lsls	r2, r2, #3
 8020dca:	fb15 f503 	smulbb	r5, r5, r3
 8020dce:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020dd2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020dd6:	b2d2      	uxtb	r2, r2
 8020dd8:	fb04 5506 	mla	r5, r4, r6, r5
 8020ddc:	784c      	ldrb	r4, [r1, #1]
 8020dde:	7809      	ldrb	r1, [r1, #0]
 8020de0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8020de4:	fb14 f403 	smulbb	r4, r4, r3
 8020de8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020dec:	fb11 f303 	smulbb	r3, r1, r3
 8020df0:	b2ad      	uxth	r5, r5
 8020df2:	fb00 4406 	mla	r4, r0, r6, r4
 8020df6:	fb02 3306 	mla	r3, r2, r6, r3
 8020dfa:	1c68      	adds	r0, r5, #1
 8020dfc:	b2a4      	uxth	r4, r4
 8020dfe:	b29b      	uxth	r3, r3
 8020e00:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8020e04:	1c62      	adds	r2, r4, #1
 8020e06:	1c58      	adds	r0, r3, #1
 8020e08:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020e0c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020e10:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020e14:	0964      	lsrs	r4, r4, #5
 8020e16:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020e1a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020e1e:	4328      	orrs	r0, r5
 8020e20:	4320      	orrs	r0, r4
 8020e22:	bd70      	pop	{r4, r5, r6, pc}

08020e24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8020e24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e28:	b08f      	sub	sp, #60	@ 0x3c
 8020e2a:	461c      	mov	r4, r3
 8020e2c:	4682      	mov	sl, r0
 8020e2e:	460e      	mov	r6, r1
 8020e30:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8020e34:	4615      	mov	r5, r2
 8020e36:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020e38:	2f00      	cmp	r7, #0
 8020e3a:	f000 8141 	beq.w	80210c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 8020e3e:	6820      	ldr	r0, [r4, #0]
 8020e40:	aa0a      	add	r2, sp, #40	@ 0x28
 8020e42:	6861      	ldr	r1, [r4, #4]
 8020e44:	f04f 0802 	mov.w	r8, #2
 8020e48:	3504      	adds	r5, #4
 8020e4a:	c203      	stmia	r2!, {r0, r1}
 8020e4c:	6818      	ldr	r0, [r3, #0]
 8020e4e:	aa0c      	add	r2, sp, #48	@ 0x30
 8020e50:	6859      	ldr	r1, [r3, #4]
 8020e52:	c203      	stmia	r2!, {r0, r1}
 8020e54:	a80a      	add	r0, sp, #40	@ 0x28
 8020e56:	f7ef fb65 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020e5a:	4621      	mov	r1, r4
 8020e5c:	a80c      	add	r0, sp, #48	@ 0x30
 8020e5e:	f7ef fb89 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020e62:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8020e66:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8020e6a:	f002 0301 	and.w	r3, r2, #1
 8020e6e:	9306      	str	r3, [sp, #24]
 8020e70:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020e74:	f003 0101 	and.w	r1, r3, #1
 8020e78:	9105      	str	r1, [sp, #20]
 8020e7a:	9805      	ldr	r0, [sp, #20]
 8020e7c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020e80:	4403      	add	r3, r0
 8020e82:	fb01 2303 	mla	r3, r1, r3, r2
 8020e86:	fb93 f3f8 	sdiv	r3, r3, r8
 8020e8a:	441e      	add	r6, r3
 8020e8c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8020e90:	441a      	add	r2, r3
 8020e92:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8020e96:	4419      	add	r1, r3
 8020e98:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8020e9c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020ea0:	9303      	str	r3, [sp, #12]
 8020ea2:	4b89      	ldr	r3, [pc, #548]	@ (80210c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020ea4:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8020ea8:	6818      	ldr	r0, [r3, #0]
 8020eaa:	6803      	ldr	r3, [r0, #0]
 8020eac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8020eae:	4798      	blx	r3
 8020eb0:	4a86      	ldr	r2, [pc, #536]	@ (80210cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8020eb2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020eb6:	2fff      	cmp	r7, #255	@ 0xff
 8020eb8:	8813      	ldrh	r3, [r2, #0]
 8020eba:	4694      	mov	ip, r2
 8020ebc:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8020ec0:	fb03 9404 	mla	r4, r3, r4, r9
 8020ec4:	fb03 f30b 	mul.w	r3, r3, fp
 8020ec8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020ecc:	d071      	beq.n	8020fb2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 8020ece:	43f9      	mvns	r1, r7
 8020ed0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020ed4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8020ed8:	b2c9      	uxtb	r1, r1
 8020eda:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8020ede:	9104      	str	r1, [sp, #16]
 8020ee0:	9b07      	ldr	r3, [sp, #28]
 8020ee2:	42a3      	cmp	r3, r4
 8020ee4:	f240 80e7 	bls.w	80210b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8020ee8:	9b06      	ldr	r3, [sp, #24]
 8020eea:	2b00      	cmp	r3, #0
 8020eec:	d03d      	beq.n	8020f6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 8020eee:	7831      	ldrb	r1, [r6, #0]
 8020ef0:	4650      	mov	r0, sl
 8020ef2:	9b04      	ldr	r3, [sp, #16]
 8020ef4:	f106 0801 	add.w	r8, r6, #1
 8020ef8:	f001 010f 	and.w	r1, r1, #15
 8020efc:	8822      	ldrh	r2, [r4, #0]
 8020efe:	9300      	str	r3, [sp, #0]
 8020f00:	463b      	mov	r3, r7
 8020f02:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020f06:	4429      	add	r1, r5
 8020f08:	f7ff ff56 	bl	8020db8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020f0c:	9b03      	ldr	r3, [sp, #12]
 8020f0e:	f824 0b02 	strh.w	r0, [r4], #2
 8020f12:	f103 3bff 	add.w	fp, r3, #4294967295
 8020f16:	f1bb 0f01 	cmp.w	fp, #1
 8020f1a:	46a1      	mov	r9, r4
 8020f1c:	f104 0404 	add.w	r4, r4, #4
 8020f20:	dd27      	ble.n	8020f72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 8020f22:	f898 1000 	ldrb.w	r1, [r8]
 8020f26:	4650      	mov	r0, sl
 8020f28:	9b04      	ldr	r3, [sp, #16]
 8020f2a:	f1ab 0b02 	sub.w	fp, fp, #2
 8020f2e:	0909      	lsrs	r1, r1, #4
 8020f30:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020f34:	9300      	str	r3, [sp, #0]
 8020f36:	463b      	mov	r3, r7
 8020f38:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020f3c:	4429      	add	r1, r5
 8020f3e:	f7ff ff3b 	bl	8020db8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020f42:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020f46:	f818 1b01 	ldrb.w	r1, [r8], #1
 8020f4a:	4650      	mov	r0, sl
 8020f4c:	9b04      	ldr	r3, [sp, #16]
 8020f4e:	f001 010f 	and.w	r1, r1, #15
 8020f52:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020f56:	9300      	str	r3, [sp, #0]
 8020f58:	463b      	mov	r3, r7
 8020f5a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020f5e:	4429      	add	r1, r5
 8020f60:	f7ff ff2a 	bl	8020db8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020f64:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020f68:	e7d5      	b.n	8020f16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 8020f6a:	46b0      	mov	r8, r6
 8020f6c:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8020f70:	e7d1      	b.n	8020f16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 8020f72:	d10f      	bne.n	8020f94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 8020f74:	f898 1000 	ldrb.w	r1, [r8]
 8020f78:	4650      	mov	r0, sl
 8020f7a:	9b04      	ldr	r3, [sp, #16]
 8020f7c:	0909      	lsrs	r1, r1, #4
 8020f7e:	f8b9 2000 	ldrh.w	r2, [r9]
 8020f82:	9300      	str	r3, [sp, #0]
 8020f84:	463b      	mov	r3, r7
 8020f86:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020f8a:	4429      	add	r1, r5
 8020f8c:	f7ff ff14 	bl	8020db8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020f90:	f829 0b02 	strh.w	r0, [r9], #2
 8020f94:	9b08      	ldr	r3, [sp, #32]
 8020f96:	9a05      	ldr	r2, [sp, #20]
 8020f98:	881c      	ldrh	r4, [r3, #0]
 8020f9a:	9b03      	ldr	r3, [sp, #12]
 8020f9c:	1ae4      	subs	r4, r4, r3
 8020f9e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020fa2:	4413      	add	r3, r2
 8020fa4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020fa6:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020faa:	fb93 f3f2 	sdiv	r3, r3, r2
 8020fae:	441e      	add	r6, r3
 8020fb0:	e796      	b.n	8020ee0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 8020fb2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020fb6:	4f46      	ldr	r7, [pc, #280]	@ (80210d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8020fb8:	42a3      	cmp	r3, r4
 8020fba:	d97c      	bls.n	80210b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8020fbc:	9a06      	ldr	r2, [sp, #24]
 8020fbe:	2a00      	cmp	r2, #0
 8020fc0:	d054      	beq.n	802106c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 8020fc2:	7830      	ldrb	r0, [r6, #0]
 8020fc4:	1c71      	adds	r1, r6, #1
 8020fc6:	f000 000f 	and.w	r0, r0, #15
 8020fca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020fce:	eb05 0e00 	add.w	lr, r5, r0
 8020fd2:	5c28      	ldrb	r0, [r5, r0]
 8020fd4:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8020fd8:	f89e e001 	ldrb.w	lr, [lr, #1]
 8020fdc:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020fe0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020fe4:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8020fe8:	ea42 020e 	orr.w	r2, r2, lr
 8020fec:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8020ff0:	f824 2b02 	strh.w	r2, [r4], #2
 8020ff4:	9a03      	ldr	r2, [sp, #12]
 8020ff6:	f102 3eff 	add.w	lr, r2, #4294967295
 8020ffa:	f1be 0f01 	cmp.w	lr, #1
 8020ffe:	4620      	mov	r0, r4
 8021000:	f104 0404 	add.w	r4, r4, #4
 8021004:	dd36      	ble.n	8021074 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 8021006:	7808      	ldrb	r0, [r1, #0]
 8021008:	f1ae 0e02 	sub.w	lr, lr, #2
 802100c:	0900      	lsrs	r0, r0, #4
 802100e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021012:	eb05 0a00 	add.w	sl, r5, r0
 8021016:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802101a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802101e:	00d2      	lsls	r2, r2, #3
 8021020:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8021024:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021028:	ea49 0202 	orr.w	r2, r9, r2
 802102c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8021030:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8021034:	f824 2c04 	strh.w	r2, [r4, #-4]
 8021038:	f811 0b01 	ldrb.w	r0, [r1], #1
 802103c:	f000 000f 	and.w	r0, r0, #15
 8021040:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021044:	eb05 0a00 	add.w	sl, r5, r0
 8021048:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802104c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8021050:	00d2      	lsls	r2, r2, #3
 8021052:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8021056:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802105a:	ea49 0202 	orr.w	r2, r9, r2
 802105e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8021062:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8021066:	f824 2c02 	strh.w	r2, [r4, #-2]
 802106a:	e7c6      	b.n	8020ffa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 802106c:	4631      	mov	r1, r6
 802106e:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8021072:	e7c2      	b.n	8020ffa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8021074:	d111      	bne.n	802109a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 8021076:	7809      	ldrb	r1, [r1, #0]
 8021078:	0909      	lsrs	r1, r1, #4
 802107a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802107e:	186c      	adds	r4, r5, r1
 8021080:	5c69      	ldrb	r1, [r5, r1]
 8021082:	78a2      	ldrb	r2, [r4, #2]
 8021084:	7864      	ldrb	r4, [r4, #1]
 8021086:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802108a:	00e4      	lsls	r4, r4, #3
 802108c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8021090:	4322      	orrs	r2, r4
 8021092:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8021096:	f820 2b02 	strh.w	r2, [r0], #2
 802109a:	9a03      	ldr	r2, [sp, #12]
 802109c:	f8bc 4000 	ldrh.w	r4, [ip]
 80210a0:	9905      	ldr	r1, [sp, #20]
 80210a2:	1aa4      	subs	r4, r4, r2
 80210a4:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80210a8:	440a      	add	r2, r1
 80210aa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80210ae:	fb92 f2f8 	sdiv	r2, r2, r8
 80210b2:	4416      	add	r6, r2
 80210b4:	e780      	b.n	8020fb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 80210b6:	4b04      	ldr	r3, [pc, #16]	@ (80210c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80210b8:	6818      	ldr	r0, [r3, #0]
 80210ba:	6803      	ldr	r3, [r0, #0]
 80210bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80210be:	4798      	blx	r3
 80210c0:	b00f      	add	sp, #60	@ 0x3c
 80210c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80210c6:	bf00      	nop
 80210c8:	20016c88 	.word	0x20016c88
 80210cc:	20016c82 	.word	0x20016c82
 80210d0:	fffff800 	.word	0xfffff800

080210d4 <CRC_Lock>:
 80210d4:	4a20      	ldr	r2, [pc, #128]	@ (8021158 <CRC_Lock+0x84>)
 80210d6:	b530      	push	{r4, r5, lr}
 80210d8:	6813      	ldr	r3, [r2, #0]
 80210da:	f64f 74f0 	movw	r4, #65520	@ 0xfff0
 80210de:	f24c 2540 	movw	r5, #49728	@ 0xc240
 80210e2:	f023 0301 	bic.w	r3, r3, #1
 80210e6:	6013      	str	r3, [r2, #0]
 80210e8:	4b1c      	ldr	r3, [pc, #112]	@ (802115c <CRC_Lock+0x88>)
 80210ea:	681a      	ldr	r2, [r3, #0]
 80210ec:	4022      	ands	r2, r4
 80210ee:	42aa      	cmp	r2, r5
 80210f0:	d005      	beq.n	80210fe <CRC_Lock+0x2a>
 80210f2:	681b      	ldr	r3, [r3, #0]
 80210f4:	f24c 2270 	movw	r2, #49776	@ 0xc270
 80210f8:	4023      	ands	r3, r4
 80210fa:	4293      	cmp	r3, r2
 80210fc:	d124      	bne.n	8021148 <CRC_Lock+0x74>
 80210fe:	4b18      	ldr	r3, [pc, #96]	@ (8021160 <CRC_Lock+0x8c>)
 8021100:	681b      	ldr	r3, [r3, #0]
 8021102:	bb0b      	cbnz	r3, 8021148 <CRC_Lock+0x74>
 8021104:	4b17      	ldr	r3, [pc, #92]	@ (8021164 <CRC_Lock+0x90>)
 8021106:	681a      	ldr	r2, [r3, #0]
 8021108:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802110c:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8021110:	d00d      	beq.n	802112e <CRC_Lock+0x5a>
 8021112:	681a      	ldr	r2, [r3, #0]
 8021114:	f240 4483 	movw	r4, #1155	@ 0x483
 8021118:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802111c:	42a2      	cmp	r2, r4
 802111e:	d006      	beq.n	802112e <CRC_Lock+0x5a>
 8021120:	681b      	ldr	r3, [r3, #0]
 8021122:	f240 4285 	movw	r2, #1157	@ 0x485
 8021126:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802112a:	4293      	cmp	r3, r2
 802112c:	d10c      	bne.n	8021148 <CRC_Lock+0x74>
 802112e:	4b0e      	ldr	r3, [pc, #56]	@ (8021168 <CRC_Lock+0x94>)
 8021130:	2201      	movs	r2, #1
 8021132:	601a      	str	r2, [r3, #0]
 8021134:	681a      	ldr	r2, [r3, #0]
 8021136:	2a00      	cmp	r2, #0
 8021138:	d1fc      	bne.n	8021134 <CRC_Lock+0x60>
 802113a:	4b0c      	ldr	r3, [pc, #48]	@ (802116c <CRC_Lock+0x98>)
 802113c:	6018      	str	r0, [r3, #0]
 802113e:	6818      	ldr	r0, [r3, #0]
 8021140:	1a43      	subs	r3, r0, r1
 8021142:	4258      	negs	r0, r3
 8021144:	4158      	adcs	r0, r3
 8021146:	bd30      	pop	{r4, r5, pc}
 8021148:	4b09      	ldr	r3, [pc, #36]	@ (8021170 <CRC_Lock+0x9c>)
 802114a:	2201      	movs	r2, #1
 802114c:	601a      	str	r2, [r3, #0]
 802114e:	681a      	ldr	r2, [r3, #0]
 8021150:	2a00      	cmp	r2, #0
 8021152:	d1fc      	bne.n	802114e <CRC_Lock+0x7a>
 8021154:	4b07      	ldr	r3, [pc, #28]	@ (8021174 <CRC_Lock+0xa0>)
 8021156:	e7f1      	b.n	802113c <CRC_Lock+0x68>
 8021158:	e0002000 	.word	0xe0002000
 802115c:	e000ed00 	.word	0xe000ed00
 8021160:	e0042000 	.word	0xe0042000
 8021164:	5c001000 	.word	0x5c001000
 8021168:	58024c08 	.word	0x58024c08
 802116c:	58024c00 	.word	0x58024c00
 8021170:	40023008 	.word	0x40023008
 8021174:	40023000 	.word	0x40023000

08021178 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8021178:	6101      	str	r1, [r0, #16]
 802117a:	4770      	bx	lr

0802117c <_ZN8touchgfx8Gestures4tickEv>:
 802117c:	7b83      	ldrb	r3, [r0, #14]
 802117e:	b14b      	cbz	r3, 8021194 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8021180:	8903      	ldrh	r3, [r0, #8]
 8021182:	3301      	adds	r3, #1
 8021184:	b29b      	uxth	r3, r3
 8021186:	2b07      	cmp	r3, #7
 8021188:	8103      	strh	r3, [r0, #8]
 802118a:	bf81      	itttt	hi
 802118c:	2300      	movhi	r3, #0
 802118e:	8143      	strhhi	r3, [r0, #10]
 8021190:	8183      	strhhi	r3, [r0, #12]
 8021192:	7383      	strbhi	r3, [r0, #14]
 8021194:	4770      	bx	lr
	...

08021198 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8021198:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 802119c:	4698      	mov	r8, r3
 802119e:	8883      	ldrh	r3, [r0, #4]
 80211a0:	4604      	mov	r4, r0
 80211a2:	4617      	mov	r7, r2
 80211a4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80211a8:	eba8 0303 	sub.w	r3, r8, r3
 80211ac:	4a19      	ldr	r2, [pc, #100]	@ (8021214 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80211ae:	460e      	mov	r6, r1
 80211b0:	b21b      	sxth	r3, r3
 80211b2:	88c1      	ldrh	r1, [r0, #6]
 80211b4:	9200      	str	r2, [sp, #0]
 80211b6:	2000      	movs	r0, #0
 80211b8:	2b00      	cmp	r3, #0
 80211ba:	8aa2      	ldrh	r2, [r4, #20]
 80211bc:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 80211c0:	bfb8      	it	lt
 80211c2:	425b      	neglt	r3, r3
 80211c4:	f88d 0004 	strb.w	r0, [sp, #4]
 80211c8:	f8ad 1008 	strh.w	r1, [sp, #8]
 80211cc:	b21b      	sxth	r3, r3
 80211ce:	f8ad 800a 	strh.w	r8, [sp, #10]
 80211d2:	f8ad 500c 	strh.w	r5, [sp, #12]
 80211d6:	4293      	cmp	r3, r2
 80211d8:	dc07      	bgt.n	80211ea <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 80211da:	1a69      	subs	r1, r5, r1
 80211dc:	b209      	sxth	r1, r1
 80211de:	2900      	cmp	r1, #0
 80211e0:	bfb8      	it	lt
 80211e2:	4249      	neglt	r1, r1
 80211e4:	b209      	sxth	r1, r1
 80211e6:	428a      	cmp	r2, r1
 80211e8:	da10      	bge.n	802120c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 80211ea:	6920      	ldr	r0, [r4, #16]
 80211ec:	4669      	mov	r1, sp
 80211ee:	eba8 0606 	sub.w	r6, r8, r6
 80211f2:	1bef      	subs	r7, r5, r7
 80211f4:	6803      	ldr	r3, [r0, #0]
 80211f6:	685b      	ldr	r3, [r3, #4]
 80211f8:	4798      	blx	r3
 80211fa:	2300      	movs	r3, #0
 80211fc:	2001      	movs	r0, #1
 80211fe:	8166      	strh	r6, [r4, #10]
 8021200:	8123      	strh	r3, [r4, #8]
 8021202:	81a7      	strh	r7, [r4, #12]
 8021204:	f8a4 8004 	strh.w	r8, [r4, #4]
 8021208:	80e5      	strh	r5, [r4, #6]
 802120a:	73a0      	strb	r0, [r4, #14]
 802120c:	b004      	add	sp, #16
 802120e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021212:	bf00      	nop
 8021214:	08025724 	.word	0x08025724

08021218 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8021218:	b5f0      	push	{r4, r5, r6, r7, lr}
 802121a:	461e      	mov	r6, r3
 802121c:	1e4b      	subs	r3, r1, #1
 802121e:	b085      	sub	sp, #20
 8021220:	4604      	mov	r4, r0
 8021222:	2b01      	cmp	r3, #1
 8021224:	460d      	mov	r5, r1
 8021226:	4617      	mov	r7, r2
 8021228:	d84b      	bhi.n	80212c2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802122a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802122e:	1cd3      	adds	r3, r2, #3
 8021230:	b29b      	uxth	r3, r3
 8021232:	2b06      	cmp	r3, #6
 8021234:	d916      	bls.n	8021264 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8021236:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80212d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802123a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802123e:	f8cd c004 	str.w	ip, [sp, #4]
 8021242:	f04f 0c00 	mov.w	ip, #0
 8021246:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802124a:	6900      	ldr	r0, [r0, #16]
 802124c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8021250:	a901      	add	r1, sp, #4
 8021252:	f88d c008 	strb.w	ip, [sp, #8]
 8021256:	f8ad 200a 	strh.w	r2, [sp, #10]
 802125a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802125e:	6803      	ldr	r3, [r0, #0]
 8021260:	689b      	ldr	r3, [r3, #8]
 8021262:	4798      	blx	r3
 8021264:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021268:	1cd3      	adds	r3, r2, #3
 802126a:	b29b      	uxth	r3, r3
 802126c:	2b06      	cmp	r3, #6
 802126e:	d916      	bls.n	802129e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8021270:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80212d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8021274:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021278:	f8cd c004 	str.w	ip, [sp, #4]
 802127c:	f04f 0c01 	mov.w	ip, #1
 8021280:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8021284:	6920      	ldr	r0, [r4, #16]
 8021286:	f8ad 100c 	strh.w	r1, [sp, #12]
 802128a:	a901      	add	r1, sp, #4
 802128c:	f88d c008 	strb.w	ip, [sp, #8]
 8021290:	f8ad 200a 	strh.w	r2, [sp, #10]
 8021294:	f8ad 300e 	strh.w	r3, [sp, #14]
 8021298:	6803      	ldr	r3, [r0, #0]
 802129a:	689b      	ldr	r3, [r3, #8]
 802129c:	4798      	blx	r3
 802129e:	4b0d      	ldr	r3, [pc, #52]	@ (80212d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80212a0:	a901      	add	r1, sp, #4
 80212a2:	6920      	ldr	r0, [r4, #16]
 80212a4:	9301      	str	r3, [sp, #4]
 80212a6:	2300      	movs	r3, #0
 80212a8:	f88d 5008 	strb.w	r5, [sp, #8]
 80212ac:	f8ad 700a 	strh.w	r7, [sp, #10]
 80212b0:	f8ad 600c 	strh.w	r6, [sp, #12]
 80212b4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80212b8:	6803      	ldr	r3, [r0, #0]
 80212ba:	681b      	ldr	r3, [r3, #0]
 80212bc:	4798      	blx	r3
 80212be:	b005      	add	sp, #20
 80212c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80212c2:	2900      	cmp	r1, #0
 80212c4:	d1eb      	bne.n	802129e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80212c6:	80a2      	strh	r2, [r4, #4]
 80212c8:	80c6      	strh	r6, [r0, #6]
 80212ca:	60a1      	str	r1, [r4, #8]
 80212cc:	81a1      	strh	r1, [r4, #12]
 80212ce:	73a1      	strb	r1, [r4, #14]
 80212d0:	e7e5      	b.n	802129e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80212d2:	bf00      	nop
 80212d4:	08025710 	.word	0x08025710
 80212d8:	08025738 	.word	0x08025738

080212dc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 80212dc:	10c9      	asrs	r1, r1, #3
 80212de:	2900      	cmp	r1, #0
 80212e0:	bfb8      	it	lt
 80212e2:	4249      	neglt	r1, r1
 80212e4:	2801      	cmp	r0, #1
 80212e6:	d108      	bne.n	80212fa <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 80212e8:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80212ec:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 80212f0:	4601      	mov	r1, r0
 80212f2:	dd02      	ble.n	80212fa <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 80212f4:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 80212f8:	4770      	bx	lr
 80212fa:	29ff      	cmp	r1, #255	@ 0xff
 80212fc:	bfa8      	it	ge
 80212fe:	21ff      	movge	r1, #255	@ 0xff
 8021300:	4608      	mov	r0, r1
 8021302:	4770      	bx	lr

08021304 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8021304:	b410      	push	{r4}
 8021306:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802130a:	429c      	cmp	r4, r3
 802130c:	d803      	bhi.n	8021316 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802130e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021312:	f7ed bbfd 	b.w	800eb10 <_ZN8touchgfx7Outline6lineToEii>
 8021316:	f85d 4b04 	ldr.w	r4, [sp], #4
 802131a:	4770      	bx	lr

0802131c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 802131c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021320:	b08b      	sub	sp, #44	@ 0x2c
 8021322:	4606      	mov	r6, r0
 8021324:	468a      	mov	sl, r1
 8021326:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802132a:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 802132e:	9308      	str	r3, [sp, #32]
 8021330:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8021334:	9309      	str	r3, [sp, #36]	@ 0x24
 8021336:	f7ed fd56 	bl	800ede6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802133a:	68b5      	ldr	r5, [r6, #8]
 802133c:	4604      	mov	r4, r0
 802133e:	2d00      	cmp	r5, #0
 8021340:	d044      	beq.n	80213cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8021342:	6873      	ldr	r3, [r6, #4]
 8021344:	42ab      	cmp	r3, r5
 8021346:	d33d      	bcc.n	80213c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8021348:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 802134c:	f04f 0800 	mov.w	r8, #0
 8021350:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8021354:	eb02 0b03 	add.w	fp, r2, r3
 8021358:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 802135c:	fb02 1203 	mla	r2, r2, r3, r1
 8021360:	9205      	str	r2, [sp, #20]
 8021362:	1e6a      	subs	r2, r5, #1
 8021364:	9204      	str	r2, [sp, #16]
 8021366:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802136a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802136e:	454b      	cmp	r3, r9
 8021370:	463a      	mov	r2, r7
 8021372:	d008      	beq.n	8021386 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8021374:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 8021378:	eb03 0b09 	add.w	fp, r3, r9
 802137c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8021380:	fb03 1309 	mla	r3, r3, r9, r1
 8021384:	9305      	str	r3, [sp, #20]
 8021386:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802138a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802138e:	4498      	add	r8, r3
 8021390:	9b04      	ldr	r3, [sp, #16]
 8021392:	3b01      	subs	r3, #1
 8021394:	9304      	str	r3, [sp, #16]
 8021396:	9b04      	ldr	r3, [sp, #16]
 8021398:	3301      	adds	r3, #1
 802139a:	d015      	beq.n	80213c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 802139c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 80213a0:	42bb      	cmp	r3, r7
 80213a2:	d117      	bne.n	80213d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80213a4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80213a8:	9b04      	ldr	r3, [sp, #16]
 80213aa:	4548      	cmp	r0, r9
 80213ac:	f103 33ff 	add.w	r3, r3, #4294967295
 80213b0:	d17d      	bne.n	80214ae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
 80213b2:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80213b6:	4401      	add	r1, r0
 80213b8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80213bc:	4480      	add	r8, r0
 80213be:	e7e9      	b.n	8021394 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80213c0:	461f      	mov	r7, r3
 80213c2:	e042      	b.n	802144a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
 80213c4:	2000      	movs	r0, #0
 80213c6:	e002      	b.n	80213ce <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80213c8:	2900      	cmp	r1, #0
 80213ca:	d16d      	bne.n	80214a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80213cc:	2001      	movs	r0, #1
 80213ce:	b00b      	add	sp, #44	@ 0x2c
 80213d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80213d4:	b379      	cbz	r1, 8021436 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
 80213d6:	2f00      	cmp	r7, #0
 80213d8:	db29      	blt.n	802142e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 80213da:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 80213de:	42bb      	cmp	r3, r7
 80213e0:	dd25      	ble.n	802142e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 80213e2:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80213e6:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 80213ea:	f7ff ff77 	bl	80212dc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 80213ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80213f0:	fb10 f003 	smulbb	r0, r0, r3
 80213f4:	b280      	uxth	r0, r0
 80213f6:	1c41      	adds	r1, r0, #1
 80213f8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80213fc:	1209      	asrs	r1, r1, #8
 80213fe:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8021402:	d014      	beq.n	802142e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 8021404:	b2c9      	uxtb	r1, r1
 8021406:	9808      	ldr	r0, [sp, #32]
 8021408:	b2ba      	uxth	r2, r7
 802140a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 802140c:	9102      	str	r1, [sp, #8]
 802140e:	2101      	movs	r1, #1
 8021410:	4413      	add	r3, r2
 8021412:	4402      	add	r2, r0
 8021414:	9101      	str	r1, [sp, #4]
 8021416:	fa0f f18b 	sxth.w	r1, fp
 802141a:	f8da 0000 	ldr.w	r0, [sl]
 802141e:	b21b      	sxth	r3, r3
 8021420:	9100      	str	r1, [sp, #0]
 8021422:	b212      	sxth	r2, r2
 8021424:	6941      	ldr	r1, [r0, #20]
 8021426:	4650      	mov	r0, sl
 8021428:	460d      	mov	r5, r1
 802142a:	9905      	ldr	r1, [sp, #20]
 802142c:	47a8      	blx	r5
 802142e:	9b04      	ldr	r3, [sp, #16]
 8021430:	1c7a      	adds	r2, r7, #1
 8021432:	3301      	adds	r3, #1
 8021434:	d0ca      	beq.n	80213cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8021436:	f9b4 7000 	ldrsh.w	r7, [r4]
 802143a:	1abb      	subs	r3, r7, r2
 802143c:	2b00      	cmp	r3, #0
 802143e:	dd31      	ble.n	80214a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8021440:	2a00      	cmp	r2, #0
 8021442:	dabd      	bge.n	80213c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8021444:	2f00      	cmp	r7, #0
 8021446:	dd2d      	ble.n	80214a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8021448:	2200      	movs	r2, #0
 802144a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 802144e:	19d1      	adds	r1, r2, r7
 8021450:	4299      	cmp	r1, r3
 8021452:	db02      	blt.n	802145a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
 8021454:	1a9f      	subs	r7, r3, r2
 8021456:	2f00      	cmp	r7, #0
 8021458:	dd24      	ble.n	80214a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 802145a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802145e:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8021462:	f7ff ff3b 	bl	80212dc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8021466:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021468:	fb10 f003 	smulbb	r0, r0, r3
 802146c:	b280      	uxth	r0, r0
 802146e:	1c41      	adds	r1, r0, #1
 8021470:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021474:	1209      	asrs	r1, r1, #8
 8021476:	f011 0fff 	tst.w	r1, #255	@ 0xff
 802147a:	d013      	beq.n	80214a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 802147c:	b292      	uxth	r2, r2
 802147e:	9808      	ldr	r0, [sp, #32]
 8021480:	b2c9      	uxtb	r1, r1
 8021482:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8021484:	b23f      	sxth	r7, r7
 8021486:	4413      	add	r3, r2
 8021488:	9102      	str	r1, [sp, #8]
 802148a:	4402      	add	r2, r0
 802148c:	fa0f f18b 	sxth.w	r1, fp
 8021490:	f8da 0000 	ldr.w	r0, [sl]
 8021494:	b21b      	sxth	r3, r3
 8021496:	9100      	str	r1, [sp, #0]
 8021498:	b212      	sxth	r2, r2
 802149a:	9701      	str	r7, [sp, #4]
 802149c:	9905      	ldr	r1, [sp, #20]
 802149e:	6947      	ldr	r7, [r0, #20]
 80214a0:	4650      	mov	r0, sl
 80214a2:	47b8      	blx	r7
 80214a4:	464b      	mov	r3, r9
 80214a6:	e75e      	b.n	8021366 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80214a8:	2f00      	cmp	r7, #0
 80214aa:	da96      	bge.n	80213da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
 80214ac:	e78e      	b.n	80213cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80214ae:	2900      	cmp	r1, #0
 80214b0:	d0f8      	beq.n	80214a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 80214b2:	e790      	b.n	80213d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

080214b4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 80214b4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80214b8:	461e      	mov	r6, r3
 80214ba:	4b36      	ldr	r3, [pc, #216]	@ (8021594 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 80214bc:	2500      	movs	r5, #0
 80214be:	f100 0814 	add.w	r8, r0, #20
 80214c2:	4604      	mov	r4, r0
 80214c4:	4617      	mov	r7, r2
 80214c6:	e9c0 3100 	strd	r3, r1, [r0]
 80214ca:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80214ce:	8185      	strh	r5, [r0, #12]
 80214d0:	8103      	strh	r3, [r0, #8]
 80214d2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80214d6:	81c5      	strh	r5, [r0, #14]
 80214d8:	7283      	strb	r3, [r0, #10]
 80214da:	8205      	strh	r5, [r0, #16]
 80214dc:	8245      	strh	r5, [r0, #18]
 80214de:	4640      	mov	r0, r8
 80214e0:	f7ec fe5c 	bl	800e19c <_ZN8touchgfx7OutlineC1Ev>
 80214e4:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 80214e8:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 80214ec:	466b      	mov	r3, sp
 80214ee:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 80214f2:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 80214f6:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 80214fa:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 80214fe:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8021502:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8021506:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 802150a:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 802150e:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8021512:	6830      	ldr	r0, [r6, #0]
 8021514:	6871      	ldr	r1, [r6, #4]
 8021516:	8872      	ldrh	r2, [r6, #2]
 8021518:	8835      	ldrh	r5, [r6, #0]
 802151a:	c303      	stmia	r3!, {r0, r1}
 802151c:	887b      	ldrh	r3, [r7, #2]
 802151e:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 8021522:	4413      	add	r3, r2
 8021524:	883a      	ldrh	r2, [r7, #0]
 8021526:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 802152a:	442a      	add	r2, r5
 802152c:	81e3      	strh	r3, [r4, #14]
 802152e:	8220      	strh	r0, [r4, #16]
 8021530:	4668      	mov	r0, sp
 8021532:	81a2      	strh	r2, [r4, #12]
 8021534:	8261      	strh	r1, [r4, #18]
 8021536:	4639      	mov	r1, r7
 8021538:	f7ef f81c 	bl	8010574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802153c:	f104 000c 	add.w	r0, r4, #12
 8021540:	f7ee fff0 	bl	8010524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021544:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8021548:	f8bd 2000 	ldrh.w	r2, [sp]
 802154c:	4640      	mov	r0, r8
 802154e:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8021552:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8021556:	f7ec fe05 	bl	800e164 <_ZN8touchgfx7Outline5resetEv>
 802155a:	f9bd 3000 	ldrsh.w	r3, [sp]
 802155e:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 8021562:	4620      	mov	r0, r4
 8021564:	015b      	lsls	r3, r3, #5
 8021566:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8021568:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802156c:	015b      	lsls	r3, r3, #5
 802156e:	6523      	str	r3, [r4, #80]	@ 0x50
 8021570:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8021574:	015b      	lsls	r3, r3, #5
 8021576:	6563      	str	r3, [r4, #84]	@ 0x54
 8021578:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802157c:	015b      	lsls	r3, r3, #5
 802157e:	65a3      	str	r3, [r4, #88]	@ 0x58
 8021580:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8021584:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8021588:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 802158c:	b002      	add	sp, #8
 802158e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021592:	bf00      	nop
 8021594:	08025a5c 	.word	0x08025a5c

08021598 <_ZN8touchgfx6Canvas5closeEv>:
 8021598:	b538      	push	{r3, r4, r5, lr}
 802159a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802159e:	4604      	mov	r4, r0
 80215a0:	b193      	cbz	r3, 80215c8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80215a2:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 80215a6:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 80215aa:	4213      	tst	r3, r2
 80215ac:	d10c      	bne.n	80215c8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80215ae:	f100 0514 	add.w	r5, r0, #20
 80215b2:	b123      	cbz	r3, 80215be <_ZN8touchgfx6Canvas5closeEv+0x26>
 80215b4:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 80215b8:	4628      	mov	r0, r5
 80215ba:	f7ff fea3 	bl	8021304 <_ZN8touchgfx10Rasterizer6lineToEii>
 80215be:	4628      	mov	r0, r5
 80215c0:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 80215c4:	f7ff fe9e 	bl	8021304 <_ZN8touchgfx10Rasterizer6lineToEii>
 80215c8:	2300      	movs	r3, #0
 80215ca:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80215ce:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 80215d2:	4298      	cmp	r0, r3
 80215d4:	bf34      	ite	cc
 80215d6:	2000      	movcc	r0, #0
 80215d8:	2001      	movcs	r0, #1
 80215da:	bd38      	pop	{r3, r4, r5, pc}

080215dc <_ZN8touchgfx6Canvas6renderEh>:
 80215dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80215e0:	7a85      	ldrb	r5, [r0, #10]
 80215e2:	4604      	mov	r4, r0
 80215e4:	4369      	muls	r1, r5
 80215e6:	1c4d      	adds	r5, r1, #1
 80215e8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80215ec:	122d      	asrs	r5, r5, #8
 80215ee:	f000 8098 	beq.w	8021722 <_ZN8touchgfx6Canvas6renderEh+0x146>
 80215f2:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 80215f6:	2b00      	cmp	r3, #0
 80215f8:	f000 8093 	beq.w	8021722 <_ZN8touchgfx6Canvas6renderEh+0x146>
 80215fc:	f7ff ffcc 	bl	8021598 <_ZN8touchgfx6Canvas5closeEv>
 8021600:	4607      	mov	r7, r0
 8021602:	2800      	cmp	r0, #0
 8021604:	d045      	beq.n	8021692 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8021606:	6860      	ldr	r0, [r4, #4]
 8021608:	4e47      	ldr	r6, [pc, #284]	@ (8021728 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 802160a:	6803      	ldr	r3, [r0, #0]
 802160c:	6837      	ldr	r7, [r6, #0]
 802160e:	689b      	ldr	r3, [r3, #8]
 8021610:	4798      	blx	r3
 8021612:	4601      	mov	r1, r0
 8021614:	4638      	mov	r0, r7
 8021616:	f7e9 ffdd 	bl	800b5d4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802161a:	4607      	mov	r7, r0
 802161c:	f7e0 ff88 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 8021620:	6803      	ldr	r3, [r0, #0]
 8021622:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021624:	4798      	blx	r3
 8021626:	4680      	mov	r8, r0
 8021628:	f7e0 ff82 	bl	8002530 <_ZN8touchgfx3HAL3lcdEv>
 802162c:	6803      	ldr	r3, [r0, #0]
 802162e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021630:	4798      	blx	r3
 8021632:	280b      	cmp	r0, #11
 8021634:	d85a      	bhi.n	80216ec <_ZN8touchgfx6Canvas6renderEh+0x110>
 8021636:	e8df f000 	tbb	[pc, r0]
 802163a:	5b50      	.short	0x5b50
 802163c:	3059066b 	.word	0x3059066b
 8021640:	64646440 	.word	0x64646440
 8021644:	6464      	.short	0x6464
 8021646:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802164a:	2208      	movs	r2, #8
 802164c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021650:	fb91 f2f2 	sdiv	r2, r1, r2
 8021654:	fb08 2303 	mla	r3, r8, r3, r2
 8021658:	441f      	add	r7, r3
 802165a:	424b      	negs	r3, r1
 802165c:	f001 0107 	and.w	r1, r1, #7
 8021660:	f003 0307 	and.w	r3, r3, #7
 8021664:	bf58      	it	pl
 8021666:	4259      	negpl	r1, r3
 8021668:	b2c9      	uxtb	r1, r1
 802166a:	b2ed      	uxtb	r5, r5
 802166c:	463a      	mov	r2, r7
 802166e:	fa0f f388 	sxth.w	r3, r8
 8021672:	f104 0014 	add.w	r0, r4, #20
 8021676:	e9cd 1500 	strd	r1, r5, [sp]
 802167a:	6861      	ldr	r1, [r4, #4]
 802167c:	f7ff fe4e 	bl	802131c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8021680:	4607      	mov	r7, r0
 8021682:	6860      	ldr	r0, [r4, #4]
 8021684:	6803      	ldr	r3, [r0, #0]
 8021686:	691b      	ldr	r3, [r3, #16]
 8021688:	4798      	blx	r3
 802168a:	6830      	ldr	r0, [r6, #0]
 802168c:	6803      	ldr	r3, [r0, #0]
 802168e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021690:	4798      	blx	r3
 8021692:	4638      	mov	r0, r7
 8021694:	b002      	add	sp, #8
 8021696:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802169a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802169e:	2204      	movs	r2, #4
 80216a0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80216a4:	fb91 f2f2 	sdiv	r2, r1, r2
 80216a8:	fb08 2303 	mla	r3, r8, r3, r2
 80216ac:	441f      	add	r7, r3
 80216ae:	424b      	negs	r3, r1
 80216b0:	f001 0103 	and.w	r1, r1, #3
 80216b4:	f003 0303 	and.w	r3, r3, #3
 80216b8:	e7d4      	b.n	8021664 <_ZN8touchgfx6Canvas6renderEh+0x88>
 80216ba:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80216be:	2202      	movs	r2, #2
 80216c0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80216c4:	2900      	cmp	r1, #0
 80216c6:	fb91 f2f2 	sdiv	r2, r1, r2
 80216ca:	f001 0101 	and.w	r1, r1, #1
 80216ce:	fb08 2303 	mla	r3, r8, r3, r2
 80216d2:	bfb8      	it	lt
 80216d4:	4249      	neglt	r1, r1
 80216d6:	441f      	add	r7, r3
 80216d8:	e7c6      	b.n	8021668 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 80216da:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80216de:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80216e2:	fb08 f303 	mul.w	r3, r8, r3
 80216e6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80216ea:	441f      	add	r7, r3
 80216ec:	2100      	movs	r1, #0
 80216ee:	e7bc      	b.n	802166a <_ZN8touchgfx6Canvas6renderEh+0x8e>
 80216f0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80216f4:	2103      	movs	r1, #3
 80216f6:	fb08 f203 	mul.w	r2, r8, r3
 80216fa:	89a3      	ldrh	r3, [r4, #12]
 80216fc:	fb13 2301 	smlabb	r3, r3, r1, r2
 8021700:	e7f3      	b.n	80216ea <_ZN8touchgfx6Canvas6renderEh+0x10e>
 8021702:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021706:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802170a:	fb08 2303 	mla	r3, r8, r3, r2
 802170e:	e7ec      	b.n	80216ea <_ZN8touchgfx6Canvas6renderEh+0x10e>
 8021710:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021714:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021718:	fb08 f303 	mul.w	r3, r8, r3
 802171c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8021720:	e7e3      	b.n	80216ea <_ZN8touchgfx6Canvas6renderEh+0x10e>
 8021722:	2701      	movs	r7, #1
 8021724:	e7b5      	b.n	8021692 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8021726:	bf00      	nop
 8021728:	20016c88 	.word	0x20016c88

0802172c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802172c:	4b06      	ldr	r3, [pc, #24]	@ (8021748 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 802172e:	b510      	push	{r4, lr}
 8021730:	781b      	ldrb	r3, [r3, #0]
 8021732:	2b01      	cmp	r3, #1
 8021734:	d107      	bne.n	8021746 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 8021736:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 802173a:	680b      	ldr	r3, [r1, #0]
 802173c:	6814      	ldr	r4, [r2, #0]
 802173e:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8021742:	6013      	str	r3, [r2, #0]
 8021744:	600c      	str	r4, [r1, #0]
 8021746:	bd10      	pop	{r4, pc}
 8021748:	20016c80 	.word	0x20016c80

0802174c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802174c:	b513      	push	{r0, r1, r4, lr}
 802174e:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8021752:	4604      	mov	r4, r0
 8021754:	e9cd 2100 	strd	r2, r1, [sp]
 8021758:	b9a3      	cbnz	r3, 8021784 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802175a:	466a      	mov	r2, sp
 802175c:	a901      	add	r1, sp, #4
 802175e:	4620      	mov	r0, r4
 8021760:	f7ff ffe4 	bl	802172c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8021764:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8021766:	9901      	ldr	r1, [sp, #4]
 8021768:	9a00      	ldr	r2, [sp, #0]
 802176a:	1ac9      	subs	r1, r1, r3
 802176c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802176e:	1ad2      	subs	r2, r2, r3
 8021770:	9101      	str	r1, [sp, #4]
 8021772:	2a00      	cmp	r2, #0
 8021774:	9200      	str	r2, [sp, #0]
 8021776:	da0b      	bge.n	8021790 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8021778:	2301      	movs	r3, #1
 802177a:	2900      	cmp	r1, #0
 802177c:	da0e      	bge.n	802179c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802177e:	f043 0304 	orr.w	r3, r3, #4
 8021782:	e013      	b.n	80217ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8021784:	f7ff ff08 	bl	8021598 <_ZN8touchgfx6Canvas5closeEv>
 8021788:	2800      	cmp	r0, #0
 802178a:	d1e6      	bne.n	802175a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802178c:	b002      	add	sp, #8
 802178e:	bd10      	pop	{r4, pc}
 8021790:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8021792:	429a      	cmp	r2, r3
 8021794:	bfac      	ite	ge
 8021796:	2302      	movge	r3, #2
 8021798:	2300      	movlt	r3, #0
 802179a:	e7ee      	b.n	802177a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802179c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 802179e:	4281      	cmp	r1, r0
 80217a0:	bfac      	ite	ge
 80217a2:	2008      	movge	r0, #8
 80217a4:	2000      	movlt	r0, #0
 80217a6:	4318      	orrs	r0, r3
 80217a8:	b2c3      	uxtb	r3, r0
 80217aa:	b158      	cbz	r0, 80217c4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80217ac:	2200      	movs	r2, #0
 80217ae:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 80217b2:	9901      	ldr	r1, [sp, #4]
 80217b4:	9a00      	ldr	r2, [sp, #0]
 80217b6:	66e1      	str	r1, [r4, #108]	@ 0x6c
 80217b8:	6722      	str	r2, [r4, #112]	@ 0x70
 80217ba:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 80217be:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 80217c2:	e7e3      	b.n	802178c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80217c4:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 80217c8:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 80217cc:	4298      	cmp	r0, r3
 80217ce:	d803      	bhi.n	80217d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80217d0:	f104 0014 	add.w	r0, r4, #20
 80217d4:	f7ed f9b6 	bl	800eb44 <_ZN8touchgfx7Outline6moveToEii>
 80217d8:	2301      	movs	r3, #1
 80217da:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80217de:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 80217e2:	2300      	movs	r3, #0
 80217e4:	e7e5      	b.n	80217b2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080217e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80217e6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80217e8:	ab02      	add	r3, sp, #8
 80217ea:	4604      	mov	r4, r0
 80217ec:	9101      	str	r1, [sp, #4]
 80217ee:	a901      	add	r1, sp, #4
 80217f0:	f843 2d08 	str.w	r2, [r3, #-8]!
 80217f4:	461a      	mov	r2, r3
 80217f6:	f7ff ff99 	bl	802172c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80217fa:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80217fc:	9901      	ldr	r1, [sp, #4]
 80217fe:	9a00      	ldr	r2, [sp, #0]
 8021800:	1ac9      	subs	r1, r1, r3
 8021802:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8021804:	1ad2      	subs	r2, r2, r3
 8021806:	9101      	str	r1, [sp, #4]
 8021808:	2a00      	cmp	r2, #0
 802180a:	9200      	str	r2, [sp, #0]
 802180c:	db1c      	blt.n	8021848 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802180e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8021810:	429a      	cmp	r2, r3
 8021812:	bfac      	ite	ge
 8021814:	2002      	movge	r0, #2
 8021816:	2000      	movlt	r0, #0
 8021818:	2900      	cmp	r1, #0
 802181a:	db17      	blt.n	802184c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802181c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 802181e:	4299      	cmp	r1, r3
 8021820:	bfac      	ite	ge
 8021822:	2308      	movge	r3, #8
 8021824:	2300      	movlt	r3, #0
 8021826:	4303      	orrs	r3, r0
 8021828:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 802182c:	b2dd      	uxtb	r5, r3
 802182e:	b978      	cbnz	r0, 8021850 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8021830:	f104 0014 	add.w	r0, r4, #20
 8021834:	f7ff fd66 	bl	8021304 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021838:	9b01      	ldr	r3, [sp, #4]
 802183a:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 802183e:	6623      	str	r3, [r4, #96]	@ 0x60
 8021840:	9b00      	ldr	r3, [sp, #0]
 8021842:	6663      	str	r3, [r4, #100]	@ 0x64
 8021844:	b002      	add	sp, #8
 8021846:	bd70      	pop	{r4, r5, r6, pc}
 8021848:	2001      	movs	r0, #1
 802184a:	e7e5      	b.n	8021818 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802184c:	2304      	movs	r3, #4
 802184e:	e7ea      	b.n	8021826 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8021850:	b113      	cbz	r3, 8021858 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8021852:	ea10 0305 	ands.w	r3, r0, r5
 8021856:	d11c      	bne.n	8021892 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8021858:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 802185c:	f104 0614 	add.w	r6, r4, #20
 8021860:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8021864:	b98b      	cbnz	r3, 802188a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8021866:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 802186a:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802186e:	4298      	cmp	r0, r3
 8021870:	d802      	bhi.n	8021878 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8021872:	4630      	mov	r0, r6
 8021874:	f7ed f966 	bl	800eb44 <_ZN8touchgfx7Outline6moveToEii>
 8021878:	2301      	movs	r3, #1
 802187a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802187e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8021882:	4630      	mov	r0, r6
 8021884:	e9dd 2100 	ldrd	r2, r1, [sp]
 8021888:	e7d4      	b.n	8021834 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802188a:	4630      	mov	r0, r6
 802188c:	f7ff fd3a 	bl	8021304 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021890:	e7f7      	b.n	8021882 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8021892:	461d      	mov	r5, r3
 8021894:	e7d0      	b.n	8021838 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08021898 <_ZN8touchgfx6CanvasD1Ev>:
 8021898:	4b04      	ldr	r3, [pc, #16]	@ (80218ac <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802189a:	b510      	push	{r4, lr}
 802189c:	4604      	mov	r4, r0
 802189e:	f840 3b14 	str.w	r3, [r0], #20
 80218a2:	f7ec fc57 	bl	800e154 <_ZN8touchgfx7OutlineD1Ev>
 80218a6:	4620      	mov	r0, r4
 80218a8:	bd10      	pop	{r4, pc}
 80218aa:	bf00      	nop
 80218ac:	08025a5c 	.word	0x08025a5c

080218b0 <_ZN8touchgfx6CanvasD0Ev>:
 80218b0:	b510      	push	{r4, lr}
 80218b2:	4604      	mov	r4, r0
 80218b4:	f7ff fff0 	bl	8021898 <_ZN8touchgfx6CanvasD1Ev>
 80218b8:	2174      	movs	r1, #116	@ 0x74
 80218ba:	4620      	mov	r0, r4
 80218bc:	f000 f826 	bl	802190c <_ZdlPvj>
 80218c0:	4620      	mov	r0, r4
 80218c2:	bd10      	pop	{r4, pc}

080218c4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80218c4:	790b      	ldrb	r3, [r1, #4]
 80218c6:	2b00      	cmp	r3, #0
 80218c8:	bf0c      	ite	eq
 80218ca:	2301      	moveq	r3, #1
 80218cc:	2300      	movne	r3, #0
 80218ce:	b570      	push	{r4, r5, r6, lr}
 80218d0:	4604      	mov	r4, r0
 80218d2:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 80218d6:	460e      	mov	r6, r1
 80218d8:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 80218dc:	d109      	bne.n	80218f2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80218de:	b14d      	cbz	r5, 80218f4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80218e0:	7933      	ldrb	r3, [r6, #4]
 80218e2:	2b01      	cmp	r3, #1
 80218e4:	d10c      	bne.n	8021900 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80218e6:	6823      	ldr	r3, [r4, #0]
 80218e8:	4620      	mov	r0, r4
 80218ea:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80218ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80218f0:	4718      	bx	r3
 80218f2:	b12d      	cbz	r5, 8021900 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80218f4:	6823      	ldr	r3, [r4, #0]
 80218f6:	4620      	mov	r0, r4
 80218f8:	695b      	ldr	r3, [r3, #20]
 80218fa:	4798      	blx	r3
 80218fc:	2d00      	cmp	r5, #0
 80218fe:	d1ef      	bne.n	80218e0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8021900:	bd70      	pop	{r4, r5, r6, pc}

08021902 <__aeabi_atexit>:
 8021902:	460b      	mov	r3, r1
 8021904:	4601      	mov	r1, r0
 8021906:	4618      	mov	r0, r3
 8021908:	f000 be4c 	b.w	80225a4 <__cxa_atexit>

0802190c <_ZdlPvj>:
 802190c:	f000 b812 	b.w	8021934 <_ZdlPv>

08021910 <__cxa_guard_acquire>:
 8021910:	6802      	ldr	r2, [r0, #0]
 8021912:	07d2      	lsls	r2, r2, #31
 8021914:	4603      	mov	r3, r0
 8021916:	d405      	bmi.n	8021924 <__cxa_guard_acquire+0x14>
 8021918:	7842      	ldrb	r2, [r0, #1]
 802191a:	b102      	cbz	r2, 802191e <__cxa_guard_acquire+0xe>
 802191c:	deff      	udf	#255	@ 0xff
 802191e:	2001      	movs	r0, #1
 8021920:	7058      	strb	r0, [r3, #1]
 8021922:	4770      	bx	lr
 8021924:	2000      	movs	r0, #0
 8021926:	4770      	bx	lr

08021928 <__cxa_guard_release>:
 8021928:	2301      	movs	r3, #1
 802192a:	6003      	str	r3, [r0, #0]
 802192c:	4770      	bx	lr

0802192e <__cxa_pure_virtual>:
 802192e:	b508      	push	{r3, lr}
 8021930:	f000 f80e 	bl	8021950 <_ZSt9terminatev>

08021934 <_ZdlPv>:
 8021934:	f000 bd80 	b.w	8022438 <free>

08021938 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8021938:	b508      	push	{r3, lr}
 802193a:	4780      	blx	r0
 802193c:	f000 fd48 	bl	80223d0 <abort>

08021940 <_ZSt13get_terminatev>:
 8021940:	4b02      	ldr	r3, [pc, #8]	@ (802194c <_ZSt13get_terminatev+0xc>)
 8021942:	6818      	ldr	r0, [r3, #0]
 8021944:	f3bf 8f5b 	dmb	ish
 8021948:	4770      	bx	lr
 802194a:	bf00      	nop
 802194c:	200000c0 	.word	0x200000c0

08021950 <_ZSt9terminatev>:
 8021950:	b508      	push	{r3, lr}
 8021952:	f7ff fff5 	bl	8021940 <_ZSt13get_terminatev>
 8021956:	f7ff ffef 	bl	8021938 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802195c <sinf>:
 802195c:	ee10 3a10 	vmov	r3, s0
 8021960:	b507      	push	{r0, r1, r2, lr}
 8021962:	4a1f      	ldr	r2, [pc, #124]	@ (80219e0 <sinf+0x84>)
 8021964:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021968:	4293      	cmp	r3, r2
 802196a:	d807      	bhi.n	802197c <sinf+0x20>
 802196c:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 80219e4 <sinf+0x88>
 8021970:	2000      	movs	r0, #0
 8021972:	b003      	add	sp, #12
 8021974:	f85d eb04 	ldr.w	lr, [sp], #4
 8021978:	f000 b88e 	b.w	8021a98 <__kernel_sinf>
 802197c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021980:	d304      	bcc.n	802198c <sinf+0x30>
 8021982:	ee30 0a40 	vsub.f32	s0, s0, s0
 8021986:	b003      	add	sp, #12
 8021988:	f85d fb04 	ldr.w	pc, [sp], #4
 802198c:	4668      	mov	r0, sp
 802198e:	f000 f8cb 	bl	8021b28 <__ieee754_rem_pio2f>
 8021992:	f000 0003 	and.w	r0, r0, #3
 8021996:	2801      	cmp	r0, #1
 8021998:	d00a      	beq.n	80219b0 <sinf+0x54>
 802199a:	2802      	cmp	r0, #2
 802199c:	d00f      	beq.n	80219be <sinf+0x62>
 802199e:	b9c0      	cbnz	r0, 80219d2 <sinf+0x76>
 80219a0:	eddd 0a01 	vldr	s1, [sp, #4]
 80219a4:	ed9d 0a00 	vldr	s0, [sp]
 80219a8:	2001      	movs	r0, #1
 80219aa:	f000 f875 	bl	8021a98 <__kernel_sinf>
 80219ae:	e7ea      	b.n	8021986 <sinf+0x2a>
 80219b0:	eddd 0a01 	vldr	s1, [sp, #4]
 80219b4:	ed9d 0a00 	vldr	s0, [sp]
 80219b8:	f000 f816 	bl	80219e8 <__kernel_cosf>
 80219bc:	e7e3      	b.n	8021986 <sinf+0x2a>
 80219be:	eddd 0a01 	vldr	s1, [sp, #4]
 80219c2:	ed9d 0a00 	vldr	s0, [sp]
 80219c6:	2001      	movs	r0, #1
 80219c8:	f000 f866 	bl	8021a98 <__kernel_sinf>
 80219cc:	eeb1 0a40 	vneg.f32	s0, s0
 80219d0:	e7d9      	b.n	8021986 <sinf+0x2a>
 80219d2:	eddd 0a01 	vldr	s1, [sp, #4]
 80219d6:	ed9d 0a00 	vldr	s0, [sp]
 80219da:	f000 f805 	bl	80219e8 <__kernel_cosf>
 80219de:	e7f5      	b.n	80219cc <sinf+0x70>
 80219e0:	3f490fd8 	.word	0x3f490fd8
 80219e4:	00000000 	.word	0x00000000

080219e8 <__kernel_cosf>:
 80219e8:	ee10 3a10 	vmov	r3, s0
 80219ec:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80219f0:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80219f4:	eef0 6a40 	vmov.f32	s13, s0
 80219f8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80219fc:	d204      	bcs.n	8021a08 <__kernel_cosf+0x20>
 80219fe:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8021a02:	ee17 2a90 	vmov	r2, s15
 8021a06:	b342      	cbz	r2, 8021a5a <__kernel_cosf+0x72>
 8021a08:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8021a0c:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8021a78 <__kernel_cosf+0x90>
 8021a10:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8021a7c <__kernel_cosf+0x94>
 8021a14:	4a1a      	ldr	r2, [pc, #104]	@ (8021a80 <__kernel_cosf+0x98>)
 8021a16:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021a1a:	4293      	cmp	r3, r2
 8021a1c:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8021a84 <__kernel_cosf+0x9c>
 8021a20:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021a24:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8021a88 <__kernel_cosf+0xa0>
 8021a28:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021a2c:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8021a8c <__kernel_cosf+0xa4>
 8021a30:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021a34:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8021a90 <__kernel_cosf+0xa8>
 8021a38:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021a3c:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8021a40:	ee26 6a07 	vmul.f32	s12, s12, s14
 8021a44:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8021a48:	eee7 0a06 	vfma.f32	s1, s14, s12
 8021a4c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8021a50:	d804      	bhi.n	8021a5c <__kernel_cosf+0x74>
 8021a52:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8021a56:	ee30 0a67 	vsub.f32	s0, s0, s15
 8021a5a:	4770      	bx	lr
 8021a5c:	4a0d      	ldr	r2, [pc, #52]	@ (8021a94 <__kernel_cosf+0xac>)
 8021a5e:	4293      	cmp	r3, r2
 8021a60:	bf9a      	itte	ls
 8021a62:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8021a66:	ee07 3a10 	vmovls	s14, r3
 8021a6a:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8021a6e:	ee30 0a47 	vsub.f32	s0, s0, s14
 8021a72:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021a76:	e7ec      	b.n	8021a52 <__kernel_cosf+0x6a>
 8021a78:	ad47d74e 	.word	0xad47d74e
 8021a7c:	310f74f6 	.word	0x310f74f6
 8021a80:	3e999999 	.word	0x3e999999
 8021a84:	b493f27c 	.word	0xb493f27c
 8021a88:	37d00d01 	.word	0x37d00d01
 8021a8c:	bab60b61 	.word	0xbab60b61
 8021a90:	3d2aaaab 	.word	0x3d2aaaab
 8021a94:	3f480000 	.word	0x3f480000

08021a98 <__kernel_sinf>:
 8021a98:	ee10 3a10 	vmov	r3, s0
 8021a9c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021aa0:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8021aa4:	d204      	bcs.n	8021ab0 <__kernel_sinf+0x18>
 8021aa6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8021aaa:	ee17 3a90 	vmov	r3, s15
 8021aae:	b35b      	cbz	r3, 8021b08 <__kernel_sinf+0x70>
 8021ab0:	ee20 7a00 	vmul.f32	s14, s0, s0
 8021ab4:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8021b0c <__kernel_sinf+0x74>
 8021ab8:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8021b10 <__kernel_sinf+0x78>
 8021abc:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021ac0:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8021b14 <__kernel_sinf+0x7c>
 8021ac4:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021ac8:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8021b18 <__kernel_sinf+0x80>
 8021acc:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021ad0:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8021b1c <__kernel_sinf+0x84>
 8021ad4:	ee60 6a07 	vmul.f32	s13, s0, s14
 8021ad8:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021adc:	b930      	cbnz	r0, 8021aec <__kernel_sinf+0x54>
 8021ade:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8021b20 <__kernel_sinf+0x88>
 8021ae2:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021ae6:	eea6 0a26 	vfma.f32	s0, s12, s13
 8021aea:	4770      	bx	lr
 8021aec:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8021af0:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8021af4:	eee0 7a86 	vfma.f32	s15, s1, s12
 8021af8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8021afc:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8021b24 <__kernel_sinf+0x8c>
 8021b00:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8021b04:	ee30 0a60 	vsub.f32	s0, s0, s1
 8021b08:	4770      	bx	lr
 8021b0a:	bf00      	nop
 8021b0c:	2f2ec9d3 	.word	0x2f2ec9d3
 8021b10:	b2d72f34 	.word	0xb2d72f34
 8021b14:	3638ef1b 	.word	0x3638ef1b
 8021b18:	b9500d01 	.word	0xb9500d01
 8021b1c:	3c088889 	.word	0x3c088889
 8021b20:	be2aaaab 	.word	0xbe2aaaab
 8021b24:	3e2aaaab 	.word	0x3e2aaaab

08021b28 <__ieee754_rem_pio2f>:
 8021b28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021b2a:	ee10 6a10 	vmov	r6, s0
 8021b2e:	4b88      	ldr	r3, [pc, #544]	@ (8021d50 <__ieee754_rem_pio2f+0x228>)
 8021b30:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8021b34:	429d      	cmp	r5, r3
 8021b36:	b087      	sub	sp, #28
 8021b38:	4604      	mov	r4, r0
 8021b3a:	d805      	bhi.n	8021b48 <__ieee754_rem_pio2f+0x20>
 8021b3c:	2300      	movs	r3, #0
 8021b3e:	ed80 0a00 	vstr	s0, [r0]
 8021b42:	6043      	str	r3, [r0, #4]
 8021b44:	2000      	movs	r0, #0
 8021b46:	e022      	b.n	8021b8e <__ieee754_rem_pio2f+0x66>
 8021b48:	4b82      	ldr	r3, [pc, #520]	@ (8021d54 <__ieee754_rem_pio2f+0x22c>)
 8021b4a:	429d      	cmp	r5, r3
 8021b4c:	d83a      	bhi.n	8021bc4 <__ieee754_rem_pio2f+0x9c>
 8021b4e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8021b52:	2e00      	cmp	r6, #0
 8021b54:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8021d58 <__ieee754_rem_pio2f+0x230>
 8021b58:	4a80      	ldr	r2, [pc, #512]	@ (8021d5c <__ieee754_rem_pio2f+0x234>)
 8021b5a:	f023 030f 	bic.w	r3, r3, #15
 8021b5e:	dd18      	ble.n	8021b92 <__ieee754_rem_pio2f+0x6a>
 8021b60:	4293      	cmp	r3, r2
 8021b62:	ee70 7a47 	vsub.f32	s15, s0, s14
 8021b66:	bf09      	itett	eq
 8021b68:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8021d60 <__ieee754_rem_pio2f+0x238>
 8021b6c:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 8021d64 <__ieee754_rem_pio2f+0x23c>
 8021b70:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8021d68 <__ieee754_rem_pio2f+0x240>
 8021b74:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8021b78:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8021b7c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021b80:	ed80 7a00 	vstr	s14, [r0]
 8021b84:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8021b88:	edc0 7a01 	vstr	s15, [r0, #4]
 8021b8c:	2001      	movs	r0, #1
 8021b8e:	b007      	add	sp, #28
 8021b90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021b92:	4293      	cmp	r3, r2
 8021b94:	ee70 7a07 	vadd.f32	s15, s0, s14
 8021b98:	bf09      	itett	eq
 8021b9a:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8021d60 <__ieee754_rem_pio2f+0x238>
 8021b9e:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 8021d64 <__ieee754_rem_pio2f+0x23c>
 8021ba2:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8021d68 <__ieee754_rem_pio2f+0x240>
 8021ba6:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8021baa:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8021bae:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021bb2:	ed80 7a00 	vstr	s14, [r0]
 8021bb6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8021bba:	edc0 7a01 	vstr	s15, [r0, #4]
 8021bbe:	f04f 30ff 	mov.w	r0, #4294967295
 8021bc2:	e7e4      	b.n	8021b8e <__ieee754_rem_pio2f+0x66>
 8021bc4:	4b69      	ldr	r3, [pc, #420]	@ (8021d6c <__ieee754_rem_pio2f+0x244>)
 8021bc6:	429d      	cmp	r5, r3
 8021bc8:	d873      	bhi.n	8021cb2 <__ieee754_rem_pio2f+0x18a>
 8021bca:	f000 f8dd 	bl	8021d88 <fabsf>
 8021bce:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8021d70 <__ieee754_rem_pio2f+0x248>
 8021bd2:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8021bd6:	eee0 7a07 	vfma.f32	s15, s0, s14
 8021bda:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8021bde:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8021be2:	ee17 0a90 	vmov	r0, s15
 8021be6:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8021d58 <__ieee754_rem_pio2f+0x230>
 8021bea:	eea7 0a67 	vfms.f32	s0, s14, s15
 8021bee:	281f      	cmp	r0, #31
 8021bf0:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8021d64 <__ieee754_rem_pio2f+0x23c>
 8021bf4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8021bf8:	eeb1 6a47 	vneg.f32	s12, s14
 8021bfc:	ee70 6a67 	vsub.f32	s13, s0, s15
 8021c00:	ee16 1a90 	vmov	r1, s13
 8021c04:	dc09      	bgt.n	8021c1a <__ieee754_rem_pio2f+0xf2>
 8021c06:	4a5b      	ldr	r2, [pc, #364]	@ (8021d74 <__ieee754_rem_pio2f+0x24c>)
 8021c08:	1e47      	subs	r7, r0, #1
 8021c0a:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8021c0e:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8021c12:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8021c16:	4293      	cmp	r3, r2
 8021c18:	d107      	bne.n	8021c2a <__ieee754_rem_pio2f+0x102>
 8021c1a:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8021c1e:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8021c22:	2a08      	cmp	r2, #8
 8021c24:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8021c28:	dc14      	bgt.n	8021c54 <__ieee754_rem_pio2f+0x12c>
 8021c2a:	6021      	str	r1, [r4, #0]
 8021c2c:	ed94 7a00 	vldr	s14, [r4]
 8021c30:	ee30 0a47 	vsub.f32	s0, s0, s14
 8021c34:	2e00      	cmp	r6, #0
 8021c36:	ee30 0a67 	vsub.f32	s0, s0, s15
 8021c3a:	ed84 0a01 	vstr	s0, [r4, #4]
 8021c3e:	daa6      	bge.n	8021b8e <__ieee754_rem_pio2f+0x66>
 8021c40:	eeb1 7a47 	vneg.f32	s14, s14
 8021c44:	eeb1 0a40 	vneg.f32	s0, s0
 8021c48:	ed84 7a00 	vstr	s14, [r4]
 8021c4c:	ed84 0a01 	vstr	s0, [r4, #4]
 8021c50:	4240      	negs	r0, r0
 8021c52:	e79c      	b.n	8021b8e <__ieee754_rem_pio2f+0x66>
 8021c54:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8021d60 <__ieee754_rem_pio2f+0x238>
 8021c58:	eef0 6a40 	vmov.f32	s13, s0
 8021c5c:	eee6 6a25 	vfma.f32	s13, s12, s11
 8021c60:	ee70 7a66 	vsub.f32	s15, s0, s13
 8021c64:	eee6 7a25 	vfma.f32	s15, s12, s11
 8021c68:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8021d68 <__ieee754_rem_pio2f+0x240>
 8021c6c:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8021c70:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8021c74:	ee15 2a90 	vmov	r2, s11
 8021c78:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8021c7c:	1a5b      	subs	r3, r3, r1
 8021c7e:	2b19      	cmp	r3, #25
 8021c80:	dc04      	bgt.n	8021c8c <__ieee754_rem_pio2f+0x164>
 8021c82:	edc4 5a00 	vstr	s11, [r4]
 8021c86:	eeb0 0a66 	vmov.f32	s0, s13
 8021c8a:	e7cf      	b.n	8021c2c <__ieee754_rem_pio2f+0x104>
 8021c8c:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8021d78 <__ieee754_rem_pio2f+0x250>
 8021c90:	eeb0 0a66 	vmov.f32	s0, s13
 8021c94:	eea6 0a25 	vfma.f32	s0, s12, s11
 8021c98:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8021c9c:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8021d7c <__ieee754_rem_pio2f+0x254>
 8021ca0:	eee6 7a25 	vfma.f32	s15, s12, s11
 8021ca4:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8021ca8:	ee30 7a67 	vsub.f32	s14, s0, s15
 8021cac:	ed84 7a00 	vstr	s14, [r4]
 8021cb0:	e7bc      	b.n	8021c2c <__ieee754_rem_pio2f+0x104>
 8021cb2:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8021cb6:	d306      	bcc.n	8021cc6 <__ieee754_rem_pio2f+0x19e>
 8021cb8:	ee70 7a40 	vsub.f32	s15, s0, s0
 8021cbc:	edc0 7a01 	vstr	s15, [r0, #4]
 8021cc0:	edc0 7a00 	vstr	s15, [r0]
 8021cc4:	e73e      	b.n	8021b44 <__ieee754_rem_pio2f+0x1c>
 8021cc6:	15ea      	asrs	r2, r5, #23
 8021cc8:	3a86      	subs	r2, #134	@ 0x86
 8021cca:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8021cce:	ee07 3a90 	vmov	s15, r3
 8021cd2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8021cd6:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8021d80 <__ieee754_rem_pio2f+0x258>
 8021cda:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8021cde:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021ce2:	ed8d 7a03 	vstr	s14, [sp, #12]
 8021ce6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8021cea:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8021cee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8021cf2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021cf6:	ed8d 7a04 	vstr	s14, [sp, #16]
 8021cfa:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8021cfe:	eef5 7a40 	vcmp.f32	s15, #0.0
 8021d02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021d06:	edcd 7a05 	vstr	s15, [sp, #20]
 8021d0a:	d11e      	bne.n	8021d4a <__ieee754_rem_pio2f+0x222>
 8021d0c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8021d10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021d14:	bf0c      	ite	eq
 8021d16:	2301      	moveq	r3, #1
 8021d18:	2302      	movne	r3, #2
 8021d1a:	491a      	ldr	r1, [pc, #104]	@ (8021d84 <__ieee754_rem_pio2f+0x25c>)
 8021d1c:	9101      	str	r1, [sp, #4]
 8021d1e:	2102      	movs	r1, #2
 8021d20:	9100      	str	r1, [sp, #0]
 8021d22:	a803      	add	r0, sp, #12
 8021d24:	4621      	mov	r1, r4
 8021d26:	f000 f837 	bl	8021d98 <__kernel_rem_pio2f>
 8021d2a:	2e00      	cmp	r6, #0
 8021d2c:	f6bf af2f 	bge.w	8021b8e <__ieee754_rem_pio2f+0x66>
 8021d30:	edd4 7a00 	vldr	s15, [r4]
 8021d34:	eef1 7a67 	vneg.f32	s15, s15
 8021d38:	edc4 7a00 	vstr	s15, [r4]
 8021d3c:	edd4 7a01 	vldr	s15, [r4, #4]
 8021d40:	eef1 7a67 	vneg.f32	s15, s15
 8021d44:	edc4 7a01 	vstr	s15, [r4, #4]
 8021d48:	e782      	b.n	8021c50 <__ieee754_rem_pio2f+0x128>
 8021d4a:	2303      	movs	r3, #3
 8021d4c:	e7e5      	b.n	8021d1a <__ieee754_rem_pio2f+0x1f2>
 8021d4e:	bf00      	nop
 8021d50:	3f490fd8 	.word	0x3f490fd8
 8021d54:	4016cbe3 	.word	0x4016cbe3
 8021d58:	3fc90f80 	.word	0x3fc90f80
 8021d5c:	3fc90fd0 	.word	0x3fc90fd0
 8021d60:	37354400 	.word	0x37354400
 8021d64:	37354443 	.word	0x37354443
 8021d68:	2e85a308 	.word	0x2e85a308
 8021d6c:	43490f80 	.word	0x43490f80
 8021d70:	3f22f984 	.word	0x3f22f984
 8021d74:	08025a68 	.word	0x08025a68
 8021d78:	2e85a300 	.word	0x2e85a300
 8021d7c:	248d3132 	.word	0x248d3132
 8021d80:	43800000 	.word	0x43800000
 8021d84:	08025ae8 	.word	0x08025ae8

08021d88 <fabsf>:
 8021d88:	ee10 3a10 	vmov	r3, s0
 8021d8c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021d90:	ee00 3a10 	vmov	s0, r3
 8021d94:	4770      	bx	lr
	...

08021d98 <__kernel_rem_pio2f>:
 8021d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021d9c:	ed2d 8b04 	vpush	{d8-d9}
 8021da0:	b0d9      	sub	sp, #356	@ 0x164
 8021da2:	4690      	mov	r8, r2
 8021da4:	9001      	str	r0, [sp, #4]
 8021da6:	4ab9      	ldr	r2, [pc, #740]	@ (802208c <__kernel_rem_pio2f+0x2f4>)
 8021da8:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8021daa:	f118 0f04 	cmn.w	r8, #4
 8021dae:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8021db2:	460f      	mov	r7, r1
 8021db4:	f103 3bff 	add.w	fp, r3, #4294967295
 8021db8:	db27      	blt.n	8021e0a <__kernel_rem_pio2f+0x72>
 8021dba:	f1b8 0203 	subs.w	r2, r8, #3
 8021dbe:	bf48      	it	mi
 8021dc0:	f108 0204 	addmi.w	r2, r8, #4
 8021dc4:	10d2      	asrs	r2, r2, #3
 8021dc6:	1c55      	adds	r5, r2, #1
 8021dc8:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8021dca:	ed9f 7ab4 	vldr	s14, [pc, #720]	@ 802209c <__kernel_rem_pio2f+0x304>
 8021dce:	00e8      	lsls	r0, r5, #3
 8021dd0:	eba2 060b 	sub.w	r6, r2, fp
 8021dd4:	9002      	str	r0, [sp, #8]
 8021dd6:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8021dda:	eb0a 0c0b 	add.w	ip, sl, fp
 8021dde:	ac1c      	add	r4, sp, #112	@ 0x70
 8021de0:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8021de4:	2000      	movs	r0, #0
 8021de6:	4560      	cmp	r0, ip
 8021de8:	dd11      	ble.n	8021e0e <__kernel_rem_pio2f+0x76>
 8021dea:	a91c      	add	r1, sp, #112	@ 0x70
 8021dec:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8021df0:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8021df4:	f04f 0c00 	mov.w	ip, #0
 8021df8:	45d4      	cmp	ip, sl
 8021dfa:	dc27      	bgt.n	8021e4c <__kernel_rem_pio2f+0xb4>
 8021dfc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8021e00:	eddf 7aa6 	vldr	s15, [pc, #664]	@ 802209c <__kernel_rem_pio2f+0x304>
 8021e04:	4606      	mov	r6, r0
 8021e06:	2400      	movs	r4, #0
 8021e08:	e016      	b.n	8021e38 <__kernel_rem_pio2f+0xa0>
 8021e0a:	2200      	movs	r2, #0
 8021e0c:	e7db      	b.n	8021dc6 <__kernel_rem_pio2f+0x2e>
 8021e0e:	42c6      	cmn	r6, r0
 8021e10:	bf5d      	ittte	pl
 8021e12:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8021e16:	ee07 1a90 	vmovpl	s15, r1
 8021e1a:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8021e1e:	eef0 7a47 	vmovmi.f32	s15, s14
 8021e22:	ece4 7a01 	vstmia	r4!, {s15}
 8021e26:	3001      	adds	r0, #1
 8021e28:	e7dd      	b.n	8021de6 <__kernel_rem_pio2f+0x4e>
 8021e2a:	ecfe 6a01 	vldmia	lr!, {s13}
 8021e2e:	ed96 7a00 	vldr	s14, [r6]
 8021e32:	eee6 7a87 	vfma.f32	s15, s13, s14
 8021e36:	3401      	adds	r4, #1
 8021e38:	455c      	cmp	r4, fp
 8021e3a:	f1a6 0604 	sub.w	r6, r6, #4
 8021e3e:	ddf4      	ble.n	8021e2a <__kernel_rem_pio2f+0x92>
 8021e40:	ece9 7a01 	vstmia	r9!, {s15}
 8021e44:	f10c 0c01 	add.w	ip, ip, #1
 8021e48:	3004      	adds	r0, #4
 8021e4a:	e7d5      	b.n	8021df8 <__kernel_rem_pio2f+0x60>
 8021e4c:	a908      	add	r1, sp, #32
 8021e4e:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8021e52:	9104      	str	r1, [sp, #16]
 8021e54:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8021e56:	eddf 8a90 	vldr	s17, [pc, #576]	@ 8022098 <__kernel_rem_pio2f+0x300>
 8021e5a:	ed9f 9a8e 	vldr	s18, [pc, #568]	@ 8022094 <__kernel_rem_pio2f+0x2fc>
 8021e5e:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8021e62:	9203      	str	r2, [sp, #12]
 8021e64:	4654      	mov	r4, sl
 8021e66:	00a2      	lsls	r2, r4, #2
 8021e68:	9205      	str	r2, [sp, #20]
 8021e6a:	aa58      	add	r2, sp, #352	@ 0x160
 8021e6c:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8021e70:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8021e74:	a944      	add	r1, sp, #272	@ 0x110
 8021e76:	aa08      	add	r2, sp, #32
 8021e78:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8021e7c:	4694      	mov	ip, r2
 8021e7e:	4626      	mov	r6, r4
 8021e80:	2e00      	cmp	r6, #0
 8021e82:	f1a0 0004 	sub.w	r0, r0, #4
 8021e86:	dc4c      	bgt.n	8021f22 <__kernel_rem_pio2f+0x18a>
 8021e88:	4628      	mov	r0, r5
 8021e8a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8021e8e:	f000 f9f5 	bl	802227c <scalbnf>
 8021e92:	eeb0 8a40 	vmov.f32	s16, s0
 8021e96:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8021e9a:	ee28 0a00 	vmul.f32	s0, s16, s0
 8021e9e:	f000 fa53 	bl	8022348 <floorf>
 8021ea2:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8021ea6:	eea0 8a67 	vfms.f32	s16, s0, s15
 8021eaa:	2d00      	cmp	r5, #0
 8021eac:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8021eb0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8021eb4:	ee17 9a90 	vmov	r9, s15
 8021eb8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021ebc:	ee38 8a67 	vsub.f32	s16, s16, s15
 8021ec0:	dd41      	ble.n	8021f46 <__kernel_rem_pio2f+0x1ae>
 8021ec2:	f104 3cff 	add.w	ip, r4, #4294967295
 8021ec6:	a908      	add	r1, sp, #32
 8021ec8:	f1c5 0e08 	rsb	lr, r5, #8
 8021ecc:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8021ed0:	fa46 f00e 	asr.w	r0, r6, lr
 8021ed4:	4481      	add	r9, r0
 8021ed6:	fa00 f00e 	lsl.w	r0, r0, lr
 8021eda:	1a36      	subs	r6, r6, r0
 8021edc:	f1c5 0007 	rsb	r0, r5, #7
 8021ee0:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8021ee4:	4106      	asrs	r6, r0
 8021ee6:	2e00      	cmp	r6, #0
 8021ee8:	dd3c      	ble.n	8021f64 <__kernel_rem_pio2f+0x1cc>
 8021eea:	f04f 0e00 	mov.w	lr, #0
 8021eee:	f109 0901 	add.w	r9, r9, #1
 8021ef2:	4670      	mov	r0, lr
 8021ef4:	4574      	cmp	r4, lr
 8021ef6:	dc68      	bgt.n	8021fca <__kernel_rem_pio2f+0x232>
 8021ef8:	2d00      	cmp	r5, #0
 8021efa:	dd03      	ble.n	8021f04 <__kernel_rem_pio2f+0x16c>
 8021efc:	2d01      	cmp	r5, #1
 8021efe:	d074      	beq.n	8021fea <__kernel_rem_pio2f+0x252>
 8021f00:	2d02      	cmp	r5, #2
 8021f02:	d07d      	beq.n	8022000 <__kernel_rem_pio2f+0x268>
 8021f04:	2e02      	cmp	r6, #2
 8021f06:	d12d      	bne.n	8021f64 <__kernel_rem_pio2f+0x1cc>
 8021f08:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8021f0c:	ee30 8a48 	vsub.f32	s16, s0, s16
 8021f10:	b340      	cbz	r0, 8021f64 <__kernel_rem_pio2f+0x1cc>
 8021f12:	4628      	mov	r0, r5
 8021f14:	9306      	str	r3, [sp, #24]
 8021f16:	f000 f9b1 	bl	802227c <scalbnf>
 8021f1a:	9b06      	ldr	r3, [sp, #24]
 8021f1c:	ee38 8a40 	vsub.f32	s16, s16, s0
 8021f20:	e020      	b.n	8021f64 <__kernel_rem_pio2f+0x1cc>
 8021f22:	ee60 7a28 	vmul.f32	s15, s0, s17
 8021f26:	3e01      	subs	r6, #1
 8021f28:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8021f2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021f30:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8021f34:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8021f38:	ecac 0a01 	vstmia	ip!, {s0}
 8021f3c:	ed90 0a00 	vldr	s0, [r0]
 8021f40:	ee37 0a80 	vadd.f32	s0, s15, s0
 8021f44:	e79c      	b.n	8021e80 <__kernel_rem_pio2f+0xe8>
 8021f46:	d105      	bne.n	8021f54 <__kernel_rem_pio2f+0x1bc>
 8021f48:	1e60      	subs	r0, r4, #1
 8021f4a:	a908      	add	r1, sp, #32
 8021f4c:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8021f50:	11f6      	asrs	r6, r6, #7
 8021f52:	e7c8      	b.n	8021ee6 <__kernel_rem_pio2f+0x14e>
 8021f54:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8021f58:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8021f5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021f60:	da31      	bge.n	8021fc6 <__kernel_rem_pio2f+0x22e>
 8021f62:	2600      	movs	r6, #0
 8021f64:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8021f68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021f6c:	f040 8098 	bne.w	80220a0 <__kernel_rem_pio2f+0x308>
 8021f70:	1e60      	subs	r0, r4, #1
 8021f72:	2200      	movs	r2, #0
 8021f74:	4550      	cmp	r0, sl
 8021f76:	da4b      	bge.n	8022010 <__kernel_rem_pio2f+0x278>
 8021f78:	2a00      	cmp	r2, #0
 8021f7a:	d065      	beq.n	8022048 <__kernel_rem_pio2f+0x2b0>
 8021f7c:	3c01      	subs	r4, #1
 8021f7e:	ab08      	add	r3, sp, #32
 8021f80:	3d08      	subs	r5, #8
 8021f82:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8021f86:	2b00      	cmp	r3, #0
 8021f88:	d0f8      	beq.n	8021f7c <__kernel_rem_pio2f+0x1e4>
 8021f8a:	4628      	mov	r0, r5
 8021f8c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8021f90:	f000 f974 	bl	802227c <scalbnf>
 8021f94:	1c63      	adds	r3, r4, #1
 8021f96:	aa44      	add	r2, sp, #272	@ 0x110
 8021f98:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8022098 <__kernel_rem_pio2f+0x300>
 8021f9c:	0099      	lsls	r1, r3, #2
 8021f9e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8021fa2:	4623      	mov	r3, r4
 8021fa4:	2b00      	cmp	r3, #0
 8021fa6:	f280 80a9 	bge.w	80220fc <__kernel_rem_pio2f+0x364>
 8021faa:	4623      	mov	r3, r4
 8021fac:	2b00      	cmp	r3, #0
 8021fae:	f2c0 80c7 	blt.w	8022140 <__kernel_rem_pio2f+0x3a8>
 8021fb2:	aa44      	add	r2, sp, #272	@ 0x110
 8021fb4:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8021fb8:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8022090 <__kernel_rem_pio2f+0x2f8>
 8021fbc:	eddf 7a37 	vldr	s15, [pc, #220]	@ 802209c <__kernel_rem_pio2f+0x304>
 8021fc0:	2000      	movs	r0, #0
 8021fc2:	1ae2      	subs	r2, r4, r3
 8021fc4:	e0b1      	b.n	802212a <__kernel_rem_pio2f+0x392>
 8021fc6:	2602      	movs	r6, #2
 8021fc8:	e78f      	b.n	8021eea <__kernel_rem_pio2f+0x152>
 8021fca:	f852 1b04 	ldr.w	r1, [r2], #4
 8021fce:	b948      	cbnz	r0, 8021fe4 <__kernel_rem_pio2f+0x24c>
 8021fd0:	b121      	cbz	r1, 8021fdc <__kernel_rem_pio2f+0x244>
 8021fd2:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8021fd6:	f842 1c04 	str.w	r1, [r2, #-4]
 8021fda:	2101      	movs	r1, #1
 8021fdc:	f10e 0e01 	add.w	lr, lr, #1
 8021fe0:	4608      	mov	r0, r1
 8021fe2:	e787      	b.n	8021ef4 <__kernel_rem_pio2f+0x15c>
 8021fe4:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8021fe8:	e7f5      	b.n	8021fd6 <__kernel_rem_pio2f+0x23e>
 8021fea:	f104 3cff 	add.w	ip, r4, #4294967295
 8021fee:	aa08      	add	r2, sp, #32
 8021ff0:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8021ff4:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8021ff8:	a908      	add	r1, sp, #32
 8021ffa:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 8021ffe:	e781      	b.n	8021f04 <__kernel_rem_pio2f+0x16c>
 8022000:	f104 3cff 	add.w	ip, r4, #4294967295
 8022004:	aa08      	add	r2, sp, #32
 8022006:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802200a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802200e:	e7f3      	b.n	8021ff8 <__kernel_rem_pio2f+0x260>
 8022010:	a908      	add	r1, sp, #32
 8022012:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8022016:	3801      	subs	r0, #1
 8022018:	430a      	orrs	r2, r1
 802201a:	e7ab      	b.n	8021f74 <__kernel_rem_pio2f+0x1dc>
 802201c:	3201      	adds	r2, #1
 802201e:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 8022022:	2e00      	cmp	r6, #0
 8022024:	d0fa      	beq.n	802201c <__kernel_rem_pio2f+0x284>
 8022026:	9905      	ldr	r1, [sp, #20]
 8022028:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 802202c:	eb0d 0001 	add.w	r0, sp, r1
 8022030:	18e6      	adds	r6, r4, r3
 8022032:	a91c      	add	r1, sp, #112	@ 0x70
 8022034:	f104 0c01 	add.w	ip, r4, #1
 8022038:	384c      	subs	r0, #76	@ 0x4c
 802203a:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 802203e:	4422      	add	r2, r4
 8022040:	4562      	cmp	r2, ip
 8022042:	da04      	bge.n	802204e <__kernel_rem_pio2f+0x2b6>
 8022044:	4614      	mov	r4, r2
 8022046:	e70e      	b.n	8021e66 <__kernel_rem_pio2f+0xce>
 8022048:	9804      	ldr	r0, [sp, #16]
 802204a:	2201      	movs	r2, #1
 802204c:	e7e7      	b.n	802201e <__kernel_rem_pio2f+0x286>
 802204e:	9903      	ldr	r1, [sp, #12]
 8022050:	f8dd e004 	ldr.w	lr, [sp, #4]
 8022054:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8022058:	9105      	str	r1, [sp, #20]
 802205a:	ee07 1a90 	vmov	s15, r1
 802205e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022062:	2400      	movs	r4, #0
 8022064:	ece6 7a01 	vstmia	r6!, {s15}
 8022068:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 802209c <__kernel_rem_pio2f+0x304>
 802206c:	46b1      	mov	r9, r6
 802206e:	455c      	cmp	r4, fp
 8022070:	dd04      	ble.n	802207c <__kernel_rem_pio2f+0x2e4>
 8022072:	ece0 7a01 	vstmia	r0!, {s15}
 8022076:	f10c 0c01 	add.w	ip, ip, #1
 802207a:	e7e1      	b.n	8022040 <__kernel_rem_pio2f+0x2a8>
 802207c:	ecfe 6a01 	vldmia	lr!, {s13}
 8022080:	ed39 7a01 	vldmdb	r9!, {s14}
 8022084:	3401      	adds	r4, #1
 8022086:	eee6 7a87 	vfma.f32	s15, s13, s14
 802208a:	e7f0      	b.n	802206e <__kernel_rem_pio2f+0x2d6>
 802208c:	08025e2c 	.word	0x08025e2c
 8022090:	08025e00 	.word	0x08025e00
 8022094:	43800000 	.word	0x43800000
 8022098:	3b800000 	.word	0x3b800000
 802209c:	00000000 	.word	0x00000000
 80220a0:	9b02      	ldr	r3, [sp, #8]
 80220a2:	eeb0 0a48 	vmov.f32	s0, s16
 80220a6:	eba3 0008 	sub.w	r0, r3, r8
 80220aa:	f000 f8e7 	bl	802227c <scalbnf>
 80220ae:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8022094 <__kernel_rem_pio2f+0x2fc>
 80220b2:	eeb4 0ac7 	vcmpe.f32	s0, s14
 80220b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80220ba:	db19      	blt.n	80220f0 <__kernel_rem_pio2f+0x358>
 80220bc:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8022098 <__kernel_rem_pio2f+0x300>
 80220c0:	ee60 7a27 	vmul.f32	s15, s0, s15
 80220c4:	aa08      	add	r2, sp, #32
 80220c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80220ca:	3508      	adds	r5, #8
 80220cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80220d0:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80220d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80220d8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80220dc:	ee10 3a10 	vmov	r3, s0
 80220e0:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80220e4:	ee17 3a90 	vmov	r3, s15
 80220e8:	3401      	adds	r4, #1
 80220ea:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80220ee:	e74c      	b.n	8021f8a <__kernel_rem_pio2f+0x1f2>
 80220f0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80220f4:	aa08      	add	r2, sp, #32
 80220f6:	ee10 3a10 	vmov	r3, s0
 80220fa:	e7f6      	b.n	80220ea <__kernel_rem_pio2f+0x352>
 80220fc:	a808      	add	r0, sp, #32
 80220fe:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8022102:	9001      	str	r0, [sp, #4]
 8022104:	ee07 0a90 	vmov	s15, r0
 8022108:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802210c:	3b01      	subs	r3, #1
 802210e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8022112:	ee20 0a07 	vmul.f32	s0, s0, s14
 8022116:	ed62 7a01 	vstmdb	r2!, {s15}
 802211a:	e743      	b.n	8021fa4 <__kernel_rem_pio2f+0x20c>
 802211c:	ecfc 6a01 	vldmia	ip!, {s13}
 8022120:	ecb5 7a01 	vldmia	r5!, {s14}
 8022124:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022128:	3001      	adds	r0, #1
 802212a:	4550      	cmp	r0, sl
 802212c:	dc01      	bgt.n	8022132 <__kernel_rem_pio2f+0x39a>
 802212e:	4282      	cmp	r2, r0
 8022130:	daf4      	bge.n	802211c <__kernel_rem_pio2f+0x384>
 8022132:	a858      	add	r0, sp, #352	@ 0x160
 8022134:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8022138:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 802213c:	3b01      	subs	r3, #1
 802213e:	e735      	b.n	8021fac <__kernel_rem_pio2f+0x214>
 8022140:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8022142:	2b02      	cmp	r3, #2
 8022144:	dc09      	bgt.n	802215a <__kernel_rem_pio2f+0x3c2>
 8022146:	2b00      	cmp	r3, #0
 8022148:	dc2b      	bgt.n	80221a2 <__kernel_rem_pio2f+0x40a>
 802214a:	d044      	beq.n	80221d6 <__kernel_rem_pio2f+0x43e>
 802214c:	f009 0007 	and.w	r0, r9, #7
 8022150:	b059      	add	sp, #356	@ 0x164
 8022152:	ecbd 8b04 	vpop	{d8-d9}
 8022156:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802215a:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802215c:	2b03      	cmp	r3, #3
 802215e:	d1f5      	bne.n	802214c <__kernel_rem_pio2f+0x3b4>
 8022160:	aa30      	add	r2, sp, #192	@ 0xc0
 8022162:	1f0b      	subs	r3, r1, #4
 8022164:	4413      	add	r3, r2
 8022166:	461a      	mov	r2, r3
 8022168:	4620      	mov	r0, r4
 802216a:	2800      	cmp	r0, #0
 802216c:	f1a2 0204 	sub.w	r2, r2, #4
 8022170:	dc52      	bgt.n	8022218 <__kernel_rem_pio2f+0x480>
 8022172:	4622      	mov	r2, r4
 8022174:	2a01      	cmp	r2, #1
 8022176:	f1a3 0304 	sub.w	r3, r3, #4
 802217a:	dc5d      	bgt.n	8022238 <__kernel_rem_pio2f+0x4a0>
 802217c:	ab30      	add	r3, sp, #192	@ 0xc0
 802217e:	ed5f 7a39 	vldr	s15, [pc, #-228]	@ 802209c <__kernel_rem_pio2f+0x304>
 8022182:	440b      	add	r3, r1
 8022184:	2c01      	cmp	r4, #1
 8022186:	dc67      	bgt.n	8022258 <__kernel_rem_pio2f+0x4c0>
 8022188:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 802218c:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8022190:	2e00      	cmp	r6, #0
 8022192:	d167      	bne.n	8022264 <__kernel_rem_pio2f+0x4cc>
 8022194:	edc7 6a00 	vstr	s13, [r7]
 8022198:	ed87 7a01 	vstr	s14, [r7, #4]
 802219c:	edc7 7a02 	vstr	s15, [r7, #8]
 80221a0:	e7d4      	b.n	802214c <__kernel_rem_pio2f+0x3b4>
 80221a2:	ab30      	add	r3, sp, #192	@ 0xc0
 80221a4:	ed1f 7a43 	vldr	s14, [pc, #-268]	@ 802209c <__kernel_rem_pio2f+0x304>
 80221a8:	440b      	add	r3, r1
 80221aa:	4622      	mov	r2, r4
 80221ac:	2a00      	cmp	r2, #0
 80221ae:	da24      	bge.n	80221fa <__kernel_rem_pio2f+0x462>
 80221b0:	b34e      	cbz	r6, 8022206 <__kernel_rem_pio2f+0x46e>
 80221b2:	eef1 7a47 	vneg.f32	s15, s14
 80221b6:	edc7 7a00 	vstr	s15, [r7]
 80221ba:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 80221be:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80221c2:	aa31      	add	r2, sp, #196	@ 0xc4
 80221c4:	2301      	movs	r3, #1
 80221c6:	429c      	cmp	r4, r3
 80221c8:	da20      	bge.n	802220c <__kernel_rem_pio2f+0x474>
 80221ca:	b10e      	cbz	r6, 80221d0 <__kernel_rem_pio2f+0x438>
 80221cc:	eef1 7a67 	vneg.f32	s15, s15
 80221d0:	edc7 7a01 	vstr	s15, [r7, #4]
 80221d4:	e7ba      	b.n	802214c <__kernel_rem_pio2f+0x3b4>
 80221d6:	ab30      	add	r3, sp, #192	@ 0xc0
 80221d8:	ed5f 7a50 	vldr	s15, [pc, #-320]	@ 802209c <__kernel_rem_pio2f+0x304>
 80221dc:	440b      	add	r3, r1
 80221de:	2c00      	cmp	r4, #0
 80221e0:	da05      	bge.n	80221ee <__kernel_rem_pio2f+0x456>
 80221e2:	b10e      	cbz	r6, 80221e8 <__kernel_rem_pio2f+0x450>
 80221e4:	eef1 7a67 	vneg.f32	s15, s15
 80221e8:	edc7 7a00 	vstr	s15, [r7]
 80221ec:	e7ae      	b.n	802214c <__kernel_rem_pio2f+0x3b4>
 80221ee:	ed33 7a01 	vldmdb	r3!, {s14}
 80221f2:	3c01      	subs	r4, #1
 80221f4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80221f8:	e7f1      	b.n	80221de <__kernel_rem_pio2f+0x446>
 80221fa:	ed73 7a01 	vldmdb	r3!, {s15}
 80221fe:	3a01      	subs	r2, #1
 8022200:	ee37 7a27 	vadd.f32	s14, s14, s15
 8022204:	e7d2      	b.n	80221ac <__kernel_rem_pio2f+0x414>
 8022206:	eef0 7a47 	vmov.f32	s15, s14
 802220a:	e7d4      	b.n	80221b6 <__kernel_rem_pio2f+0x41e>
 802220c:	ecb2 7a01 	vldmia	r2!, {s14}
 8022210:	3301      	adds	r3, #1
 8022212:	ee77 7a87 	vadd.f32	s15, s15, s14
 8022216:	e7d6      	b.n	80221c6 <__kernel_rem_pio2f+0x42e>
 8022218:	edd2 7a00 	vldr	s15, [r2]
 802221c:	edd2 6a01 	vldr	s13, [r2, #4]
 8022220:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8022224:	3801      	subs	r0, #1
 8022226:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802222a:	ed82 7a00 	vstr	s14, [r2]
 802222e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8022232:	edc2 7a01 	vstr	s15, [r2, #4]
 8022236:	e798      	b.n	802216a <__kernel_rem_pio2f+0x3d2>
 8022238:	edd3 7a00 	vldr	s15, [r3]
 802223c:	edd3 6a01 	vldr	s13, [r3, #4]
 8022240:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8022244:	3a01      	subs	r2, #1
 8022246:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802224a:	ed83 7a00 	vstr	s14, [r3]
 802224e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8022252:	edc3 7a01 	vstr	s15, [r3, #4]
 8022256:	e78d      	b.n	8022174 <__kernel_rem_pio2f+0x3dc>
 8022258:	ed33 7a01 	vldmdb	r3!, {s14}
 802225c:	3c01      	subs	r4, #1
 802225e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8022262:	e78f      	b.n	8022184 <__kernel_rem_pio2f+0x3ec>
 8022264:	eef1 6a66 	vneg.f32	s13, s13
 8022268:	eeb1 7a47 	vneg.f32	s14, s14
 802226c:	edc7 6a00 	vstr	s13, [r7]
 8022270:	ed87 7a01 	vstr	s14, [r7, #4]
 8022274:	eef1 7a67 	vneg.f32	s15, s15
 8022278:	e790      	b.n	802219c <__kernel_rem_pio2f+0x404>
 802227a:	bf00      	nop

0802227c <scalbnf>:
 802227c:	ee10 3a10 	vmov	r3, s0
 8022280:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8022284:	d02b      	beq.n	80222de <scalbnf+0x62>
 8022286:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802228a:	d302      	bcc.n	8022292 <scalbnf+0x16>
 802228c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8022290:	4770      	bx	lr
 8022292:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8022296:	d123      	bne.n	80222e0 <scalbnf+0x64>
 8022298:	4b24      	ldr	r3, [pc, #144]	@ (802232c <scalbnf+0xb0>)
 802229a:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8022330 <scalbnf+0xb4>
 802229e:	4298      	cmp	r0, r3
 80222a0:	ee20 0a27 	vmul.f32	s0, s0, s15
 80222a4:	db17      	blt.n	80222d6 <scalbnf+0x5a>
 80222a6:	ee10 3a10 	vmov	r3, s0
 80222aa:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80222ae:	3a19      	subs	r2, #25
 80222b0:	f24c 3150 	movw	r1, #50000	@ 0xc350
 80222b4:	4288      	cmp	r0, r1
 80222b6:	dd15      	ble.n	80222e4 <scalbnf+0x68>
 80222b8:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8022334 <scalbnf+0xb8>
 80222bc:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8022338 <scalbnf+0xbc>
 80222c0:	ee10 3a10 	vmov	r3, s0
 80222c4:	eeb0 7a67 	vmov.f32	s14, s15
 80222c8:	2b00      	cmp	r3, #0
 80222ca:	bfb8      	it	lt
 80222cc:	eef0 7a66 	vmovlt.f32	s15, s13
 80222d0:	ee27 0a87 	vmul.f32	s0, s15, s14
 80222d4:	4770      	bx	lr
 80222d6:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802233c <scalbnf+0xc0>
 80222da:	ee27 0a80 	vmul.f32	s0, s15, s0
 80222de:	4770      	bx	lr
 80222e0:	0dd2      	lsrs	r2, r2, #23
 80222e2:	e7e5      	b.n	80222b0 <scalbnf+0x34>
 80222e4:	4410      	add	r0, r2
 80222e6:	28fe      	cmp	r0, #254	@ 0xfe
 80222e8:	dce6      	bgt.n	80222b8 <scalbnf+0x3c>
 80222ea:	2800      	cmp	r0, #0
 80222ec:	dd06      	ble.n	80222fc <scalbnf+0x80>
 80222ee:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80222f2:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80222f6:	ee00 3a10 	vmov	s0, r3
 80222fa:	4770      	bx	lr
 80222fc:	f110 0f16 	cmn.w	r0, #22
 8022300:	da09      	bge.n	8022316 <scalbnf+0x9a>
 8022302:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 802233c <scalbnf+0xc0>
 8022306:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8022340 <scalbnf+0xc4>
 802230a:	ee10 3a10 	vmov	r3, s0
 802230e:	eeb0 7a67 	vmov.f32	s14, s15
 8022312:	2b00      	cmp	r3, #0
 8022314:	e7d9      	b.n	80222ca <scalbnf+0x4e>
 8022316:	3019      	adds	r0, #25
 8022318:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802231c:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8022320:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8022344 <scalbnf+0xc8>
 8022324:	ee07 3a90 	vmov	s15, r3
 8022328:	e7d7      	b.n	80222da <scalbnf+0x5e>
 802232a:	bf00      	nop
 802232c:	ffff3cb0 	.word	0xffff3cb0
 8022330:	4c000000 	.word	0x4c000000
 8022334:	7149f2ca 	.word	0x7149f2ca
 8022338:	f149f2ca 	.word	0xf149f2ca
 802233c:	0da24260 	.word	0x0da24260
 8022340:	8da24260 	.word	0x8da24260
 8022344:	33000000 	.word	0x33000000

08022348 <floorf>:
 8022348:	ee10 3a10 	vmov	r3, s0
 802234c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8022350:	3a7f      	subs	r2, #127	@ 0x7f
 8022352:	2a16      	cmp	r2, #22
 8022354:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8022358:	dc2b      	bgt.n	80223b2 <floorf+0x6a>
 802235a:	2a00      	cmp	r2, #0
 802235c:	da12      	bge.n	8022384 <floorf+0x3c>
 802235e:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80223c4 <floorf+0x7c>
 8022362:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022366:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802236a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802236e:	dd06      	ble.n	802237e <floorf+0x36>
 8022370:	2b00      	cmp	r3, #0
 8022372:	da24      	bge.n	80223be <floorf+0x76>
 8022374:	2900      	cmp	r1, #0
 8022376:	4b14      	ldr	r3, [pc, #80]	@ (80223c8 <floorf+0x80>)
 8022378:	bf08      	it	eq
 802237a:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 802237e:	ee00 3a10 	vmov	s0, r3
 8022382:	4770      	bx	lr
 8022384:	4911      	ldr	r1, [pc, #68]	@ (80223cc <floorf+0x84>)
 8022386:	4111      	asrs	r1, r2
 8022388:	420b      	tst	r3, r1
 802238a:	d0fa      	beq.n	8022382 <floorf+0x3a>
 802238c:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 80223c4 <floorf+0x7c>
 8022390:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022394:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022398:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802239c:	ddef      	ble.n	802237e <floorf+0x36>
 802239e:	2b00      	cmp	r3, #0
 80223a0:	bfbe      	ittt	lt
 80223a2:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 80223a6:	fa40 f202 	asrlt.w	r2, r0, r2
 80223aa:	189b      	addlt	r3, r3, r2
 80223ac:	ea23 0301 	bic.w	r3, r3, r1
 80223b0:	e7e5      	b.n	802237e <floorf+0x36>
 80223b2:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 80223b6:	d3e4      	bcc.n	8022382 <floorf+0x3a>
 80223b8:	ee30 0a00 	vadd.f32	s0, s0, s0
 80223bc:	4770      	bx	lr
 80223be:	2300      	movs	r3, #0
 80223c0:	e7dd      	b.n	802237e <floorf+0x36>
 80223c2:	bf00      	nop
 80223c4:	7149f2ca 	.word	0x7149f2ca
 80223c8:	bf800000 	.word	0xbf800000
 80223cc:	007fffff 	.word	0x007fffff

080223d0 <abort>:
 80223d0:	b508      	push	{r3, lr}
 80223d2:	2006      	movs	r0, #6
 80223d4:	f000 faf6 	bl	80229c4 <raise>
 80223d8:	2001      	movs	r0, #1
 80223da:	f7de ff53 	bl	8001284 <_exit>
	...

080223e0 <__assert_func>:
 80223e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80223e2:	4614      	mov	r4, r2
 80223e4:	461a      	mov	r2, r3
 80223e6:	4b09      	ldr	r3, [pc, #36]	@ (802240c <__assert_func+0x2c>)
 80223e8:	681b      	ldr	r3, [r3, #0]
 80223ea:	4605      	mov	r5, r0
 80223ec:	68d8      	ldr	r0, [r3, #12]
 80223ee:	b954      	cbnz	r4, 8022406 <__assert_func+0x26>
 80223f0:	4b07      	ldr	r3, [pc, #28]	@ (8022410 <__assert_func+0x30>)
 80223f2:	461c      	mov	r4, r3
 80223f4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80223f8:	9100      	str	r1, [sp, #0]
 80223fa:	462b      	mov	r3, r5
 80223fc:	4905      	ldr	r1, [pc, #20]	@ (8022414 <__assert_func+0x34>)
 80223fe:	f000 f983 	bl	8022708 <fiprintf>
 8022402:	f7ff ffe5 	bl	80223d0 <abort>
 8022406:	4b04      	ldr	r3, [pc, #16]	@ (8022418 <__assert_func+0x38>)
 8022408:	e7f4      	b.n	80223f4 <__assert_func+0x14>
 802240a:	bf00      	nop
 802240c:	200000d0 	.word	0x200000d0
 8022410:	08025e73 	.word	0x08025e73
 8022414:	08025e45 	.word	0x08025e45
 8022418:	08025e38 	.word	0x08025e38

0802241c <atexit>:
 802241c:	2300      	movs	r3, #0
 802241e:	4601      	mov	r1, r0
 8022420:	461a      	mov	r2, r3
 8022422:	4618      	mov	r0, r3
 8022424:	f000 bb7c 	b.w	8022b20 <__register_exitproc>

08022428 <malloc>:
 8022428:	4b02      	ldr	r3, [pc, #8]	@ (8022434 <malloc+0xc>)
 802242a:	4601      	mov	r1, r0
 802242c:	6818      	ldr	r0, [r3, #0]
 802242e:	f000 b82d 	b.w	802248c <_malloc_r>
 8022432:	bf00      	nop
 8022434:	200000d0 	.word	0x200000d0

08022438 <free>:
 8022438:	4b02      	ldr	r3, [pc, #8]	@ (8022444 <free+0xc>)
 802243a:	4601      	mov	r1, r0
 802243c:	6818      	ldr	r0, [r3, #0]
 802243e:	f000 bbcb 	b.w	8022bd8 <_free_r>
 8022442:	bf00      	nop
 8022444:	200000d0 	.word	0x200000d0

08022448 <sbrk_aligned>:
 8022448:	b570      	push	{r4, r5, r6, lr}
 802244a:	4e0f      	ldr	r6, [pc, #60]	@ (8022488 <sbrk_aligned+0x40>)
 802244c:	460c      	mov	r4, r1
 802244e:	6831      	ldr	r1, [r6, #0]
 8022450:	4605      	mov	r5, r0
 8022452:	b911      	cbnz	r1, 802245a <sbrk_aligned+0x12>
 8022454:	f000 fb06 	bl	8022a64 <_sbrk_r>
 8022458:	6030      	str	r0, [r6, #0]
 802245a:	4621      	mov	r1, r4
 802245c:	4628      	mov	r0, r5
 802245e:	f000 fb01 	bl	8022a64 <_sbrk_r>
 8022462:	1c43      	adds	r3, r0, #1
 8022464:	d103      	bne.n	802246e <sbrk_aligned+0x26>
 8022466:	f04f 34ff 	mov.w	r4, #4294967295
 802246a:	4620      	mov	r0, r4
 802246c:	bd70      	pop	{r4, r5, r6, pc}
 802246e:	1cc4      	adds	r4, r0, #3
 8022470:	f024 0403 	bic.w	r4, r4, #3
 8022474:	42a0      	cmp	r0, r4
 8022476:	d0f8      	beq.n	802246a <sbrk_aligned+0x22>
 8022478:	1a21      	subs	r1, r4, r0
 802247a:	4628      	mov	r0, r5
 802247c:	f000 faf2 	bl	8022a64 <_sbrk_r>
 8022480:	3001      	adds	r0, #1
 8022482:	d1f2      	bne.n	802246a <sbrk_aligned+0x22>
 8022484:	e7ef      	b.n	8022466 <sbrk_aligned+0x1e>
 8022486:	bf00      	nop
 8022488:	200175dc 	.word	0x200175dc

0802248c <_malloc_r>:
 802248c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022490:	1ccd      	adds	r5, r1, #3
 8022492:	f025 0503 	bic.w	r5, r5, #3
 8022496:	3508      	adds	r5, #8
 8022498:	2d0c      	cmp	r5, #12
 802249a:	bf38      	it	cc
 802249c:	250c      	movcc	r5, #12
 802249e:	2d00      	cmp	r5, #0
 80224a0:	4606      	mov	r6, r0
 80224a2:	db01      	blt.n	80224a8 <_malloc_r+0x1c>
 80224a4:	42a9      	cmp	r1, r5
 80224a6:	d904      	bls.n	80224b2 <_malloc_r+0x26>
 80224a8:	230c      	movs	r3, #12
 80224aa:	6033      	str	r3, [r6, #0]
 80224ac:	2000      	movs	r0, #0
 80224ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80224b2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8022588 <_malloc_r+0xfc>
 80224b6:	f000 f869 	bl	802258c <__malloc_lock>
 80224ba:	f8d8 3000 	ldr.w	r3, [r8]
 80224be:	461c      	mov	r4, r3
 80224c0:	bb44      	cbnz	r4, 8022514 <_malloc_r+0x88>
 80224c2:	4629      	mov	r1, r5
 80224c4:	4630      	mov	r0, r6
 80224c6:	f7ff ffbf 	bl	8022448 <sbrk_aligned>
 80224ca:	1c43      	adds	r3, r0, #1
 80224cc:	4604      	mov	r4, r0
 80224ce:	d158      	bne.n	8022582 <_malloc_r+0xf6>
 80224d0:	f8d8 4000 	ldr.w	r4, [r8]
 80224d4:	4627      	mov	r7, r4
 80224d6:	2f00      	cmp	r7, #0
 80224d8:	d143      	bne.n	8022562 <_malloc_r+0xd6>
 80224da:	2c00      	cmp	r4, #0
 80224dc:	d04b      	beq.n	8022576 <_malloc_r+0xea>
 80224de:	6823      	ldr	r3, [r4, #0]
 80224e0:	4639      	mov	r1, r7
 80224e2:	4630      	mov	r0, r6
 80224e4:	eb04 0903 	add.w	r9, r4, r3
 80224e8:	f000 fabc 	bl	8022a64 <_sbrk_r>
 80224ec:	4581      	cmp	r9, r0
 80224ee:	d142      	bne.n	8022576 <_malloc_r+0xea>
 80224f0:	6821      	ldr	r1, [r4, #0]
 80224f2:	1a6d      	subs	r5, r5, r1
 80224f4:	4629      	mov	r1, r5
 80224f6:	4630      	mov	r0, r6
 80224f8:	f7ff ffa6 	bl	8022448 <sbrk_aligned>
 80224fc:	3001      	adds	r0, #1
 80224fe:	d03a      	beq.n	8022576 <_malloc_r+0xea>
 8022500:	6823      	ldr	r3, [r4, #0]
 8022502:	442b      	add	r3, r5
 8022504:	6023      	str	r3, [r4, #0]
 8022506:	f8d8 3000 	ldr.w	r3, [r8]
 802250a:	685a      	ldr	r2, [r3, #4]
 802250c:	bb62      	cbnz	r2, 8022568 <_malloc_r+0xdc>
 802250e:	f8c8 7000 	str.w	r7, [r8]
 8022512:	e00f      	b.n	8022534 <_malloc_r+0xa8>
 8022514:	6822      	ldr	r2, [r4, #0]
 8022516:	1b52      	subs	r2, r2, r5
 8022518:	d420      	bmi.n	802255c <_malloc_r+0xd0>
 802251a:	2a0b      	cmp	r2, #11
 802251c:	d917      	bls.n	802254e <_malloc_r+0xc2>
 802251e:	1961      	adds	r1, r4, r5
 8022520:	42a3      	cmp	r3, r4
 8022522:	6025      	str	r5, [r4, #0]
 8022524:	bf18      	it	ne
 8022526:	6059      	strne	r1, [r3, #4]
 8022528:	6863      	ldr	r3, [r4, #4]
 802252a:	bf08      	it	eq
 802252c:	f8c8 1000 	streq.w	r1, [r8]
 8022530:	5162      	str	r2, [r4, r5]
 8022532:	604b      	str	r3, [r1, #4]
 8022534:	4630      	mov	r0, r6
 8022536:	f000 f82f 	bl	8022598 <__malloc_unlock>
 802253a:	f104 000b 	add.w	r0, r4, #11
 802253e:	1d23      	adds	r3, r4, #4
 8022540:	f020 0007 	bic.w	r0, r0, #7
 8022544:	1ac2      	subs	r2, r0, r3
 8022546:	bf1c      	itt	ne
 8022548:	1a1b      	subne	r3, r3, r0
 802254a:	50a3      	strne	r3, [r4, r2]
 802254c:	e7af      	b.n	80224ae <_malloc_r+0x22>
 802254e:	6862      	ldr	r2, [r4, #4]
 8022550:	42a3      	cmp	r3, r4
 8022552:	bf0c      	ite	eq
 8022554:	f8c8 2000 	streq.w	r2, [r8]
 8022558:	605a      	strne	r2, [r3, #4]
 802255a:	e7eb      	b.n	8022534 <_malloc_r+0xa8>
 802255c:	4623      	mov	r3, r4
 802255e:	6864      	ldr	r4, [r4, #4]
 8022560:	e7ae      	b.n	80224c0 <_malloc_r+0x34>
 8022562:	463c      	mov	r4, r7
 8022564:	687f      	ldr	r7, [r7, #4]
 8022566:	e7b6      	b.n	80224d6 <_malloc_r+0x4a>
 8022568:	461a      	mov	r2, r3
 802256a:	685b      	ldr	r3, [r3, #4]
 802256c:	42a3      	cmp	r3, r4
 802256e:	d1fb      	bne.n	8022568 <_malloc_r+0xdc>
 8022570:	2300      	movs	r3, #0
 8022572:	6053      	str	r3, [r2, #4]
 8022574:	e7de      	b.n	8022534 <_malloc_r+0xa8>
 8022576:	230c      	movs	r3, #12
 8022578:	6033      	str	r3, [r6, #0]
 802257a:	4630      	mov	r0, r6
 802257c:	f000 f80c 	bl	8022598 <__malloc_unlock>
 8022580:	e794      	b.n	80224ac <_malloc_r+0x20>
 8022582:	6005      	str	r5, [r0, #0]
 8022584:	e7d6      	b.n	8022534 <_malloc_r+0xa8>
 8022586:	bf00      	nop
 8022588:	200175e0 	.word	0x200175e0

0802258c <__malloc_lock>:
 802258c:	4801      	ldr	r0, [pc, #4]	@ (8022594 <__malloc_lock+0x8>)
 802258e:	f000 bab6 	b.w	8022afe <__retarget_lock_acquire_recursive>
 8022592:	bf00      	nop
 8022594:	20017724 	.word	0x20017724

08022598 <__malloc_unlock>:
 8022598:	4801      	ldr	r0, [pc, #4]	@ (80225a0 <__malloc_unlock+0x8>)
 802259a:	f000 bab1 	b.w	8022b00 <__retarget_lock_release_recursive>
 802259e:	bf00      	nop
 80225a0:	20017724 	.word	0x20017724

080225a4 <__cxa_atexit>:
 80225a4:	b510      	push	{r4, lr}
 80225a6:	4604      	mov	r4, r0
 80225a8:	4804      	ldr	r0, [pc, #16]	@ (80225bc <__cxa_atexit+0x18>)
 80225aa:	4613      	mov	r3, r2
 80225ac:	b120      	cbz	r0, 80225b8 <__cxa_atexit+0x14>
 80225ae:	460a      	mov	r2, r1
 80225b0:	2002      	movs	r0, #2
 80225b2:	4621      	mov	r1, r4
 80225b4:	f000 fab4 	bl	8022b20 <__register_exitproc>
 80225b8:	bd10      	pop	{r4, pc}
 80225ba:	bf00      	nop
 80225bc:	08022b21 	.word	0x08022b21

080225c0 <std>:
 80225c0:	2300      	movs	r3, #0
 80225c2:	b510      	push	{r4, lr}
 80225c4:	4604      	mov	r4, r0
 80225c6:	e9c0 3300 	strd	r3, r3, [r0]
 80225ca:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80225ce:	6083      	str	r3, [r0, #8]
 80225d0:	8181      	strh	r1, [r0, #12]
 80225d2:	6643      	str	r3, [r0, #100]	@ 0x64
 80225d4:	81c2      	strh	r2, [r0, #14]
 80225d6:	6183      	str	r3, [r0, #24]
 80225d8:	4619      	mov	r1, r3
 80225da:	2208      	movs	r2, #8
 80225dc:	305c      	adds	r0, #92	@ 0x5c
 80225de:	f000 f99b 	bl	8022918 <memset>
 80225e2:	4b0d      	ldr	r3, [pc, #52]	@ (8022618 <std+0x58>)
 80225e4:	6263      	str	r3, [r4, #36]	@ 0x24
 80225e6:	4b0d      	ldr	r3, [pc, #52]	@ (802261c <std+0x5c>)
 80225e8:	62a3      	str	r3, [r4, #40]	@ 0x28
 80225ea:	4b0d      	ldr	r3, [pc, #52]	@ (8022620 <std+0x60>)
 80225ec:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80225ee:	4b0d      	ldr	r3, [pc, #52]	@ (8022624 <std+0x64>)
 80225f0:	6323      	str	r3, [r4, #48]	@ 0x30
 80225f2:	4b0d      	ldr	r3, [pc, #52]	@ (8022628 <std+0x68>)
 80225f4:	6224      	str	r4, [r4, #32]
 80225f6:	429c      	cmp	r4, r3
 80225f8:	d006      	beq.n	8022608 <std+0x48>
 80225fa:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80225fe:	4294      	cmp	r4, r2
 8022600:	d002      	beq.n	8022608 <std+0x48>
 8022602:	33d0      	adds	r3, #208	@ 0xd0
 8022604:	429c      	cmp	r4, r3
 8022606:	d105      	bne.n	8022614 <std+0x54>
 8022608:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 802260c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022610:	f000 ba74 	b.w	8022afc <__retarget_lock_init_recursive>
 8022614:	bd10      	pop	{r4, pc}
 8022616:	bf00      	nop
 8022618:	08022769 	.word	0x08022769
 802261c:	0802278b 	.word	0x0802278b
 8022620:	080227c3 	.word	0x080227c3
 8022624:	080227e7 	.word	0x080227e7
 8022628:	200175e4 	.word	0x200175e4

0802262c <stdio_exit_handler>:
 802262c:	4a02      	ldr	r2, [pc, #8]	@ (8022638 <stdio_exit_handler+0xc>)
 802262e:	4903      	ldr	r1, [pc, #12]	@ (802263c <stdio_exit_handler+0x10>)
 8022630:	4803      	ldr	r0, [pc, #12]	@ (8022640 <stdio_exit_handler+0x14>)
 8022632:	f000 b87b 	b.w	802272c <_fwalk_sglue>
 8022636:	bf00      	nop
 8022638:	200000c4 	.word	0x200000c4
 802263c:	08023315 	.word	0x08023315
 8022640:	200000d4 	.word	0x200000d4

08022644 <cleanup_stdio>:
 8022644:	6841      	ldr	r1, [r0, #4]
 8022646:	4b0c      	ldr	r3, [pc, #48]	@ (8022678 <cleanup_stdio+0x34>)
 8022648:	4299      	cmp	r1, r3
 802264a:	b510      	push	{r4, lr}
 802264c:	4604      	mov	r4, r0
 802264e:	d001      	beq.n	8022654 <cleanup_stdio+0x10>
 8022650:	f000 fe60 	bl	8023314 <_fflush_r>
 8022654:	68a1      	ldr	r1, [r4, #8]
 8022656:	4b09      	ldr	r3, [pc, #36]	@ (802267c <cleanup_stdio+0x38>)
 8022658:	4299      	cmp	r1, r3
 802265a:	d002      	beq.n	8022662 <cleanup_stdio+0x1e>
 802265c:	4620      	mov	r0, r4
 802265e:	f000 fe59 	bl	8023314 <_fflush_r>
 8022662:	68e1      	ldr	r1, [r4, #12]
 8022664:	4b06      	ldr	r3, [pc, #24]	@ (8022680 <cleanup_stdio+0x3c>)
 8022666:	4299      	cmp	r1, r3
 8022668:	d004      	beq.n	8022674 <cleanup_stdio+0x30>
 802266a:	4620      	mov	r0, r4
 802266c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022670:	f000 be50 	b.w	8023314 <_fflush_r>
 8022674:	bd10      	pop	{r4, pc}
 8022676:	bf00      	nop
 8022678:	200175e4 	.word	0x200175e4
 802267c:	2001764c 	.word	0x2001764c
 8022680:	200176b4 	.word	0x200176b4

08022684 <global_stdio_init.part.0>:
 8022684:	b510      	push	{r4, lr}
 8022686:	4b0b      	ldr	r3, [pc, #44]	@ (80226b4 <global_stdio_init.part.0+0x30>)
 8022688:	4c0b      	ldr	r4, [pc, #44]	@ (80226b8 <global_stdio_init.part.0+0x34>)
 802268a:	4a0c      	ldr	r2, [pc, #48]	@ (80226bc <global_stdio_init.part.0+0x38>)
 802268c:	601a      	str	r2, [r3, #0]
 802268e:	4620      	mov	r0, r4
 8022690:	2200      	movs	r2, #0
 8022692:	2104      	movs	r1, #4
 8022694:	f7ff ff94 	bl	80225c0 <std>
 8022698:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802269c:	2201      	movs	r2, #1
 802269e:	2109      	movs	r1, #9
 80226a0:	f7ff ff8e 	bl	80225c0 <std>
 80226a4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80226a8:	2202      	movs	r2, #2
 80226aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80226ae:	2112      	movs	r1, #18
 80226b0:	f7ff bf86 	b.w	80225c0 <std>
 80226b4:	2001771c 	.word	0x2001771c
 80226b8:	200175e4 	.word	0x200175e4
 80226bc:	0802262d 	.word	0x0802262d

080226c0 <__sfp_lock_acquire>:
 80226c0:	4801      	ldr	r0, [pc, #4]	@ (80226c8 <__sfp_lock_acquire+0x8>)
 80226c2:	f000 ba1c 	b.w	8022afe <__retarget_lock_acquire_recursive>
 80226c6:	bf00      	nop
 80226c8:	20017726 	.word	0x20017726

080226cc <__sfp_lock_release>:
 80226cc:	4801      	ldr	r0, [pc, #4]	@ (80226d4 <__sfp_lock_release+0x8>)
 80226ce:	f000 ba17 	b.w	8022b00 <__retarget_lock_release_recursive>
 80226d2:	bf00      	nop
 80226d4:	20017726 	.word	0x20017726

080226d8 <__sinit>:
 80226d8:	b510      	push	{r4, lr}
 80226da:	4604      	mov	r4, r0
 80226dc:	f7ff fff0 	bl	80226c0 <__sfp_lock_acquire>
 80226e0:	6a23      	ldr	r3, [r4, #32]
 80226e2:	b11b      	cbz	r3, 80226ec <__sinit+0x14>
 80226e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80226e8:	f7ff bff0 	b.w	80226cc <__sfp_lock_release>
 80226ec:	4b04      	ldr	r3, [pc, #16]	@ (8022700 <__sinit+0x28>)
 80226ee:	6223      	str	r3, [r4, #32]
 80226f0:	4b04      	ldr	r3, [pc, #16]	@ (8022704 <__sinit+0x2c>)
 80226f2:	681b      	ldr	r3, [r3, #0]
 80226f4:	2b00      	cmp	r3, #0
 80226f6:	d1f5      	bne.n	80226e4 <__sinit+0xc>
 80226f8:	f7ff ffc4 	bl	8022684 <global_stdio_init.part.0>
 80226fc:	e7f2      	b.n	80226e4 <__sinit+0xc>
 80226fe:	bf00      	nop
 8022700:	08022645 	.word	0x08022645
 8022704:	2001771c 	.word	0x2001771c

08022708 <fiprintf>:
 8022708:	b40e      	push	{r1, r2, r3}
 802270a:	b503      	push	{r0, r1, lr}
 802270c:	4601      	mov	r1, r0
 802270e:	ab03      	add	r3, sp, #12
 8022710:	4805      	ldr	r0, [pc, #20]	@ (8022728 <fiprintf+0x20>)
 8022712:	f853 2b04 	ldr.w	r2, [r3], #4
 8022716:	6800      	ldr	r0, [r0, #0]
 8022718:	9301      	str	r3, [sp, #4]
 802271a:	f000 fad1 	bl	8022cc0 <_vfiprintf_r>
 802271e:	b002      	add	sp, #8
 8022720:	f85d eb04 	ldr.w	lr, [sp], #4
 8022724:	b003      	add	sp, #12
 8022726:	4770      	bx	lr
 8022728:	200000d0 	.word	0x200000d0

0802272c <_fwalk_sglue>:
 802272c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022730:	4607      	mov	r7, r0
 8022732:	4688      	mov	r8, r1
 8022734:	4614      	mov	r4, r2
 8022736:	2600      	movs	r6, #0
 8022738:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802273c:	f1b9 0901 	subs.w	r9, r9, #1
 8022740:	d505      	bpl.n	802274e <_fwalk_sglue+0x22>
 8022742:	6824      	ldr	r4, [r4, #0]
 8022744:	2c00      	cmp	r4, #0
 8022746:	d1f7      	bne.n	8022738 <_fwalk_sglue+0xc>
 8022748:	4630      	mov	r0, r6
 802274a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802274e:	89ab      	ldrh	r3, [r5, #12]
 8022750:	2b01      	cmp	r3, #1
 8022752:	d907      	bls.n	8022764 <_fwalk_sglue+0x38>
 8022754:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8022758:	3301      	adds	r3, #1
 802275a:	d003      	beq.n	8022764 <_fwalk_sglue+0x38>
 802275c:	4629      	mov	r1, r5
 802275e:	4638      	mov	r0, r7
 8022760:	47c0      	blx	r8
 8022762:	4306      	orrs	r6, r0
 8022764:	3568      	adds	r5, #104	@ 0x68
 8022766:	e7e9      	b.n	802273c <_fwalk_sglue+0x10>

08022768 <__sread>:
 8022768:	b510      	push	{r4, lr}
 802276a:	460c      	mov	r4, r1
 802276c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022770:	f000 f952 	bl	8022a18 <_read_r>
 8022774:	2800      	cmp	r0, #0
 8022776:	bfab      	itete	ge
 8022778:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802277a:	89a3      	ldrhlt	r3, [r4, #12]
 802277c:	181b      	addge	r3, r3, r0
 802277e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8022782:	bfac      	ite	ge
 8022784:	6563      	strge	r3, [r4, #84]	@ 0x54
 8022786:	81a3      	strhlt	r3, [r4, #12]
 8022788:	bd10      	pop	{r4, pc}

0802278a <__swrite>:
 802278a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802278e:	461f      	mov	r7, r3
 8022790:	898b      	ldrh	r3, [r1, #12]
 8022792:	05db      	lsls	r3, r3, #23
 8022794:	4605      	mov	r5, r0
 8022796:	460c      	mov	r4, r1
 8022798:	4616      	mov	r6, r2
 802279a:	d505      	bpl.n	80227a8 <__swrite+0x1e>
 802279c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80227a0:	2302      	movs	r3, #2
 80227a2:	2200      	movs	r2, #0
 80227a4:	f000 f926 	bl	80229f4 <_lseek_r>
 80227a8:	89a3      	ldrh	r3, [r4, #12]
 80227aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80227ae:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80227b2:	81a3      	strh	r3, [r4, #12]
 80227b4:	4632      	mov	r2, r6
 80227b6:	463b      	mov	r3, r7
 80227b8:	4628      	mov	r0, r5
 80227ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80227be:	f000 b961 	b.w	8022a84 <_write_r>

080227c2 <__sseek>:
 80227c2:	b510      	push	{r4, lr}
 80227c4:	460c      	mov	r4, r1
 80227c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80227ca:	f000 f913 	bl	80229f4 <_lseek_r>
 80227ce:	1c43      	adds	r3, r0, #1
 80227d0:	89a3      	ldrh	r3, [r4, #12]
 80227d2:	bf15      	itete	ne
 80227d4:	6560      	strne	r0, [r4, #84]	@ 0x54
 80227d6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80227da:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80227de:	81a3      	strheq	r3, [r4, #12]
 80227e0:	bf18      	it	ne
 80227e2:	81a3      	strhne	r3, [r4, #12]
 80227e4:	bd10      	pop	{r4, pc}

080227e6 <__sclose>:
 80227e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80227ea:	f000 b8f3 	b.w	80229d4 <_close_r>

080227ee <__swbuf_r>:
 80227ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80227f0:	460e      	mov	r6, r1
 80227f2:	4614      	mov	r4, r2
 80227f4:	4605      	mov	r5, r0
 80227f6:	b118      	cbz	r0, 8022800 <__swbuf_r+0x12>
 80227f8:	6a03      	ldr	r3, [r0, #32]
 80227fa:	b90b      	cbnz	r3, 8022800 <__swbuf_r+0x12>
 80227fc:	f7ff ff6c 	bl	80226d8 <__sinit>
 8022800:	69a3      	ldr	r3, [r4, #24]
 8022802:	60a3      	str	r3, [r4, #8]
 8022804:	89a3      	ldrh	r3, [r4, #12]
 8022806:	071a      	lsls	r2, r3, #28
 8022808:	d501      	bpl.n	802280e <__swbuf_r+0x20>
 802280a:	6923      	ldr	r3, [r4, #16]
 802280c:	b943      	cbnz	r3, 8022820 <__swbuf_r+0x32>
 802280e:	4621      	mov	r1, r4
 8022810:	4628      	mov	r0, r5
 8022812:	f000 f82b 	bl	802286c <__swsetup_r>
 8022816:	b118      	cbz	r0, 8022820 <__swbuf_r+0x32>
 8022818:	f04f 37ff 	mov.w	r7, #4294967295
 802281c:	4638      	mov	r0, r7
 802281e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8022820:	6823      	ldr	r3, [r4, #0]
 8022822:	6922      	ldr	r2, [r4, #16]
 8022824:	1a98      	subs	r0, r3, r2
 8022826:	6963      	ldr	r3, [r4, #20]
 8022828:	b2f6      	uxtb	r6, r6
 802282a:	4283      	cmp	r3, r0
 802282c:	4637      	mov	r7, r6
 802282e:	dc05      	bgt.n	802283c <__swbuf_r+0x4e>
 8022830:	4621      	mov	r1, r4
 8022832:	4628      	mov	r0, r5
 8022834:	f000 fd6e 	bl	8023314 <_fflush_r>
 8022838:	2800      	cmp	r0, #0
 802283a:	d1ed      	bne.n	8022818 <__swbuf_r+0x2a>
 802283c:	68a3      	ldr	r3, [r4, #8]
 802283e:	3b01      	subs	r3, #1
 8022840:	60a3      	str	r3, [r4, #8]
 8022842:	6823      	ldr	r3, [r4, #0]
 8022844:	1c5a      	adds	r2, r3, #1
 8022846:	6022      	str	r2, [r4, #0]
 8022848:	701e      	strb	r6, [r3, #0]
 802284a:	6962      	ldr	r2, [r4, #20]
 802284c:	1c43      	adds	r3, r0, #1
 802284e:	429a      	cmp	r2, r3
 8022850:	d004      	beq.n	802285c <__swbuf_r+0x6e>
 8022852:	89a3      	ldrh	r3, [r4, #12]
 8022854:	07db      	lsls	r3, r3, #31
 8022856:	d5e1      	bpl.n	802281c <__swbuf_r+0x2e>
 8022858:	2e0a      	cmp	r6, #10
 802285a:	d1df      	bne.n	802281c <__swbuf_r+0x2e>
 802285c:	4621      	mov	r1, r4
 802285e:	4628      	mov	r0, r5
 8022860:	f000 fd58 	bl	8023314 <_fflush_r>
 8022864:	2800      	cmp	r0, #0
 8022866:	d0d9      	beq.n	802281c <__swbuf_r+0x2e>
 8022868:	e7d6      	b.n	8022818 <__swbuf_r+0x2a>
	...

0802286c <__swsetup_r>:
 802286c:	b538      	push	{r3, r4, r5, lr}
 802286e:	4b29      	ldr	r3, [pc, #164]	@ (8022914 <__swsetup_r+0xa8>)
 8022870:	4605      	mov	r5, r0
 8022872:	6818      	ldr	r0, [r3, #0]
 8022874:	460c      	mov	r4, r1
 8022876:	b118      	cbz	r0, 8022880 <__swsetup_r+0x14>
 8022878:	6a03      	ldr	r3, [r0, #32]
 802287a:	b90b      	cbnz	r3, 8022880 <__swsetup_r+0x14>
 802287c:	f7ff ff2c 	bl	80226d8 <__sinit>
 8022880:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022884:	0719      	lsls	r1, r3, #28
 8022886:	d422      	bmi.n	80228ce <__swsetup_r+0x62>
 8022888:	06da      	lsls	r2, r3, #27
 802288a:	d407      	bmi.n	802289c <__swsetup_r+0x30>
 802288c:	2209      	movs	r2, #9
 802288e:	602a      	str	r2, [r5, #0]
 8022890:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8022894:	81a3      	strh	r3, [r4, #12]
 8022896:	f04f 30ff 	mov.w	r0, #4294967295
 802289a:	e033      	b.n	8022904 <__swsetup_r+0x98>
 802289c:	0758      	lsls	r0, r3, #29
 802289e:	d512      	bpl.n	80228c6 <__swsetup_r+0x5a>
 80228a0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80228a2:	b141      	cbz	r1, 80228b6 <__swsetup_r+0x4a>
 80228a4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80228a8:	4299      	cmp	r1, r3
 80228aa:	d002      	beq.n	80228b2 <__swsetup_r+0x46>
 80228ac:	4628      	mov	r0, r5
 80228ae:	f000 f993 	bl	8022bd8 <_free_r>
 80228b2:	2300      	movs	r3, #0
 80228b4:	6363      	str	r3, [r4, #52]	@ 0x34
 80228b6:	89a3      	ldrh	r3, [r4, #12]
 80228b8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80228bc:	81a3      	strh	r3, [r4, #12]
 80228be:	2300      	movs	r3, #0
 80228c0:	6063      	str	r3, [r4, #4]
 80228c2:	6923      	ldr	r3, [r4, #16]
 80228c4:	6023      	str	r3, [r4, #0]
 80228c6:	89a3      	ldrh	r3, [r4, #12]
 80228c8:	f043 0308 	orr.w	r3, r3, #8
 80228cc:	81a3      	strh	r3, [r4, #12]
 80228ce:	6923      	ldr	r3, [r4, #16]
 80228d0:	b94b      	cbnz	r3, 80228e6 <__swsetup_r+0x7a>
 80228d2:	89a3      	ldrh	r3, [r4, #12]
 80228d4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80228d8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80228dc:	d003      	beq.n	80228e6 <__swsetup_r+0x7a>
 80228de:	4621      	mov	r1, r4
 80228e0:	4628      	mov	r0, r5
 80228e2:	f000 fd65 	bl	80233b0 <__smakebuf_r>
 80228e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80228ea:	f013 0201 	ands.w	r2, r3, #1
 80228ee:	d00a      	beq.n	8022906 <__swsetup_r+0x9a>
 80228f0:	2200      	movs	r2, #0
 80228f2:	60a2      	str	r2, [r4, #8]
 80228f4:	6962      	ldr	r2, [r4, #20]
 80228f6:	4252      	negs	r2, r2
 80228f8:	61a2      	str	r2, [r4, #24]
 80228fa:	6922      	ldr	r2, [r4, #16]
 80228fc:	b942      	cbnz	r2, 8022910 <__swsetup_r+0xa4>
 80228fe:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8022902:	d1c5      	bne.n	8022890 <__swsetup_r+0x24>
 8022904:	bd38      	pop	{r3, r4, r5, pc}
 8022906:	0799      	lsls	r1, r3, #30
 8022908:	bf58      	it	pl
 802290a:	6962      	ldrpl	r2, [r4, #20]
 802290c:	60a2      	str	r2, [r4, #8]
 802290e:	e7f4      	b.n	80228fa <__swsetup_r+0x8e>
 8022910:	2000      	movs	r0, #0
 8022912:	e7f7      	b.n	8022904 <__swsetup_r+0x98>
 8022914:	200000d0 	.word	0x200000d0

08022918 <memset>:
 8022918:	4402      	add	r2, r0
 802291a:	4603      	mov	r3, r0
 802291c:	4293      	cmp	r3, r2
 802291e:	d100      	bne.n	8022922 <memset+0xa>
 8022920:	4770      	bx	lr
 8022922:	f803 1b01 	strb.w	r1, [r3], #1
 8022926:	e7f9      	b.n	802291c <memset+0x4>

08022928 <strncmp>:
 8022928:	b510      	push	{r4, lr}
 802292a:	b16a      	cbz	r2, 8022948 <strncmp+0x20>
 802292c:	3901      	subs	r1, #1
 802292e:	1884      	adds	r4, r0, r2
 8022930:	f810 2b01 	ldrb.w	r2, [r0], #1
 8022934:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8022938:	429a      	cmp	r2, r3
 802293a:	d103      	bne.n	8022944 <strncmp+0x1c>
 802293c:	42a0      	cmp	r0, r4
 802293e:	d001      	beq.n	8022944 <strncmp+0x1c>
 8022940:	2a00      	cmp	r2, #0
 8022942:	d1f5      	bne.n	8022930 <strncmp+0x8>
 8022944:	1ad0      	subs	r0, r2, r3
 8022946:	bd10      	pop	{r4, pc}
 8022948:	4610      	mov	r0, r2
 802294a:	e7fc      	b.n	8022946 <strncmp+0x1e>

0802294c <strncpy>:
 802294c:	b510      	push	{r4, lr}
 802294e:	3901      	subs	r1, #1
 8022950:	4603      	mov	r3, r0
 8022952:	b132      	cbz	r2, 8022962 <strncpy+0x16>
 8022954:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8022958:	f803 4b01 	strb.w	r4, [r3], #1
 802295c:	3a01      	subs	r2, #1
 802295e:	2c00      	cmp	r4, #0
 8022960:	d1f7      	bne.n	8022952 <strncpy+0x6>
 8022962:	441a      	add	r2, r3
 8022964:	2100      	movs	r1, #0
 8022966:	4293      	cmp	r3, r2
 8022968:	d100      	bne.n	802296c <strncpy+0x20>
 802296a:	bd10      	pop	{r4, pc}
 802296c:	f803 1b01 	strb.w	r1, [r3], #1
 8022970:	e7f9      	b.n	8022966 <strncpy+0x1a>

08022972 <_raise_r>:
 8022972:	291f      	cmp	r1, #31
 8022974:	b538      	push	{r3, r4, r5, lr}
 8022976:	4605      	mov	r5, r0
 8022978:	460c      	mov	r4, r1
 802297a:	d904      	bls.n	8022986 <_raise_r+0x14>
 802297c:	2316      	movs	r3, #22
 802297e:	6003      	str	r3, [r0, #0]
 8022980:	f04f 30ff 	mov.w	r0, #4294967295
 8022984:	bd38      	pop	{r3, r4, r5, pc}
 8022986:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8022988:	b112      	cbz	r2, 8022990 <_raise_r+0x1e>
 802298a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802298e:	b94b      	cbnz	r3, 80229a4 <_raise_r+0x32>
 8022990:	4628      	mov	r0, r5
 8022992:	f000 f865 	bl	8022a60 <_getpid_r>
 8022996:	4622      	mov	r2, r4
 8022998:	4601      	mov	r1, r0
 802299a:	4628      	mov	r0, r5
 802299c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80229a0:	f000 b84c 	b.w	8022a3c <_kill_r>
 80229a4:	2b01      	cmp	r3, #1
 80229a6:	d00a      	beq.n	80229be <_raise_r+0x4c>
 80229a8:	1c59      	adds	r1, r3, #1
 80229aa:	d103      	bne.n	80229b4 <_raise_r+0x42>
 80229ac:	2316      	movs	r3, #22
 80229ae:	6003      	str	r3, [r0, #0]
 80229b0:	2001      	movs	r0, #1
 80229b2:	e7e7      	b.n	8022984 <_raise_r+0x12>
 80229b4:	2100      	movs	r1, #0
 80229b6:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80229ba:	4620      	mov	r0, r4
 80229bc:	4798      	blx	r3
 80229be:	2000      	movs	r0, #0
 80229c0:	e7e0      	b.n	8022984 <_raise_r+0x12>
	...

080229c4 <raise>:
 80229c4:	4b02      	ldr	r3, [pc, #8]	@ (80229d0 <raise+0xc>)
 80229c6:	4601      	mov	r1, r0
 80229c8:	6818      	ldr	r0, [r3, #0]
 80229ca:	f7ff bfd2 	b.w	8022972 <_raise_r>
 80229ce:	bf00      	nop
 80229d0:	200000d0 	.word	0x200000d0

080229d4 <_close_r>:
 80229d4:	b538      	push	{r3, r4, r5, lr}
 80229d6:	4d06      	ldr	r5, [pc, #24]	@ (80229f0 <_close_r+0x1c>)
 80229d8:	2300      	movs	r3, #0
 80229da:	4604      	mov	r4, r0
 80229dc:	4608      	mov	r0, r1
 80229de:	602b      	str	r3, [r5, #0]
 80229e0:	f7de fc72 	bl	80012c8 <_close>
 80229e4:	1c43      	adds	r3, r0, #1
 80229e6:	d102      	bne.n	80229ee <_close_r+0x1a>
 80229e8:	682b      	ldr	r3, [r5, #0]
 80229ea:	b103      	cbz	r3, 80229ee <_close_r+0x1a>
 80229ec:	6023      	str	r3, [r4, #0]
 80229ee:	bd38      	pop	{r3, r4, r5, pc}
 80229f0:	20017720 	.word	0x20017720

080229f4 <_lseek_r>:
 80229f4:	b538      	push	{r3, r4, r5, lr}
 80229f6:	4d07      	ldr	r5, [pc, #28]	@ (8022a14 <_lseek_r+0x20>)
 80229f8:	4604      	mov	r4, r0
 80229fa:	4608      	mov	r0, r1
 80229fc:	4611      	mov	r1, r2
 80229fe:	2200      	movs	r2, #0
 8022a00:	602a      	str	r2, [r5, #0]
 8022a02:	461a      	mov	r2, r3
 8022a04:	f7de fc6a 	bl	80012dc <_lseek>
 8022a08:	1c43      	adds	r3, r0, #1
 8022a0a:	d102      	bne.n	8022a12 <_lseek_r+0x1e>
 8022a0c:	682b      	ldr	r3, [r5, #0]
 8022a0e:	b103      	cbz	r3, 8022a12 <_lseek_r+0x1e>
 8022a10:	6023      	str	r3, [r4, #0]
 8022a12:	bd38      	pop	{r3, r4, r5, pc}
 8022a14:	20017720 	.word	0x20017720

08022a18 <_read_r>:
 8022a18:	b538      	push	{r3, r4, r5, lr}
 8022a1a:	4d07      	ldr	r5, [pc, #28]	@ (8022a38 <_read_r+0x20>)
 8022a1c:	4604      	mov	r4, r0
 8022a1e:	4608      	mov	r0, r1
 8022a20:	4611      	mov	r1, r2
 8022a22:	2200      	movs	r2, #0
 8022a24:	602a      	str	r2, [r5, #0]
 8022a26:	461a      	mov	r2, r3
 8022a28:	f7de fc32 	bl	8001290 <_read>
 8022a2c:	1c43      	adds	r3, r0, #1
 8022a2e:	d102      	bne.n	8022a36 <_read_r+0x1e>
 8022a30:	682b      	ldr	r3, [r5, #0]
 8022a32:	b103      	cbz	r3, 8022a36 <_read_r+0x1e>
 8022a34:	6023      	str	r3, [r4, #0]
 8022a36:	bd38      	pop	{r3, r4, r5, pc}
 8022a38:	20017720 	.word	0x20017720

08022a3c <_kill_r>:
 8022a3c:	b538      	push	{r3, r4, r5, lr}
 8022a3e:	4d07      	ldr	r5, [pc, #28]	@ (8022a5c <_kill_r+0x20>)
 8022a40:	2300      	movs	r3, #0
 8022a42:	4604      	mov	r4, r0
 8022a44:	4608      	mov	r0, r1
 8022a46:	4611      	mov	r1, r2
 8022a48:	602b      	str	r3, [r5, #0]
 8022a4a:	f7de fc13 	bl	8001274 <_kill>
 8022a4e:	1c43      	adds	r3, r0, #1
 8022a50:	d102      	bne.n	8022a58 <_kill_r+0x1c>
 8022a52:	682b      	ldr	r3, [r5, #0]
 8022a54:	b103      	cbz	r3, 8022a58 <_kill_r+0x1c>
 8022a56:	6023      	str	r3, [r4, #0]
 8022a58:	bd38      	pop	{r3, r4, r5, pc}
 8022a5a:	bf00      	nop
 8022a5c:	20017720 	.word	0x20017720

08022a60 <_getpid_r>:
 8022a60:	f7de bc06 	b.w	8001270 <_getpid>

08022a64 <_sbrk_r>:
 8022a64:	b538      	push	{r3, r4, r5, lr}
 8022a66:	4d06      	ldr	r5, [pc, #24]	@ (8022a80 <_sbrk_r+0x1c>)
 8022a68:	2300      	movs	r3, #0
 8022a6a:	4604      	mov	r4, r0
 8022a6c:	4608      	mov	r0, r1
 8022a6e:	602b      	str	r3, [r5, #0]
 8022a70:	f7de fc36 	bl	80012e0 <_sbrk>
 8022a74:	1c43      	adds	r3, r0, #1
 8022a76:	d102      	bne.n	8022a7e <_sbrk_r+0x1a>
 8022a78:	682b      	ldr	r3, [r5, #0]
 8022a7a:	b103      	cbz	r3, 8022a7e <_sbrk_r+0x1a>
 8022a7c:	6023      	str	r3, [r4, #0]
 8022a7e:	bd38      	pop	{r3, r4, r5, pc}
 8022a80:	20017720 	.word	0x20017720

08022a84 <_write_r>:
 8022a84:	b538      	push	{r3, r4, r5, lr}
 8022a86:	4d07      	ldr	r5, [pc, #28]	@ (8022aa4 <_write_r+0x20>)
 8022a88:	4604      	mov	r4, r0
 8022a8a:	4608      	mov	r0, r1
 8022a8c:	4611      	mov	r1, r2
 8022a8e:	2200      	movs	r2, #0
 8022a90:	602a      	str	r2, [r5, #0]
 8022a92:	461a      	mov	r2, r3
 8022a94:	f7de fc0a 	bl	80012ac <_write>
 8022a98:	1c43      	adds	r3, r0, #1
 8022a9a:	d102      	bne.n	8022aa2 <_write_r+0x1e>
 8022a9c:	682b      	ldr	r3, [r5, #0]
 8022a9e:	b103      	cbz	r3, 8022aa2 <_write_r+0x1e>
 8022aa0:	6023      	str	r3, [r4, #0]
 8022aa2:	bd38      	pop	{r3, r4, r5, pc}
 8022aa4:	20017720 	.word	0x20017720

08022aa8 <__errno>:
 8022aa8:	4b01      	ldr	r3, [pc, #4]	@ (8022ab0 <__errno+0x8>)
 8022aaa:	6818      	ldr	r0, [r3, #0]
 8022aac:	4770      	bx	lr
 8022aae:	bf00      	nop
 8022ab0:	200000d0 	.word	0x200000d0

08022ab4 <__libc_init_array>:
 8022ab4:	b570      	push	{r4, r5, r6, lr}
 8022ab6:	4d0d      	ldr	r5, [pc, #52]	@ (8022aec <__libc_init_array+0x38>)
 8022ab8:	4c0d      	ldr	r4, [pc, #52]	@ (8022af0 <__libc_init_array+0x3c>)
 8022aba:	1b64      	subs	r4, r4, r5
 8022abc:	10a4      	asrs	r4, r4, #2
 8022abe:	2600      	movs	r6, #0
 8022ac0:	42a6      	cmp	r6, r4
 8022ac2:	d109      	bne.n	8022ad8 <__libc_init_array+0x24>
 8022ac4:	4d0b      	ldr	r5, [pc, #44]	@ (8022af4 <__libc_init_array+0x40>)
 8022ac6:	4c0c      	ldr	r4, [pc, #48]	@ (8022af8 <__libc_init_array+0x44>)
 8022ac8:	f000 fcd0 	bl	802346c <_init>
 8022acc:	1b64      	subs	r4, r4, r5
 8022ace:	10a4      	asrs	r4, r4, #2
 8022ad0:	2600      	movs	r6, #0
 8022ad2:	42a6      	cmp	r6, r4
 8022ad4:	d105      	bne.n	8022ae2 <__libc_init_array+0x2e>
 8022ad6:	bd70      	pop	{r4, r5, r6, pc}
 8022ad8:	f855 3b04 	ldr.w	r3, [r5], #4
 8022adc:	4798      	blx	r3
 8022ade:	3601      	adds	r6, #1
 8022ae0:	e7ee      	b.n	8022ac0 <__libc_init_array+0xc>
 8022ae2:	f855 3b04 	ldr.w	r3, [r5], #4
 8022ae6:	4798      	blx	r3
 8022ae8:	3601      	adds	r6, #1
 8022aea:	e7f2      	b.n	8022ad2 <__libc_init_array+0x1e>
 8022aec:	08025ec4 	.word	0x08025ec4
 8022af0:	08025ec4 	.word	0x08025ec4
 8022af4:	08025ec4 	.word	0x08025ec4
 8022af8:	08025edc 	.word	0x08025edc

08022afc <__retarget_lock_init_recursive>:
 8022afc:	4770      	bx	lr

08022afe <__retarget_lock_acquire_recursive>:
 8022afe:	4770      	bx	lr

08022b00 <__retarget_lock_release_recursive>:
 8022b00:	4770      	bx	lr

08022b02 <memcpy>:
 8022b02:	440a      	add	r2, r1
 8022b04:	4291      	cmp	r1, r2
 8022b06:	f100 33ff 	add.w	r3, r0, #4294967295
 8022b0a:	d100      	bne.n	8022b0e <memcpy+0xc>
 8022b0c:	4770      	bx	lr
 8022b0e:	b510      	push	{r4, lr}
 8022b10:	f811 4b01 	ldrb.w	r4, [r1], #1
 8022b14:	f803 4f01 	strb.w	r4, [r3, #1]!
 8022b18:	4291      	cmp	r1, r2
 8022b1a:	d1f9      	bne.n	8022b10 <memcpy+0xe>
 8022b1c:	bd10      	pop	{r4, pc}
	...

08022b20 <__register_exitproc>:
 8022b20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022b24:	4d27      	ldr	r5, [pc, #156]	@ (8022bc4 <__register_exitproc+0xa4>)
 8022b26:	4607      	mov	r7, r0
 8022b28:	6828      	ldr	r0, [r5, #0]
 8022b2a:	4691      	mov	r9, r2
 8022b2c:	460e      	mov	r6, r1
 8022b2e:	4698      	mov	r8, r3
 8022b30:	f7ff ffe5 	bl	8022afe <__retarget_lock_acquire_recursive>
 8022b34:	4a24      	ldr	r2, [pc, #144]	@ (8022bc8 <__register_exitproc+0xa8>)
 8022b36:	6814      	ldr	r4, [r2, #0]
 8022b38:	b93c      	cbnz	r4, 8022b4a <__register_exitproc+0x2a>
 8022b3a:	4b24      	ldr	r3, [pc, #144]	@ (8022bcc <__register_exitproc+0xac>)
 8022b3c:	6013      	str	r3, [r2, #0]
 8022b3e:	4a24      	ldr	r2, [pc, #144]	@ (8022bd0 <__register_exitproc+0xb0>)
 8022b40:	b112      	cbz	r2, 8022b48 <__register_exitproc+0x28>
 8022b42:	6812      	ldr	r2, [r2, #0]
 8022b44:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8022b48:	4c20      	ldr	r4, [pc, #128]	@ (8022bcc <__register_exitproc+0xac>)
 8022b4a:	6863      	ldr	r3, [r4, #4]
 8022b4c:	2b1f      	cmp	r3, #31
 8022b4e:	dd06      	ble.n	8022b5e <__register_exitproc+0x3e>
 8022b50:	6828      	ldr	r0, [r5, #0]
 8022b52:	f7ff ffd5 	bl	8022b00 <__retarget_lock_release_recursive>
 8022b56:	f04f 30ff 	mov.w	r0, #4294967295
 8022b5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022b5e:	b32f      	cbz	r7, 8022bac <__register_exitproc+0x8c>
 8022b60:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8022b64:	b968      	cbnz	r0, 8022b82 <__register_exitproc+0x62>
 8022b66:	4b1b      	ldr	r3, [pc, #108]	@ (8022bd4 <__register_exitproc+0xb4>)
 8022b68:	2b00      	cmp	r3, #0
 8022b6a:	d0f1      	beq.n	8022b50 <__register_exitproc+0x30>
 8022b6c:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8022b70:	f7ff fc5a 	bl	8022428 <malloc>
 8022b74:	2800      	cmp	r0, #0
 8022b76:	d0eb      	beq.n	8022b50 <__register_exitproc+0x30>
 8022b78:	2300      	movs	r3, #0
 8022b7a:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8022b7e:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8022b82:	6863      	ldr	r3, [r4, #4]
 8022b84:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8022b88:	2201      	movs	r2, #1
 8022b8a:	409a      	lsls	r2, r3
 8022b8c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8022b90:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8022b94:	4313      	orrs	r3, r2
 8022b96:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8022b9a:	2f02      	cmp	r7, #2
 8022b9c:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8022ba0:	bf02      	ittt	eq
 8022ba2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8022ba6:	4313      	orreq	r3, r2
 8022ba8:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8022bac:	6863      	ldr	r3, [r4, #4]
 8022bae:	6828      	ldr	r0, [r5, #0]
 8022bb0:	1c5a      	adds	r2, r3, #1
 8022bb2:	3302      	adds	r3, #2
 8022bb4:	6062      	str	r2, [r4, #4]
 8022bb6:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8022bba:	f7ff ffa1 	bl	8022b00 <__retarget_lock_release_recursive>
 8022bbe:	2000      	movs	r0, #0
 8022bc0:	e7cb      	b.n	8022b5a <__register_exitproc+0x3a>
 8022bc2:	bf00      	nop
 8022bc4:	20000120 	.word	0x20000120
 8022bc8:	200177b4 	.word	0x200177b4
 8022bcc:	20017728 	.word	0x20017728
 8022bd0:	08025e74 	.word	0x08025e74
 8022bd4:	08022429 	.word	0x08022429

08022bd8 <_free_r>:
 8022bd8:	b538      	push	{r3, r4, r5, lr}
 8022bda:	4605      	mov	r5, r0
 8022bdc:	2900      	cmp	r1, #0
 8022bde:	d041      	beq.n	8022c64 <_free_r+0x8c>
 8022be0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8022be4:	1f0c      	subs	r4, r1, #4
 8022be6:	2b00      	cmp	r3, #0
 8022be8:	bfb8      	it	lt
 8022bea:	18e4      	addlt	r4, r4, r3
 8022bec:	f7ff fcce 	bl	802258c <__malloc_lock>
 8022bf0:	4a1d      	ldr	r2, [pc, #116]	@ (8022c68 <_free_r+0x90>)
 8022bf2:	6813      	ldr	r3, [r2, #0]
 8022bf4:	b933      	cbnz	r3, 8022c04 <_free_r+0x2c>
 8022bf6:	6063      	str	r3, [r4, #4]
 8022bf8:	6014      	str	r4, [r2, #0]
 8022bfa:	4628      	mov	r0, r5
 8022bfc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8022c00:	f7ff bcca 	b.w	8022598 <__malloc_unlock>
 8022c04:	42a3      	cmp	r3, r4
 8022c06:	d908      	bls.n	8022c1a <_free_r+0x42>
 8022c08:	6820      	ldr	r0, [r4, #0]
 8022c0a:	1821      	adds	r1, r4, r0
 8022c0c:	428b      	cmp	r3, r1
 8022c0e:	bf01      	itttt	eq
 8022c10:	6819      	ldreq	r1, [r3, #0]
 8022c12:	685b      	ldreq	r3, [r3, #4]
 8022c14:	1809      	addeq	r1, r1, r0
 8022c16:	6021      	streq	r1, [r4, #0]
 8022c18:	e7ed      	b.n	8022bf6 <_free_r+0x1e>
 8022c1a:	461a      	mov	r2, r3
 8022c1c:	685b      	ldr	r3, [r3, #4]
 8022c1e:	b10b      	cbz	r3, 8022c24 <_free_r+0x4c>
 8022c20:	42a3      	cmp	r3, r4
 8022c22:	d9fa      	bls.n	8022c1a <_free_r+0x42>
 8022c24:	6811      	ldr	r1, [r2, #0]
 8022c26:	1850      	adds	r0, r2, r1
 8022c28:	42a0      	cmp	r0, r4
 8022c2a:	d10b      	bne.n	8022c44 <_free_r+0x6c>
 8022c2c:	6820      	ldr	r0, [r4, #0]
 8022c2e:	4401      	add	r1, r0
 8022c30:	1850      	adds	r0, r2, r1
 8022c32:	4283      	cmp	r3, r0
 8022c34:	6011      	str	r1, [r2, #0]
 8022c36:	d1e0      	bne.n	8022bfa <_free_r+0x22>
 8022c38:	6818      	ldr	r0, [r3, #0]
 8022c3a:	685b      	ldr	r3, [r3, #4]
 8022c3c:	6053      	str	r3, [r2, #4]
 8022c3e:	4408      	add	r0, r1
 8022c40:	6010      	str	r0, [r2, #0]
 8022c42:	e7da      	b.n	8022bfa <_free_r+0x22>
 8022c44:	d902      	bls.n	8022c4c <_free_r+0x74>
 8022c46:	230c      	movs	r3, #12
 8022c48:	602b      	str	r3, [r5, #0]
 8022c4a:	e7d6      	b.n	8022bfa <_free_r+0x22>
 8022c4c:	6820      	ldr	r0, [r4, #0]
 8022c4e:	1821      	adds	r1, r4, r0
 8022c50:	428b      	cmp	r3, r1
 8022c52:	bf04      	itt	eq
 8022c54:	6819      	ldreq	r1, [r3, #0]
 8022c56:	685b      	ldreq	r3, [r3, #4]
 8022c58:	6063      	str	r3, [r4, #4]
 8022c5a:	bf04      	itt	eq
 8022c5c:	1809      	addeq	r1, r1, r0
 8022c5e:	6021      	streq	r1, [r4, #0]
 8022c60:	6054      	str	r4, [r2, #4]
 8022c62:	e7ca      	b.n	8022bfa <_free_r+0x22>
 8022c64:	bd38      	pop	{r3, r4, r5, pc}
 8022c66:	bf00      	nop
 8022c68:	200175e0 	.word	0x200175e0

08022c6c <__sfputc_r>:
 8022c6c:	6893      	ldr	r3, [r2, #8]
 8022c6e:	3b01      	subs	r3, #1
 8022c70:	2b00      	cmp	r3, #0
 8022c72:	b410      	push	{r4}
 8022c74:	6093      	str	r3, [r2, #8]
 8022c76:	da08      	bge.n	8022c8a <__sfputc_r+0x1e>
 8022c78:	6994      	ldr	r4, [r2, #24]
 8022c7a:	42a3      	cmp	r3, r4
 8022c7c:	db01      	blt.n	8022c82 <__sfputc_r+0x16>
 8022c7e:	290a      	cmp	r1, #10
 8022c80:	d103      	bne.n	8022c8a <__sfputc_r+0x1e>
 8022c82:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022c86:	f7ff bdb2 	b.w	80227ee <__swbuf_r>
 8022c8a:	6813      	ldr	r3, [r2, #0]
 8022c8c:	1c58      	adds	r0, r3, #1
 8022c8e:	6010      	str	r0, [r2, #0]
 8022c90:	7019      	strb	r1, [r3, #0]
 8022c92:	4608      	mov	r0, r1
 8022c94:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022c98:	4770      	bx	lr

08022c9a <__sfputs_r>:
 8022c9a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022c9c:	4606      	mov	r6, r0
 8022c9e:	460f      	mov	r7, r1
 8022ca0:	4614      	mov	r4, r2
 8022ca2:	18d5      	adds	r5, r2, r3
 8022ca4:	42ac      	cmp	r4, r5
 8022ca6:	d101      	bne.n	8022cac <__sfputs_r+0x12>
 8022ca8:	2000      	movs	r0, #0
 8022caa:	e007      	b.n	8022cbc <__sfputs_r+0x22>
 8022cac:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022cb0:	463a      	mov	r2, r7
 8022cb2:	4630      	mov	r0, r6
 8022cb4:	f7ff ffda 	bl	8022c6c <__sfputc_r>
 8022cb8:	1c43      	adds	r3, r0, #1
 8022cba:	d1f3      	bne.n	8022ca4 <__sfputs_r+0xa>
 8022cbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08022cc0 <_vfiprintf_r>:
 8022cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022cc4:	460d      	mov	r5, r1
 8022cc6:	b09d      	sub	sp, #116	@ 0x74
 8022cc8:	4614      	mov	r4, r2
 8022cca:	4698      	mov	r8, r3
 8022ccc:	4606      	mov	r6, r0
 8022cce:	b118      	cbz	r0, 8022cd8 <_vfiprintf_r+0x18>
 8022cd0:	6a03      	ldr	r3, [r0, #32]
 8022cd2:	b90b      	cbnz	r3, 8022cd8 <_vfiprintf_r+0x18>
 8022cd4:	f7ff fd00 	bl	80226d8 <__sinit>
 8022cd8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8022cda:	07d9      	lsls	r1, r3, #31
 8022cdc:	d405      	bmi.n	8022cea <_vfiprintf_r+0x2a>
 8022cde:	89ab      	ldrh	r3, [r5, #12]
 8022ce0:	059a      	lsls	r2, r3, #22
 8022ce2:	d402      	bmi.n	8022cea <_vfiprintf_r+0x2a>
 8022ce4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8022ce6:	f7ff ff0a 	bl	8022afe <__retarget_lock_acquire_recursive>
 8022cea:	89ab      	ldrh	r3, [r5, #12]
 8022cec:	071b      	lsls	r3, r3, #28
 8022cee:	d501      	bpl.n	8022cf4 <_vfiprintf_r+0x34>
 8022cf0:	692b      	ldr	r3, [r5, #16]
 8022cf2:	b99b      	cbnz	r3, 8022d1c <_vfiprintf_r+0x5c>
 8022cf4:	4629      	mov	r1, r5
 8022cf6:	4630      	mov	r0, r6
 8022cf8:	f7ff fdb8 	bl	802286c <__swsetup_r>
 8022cfc:	b170      	cbz	r0, 8022d1c <_vfiprintf_r+0x5c>
 8022cfe:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8022d00:	07dc      	lsls	r4, r3, #31
 8022d02:	d504      	bpl.n	8022d0e <_vfiprintf_r+0x4e>
 8022d04:	f04f 30ff 	mov.w	r0, #4294967295
 8022d08:	b01d      	add	sp, #116	@ 0x74
 8022d0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022d0e:	89ab      	ldrh	r3, [r5, #12]
 8022d10:	0598      	lsls	r0, r3, #22
 8022d12:	d4f7      	bmi.n	8022d04 <_vfiprintf_r+0x44>
 8022d14:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8022d16:	f7ff fef3 	bl	8022b00 <__retarget_lock_release_recursive>
 8022d1a:	e7f3      	b.n	8022d04 <_vfiprintf_r+0x44>
 8022d1c:	2300      	movs	r3, #0
 8022d1e:	9309      	str	r3, [sp, #36]	@ 0x24
 8022d20:	2320      	movs	r3, #32
 8022d22:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8022d26:	f8cd 800c 	str.w	r8, [sp, #12]
 8022d2a:	2330      	movs	r3, #48	@ 0x30
 8022d2c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8022edc <_vfiprintf_r+0x21c>
 8022d30:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8022d34:	f04f 0901 	mov.w	r9, #1
 8022d38:	4623      	mov	r3, r4
 8022d3a:	469a      	mov	sl, r3
 8022d3c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8022d40:	b10a      	cbz	r2, 8022d46 <_vfiprintf_r+0x86>
 8022d42:	2a25      	cmp	r2, #37	@ 0x25
 8022d44:	d1f9      	bne.n	8022d3a <_vfiprintf_r+0x7a>
 8022d46:	ebba 0b04 	subs.w	fp, sl, r4
 8022d4a:	d00b      	beq.n	8022d64 <_vfiprintf_r+0xa4>
 8022d4c:	465b      	mov	r3, fp
 8022d4e:	4622      	mov	r2, r4
 8022d50:	4629      	mov	r1, r5
 8022d52:	4630      	mov	r0, r6
 8022d54:	f7ff ffa1 	bl	8022c9a <__sfputs_r>
 8022d58:	3001      	adds	r0, #1
 8022d5a:	f000 80a7 	beq.w	8022eac <_vfiprintf_r+0x1ec>
 8022d5e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022d60:	445a      	add	r2, fp
 8022d62:	9209      	str	r2, [sp, #36]	@ 0x24
 8022d64:	f89a 3000 	ldrb.w	r3, [sl]
 8022d68:	2b00      	cmp	r3, #0
 8022d6a:	f000 809f 	beq.w	8022eac <_vfiprintf_r+0x1ec>
 8022d6e:	2300      	movs	r3, #0
 8022d70:	f04f 32ff 	mov.w	r2, #4294967295
 8022d74:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8022d78:	f10a 0a01 	add.w	sl, sl, #1
 8022d7c:	9304      	str	r3, [sp, #16]
 8022d7e:	9307      	str	r3, [sp, #28]
 8022d80:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8022d84:	931a      	str	r3, [sp, #104]	@ 0x68
 8022d86:	4654      	mov	r4, sl
 8022d88:	2205      	movs	r2, #5
 8022d8a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022d8e:	4853      	ldr	r0, [pc, #332]	@ (8022edc <_vfiprintf_r+0x21c>)
 8022d90:	f7dd fa3e 	bl	8000210 <memchr>
 8022d94:	9a04      	ldr	r2, [sp, #16]
 8022d96:	b9d8      	cbnz	r0, 8022dd0 <_vfiprintf_r+0x110>
 8022d98:	06d1      	lsls	r1, r2, #27
 8022d9a:	bf44      	itt	mi
 8022d9c:	2320      	movmi	r3, #32
 8022d9e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8022da2:	0713      	lsls	r3, r2, #28
 8022da4:	bf44      	itt	mi
 8022da6:	232b      	movmi	r3, #43	@ 0x2b
 8022da8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8022dac:	f89a 3000 	ldrb.w	r3, [sl]
 8022db0:	2b2a      	cmp	r3, #42	@ 0x2a
 8022db2:	d015      	beq.n	8022de0 <_vfiprintf_r+0x120>
 8022db4:	9a07      	ldr	r2, [sp, #28]
 8022db6:	4654      	mov	r4, sl
 8022db8:	2000      	movs	r0, #0
 8022dba:	f04f 0c0a 	mov.w	ip, #10
 8022dbe:	4621      	mov	r1, r4
 8022dc0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8022dc4:	3b30      	subs	r3, #48	@ 0x30
 8022dc6:	2b09      	cmp	r3, #9
 8022dc8:	d94b      	bls.n	8022e62 <_vfiprintf_r+0x1a2>
 8022dca:	b1b0      	cbz	r0, 8022dfa <_vfiprintf_r+0x13a>
 8022dcc:	9207      	str	r2, [sp, #28]
 8022dce:	e014      	b.n	8022dfa <_vfiprintf_r+0x13a>
 8022dd0:	eba0 0308 	sub.w	r3, r0, r8
 8022dd4:	fa09 f303 	lsl.w	r3, r9, r3
 8022dd8:	4313      	orrs	r3, r2
 8022dda:	9304      	str	r3, [sp, #16]
 8022ddc:	46a2      	mov	sl, r4
 8022dde:	e7d2      	b.n	8022d86 <_vfiprintf_r+0xc6>
 8022de0:	9b03      	ldr	r3, [sp, #12]
 8022de2:	1d19      	adds	r1, r3, #4
 8022de4:	681b      	ldr	r3, [r3, #0]
 8022de6:	9103      	str	r1, [sp, #12]
 8022de8:	2b00      	cmp	r3, #0
 8022dea:	bfbb      	ittet	lt
 8022dec:	425b      	neglt	r3, r3
 8022dee:	f042 0202 	orrlt.w	r2, r2, #2
 8022df2:	9307      	strge	r3, [sp, #28]
 8022df4:	9307      	strlt	r3, [sp, #28]
 8022df6:	bfb8      	it	lt
 8022df8:	9204      	strlt	r2, [sp, #16]
 8022dfa:	7823      	ldrb	r3, [r4, #0]
 8022dfc:	2b2e      	cmp	r3, #46	@ 0x2e
 8022dfe:	d10a      	bne.n	8022e16 <_vfiprintf_r+0x156>
 8022e00:	7863      	ldrb	r3, [r4, #1]
 8022e02:	2b2a      	cmp	r3, #42	@ 0x2a
 8022e04:	d132      	bne.n	8022e6c <_vfiprintf_r+0x1ac>
 8022e06:	9b03      	ldr	r3, [sp, #12]
 8022e08:	1d1a      	adds	r2, r3, #4
 8022e0a:	681b      	ldr	r3, [r3, #0]
 8022e0c:	9203      	str	r2, [sp, #12]
 8022e0e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8022e12:	3402      	adds	r4, #2
 8022e14:	9305      	str	r3, [sp, #20]
 8022e16:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8022eec <_vfiprintf_r+0x22c>
 8022e1a:	7821      	ldrb	r1, [r4, #0]
 8022e1c:	2203      	movs	r2, #3
 8022e1e:	4650      	mov	r0, sl
 8022e20:	f7dd f9f6 	bl	8000210 <memchr>
 8022e24:	b138      	cbz	r0, 8022e36 <_vfiprintf_r+0x176>
 8022e26:	9b04      	ldr	r3, [sp, #16]
 8022e28:	eba0 000a 	sub.w	r0, r0, sl
 8022e2c:	2240      	movs	r2, #64	@ 0x40
 8022e2e:	4082      	lsls	r2, r0
 8022e30:	4313      	orrs	r3, r2
 8022e32:	3401      	adds	r4, #1
 8022e34:	9304      	str	r3, [sp, #16]
 8022e36:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022e3a:	4829      	ldr	r0, [pc, #164]	@ (8022ee0 <_vfiprintf_r+0x220>)
 8022e3c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8022e40:	2206      	movs	r2, #6
 8022e42:	f7dd f9e5 	bl	8000210 <memchr>
 8022e46:	2800      	cmp	r0, #0
 8022e48:	d03f      	beq.n	8022eca <_vfiprintf_r+0x20a>
 8022e4a:	4b26      	ldr	r3, [pc, #152]	@ (8022ee4 <_vfiprintf_r+0x224>)
 8022e4c:	bb1b      	cbnz	r3, 8022e96 <_vfiprintf_r+0x1d6>
 8022e4e:	9b03      	ldr	r3, [sp, #12]
 8022e50:	3307      	adds	r3, #7
 8022e52:	f023 0307 	bic.w	r3, r3, #7
 8022e56:	3308      	adds	r3, #8
 8022e58:	9303      	str	r3, [sp, #12]
 8022e5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022e5c:	443b      	add	r3, r7
 8022e5e:	9309      	str	r3, [sp, #36]	@ 0x24
 8022e60:	e76a      	b.n	8022d38 <_vfiprintf_r+0x78>
 8022e62:	fb0c 3202 	mla	r2, ip, r2, r3
 8022e66:	460c      	mov	r4, r1
 8022e68:	2001      	movs	r0, #1
 8022e6a:	e7a8      	b.n	8022dbe <_vfiprintf_r+0xfe>
 8022e6c:	2300      	movs	r3, #0
 8022e6e:	3401      	adds	r4, #1
 8022e70:	9305      	str	r3, [sp, #20]
 8022e72:	4619      	mov	r1, r3
 8022e74:	f04f 0c0a 	mov.w	ip, #10
 8022e78:	4620      	mov	r0, r4
 8022e7a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8022e7e:	3a30      	subs	r2, #48	@ 0x30
 8022e80:	2a09      	cmp	r2, #9
 8022e82:	d903      	bls.n	8022e8c <_vfiprintf_r+0x1cc>
 8022e84:	2b00      	cmp	r3, #0
 8022e86:	d0c6      	beq.n	8022e16 <_vfiprintf_r+0x156>
 8022e88:	9105      	str	r1, [sp, #20]
 8022e8a:	e7c4      	b.n	8022e16 <_vfiprintf_r+0x156>
 8022e8c:	fb0c 2101 	mla	r1, ip, r1, r2
 8022e90:	4604      	mov	r4, r0
 8022e92:	2301      	movs	r3, #1
 8022e94:	e7f0      	b.n	8022e78 <_vfiprintf_r+0x1b8>
 8022e96:	ab03      	add	r3, sp, #12
 8022e98:	9300      	str	r3, [sp, #0]
 8022e9a:	462a      	mov	r2, r5
 8022e9c:	4b12      	ldr	r3, [pc, #72]	@ (8022ee8 <_vfiprintf_r+0x228>)
 8022e9e:	a904      	add	r1, sp, #16
 8022ea0:	4630      	mov	r0, r6
 8022ea2:	f3af 8000 	nop.w
 8022ea6:	4607      	mov	r7, r0
 8022ea8:	1c78      	adds	r0, r7, #1
 8022eaa:	d1d6      	bne.n	8022e5a <_vfiprintf_r+0x19a>
 8022eac:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8022eae:	07d9      	lsls	r1, r3, #31
 8022eb0:	d405      	bmi.n	8022ebe <_vfiprintf_r+0x1fe>
 8022eb2:	89ab      	ldrh	r3, [r5, #12]
 8022eb4:	059a      	lsls	r2, r3, #22
 8022eb6:	d402      	bmi.n	8022ebe <_vfiprintf_r+0x1fe>
 8022eb8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8022eba:	f7ff fe21 	bl	8022b00 <__retarget_lock_release_recursive>
 8022ebe:	89ab      	ldrh	r3, [r5, #12]
 8022ec0:	065b      	lsls	r3, r3, #25
 8022ec2:	f53f af1f 	bmi.w	8022d04 <_vfiprintf_r+0x44>
 8022ec6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8022ec8:	e71e      	b.n	8022d08 <_vfiprintf_r+0x48>
 8022eca:	ab03      	add	r3, sp, #12
 8022ecc:	9300      	str	r3, [sp, #0]
 8022ece:	462a      	mov	r2, r5
 8022ed0:	4b05      	ldr	r3, [pc, #20]	@ (8022ee8 <_vfiprintf_r+0x228>)
 8022ed2:	a904      	add	r1, sp, #16
 8022ed4:	4630      	mov	r0, r6
 8022ed6:	f000 f879 	bl	8022fcc <_printf_i>
 8022eda:	e7e4      	b.n	8022ea6 <_vfiprintf_r+0x1e6>
 8022edc:	08025e78 	.word	0x08025e78
 8022ee0:	08025e82 	.word	0x08025e82
 8022ee4:	00000000 	.word	0x00000000
 8022ee8:	08022c9b 	.word	0x08022c9b
 8022eec:	08025e7e 	.word	0x08025e7e

08022ef0 <_printf_common>:
 8022ef0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022ef4:	4616      	mov	r6, r2
 8022ef6:	4698      	mov	r8, r3
 8022ef8:	688a      	ldr	r2, [r1, #8]
 8022efa:	690b      	ldr	r3, [r1, #16]
 8022efc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8022f00:	4293      	cmp	r3, r2
 8022f02:	bfb8      	it	lt
 8022f04:	4613      	movlt	r3, r2
 8022f06:	6033      	str	r3, [r6, #0]
 8022f08:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8022f0c:	4607      	mov	r7, r0
 8022f0e:	460c      	mov	r4, r1
 8022f10:	b10a      	cbz	r2, 8022f16 <_printf_common+0x26>
 8022f12:	3301      	adds	r3, #1
 8022f14:	6033      	str	r3, [r6, #0]
 8022f16:	6823      	ldr	r3, [r4, #0]
 8022f18:	0699      	lsls	r1, r3, #26
 8022f1a:	bf42      	ittt	mi
 8022f1c:	6833      	ldrmi	r3, [r6, #0]
 8022f1e:	3302      	addmi	r3, #2
 8022f20:	6033      	strmi	r3, [r6, #0]
 8022f22:	6825      	ldr	r5, [r4, #0]
 8022f24:	f015 0506 	ands.w	r5, r5, #6
 8022f28:	d106      	bne.n	8022f38 <_printf_common+0x48>
 8022f2a:	f104 0a19 	add.w	sl, r4, #25
 8022f2e:	68e3      	ldr	r3, [r4, #12]
 8022f30:	6832      	ldr	r2, [r6, #0]
 8022f32:	1a9b      	subs	r3, r3, r2
 8022f34:	42ab      	cmp	r3, r5
 8022f36:	dc26      	bgt.n	8022f86 <_printf_common+0x96>
 8022f38:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8022f3c:	6822      	ldr	r2, [r4, #0]
 8022f3e:	3b00      	subs	r3, #0
 8022f40:	bf18      	it	ne
 8022f42:	2301      	movne	r3, #1
 8022f44:	0692      	lsls	r2, r2, #26
 8022f46:	d42b      	bmi.n	8022fa0 <_printf_common+0xb0>
 8022f48:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8022f4c:	4641      	mov	r1, r8
 8022f4e:	4638      	mov	r0, r7
 8022f50:	47c8      	blx	r9
 8022f52:	3001      	adds	r0, #1
 8022f54:	d01e      	beq.n	8022f94 <_printf_common+0xa4>
 8022f56:	6823      	ldr	r3, [r4, #0]
 8022f58:	6922      	ldr	r2, [r4, #16]
 8022f5a:	f003 0306 	and.w	r3, r3, #6
 8022f5e:	2b04      	cmp	r3, #4
 8022f60:	bf02      	ittt	eq
 8022f62:	68e5      	ldreq	r5, [r4, #12]
 8022f64:	6833      	ldreq	r3, [r6, #0]
 8022f66:	1aed      	subeq	r5, r5, r3
 8022f68:	68a3      	ldr	r3, [r4, #8]
 8022f6a:	bf0c      	ite	eq
 8022f6c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8022f70:	2500      	movne	r5, #0
 8022f72:	4293      	cmp	r3, r2
 8022f74:	bfc4      	itt	gt
 8022f76:	1a9b      	subgt	r3, r3, r2
 8022f78:	18ed      	addgt	r5, r5, r3
 8022f7a:	2600      	movs	r6, #0
 8022f7c:	341a      	adds	r4, #26
 8022f7e:	42b5      	cmp	r5, r6
 8022f80:	d11a      	bne.n	8022fb8 <_printf_common+0xc8>
 8022f82:	2000      	movs	r0, #0
 8022f84:	e008      	b.n	8022f98 <_printf_common+0xa8>
 8022f86:	2301      	movs	r3, #1
 8022f88:	4652      	mov	r2, sl
 8022f8a:	4641      	mov	r1, r8
 8022f8c:	4638      	mov	r0, r7
 8022f8e:	47c8      	blx	r9
 8022f90:	3001      	adds	r0, #1
 8022f92:	d103      	bne.n	8022f9c <_printf_common+0xac>
 8022f94:	f04f 30ff 	mov.w	r0, #4294967295
 8022f98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022f9c:	3501      	adds	r5, #1
 8022f9e:	e7c6      	b.n	8022f2e <_printf_common+0x3e>
 8022fa0:	18e1      	adds	r1, r4, r3
 8022fa2:	1c5a      	adds	r2, r3, #1
 8022fa4:	2030      	movs	r0, #48	@ 0x30
 8022fa6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8022faa:	4422      	add	r2, r4
 8022fac:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8022fb0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8022fb4:	3302      	adds	r3, #2
 8022fb6:	e7c7      	b.n	8022f48 <_printf_common+0x58>
 8022fb8:	2301      	movs	r3, #1
 8022fba:	4622      	mov	r2, r4
 8022fbc:	4641      	mov	r1, r8
 8022fbe:	4638      	mov	r0, r7
 8022fc0:	47c8      	blx	r9
 8022fc2:	3001      	adds	r0, #1
 8022fc4:	d0e6      	beq.n	8022f94 <_printf_common+0xa4>
 8022fc6:	3601      	adds	r6, #1
 8022fc8:	e7d9      	b.n	8022f7e <_printf_common+0x8e>
	...

08022fcc <_printf_i>:
 8022fcc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8022fd0:	7e0f      	ldrb	r7, [r1, #24]
 8022fd2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8022fd4:	2f78      	cmp	r7, #120	@ 0x78
 8022fd6:	4691      	mov	r9, r2
 8022fd8:	4680      	mov	r8, r0
 8022fda:	460c      	mov	r4, r1
 8022fdc:	469a      	mov	sl, r3
 8022fde:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8022fe2:	d807      	bhi.n	8022ff4 <_printf_i+0x28>
 8022fe4:	2f62      	cmp	r7, #98	@ 0x62
 8022fe6:	d80a      	bhi.n	8022ffe <_printf_i+0x32>
 8022fe8:	2f00      	cmp	r7, #0
 8022fea:	f000 80d2 	beq.w	8023192 <_printf_i+0x1c6>
 8022fee:	2f58      	cmp	r7, #88	@ 0x58
 8022ff0:	f000 80b9 	beq.w	8023166 <_printf_i+0x19a>
 8022ff4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8022ff8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8022ffc:	e03a      	b.n	8023074 <_printf_i+0xa8>
 8022ffe:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8023002:	2b15      	cmp	r3, #21
 8023004:	d8f6      	bhi.n	8022ff4 <_printf_i+0x28>
 8023006:	a101      	add	r1, pc, #4	@ (adr r1, 802300c <_printf_i+0x40>)
 8023008:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802300c:	08023065 	.word	0x08023065
 8023010:	08023079 	.word	0x08023079
 8023014:	08022ff5 	.word	0x08022ff5
 8023018:	08022ff5 	.word	0x08022ff5
 802301c:	08022ff5 	.word	0x08022ff5
 8023020:	08022ff5 	.word	0x08022ff5
 8023024:	08023079 	.word	0x08023079
 8023028:	08022ff5 	.word	0x08022ff5
 802302c:	08022ff5 	.word	0x08022ff5
 8023030:	08022ff5 	.word	0x08022ff5
 8023034:	08022ff5 	.word	0x08022ff5
 8023038:	08023179 	.word	0x08023179
 802303c:	080230a3 	.word	0x080230a3
 8023040:	08023133 	.word	0x08023133
 8023044:	08022ff5 	.word	0x08022ff5
 8023048:	08022ff5 	.word	0x08022ff5
 802304c:	0802319b 	.word	0x0802319b
 8023050:	08022ff5 	.word	0x08022ff5
 8023054:	080230a3 	.word	0x080230a3
 8023058:	08022ff5 	.word	0x08022ff5
 802305c:	08022ff5 	.word	0x08022ff5
 8023060:	0802313b 	.word	0x0802313b
 8023064:	6833      	ldr	r3, [r6, #0]
 8023066:	1d1a      	adds	r2, r3, #4
 8023068:	681b      	ldr	r3, [r3, #0]
 802306a:	6032      	str	r2, [r6, #0]
 802306c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8023070:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8023074:	2301      	movs	r3, #1
 8023076:	e09d      	b.n	80231b4 <_printf_i+0x1e8>
 8023078:	6833      	ldr	r3, [r6, #0]
 802307a:	6820      	ldr	r0, [r4, #0]
 802307c:	1d19      	adds	r1, r3, #4
 802307e:	6031      	str	r1, [r6, #0]
 8023080:	0606      	lsls	r6, r0, #24
 8023082:	d501      	bpl.n	8023088 <_printf_i+0xbc>
 8023084:	681d      	ldr	r5, [r3, #0]
 8023086:	e003      	b.n	8023090 <_printf_i+0xc4>
 8023088:	0645      	lsls	r5, r0, #25
 802308a:	d5fb      	bpl.n	8023084 <_printf_i+0xb8>
 802308c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8023090:	2d00      	cmp	r5, #0
 8023092:	da03      	bge.n	802309c <_printf_i+0xd0>
 8023094:	232d      	movs	r3, #45	@ 0x2d
 8023096:	426d      	negs	r5, r5
 8023098:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802309c:	4859      	ldr	r0, [pc, #356]	@ (8023204 <_printf_i+0x238>)
 802309e:	230a      	movs	r3, #10
 80230a0:	e011      	b.n	80230c6 <_printf_i+0xfa>
 80230a2:	6821      	ldr	r1, [r4, #0]
 80230a4:	6833      	ldr	r3, [r6, #0]
 80230a6:	0608      	lsls	r0, r1, #24
 80230a8:	f853 5b04 	ldr.w	r5, [r3], #4
 80230ac:	d402      	bmi.n	80230b4 <_printf_i+0xe8>
 80230ae:	0649      	lsls	r1, r1, #25
 80230b0:	bf48      	it	mi
 80230b2:	b2ad      	uxthmi	r5, r5
 80230b4:	2f6f      	cmp	r7, #111	@ 0x6f
 80230b6:	4853      	ldr	r0, [pc, #332]	@ (8023204 <_printf_i+0x238>)
 80230b8:	6033      	str	r3, [r6, #0]
 80230ba:	bf14      	ite	ne
 80230bc:	230a      	movne	r3, #10
 80230be:	2308      	moveq	r3, #8
 80230c0:	2100      	movs	r1, #0
 80230c2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80230c6:	6866      	ldr	r6, [r4, #4]
 80230c8:	60a6      	str	r6, [r4, #8]
 80230ca:	2e00      	cmp	r6, #0
 80230cc:	bfa2      	ittt	ge
 80230ce:	6821      	ldrge	r1, [r4, #0]
 80230d0:	f021 0104 	bicge.w	r1, r1, #4
 80230d4:	6021      	strge	r1, [r4, #0]
 80230d6:	b90d      	cbnz	r5, 80230dc <_printf_i+0x110>
 80230d8:	2e00      	cmp	r6, #0
 80230da:	d04b      	beq.n	8023174 <_printf_i+0x1a8>
 80230dc:	4616      	mov	r6, r2
 80230de:	fbb5 f1f3 	udiv	r1, r5, r3
 80230e2:	fb03 5711 	mls	r7, r3, r1, r5
 80230e6:	5dc7      	ldrb	r7, [r0, r7]
 80230e8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80230ec:	462f      	mov	r7, r5
 80230ee:	42bb      	cmp	r3, r7
 80230f0:	460d      	mov	r5, r1
 80230f2:	d9f4      	bls.n	80230de <_printf_i+0x112>
 80230f4:	2b08      	cmp	r3, #8
 80230f6:	d10b      	bne.n	8023110 <_printf_i+0x144>
 80230f8:	6823      	ldr	r3, [r4, #0]
 80230fa:	07df      	lsls	r7, r3, #31
 80230fc:	d508      	bpl.n	8023110 <_printf_i+0x144>
 80230fe:	6923      	ldr	r3, [r4, #16]
 8023100:	6861      	ldr	r1, [r4, #4]
 8023102:	4299      	cmp	r1, r3
 8023104:	bfde      	ittt	le
 8023106:	2330      	movle	r3, #48	@ 0x30
 8023108:	f806 3c01 	strble.w	r3, [r6, #-1]
 802310c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8023110:	1b92      	subs	r2, r2, r6
 8023112:	6122      	str	r2, [r4, #16]
 8023114:	f8cd a000 	str.w	sl, [sp]
 8023118:	464b      	mov	r3, r9
 802311a:	aa03      	add	r2, sp, #12
 802311c:	4621      	mov	r1, r4
 802311e:	4640      	mov	r0, r8
 8023120:	f7ff fee6 	bl	8022ef0 <_printf_common>
 8023124:	3001      	adds	r0, #1
 8023126:	d14a      	bne.n	80231be <_printf_i+0x1f2>
 8023128:	f04f 30ff 	mov.w	r0, #4294967295
 802312c:	b004      	add	sp, #16
 802312e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023132:	6823      	ldr	r3, [r4, #0]
 8023134:	f043 0320 	orr.w	r3, r3, #32
 8023138:	6023      	str	r3, [r4, #0]
 802313a:	4833      	ldr	r0, [pc, #204]	@ (8023208 <_printf_i+0x23c>)
 802313c:	2778      	movs	r7, #120	@ 0x78
 802313e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8023142:	6823      	ldr	r3, [r4, #0]
 8023144:	6831      	ldr	r1, [r6, #0]
 8023146:	061f      	lsls	r7, r3, #24
 8023148:	f851 5b04 	ldr.w	r5, [r1], #4
 802314c:	d402      	bmi.n	8023154 <_printf_i+0x188>
 802314e:	065f      	lsls	r7, r3, #25
 8023150:	bf48      	it	mi
 8023152:	b2ad      	uxthmi	r5, r5
 8023154:	6031      	str	r1, [r6, #0]
 8023156:	07d9      	lsls	r1, r3, #31
 8023158:	bf44      	itt	mi
 802315a:	f043 0320 	orrmi.w	r3, r3, #32
 802315e:	6023      	strmi	r3, [r4, #0]
 8023160:	b11d      	cbz	r5, 802316a <_printf_i+0x19e>
 8023162:	2310      	movs	r3, #16
 8023164:	e7ac      	b.n	80230c0 <_printf_i+0xf4>
 8023166:	4827      	ldr	r0, [pc, #156]	@ (8023204 <_printf_i+0x238>)
 8023168:	e7e9      	b.n	802313e <_printf_i+0x172>
 802316a:	6823      	ldr	r3, [r4, #0]
 802316c:	f023 0320 	bic.w	r3, r3, #32
 8023170:	6023      	str	r3, [r4, #0]
 8023172:	e7f6      	b.n	8023162 <_printf_i+0x196>
 8023174:	4616      	mov	r6, r2
 8023176:	e7bd      	b.n	80230f4 <_printf_i+0x128>
 8023178:	6833      	ldr	r3, [r6, #0]
 802317a:	6825      	ldr	r5, [r4, #0]
 802317c:	6961      	ldr	r1, [r4, #20]
 802317e:	1d18      	adds	r0, r3, #4
 8023180:	6030      	str	r0, [r6, #0]
 8023182:	062e      	lsls	r6, r5, #24
 8023184:	681b      	ldr	r3, [r3, #0]
 8023186:	d501      	bpl.n	802318c <_printf_i+0x1c0>
 8023188:	6019      	str	r1, [r3, #0]
 802318a:	e002      	b.n	8023192 <_printf_i+0x1c6>
 802318c:	0668      	lsls	r0, r5, #25
 802318e:	d5fb      	bpl.n	8023188 <_printf_i+0x1bc>
 8023190:	8019      	strh	r1, [r3, #0]
 8023192:	2300      	movs	r3, #0
 8023194:	6123      	str	r3, [r4, #16]
 8023196:	4616      	mov	r6, r2
 8023198:	e7bc      	b.n	8023114 <_printf_i+0x148>
 802319a:	6833      	ldr	r3, [r6, #0]
 802319c:	1d1a      	adds	r2, r3, #4
 802319e:	6032      	str	r2, [r6, #0]
 80231a0:	681e      	ldr	r6, [r3, #0]
 80231a2:	6862      	ldr	r2, [r4, #4]
 80231a4:	2100      	movs	r1, #0
 80231a6:	4630      	mov	r0, r6
 80231a8:	f7dd f832 	bl	8000210 <memchr>
 80231ac:	b108      	cbz	r0, 80231b2 <_printf_i+0x1e6>
 80231ae:	1b80      	subs	r0, r0, r6
 80231b0:	6060      	str	r0, [r4, #4]
 80231b2:	6863      	ldr	r3, [r4, #4]
 80231b4:	6123      	str	r3, [r4, #16]
 80231b6:	2300      	movs	r3, #0
 80231b8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80231bc:	e7aa      	b.n	8023114 <_printf_i+0x148>
 80231be:	6923      	ldr	r3, [r4, #16]
 80231c0:	4632      	mov	r2, r6
 80231c2:	4649      	mov	r1, r9
 80231c4:	4640      	mov	r0, r8
 80231c6:	47d0      	blx	sl
 80231c8:	3001      	adds	r0, #1
 80231ca:	d0ad      	beq.n	8023128 <_printf_i+0x15c>
 80231cc:	6823      	ldr	r3, [r4, #0]
 80231ce:	079b      	lsls	r3, r3, #30
 80231d0:	d413      	bmi.n	80231fa <_printf_i+0x22e>
 80231d2:	68e0      	ldr	r0, [r4, #12]
 80231d4:	9b03      	ldr	r3, [sp, #12]
 80231d6:	4298      	cmp	r0, r3
 80231d8:	bfb8      	it	lt
 80231da:	4618      	movlt	r0, r3
 80231dc:	e7a6      	b.n	802312c <_printf_i+0x160>
 80231de:	2301      	movs	r3, #1
 80231e0:	4632      	mov	r2, r6
 80231e2:	4649      	mov	r1, r9
 80231e4:	4640      	mov	r0, r8
 80231e6:	47d0      	blx	sl
 80231e8:	3001      	adds	r0, #1
 80231ea:	d09d      	beq.n	8023128 <_printf_i+0x15c>
 80231ec:	3501      	adds	r5, #1
 80231ee:	68e3      	ldr	r3, [r4, #12]
 80231f0:	9903      	ldr	r1, [sp, #12]
 80231f2:	1a5b      	subs	r3, r3, r1
 80231f4:	42ab      	cmp	r3, r5
 80231f6:	dcf2      	bgt.n	80231de <_printf_i+0x212>
 80231f8:	e7eb      	b.n	80231d2 <_printf_i+0x206>
 80231fa:	2500      	movs	r5, #0
 80231fc:	f104 0619 	add.w	r6, r4, #25
 8023200:	e7f5      	b.n	80231ee <_printf_i+0x222>
 8023202:	bf00      	nop
 8023204:	08025e89 	.word	0x08025e89
 8023208:	08025e9a 	.word	0x08025e9a

0802320c <__sflush_r>:
 802320c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8023210:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023214:	0716      	lsls	r6, r2, #28
 8023216:	4605      	mov	r5, r0
 8023218:	460c      	mov	r4, r1
 802321a:	d454      	bmi.n	80232c6 <__sflush_r+0xba>
 802321c:	684b      	ldr	r3, [r1, #4]
 802321e:	2b00      	cmp	r3, #0
 8023220:	dc02      	bgt.n	8023228 <__sflush_r+0x1c>
 8023222:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8023224:	2b00      	cmp	r3, #0
 8023226:	dd48      	ble.n	80232ba <__sflush_r+0xae>
 8023228:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802322a:	2e00      	cmp	r6, #0
 802322c:	d045      	beq.n	80232ba <__sflush_r+0xae>
 802322e:	2300      	movs	r3, #0
 8023230:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8023234:	682f      	ldr	r7, [r5, #0]
 8023236:	6a21      	ldr	r1, [r4, #32]
 8023238:	602b      	str	r3, [r5, #0]
 802323a:	d030      	beq.n	802329e <__sflush_r+0x92>
 802323c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802323e:	89a3      	ldrh	r3, [r4, #12]
 8023240:	0759      	lsls	r1, r3, #29
 8023242:	d505      	bpl.n	8023250 <__sflush_r+0x44>
 8023244:	6863      	ldr	r3, [r4, #4]
 8023246:	1ad2      	subs	r2, r2, r3
 8023248:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802324a:	b10b      	cbz	r3, 8023250 <__sflush_r+0x44>
 802324c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802324e:	1ad2      	subs	r2, r2, r3
 8023250:	2300      	movs	r3, #0
 8023252:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8023254:	6a21      	ldr	r1, [r4, #32]
 8023256:	4628      	mov	r0, r5
 8023258:	47b0      	blx	r6
 802325a:	1c43      	adds	r3, r0, #1
 802325c:	89a3      	ldrh	r3, [r4, #12]
 802325e:	d106      	bne.n	802326e <__sflush_r+0x62>
 8023260:	6829      	ldr	r1, [r5, #0]
 8023262:	291d      	cmp	r1, #29
 8023264:	d82b      	bhi.n	80232be <__sflush_r+0xb2>
 8023266:	4a2a      	ldr	r2, [pc, #168]	@ (8023310 <__sflush_r+0x104>)
 8023268:	410a      	asrs	r2, r1
 802326a:	07d6      	lsls	r6, r2, #31
 802326c:	d427      	bmi.n	80232be <__sflush_r+0xb2>
 802326e:	2200      	movs	r2, #0
 8023270:	6062      	str	r2, [r4, #4]
 8023272:	04d9      	lsls	r1, r3, #19
 8023274:	6922      	ldr	r2, [r4, #16]
 8023276:	6022      	str	r2, [r4, #0]
 8023278:	d504      	bpl.n	8023284 <__sflush_r+0x78>
 802327a:	1c42      	adds	r2, r0, #1
 802327c:	d101      	bne.n	8023282 <__sflush_r+0x76>
 802327e:	682b      	ldr	r3, [r5, #0]
 8023280:	b903      	cbnz	r3, 8023284 <__sflush_r+0x78>
 8023282:	6560      	str	r0, [r4, #84]	@ 0x54
 8023284:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8023286:	602f      	str	r7, [r5, #0]
 8023288:	b1b9      	cbz	r1, 80232ba <__sflush_r+0xae>
 802328a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802328e:	4299      	cmp	r1, r3
 8023290:	d002      	beq.n	8023298 <__sflush_r+0x8c>
 8023292:	4628      	mov	r0, r5
 8023294:	f7ff fca0 	bl	8022bd8 <_free_r>
 8023298:	2300      	movs	r3, #0
 802329a:	6363      	str	r3, [r4, #52]	@ 0x34
 802329c:	e00d      	b.n	80232ba <__sflush_r+0xae>
 802329e:	2301      	movs	r3, #1
 80232a0:	4628      	mov	r0, r5
 80232a2:	47b0      	blx	r6
 80232a4:	4602      	mov	r2, r0
 80232a6:	1c50      	adds	r0, r2, #1
 80232a8:	d1c9      	bne.n	802323e <__sflush_r+0x32>
 80232aa:	682b      	ldr	r3, [r5, #0]
 80232ac:	2b00      	cmp	r3, #0
 80232ae:	d0c6      	beq.n	802323e <__sflush_r+0x32>
 80232b0:	2b1d      	cmp	r3, #29
 80232b2:	d001      	beq.n	80232b8 <__sflush_r+0xac>
 80232b4:	2b16      	cmp	r3, #22
 80232b6:	d11e      	bne.n	80232f6 <__sflush_r+0xea>
 80232b8:	602f      	str	r7, [r5, #0]
 80232ba:	2000      	movs	r0, #0
 80232bc:	e022      	b.n	8023304 <__sflush_r+0xf8>
 80232be:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80232c2:	b21b      	sxth	r3, r3
 80232c4:	e01b      	b.n	80232fe <__sflush_r+0xf2>
 80232c6:	690f      	ldr	r7, [r1, #16]
 80232c8:	2f00      	cmp	r7, #0
 80232ca:	d0f6      	beq.n	80232ba <__sflush_r+0xae>
 80232cc:	0793      	lsls	r3, r2, #30
 80232ce:	680e      	ldr	r6, [r1, #0]
 80232d0:	bf08      	it	eq
 80232d2:	694b      	ldreq	r3, [r1, #20]
 80232d4:	600f      	str	r7, [r1, #0]
 80232d6:	bf18      	it	ne
 80232d8:	2300      	movne	r3, #0
 80232da:	eba6 0807 	sub.w	r8, r6, r7
 80232de:	608b      	str	r3, [r1, #8]
 80232e0:	f1b8 0f00 	cmp.w	r8, #0
 80232e4:	dde9      	ble.n	80232ba <__sflush_r+0xae>
 80232e6:	6a21      	ldr	r1, [r4, #32]
 80232e8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80232ea:	4643      	mov	r3, r8
 80232ec:	463a      	mov	r2, r7
 80232ee:	4628      	mov	r0, r5
 80232f0:	47b0      	blx	r6
 80232f2:	2800      	cmp	r0, #0
 80232f4:	dc08      	bgt.n	8023308 <__sflush_r+0xfc>
 80232f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80232fa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80232fe:	81a3      	strh	r3, [r4, #12]
 8023300:	f04f 30ff 	mov.w	r0, #4294967295
 8023304:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023308:	4407      	add	r7, r0
 802330a:	eba8 0800 	sub.w	r8, r8, r0
 802330e:	e7e7      	b.n	80232e0 <__sflush_r+0xd4>
 8023310:	dfbffffe 	.word	0xdfbffffe

08023314 <_fflush_r>:
 8023314:	b538      	push	{r3, r4, r5, lr}
 8023316:	690b      	ldr	r3, [r1, #16]
 8023318:	4605      	mov	r5, r0
 802331a:	460c      	mov	r4, r1
 802331c:	b913      	cbnz	r3, 8023324 <_fflush_r+0x10>
 802331e:	2500      	movs	r5, #0
 8023320:	4628      	mov	r0, r5
 8023322:	bd38      	pop	{r3, r4, r5, pc}
 8023324:	b118      	cbz	r0, 802332e <_fflush_r+0x1a>
 8023326:	6a03      	ldr	r3, [r0, #32]
 8023328:	b90b      	cbnz	r3, 802332e <_fflush_r+0x1a>
 802332a:	f7ff f9d5 	bl	80226d8 <__sinit>
 802332e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023332:	2b00      	cmp	r3, #0
 8023334:	d0f3      	beq.n	802331e <_fflush_r+0xa>
 8023336:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8023338:	07d0      	lsls	r0, r2, #31
 802333a:	d404      	bmi.n	8023346 <_fflush_r+0x32>
 802333c:	0599      	lsls	r1, r3, #22
 802333e:	d402      	bmi.n	8023346 <_fflush_r+0x32>
 8023340:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8023342:	f7ff fbdc 	bl	8022afe <__retarget_lock_acquire_recursive>
 8023346:	4628      	mov	r0, r5
 8023348:	4621      	mov	r1, r4
 802334a:	f7ff ff5f 	bl	802320c <__sflush_r>
 802334e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8023350:	07da      	lsls	r2, r3, #31
 8023352:	4605      	mov	r5, r0
 8023354:	d4e4      	bmi.n	8023320 <_fflush_r+0xc>
 8023356:	89a3      	ldrh	r3, [r4, #12]
 8023358:	059b      	lsls	r3, r3, #22
 802335a:	d4e1      	bmi.n	8023320 <_fflush_r+0xc>
 802335c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802335e:	f7ff fbcf 	bl	8022b00 <__retarget_lock_release_recursive>
 8023362:	e7dd      	b.n	8023320 <_fflush_r+0xc>

08023364 <__swhatbuf_r>:
 8023364:	b570      	push	{r4, r5, r6, lr}
 8023366:	460c      	mov	r4, r1
 8023368:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802336c:	2900      	cmp	r1, #0
 802336e:	b096      	sub	sp, #88	@ 0x58
 8023370:	4615      	mov	r5, r2
 8023372:	461e      	mov	r6, r3
 8023374:	da0d      	bge.n	8023392 <__swhatbuf_r+0x2e>
 8023376:	89a3      	ldrh	r3, [r4, #12]
 8023378:	f013 0f80 	tst.w	r3, #128	@ 0x80
 802337c:	f04f 0100 	mov.w	r1, #0
 8023380:	bf14      	ite	ne
 8023382:	2340      	movne	r3, #64	@ 0x40
 8023384:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8023388:	2000      	movs	r0, #0
 802338a:	6031      	str	r1, [r6, #0]
 802338c:	602b      	str	r3, [r5, #0]
 802338e:	b016      	add	sp, #88	@ 0x58
 8023390:	bd70      	pop	{r4, r5, r6, pc}
 8023392:	466a      	mov	r2, sp
 8023394:	f000 f848 	bl	8023428 <_fstat_r>
 8023398:	2800      	cmp	r0, #0
 802339a:	dbec      	blt.n	8023376 <__swhatbuf_r+0x12>
 802339c:	9901      	ldr	r1, [sp, #4]
 802339e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80233a2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80233a6:	4259      	negs	r1, r3
 80233a8:	4159      	adcs	r1, r3
 80233aa:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80233ae:	e7eb      	b.n	8023388 <__swhatbuf_r+0x24>

080233b0 <__smakebuf_r>:
 80233b0:	898b      	ldrh	r3, [r1, #12]
 80233b2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80233b4:	079d      	lsls	r5, r3, #30
 80233b6:	4606      	mov	r6, r0
 80233b8:	460c      	mov	r4, r1
 80233ba:	d507      	bpl.n	80233cc <__smakebuf_r+0x1c>
 80233bc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80233c0:	6023      	str	r3, [r4, #0]
 80233c2:	6123      	str	r3, [r4, #16]
 80233c4:	2301      	movs	r3, #1
 80233c6:	6163      	str	r3, [r4, #20]
 80233c8:	b003      	add	sp, #12
 80233ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80233cc:	ab01      	add	r3, sp, #4
 80233ce:	466a      	mov	r2, sp
 80233d0:	f7ff ffc8 	bl	8023364 <__swhatbuf_r>
 80233d4:	9f00      	ldr	r7, [sp, #0]
 80233d6:	4605      	mov	r5, r0
 80233d8:	4639      	mov	r1, r7
 80233da:	4630      	mov	r0, r6
 80233dc:	f7ff f856 	bl	802248c <_malloc_r>
 80233e0:	b948      	cbnz	r0, 80233f6 <__smakebuf_r+0x46>
 80233e2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80233e6:	059a      	lsls	r2, r3, #22
 80233e8:	d4ee      	bmi.n	80233c8 <__smakebuf_r+0x18>
 80233ea:	f023 0303 	bic.w	r3, r3, #3
 80233ee:	f043 0302 	orr.w	r3, r3, #2
 80233f2:	81a3      	strh	r3, [r4, #12]
 80233f4:	e7e2      	b.n	80233bc <__smakebuf_r+0xc>
 80233f6:	89a3      	ldrh	r3, [r4, #12]
 80233f8:	6020      	str	r0, [r4, #0]
 80233fa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80233fe:	81a3      	strh	r3, [r4, #12]
 8023400:	9b01      	ldr	r3, [sp, #4]
 8023402:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8023406:	b15b      	cbz	r3, 8023420 <__smakebuf_r+0x70>
 8023408:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802340c:	4630      	mov	r0, r6
 802340e:	f000 f81d 	bl	802344c <_isatty_r>
 8023412:	b128      	cbz	r0, 8023420 <__smakebuf_r+0x70>
 8023414:	89a3      	ldrh	r3, [r4, #12]
 8023416:	f023 0303 	bic.w	r3, r3, #3
 802341a:	f043 0301 	orr.w	r3, r3, #1
 802341e:	81a3      	strh	r3, [r4, #12]
 8023420:	89a3      	ldrh	r3, [r4, #12]
 8023422:	431d      	orrs	r5, r3
 8023424:	81a5      	strh	r5, [r4, #12]
 8023426:	e7cf      	b.n	80233c8 <__smakebuf_r+0x18>

08023428 <_fstat_r>:
 8023428:	b538      	push	{r3, r4, r5, lr}
 802342a:	4d07      	ldr	r5, [pc, #28]	@ (8023448 <_fstat_r+0x20>)
 802342c:	2300      	movs	r3, #0
 802342e:	4604      	mov	r4, r0
 8023430:	4608      	mov	r0, r1
 8023432:	4611      	mov	r1, r2
 8023434:	602b      	str	r3, [r5, #0]
 8023436:	f7dd ff4a 	bl	80012ce <_fstat>
 802343a:	1c43      	adds	r3, r0, #1
 802343c:	d102      	bne.n	8023444 <_fstat_r+0x1c>
 802343e:	682b      	ldr	r3, [r5, #0]
 8023440:	b103      	cbz	r3, 8023444 <_fstat_r+0x1c>
 8023442:	6023      	str	r3, [r4, #0]
 8023444:	bd38      	pop	{r3, r4, r5, pc}
 8023446:	bf00      	nop
 8023448:	20017720 	.word	0x20017720

0802344c <_isatty_r>:
 802344c:	b538      	push	{r3, r4, r5, lr}
 802344e:	4d06      	ldr	r5, [pc, #24]	@ (8023468 <_isatty_r+0x1c>)
 8023450:	2300      	movs	r3, #0
 8023452:	4604      	mov	r4, r0
 8023454:	4608      	mov	r0, r1
 8023456:	602b      	str	r3, [r5, #0]
 8023458:	f7dd ff3e 	bl	80012d8 <_isatty>
 802345c:	1c43      	adds	r3, r0, #1
 802345e:	d102      	bne.n	8023466 <_isatty_r+0x1a>
 8023460:	682b      	ldr	r3, [r5, #0]
 8023462:	b103      	cbz	r3, 8023466 <_isatty_r+0x1a>
 8023464:	6023      	str	r3, [r4, #0]
 8023466:	bd38      	pop	{r3, r4, r5, pc}
 8023468:	20017720 	.word	0x20017720

0802346c <_init>:
 802346c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802346e:	bf00      	nop
 8023470:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8023472:	bc08      	pop	{r3}
 8023474:	469e      	mov	lr, r3
 8023476:	4770      	bx	lr

08023478 <_fini>:
 8023478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802347a:	bf00      	nop
 802347c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802347e:	bc08      	pop	{r3}
 8023480:	469e      	mov	lr, r3
 8023482:	4770      	bx	lr
