
STM32F746G_DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000228a8  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000275c  08022a78  08022a78  00023a78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000010  080251d4  080251d4  000261d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  080251e4  080251e4  0008845c  2**0
                  CONTENTS
  5 .ARM          00000008  080251e4  080251e4  000261e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  080251ec  080251ec  0008845c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  080251ec  080251ec  000261ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08025204  08025204  00026204  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000124  20000000  0802520c  00027000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          00017688  20000124  08025330  00027124  2**2
                  ALLOC
 11 ._user_heap_stack 00001404  200177ac  08025330  000277ac  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0008845c  2**0
                  CONTENTS, READONLY
 13 BufferSection 000bf400  c0000000  c0000000  00089000  2**2
                  ALLOC
 14 ExtFlashSection 0005fb30  90000000  90000000  00028000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 FontFlashSection 00000908  9005fb30  9005fb30  00087b30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 00000024  90060438  90060438  00088438  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .debug_info   000be731  00000000  00000000  0008848c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00013480  00000000  00000000  00146bbd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003038  00000000  00000000  0015a040  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 000036f5  00000000  00000000  0015d078  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  00036083  00000000  00000000  0016076d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   00054e4c  00000000  00000000  001967f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0012ce8e  00000000  00000000  001eb63c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000c2  00000000  00000000  003184ca  2**0
                  CONTENTS, READONLY
 25 .debug_frame  000088bc  00000000  00000000  0031858c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 0001b49b  00000000  00000000  00320e48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000007e  00000000  00000000  0033c2e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000124 	.word	0x20000124
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08022a60 	.word	0x08022a60

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000128 	.word	0x20000128
 800020c:	08022a60 	.word	0x08022a60

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_uldivmod>:
 80002b0:	b953      	cbnz	r3, 80002c8 <__aeabi_uldivmod+0x18>
 80002b2:	b94a      	cbnz	r2, 80002c8 <__aeabi_uldivmod+0x18>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bf08      	it	eq
 80002b8:	2800      	cmpeq	r0, #0
 80002ba:	bf1c      	itt	ne
 80002bc:	f04f 31ff 	movne.w	r1, #4294967295
 80002c0:	f04f 30ff 	movne.w	r0, #4294967295
 80002c4:	f000 b96a 	b.w	800059c <__aeabi_idiv0>
 80002c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d0:	f000 f806 	bl	80002e0 <__udivmoddi4>
 80002d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002dc:	b004      	add	sp, #16
 80002de:	4770      	bx	lr

080002e0 <__udivmoddi4>:
 80002e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002e4:	9d08      	ldr	r5, [sp, #32]
 80002e6:	460c      	mov	r4, r1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	d14e      	bne.n	800038a <__udivmoddi4+0xaa>
 80002ec:	4694      	mov	ip, r2
 80002ee:	458c      	cmp	ip, r1
 80002f0:	4686      	mov	lr, r0
 80002f2:	fab2 f282 	clz	r2, r2
 80002f6:	d962      	bls.n	80003be <__udivmoddi4+0xde>
 80002f8:	b14a      	cbz	r2, 800030e <__udivmoddi4+0x2e>
 80002fa:	f1c2 0320 	rsb	r3, r2, #32
 80002fe:	4091      	lsls	r1, r2
 8000300:	fa20 f303 	lsr.w	r3, r0, r3
 8000304:	fa0c fc02 	lsl.w	ip, ip, r2
 8000308:	4319      	orrs	r1, r3
 800030a:	fa00 fe02 	lsl.w	lr, r0, r2
 800030e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000312:	fa1f f68c 	uxth.w	r6, ip
 8000316:	fbb1 f4f7 	udiv	r4, r1, r7
 800031a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800031e:	fb07 1114 	mls	r1, r7, r4, r1
 8000322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000326:	fb04 f106 	mul.w	r1, r4, r6
 800032a:	4299      	cmp	r1, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x64>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f104 30ff 	add.w	r0, r4, #4294967295
 8000336:	f080 8112 	bcs.w	800055e <__udivmoddi4+0x27e>
 800033a:	4299      	cmp	r1, r3
 800033c:	f240 810f 	bls.w	800055e <__udivmoddi4+0x27e>
 8000340:	3c02      	subs	r4, #2
 8000342:	4463      	add	r3, ip
 8000344:	1a59      	subs	r1, r3, r1
 8000346:	fa1f f38e 	uxth.w	r3, lr
 800034a:	fbb1 f0f7 	udiv	r0, r1, r7
 800034e:	fb07 1110 	mls	r1, r7, r0, r1
 8000352:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000356:	fb00 f606 	mul.w	r6, r0, r6
 800035a:	429e      	cmp	r6, r3
 800035c:	d90a      	bls.n	8000374 <__udivmoddi4+0x94>
 800035e:	eb1c 0303 	adds.w	r3, ip, r3
 8000362:	f100 31ff 	add.w	r1, r0, #4294967295
 8000366:	f080 80fc 	bcs.w	8000562 <__udivmoddi4+0x282>
 800036a:	429e      	cmp	r6, r3
 800036c:	f240 80f9 	bls.w	8000562 <__udivmoddi4+0x282>
 8000370:	4463      	add	r3, ip
 8000372:	3802      	subs	r0, #2
 8000374:	1b9b      	subs	r3, r3, r6
 8000376:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800037a:	2100      	movs	r1, #0
 800037c:	b11d      	cbz	r5, 8000386 <__udivmoddi4+0xa6>
 800037e:	40d3      	lsrs	r3, r2
 8000380:	2200      	movs	r2, #0
 8000382:	e9c5 3200 	strd	r3, r2, [r5]
 8000386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800038a:	428b      	cmp	r3, r1
 800038c:	d905      	bls.n	800039a <__udivmoddi4+0xba>
 800038e:	b10d      	cbz	r5, 8000394 <__udivmoddi4+0xb4>
 8000390:	e9c5 0100 	strd	r0, r1, [r5]
 8000394:	2100      	movs	r1, #0
 8000396:	4608      	mov	r0, r1
 8000398:	e7f5      	b.n	8000386 <__udivmoddi4+0xa6>
 800039a:	fab3 f183 	clz	r1, r3
 800039e:	2900      	cmp	r1, #0
 80003a0:	d146      	bne.n	8000430 <__udivmoddi4+0x150>
 80003a2:	42a3      	cmp	r3, r4
 80003a4:	d302      	bcc.n	80003ac <__udivmoddi4+0xcc>
 80003a6:	4290      	cmp	r0, r2
 80003a8:	f0c0 80f0 	bcc.w	800058c <__udivmoddi4+0x2ac>
 80003ac:	1a86      	subs	r6, r0, r2
 80003ae:	eb64 0303 	sbc.w	r3, r4, r3
 80003b2:	2001      	movs	r0, #1
 80003b4:	2d00      	cmp	r5, #0
 80003b6:	d0e6      	beq.n	8000386 <__udivmoddi4+0xa6>
 80003b8:	e9c5 6300 	strd	r6, r3, [r5]
 80003bc:	e7e3      	b.n	8000386 <__udivmoddi4+0xa6>
 80003be:	2a00      	cmp	r2, #0
 80003c0:	f040 8090 	bne.w	80004e4 <__udivmoddi4+0x204>
 80003c4:	eba1 040c 	sub.w	r4, r1, ip
 80003c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003cc:	fa1f f78c 	uxth.w	r7, ip
 80003d0:	2101      	movs	r1, #1
 80003d2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003d6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003da:	fb08 4416 	mls	r4, r8, r6, r4
 80003de:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003e2:	fb07 f006 	mul.w	r0, r7, r6
 80003e6:	4298      	cmp	r0, r3
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x11c>
 80003ea:	eb1c 0303 	adds.w	r3, ip, r3
 80003ee:	f106 34ff 	add.w	r4, r6, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x11a>
 80003f4:	4298      	cmp	r0, r3
 80003f6:	f200 80cd 	bhi.w	8000594 <__udivmoddi4+0x2b4>
 80003fa:	4626      	mov	r6, r4
 80003fc:	1a1c      	subs	r4, r3, r0
 80003fe:	fa1f f38e 	uxth.w	r3, lr
 8000402:	fbb4 f0f8 	udiv	r0, r4, r8
 8000406:	fb08 4410 	mls	r4, r8, r0, r4
 800040a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800040e:	fb00 f707 	mul.w	r7, r0, r7
 8000412:	429f      	cmp	r7, r3
 8000414:	d908      	bls.n	8000428 <__udivmoddi4+0x148>
 8000416:	eb1c 0303 	adds.w	r3, ip, r3
 800041a:	f100 34ff 	add.w	r4, r0, #4294967295
 800041e:	d202      	bcs.n	8000426 <__udivmoddi4+0x146>
 8000420:	429f      	cmp	r7, r3
 8000422:	f200 80b0 	bhi.w	8000586 <__udivmoddi4+0x2a6>
 8000426:	4620      	mov	r0, r4
 8000428:	1bdb      	subs	r3, r3, r7
 800042a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800042e:	e7a5      	b.n	800037c <__udivmoddi4+0x9c>
 8000430:	f1c1 0620 	rsb	r6, r1, #32
 8000434:	408b      	lsls	r3, r1
 8000436:	fa22 f706 	lsr.w	r7, r2, r6
 800043a:	431f      	orrs	r7, r3
 800043c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000440:	fa04 f301 	lsl.w	r3, r4, r1
 8000444:	ea43 030c 	orr.w	r3, r3, ip
 8000448:	40f4      	lsrs	r4, r6
 800044a:	fa00 f801 	lsl.w	r8, r0, r1
 800044e:	0c38      	lsrs	r0, r7, #16
 8000450:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000454:	fbb4 fef0 	udiv	lr, r4, r0
 8000458:	fa1f fc87 	uxth.w	ip, r7
 800045c:	fb00 441e 	mls	r4, r0, lr, r4
 8000460:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000464:	fb0e f90c 	mul.w	r9, lr, ip
 8000468:	45a1      	cmp	r9, r4
 800046a:	fa02 f201 	lsl.w	r2, r2, r1
 800046e:	d90a      	bls.n	8000486 <__udivmoddi4+0x1a6>
 8000470:	193c      	adds	r4, r7, r4
 8000472:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000476:	f080 8084 	bcs.w	8000582 <__udivmoddi4+0x2a2>
 800047a:	45a1      	cmp	r9, r4
 800047c:	f240 8081 	bls.w	8000582 <__udivmoddi4+0x2a2>
 8000480:	f1ae 0e02 	sub.w	lr, lr, #2
 8000484:	443c      	add	r4, r7
 8000486:	eba4 0409 	sub.w	r4, r4, r9
 800048a:	fa1f f983 	uxth.w	r9, r3
 800048e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000492:	fb00 4413 	mls	r4, r0, r3, r4
 8000496:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800049a:	fb03 fc0c 	mul.w	ip, r3, ip
 800049e:	45a4      	cmp	ip, r4
 80004a0:	d907      	bls.n	80004b2 <__udivmoddi4+0x1d2>
 80004a2:	193c      	adds	r4, r7, r4
 80004a4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004a8:	d267      	bcs.n	800057a <__udivmoddi4+0x29a>
 80004aa:	45a4      	cmp	ip, r4
 80004ac:	d965      	bls.n	800057a <__udivmoddi4+0x29a>
 80004ae:	3b02      	subs	r3, #2
 80004b0:	443c      	add	r4, r7
 80004b2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004b6:	fba0 9302 	umull	r9, r3, r0, r2
 80004ba:	eba4 040c 	sub.w	r4, r4, ip
 80004be:	429c      	cmp	r4, r3
 80004c0:	46ce      	mov	lr, r9
 80004c2:	469c      	mov	ip, r3
 80004c4:	d351      	bcc.n	800056a <__udivmoddi4+0x28a>
 80004c6:	d04e      	beq.n	8000566 <__udivmoddi4+0x286>
 80004c8:	b155      	cbz	r5, 80004e0 <__udivmoddi4+0x200>
 80004ca:	ebb8 030e 	subs.w	r3, r8, lr
 80004ce:	eb64 040c 	sbc.w	r4, r4, ip
 80004d2:	fa04 f606 	lsl.w	r6, r4, r6
 80004d6:	40cb      	lsrs	r3, r1
 80004d8:	431e      	orrs	r6, r3
 80004da:	40cc      	lsrs	r4, r1
 80004dc:	e9c5 6400 	strd	r6, r4, [r5]
 80004e0:	2100      	movs	r1, #0
 80004e2:	e750      	b.n	8000386 <__udivmoddi4+0xa6>
 80004e4:	f1c2 0320 	rsb	r3, r2, #32
 80004e8:	fa20 f103 	lsr.w	r1, r0, r3
 80004ec:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f0:	fa24 f303 	lsr.w	r3, r4, r3
 80004f4:	4094      	lsls	r4, r2
 80004f6:	430c      	orrs	r4, r1
 80004f8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004fc:	fa00 fe02 	lsl.w	lr, r0, r2
 8000500:	fa1f f78c 	uxth.w	r7, ip
 8000504:	fbb3 f0f8 	udiv	r0, r3, r8
 8000508:	fb08 3110 	mls	r1, r8, r0, r3
 800050c:	0c23      	lsrs	r3, r4, #16
 800050e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000512:	fb00 f107 	mul.w	r1, r0, r7
 8000516:	4299      	cmp	r1, r3
 8000518:	d908      	bls.n	800052c <__udivmoddi4+0x24c>
 800051a:	eb1c 0303 	adds.w	r3, ip, r3
 800051e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000522:	d22c      	bcs.n	800057e <__udivmoddi4+0x29e>
 8000524:	4299      	cmp	r1, r3
 8000526:	d92a      	bls.n	800057e <__udivmoddi4+0x29e>
 8000528:	3802      	subs	r0, #2
 800052a:	4463      	add	r3, ip
 800052c:	1a5b      	subs	r3, r3, r1
 800052e:	b2a4      	uxth	r4, r4
 8000530:	fbb3 f1f8 	udiv	r1, r3, r8
 8000534:	fb08 3311 	mls	r3, r8, r1, r3
 8000538:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800053c:	fb01 f307 	mul.w	r3, r1, r7
 8000540:	42a3      	cmp	r3, r4
 8000542:	d908      	bls.n	8000556 <__udivmoddi4+0x276>
 8000544:	eb1c 0404 	adds.w	r4, ip, r4
 8000548:	f101 36ff 	add.w	r6, r1, #4294967295
 800054c:	d213      	bcs.n	8000576 <__udivmoddi4+0x296>
 800054e:	42a3      	cmp	r3, r4
 8000550:	d911      	bls.n	8000576 <__udivmoddi4+0x296>
 8000552:	3902      	subs	r1, #2
 8000554:	4464      	add	r4, ip
 8000556:	1ae4      	subs	r4, r4, r3
 8000558:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800055c:	e739      	b.n	80003d2 <__udivmoddi4+0xf2>
 800055e:	4604      	mov	r4, r0
 8000560:	e6f0      	b.n	8000344 <__udivmoddi4+0x64>
 8000562:	4608      	mov	r0, r1
 8000564:	e706      	b.n	8000374 <__udivmoddi4+0x94>
 8000566:	45c8      	cmp	r8, r9
 8000568:	d2ae      	bcs.n	80004c8 <__udivmoddi4+0x1e8>
 800056a:	ebb9 0e02 	subs.w	lr, r9, r2
 800056e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000572:	3801      	subs	r0, #1
 8000574:	e7a8      	b.n	80004c8 <__udivmoddi4+0x1e8>
 8000576:	4631      	mov	r1, r6
 8000578:	e7ed      	b.n	8000556 <__udivmoddi4+0x276>
 800057a:	4603      	mov	r3, r0
 800057c:	e799      	b.n	80004b2 <__udivmoddi4+0x1d2>
 800057e:	4630      	mov	r0, r6
 8000580:	e7d4      	b.n	800052c <__udivmoddi4+0x24c>
 8000582:	46d6      	mov	lr, sl
 8000584:	e77f      	b.n	8000486 <__udivmoddi4+0x1a6>
 8000586:	4463      	add	r3, ip
 8000588:	3802      	subs	r0, #2
 800058a:	e74d      	b.n	8000428 <__udivmoddi4+0x148>
 800058c:	4606      	mov	r6, r0
 800058e:	4623      	mov	r3, r4
 8000590:	4608      	mov	r0, r1
 8000592:	e70f      	b.n	80003b4 <__udivmoddi4+0xd4>
 8000594:	3e02      	subs	r6, #2
 8000596:	4463      	add	r3, ip
 8000598:	e730      	b.n	80003fc <__udivmoddi4+0x11c>
 800059a:	bf00      	nop

0800059c <__aeabi_idiv0>:
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop

080005a0 <vApplicationIdleHook>:
   specified, or call vTaskDelay()). If the application makes use of the
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
   vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80005a0:	4901      	ldr	r1, [pc, #4]	@ (80005a8 <vApplicationIdleHook+0x8>)
 80005a2:	2000      	movs	r0, #0
 80005a4:	f008 bda2 	b.w	80090ec <vTaskSetApplicationTaskTag>
 80005a8:	08001815 	.word	0x08001815

080005ac <_Z26Bluetooth_Receive_CallbackPht>:
/* USER CODE END MX_GPIO_Init_2 */
}

/* USER CODE BEGIN 4 */
char rx_bt_data[8];
void Bluetooth_Receive_Callback(uint8_t* data, uint16_t size) {
 80005ac:	b510      	push	{r4, lr}
	strncpy(rx_bt_data,(char*)bt.rx_buffer,8);
 80005ae:	4c07      	ldr	r4, [pc, #28]	@ (80005cc <_Z26Bluetooth_Receive_CallbackPht+0x20>)
 80005b0:	2208      	movs	r2, #8
 80005b2:	4807      	ldr	r0, [pc, #28]	@ (80005d0 <_Z26Bluetooth_Receive_CallbackPht+0x24>)
 80005b4:	4621      	mov	r1, r4
 80005b6:	f021 fcc3 	bl	8021f40 <strncpy>
    //Bluetooth_write_data(&bt, data, size);
	memset(bt.rx_buffer,0,256);
 80005ba:	4620      	mov	r0, r4
 80005bc:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80005c0:	2100      	movs	r1, #0
}
 80005c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	memset(bt.rx_buffer,0,256);
 80005c6:	f021 bca1 	b.w	8021f0c <memset>
 80005ca:	bf00      	nop
 80005cc:	200037c0 	.word	0x200037c0
 80005d0:	20000140 	.word	0x20000140

080005d4 <_Z16StartDefaultTaskPv>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80005d4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
	  osDelay(100);
 80005d6:	2064      	movs	r0, #100	@ 0x64
 80005d8:	f006 ff98 	bl	800750c <osDelay>
  for(;;)
 80005dc:	e7fb      	b.n	80005d6 <_Z16StartDefaultTaskPv+0x2>
	...

080005e0 <_Z8BLE_TaskPv>:
	Bluetooth_init(&bt, &huart7, Bluetooth_Receive_Callback, Bluetooth_Transmit_Callback);

  for(;;)
  {

	  HAL_UART_Receive_IT(&huart7, (uint8_t *)&bt.rx_buffer[bt.rx_index], 1);
 80005e0:	4c0a      	ldr	r4, [pc, #40]	@ (800060c <_Z8BLE_TaskPv+0x2c>)
 80005e2:	4d0b      	ldr	r5, [pc, #44]	@ (8000610 <_Z8BLE_TaskPv+0x30>)
	Bluetooth_init(&bt, &huart7, Bluetooth_Receive_Callback, Bluetooth_Transmit_Callback);
 80005e4:	4a0b      	ldr	r2, [pc, #44]	@ (8000614 <_Z8BLE_TaskPv+0x34>)
 80005e6:	490a      	ldr	r1, [pc, #40]	@ (8000610 <_Z8BLE_TaskPv+0x30>)
 80005e8:	4808      	ldr	r0, [pc, #32]	@ (800060c <_Z8BLE_TaskPv+0x2c>)
{
 80005ea:	b508      	push	{r3, lr}
	Bluetooth_init(&bt, &huart7, Bluetooth_Receive_Callback, Bluetooth_Transmit_Callback);
 80005ec:	4b0a      	ldr	r3, [pc, #40]	@ (8000618 <_Z8BLE_TaskPv+0x38>)
 80005ee:	f003 fa9d 	bl	8003b2c <Bluetooth_init>
	  HAL_UART_Receive_IT(&huart7, (uint8_t *)&bt.rx_buffer[bt.rx_index], 1);
 80005f2:	f8b4 1104 	ldrh.w	r1, [r4, #260]	@ 0x104
 80005f6:	2201      	movs	r2, #1
 80005f8:	4628      	mov	r0, r5
 80005fa:	3104      	adds	r1, #4
 80005fc:	4421      	add	r1, r4
 80005fe:	f006 fe4f 	bl	80072a0 <HAL_UART_Receive_IT>
    osDelay(25);
 8000602:	2019      	movs	r0, #25
 8000604:	f006 ff82 	bl	800750c <osDelay>
  for(;;)
 8000608:	e7f3      	b.n	80005f2 <_Z8BLE_TaskPv+0x12>
 800060a:	bf00      	nop
 800060c:	200037bc 	.word	0x200037bc
 8000610:	2000019c 	.word	0x2000019c
 8000614:	080005ad 	.word	0x080005ad
 8000618:	0800061d 	.word	0x0800061d

0800061c <_Z27Bluetooth_Transmit_Callbackv>:
void Bluetooth_Transmit_Callback(void) {
 800061c:	4770      	bx	lr
	...

08000620 <_Z18SystemClock_Configv>:
{
 8000620:	b510      	push	{r4, lr}
 8000622:	b094      	sub	sp, #80	@ 0x50
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000624:	2210      	movs	r2, #16
 8000626:	2100      	movs	r1, #0
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000628:	2402      	movs	r4, #2
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800062a:	a80a      	add	r0, sp, #40	@ 0x28
 800062c:	f021 fc6e 	bl	8021f0c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000630:	2214      	movs	r2, #20
 8000632:	2100      	movs	r1, #0
 8000634:	a803      	add	r0, sp, #12
 8000636:	f021 fc69 	bl	8021f0c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800063a:	4b1d      	ldr	r3, [pc, #116]	@ (80006b0 <_Z18SystemClock_Configv+0x90>)
  RCC_OscInitStruct.PLL.PLLN = 432;
 800063c:	2119      	movs	r1, #25
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800063e:	a808      	add	r0, sp, #32
  __HAL_RCC_PWR_CLK_ENABLE();
 8000640:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000642:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000646:	641a      	str	r2, [r3, #64]	@ 0x40
 8000648:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800064a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800064e:	9301      	str	r3, [sp, #4]
 8000650:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000652:	4b18      	ldr	r3, [pc, #96]	@ (80006b4 <_Z18SystemClock_Configv+0x94>)
 8000654:	681a      	ldr	r2, [r3, #0]
 8000656:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800065a:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800065c:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000664:	9302      	str	r3, [sp, #8]
 8000666:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000668:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800066c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000670:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8000674:	e9cd 430e 	strd	r4, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 432;
 8000678:	f44f 73d8 	mov.w	r3, #432	@ 0x1b0
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800067c:	e9cd 4412 	strd	r4, r4, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLN = 432;
 8000680:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000684:	f005 f9f4 	bl	8005a70 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000688:	f004 fe90 	bl	80053ac <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800068c:	230f      	movs	r3, #15
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800068e:	2000      	movs	r0, #0
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 8000690:	2107      	movs	r1, #7
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000692:	e9cd 3403 	strd	r3, r4, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000696:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 800069a:	e9cd 0305 	strd	r0, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800069e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80006a2:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80006a4:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80006a6:	f005 fbcb 	bl	8005e40 <HAL_RCC_ClockConfig>
}
 80006aa:	b014      	add	sp, #80	@ 0x50
 80006ac:	bd10      	pop	{r4, pc}
 80006ae:	bf00      	nop
 80006b0:	40023800 	.word	0x40023800
 80006b4:	40007000 	.word	0x40007000

080006b8 <main>:
{
 80006b8:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80006bc:	b09b      	sub	sp, #108	@ 0x6c

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006be:	2210      	movs	r2, #16
 80006c0:	2100      	movs	r1, #0
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80006c2:	2501      	movs	r5, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006c4:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006c6:	f04f 4a10 	mov.w	sl, #2415919104	@ 0x90000000
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006ca:	f021 fc1f 	bl	8021f0c <memset>
  MPU_InitStruct.SubRegionDisable = 0x0;
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 80006ce:	2400      	movs	r4, #0
  HAL_MPU_Disable();
 80006d0:	f003 fdc0 	bl	8004254 <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006d4:	4bc7      	ldr	r3, [pc, #796]	@ (80009f4 <main+0x33c>)
  MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006d6:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80006d8:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 80006dc:	9410      	str	r4, [sp, #64]	@ 0x40
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006de:	e9cd a30e 	strd	sl, r3, [sp, #56]	@ 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006e2:	f003 fdd5 	bl	8004290 <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 80006e6:	2317      	movs	r3, #23
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006e8:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 80006ea:	f88d 5035 	strb.w	r5, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 80006ee:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 80006f2:	f88d 5042 	strb.w	r5, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006f6:	f003 fdcb 	bl	8004290 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 80006fa:	2004      	movs	r0, #4
 80006fc:	f003 fdb8 	bl	8004270 <HAL_MPU_Enable>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000700:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000704:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000708:	4abb      	ldr	r2, [pc, #748]	@ (80009f8 <main+0x340>)
 800070a:	f8c2 4250 	str.w	r4, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800070e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000712:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000716:	6953      	ldr	r3, [r2, #20]
 8000718:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800071c:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800071e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000722:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8000726:	f8c2 4084 	str.w	r4, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800072a:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 800072e:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000732:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000736:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800073a:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800073e:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000740:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000744:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000746:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 800074a:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800074c:	f8c2 5260 	str.w	r5, [r2, #608]	@ 0x260
      } while (ways-- != 0U);
 8000750:	d2f9      	bcs.n	8000746 <main+0x8e>
    } while(sets-- != 0U);
 8000752:	3b20      	subs	r3, #32
 8000754:	f113 0f20 	cmn.w	r3, #32
 8000758:	d1f2      	bne.n	8000740 <main+0x88>
 800075a:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 800075e:	6953      	ldr	r3, [r2, #20]
 8000760:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000764:	6153      	str	r3, [r2, #20]
 8000766:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800076a:	f3bf 8f6f 	isb	sy
  HAL_Init();
 800076e:	f003 fcd7 	bl	8004120 <HAL_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000772:	2400      	movs	r4, #0
  SystemClock_Config();
 8000774:	f7ff ff54 	bl	8000620 <_Z18SystemClock_Configv>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000778:	2214      	movs	r2, #20
 800077a:	2100      	movs	r1, #0
 800077c:	a80d      	add	r0, sp, #52	@ 0x34
 800077e:	f021 fbc5 	bl	8021f0c <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000782:	4b9e      	ldr	r3, [pc, #632]	@ (80009fc <main+0x344>)
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000784:	2110      	movs	r1, #16
 8000786:	489e      	ldr	r0, [pc, #632]	@ (8000a00 <main+0x348>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000788:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800078a:	2701      	movs	r7, #1
 800078c:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000790:	f04f 0b03 	mov.w	fp, #3
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000794:	f042 0210 	orr.w	r2, r2, #16
  GPIO_InitStruct.Pin = LCD_DISP_Pin;
 8000798:	f44f 5a80 	mov.w	sl, #4096	@ 0x1000
  hdma2d.Instance = DMA2D;
 800079c:	4d99      	ldr	r5, [pc, #612]	@ (8000a04 <main+0x34c>)
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800079e:	f04f 0904 	mov.w	r9, #4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80007a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80007a6:	4e98      	ldr	r6, [pc, #608]	@ (8000a08 <main+0x350>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007a8:	f002 0210 	and.w	r2, r2, #16
 80007ac:	9202      	str	r2, [sp, #8]
 80007ae:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80007b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007b2:	f042 0202 	orr.w	r2, r2, #2
 80007b6:	631a      	str	r2, [r3, #48]	@ 0x30
 80007b8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007ba:	f002 0202 	and.w	r2, r2, #2
 80007be:	9203      	str	r2, [sp, #12]
 80007c0:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80007c2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007c4:	f042 0201 	orr.w	r2, r2, #1
 80007c8:	631a      	str	r2, [r3, #48]	@ 0x30
 80007ca:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007cc:	f002 0201 	and.w	r2, r2, #1
 80007d0:	9204      	str	r2, [sp, #16]
 80007d2:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80007d4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007d6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80007da:	631a      	str	r2, [r3, #48]	@ 0x30
 80007dc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007de:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80007e2:	9205      	str	r2, [sp, #20]
 80007e4:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80007e6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007e8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80007ec:	631a      	str	r2, [r3, #48]	@ 0x30
 80007ee:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007f0:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 80007f4:	9206      	str	r2, [sp, #24]
 80007f6:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80007f8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007fa:	f042 0208 	orr.w	r2, r2, #8
 80007fe:	631a      	str	r2, [r3, #48]	@ 0x30
 8000800:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000802:	f002 0208 	and.w	r2, r2, #8
 8000806:	9207      	str	r2, [sp, #28]
 8000808:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 800080a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800080c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8000810:	631a      	str	r2, [r3, #48]	@ 0x30
 8000812:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000814:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
 8000818:	9208      	str	r2, [sp, #32]
 800081a:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800081c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800081e:	f042 0220 	orr.w	r2, r2, #32
 8000822:	631a      	str	r2, [r3, #48]	@ 0x30
 8000824:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000826:	f002 0220 	and.w	r2, r2, #32
 800082a:	9209      	str	r2, [sp, #36]	@ 0x24
 800082c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800082e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000830:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000834:	631a      	str	r2, [r3, #48]	@ 0x30
 8000836:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000838:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800083c:	920a      	str	r2, [sp, #40]	@ 0x28
 800083e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000840:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000842:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000846:	631a      	str	r2, [r3, #48]	@ 0x30
 8000848:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800084a:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 800084e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8000850:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000852:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000854:	f042 0204 	orr.w	r2, r2, #4
 8000858:	631a      	str	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 800085a:	2200      	movs	r2, #0
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800085c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800085e:	f003 0304 	and.w	r3, r3, #4
 8000862:	930c      	str	r3, [sp, #48]	@ 0x30
 8000864:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000866:	f004 f871 	bl	800494c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 800086a:	2201      	movs	r2, #1
 800086c:	2108      	movs	r1, #8
 800086e:	4867      	ldr	r0, [pc, #412]	@ (8000a0c <main+0x354>)
 8000870:	f004 f86c 	bl	800494c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 8000874:	2201      	movs	r2, #1
 8000876:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800087a:	4865      	ldr	r0, [pc, #404]	@ (8000a10 <main+0x358>)
 800087c:	f004 f866 	bl	800494c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 8000880:	2200      	movs	r2, #0
 8000882:	21c0      	movs	r1, #192	@ 0xc0
 8000884:	4863      	ldr	r0, [pc, #396]	@ (8000a14 <main+0x35c>)
 8000886:	f004 f861 	bl	800494c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800088a:	2200      	movs	r2, #0
 800088c:	2140      	movs	r1, #64	@ 0x40
 800088e:	4862      	ldr	r0, [pc, #392]	@ (8000a18 <main+0x360>)
 8000890:	f004 f85c 	bl	800494c <HAL_GPIO_WritePin>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8000894:	a90d      	add	r1, sp, #52	@ 0x34
 8000896:	485a      	ldr	r0, [pc, #360]	@ (8000a00 <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000898:	e9cd 870d 	strd	r8, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800089c:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80008a0:	f003 fed0 	bl	8004644 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 80008a4:	2308      	movs	r3, #8
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80008a6:	a90d      	add	r1, sp, #52	@ 0x34
 80008a8:	4858      	ldr	r0, [pc, #352]	@ (8000a0c <main+0x354>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008aa:	e9cd 370d 	strd	r3, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008ae:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80008b2:	f003 fec7 	bl	8004644 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 80008b6:	a90d      	add	r1, sp, #52	@ 0x34
 80008b8:	4855      	ldr	r0, [pc, #340]	@ (8000a10 <main+0x358>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008ba:	e9cd a70d 	strd	sl, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008be:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 80008c2:	f003 febf 	bl	8004644 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
 80008c6:	22c0      	movs	r2, #192	@ 0xc0
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80008c8:	a90d      	add	r1, sp, #52	@ 0x34
 80008ca:	4852      	ldr	r0, [pc, #328]	@ (8000a14 <main+0x35c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008cc:	e9cd 270d 	strd	r2, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008d0:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80008d4:	f003 feb6 	bl	8004644 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
 80008d8:	2240      	movs	r2, #64	@ 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80008da:	a90d      	add	r1, sp, #52	@ 0x34
 80008dc:	484e      	ldr	r0, [pc, #312]	@ (8000a18 <main+0x360>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008de:	e9cd 270d 	strd	r2, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008e2:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80008e6:	f003 fead 	bl	8004644 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80008ea:	484c      	ldr	r0, [pc, #304]	@ (8000a1c <main+0x364>)
 80008ec:	494c      	ldr	r1, [pc, #304]	@ (8000a20 <main+0x368>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 80008ee:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
 80008f0:	6001      	str	r1, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80008f2:	6207      	str	r7, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 80008f4:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80008f8:	f003 fcf6 	bl	80042e8 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 80008fc:	4949      	ldr	r1, [pc, #292]	@ (8000a24 <main+0x36c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80008fe:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8000900:	e9c5 1400 	strd	r1, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8000904:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8000908:	e9c5 440a 	strd	r4, r4, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800090c:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000910:	f003 fd99 	bl	8004446 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000914:	4639      	mov	r1, r7
 8000916:	4628      	mov	r0, r5
    Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8000918:	4d43      	ldr	r5, [pc, #268]	@ (8000a28 <main+0x370>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800091a:	f003 fe4d 	bl	80045b8 <HAL_DMA2D_ConfigLayer>
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800091e:	2340      	movs	r3, #64	@ 0x40
 8000920:	f44f 72c0 	mov.w	r2, #384	@ 0x180
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000924:	4941      	ldr	r1, [pc, #260]	@ (8000a2c <main+0x374>)
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000926:	4630      	mov	r0, r6
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000928:	60b4      	str	r4, [r6, #8]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800092a:	61f4      	str	r4, [r6, #28]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 800092c:	62b4      	str	r4, [r6, #40]	@ 0x28
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800092e:	e9c6 3205 	strd	r3, r2, [r6, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000932:	f44f 6200 	mov.w	r2, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8000936:	e9c6 2a08 	strd	r2, sl, [r6, #32]
  SdramTiming.ExitSelfRefreshDelay = 7;
 800093a:	f04f 0a02 	mov.w	sl, #2
 800093e:	2207      	movs	r2, #7
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8000940:	e9c6 1400 	strd	r1, r4, [r6]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000944:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.RCDDelay = 2;
 8000946:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 800094a:	e9c6 9803 	strd	r9, r8, [r6, #12]
  SdramTiming.RowCycleDelay = 7;
 800094e:	e9cd 920f 	strd	r9, r2, [sp, #60]	@ 0x3c
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000952:	e9cd a20d 	strd	sl, r2, [sp, #52]	@ 0x34
  SdramTiming.RPDelay = 2;
 8000956:	e9cd ba11 	strd	fp, sl, [sp, #68]	@ 0x44
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800095a:	f005 fdd7 	bl	800650c <HAL_SDRAM_Init>
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800095e:	4629      	mov	r1, r5
 8000960:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000964:	4630      	mov	r0, r6
  __IO uint32_t tmpmrd = 0;
 8000966:	9401      	str	r4, [sp, #4]
    Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK1;
 8000968:	e9c5 7800 	strd	r7, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 800096c:	e9c5 7402 	strd	r7, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000970:	f005 fdec 	bl	800654c <HAL_SDRAM_SendCommand>
    HAL_Delay(1);
 8000974:	4638      	mov	r0, r7
 8000976:	f003 fbf7 	bl	8004168 <HAL_Delay>
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800097a:	4629      	mov	r1, r5
 800097c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000980:	4630      	mov	r0, r6
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8000982:	e9c5 a800 	strd	sl, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 8000986:	e9c5 7402 	strd	r7, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800098a:	f005 fddf 	bl	800654c <HAL_SDRAM_SendCommand>
    Command.AutoRefreshNumber      = 8;
 800098e:	2308      	movs	r3, #8
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000990:	4629      	mov	r1, r5
 8000992:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000996:	4630      	mov	r0, r6
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8000998:	e9c5 b800 	strd	fp, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 800099c:	e9c5 3402 	strd	r3, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009a0:	f005 fdd4 	bl	800654c <HAL_SDRAM_SendCommand>
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 80009a4:	f44f 730c 	mov.w	r3, #560	@ 0x230
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009a8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80009ac:	4629      	mov	r1, r5
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 80009ae:	9301      	str	r3, [sp, #4]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009b0:	4630      	mov	r0, r6
    Command.ModeRegisterDefinition = tmpmrd;
 80009b2:	9b01      	ldr	r3, [sp, #4]
    Command.AutoRefreshNumber      = 1;
 80009b4:	60af      	str	r7, [r5, #8]
    Command.ModeRegisterDefinition = tmpmrd;
 80009b6:	60eb      	str	r3, [r5, #12]
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80009b8:	e9c5 9800 	strd	r9, r8, [r5]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009bc:	f005 fdc6 	bl	800654c <HAL_SDRAM_SendCommand>
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 80009c0:	f240 712b 	movw	r1, #1835	@ 0x72b
 80009c4:	4630      	mov	r0, r6
  hi2c3.Instance = I2C3;
 80009c6:	4d1a      	ldr	r5, [pc, #104]	@ (8000a30 <main+0x378>)
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 80009c8:	f005 fddf 	bl	800658a <HAL_SDRAM_ProgramRefreshRate>
    FMC_Bank1->BTCR[0] = 0x000030D2;
 80009cc:	f04f 4320 	mov.w	r3, #2684354560	@ 0xa0000000
 80009d0:	f243 02d2 	movw	r2, #12498	@ 0x30d2
  HAL_Delay(100); //Delay to fix initialization issue on some boards 
 80009d4:	2064      	movs	r0, #100	@ 0x64
  hltdc.Init.AccumulatedActiveH = 283;
 80009d6:	f240 2615 	movw	r6, #533	@ 0x215
    FMC_Bank1->BTCR[0] = 0x000030D2;
 80009da:	601a      	str	r2, [r3, #0]
  HAL_Delay(100); //Delay to fix initialization issue on some boards 
 80009dc:	f003 fbc4 	bl	8004168 <HAL_Delay>
  hi2c3.Init.Timing = 0x20404768;
 80009e0:	4b14      	ldr	r3, [pc, #80]	@ (8000a34 <main+0x37c>)
 80009e2:	4a15      	ldr	r2, [pc, #84]	@ (8000a38 <main+0x380>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80009e4:	4628      	mov	r0, r5
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80009e6:	622c      	str	r4, [r5, #32]
  hi2c3.Init.Timing = 0x20404768;
 80009e8:	e9c5 2300 	strd	r2, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80009ec:	e9c5 4702 	strd	r4, r7, [r5, #8]
 80009f0:	e024      	b.n	8000a3c <main+0x384>
 80009f2:	bf00      	nop
 80009f4:	0300001b 	.word	0x0300001b
 80009f8:	e000ed00 	.word	0xe000ed00
 80009fc:	40023800 	.word	0x40023800
 8000a00:	40020400 	.word	0x40020400
 8000a04:	2000036c 	.word	0x2000036c
 8000a08:	20000168 	.word	0x20000168
 8000a0c:	40022800 	.word	0x40022800
 8000a10:	40022000 	.word	0x40022000
 8000a14:	40020800 	.word	0x40020800
 8000a18:	40021800 	.word	0x40021800
 8000a1c:	200003ac 	.word	0x200003ac
 8000a20:	40023000 	.word	0x40023000
 8000a24:	4002b000 	.word	0x4002b000
 8000a28:	20000148 	.word	0x20000148
 8000a2c:	a0000140 	.word	0xa0000140
 8000a30:	20000318 	.word	0x20000318
 8000a34:	20404768 	.word	0x20404768
 8000a38:	40005c00 	.word	0x40005c00
  hi2c3.Init.OwnAddress2 = 0;
 8000a3c:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000a40:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000a44:	f004 f8aa 	bl	8004b9c <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000a48:	4621      	mov	r1, r4
 8000a4a:	4628      	mov	r0, r5
 8000a4c:	f004 fac8 	bl	8004fe0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000a50:	4621      	mov	r1, r4
 8000a52:	4628      	mov	r0, r5
  hltdc.Instance = LTDC;
 8000a54:	4d4a      	ldr	r5, [pc, #296]	@ (8000b80 <main+0x4c8>)
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000a56:	f004 fae9 	bl	800502c <HAL_I2CEx_ConfigDigitalFilter>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000a5a:	2234      	movs	r2, #52	@ 0x34
 8000a5c:	4621      	mov	r1, r4
 8000a5e:	eb0d 0002 	add.w	r0, sp, r2
 8000a62:	f021 fa53 	bl	8021f0c <memset>
  hltdc.Instance = LTDC;
 8000a66:	4b47      	ldr	r3, [pc, #284]	@ (8000b84 <main+0x4cc>)
  hltdc.Init.VerticalSync = 9;
 8000a68:	2128      	movs	r1, #40	@ 0x28
  hltdc.Init.AccumulatedVBP = 11;
 8000a6a:	2035      	movs	r0, #53	@ 0x35
  hltdc.Init.TotalHeigh = 285;
 8000a6c:	f240 2c35 	movw	ip, #565	@ 0x235
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000a70:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Blue = 0;
 8000a72:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8000a74:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000a78:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.VerticalSync = 9;
 8000a7c:	2309      	movs	r3, #9
 8000a7e:	e9c5 1305 	strd	r1, r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
 8000a82:	230b      	movs	r3, #11
 8000a84:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
 8000a88:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000a8c:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
 8000a8e:	e9c5 6309 	strd	r6, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
 8000a92:	f240 131d 	movw	r3, #285	@ 0x11d
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000a96:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.TotalHeigh = 285;
 8000a9a:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000a9e:	f004 fb71 	bl	8005184 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8000aa2:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000aa4:	f44f 6e80 	mov.w	lr, #1024	@ 0x400
  pLayerCfg.WindowX1 = 480;
 8000aa8:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  pLayerCfg.WindowY1 = 272;
 8000aac:	f44f 7388 	mov.w	r3, #272	@ 0x110
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ab0:	4628      	mov	r0, r5
  pLayerCfg.WindowX0 = 0;
 8000ab2:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.ImageHeight = 272;
 8000ab4:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000ab6:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8000aba:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  pLayerCfg.Alpha0 = 0;
 8000abe:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ac2:	2105      	movs	r1, #5
 8000ac4:	e9cd e114 	strd	lr, r1, [sp, #80]	@ 0x50
  pLayerCfg.FBStartAdress = 0xC0000000;
 8000ac8:	f04f 4140 	mov.w	r1, #3221225472	@ 0xc0000000
  pLayerCfg.WindowY0 = 0;
 8000acc:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.ImageWidth = 480;
 8000ad0:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ad4:	4622      	mov	r2, r4
 8000ad6:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000ad8:	e9cd 3a10 	strd	r3, sl, [sp, #64]	@ 0x40
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000adc:	f004 fc1d 	bl	800531a <HAL_LTDC_ConfigLayer>
  hqspi.Instance = QUADSPI;
 8000ae0:	4829      	ldr	r0, [pc, #164]	@ (8000b88 <main+0x4d0>)
 8000ae2:	4b2a      	ldr	r3, [pc, #168]	@ (8000b8c <main+0x4d4>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8000ae4:	6204      	str	r4, [r0, #32]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8000ae6:	e9c0 9802 	strd	r9, r8, [r0, #8]
  hqspi.Init.ClockPrescaler = 1;
 8000aea:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 8000aee:	f04f 0818 	mov.w	r8, #24
 8000af2:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
  huart7.Init.BaudRate = 115200;
 8000af6:	f8df 90c8 	ldr.w	r9, [pc, #200]	@ 8000bc0 <main+0x508>
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 8000afa:	e9c0 8304 	strd	r8, r3, [r0, #16]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8000afe:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8000b02:	f004 fd6d 	bl	80055e0 <HAL_QSPI_Init>
  BSP_QSPI_Init();
 8000b06:	f003 f98b 	bl	8003e20 <BSP_QSPI_Init>
  BSP_QSPI_MemoryMappedMode();
 8000b0a:	f003 f8d1 	bl	8003cb0 <BSP_QSPI_EnableMemoryMappedMode>
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8000b0e:	205c      	movs	r0, #92	@ 0x5c
 8000b10:	f003 fb8e 	bl	8004230 <HAL_NVIC_DisableIRQ>
  MX_LIBJPEG_Init();
 8000b14:	f000 fbfe 	bl	8001314 <MX_LIBJPEG_Init>
  huart7.Instance = UART7;
 8000b18:	481d      	ldr	r0, [pc, #116]	@ (8000b90 <main+0x4d8>)
  huart7.Init.BaudRate = 115200;
 8000b1a:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
  huart7.Init.Parity = UART_PARITY_NONE;
 8000b1e:	6104      	str	r4, [r0, #16]
  huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000b20:	6244      	str	r4, [r0, #36]	@ 0x24
  huart7.Init.BaudRate = 115200;
 8000b22:	e9c0 9300 	strd	r9, r3, [r0]
  huart7.Init.Mode = UART_MODE_TX_RX;
 8000b26:	230c      	movs	r3, #12
  huart7.Init.StopBits = UART_STOPBITS_1;
 8000b28:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000b2c:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000b30:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_UART_Init(&huart7) != HAL_OK)
 8000b34:	f006 fb2c 	bl	8007190 <HAL_UART_Init>
  MX_TouchGFX_Init();
 8000b38:	f000 fc18 	bl	800136c <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000b3c:	f000 fc15 	bl	800136a <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8000b40:	f006 fc56 	bl	80073f0 <osKernelInitialize>
  bluMutexHandle = osMutexNew(&bluMutex_attributes);
 8000b44:	4813      	ldr	r0, [pc, #76]	@ (8000b94 <main+0x4dc>)
 8000b46:	f006 fcf9 	bl	800753c <osMutexNew>
 8000b4a:	4b13      	ldr	r3, [pc, #76]	@ (8000b98 <main+0x4e0>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b4c:	4a13      	ldr	r2, [pc, #76]	@ (8000b9c <main+0x4e4>)
 8000b4e:	4621      	mov	r1, r4
  bluMutexHandle = osMutexNew(&bluMutex_attributes);
 8000b50:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b52:	4813      	ldr	r0, [pc, #76]	@ (8000ba0 <main+0x4e8>)
 8000b54:	f006 fc86 	bl	8007464 <osThreadNew>
 8000b58:	4b12      	ldr	r3, [pc, #72]	@ (8000ba4 <main+0x4ec>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b5a:	4a13      	ldr	r2, [pc, #76]	@ (8000ba8 <main+0x4f0>)
 8000b5c:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b5e:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b60:	4812      	ldr	r0, [pc, #72]	@ (8000bac <main+0x4f4>)
 8000b62:	f006 fc7f 	bl	8007464 <osThreadNew>
 8000b66:	4b12      	ldr	r3, [pc, #72]	@ (8000bb0 <main+0x4f8>)
  Bluethooth_taskHandle = osThreadNew(BLE_Task, NULL, &Bluethooth_task_attributes);
 8000b68:	4a12      	ldr	r2, [pc, #72]	@ (8000bb4 <main+0x4fc>)
 8000b6a:	4621      	mov	r1, r4
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b6c:	6018      	str	r0, [r3, #0]
  Bluethooth_taskHandle = osThreadNew(BLE_Task, NULL, &Bluethooth_task_attributes);
 8000b6e:	4812      	ldr	r0, [pc, #72]	@ (8000bb8 <main+0x500>)
 8000b70:	f006 fc78 	bl	8007464 <osThreadNew>
 8000b74:	4b11      	ldr	r3, [pc, #68]	@ (8000bbc <main+0x504>)
 8000b76:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8000b78:	f006 fc54 	bl	8007424 <osKernelStart>
  while (1)
 8000b7c:	e7fe      	b.n	8000b7c <main+0x4c4>
 8000b7e:	bf00      	nop
 8000b80:	20000270 	.word	0x20000270
 8000b84:	40016800 	.word	0x40016800
 8000b88:	20000224 	.word	0x20000224
 8000b8c:	a0001000 	.word	0xa0001000
 8000b90:	2000019c 	.word	0x2000019c
 8000b94:	08022af0 	.word	0x08022af0
 8000b98:	20000158 	.word	0x20000158
 8000b9c:	08022b48 	.word	0x08022b48
 8000ba0:	080005d5 	.word	0x080005d5
 8000ba4:	20000164 	.word	0x20000164
 8000ba8:	08022b24 	.word	0x08022b24
 8000bac:	0800137b 	.word	0x0800137b
 8000bb0:	20000160 	.word	0x20000160
 8000bb4:	08022b00 	.word	0x08022b00
 8000bb8:	080005e1 	.word	0x080005e1
 8000bbc:	2000015c 	.word	0x2000015c
 8000bc0:	40007800 	.word	0x40007800

08000bc4 <HAL_UART_TxCpltCallback>:
    if (huart->Instance == UART7) {
 8000bc4:	6802      	ldr	r2, [r0, #0]
 8000bc6:	4b06      	ldr	r3, [pc, #24]	@ (8000be0 <HAL_UART_TxCpltCallback+0x1c>)
 8000bc8:	429a      	cmp	r2, r3
 8000bca:	d107      	bne.n	8000bdc <HAL_UART_TxCpltCallback+0x18>
        bt.tx_complete = 1;
 8000bcc:	4b05      	ldr	r3, [pc, #20]	@ (8000be4 <HAL_UART_TxCpltCallback+0x20>)
 8000bce:	2201      	movs	r2, #1
 8000bd0:	f883 2106 	strb.w	r2, [r3, #262]	@ 0x106
        if (bt.bluetooth_tx_callback) {
 8000bd4:	f8d3 310c 	ldr.w	r3, [r3, #268]	@ 0x10c
 8000bd8:	b103      	cbz	r3, 8000bdc <HAL_UART_TxCpltCallback+0x18>
            bt.bluetooth_tx_callback();
 8000bda:	4718      	bx	r3
}
 8000bdc:	4770      	bx	lr
 8000bde:	bf00      	nop
 8000be0:	40007800 	.word	0x40007800
 8000be4:	200037bc 	.word	0x200037bc

08000be8 <HAL_UART_RxCpltCallback>:
    if (huart->Instance == UART7) {
 8000be8:	6802      	ldr	r2, [r0, #0]
 8000bea:	4b03      	ldr	r3, [pc, #12]	@ (8000bf8 <HAL_UART_RxCpltCallback+0x10>)
 8000bec:	429a      	cmp	r2, r3
 8000bee:	d102      	bne.n	8000bf6 <HAL_UART_RxCpltCallback+0xe>
        Bluetooth_handle_rx_interrupt(&bt);
 8000bf0:	4802      	ldr	r0, [pc, #8]	@ (8000bfc <HAL_UART_RxCpltCallback+0x14>)
 8000bf2:	f002 bfcd 	b.w	8003b90 <Bluetooth_handle_rx_interrupt>
}
 8000bf6:	4770      	bx	lr
 8000bf8:	40007800 	.word	0x40007800
 8000bfc:	200037bc 	.word	0x200037bc

08000c00 <_Z14push_bt_buttonv>:
void push_bt_button(void){
 8000c00:	b513      	push	{r0, r1, r4, lr}
	osStatus_t mutex_status = osMutexAcquire(bluMutexHandle, osWaitForever);
 8000c02:	4c0c      	ldr	r4, [pc, #48]	@ (8000c34 <_Z14push_bt_buttonv+0x34>)
 8000c04:	f04f 31ff 	mov.w	r1, #4294967295
 8000c08:	6820      	ldr	r0, [r4, #0]
 8000c0a:	f006 fcd9 	bl	80075c0 <osMutexAcquire>
	if (mutex_status == osOK){
 8000c0e:	b950      	cbnz	r0, 8000c26 <_Z14push_bt_buttonv+0x26>
	uint8_t data_[] = "Hello";
 8000c10:	4b09      	ldr	r3, [pc, #36]	@ (8000c38 <_Z14push_bt_buttonv+0x38>)
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c12:	2207      	movs	r2, #7
 8000c14:	4669      	mov	r1, sp
	uint8_t data_[] = "Hello";
 8000c16:	6818      	ldr	r0, [r3, #0]
 8000c18:	889b      	ldrh	r3, [r3, #4]
 8000c1a:	9000      	str	r0, [sp, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c1c:	4807      	ldr	r0, [pc, #28]	@ (8000c3c <_Z14push_bt_buttonv+0x3c>)
	uint8_t data_[] = "Hello";
 8000c1e:	f8ad 3004 	strh.w	r3, [sp, #4]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c22:	f002 ffa9 	bl	8003b78 <Bluetooth_write_data>
	 osMutexRelease(bluMutexHandle);
 8000c26:	6820      	ldr	r0, [r4, #0]
}
 8000c28:	b002      	add	sp, #8
 8000c2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	 osMutexRelease(bluMutexHandle);
 8000c2e:	f006 bcf7 	b.w	8007620 <osMutexRelease>
 8000c32:	bf00      	nop
 8000c34:	20000158 	.word	0x20000158
 8000c38:	08022ab8 	.word	0x08022ab8
 8000c3c:	200037bc 	.word	0x200037bc

08000c40 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8000c40:	6802      	ldr	r2, [r0, #0]
 8000c42:	4b03      	ldr	r3, [pc, #12]	@ (8000c50 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8000c44:	429a      	cmp	r2, r3
 8000c46:	d101      	bne.n	8000c4c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8000c48:	f003 ba7c 	b.w	8004144 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000c4c:	4770      	bx	lr
 8000c4e:	bf00      	nop
 8000c50:	40001000 	.word	0x40001000

08000c54 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8000c54:	4770      	bx	lr
	...

08000c58 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8000c58:	4b0d      	ldr	r3, [pc, #52]	@ (8000c90 <HAL_MspInit+0x38>)
{
 8000c5a:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000c5c:	210f      	movs	r1, #15
 8000c5e:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 8000c62:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000c64:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000c68:	641a      	str	r2, [r3, #64]	@ 0x40
 8000c6a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000c6c:	f002 5280 	and.w	r2, r2, #268435456	@ 0x10000000
 8000c70:	9200      	str	r2, [sp, #0]
 8000c72:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000c74:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000c76:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8000c7a:	645a      	str	r2, [r3, #68]	@ 0x44
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000c7c:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000c7e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c80:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000c84:	9301      	str	r3, [sp, #4]
 8000c86:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000c88:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000c8a:	f003 ba91 	b.w	80041b0 <HAL_NVIC_SetPriority>
 8000c8e:	bf00      	nop
 8000c90:	40023800 	.word	0x40023800

08000c94 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000c94:	6802      	ldr	r2, [r0, #0]
{
 8000c96:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8000c98:	4b08      	ldr	r3, [pc, #32]	@ (8000cbc <HAL_CRC_MspInit+0x28>)
 8000c9a:	429a      	cmp	r2, r3
 8000c9c:	d10b      	bne.n	8000cb6 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000c9e:	f8d3 2830 	ldr.w	r2, [r3, #2096]	@ 0x830
 8000ca2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8000ca6:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8000caa:	631a      	str	r2, [r3, #48]	@ 0x30
 8000cac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cae:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000cb2:	9301      	str	r3, [sp, #4]
 8000cb4:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000cb6:	b002      	add	sp, #8
 8000cb8:	4770      	bx	lr
 8000cba:	bf00      	nop
 8000cbc:	40023000 	.word	0x40023000

08000cc0 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8000cc0:	4b0e      	ldr	r3, [pc, #56]	@ (8000cfc <HAL_DMA2D_MspInit+0x3c>)
{
 8000cc2:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8000cc4:	6802      	ldr	r2, [r0, #0]
 8000cc6:	429a      	cmp	r2, r3
 8000cc8:	d115      	bne.n	8000cf6 <HAL_DMA2D_MspInit+0x36>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000cca:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000cce:	2105      	movs	r1, #5
 8000cd0:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000cd2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000cd4:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000cd8:	631a      	str	r2, [r3, #48]	@ 0x30
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000cda:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000cdc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cde:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000ce2:	9301      	str	r3, [sp, #4]
 8000ce4:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000ce6:	f003 fa63 	bl	80041b0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000cea:	205a      	movs	r0, #90	@ 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8000cec:	b003      	add	sp, #12
 8000cee:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000cf2:	f003 ba8f 	b.w	8004214 <HAL_NVIC_EnableIRQ>
}
 8000cf6:	b003      	add	sp, #12
 8000cf8:	f85d fb04 	ldr.w	pc, [sp], #4
 8000cfc:	4002b000 	.word	0x4002b000

08000d00 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000d00:	b510      	push	{r4, lr}
 8000d02:	b0a8      	sub	sp, #160	@ 0xa0
 8000d04:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d06:	2214      	movs	r2, #20
 8000d08:	2100      	movs	r1, #0
 8000d0a:	a802      	add	r0, sp, #8
 8000d0c:	f021 f8fe 	bl	8021f0c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000d10:	2284      	movs	r2, #132	@ 0x84
 8000d12:	2100      	movs	r1, #0
 8000d14:	a807      	add	r0, sp, #28
 8000d16:	f021 f8f9 	bl	8021f0c <memset>
  if(hi2c->Instance==I2C3)
 8000d1a:	6822      	ldr	r2, [r4, #0]
 8000d1c:	4b17      	ldr	r3, [pc, #92]	@ (8000d7c <HAL_I2C_MspInit+0x7c>)
 8000d1e:	429a      	cmp	r2, r3
 8000d20:	d12a      	bne.n	8000d78 <HAL_I2C_MspInit+0x78>

  /* USER CODE END I2C3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000d22:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000d26:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000d28:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000d2a:	f005 f965 	bl	8005ff8 <HAL_RCCEx_PeriphCLKConfig>
 8000d2e:	b108      	cbz	r0, 8000d34 <HAL_I2C_MspInit+0x34>
    {
      Error_Handler();
 8000d30:	f7ff ff90 	bl	8000c54 <Error_Handler>
    }

    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000d34:	4c12      	ldr	r4, [pc, #72]	@ (8000d80 <HAL_I2C_MspInit+0x80>)
    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000d36:	f44f 72c0 	mov.w	r2, #384	@ 0x180
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d3a:	2101      	movs	r1, #1
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000d3c:	4811      	ldr	r0, [pc, #68]	@ (8000d84 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000d3e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8000d40:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000d44:	6323      	str	r3, [r4, #48]	@ 0x30
 8000d46:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8000d48:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000d4c:	9300      	str	r3, [sp, #0]
 8000d4e:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000d50:	2312      	movs	r3, #18
 8000d52:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d56:	2303      	movs	r3, #3
 8000d58:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000d5c:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000d5e:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000d60:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000d62:	f003 fc6f 	bl	8004644 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8000d66:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000d68:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000d6c:	6423      	str	r3, [r4, #64]	@ 0x40
 8000d6e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000d70:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000d74:	9301      	str	r3, [sp, #4]
 8000d76:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8000d78:	b028      	add	sp, #160	@ 0xa0
 8000d7a:	bd10      	pop	{r4, pc}
 8000d7c:	40005c00 	.word	0x40005c00
 8000d80:	40023800 	.word	0x40023800
 8000d84:	40021c00 	.word	0x40021c00

08000d88 <HAL_I2C_MspDeInit>:
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
  if(hi2c->Instance==I2C3)
 8000d88:	6802      	ldr	r2, [r0, #0]
{
 8000d8a:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C3)
 8000d8c:	4b09      	ldr	r3, [pc, #36]	@ (8000db4 <HAL_I2C_MspDeInit+0x2c>)
 8000d8e:	429a      	cmp	r2, r3
 8000d90:	d10f      	bne.n	8000db2 <HAL_I2C_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN I2C3_MspDeInit 0 */

  /* USER CODE END I2C3_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000d92:	4a09      	ldr	r2, [pc, #36]	@ (8000db8 <HAL_I2C_MspDeInit+0x30>)

    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_7);
 8000d94:	2180      	movs	r1, #128	@ 0x80
 8000d96:	4809      	ldr	r0, [pc, #36]	@ (8000dbc <HAL_I2C_MspDeInit+0x34>)
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000d98:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8000d9a:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8000d9e:	6413      	str	r3, [r2, #64]	@ 0x40
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_7);
 8000da0:	f003 fd34 	bl	800480c <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_8);
 8000da4:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000da8:	4804      	ldr	r0, [pc, #16]	@ (8000dbc <HAL_I2C_MspDeInit+0x34>)
  /* USER CODE BEGIN I2C3_MspDeInit 1 */

  /* USER CODE END I2C3_MspDeInit 1 */
  }

}
 8000daa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_8);
 8000dae:	f003 bd2d 	b.w	800480c <HAL_GPIO_DeInit>
}
 8000db2:	bd08      	pop	{r3, pc}
 8000db4:	40005c00 	.word	0x40005c00
 8000db8:	40023800 	.word	0x40023800
 8000dbc:	40021c00 	.word	0x40021c00

08000dc0 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000dc0:	b570      	push	{r4, r5, r6, lr}
 8000dc2:	b0ac      	sub	sp, #176	@ 0xb0
 8000dc4:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000dc6:	2214      	movs	r2, #20
 8000dc8:	2100      	movs	r1, #0
 8000dca:	a806      	add	r0, sp, #24
 8000dcc:	f021 f89e 	bl	8021f0c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000dd0:	2284      	movs	r2, #132	@ 0x84
 8000dd2:	2100      	movs	r1, #0
 8000dd4:	a80b      	add	r0, sp, #44	@ 0x2c
 8000dd6:	f021 f899 	bl	8021f0c <memset>
  if(hltdc->Instance==LTDC)
 8000dda:	6822      	ldr	r2, [r4, #0]
 8000ddc:	4b48      	ldr	r3, [pc, #288]	@ (8000f00 <HAL_LTDC_MspInit+0x140>)
 8000dde:	429a      	cmp	r2, r3
 8000de0:	f040 808c 	bne.w	8000efc <HAL_LTDC_MspInit+0x13c>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000de4:	2308      	movs	r3, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000de6:	2005      	movs	r0, #5
    PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV2;
    PeriphClkInitStruct.PLLSAIDivQ = 1;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000de8:	2401      	movs	r4, #1
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000dea:	930b      	str	r3, [sp, #44]	@ 0x2c
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
 8000dec:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8000df0:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000df2:	2302      	movs	r3, #2
 8000df4:	e9cd 3011 	strd	r3, r0, [sp, #68]	@ 0x44
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000df8:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000dfc:	a80b      	add	r0, sp, #44	@ 0x2c
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000dfe:	e9cd 4315 	strd	r4, r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000e02:	f005 f8f9 	bl	8005ff8 <HAL_RCCEx_PeriphCLKConfig>
 8000e06:	b108      	cbz	r0, 8000e0c <HAL_LTDC_MspInit+0x4c>
    {
      Error_Handler();
 8000e08:	f7ff ff24 	bl	8000c54 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e0c:	4b3d      	ldr	r3, [pc, #244]	@ (8000f04 <HAL_LTDC_MspInit+0x144>)
    PJ0     ------> LTDC_R1
    PJ1     ------> LTDC_R2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e0e:	2400      	movs	r4, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e10:	2502      	movs	r5, #2
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000e12:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e14:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000e16:	a906      	add	r1, sp, #24
 8000e18:	483b      	ldr	r0, [pc, #236]	@ (8000f08 <HAL_LTDC_MspInit+0x148>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e1a:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8000e1e:	645a      	str	r2, [r3, #68]	@ 0x44
 8000e20:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000e22:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8000e26:	9200      	str	r2, [sp, #0]
 8000e28:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000e2a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e2c:	f042 0210 	orr.w	r2, r2, #16
 8000e30:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e32:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e34:	f002 0210 	and.w	r2, r2, #16
 8000e38:	9201      	str	r2, [sp, #4]
 8000e3a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000e3c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e3e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000e42:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e44:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e46:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 8000e4a:	9202      	str	r2, [sp, #8]
 8000e4c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOK_CLK_ENABLE();
 8000e4e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e50:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8000e54:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e56:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e58:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
 8000e5c:	9203      	str	r2, [sp, #12]
 8000e5e:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000e60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e62:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8000e66:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e68:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e6a:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8000e6e:	9204      	str	r2, [sp, #16]
 8000e70:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000e72:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e74:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000e78:	631a      	str	r2, [r3, #48]	@ 0x30
 8000e7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e7c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000e80:	9305      	str	r3, [sp, #20]
 8000e82:	9b05      	ldr	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e84:	2310      	movs	r3, #16
 8000e86:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e8a:	e9cd 4408 	strd	r4, r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000e8e:	960a      	str	r6, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000e90:	f003 fbd8 	bl	8004644 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_11
 8000e94:	f64e 73ff 	movw	r3, #61439	@ 0xefff
                          |GPIO_PIN_2|GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000e98:	a906      	add	r1, sp, #24
 8000e9a:	481c      	ldr	r0, [pc, #112]	@ (8000f0c <HAL_LTDC_MspInit+0x14c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000e9c:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e9e:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ea2:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000ea6:	f003 fbcd 	bl	8004644 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4
 8000eaa:	23f7      	movs	r3, #247	@ 0xf7
                          |GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000eac:	a906      	add	r1, sp, #24
 8000eae:	4818      	ldr	r0, [pc, #96]	@ (8000f10 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000eb0:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000eb2:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000eb6:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000eba:	f003 fbc3 	bl	8004644 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000ebe:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000ec2:	a906      	add	r1, sp, #24
 8000ec4:	4813      	ldr	r0, [pc, #76]	@ (8000f14 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ec6:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000eca:	2309      	movs	r3, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ecc:	e9cd 4408 	strd	r4, r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000ed0:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000ed2:	f003 fbb7 	bl	8004644 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_15|GPIO_PIN_14;
 8000ed6:	f44f 4346 	mov.w	r3, #50688	@ 0xc600
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000eda:	a906      	add	r1, sp, #24
 8000edc:	480e      	ldr	r0, [pc, #56]	@ (8000f18 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000ede:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ee0:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ee4:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000ee8:	f003 fbac 	bl	8004644 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000eec:	2058      	movs	r0, #88	@ 0x58
 8000eee:	4622      	mov	r2, r4
 8000ef0:	2105      	movs	r1, #5
 8000ef2:	f003 f95d 	bl	80041b0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000ef6:	2058      	movs	r0, #88	@ 0x58
 8000ef8:	f003 f98c 	bl	8004214 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000efc:	b02c      	add	sp, #176	@ 0xb0
 8000efe:	bd70      	pop	{r4, r5, r6, pc}
 8000f00:	40016800 	.word	0x40016800
 8000f04:	40023800 	.word	0x40023800
 8000f08:	40021000 	.word	0x40021000
 8000f0c:	40022400 	.word	0x40022400
 8000f10:	40022800 	.word	0x40022800
 8000f14:	40021800 	.word	0x40021800
 8000f18:	40022000 	.word	0x40022000

08000f1c <HAL_QSPI_MspInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f1c:	2214      	movs	r2, #20
 8000f1e:	2100      	movs	r1, #0
{
 8000f20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f24:	b08a      	sub	sp, #40	@ 0x28
 8000f26:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f28:	eb0d 0002 	add.w	r0, sp, r2
 8000f2c:	f020 ffee 	bl	8021f0c <memset>
  if(hqspi->Instance==QUADSPI)
 8000f30:	6822      	ldr	r2, [r4, #0]
 8000f32:	4b2c      	ldr	r3, [pc, #176]	@ (8000fe4 <HAL_QSPI_MspInit+0xc8>)
 8000f34:	429a      	cmp	r2, r3
 8000f36:	d151      	bne.n	8000fdc <HAL_QSPI_MspInit+0xc0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000f38:	4b2b      	ldr	r3, [pc, #172]	@ (8000fe8 <HAL_QSPI_MspInit+0xcc>)
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f3a:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000f3c:	2403      	movs	r4, #3
 8000f3e:	2609      	movs	r6, #9
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000f40:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f42:	f04f 0804 	mov.w	r8, #4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000f46:	a905      	add	r1, sp, #20
 8000f48:	4828      	ldr	r0, [pc, #160]	@ (8000fec <HAL_QSPI_MspInit+0xd0>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000f4a:	f042 0202 	orr.w	r2, r2, #2

    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f4e:	2700      	movs	r7, #0
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000f50:	639a      	str	r2, [r3, #56]	@ 0x38
 8000f52:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8000f54:	f002 0202 	and.w	r2, r2, #2
 8000f58:	9201      	str	r2, [sp, #4]
 8000f5a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000f5c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f5e:	f042 0210 	orr.w	r2, r2, #16
 8000f62:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f64:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f66:	f002 0210 	and.w	r2, r2, #16
 8000f6a:	9202      	str	r2, [sp, #8]
 8000f6c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000f6e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f70:	f042 0202 	orr.w	r2, r2, #2
 8000f74:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f76:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f78:	f002 0202 	and.w	r2, r2, #2
 8000f7c:	9203      	str	r2, [sp, #12]
 8000f7e:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000f80:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f82:	f042 0208 	orr.w	r2, r2, #8
 8000f86:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f8a:	f003 0308 	and.w	r3, r3, #8
 8000f8e:	9304      	str	r3, [sp, #16]
 8000f90:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f92:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000f96:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000f9a:	f003 fb53 	bl	8004644 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8000f9e:	2340      	movs	r3, #64	@ 0x40
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fa0:	a905      	add	r1, sp, #20
 8000fa2:	4813      	ldr	r0, [pc, #76]	@ (8000ff0 <HAL_QSPI_MspInit+0xd4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fa4:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8000fa8:	230a      	movs	r3, #10
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000faa:	e9cd 7407 	strd	r7, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8000fae:	9309      	str	r3, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fb0:	f003 fb48 	bl	8004644 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fb4:	a905      	add	r1, sp, #20
 8000fb6:	480e      	ldr	r0, [pc, #56]	@ (8000ff0 <HAL_QSPI_MspInit+0xd4>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000fb8:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fba:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fbe:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fc2:	f003 fb3f 	bl	8004644 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11;
 8000fc6:	f44f 5360 	mov.w	r3, #14336	@ 0x3800
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000fca:	a905      	add	r1, sp, #20
 8000fcc:	4809      	ldr	r0, [pc, #36]	@ (8000ff4 <HAL_QSPI_MspInit+0xd8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000fce:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fd0:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fd4:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000fd8:	f003 fb34 	bl	8004644 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8000fdc:	b00a      	add	sp, #40	@ 0x28
 8000fde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000fe2:	bf00      	nop
 8000fe4:	a0001000 	.word	0xa0001000
 8000fe8:	40023800 	.word	0x40023800
 8000fec:	40021000 	.word	0x40021000
 8000ff0:	40020400 	.word	0x40020400
 8000ff4:	40020c00 	.word	0x40020c00

08000ff8 <HAL_QSPI_MspDeInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
  if(hqspi->Instance==QUADSPI)
 8000ff8:	6802      	ldr	r2, [r0, #0]
{
 8000ffa:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8000ffc:	4b0b      	ldr	r3, [pc, #44]	@ (800102c <HAL_QSPI_MspDeInit+0x34>)
 8000ffe:	429a      	cmp	r2, r3
 8001000:	d113      	bne.n	800102a <HAL_QSPI_MspDeInit+0x32>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001002:	4a0b      	ldr	r2, [pc, #44]	@ (8001030 <HAL_QSPI_MspDeInit+0x38>)
    PB2     ------> QUADSPI_CLK
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 8001004:	2104      	movs	r1, #4
 8001006:	480b      	ldr	r0, [pc, #44]	@ (8001034 <HAL_QSPI_MspDeInit+0x3c>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001008:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800100a:	f023 0302 	bic.w	r3, r3, #2
 800100e:	6393      	str	r3, [r2, #56]	@ 0x38
    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 8001010:	f003 fbfc 	bl	800480c <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_2);
 8001014:	2144      	movs	r1, #68	@ 0x44
 8001016:	4808      	ldr	r0, [pc, #32]	@ (8001038 <HAL_QSPI_MspDeInit+0x40>)
 8001018:	f003 fbf8 	bl	800480c <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11);
 800101c:	f44f 5160 	mov.w	r1, #14336	@ 0x3800
 8001020:	4806      	ldr	r0, [pc, #24]	@ (800103c <HAL_QSPI_MspDeInit+0x44>)
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001022:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11);
 8001026:	f003 bbf1 	b.w	800480c <HAL_GPIO_DeInit>
}
 800102a:	bd08      	pop	{r3, pc}
 800102c:	a0001000 	.word	0xa0001000
 8001030:	40023800 	.word	0x40023800
 8001034:	40021000 	.word	0x40021000
 8001038:	40020400 	.word	0x40020400
 800103c:	40020c00 	.word	0x40020c00

08001040 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001040:	b510      	push	{r4, lr}
 8001042:	b0a8      	sub	sp, #160	@ 0xa0
 8001044:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001046:	2214      	movs	r2, #20
 8001048:	2100      	movs	r1, #0
 800104a:	a802      	add	r0, sp, #8
 800104c:	f020 ff5e 	bl	8021f0c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001050:	2284      	movs	r2, #132	@ 0x84
 8001052:	2100      	movs	r1, #0
 8001054:	a807      	add	r0, sp, #28
 8001056:	f020 ff59 	bl	8021f0c <memset>
  if(huart->Instance==UART7)
 800105a:	6822      	ldr	r2, [r4, #0]
 800105c:	4b17      	ldr	r3, [pc, #92]	@ (80010bc <HAL_UART_MspInit+0x7c>)
 800105e:	429a      	cmp	r2, r3
 8001060:	d12a      	bne.n	80010b8 <HAL_UART_MspInit+0x78>

  /* USER CODE END UART7_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 8001062:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001066:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 8001068:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800106a:	f004 ffc5 	bl	8005ff8 <HAL_RCCEx_PeriphCLKConfig>
 800106e:	b108      	cbz	r0, 8001074 <HAL_UART_MspInit+0x34>
    {
      Error_Handler();
 8001070:	f7ff fdf0 	bl	8000c54 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_UART7_CLK_ENABLE();
 8001074:	4b12      	ldr	r3, [pc, #72]	@ (80010c0 <HAL_UART_MspInit+0x80>)
    PF6     ------> UART7_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001076:	2100      	movs	r1, #0
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001078:	4812      	ldr	r0, [pc, #72]	@ (80010c4 <HAL_UART_MspInit+0x84>)
    __HAL_RCC_UART7_CLK_ENABLE();
 800107a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800107c:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8001080:	641a      	str	r2, [r3, #64]	@ 0x40
 8001082:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001084:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 8001088:	9200      	str	r2, [sp, #0]
 800108a:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800108c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800108e:	f042 0220 	orr.w	r2, r2, #32
 8001092:	631a      	str	r2, [r3, #48]	@ 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001094:	22c0      	movs	r2, #192	@ 0xc0
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001096:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001098:	f003 0320 	and.w	r3, r3, #32
 800109c:	9301      	str	r3, [sp, #4]
 800109e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010a0:	2302      	movs	r3, #2
 80010a2:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010a6:	2303      	movs	r3, #3
 80010a8:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 80010ac:	2308      	movs	r3, #8
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80010ae:	eb0d 0103 	add.w	r1, sp, r3
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 80010b2:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80010b4:	f003 fac6 	bl	8004644 <HAL_GPIO_Init>
  /* USER CODE BEGIN UART7_MspInit 1 */

  /* USER CODE END UART7_MspInit 1 */
  }

}
 80010b8:	b028      	add	sp, #160	@ 0xa0
 80010ba:	bd10      	pop	{r4, pc}
 80010bc:	40007800 	.word	0x40007800
 80010c0:	40023800 	.word	0x40023800
 80010c4:	40021400 	.word	0x40021400

080010c8 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80010c8:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80010ca:	2300      	movs	r3, #0
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80010cc:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80010ce:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80010d0:	4b29      	ldr	r3, [pc, #164]	@ (8001178 <HAL_SDRAM_MspInit+0xb0>)
 80010d2:	681e      	ldr	r6, [r3, #0]
 80010d4:	2e00      	cmp	r6, #0
 80010d6:	d14d      	bne.n	8001174 <HAL_SDRAM_MspInit+0xac>
  FMC_Initialized = 1;
 80010d8:	2201      	movs	r2, #1
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010da:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80010dc:	2503      	movs	r5, #3
 80010de:	240c      	movs	r4, #12
  FMC_Initialized = 1;
 80010e0:	601a      	str	r2, [r3, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80010e2:	a901      	add	r1, sp, #4
  __HAL_RCC_FMC_CLK_ENABLE();
 80010e4:	4b25      	ldr	r3, [pc, #148]	@ (800117c <HAL_SDRAM_MspInit+0xb4>)
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80010e6:	4826      	ldr	r0, [pc, #152]	@ (8001180 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80010e8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80010ea:	f042 0201 	orr.w	r2, r2, #1
 80010ee:	639a      	str	r2, [r3, #56]	@ 0x38
 80010f0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80010f2:	f003 0301 	and.w	r3, r3, #1
 80010f6:	9300      	str	r3, [sp, #0]
 80010f8:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010fa:	f64f 7383 	movw	r3, #65411	@ 0xff83
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80010fe:	e9cd 5404 	strd	r5, r4, [sp, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001102:	e9cd 3701 	strd	r3, r7, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001106:	f003 fa9d 	bl	8004644 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 800110a:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800110e:	a901      	add	r1, sp, #4
 8001110:	481c      	ldr	r0, [pc, #112]	@ (8001184 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001112:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001114:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001118:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800111c:	f003 fa92 	bl	8004644 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001120:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001124:	a901      	add	r1, sp, #4
 8001126:	4818      	ldr	r0, [pc, #96]	@ (8001188 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001128:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800112a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800112e:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001132:	f003 fa87 	bl	8004644 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001136:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800113a:	a901      	add	r1, sp, #4
 800113c:	4813      	ldr	r0, [pc, #76]	@ (800118c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800113e:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001140:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001144:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001148:	f003 fa7c 	bl	8004644 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_3;
 800114c:	2328      	movs	r3, #40	@ 0x28
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800114e:	a901      	add	r1, sp, #4
 8001150:	480f      	ldr	r0, [pc, #60]	@ (8001190 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001152:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001154:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001158:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800115c:	f003 fa72 	bl	8004644 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001160:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001162:	a901      	add	r1, sp, #4
 8001164:	480b      	ldr	r0, [pc, #44]	@ (8001194 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001166:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001168:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800116c:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001170:	f003 fa68 	bl	8004644 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001174:	b007      	add	sp, #28
 8001176:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001178:	200003d0 	.word	0x200003d0
 800117c:	40023800 	.word	0x40023800
 8001180:	40021000 	.word	0x40021000
 8001184:	40021800 	.word	0x40021800
 8001188:	40020c00 	.word	0x40020c00
 800118c:	40021400 	.word	0x40021400
 8001190:	40021c00 	.word	0x40021c00
 8001194:	40020800 	.word	0x40020800

08001198 <HAL_InitTick>:
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001198:	4b21      	ldr	r3, [pc, #132]	@ (8001220 <HAL_InitTick+0x88>)
 800119a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800119c:	f042 0210 	orr.w	r2, r2, #16
{
 80011a0:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_TIM6_CLK_ENABLE();
 80011a2:	641a      	str	r2, [r3, #64]	@ 0x40
{
 80011a4:	b088      	sub	sp, #32
  __HAL_RCC_TIM6_CLK_ENABLE();
 80011a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
{
 80011a8:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80011aa:	a901      	add	r1, sp, #4
 80011ac:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80011ae:	f003 0310 	and.w	r3, r3, #16
 80011b2:	9302      	str	r3, [sp, #8]
 80011b4:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80011b6:	f004 ff01 	bl	8005fbc <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80011ba:	9b06      	ldr	r3, [sp, #24]
 80011bc:	bb4b      	cbnz	r3, 8001212 <HAL_InitTick+0x7a>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80011be:	f004 fedd 	bl	8005f7c <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80011c2:	4e18      	ldr	r6, [pc, #96]	@ (8001224 <HAL_InitTick+0x8c>)
 80011c4:	4b18      	ldr	r3, [pc, #96]	@ (8001228 <HAL_InitTick+0x90>)
 80011c6:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80011c8:	f240 33e7 	movw	r3, #999	@ 0x3e7
 80011cc:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80011ce:	4b17      	ldr	r3, [pc, #92]	@ (800122c <HAL_InitTick+0x94>)
 80011d0:	fbb0 f3f3 	udiv	r3, r0, r3
 80011d4:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80011d6:	4630      	mov	r0, r6
  htim6.Init.Prescaler = uwPrescalerValue;
 80011d8:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
 80011da:	2300      	movs	r3, #0
 80011dc:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80011de:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80011e0:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 80011e2:	f005 fb43 	bl	800686c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80011e6:	4604      	mov	r4, r0
 80011e8:	b980      	cbnz	r0, 800120c <HAL_InitTick+0x74>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 80011ea:	4630      	mov	r0, r6
 80011ec:	f005 f9e6 	bl	80065bc <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80011f0:	4604      	mov	r4, r0
 80011f2:	b958      	cbnz	r0, 800120c <HAL_InitTick+0x74>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80011f4:	2036      	movs	r0, #54	@ 0x36
 80011f6:	f003 f80d 	bl	8004214 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80011fa:	2d0f      	cmp	r5, #15
 80011fc:	d80d      	bhi.n	800121a <HAL_InitTick+0x82>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80011fe:	4622      	mov	r2, r4
 8001200:	4629      	mov	r1, r5
 8001202:	2036      	movs	r0, #54	@ 0x36
 8001204:	f002 ffd4 	bl	80041b0 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001208:	4b09      	ldr	r3, [pc, #36]	@ (8001230 <HAL_InitTick+0x98>)
 800120a:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 800120c:	4620      	mov	r0, r4
 800120e:	b008      	add	sp, #32
 8001210:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001212:	f004 feb3 	bl	8005f7c <HAL_RCC_GetPCLK1Freq>
 8001216:	0040      	lsls	r0, r0, #1
 8001218:	e7d3      	b.n	80011c2 <HAL_InitTick+0x2a>
        status = HAL_ERROR;
 800121a:	2401      	movs	r4, #1
 800121c:	e7f6      	b.n	800120c <HAL_InitTick+0x74>
 800121e:	bf00      	nop
 8001220:	40023800 	.word	0x40023800
 8001224:	200003d4 	.word	0x200003d4
 8001228:	40001000 	.word	0x40001000
 800122c:	000f4240 	.word	0x000f4240
 8001230:	2000003c 	.word	0x2000003c

08001234 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001234:	4770      	bx	lr

08001236 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001236:	e7fe      	b.n	8001236 <HardFault_Handler>

08001238 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001238:	e7fe      	b.n	8001238 <MemManage_Handler>

0800123a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800123a:	e7fe      	b.n	800123a <BusFault_Handler>

0800123c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800123c:	e7fe      	b.n	800123c <UsageFault_Handler>

0800123e <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 800123e:	4770      	bx	lr

08001240 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001240:	4801      	ldr	r0, [pc, #4]	@ (8001248 <TIM6_DAC_IRQHandler+0x8>)
 8001242:	f005 b9fd 	b.w	8006640 <HAL_TIM_IRQHandler>
 8001246:	bf00      	nop
 8001248:	200003d4 	.word	0x200003d4

0800124c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800124c:	4801      	ldr	r0, [pc, #4]	@ (8001254 <LTDC_IRQHandler+0x8>)
 800124e:	f004 b807 	b.w	8005260 <HAL_LTDC_IRQHandler>
 8001252:	bf00      	nop
 8001254:	20000270 	.word	0x20000270

08001258 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001258:	4801      	ldr	r0, [pc, #4]	@ (8001260 <DMA2D_IRQHandler+0x8>)
 800125a:	f003 b922 	b.w	80044a2 <HAL_DMA2D_IRQHandler>
 800125e:	bf00      	nop
 8001260:	2000036c 	.word	0x2000036c

08001264 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001264:	2001      	movs	r0, #1
 8001266:	4770      	bx	lr

08001268 <_kill>:

int _kill(int pid, int sig)
{
 8001268:	b508      	push	{r3, lr}
	errno = EINVAL;
 800126a:	f020 ff17 	bl	802209c <__errno>
 800126e:	2316      	movs	r3, #22
 8001270:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001272:	f04f 30ff 	mov.w	r0, #4294967295
 8001276:	bd08      	pop	{r3, pc}

08001278 <_exit>:

void _exit (int status)
{
 8001278:	b508      	push	{r3, lr}
	errno = EINVAL;
 800127a:	f020 ff0f 	bl	802209c <__errno>
 800127e:	2316      	movs	r3, #22
 8001280:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001282:	e7fe      	b.n	8001282 <_exit+0xa>

08001284 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001284:	b570      	push	{r4, r5, r6, lr}
 8001286:	460d      	mov	r5, r1
 8001288:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800128a:	460e      	mov	r6, r1
 800128c:	1b73      	subs	r3, r6, r5
 800128e:	429c      	cmp	r4, r3
 8001290:	dc01      	bgt.n	8001296 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001292:	4620      	mov	r0, r4
 8001294:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001296:	f3af 8000 	nop.w
 800129a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800129e:	e7f5      	b.n	800128c <_read+0x8>

080012a0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80012a0:	b570      	push	{r4, r5, r6, lr}
 80012a2:	460d      	mov	r5, r1
 80012a4:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012a6:	460e      	mov	r6, r1
 80012a8:	1b73      	subs	r3, r6, r5
 80012aa:	429c      	cmp	r4, r3
 80012ac:	dc01      	bgt.n	80012b2 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80012ae:	4620      	mov	r0, r4
 80012b0:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80012b2:	f816 0b01 	ldrb.w	r0, [r6], #1
 80012b6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012ba:	e7f5      	b.n	80012a8 <_write+0x8>

080012bc <_close>:

int _close(int file)
{
	return -1;
}
 80012bc:	f04f 30ff 	mov.w	r0, #4294967295
 80012c0:	4770      	bx	lr

080012c2 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80012c2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
 80012c6:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 80012c8:	604b      	str	r3, [r1, #4]
}
 80012ca:	4770      	bx	lr

080012cc <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80012cc:	2001      	movs	r0, #1
 80012ce:	4770      	bx	lr

080012d0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80012d0:	2000      	movs	r0, #0
 80012d2:	4770      	bx	lr

080012d4 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80012d4:	4a0b      	ldr	r2, [pc, #44]	@ (8001304 <_sbrk+0x30>)
{
 80012d6:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 80012d8:	6811      	ldr	r1, [r2, #0]
{
 80012da:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 80012dc:	b909      	cbnz	r1, 80012e2 <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 80012de:	490a      	ldr	r1, [pc, #40]	@ (8001308 <_sbrk+0x34>)
 80012e0:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80012e2:	6810      	ldr	r0, [r2, #0]
 80012e4:	4909      	ldr	r1, [pc, #36]	@ (800130c <_sbrk+0x38>)
 80012e6:	4c0a      	ldr	r4, [pc, #40]	@ (8001310 <_sbrk+0x3c>)
 80012e8:	4403      	add	r3, r0
 80012ea:	1b09      	subs	r1, r1, r4
 80012ec:	428b      	cmp	r3, r1
 80012ee:	d906      	bls.n	80012fe <_sbrk+0x2a>
  {
    errno = ENOMEM;
 80012f0:	f020 fed4 	bl	802209c <__errno>
 80012f4:	230c      	movs	r3, #12
 80012f6:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80012f8:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 80012fc:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 80012fe:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 8001300:	e7fc      	b.n	80012fc <_sbrk+0x28>
 8001302:	bf00      	nop
 8001304:	20000420 	.word	0x20000420
 8001308:	200177b0 	.word	0x200177b0
 800130c:	20050000 	.word	0x20050000
 8001310:	00000a00 	.word	0x00000a00

08001314 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
 8001314:	4770      	bx	lr
	...

08001318 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8001318:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001350 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800131c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800131e:	e003      	b.n	8001328 <LoopCopyDataInit>

08001320 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001320:	4b0c      	ldr	r3, [pc, #48]	@ (8001354 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8001322:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001324:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8001326:	3104      	adds	r1, #4

08001328 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8001328:	480b      	ldr	r0, [pc, #44]	@ (8001358 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800132a:	4b0c      	ldr	r3, [pc, #48]	@ (800135c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 800132c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800132e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001330:	d3f6      	bcc.n	8001320 <CopyDataInit>
  ldr  r2, =_sbss
 8001332:	4a0b      	ldr	r2, [pc, #44]	@ (8001360 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001334:	e002      	b.n	800133c <LoopFillZerobss>

08001336 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8001336:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8001338:	f842 3b04 	str.w	r3, [r2], #4

0800133c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800133c:	4b09      	ldr	r3, [pc, #36]	@ (8001364 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800133e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001340:	d3f9      	bcc.n	8001336 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8001342:	f002 fe05 	bl	8003f50 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001346:	f020 feaf 	bl	80220a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800134a:	f7ff f9b5 	bl	80006b8 <main>
  bx  lr    
 800134e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001350:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8001354:	0802520c 	.word	0x0802520c
  ldr  r0, =_sdata
 8001358:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 800135c:	20000124 	.word	0x20000124
  ldr  r2, =_sbss
 8001360:	20000124 	.word	0x20000124
  ldr  r3, = _ebss
 8001364:	200177ac 	.word	0x200177ac

08001368 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001368:	e7fe      	b.n	8001368 <ADC_IRQHandler>

0800136a <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 800136a:	4770      	bx	lr

0800136c <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800136c:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 800136e:	f000 fd99 	bl	8001ea4 <touchgfx_components_init>
    touchgfx_init();
}
 8001372:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8001376:	f000 bd21 	b.w	8001dbc <touchgfx_init>

0800137a <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 800137a:	f000 bd95 	b.w	8001ea8 <touchgfx_taskEntry>

0800137e <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800137e:	6840      	ldr	r0, [r0, #4]
    }
 8001380:	4770      	bx	lr

08001382 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8001382:	6041      	str	r1, [r0, #4]
    }
 8001384:	4770      	bx	lr
	...

08001388 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8001388:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 800138c:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 8001390:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8001394:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 8001398:	4b05      	ldr	r3, [pc, #20]	@ (80013b0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 800139a:	4a06      	ldr	r2, [pc, #24]	@ (80013b4 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 800139c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
 80013a0:	430a      	orrs	r2, r1
 80013a2:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 80013a6:	681a      	ldr	r2, [r3, #0]
 80013a8:	f042 0201 	orr.w	r2, r2, #1
 80013ac:	601a      	str	r2, [r3, #0]
}
 80013ae:	4770      	bx	lr
 80013b0:	e0001000 	.word	0xe0001000
 80013b4:	c5acce55 	.word	0xc5acce55

080013b8 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 80013b8:	1a52      	subs	r2, r2, r1
 80013ba:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 80013be:	fbb2 f0f3 	udiv	r0, r2, r3
 80013c2:	4770      	bx	lr

080013c4 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 80013c4:	4b01      	ldr	r3, [pc, #4]	@ (80013cc <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 80013c6:	6858      	ldr	r0, [r3, #4]
}
 80013c8:	4770      	bx	lr
 80013ca:	bf00      	nop
 80013cc:	e0001000 	.word	0xe0001000

080013d0 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 80013d0:	4770      	bx	lr

080013d2 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 80013d2:	b510      	push	{r4, lr}
 80013d4:	4604      	mov	r4, r0
 80013d6:	210c      	movs	r1, #12
 80013d8:	f01f fd92 	bl	8020f00 <_ZdlPvj>
 80013dc:	4620      	mov	r0, r4
 80013de:	bd10      	pop	{r4, pc}

080013e0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80013e0:	6803      	ldr	r3, [r0, #0]
{
 80013e2:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80013e4:	691b      	ldr	r3, [r3, #16]
{
 80013e6:	4604      	mov	r4, r0
    if (active) //idle task sched out
 80013e8:	b131      	cbz	r1, 80013f8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80013ea:	4798      	blx	r3
 80013ec:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 80013ee:	6863      	ldr	r3, [r4, #4]
 80013f0:	1a9b      	subs	r3, r3, r2
 80013f2:	4403      	add	r3, r0
 80013f4:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 80013f6:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 80013f8:	4798      	blx	r3
 80013fa:	60a0      	str	r0, [r4, #8]
}
 80013fc:	e7fb      	b.n	80013f6 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>
	...

08001400 <_ZN20STM32TouchController4initEv>:
extern I2C_HandleTypeDef hi2c3;

void STM32TouchController::init()
{
    /* Initialize the TS driver structure */
    tsDriver = &ft5336_ts_drv;
 8001400:	4b02      	ldr	r3, [pc, #8]	@ (800140c <_ZN20STM32TouchController4initEv+0xc>)

    /* Initialize the TS driver */
    tsDriver->Start(TS_I2C_ADDRESS);
 8001402:	2070      	movs	r0, #112	@ 0x70
    tsDriver = &ft5336_ts_drv;
 8001404:	4a02      	ldr	r2, [pc, #8]	@ (8001410 <_ZN20STM32TouchController4initEv+0x10>)
 8001406:	6013      	str	r3, [r2, #0]
    tsDriver->Start(TS_I2C_ADDRESS);
 8001408:	68db      	ldr	r3, [r3, #12]
 800140a:	4718      	bx	r3
 800140c:	20000010 	.word	0x20000010
 8001410:	20000424 	.word	0x20000424

08001414 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001414:	4770      	bx	lr

08001416 <_ZN20STM32TouchControllerD0Ev>:
 8001416:	b510      	push	{r4, lr}
 8001418:	4604      	mov	r4, r0
 800141a:	2104      	movs	r1, #4
 800141c:	f01f fd70 	bl	8020f00 <_ZdlPvj>
 8001420:	4620      	mov	r0, r4
 8001422:	bd10      	pop	{r4, pc}

08001424 <_ZN20STM32TouchController11sampleTouchERlS0_>:
}

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8001424:	b573      	push	{r0, r1, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (tsDriver)
 8001426:	4e0e      	ldr	r6, [pc, #56]	@ (8001460 <_ZN20STM32TouchController11sampleTouchERlS0_+0x3c>)
{
 8001428:	460d      	mov	r5, r1
 800142a:	4614      	mov	r4, r2
    if (tsDriver)
 800142c:	6833      	ldr	r3, [r6, #0]
 800142e:	b913      	cbnz	r3, 8001436 <_ZN20STM32TouchController11sampleTouchERlS0_+0x12>
            x = (int32_t)_x;
            y = (int32_t)_y;
            return true;
        }
    }
    return false;
 8001430:	2000      	movs	r0, #0
}
 8001432:	b002      	add	sp, #8
 8001434:	bd70      	pop	{r4, r5, r6, pc}
        if (tsDriver->DetectTouch(TS_I2C_ADDRESS))
 8001436:	691b      	ldr	r3, [r3, #16]
 8001438:	2070      	movs	r0, #112	@ 0x70
 800143a:	4798      	blx	r3
 800143c:	2800      	cmp	r0, #0
 800143e:	d0f7      	beq.n	8001430 <_ZN20STM32TouchController11sampleTouchERlS0_+0xc>
            tsDriver->GetXY(TS_I2C_ADDRESS, &_y, &_x);
 8001440:	6833      	ldr	r3, [r6, #0]
 8001442:	2070      	movs	r0, #112	@ 0x70
 8001444:	aa01      	add	r2, sp, #4
 8001446:	f10d 0106 	add.w	r1, sp, #6
 800144a:	695b      	ldr	r3, [r3, #20]
 800144c:	4798      	blx	r3
            x = (int32_t)_x;
 800144e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001452:	2001      	movs	r0, #1
 8001454:	602b      	str	r3, [r5, #0]
            y = (int32_t)_y;
 8001456:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800145a:	6023      	str	r3, [r4, #0]
            return true;
 800145c:	e7e9      	b.n	8001432 <_ZN20STM32TouchController11sampleTouchERlS0_+0xe>
 800145e:	bf00      	nop
 8001460:	20000424 	.word	0x20000424

08001464 <TS_IO_Write>:
  * @param  Reg: Reg address
  * @param  Value: Data to be written
  * @retval None
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8001464:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8001466:	2301      	movs	r3, #1
{
 8001468:	f88d 2017 	strb.w	r2, [sp, #23]
    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 800146c:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8001470:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001474:	f10d 0217 	add.w	r2, sp, #23
 8001478:	9200      	str	r2, [sp, #0]
 800147a:	460a      	mov	r2, r1
 800147c:	4601      	mov	r1, r0
 800147e:	4805      	ldr	r0, [pc, #20]	@ (8001494 <TS_IO_Write+0x30>)
 8001480:	f003 fbf6 	bl	8004c70 <HAL_I2C_Mem_Write>
    if (status != HAL_OK)
 8001484:	b110      	cbz	r0, 800148c <TS_IO_Write+0x28>
    HAL_I2C_DeInit(i2c_handler);
 8001486:	4803      	ldr	r0, [pc, #12]	@ (8001494 <TS_IO_Write+0x30>)
 8001488:	f003 fbd9 	bl	8004c3e <HAL_I2C_DeInit>
    I2Cx_WriteMultiple(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&Value, 1);
}
 800148c:	b007      	add	sp, #28
 800148e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001492:	bf00      	nop
 8001494:	20000318 	.word	0x20000318

08001498 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Reg address
  * @retval Data to be read
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8001498:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    uint8_t read_value = 0;
 800149a:	2300      	movs	r3, #0
{
 800149c:	460a      	mov	r2, r1
    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 800149e:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
    uint8_t read_value = 0;
 80014a2:	f88d 3017 	strb.w	r3, [sp, #23]
    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 80014a6:	2301      	movs	r3, #1
 80014a8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80014ac:	f10d 0117 	add.w	r1, sp, #23
 80014b0:	9100      	str	r1, [sp, #0]
 80014b2:	4601      	mov	r1, r0
 80014b4:	4805      	ldr	r0, [pc, #20]	@ (80014cc <TS_IO_Read+0x34>)
 80014b6:	f003 fcb5 	bl	8004e24 <HAL_I2C_Mem_Read>
    if (status != HAL_OK)
 80014ba:	b110      	cbz	r0, 80014c2 <TS_IO_Read+0x2a>
    HAL_I2C_DeInit(i2c_handler);
 80014bc:	4803      	ldr	r0, [pc, #12]	@ (80014cc <TS_IO_Read+0x34>)
 80014be:	f003 fbbe 	bl	8004c3e <HAL_I2C_DeInit>

    I2Cx_ReadMultiple(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&read_value, 1);

    return read_value;
}
 80014c2:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80014c6:	b007      	add	sp, #28
 80014c8:	f85d fb04 	ldr.w	pc, [sp], #4
 80014cc:	20000318 	.word	0x20000318

080014d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 80014d0:	2803      	cmp	r0, #3
 80014d2:	d823      	bhi.n	800151c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
 80014d4:	e8df f000 	tbb	[pc, r0]
 80014d8:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 80014dc:	4b10      	ldr	r3, [pc, #64]	@ (8001520 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80014de:	2110      	movs	r1, #16
 80014e0:	4810      	ldr	r0, [pc, #64]	@ (8001524 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 80014e2:	681a      	ldr	r2, [r3, #0]
 80014e4:	fab2 f282 	clz	r2, r2
 80014e8:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80014ea:	f003 ba2f 	b.w	800494c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 80014ee:	4b0c      	ldr	r3, [pc, #48]	@ (8001520 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80014f0:	2140      	movs	r1, #64	@ 0x40
 80014f2:	685a      	ldr	r2, [r3, #4]
 80014f4:	fab2 f282 	clz	r2, r2
 80014f8:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 80014fa:	480b      	ldr	r0, [pc, #44]	@ (8001528 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 80014fc:	e7f5      	b.n	80014ea <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 80014fe:	4b08      	ldr	r3, [pc, #32]	@ (8001520 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8001500:	2180      	movs	r1, #128	@ 0x80
 8001502:	689a      	ldr	r2, [r3, #8]
 8001504:	fab2 f282 	clz	r2, r2
 8001508:	0952      	lsrs	r2, r2, #5
 800150a:	e7f6      	b.n	80014fa <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800150c:	4b04      	ldr	r3, [pc, #16]	@ (8001520 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800150e:	2140      	movs	r1, #64	@ 0x40
 8001510:	4806      	ldr	r0, [pc, #24]	@ (800152c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
 8001512:	68da      	ldr	r2, [r3, #12]
 8001514:	fab2 f282 	clz	r2, r2
 8001518:	0952      	lsrs	r2, r2, #5
 800151a:	e7e6      	b.n	80014ea <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 800151c:	4770      	bx	lr
 800151e:	bf00      	nop
 8001520:	20000428 	.word	0x20000428
 8001524:	40020400 	.word	0x40020400
 8001528:	40020800 	.word	0x40020800
 800152c:	40021800 	.word	0x40021800

08001530 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001530:	2803      	cmp	r0, #3
 8001532:	d823      	bhi.n	800157c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
 8001534:	e8df f000 	tbb	[pc, r0]
 8001538:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 800153c:	4b10      	ldr	r3, [pc, #64]	@ (8001580 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800153e:	2110      	movs	r1, #16
 8001540:	4810      	ldr	r0, [pc, #64]	@ (8001584 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 8001542:	681a      	ldr	r2, [r3, #0]
 8001544:	3a00      	subs	r2, #0
 8001546:	bf18      	it	ne
 8001548:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 800154a:	f003 b9ff 	b.w	800494c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 800154e:	4b0c      	ldr	r3, [pc, #48]	@ (8001580 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001550:	2140      	movs	r1, #64	@ 0x40
 8001552:	685a      	ldr	r2, [r3, #4]
 8001554:	3a00      	subs	r2, #0
 8001556:	bf18      	it	ne
 8001558:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 800155a:	480b      	ldr	r0, [pc, #44]	@ (8001588 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 800155c:	e7f5      	b.n	800154a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 800155e:	4b08      	ldr	r3, [pc, #32]	@ (8001580 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001560:	2180      	movs	r1, #128	@ 0x80
 8001562:	689a      	ldr	r2, [r3, #8]
 8001564:	3a00      	subs	r2, #0
 8001566:	bf18      	it	ne
 8001568:	2201      	movne	r2, #1
 800156a:	e7f6      	b.n	800155a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 800156c:	4b04      	ldr	r3, [pc, #16]	@ (8001580 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800156e:	2140      	movs	r1, #64	@ 0x40
 8001570:	4806      	ldr	r0, [pc, #24]	@ (800158c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
 8001572:	68da      	ldr	r2, [r3, #12]
 8001574:	3a00      	subs	r2, #0
 8001576:	bf18      	it	ne
 8001578:	2201      	movne	r2, #1
 800157a:	e7e6      	b.n	800154a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 800157c:	4770      	bx	lr
 800157e:	bf00      	nop
 8001580:	20000428 	.word	0x20000428
 8001584:	40020400 	.word	0x40020400
 8001588:	40020800 	.word	0x40020800
 800158c:	40021800 	.word	0x40021800

08001590 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001590:	2803      	cmp	r0, #3
 8001592:	d80f      	bhi.n	80015b4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
 8001594:	e8df f000 	tbb	[pc, r0]
 8001598:	0b090602 	.word	0x0b090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800159c:	2110      	movs	r1, #16
 800159e:	4806      	ldr	r0, [pc, #24]	@ (80015b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80015a0:	f003 b9d9 	b.w	8004956 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80015a4:	2140      	movs	r1, #64	@ 0x40
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80015a6:	4805      	ldr	r0, [pc, #20]	@ (80015bc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
 80015a8:	e7fa      	b.n	80015a0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80015aa:	2180      	movs	r1, #128	@ 0x80
 80015ac:	e7fb      	b.n	80015a6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80015ae:	2140      	movs	r1, #64	@ 0x40
 80015b0:	4803      	ldr	r0, [pc, #12]	@ (80015c0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
 80015b2:	e7f5      	b.n	80015a0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 80015b4:	4770      	bx	lr
 80015b6:	bf00      	nop
 80015b8:	40020400 	.word	0x40020400
 80015bc:	40020800 	.word	0x40020800
 80015c0:	40021800 	.word	0x40021800

080015c4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80015c4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80015c6:	2803      	cmp	r0, #3
 80015c8:	d813      	bhi.n	80015f2 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 80015ca:	e8df f000 	tbb	[pc, r0]
 80015ce:	0a02      	.short	0x0a02
 80015d0:	0f0d      	.short	0x0f0d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80015d2:	2110      	movs	r1, #16
 80015d4:	4808      	ldr	r0, [pc, #32]	@ (80015f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80015d6:	f003 f9b3 	bl	8004940 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80015da:	1e43      	subs	r3, r0, #1
 80015dc:	4258      	negs	r0, r3
 80015de:	4158      	adcs	r0, r3
 80015e0:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80015e2:	2140      	movs	r1, #64	@ 0x40
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80015e4:	4805      	ldr	r0, [pc, #20]	@ (80015fc <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
 80015e6:	e7f6      	b.n	80015d6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80015e8:	2180      	movs	r1, #128	@ 0x80
 80015ea:	e7fb      	b.n	80015e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80015ec:	2140      	movs	r1, #64	@ 0x40
 80015ee:	4804      	ldr	r0, [pc, #16]	@ (8001600 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x3c>)
 80015f0:	e7f1      	b.n	80015d6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
    switch (id)
 80015f2:	2000      	movs	r0, #0
 80015f4:	e7f1      	b.n	80015da <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 80015f6:	bf00      	nop
 80015f8:	40020400 	.word	0x40020400
 80015fc:	40020800 	.word	0x40020800
 8001600:	40021800 	.word	0x40021800

08001604 <_ZN8touchgfx4GPIO4initEv>:
{
 8001604:	b570      	push	{r4, r5, r6, lr}
 8001606:	4d08      	ldr	r5, [pc, #32]	@ (8001628 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001608:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800160a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800160c:	b2e0      	uxtb	r0, r4
 800160e:	f7ff ffd9 	bl	80015c4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001612:	b118      	cbz	r0, 800161c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001614:	682b      	ldr	r3, [r5, #0]
 8001616:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001618:	bf18      	it	ne
 800161a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800161c:	3401      	adds	r4, #1
 800161e:	3504      	adds	r5, #4
 8001620:	2c05      	cmp	r4, #5
 8001622:	d1f3      	bne.n	800160c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001624:	bd70      	pop	{r4, r5, r6, pc}
 8001626:	bf00      	nop
 8001628:	20000428 	.word	0x20000428

0800162c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800162c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800162e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8001632:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8001636:	4770      	bx	lr

08001638 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001638:	2000      	movs	r0, #0
 800163a:	4770      	bx	lr

0800163c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800163c:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800163e:	3900      	subs	r1, #0
 8001640:	4b02      	ldr	r3, [pc, #8]	@ (800164c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 8001642:	bf18      	it	ne
 8001644:	2101      	movne	r1, #1
 8001646:	7019      	strb	r1, [r3, #0]
    }
 8001648:	4770      	bx	lr
 800164a:	bf00      	nop
 800164c:	20016b73 	.word	0x20016b73

08001650 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001650:	2000      	movs	r0, #0
 8001652:	4770      	bx	lr

08001654 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001654:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8001656:	b10b      	cbz	r3, 800165c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001658:	4608      	mov	r0, r1
 800165a:	4718      	bx	r3
        }
    }
 800165c:	4770      	bx	lr

0800165e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800165e:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8001662:	4770      	bx	lr

08001664 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001664:	6840      	ldr	r0, [r0, #4]
 8001666:	6803      	ldr	r3, [r0, #0]
 8001668:	699b      	ldr	r3, [r3, #24]
 800166a:	4718      	bx	r3

0800166c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800166c:	4770      	bx	lr
	...

08001670 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationBuffer[(480 * 272 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001670:	b538      	push	{r3, r4, r5, lr}
 8001672:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001674:	f000 fce0 	bl	8002038 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);  //enable the animation storage to allow slide animations
 8001678:	4908      	ldr	r1, [pc, #32]	@ (800169c <_ZN11TouchGFXHAL10initializeEv+0x2c>)
 800167a:	6823      	ldr	r3, [r4, #0]
 800167c:	4620      	mov	r0, r4
    lockDMAToFrontPorch(false);
    instrumentation.init();
 800167e:	4d08      	ldr	r5, [pc, #32]	@ (80016a0 <_ZN11TouchGFXHAL10initializeEv+0x30>)
    setAnimationStorage((void*)animationBuffer);  //enable the animation storage to allow slide animations
 8001680:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001684:	4798      	blx	r3
        lockDMAToPorch = enableLock;
 8001686:	2300      	movs	r3, #0
    instrumentation.init();
 8001688:	4628      	mov	r0, r5
 800168a:	f884 304a 	strb.w	r3, [r4, #74]	@ 0x4a
 800168e:	f7ff fe7b 	bl	8001388 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8001692:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 8001694:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 8001696:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
}
 800169a:	bd38      	pop	{r3, r4, r5, pc}
 800169c:	c0000000 	.word	0xc0000000
 80016a0:	20000438 	.word	0x20000438

080016a4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80016a4:	f000 bc92 	b.w	8001fcc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080016a8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80016a8:	f000 bc96 	b.w	8001fd8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080016ac <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80016ac:	b570      	push	{r4, r5, r6, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80016ae:	f000 fce1 	bl	8002074 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 80016b2:	4910      	ldr	r1, [pc, #64]	@ (80016f4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x48>)
 80016b4:	2300      	movs	r3, #0
 80016b6:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80016ba:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 80016be:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80016c2:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80016c6:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80016ca:	f3c3 334e 	ubfx	r3, r3, #13, #15
 80016ce:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80016d0:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80016d4:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80016d6:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 80016da:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80016dc:	f8c1 5274 	str.w	r5, [r1, #628]	@ 0x274
      } while (ways-- != 0U);
 80016e0:	d2f9      	bcs.n	80016d6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2a>
    } while(sets-- != 0U);
 80016e2:	3b20      	subs	r3, #32
 80016e4:	f113 0f20 	cmn.w	r3, #32
 80016e8:	d1f2      	bne.n	80016d0 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x24>
 80016ea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80016ee:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
 80016f2:	bd70      	pop	{r4, r5, r6, pc}
 80016f4:	e000ed00 	.word	0xe000ed00

080016f8 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80016f8:	f000 bcbe 	b.w	8002078 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

080016fc <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80016fc:	f000 bc42 	b.w	8001f84 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001700 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001700:	f000 bcbc 	b.w	800207c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001704 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001704:	f000 bcc4 	b.w	8002090 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001708 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001708:	f000 bc46 	b.w	8001f98 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

0800170c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800170c:	b510      	push	{r4, lr}
 800170e:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001710:	f009 fca0 	bl	800b054 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001714:	6823      	ldr	r3, [r4, #0]
 8001716:	4620      	mov	r0, r4
 8001718:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 800171c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001720:	4718      	bx	r3

08001722 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001722:	f008 bef4 	b.w	800a50e <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001726 <_ZN11TouchGFXHALD0Ev>:
 8001726:	b510      	push	{r4, lr}
 8001728:	4604      	mov	r4, r0
 800172a:	217c      	movs	r1, #124	@ 0x7c
 800172c:	f01f fbe8 	bl	8020f00 <_ZdlPvj>
 8001730:	4620      	mov	r0, r4
 8001732:	bd10      	pop	{r4, pc}

08001734 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8001734:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
 8001738:	4b0d      	ldr	r3, [pc, #52]	@ (8001770 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
 800173a:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800173c:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001740:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001742:	428c      	cmp	r4, r1
 8001744:	d009      	beq.n	800175a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001746:	b93a      	cbnz	r2, 8001758 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001748:	490a      	ldr	r1, [pc, #40]	@ (8001774 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800174a:	4a0b      	ldr	r2, [pc, #44]	@ (8001778 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800174c:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800174e:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 8001750:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 8001752:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001754:	800c      	strh	r4, [r1, #0]
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
 8001756:	701a      	strb	r2, [r3, #0]
        }
    }
 8001758:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800175a:	2a00      	cmp	r2, #0
 800175c:	d0fc      	beq.n	8001758 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800175e:	4a06      	ldr	r2, [pc, #24]	@ (8001778 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001760:	4904      	ldr	r1, [pc, #16]	@ (8001774 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001762:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001764:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001766:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001768:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800176a:	2200      	movs	r2, #0
 800176c:	e7f3      	b.n	8001756 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800176e:	bf00      	nop
 8001770:	20016b6c 	.word	0x20016b6c
 8001774:	20016b6a 	.word	0x20016b6a
 8001778:	20016b68 	.word	0x20016b68

0800177c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800177c:	b570      	push	{r4, r5, r6, lr}
 800177e:	460d      	mov	r5, r1
 8001780:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001782:	b935      	cbnz	r5, 8001792 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001784:	4b09      	ldr	r3, [pc, #36]	@ (80017ac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001786:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800178a:	4a09      	ldr	r2, [pc, #36]	@ (80017b0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 800178c:	4809      	ldr	r0, [pc, #36]	@ (80017b4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 800178e:	f020 f921 	bl	80219d4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001792:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001796:	3a00      	subs	r2, #0
 8001798:	4b07      	ldr	r3, [pc, #28]	@ (80017b8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 800179a:	bf18      	it	ne
 800179c:	2201      	movne	r2, #1
 800179e:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80017a0:	6803      	ldr	r3, [r0, #0]
    }
 80017a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80017a6:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80017aa:	4718      	bx	r3
 80017ac:	08022bac 	.word	0x08022bac
 80017b0:	08022be4 	.word	0x08022be4
 80017b4:	08022c32 	.word	0x08022c32
 80017b8:	20016b72 	.word	0x20016b72

080017bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80017bc:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80017be:	4b09      	ldr	r3, [pc, #36]	@ (80017e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80017c0:	881b      	ldrh	r3, [r3, #0]
 80017c2:	428b      	cmp	r3, r1
 80017c4:	d803      	bhi.n	80017ce <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80017c6:	4b08      	ldr	r3, [pc, #32]	@ (80017e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80017c8:	881b      	ldrh	r3, [r3, #0]
 80017ca:	4293      	cmp	r3, r2
 80017cc:	d905      	bls.n	80017da <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80017ce:	4b07      	ldr	r3, [pc, #28]	@ (80017ec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80017d0:	219e      	movs	r1, #158	@ 0x9e
 80017d2:	4a07      	ldr	r2, [pc, #28]	@ (80017f0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80017d4:	4807      	ldr	r0, [pc, #28]	@ (80017f4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80017d6:	f020 f8fd 	bl	80219d4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80017da:	4b07      	ldr	r3, [pc, #28]	@ (80017f8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80017dc:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80017de:	4b07      	ldr	r3, [pc, #28]	@ (80017fc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80017e0:	801a      	strh	r2, [r3, #0]
    }
 80017e2:	bd08      	pop	{r3, pc}
 80017e4:	20016b68 	.word	0x20016b68
 80017e8:	20016b6a 	.word	0x20016b6a
 80017ec:	08022c77 	.word	0x08022c77
 80017f0:	08022cda 	.word	0x08022cda
 80017f4:	08022c32 	.word	0x08022c32
 80017f8:	20016b6e 	.word	0x20016b6e
 80017fc:	20016b70 	.word	0x20016b70

08001800 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8001800:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8001802:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001806:	b118      	cbz	r0, 8001810 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001808:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 800180a:	6803      	ldr	r3, [r0, #0]
 800180c:	681b      	ldr	r3, [r3, #0]
 800180e:	4718      	bx	r3
    }
 8001810:	4770      	bx	lr
	...

08001814 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001814:	4601      	mov	r1, r0
 8001816:	b508      	push	{r3, lr}
        return instance;
 8001818:	4b03      	ldr	r3, [pc, #12]	@ (8001828 <IdleTaskHook+0x14>)
 800181a:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 800181c:	b101      	cbz	r1, 8001820 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 800181e:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8001820:	f009 fc32 	bl	800b088 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001824:	2001      	movs	r0, #1
 8001826:	bd08      	pop	{r3, pc}
 8001828:	20016b74 	.word	0x20016b74

0800182c <_GLOBAL__sub_I_instrumentation>:
        : cc_consumed(0),
 800182c:	4b03      	ldr	r3, [pc, #12]	@ (800183c <_GLOBAL__sub_I_instrumentation+0x10>)
 800182e:	2200      	movs	r2, #0
 8001830:	605a      	str	r2, [r3, #4]
          cc_in(0)
 8001832:	609a      	str	r2, [r3, #8]
 8001834:	4a02      	ldr	r2, [pc, #8]	@ (8001840 <_GLOBAL__sub_I_instrumentation+0x14>)
 8001836:	601a      	str	r2, [r3, #0]
}
 8001838:	4770      	bx	lr
 800183a:	bf00      	nop
 800183c:	20000438 	.word	0x20000438
 8001840:	08022b74 	.word	0x08022b74

08001844 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001844:	2101      	movs	r1, #1
 8001846:	2200      	movs	r2, #0
{
 8001848:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800184a:	4608      	mov	r0, r1
 800184c:	f005 ff14 	bl	8007678 <osSemaphoreNew>
 8001850:	4b0a      	ldr	r3, [pc, #40]	@ (800187c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001852:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001854:	b928      	cbnz	r0, 8001862 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001856:	4b0a      	ldr	r3, [pc, #40]	@ (8001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001858:	2128      	movs	r1, #40	@ 0x28
 800185a:	4a0a      	ldr	r2, [pc, #40]	@ (8001884 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800185c:	480a      	ldr	r0, [pc, #40]	@ (8001888 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800185e:	f020 f8b9 	bl	80219d4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001862:	2200      	movs	r2, #0
 8001864:	2104      	movs	r1, #4
 8001866:	2001      	movs	r0, #1
 8001868:	f005 ffd0 	bl	800780c <osMessageQueueNew>
 800186c:	4b07      	ldr	r3, [pc, #28]	@ (800188c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800186e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001870:	b918      	cbnz	r0, 800187a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001872:	4b07      	ldr	r3, [pc, #28]	@ (8001890 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001874:	212c      	movs	r1, #44	@ 0x2c
 8001876:	4a03      	ldr	r2, [pc, #12]	@ (8001884 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001878:	e7f0      	b.n	800185c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800187a:	bd08      	pop	{r3, pc}
 800187c:	20000448 	.word	0x20000448
 8001880:	08022df8 	.word	0x08022df8
 8001884:	08022e41 	.word	0x08022e41
 8001888:	08022e70 	.word	0x08022e70
 800188c:	20000444 	.word	0x20000444
 8001890:	08022ed0 	.word	0x08022ed0

08001894 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001894:	4b02      	ldr	r3, [pc, #8]	@ (80018a0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001896:	f04f 31ff 	mov.w	r1, #4294967295
 800189a:	6818      	ldr	r0, [r3, #0]
 800189c:	f005 bf44 	b.w	8007728 <osSemaphoreAcquire>
 80018a0:	20000448 	.word	0x20000448

080018a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80018a4:	4b01      	ldr	r3, [pc, #4]	@ (80018ac <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80018a6:	6818      	ldr	r0, [r3, #0]
 80018a8:	f005 bf7a 	b.w	80077a0 <osSemaphoreRelease>
 80018ac:	20000448 	.word	0x20000448

080018b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80018b0:	4b02      	ldr	r3, [pc, #8]	@ (80018bc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80018b2:	2100      	movs	r1, #0
 80018b4:	6818      	ldr	r0, [r3, #0]
 80018b6:	f005 bf37 	b.w	8007728 <osSemaphoreAcquire>
 80018ba:	bf00      	nop
 80018bc:	20000448 	.word	0x20000448

080018c0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 80018c0:	f7ff bff0 	b.w	80018a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080018c4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80018c4:	2300      	movs	r3, #0
 80018c6:	4803      	ldr	r0, [pc, #12]	@ (80018d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80018c8:	4903      	ldr	r1, [pc, #12]	@ (80018d8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80018ca:	461a      	mov	r2, r3
 80018cc:	6800      	ldr	r0, [r0, #0]
 80018ce:	f005 bfe3 	b.w	8007898 <osMessageQueuePut>
 80018d2:	bf00      	nop
 80018d4:	20000444 	.word	0x20000444
 80018d8:	20000004 	.word	0x20000004

080018dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80018dc:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80018de:	2300      	movs	r3, #0
 80018e0:	4c07      	ldr	r4, [pc, #28]	@ (8001900 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80018e2:	a901      	add	r1, sp, #4
 80018e4:	461a      	mov	r2, r3
 80018e6:	6820      	ldr	r0, [r4, #0]
 80018e8:	f006 f818 	bl	800791c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80018ec:	f04f 33ff 	mov.w	r3, #4294967295
 80018f0:	2200      	movs	r2, #0
 80018f2:	a901      	add	r1, sp, #4
 80018f4:	6820      	ldr	r0, [r4, #0]
 80018f6:	f006 f811 	bl	800791c <osMessageQueueGet>
}
 80018fa:	b002      	add	sp, #8
 80018fc:	bd10      	pop	{r4, pc}
 80018fe:	bf00      	nop
 8001900:	20000444 	.word	0x20000444

08001904 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001904:	6803      	ldr	r3, [r0, #0]
 8001906:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001908:	4718      	bx	r3

0800190a <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 800190a:	2001      	movs	r0, #1
 800190c:	4770      	bx	lr

0800190e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800190e:	6803      	ldr	r3, [r0, #0]
 8001910:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001912:	4718      	bx	r3

08001914 <_ZN8STM32DMA10initializeEv>:
}

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001914:	4b0d      	ldr	r3, [pc, #52]	@ (800194c <_ZN8STM32DMA10initializeEv+0x38>)
{
 8001916:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001918:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800191a:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800191e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001920:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001922:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8001926:	9201      	str	r2, [sp, #4]
 8001928:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 800192a:	691a      	ldr	r2, [r3, #16]
 800192c:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001930:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001932:	691a      	ldr	r2, [r3, #16]
 8001934:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8001938:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800193a:	4b05      	ldr	r3, [pc, #20]	@ (8001950 <_ZN8STM32DMA10initializeEv+0x3c>)
 800193c:	4a05      	ldr	r2, [pc, #20]	@ (8001954 <_ZN8STM32DMA10initializeEv+0x40>)
 800193e:	611a      	str	r2, [r3, #16]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001940:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001944:	4b04      	ldr	r3, [pc, #16]	@ (8001958 <_ZN8STM32DMA10initializeEv+0x44>)
 8001946:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001948:	b002      	add	sp, #8
 800194a:	4770      	bx	lr
 800194c:	40023800 	.word	0x40023800
 8001950:	2000036c 	.word	0x2000036c
 8001954:	08001be5 	.word	0x08001be5
 8001958:	e000e100 	.word	0xe000e100

0800195c <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 800195c:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8001960:	4770      	bx	lr
	...

08001964 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001964:	4b05      	ldr	r3, [pc, #20]	@ (800197c <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001966:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800196a:	6003      	str	r3, [r0, #0]
 800196c:	4b04      	ldr	r3, [pc, #16]	@ (8001980 <_ZN8STM32DMAD1Ev+0x1c>)
 800196e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001972:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001976:	f3bf 8f6f 	isb	sy
}
 800197a:	4770      	bx	lr
 800197c:	08023080 	.word	0x08023080
 8001980:	e000e100 	.word	0xe000e100

08001984 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001984:	b510      	push	{r4, lr}
 8001986:	4604      	mov	r4, r0
}
 8001988:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 800198c:	f7ff ffea 	bl	8001964 <_ZN8STM32DMAD1Ev>
 8001990:	4620      	mov	r0, r4
 8001992:	f01f fab5 	bl	8020f00 <_ZdlPvj>
 8001996:	4620      	mov	r0, r4
 8001998:	bd10      	pop	{r4, pc}
	...

0800199c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 800199c:	b508      	push	{r3, lr}
    switch (format)
 800199e:	280a      	cmp	r0, #10
 80019a0:	d809      	bhi.n	80019b6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 80019a2:	e8df f000 	tbb	[pc, r0]
 80019a6:	1006      	.short	0x1006
 80019a8:	0808080e 	.word	0x0808080e
 80019ac:	10101008 	.word	0x10101008
 80019b0:	10          	.byte	0x10
 80019b1:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80019b2:	2002      	movs	r0, #2
}
 80019b4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80019b6:	4b05      	ldr	r3, [pc, #20]	@ (80019cc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 80019b8:	2186      	movs	r1, #134	@ 0x86
 80019ba:	4a05      	ldr	r2, [pc, #20]	@ (80019d0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80019bc:	4805      	ldr	r0, [pc, #20]	@ (80019d4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80019be:	f020 f809 	bl	80219d4 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 80019c2:	2000      	movs	r0, #0
 80019c4:	e7f6      	b.n	80019b4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 80019c6:	2001      	movs	r0, #1
    return dma2dColorMode;
 80019c8:	e7f4      	b.n	80019b4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80019ca:	bf00      	nop
 80019cc:	08022f12 	.word	0x08022f12
 80019d0:	08022f2d 	.word	0x08022f2d
 80019d4:	08022f78 	.word	0x08022f78

080019d8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80019d8:	b538      	push	{r3, r4, r5, lr}
 80019da:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80019dc:	7f88      	ldrb	r0, [r1, #30]
 80019de:	f7ff ffdd 	bl	800199c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80019e2:	4b17      	ldr	r3, [pc, #92]	@ (8001a40 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80019e4:	8aa5      	ldrh	r5, [r4, #20]
 80019e6:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80019e8:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80019ea:	ea42 4205 	orr.w	r2, r2, r5, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80019ee:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80019f0:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80019f2:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80019f4:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80019f6:	1b52      	subs	r2, r2, r5
 80019f8:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 80019fa:	6825      	ldr	r5, [r4, #0]
 80019fc:	2d08      	cmp	r5, #8
 80019fe:	d10e      	bne.n	8001a1e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001a00:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001a02:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001a04:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001a06:	4a0f      	ldr	r2, [pc, #60]	@ (8001a44 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001a08:	7f20      	ldrb	r0, [r4, #28]
 8001a0a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001a0e:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001a10:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001a12:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001a14:	4a0c      	ldr	r2, [pc, #48]	@ (8001a48 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001a16:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001a18:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001a1a:	601a      	str	r2, [r3, #0]
    }
}
 8001a1c:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001a1e:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001a20:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001a22:	611a      	str	r2, [r3, #16]
 8001a24:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001a26:	0a0a      	lsrs	r2, r1, #8
 8001a28:	0948      	lsrs	r0, r1, #5
 8001a2a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001a2e:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8001a32:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8001a36:	4302      	orrs	r2, r0
 8001a38:	430a      	orrs	r2, r1
 8001a3a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001a3c:	4a03      	ldr	r2, [pc, #12]	@ (8001a4c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001a3e:	e7ec      	b.n	8001a1a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001a40:	4002b000 	.word	0x4002b000
 8001a44:	00010009 	.word	0x00010009
 8001a48:	00020201 	.word	0x00020201
 8001a4c:	00030201 	.word	0x00030201

08001a50 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8001a50:	b508      	push	{r3, lr}
    switch (format)
 8001a52:	280b      	cmp	r0, #11
 8001a54:	d80b      	bhi.n	8001a6e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8001a56:	e8df f000 	tbb	[pc, r0]
 8001a5a:	1206      	.short	0x1206
 8001a5c:	0a0a0a10 	.word	0x0a0a0a10
 8001a60:	0808080a 	.word	0x0808080a
 8001a64:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001a66:	2002      	movs	r0, #2
}
 8001a68:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001a6a:	2005      	movs	r0, #5
        break;
 8001a6c:	e7fc      	b.n	8001a68 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8001a6e:	4b05      	ldr	r3, [pc, #20]	@ (8001a84 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001a70:	2165      	movs	r1, #101	@ 0x65
 8001a72:	4a05      	ldr	r2, [pc, #20]	@ (8001a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001a74:	4805      	ldr	r0, [pc, #20]	@ (8001a8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8001a76:	f01f ffad 	bl	80219d4 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001a7a:	2000      	movs	r0, #0
 8001a7c:	e7f4      	b.n	8001a68 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001a7e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001a80:	e7f2      	b.n	8001a68 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001a82:	bf00      	nop
 8001a84:	08022f12 	.word	0x08022f12
 8001a88:	08022fd6 	.word	0x08022fd6
 8001a8c:	08022f78 	.word	0x08022f78

08001a90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8001a90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001a94:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8001a98:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001a9a:	4640      	mov	r0, r8
 8001a9c:	f7ff ffd8 	bl	8001a50 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001aa0:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001aa2:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001aa4:	4638      	mov	r0, r7
 8001aa6:	f7ff ffd3 	bl	8001a50 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8001aaa:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001aac:	4638      	mov	r0, r7
 8001aae:	f7ff ff75 	bl	800199c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001ab2:	8aa1      	ldrh	r1, [r4, #20]
 8001ab4:	8b62      	ldrh	r2, [r4, #26]
 8001ab6:	4b43      	ldr	r3, [pc, #268]	@ (8001bc4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001ab8:	1a52      	subs	r2, r2, r1
 8001aba:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001abc:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001abe:	8b22      	ldrh	r2, [r4, #24]
 8001ac0:	1a52      	subs	r2, r2, r1
 8001ac2:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ac4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001ac6:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ac8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001acc:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ace:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001ad0:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ad2:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001ad4:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8001ad6:	6820      	ldr	r0, [r4, #0]
 8001ad8:	2880      	cmp	r0, #128	@ 0x80
 8001ada:	d028      	beq.n	8001b2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8001adc:	7f22      	ldrb	r2, [r4, #28]
 8001ade:	d80f      	bhi.n	8001b00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8001ae0:	2820      	cmp	r0, #32
 8001ae2:	d066      	beq.n	8001bb2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
 8001ae4:	2840      	cmp	r0, #64	@ 0x40
 8001ae6:	d064      	beq.n	8001bb2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
 8001ae8:	2804      	cmp	r0, #4
 8001aea:	d01a      	beq.n	8001b22 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001aec:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001af0:	4b34      	ldr	r3, [pc, #208]	@ (8001bc4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001af2:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001af4:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001af8:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001afa:	d060      	beq.n	8001bbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12e>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001afc:	4a32      	ldr	r2, [pc, #200]	@ (8001bc8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001afe:	e044      	b.n	8001b8a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8001b00:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8001b04:	d004      	beq.n	8001b10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8001b06:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8001b0a:	d1ef      	bne.n	8001aec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b0c:	482f      	ldr	r0, [pc, #188]	@ (8001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001b0e:	e000      	b.n	8001b12 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b10:	482f      	ldr	r0, [pc, #188]	@ (8001bd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b12:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8001b16:	61da      	str	r2, [r3, #28]
 8001b18:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001b1a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001b1c:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001b1e:	6159      	str	r1, [r3, #20]
 8001b20:	e032      	b.n	8001b88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b22:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001b26:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b2a:	61da      	str	r2, [r3, #28]
 8001b2c:	e7f6      	b.n	8001b1c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001b2e:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001b30:	1d02      	adds	r2, r0, #4
 8001b32:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b34:	7f22      	ldrb	r2, [r4, #28]
 8001b36:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001b3a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001b3e:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001b40:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001b42:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001b44:	7801      	ldrb	r1, [r0, #0]
 8001b46:	b141      	cbz	r1, 8001b5a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8001b48:	2901      	cmp	r1, #1
 8001b4a:	d021      	beq.n	8001b90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8001b4c:	4b21      	ldr	r3, [pc, #132]	@ (8001bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8001b4e:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8001b52:	4a21      	ldr	r2, [pc, #132]	@ (8001bd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001b54:	4821      	ldr	r0, [pc, #132]	@ (8001bdc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8001b56:	f01f ff3d 	bl	80219d4 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001b5a:	69da      	ldr	r2, [r3, #28]
 8001b5c:	8841      	ldrh	r1, [r0, #2]
 8001b5e:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001b62:	3901      	subs	r1, #1
 8001b64:	f022 0210 	bic.w	r2, r2, #16
 8001b68:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 8001b6c:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001b6e:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001b70:	4b14      	ldr	r3, [pc, #80]	@ (8001bc4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001b72:	69da      	ldr	r2, [r3, #28]
 8001b74:	f042 0220 	orr.w	r2, r2, #32
 8001b78:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001b7a:	69da      	ldr	r2, [r3, #28]
 8001b7c:	0692      	lsls	r2, r2, #26
 8001b7e:	d4fc      	bmi.n	8001b7a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001b80:	2210      	movs	r2, #16
 8001b82:	609a      	str	r2, [r3, #8]
            if (blend)
 8001b84:	2900      	cmp	r1, #0
 8001b86:	d0b9      	beq.n	8001afc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001b88:	4a15      	ldr	r2, [pc, #84]	@ (8001be0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001b8a:	601a      	str	r2, [r3, #0]
}
 8001b8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8001b90:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001b94:	69da      	ldr	r2, [r3, #28]
 8001b96:	8840      	ldrh	r0, [r0, #2]
 8001b98:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
                if (blitOp.alpha == 255)
 8001b9c:	bf18      	it	ne
 8001b9e:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001ba0:	3801      	subs	r0, #1
 8001ba2:	f022 0210 	bic.w	r2, r2, #16
 8001ba6:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001baa:	f042 0210 	orr.w	r2, r2, #16
 8001bae:	61da      	str	r2, [r3, #28]
                break;
 8001bb0:	e7de      	b.n	8001b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bb2:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001bb6:	4b03      	ldr	r3, [pc, #12]	@ (8001bc4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001bb8:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001bbc:	e7b5      	b.n	8001b2a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001bbe:	f240 2201 	movw	r2, #513	@ 0x201
 8001bc2:	e7e2      	b.n	8001b8a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8001bc4:	4002b000 	.word	0x4002b000
 8001bc8:	00010201 	.word	0x00010201
 8001bcc:	00020009 	.word	0x00020009
 8001bd0:	0002000a 	.word	0x0002000a
 8001bd4:	08023020 	.word	0x08023020
 8001bd8:	0802303a 	.word	0x0802303a
 8001bdc:	08022f78 	.word	0x08022f78
 8001be0:	00020201 	.word	0x00020201

08001be4 <DMA2D_XferCpltCallback>:
 8001be4:	4b02      	ldr	r3, [pc, #8]	@ (8001bf0 <DMA2D_XferCpltCallback+0xc>)
 8001be6:	681b      	ldr	r3, [r3, #0]
 8001be8:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001bea:	6803      	ldr	r3, [r0, #0]
 8001bec:	695b      	ldr	r3, [r3, #20]
 8001bee:	4718      	bx	r3
 8001bf0:	20016b74 	.word	0x20016b74

08001bf4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001bf4:	b570      	push	{r4, r5, r6, lr}
 8001bf6:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001bf8:	4b0a      	ldr	r3, [pc, #40]	@ (8001c24 <_ZN8STM32DMAC1Ev+0x30>)
 8001bfa:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001bfc:	2600      	movs	r6, #0
 8001bfe:	4625      	mov	r5, r4
 8001c00:	2260      	movs	r2, #96	@ 0x60
 8001c02:	6060      	str	r0, [r4, #4]
 8001c04:	7226      	strb	r6, [r4, #8]
 8001c06:	7266      	strb	r6, [r4, #9]
 8001c08:	f845 3b20 	str.w	r3, [r5], #32
 8001c0c:	4629      	mov	r1, r5
 8001c0e:	f009 fb91 	bl	800b334 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001c12:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8001c16:	60ee      	str	r6, [r5, #12]
 8001c18:	3524      	adds	r5, #36	@ 0x24
 8001c1a:	429d      	cmp	r5, r3
 8001c1c:	d1fb      	bne.n	8001c16 <_ZN8STM32DMAC1Ev+0x22>
}
 8001c1e:	4620      	mov	r0, r4
 8001c20:	bd70      	pop	{r4, r5, r6, pc}
 8001c22:	bf00      	nop
 8001c24:	08023080 	.word	0x08023080

08001c28 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001c28:	4b03      	ldr	r3, [pc, #12]	@ (8001c38 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8001c2a:	681a      	ldr	r2, [r3, #0]
 8001c2c:	07d2      	lsls	r2, r2, #31
 8001c2e:	d4fc      	bmi.n	8001c2a <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001c30:	2223      	movs	r2, #35	@ 0x23
 8001c32:	609a      	str	r2, [r3, #8]
}
 8001c34:	4770      	bx	lr
 8001c36:	bf00      	nop
 8001c38:	4002b000 	.word	0x4002b000

08001c3c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8001c3c:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001c3e:	4c10      	ldr	r4, [pc, #64]	@ (8001c80 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
 8001c40:	6825      	ldr	r5, [r4, #0]
 8001c42:	07ed      	lsls	r5, r5, #31
 8001c44:	d4fc      	bmi.n	8001c40 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001c46:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001c48:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8001c4a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001c4c:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001c4e:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001c52:	f04f 0502 	mov.w	r5, #2
 8001c56:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001c58:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001c5a:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8001c5c:	d00a      	beq.n	8001c74 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001c5e:	4909      	ldr	r1, [pc, #36]	@ (8001c84 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001c60:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001c62:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8001c66:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001c68:	4b07      	ldr	r3, [pc, #28]	@ (8001c88 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8001c6a:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8001c6c:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8001c6e:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8001c70:	6023      	str	r3, [r4, #0]
    }
}
 8001c72:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001c74:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8001c76:	9b03      	ldr	r3, [sp, #12]
 8001c78:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8001c7a:	4b04      	ldr	r3, [pc, #16]	@ (8001c8c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
 8001c7c:	e7f8      	b.n	8001c70 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x34>
 8001c7e:	bf00      	nop
 8001c80:	4002b000 	.word	0x4002b000
 8001c84:	00010009 	.word	0x00010009
 8001c88:	00020001 	.word	0x00020001
 8001c8c:	00030001 	.word	0x00030001

08001c90 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001c90:	2001      	movs	r0, #1
 8001c92:	4770      	bx	lr

08001c94 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001c94:	200c      	movs	r0, #12
 8001c96:	4770      	bx	lr

08001c98 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001c98:	230c      	movs	r3, #12
 8001c9a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001c9e:	3008      	adds	r0, #8
 8001ca0:	4770      	bx	lr

08001ca2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001ca2:	230c      	movs	r3, #12
 8001ca4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001ca8:	3008      	adds	r0, #8
 8001caa:	4770      	bx	lr

08001cac <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001cac:	2001      	movs	r0, #1
 8001cae:	4770      	bx	lr

08001cb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001cb0:	f242 2090 	movw	r0, #8848	@ 0x2290
 8001cb4:	4770      	bx	lr

08001cb6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001cb6:	f242 2390 	movw	r3, #8848	@ 0x2290
 8001cba:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001cbe:	3008      	adds	r0, #8
 8001cc0:	4770      	bx	lr

08001cc2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001cc2:	f242 2390 	movw	r3, #8848	@ 0x2290
 8001cc6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001cca:	3008      	adds	r0, #8
 8001ccc:	4770      	bx	lr

08001cce <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001cce:	2001      	movs	r0, #1
 8001cd0:	4770      	bx	lr

08001cd2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001cd2:	2010      	movs	r0, #16
 8001cd4:	4770      	bx	lr

08001cd6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001cd6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001cda:	3008      	adds	r0, #8
 8001cdc:	4770      	bx	lr

08001cde <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001cde:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001ce2:	3008      	adds	r0, #8
 8001ce4:	4770      	bx	lr

08001ce6 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainScreenNoTransition();
 8001ce6:	4608      	mov	r0, r1
 8001ce8:	f000 bbb4 	b.w	8002454 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>

08001cec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001cec:	4b03      	ldr	r3, [pc, #12]	@ (8001cfc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001cee:	b510      	push	{r4, lr}
 8001cf0:	4604      	mov	r4, r0
 8001cf2:	6003      	str	r3, [r0, #0]
 8001cf4:	f007 fe8d 	bl	8009a12 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001cf8:	4620      	mov	r0, r4
 8001cfa:	bd10      	pop	{r4, pc}
 8001cfc:	08023138 	.word	0x08023138

08001d00 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001d00:	b510      	push	{r4, lr}
 8001d02:	4604      	mov	r4, r0
 8001d04:	f7ff fff2 	bl	8001cec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d08:	2114      	movs	r1, #20
 8001d0a:	4620      	mov	r0, r4
 8001d0c:	f01f f8f8 	bl	8020f00 <_ZdlPvj>
 8001d10:	4620      	mov	r0, r4
 8001d12:	bd10      	pop	{r4, pc}

08001d14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001d14:	4b03      	ldr	r3, [pc, #12]	@ (8001d24 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001d16:	b510      	push	{r4, lr}
 8001d18:	4604      	mov	r4, r0
 8001d1a:	6003      	str	r3, [r0, #0]
 8001d1c:	f007 fe79 	bl	8009a12 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001d20:	4620      	mov	r0, r4
 8001d22:	bd10      	pop	{r4, pc}
 8001d24:	08023104 	.word	0x08023104

08001d28 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001d28:	b510      	push	{r4, lr}
 8001d2a:	4604      	mov	r4, r0
 8001d2c:	f7ff fff2 	bl	8001d14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d30:	f242 2198 	movw	r1, #8856	@ 0x2298
 8001d34:	4620      	mov	r0, r4
 8001d36:	f01f f8e3 	bl	8020f00 <_ZdlPvj>
 8001d3a:	4620      	mov	r0, r4
 8001d3c:	bd10      	pop	{r4, pc}
	...

08001d40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001d40:	4b03      	ldr	r3, [pc, #12]	@ (8001d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001d42:	b510      	push	{r4, lr}
 8001d44:	4604      	mov	r4, r0
 8001d46:	6003      	str	r3, [r0, #0]
 8001d48:	f007 fe63 	bl	8009a12 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001d4c:	4620      	mov	r0, r4
 8001d4e:	bd10      	pop	{r4, pc}
 8001d50:	080230d0 	.word	0x080230d0

08001d54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001d54:	b510      	push	{r4, lr}
 8001d56:	4604      	mov	r4, r0
 8001d58:	f7ff fff2 	bl	8001d40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d5c:	2118      	movs	r1, #24
 8001d5e:	4620      	mov	r0, r4
 8001d60:	f01f f8ce 	bl	8020f00 <_ZdlPvj>
 8001d64:	4620      	mov	r0, r4
 8001d66:	bd10      	pop	{r4, pc}

08001d68 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001d68:	4b09      	ldr	r3, [pc, #36]	@ (8001d90 <_ZN12FrontendHeapD1Ev+0x28>)
 8001d6a:	b510      	push	{r4, lr}
 8001d6c:	4604      	mov	r4, r0
 8001d6e:	6003      	str	r3, [r0, #0]
 8001d70:	f500 500b 	add.w	r0, r0, #8896	@ 0x22c0
 8001d74:	3004      	adds	r0, #4
 8001d76:	f7ff ffb9 	bl	8001cec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d7a:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001d7e:	f7ff ffc9 	bl	8001d14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d82:	f104 0014 	add.w	r0, r4, #20
 8001d86:	f7ff ffdb 	bl	8001d40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d8a:	4620      	mov	r0, r4
 8001d8c:	bd10      	pop	{r4, pc}
 8001d8e:	bf00      	nop
 8001d90:	0802316c 	.word	0x0802316c

08001d94 <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001d94:	b508      	push	{r3, lr}
 8001d96:	4802      	ldr	r0, [pc, #8]	@ (8001da0 <__tcf_0+0xc>)
 8001d98:	f7ff ffe6 	bl	8001d68 <_ZN12FrontendHeapD1Ev>
 8001d9c:	bd08      	pop	{r3, pc}
 8001d9e:	bf00      	nop
 8001da0:	200012fc 	.word	0x200012fc

08001da4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001da4:	b510      	push	{r4, lr}
 8001da6:	4604      	mov	r4, r0
 8001da8:	f7ff ffde 	bl	8001d68 <_ZN12FrontendHeapD1Ev>
 8001dac:	f242 4138 	movw	r1, #9272	@ 0x2438
 8001db0:	4620      	mov	r0, r4
 8001db2:	f01f f8a5 	bl	8020f00 <_ZdlPvj>
 8001db6:	4620      	mov	r0, r4
 8001db8:	bd10      	pop	{r4, pc}
	...

08001dbc <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
 8001dbc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001dc0:	f000 f9c2 	bl	8002148 <_ZN14BitmapDatabase11getInstanceEv>
 8001dc4:	2400      	movs	r4, #0
 8001dc6:	4605      	mov	r5, r0
 8001dc8:	f000 f9c2 	bl	8002150 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001dcc:	4623      	mov	r3, r4
 8001dce:	4601      	mov	r1, r0
 8001dd0:	4622      	mov	r2, r4
 8001dd2:	4628      	mov	r0, r5
 8001dd4:	9400      	str	r4, [sp, #0]
 8001dd6:	f011 f91b 	bl	8013010 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001dda:	4b26      	ldr	r3, [pc, #152]	@ (8001e74 <touchgfx_init+0xb8>)
 8001ddc:	4a26      	ldr	r2, [pc, #152]	@ (8001e78 <touchgfx_init+0xbc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001dde:	4620      	mov	r0, r4
        static FrontendHeap instance;
 8001de0:	4d26      	ldr	r5, [pc, #152]	@ (8001e7c <touchgfx_init+0xc0>)
 8001de2:	601a      	str	r2, [r3, #0]
 8001de4:	f001 fcf4 	bl	80037d0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001de8:	4825      	ldr	r0, [pc, #148]	@ (8001e80 <touchgfx_init+0xc4>)
 8001dea:	f011 f879 	bl	8012ee0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001dee:	682b      	ldr	r3, [r5, #0]
 8001df0:	f3bf 8f5b 	dmb	ish
 8001df4:	07db      	lsls	r3, r3, #31
 8001df6:	d436      	bmi.n	8001e66 <touchgfx_init+0xaa>
 8001df8:	4628      	mov	r0, r5
 8001dfa:	f01f f883 	bl	8020f04 <__cxa_guard_acquire>
 8001dfe:	b390      	cbz	r0, 8001e66 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001e00:	4c20      	ldr	r4, [pc, #128]	@ (8001e84 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
 8001e02:	4f21      	ldr	r7, [pc, #132]	@ (8001e88 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
        app(model, *this)
 8001e04:	4b21      	ldr	r3, [pc, #132]	@ (8001e8c <touchgfx_init+0xd0>)
        : presenterStorage(pres),
 8001e06:	f104 0014 	add.w	r0, r4, #20
          frontendApplication(app)
 8001e0a:	f107 0618 	add.w	r6, r7, #24
          screenStorage(scr),
 8001e0e:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
 8001e12:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 8001e14:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001e16:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001e1a:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001e1c:	6126      	str	r6, [r4, #16]
 8001e1e:	f007 fdf9 	bl	8009a14 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001e22:	4b1b      	ldr	r3, [pc, #108]	@ (8001e90 <touchgfx_init+0xd4>)
 8001e24:	4640      	mov	r0, r8
 8001e26:	6163      	str	r3, [r4, #20]
 8001e28:	f007 fdf4 	bl	8009a14 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001e2c:	4b19      	ldr	r3, [pc, #100]	@ (8001e94 <touchgfx_init+0xd8>)
 8001e2e:	4638      	mov	r0, r7
 8001e30:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001e32:	f007 fdef 	bl	8009a14 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001e36:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 8001e3a:	4a17      	ldr	r2, [pc, #92]	@ (8001e98 <touchgfx_init+0xdc>)
 8001e3c:	f503 7036 	add.w	r0, r3, #728	@ 0x2d8
 8001e40:	f8c3 22c4 	str.w	r2, [r3, #708]	@ 0x2c4
 8001e44:	f001 fe6c 	bl	8003b20 <_ZN5ModelC1Ev>
 8001e48:	4622      	mov	r2, r4
 8001e4a:	f107 0114 	add.w	r1, r7, #20
 8001e4e:	4630      	mov	r0, r6
 8001e50:	f001 fd2e 	bl	80038b0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001e54:	4630      	mov	r0, r6
 8001e56:	f000 fafd 	bl	8002454 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
        static FrontendHeap instance;
 8001e5a:	4810      	ldr	r0, [pc, #64]	@ (8001e9c <touchgfx_init+0xe0>)
 8001e5c:	f01f fdd8 	bl	8021a10 <atexit>
 8001e60:	4628      	mov	r0, r5
 8001e62:	f01f f85b 	bl	8020f1c <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001e66:	480e      	ldr	r0, [pc, #56]	@ (8001ea0 <touchgfx_init+0xe4>)
}
 8001e68:	b002      	add	sp, #8
 8001e6a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001e6e:	f7ff bbff 	b.w	8001670 <_ZN11TouchGFXHAL10initializeEv>
 8001e72:	bf00      	nop
 8001e74:	20016bd8 	.word	0x20016bd8
 8001e78:	200004c8 	.word	0x200004c8
 8001e7c:	200012f8 	.word	0x200012f8
 8001e80:	20000008 	.word	0x20000008
 8001e84:	200012fc 	.word	0x200012fc
 8001e88:	200035c0 	.word	0x200035c0
 8001e8c:	0802316c 	.word	0x0802316c
 8001e90:	080230d0 	.word	0x080230d0
 8001e94:	08023104 	.word	0x08023104
 8001e98:	08023138 	.word	0x08023138
 8001e9c:	08001d95 	.word	0x08001d95
 8001ea0:	2000044c 	.word	0x2000044c

08001ea4 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001ea4:	4770      	bx	lr
	...

08001ea8 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001ea8:	4801      	ldr	r0, [pc, #4]	@ (8001eb0 <touchgfx_taskEntry+0x8>)
 8001eaa:	f008 bb9a 	b.w	800a5e2 <_ZN8touchgfx3HAL9taskEntryEv>
 8001eae:	bf00      	nop
 8001eb0:	2000044c 	.word	0x2000044c

08001eb4 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001eb4:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001eb6:	4e22      	ldr	r6, [pc, #136]	@ (8001f40 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001eb8:	4b22      	ldr	r3, [pc, #136]	@ (8001f44 <_GLOBAL__sub_I_touchgfx_init+0x90>)
 8001eba:	4c23      	ldr	r4, [pc, #140]	@ (8001f48 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001ebc:	4630      	mov	r0, r6
static LCD16bpp display;
 8001ebe:	4d23      	ldr	r5, [pc, #140]	@ (8001f4c <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001ec0:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001ec2:	f7ff fe97 	bl	8001bf4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001ec6:	4628      	mov	r0, r5
 8001ec8:	f015 fb7c 	bl	80175c4 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8001ecc:	4b20      	ldr	r3, [pc, #128]	@ (8001f50 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
          mcuInstrumentation(0),
 8001ece:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001ed0:	f44f 7180 	mov.w	r1, #256	@ 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001ed4:	481f      	ldr	r0, [pc, #124]	@ (8001f54 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001ed6:	861a      	strh	r2, [r3, #48]	@ 0x30
          useAuxiliaryLCD(false),
 8001ed8:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
 8001edc:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 8001ede:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 8001ee2:	675a      	str	r2, [r3, #116]	@ 0x74
          touchController(touchCtrl),
 8001ee4:	60dc      	str	r4, [r3, #12]
          auxiliaryLCD(0),
 8001ee6:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001eea:	491b      	ldr	r1, [pc, #108]	@ (8001f58 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          vSyncCompensationEnabled(false),
 8001eec:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001ef0:	491a      	ldr	r1, [pc, #104]	@ (8001f5c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001ef2:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 8001ef4:	491a      	ldr	r1, [pc, #104]	@ (8001f60 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8001ef6:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001ef8:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8001efc:	8001      	strh	r1, [r0, #0]
 8001efe:	4819      	ldr	r0, [pc, #100]	@ (8001f64 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 8001f00:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001f02:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8001f06:	4818      	ldr	r0, [pc, #96]	@ (8001f68 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          buttonController(0),
 8001f08:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001f0c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001f10:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001f14:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8001f18:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8001f1c:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001f20:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 8001f24:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lcdRef(display),
 8001f28:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001f2c:	8001      	strh	r1, [r0, #0]
 8001f2e:	480f      	ldr	r0, [pc, #60]	@ (8001f6c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001f30:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001f34:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001f36:	490e      	ldr	r1, [pc, #56]	@ (8001f70 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001f38:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001f3a:	4a0e      	ldr	r2, [pc, #56]	@ (8001f74 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001f3c:	601a      	str	r2, [r3, #0]
}
 8001f3e:	bd70      	pop	{r4, r5, r6, pc}
 8001f40:	20000554 	.word	0x20000554
 8001f44:	08022b9c 	.word	0x08022b9c
 8001f48:	200012f4 	.word	0x200012f4
 8001f4c:	200004cc 	.word	0x200004cc
 8001f50:	2000044c 	.word	0x2000044c
 8001f54:	20016b68 	.word	0x20016b68
 8001f58:	01000001 	.word	0x01000001
 8001f5c:	01010000 	.word	0x01010000
 8001f60:	20016b74 	.word	0x20016b74
 8001f64:	20016b6e 	.word	0x20016b6e
 8001f68:	20016b6a 	.word	0x20016b6a
 8001f6c:	20016b70 	.word	0x20016b70
 8001f70:	20016b6c 	.word	0x20016b6c
 8001f74:	08022d28 	.word	0x08022d28

08001f78 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001f78:	4801      	ldr	r0, [pc, #4]	@ (8001f80 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001f7a:	f7ff bcf3 	b.w	8001964 <_ZN8STM32DMAD1Ev>
 8001f7e:	bf00      	nop
 8001f80:	20000554 	.word	0x20000554

08001f84 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001f84:	4b03      	ldr	r3, [pc, #12]	@ (8001f94 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001f86:	2290      	movs	r2, #144	@ 0x90
 8001f88:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8001f8c:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001f90:	4770      	bx	lr
 8001f92:	bf00      	nop
 8001f94:	e000e100 	.word	0xe000e100

08001f98 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001f98:	4a09      	ldr	r2, [pc, #36]	@ (8001fc0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001f9a:	490a      	ldr	r1, [pc, #40]	@ (8001fc4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001f9c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001f9e:	480a      	ldr	r0, [pc, #40]	@ (8001fc8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001fa0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001fa4:	3b01      	subs	r3, #1
 8001fa6:	b29b      	uxth	r3, r3
 8001fa8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001faa:	6911      	ldr	r1, [r2, #16]
 8001fac:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001fb0:	3901      	subs	r1, #1
 8001fb2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001fb4:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001fb6:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001fb8:	f043 0301 	orr.w	r3, r3, #1
 8001fbc:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001fbe:	4770      	bx	lr
 8001fc0:	40016800 	.word	0x40016800
 8001fc4:	20003736 	.word	0x20003736
 8001fc8:	20003734 	.word	0x20003734

08001fcc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001fcc:	4b01      	ldr	r3, [pc, #4]	@ (8001fd4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001fce:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8001fd2:	4770      	bx	lr
 8001fd4:	40016800 	.word	0x40016800

08001fd8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001fd8:	4b02      	ldr	r3, [pc, #8]	@ (8001fe4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001fda:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001fdc:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001fe0:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001fe2:	4770      	bx	lr
 8001fe4:	40016800 	.word	0x40016800

08001fe8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8001fe8:	4a12      	ldr	r2, [pc, #72]	@ (8002034 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x4c>)
 8001fea:	6953      	ldr	r3, [r2, #20]
 8001fec:	03db      	lsls	r3, r3, #15
{
 8001fee:	b570      	push	{r4, r5, r6, lr}
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8001ff0:	d51e      	bpl.n	8002030 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8001ff2:	2300      	movs	r3, #0
 8001ff4:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001ff8:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 8001ffc:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002000:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8002004:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8002008:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800200c:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800200e:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8002012:	4601      	mov	r1, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002014:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
 8002018:	3901      	subs	r1, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800201a:	f8c2 5274 	str.w	r5, [r2, #628]	@ 0x274
      } while (ways-- != 0U);
 800201e:	d2f9      	bcs.n	8002014 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>
    } while(sets-- != 0U);
 8002020:	3b20      	subs	r3, #32
 8002022:	f113 0f20 	cmn.w	r3, #32
 8002026:	d1f2      	bne.n	800200e <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x26>
 8002028:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800202c:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
 8002030:	bd70      	pop	{r4, r5, r6, pc}
 8002032:	bf00      	nop
 8002034:	e000ed00 	.word	0xe000ed00

08002038 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002038:	b570      	push	{r4, r5, r6, lr}
 800203a:	4604      	mov	r4, r0
    HAL::initialize();
 800203c:	f008 fabd 	bl	800a5ba <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002040:	6823      	ldr	r3, [r4, #0]
 8002042:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 8002044:	f00d fee4 	bl	800fe10 <_ZN8touchgfx11Application11getInstanceEv>
 8002048:	4601      	mov	r1, r0
 800204a:	4620      	mov	r0, r4
 800204c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800204e:	6823      	ldr	r3, [r4, #0]
 8002050:	4a05      	ldr	r2, [pc, #20]	@ (8002068 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002052:	4620      	mov	r0, r4
 8002054:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 8002058:	2300      	movs	r3, #0
 800205a:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
 800205e:	46ac      	mov	ip, r5
}
 8002060:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002064:	4760      	bx	ip
 8002066:	bf00      	nop
 8002068:	c007f800 	.word	0xc007f800

0800206c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 800206c:	f008 ba8c 	b.w	800a588 <_ZN8touchgfx3HAL10beginFrameEv>

08002070 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002070:	f008 ba96 	b.w	800a5a0 <_ZN8touchgfx3HAL8endFrameEv>

08002074 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
    HAL::flushFrameBuffer(rect);
 8002074:	f008 ba51 	b.w	800a51a <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002078 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
    return HAL::blockCopy(dest, src, numBytes);
 8002078:	f008 bbc1 	b.w	800a7fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800207c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800207c:	4b03      	ldr	r3, [pc, #12]	@ (800208c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800207e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8002082:	609a      	str	r2, [r3, #8]
 8002084:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002088:	609a      	str	r2, [r3, #8]
}
 800208a:	4770      	bx	lr
 800208c:	e000e100 	.word	0xe000e100

08002090 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002090:	4b08      	ldr	r3, [pc, #32]	@ (80020b4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8002092:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8002096:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800209a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800209e:	f3bf 8f6f 	isb	sy
 80020a2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80020a6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80020aa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80020ae:	f3bf 8f6f 	isb	sy
}
 80020b2:	4770      	bx	lr
 80020b4:	e000e100 	.word	0xe000e100

080020b8 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80020b8:	b510      	push	{r4, lr}
        return instance;
 80020ba:	4c14      	ldr	r4, [pc, #80]	@ (800210c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80020bc:	6823      	ldr	r3, [r4, #0]
 80020be:	b323      	cbz	r3, 800210a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80020c0:	4b13      	ldr	r3, [pc, #76]	@ (8002110 <HAL_LTDC_LineEventCallback+0x58>)
 80020c2:	4a14      	ldr	r2, [pc, #80]	@ (8002114 <HAL_LTDC_LineEventCallback+0x5c>)
 80020c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020c6:	8811      	ldrh	r1, [r2, #0]
 80020c8:	428b      	cmp	r3, r1
 80020ca:	d113      	bne.n	80020f4 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80020cc:	4b12      	ldr	r3, [pc, #72]	@ (8002118 <HAL_LTDC_LineEventCallback+0x60>)
 80020ce:	8819      	ldrh	r1, [r3, #0]
 80020d0:	f003 f950 	bl	8005374 <HAL_LTDC_ProgramLineEvent>
 80020d4:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80020d6:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 80020da:	3301      	adds	r3, #1
 80020dc:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80020e0:	f7ff fbf0 	bl	80018c4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80020e4:	6820      	ldr	r0, [r4, #0]
 80020e6:	f008 ffb5 	bl	800b054 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 80020ea:	2000      	movs	r0, #0

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80020ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80020f0:	f7ff b9ee 	b.w	80014d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80020f4:	f003 f93e 	bl	8005374 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80020f8:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80020fa:	6803      	ldr	r3, [r0, #0]
 80020fc:	6a1b      	ldr	r3, [r3, #32]
 80020fe:	4798      	blx	r3
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002100:	2000      	movs	r0, #0
    }
 8002102:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002106:	f7ff ba13 	b.w	8001530 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800210a:	bd10      	pop	{r4, pc}
 800210c:	20016b74 	.word	0x20016b74
 8002110:	40016800 	.word	0x40016800
 8002114:	20003736 	.word	0x20003736
 8002118:	20003734 	.word	0x20003734

0800211c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LABELS = 0;             // NotoSans_Regular_12_4bpp
    static const touchgfx::FontId T___SINGLEUSE_JOGG = 1; // verdana_25_4bpp
    static const uint16_t NUMBER_OF_FONTS = 2;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800211c:	4770      	bx	lr

0800211e <_ZN23ApplicationFontProviderD0Ev>:
 800211e:	b510      	push	{r4, lr}
 8002120:	4604      	mov	r4, r0
 8002122:	2104      	movs	r1, #4
 8002124:	f01e feec 	bl	8020f00 <_ZdlPvj>
 8002128:	4620      	mov	r0, r4
 800212a:	bd10      	pop	{r4, pc}

0800212c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800212c:	b508      	push	{r3, lr}
    switch (typography)
 800212e:	b119      	cbz	r1, 8002138 <_ZN23ApplicationFontProvider7getFontEt+0xc>
 8002130:	2901      	cmp	r1, #1
 8002132:	d005      	beq.n	8002140 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002134:	2000      	movs	r0, #0
        // verdana_25_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
    default:
        return 0;
    }
}
 8002136:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002138:	f001 fb96 	bl	8003868 <_ZN17TypedTextDatabase8getFontsEv>
 800213c:	6800      	ldr	r0, [r0, #0]
 800213e:	e7fa      	b.n	8002136 <_ZN23ApplicationFontProvider7getFontEt+0xa>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002140:	f001 fb92 	bl	8003868 <_ZN17TypedTextDatabase8getFontsEv>
 8002144:	6840      	ldr	r0, [r0, #4]
 8002146:	e7f6      	b.n	8002136 <_ZN23ApplicationFontProvider7getFontEt+0xa>

08002148 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002148:	4800      	ldr	r0, [pc, #0]	@ (800214c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800214a:	4770      	bx	lr
 800214c:	0802318c 	.word	0x0802318c

08002150 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002150:	2006      	movs	r0, #6
 8002152:	4770      	bx	lr

08002154 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002154:	b513      	push	{r0, r1, r4, lr}
 8002156:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002158:	b151      	cbz	r1, 8002170 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800215a:	6803      	ldr	r3, [r0, #0]
 800215c:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
 800215e:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002160:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002164:	689c      	ldr	r4, [r3, #8]
 8002166:	f10d 0303 	add.w	r3, sp, #3
 800216a:	47a0      	blx	r4
        return glyph;
    }
 800216c:	b002      	add	sp, #8
 800216e:	bd10      	pop	{r4, pc}
            return 0;
 8002170:	4608      	mov	r0, r1
 8002172:	e7fb      	b.n	800216c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002174 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002174:	89c0      	ldrh	r0, [r0, #14]
 8002176:	4770      	bx	lr

08002178 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002178:	8a00      	ldrh	r0, [r0, #16]
 800217a:	4770      	bx	lr

0800217c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800217c:	88c0      	ldrh	r0, [r0, #6]
 800217e:	4770      	bx	lr

08002180 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002180:	8880      	ldrh	r0, [r0, #4]
 8002182:	4770      	bx	lr

08002184 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002184:	7a80      	ldrb	r0, [r0, #10]
    }
 8002186:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 800218a:	4770      	bx	lr

0800218c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800218c:	7a80      	ldrb	r0, [r0, #10]
    }
 800218e:	09c0      	lsrs	r0, r0, #7
 8002190:	4770      	bx	lr

08002192 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002192:	2000      	movs	r0, #0
 8002194:	4770      	bx	lr
	...

08002198 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002198:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80021a0 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 800219c:	4770      	bx	lr
 800219e:	bf00      	nop
 80021a0:	00000000 	.word	0x00000000

080021a4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80021a4:	4770      	bx	lr

080021a6 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80021a6:	b510      	push	{r4, lr}
 80021a8:	4604      	mov	r4, r0
    }
 80021aa:	2108      	movs	r1, #8
 80021ac:	f01e fea8 	bl	8020f00 <_ZdlPvj>
 80021b0:	4620      	mov	r0, r4
 80021b2:	bd10      	pop	{r4, pc}

080021b4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80021b4:	4770      	bx	lr

080021b6 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80021b6:	4770      	bx	lr

080021b8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80021b8:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 80021bc:	6808      	ldr	r0, [r1, #0]
 80021be:	6849      	ldr	r1, [r1, #4]
 80021c0:	c303      	stmia	r3!, {r0, r1}
    }
 80021c2:	4770      	bx	lr

080021c4 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80021c4:	4770      	bx	lr

080021c6 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80021c6:	4770      	bx	lr

080021c8 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80021c8:	6041      	str	r1, [r0, #4]
    }
 80021ca:	4770      	bx	lr

080021cc <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80021cc:	4770      	bx	lr
	...

080021d0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80021d0:	4b06      	ldr	r3, [pc, #24]	@ (80021ec <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80021d2:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80021d6:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80021da:	2300      	movs	r3, #0
 80021dc:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80021e0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80021e4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoMainScreenNoTransition();
    }
 80021e8:	4770      	bx	lr
 80021ea:	bf00      	nop
 80021ec:	08002291 	.word	0x08002291

080021f0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80021f0:	2301      	movs	r3, #1
 80021f2:	7203      	strb	r3, [r0, #8]
    }
 80021f4:	4770      	bx	lr

080021f6 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80021f6:	4770      	bx	lr

080021f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80021f8:	4770      	bx	lr

080021fa <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80021fa:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80021fc:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
 80021fe:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002200:	68c2      	ldr	r2, [r0, #12]
 8002202:	689b      	ldr	r3, [r3, #8]
 8002204:	1054      	asrs	r4, r2, #1
 8002206:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800220a:	07d2      	lsls	r2, r2, #31
 800220c:	bf48      	it	mi
 800220e:	590a      	ldrmi	r2, [r1, r4]
    }
 8002210:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002214:	bf48      	it	mi
 8002216:	58d3      	ldrmi	r3, [r2, r3]
 8002218:	4718      	bx	r3

0800221a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800221a:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 800221c:	6840      	ldr	r0, [r0, #4]
 800221e:	b130      	cbz	r0, 800222e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002220:	689a      	ldr	r2, [r3, #8]
 8002222:	b91a      	cbnz	r2, 800222c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002224:	68d8      	ldr	r0, [r3, #12]
 8002226:	f000 0001 	and.w	r0, r0, #1
 800222a:	4770      	bx	lr
 800222c:	2001      	movs	r0, #1
    }
 800222e:	4770      	bx	lr

08002230 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002230:	b510      	push	{r4, lr}
 8002232:	4604      	mov	r4, r0
 8002234:	210c      	movs	r1, #12
 8002236:	f01e fe63 	bl	8020f00 <_ZdlPvj>
 800223a:	4620      	mov	r0, r4
 800223c:	bd10      	pop	{r4, pc}

0800223e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800223e:	b510      	push	{r4, lr}
 8002240:	4604      	mov	r4, r0
 8002242:	2110      	movs	r1, #16
 8002244:	f01e fe5c 	bl	8020f00 <_ZdlPvj>
 8002248:	4620      	mov	r0, r4
 800224a:	bd10      	pop	{r4, pc}

0800224c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800224c:	b510      	push	{r4, lr}
 800224e:	4604      	mov	r4, r0
 8002250:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002254:	f01e fe54 	bl	8020f00 <_ZdlPvj>
 8002258:	4620      	mov	r0, r4
 800225a:	bd10      	pop	{r4, pc}

0800225c <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800225c:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 800225e:	f00d fdd7 	bl	800fe10 <_ZN8touchgfx11Application11getInstanceEv>
 8002262:	6803      	ldr	r3, [r0, #0]
    }
 8002264:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002268:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800226a:	4718      	bx	r3

0800226c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800226c:	b510      	push	{r4, lr}
 800226e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002270:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002274:	b158      	cbz	r0, 800228e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002276:	6803      	ldr	r3, [r0, #0]
 8002278:	68db      	ldr	r3, [r3, #12]
 800227a:	4798      	blx	r3
 800227c:	b138      	cbz	r0, 800228e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800227e:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8002282:	6803      	ldr	r3, [r0, #0]
 8002284:	689b      	ldr	r3, [r3, #8]
 8002286:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002288:	2300      	movs	r3, #0
 800228a:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 800228e:	bd10      	pop	{r4, pc}

08002290 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
 8002290:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002294:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002298:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800229a:	68b0      	ldr	r0, [r6, #8]
 800229c:	6803      	ldr	r3, [r0, #0]
 800229e:	6a1b      	ldr	r3, [r3, #32]
 80022a0:	4798      	blx	r3
 80022a2:	f242 238f 	movw	r3, #8847	@ 0x228f
 80022a6:	4298      	cmp	r0, r3
 80022a8:	d805      	bhi.n	80022b6 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x26>
 80022aa:	4b44      	ldr	r3, [pc, #272]	@ (80023bc <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
 80022ac:	21a3      	movs	r1, #163	@ 0xa3
 80022ae:	4a44      	ldr	r2, [pc, #272]	@ (80023c0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80022b0:	4844      	ldr	r0, [pc, #272]	@ (80023c4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x134>)
 80022b2:	f01f fb8f 	bl	80219d4 <__assert_func>
 80022b6:	6870      	ldr	r0, [r6, #4]
 80022b8:	6803      	ldr	r3, [r0, #0]
 80022ba:	6a1b      	ldr	r3, [r3, #32]
 80022bc:	4798      	blx	r3
 80022be:	280f      	cmp	r0, #15
 80022c0:	d803      	bhi.n	80022ca <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x3a>
 80022c2:	4b41      	ldr	r3, [pc, #260]	@ (80023c8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>)
 80022c4:	21a4      	movs	r1, #164	@ 0xa4
 80022c6:	4a3e      	ldr	r2, [pc, #248]	@ (80023c0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
 80022c8:	e7f2      	b.n	80022b0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80022ca:	68f0      	ldr	r0, [r6, #12]
 80022cc:	6803      	ldr	r3, [r0, #0]
 80022ce:	6a1b      	ldr	r3, [r3, #32]
 80022d0:	4798      	blx	r3
 80022d2:	280b      	cmp	r0, #11
 80022d4:	d803      	bhi.n	80022de <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x4e>
 80022d6:	4b3d      	ldr	r3, [pc, #244]	@ (80023cc <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x13c>)
 80022d8:	21a5      	movs	r1, #165	@ 0xa5
 80022da:	4a39      	ldr	r2, [pc, #228]	@ (80023c0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
 80022dc:	e7e8      	b.n	80022b0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x20>
    if (*currentTrans)
 80022de:	f8df 90f4 	ldr.w	r9, [pc, #244]	@ 80023d4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 80022e2:	f00d fd95 	bl	800fe10 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80022e6:	3004      	adds	r0, #4
 80022e8:	f00d fdb7 	bl	800fe5a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 80022ec:	f8d9 0000 	ldr.w	r0, [r9]
 80022f0:	b110      	cbz	r0, 80022f8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80022f2:	6803      	ldr	r3, [r0, #0]
 80022f4:	68db      	ldr	r3, [r3, #12]
 80022f6:	4798      	blx	r3
    if (*currentTrans)
 80022f8:	f8d9 0000 	ldr.w	r0, [r9]
 80022fc:	b110      	cbz	r0, 8002304 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80022fe:	6803      	ldr	r3, [r0, #0]
 8002300:	681b      	ldr	r3, [r3, #0]
 8002302:	4798      	blx	r3
    if (*currentScreen)
 8002304:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80023d8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x148>
 8002308:	f8d8 0000 	ldr.w	r0, [r8]
 800230c:	b110      	cbz	r0, 8002314 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800230e:	6803      	ldr	r3, [r0, #0]
 8002310:	695b      	ldr	r3, [r3, #20]
 8002312:	4798      	blx	r3
    if (*currentPresenter)
 8002314:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002318:	b110      	cbz	r0, 8002320 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800231a:	6803      	ldr	r3, [r0, #0]
 800231c:	685b      	ldr	r3, [r3, #4]
 800231e:	4798      	blx	r3
    if (*currentScreen)
 8002320:	f8d8 0000 	ldr.w	r0, [r8]
 8002324:	b110      	cbz	r0, 800232c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002326:	6803      	ldr	r3, [r0, #0]
 8002328:	681b      	ldr	r3, [r3, #0]
 800232a:	4798      	blx	r3
    if (*currentPresenter)
 800232c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002330:	b110      	cbz	r0, 8002338 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002332:	6803      	ldr	r3, [r0, #0]
 8002334:	689b      	ldr	r3, [r3, #8]
 8002336:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002338:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800233a:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
 800233c:	f04f 0b00 	mov.w	fp, #0
 8002340:	6803      	ldr	r3, [r0, #0]
 8002342:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002344:	4798      	blx	r3
 8002346:	4b22      	ldr	r3, [pc, #136]	@ (80023d0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x140>)
 8002348:	4604      	mov	r4, r0
 800234a:	f8c0 b004 	str.w	fp, [r0, #4]
 800234e:	f880 b008 	strb.w	fp, [r0, #8]
 8002352:	4659      	mov	r1, fp
 8002354:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002356:	68b0      	ldr	r0, [r6, #8]
 8002358:	6803      	ldr	r3, [r0, #0]
 800235a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800235c:	4798      	blx	r3
 800235e:	4605      	mov	r5, r0
 8002360:	f001 fb90 	bl	8003a84 <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002364:	6870      	ldr	r0, [r6, #4]
 8002366:	4659      	mov	r1, fp
 8002368:	6803      	ldr	r3, [r0, #0]
 800236a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800236c:	4798      	blx	r3
 800236e:	4606      	mov	r6, r0
 8002370:	4629      	mov	r1, r5
 8002372:	f001 fafd 	bl	8003970 <_ZN13MainPresenterC1ER8MainView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002376:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002378:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 800237c:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 800237e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002382:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002386:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800238a:	682b      	ldr	r3, [r5, #0]

    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800238c:	f8c6 a008 	str.w	sl, [r6, #8]
 8002390:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002392:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002394:	4798      	blx	r3
    newPresenter->activate();
 8002396:	6833      	ldr	r3, [r6, #0]
 8002398:	4630      	mov	r0, r6
 800239a:	681b      	ldr	r3, [r3, #0]
 800239c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800239e:	4621      	mov	r1, r4
 80023a0:	4628      	mov	r0, r5
 80023a2:	f00f facf 	bl	8011944 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80023a6:	6823      	ldr	r3, [r4, #0]
 80023a8:	4620      	mov	r0, r4
 80023aa:	691b      	ldr	r3, [r3, #16]
 80023ac:	4798      	blx	r3
    newTransition->invalidate();
 80023ae:	6823      	ldr	r3, [r4, #0]
 80023b0:	4620      	mov	r0, r4
 80023b2:	695b      	ldr	r3, [r3, #20]
}
 80023b4:	b001      	add	sp, #4
 80023b6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023ba:	4718      	bx	r3
 80023bc:	08023214 	.word	0x08023214
 80023c0:	080232a2 	.word	0x080232a2
 80023c4:	0802336e 	.word	0x0802336e
 80023c8:	080233b5 	.word	0x080233b5
 80023cc:	08023458 	.word	0x08023458
 80023d0:	08023570 	.word	0x08023570
 80023d4:	20016bbc 	.word	0x20016bbc
 80023d8:	20016bb8 	.word	0x20016bb8

080023dc <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80023dc:	4b04      	ldr	r3, [pc, #16]	@ (80023f0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80023de:	681b      	ldr	r3, [r3, #0]
 80023e0:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80023e4:	b10a      	cbz	r2, 80023ea <_ZN8touchgfx3HAL3lcdEv+0xe>
 80023e6:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80023e8:	b900      	cbnz	r0, 80023ec <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80023ea:	6898      	ldr	r0, [r3, #8]
    }
 80023ec:	4770      	bx	lr
 80023ee:	bf00      	nop
 80023f0:	20016b74 	.word	0x20016b74

080023f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80023f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80023f6:	4604      	mov	r4, r0
 80023f8:	4617      	mov	r7, r2
 80023fa:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80023fc:	f00d fdce 	bl	800ff9c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002400:	4b10      	ldr	r3, [pc, #64]	@ (8002444 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
 8002402:	2500      	movs	r5, #0
        instance = this;
 8002404:	601c      	str	r4, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002406:	4629      	mov	r1, r5
      model(m)
 8002408:	4b0f      	ldr	r3, [pc, #60]	@ (8002448 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800240a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 800240c:	4b0f      	ldr	r3, [pc, #60]	@ (800244c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 800240e:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 8002412:	4b0f      	ldr	r3, [pc, #60]	@ (8002450 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002414:	6818      	ldr	r0, [r3, #0]
 8002416:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800241a:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 800241c:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
 8002420:	689b      	ldr	r3, [r3, #8]
      model(m)
 8002422:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002426:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002428:	4628      	mov	r0, r5
 800242a:	f001 f9d1 	bl	80037d0 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800242e:	f7ff ffd5 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 8002432:	f016 fef8 	bl	8019226 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002436:	f7ff ffd1 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800243a:	f016 ff6f 	bl	801931c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800243e:	4620      	mov	r0, r4
 8002440:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002442:	bf00      	nop
 8002444:	20016bc8 	.word	0x20016bc8
 8002448:	0802351c 	.word	0x0802351c
 800244c:	08023504 	.word	0x08023504
 8002450:	20016b74 	.word	0x20016b74

08002454 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002454:	4b06      	ldr	r3, [pc, #24]	@ (8002470 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x1c>)
 8002456:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800245a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800245e:	2300      	movs	r3, #0
 8002460:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002464:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002468:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 800246c:	4770      	bx	lr
 800246e:	bf00      	nop
 8002470:	08002291 	.word	0x08002291

08002474 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002474:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002476:	4770      	bx	lr

08002478 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002478:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800247a:	4770      	bx	lr

0800247c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800247c:	4770      	bx	lr

0800247e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800247e:	888b      	ldrh	r3, [r1, #4]
 8002480:	69c0      	ldr	r0, [r0, #28]
 8002482:	0adb      	lsrs	r3, r3, #11
 8002484:	680a      	ldr	r2, [r1, #0]
 8002486:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800248a:	4410      	add	r0, r2
 800248c:	4770      	bx	lr

0800248e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800248e:	b510      	push	{r4, lr}
 8002490:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8002492:	b1ba      	cbz	r2, 80024c4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002494:	7b10      	ldrb	r0, [r2, #12]
 8002496:	b168      	cbz	r0, 80024b4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002498:	7b53      	ldrb	r3, [r2, #13]
 800249a:	7ad2      	ldrb	r2, [r2, #11]
 800249c:	021b      	lsls	r3, r3, #8
 800249e:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80024a2:	431a      	orrs	r2, r3
 80024a4:	6a23      	ldr	r3, [r4, #32]
 80024a6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 80024aa:	881a      	ldrh	r2, [r3, #0]
 80024ac:	428a      	cmp	r2, r1
 80024ae:	d102      	bne.n	80024b6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80024b0:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 80024b4:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80024b6:	d805      	bhi.n	80024c4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80024b8:	3801      	subs	r0, #1
 80024ba:	3304      	adds	r3, #4
 80024bc:	b280      	uxth	r0, r0
 80024be:	2800      	cmp	r0, #0
 80024c0:	d1f3      	bne.n	80024aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80024c2:	e7f7      	b.n	80024b4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80024c4:	2000      	movs	r0, #0
 80024c6:	e7f5      	b.n	80024b4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080024c8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80024c8:	b510      	push	{r4, lr}
 80024ca:	4604      	mov	r4, r0
 80024cc:	212c      	movs	r1, #44	@ 0x2c
 80024ce:	f01e fd17 	bl	8020f00 <_ZdlPvj>
 80024d2:	4620      	mov	r0, r4
 80024d4:	bd10      	pop	{r4, pc}
	...

080024d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80024d8:	b530      	push	{r4, r5, lr}
 80024da:	b08b      	sub	sp, #44	@ 0x2c
 80024dc:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80024de:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 80024e2:	9508      	str	r5, [sp, #32]
 80024e4:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 80024e8:	9507      	str	r5, [sp, #28]
 80024ea:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 80024ee:	9506      	str	r5, [sp, #24]
 80024f0:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 80024f4:	9505      	str	r5, [sp, #20]
 80024f6:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 80024fa:	9504      	str	r5, [sp, #16]
 80024fc:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8002500:	9503      	str	r5, [sp, #12]
 8002502:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8002506:	9502      	str	r5, [sp, #8]
 8002508:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 800250c:	9501      	str	r5, [sp, #4]
 800250e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8002512:	9500      	str	r5, [sp, #0]
 8002514:	f00e fda2 	bl	801105c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8002518:	4b06      	ldr	r3, [pc, #24]	@ (8002534 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
}
 800251a:	4620      	mov	r0, r4
      arabicTable(formsTable)
 800251c:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 800251e:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002520:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002522:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002524:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8002526:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002528:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 800252a:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 800252c:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 800252e:	b00b      	add	sp, #44	@ 0x2c
 8002530:	bd30      	pop	{r4, r5, pc}
 8002532:	bf00      	nop
 8002534:	08023594 	.word	0x08023594

08002538 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002538:	2000      	movs	r0, #0
 800253a:	4770      	bx	lr

0800253c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800253c:	8081      	strh	r1, [r0, #4]
    }
 800253e:	4770      	bx	lr

08002540 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002540:	80c1      	strh	r1, [r0, #6]
    }
 8002542:	4770      	bx	lr

08002544 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002544:	8101      	strh	r1, [r0, #8]
    }
 8002546:	4770      	bx	lr

08002548 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002548:	8141      	strh	r1, [r0, #10]
    }
 800254a:	4770      	bx	lr

0800254c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800254c:	4770      	bx	lr

0800254e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800254e:	4770      	bx	lr

08002550 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002550:	4770      	bx	lr

08002552 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002552:	4770      	bx	lr

08002554 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002554:	4770      	bx	lr

08002556 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002556:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002558:	88c4      	ldrh	r4, [r0, #6]
 800255a:	6803      	ldr	r3, [r0, #0]
 800255c:	1b12      	subs	r2, r2, r4
 800255e:	8884      	ldrh	r4, [r0, #4]
 8002560:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002562:	1b09      	subs	r1, r1, r4
 8002564:	b212      	sxth	r2, r2
    }
 8002566:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800256a:	b209      	sxth	r1, r1
 800256c:	4718      	bx	r3

0800256e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800256e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002572:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002574:	f04f 33ff 	mov.w	r3, #4294967295
 8002578:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800257a:	6813      	ldr	r3, [r2, #0]
 800257c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800257e:	6010      	str	r0, [r2, #0]
    }
 8002580:	4770      	bx	lr

08002582 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002582:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002584:	4770      	bx	lr

08002586 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002586:	4770      	bx	lr

08002588 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002588:	4770      	bx	lr

0800258a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800258a:	4770      	bx	lr

0800258c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800258c:	4770      	bx	lr

0800258e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800258e:	4770      	bx	lr

08002590 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002590:	2000      	movs	r0, #0
 8002592:	4770      	bx	lr

08002594 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8002594:	888b      	ldrh	r3, [r1, #4]
 8002596:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002598:	2001      	movs	r0, #1
 800259a:	4770      	bx	lr

0800259c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800259c:	4770      	bx	lr

0800259e <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800259e:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
 80025a2:	4770      	bx	lr

080025a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 80025a4:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80025a6:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 80025a8:	6b04      	ldr	r4, [r0, #48]	@ 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80025aa:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 80025ae:	4362      	muls	r2, r4
 80025b0:	4361      	muls	r1, r4
    }
 80025b2:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80025b6:	4718      	bx	r3

080025b8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 80025b8:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80025bc:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80025be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    virtual void setGraphRangeX(float min, float max)
 80025c2:	b410      	push	{r4}
        const float fs = f * (float)scale;
 80025c4:	ee20 0a27 	vmul.f32	s0, s0, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80025c8:	f8d3 40a4 	ldr.w	r4, [r3, #164]	@ 0xa4
        if (fs >= 0)
 80025cc:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80025d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80025d4:	db1a      	blt.n	800260c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x54>
        {
            return (int)(fs + 0.5f);
 80025d6:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80025da:	ee30 0a07 	vadd.f32	s0, s0, s14
 80025de:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80025e2:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80025e6:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80025ea:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80025ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80025f2:	db1e      	blt.n	8002632 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x7a>
            return (int)(fs + 0.5f);
 80025f4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80025f8:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80025fc:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8002600:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8002604:	4623      	mov	r3, r4
    }
 8002606:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800260a:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800260c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8002610:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8002614:	ee17 3a10 	vmov	r3, s14
 8002618:	3b01      	subs	r3, #1
 800261a:	ee30 0a66 	vsub.f32	s0, s0, s13
 800261e:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 8002622:	ee30 0a26 	vadd.f32	s0, s0, s13
 8002626:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800262a:	ee10 1a10 	vmov	r1, s0
 800262e:	4419      	add	r1, r3
 8002630:	e7d9      	b.n	80025e6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2e>
 8002632:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8002636:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800263a:	ee17 3a90 	vmov	r3, s15
 800263e:	3b01      	subs	r3, #1
 8002640:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8002644:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8002648:	ee70 0a87 	vadd.f32	s1, s1, s14
 800264c:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8002650:	ee10 2a90 	vmov	r2, s1
 8002654:	441a      	add	r2, r3
 8002656:	e7d5      	b.n	8002604 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>

08002658 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8002658:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800265a:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 800265c:	6b04      	ldr	r4, [r0, #48]	@ 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800265e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8002662:	4362      	muls	r2, r4
    }
 8002664:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8002668:	4718      	bx	r3

0800266a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 800266a:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800266e:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002670:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    virtual void setGraphRangeXAuto(bool showYaxis, float margin)
 8002674:	b410      	push	{r4}
        const float fs = f * (float)scale;
 8002676:	ee27 0a80 	vmul.f32	s0, s15, s0
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800267a:	f8d3 40b0 	ldr.w	r4, [r3, #176]	@ 0xb0
        if (fs >= 0)
 800267e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002682:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002686:	db0b      	blt.n	80026a0 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x36>
            return (int)(fs + 0.5f);
 8002688:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800268c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8002690:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002694:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8002698:	4623      	mov	r3, r4
    }
 800269a:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800269e:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80026a0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80026a4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80026a8:	ee17 3a90 	vmov	r3, s15
 80026ac:	3b01      	subs	r3, #1
 80026ae:	ee30 0a47 	vsub.f32	s0, s0, s14
 80026b2:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80026b6:	ee30 0a07 	vadd.f32	s0, s0, s14
 80026ba:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80026be:	ee10 2a10 	vmov	r2, s0
 80026c2:	441a      	add	r2, r3
 80026c4:	e7e8      	b.n	8002698 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>

080026c6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 80026c6:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80026c8:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 80026ca:	6b44      	ldr	r4, [r0, #52]	@ 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80026cc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 80026d0:	4362      	muls	r2, r4
 80026d2:	4361      	muls	r1, r4
    }
 80026d4:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80026d8:	4718      	bx	r3

080026da <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 80026da:	edd0 7a0d 	vldr	s15, [r0, #52]	@ 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80026de:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80026e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    virtual void setGraphRangeY(float min, float max)
 80026e4:	b410      	push	{r4}
        const float fs = f * (float)scale;
 80026e6:	ee20 0a27 	vmul.f32	s0, s0, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80026ea:	f8d3 40bc 	ldr.w	r4, [r3, #188]	@ 0xbc
        if (fs >= 0)
 80026ee:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80026f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80026f6:	db1a      	blt.n	800272e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x54>
            return (int)(fs + 0.5f);
 80026f8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80026fc:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002700:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8002704:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8002708:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 800270c:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8002710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002714:	db1e      	blt.n	8002754 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x7a>
            return (int)(fs + 0.5f);
 8002716:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800271a:	ee70 0aa7 	vadd.f32	s1, s1, s15
 800271e:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8002722:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8002726:	4623      	mov	r3, r4
    }
 8002728:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800272c:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800272e:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8002732:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8002736:	ee17 3a10 	vmov	r3, s14
 800273a:	3b01      	subs	r3, #1
 800273c:	ee30 0a66 	vsub.f32	s0, s0, s13
 8002740:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 8002744:	ee30 0a26 	vadd.f32	s0, s0, s13
 8002748:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800274c:	ee10 1a10 	vmov	r1, s0
 8002750:	4419      	add	r1, r3
 8002752:	e7d9      	b.n	8002708 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2e>
 8002754:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8002758:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800275c:	ee17 3a90 	vmov	r3, s15
 8002760:	3b01      	subs	r3, #1
 8002762:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8002766:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800276a:	ee70 0a87 	vadd.f32	s1, s1, s14
 800276e:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8002772:	ee10 2a90 	vmov	r2, s1
 8002776:	441a      	add	r2, r3
 8002778:	e7d5      	b.n	8002726 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>

0800277a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 800277a:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800277c:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 800277e:	6b44      	ldr	r4, [r0, #52]	@ 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8002780:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8002784:	4362      	muls	r2, r4
    }
 8002786:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800278a:	4718      	bx	r3

0800278c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 800278c:	edd0 7a0d 	vldr	s15, [r0, #52]	@ 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8002790:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002792:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    virtual void setGraphRangeYAuto(bool showXaxis, float margin)
 8002796:	b410      	push	{r4}
        const float fs = f * (float)scale;
 8002798:	ee27 0a80 	vmul.f32	s0, s15, s0
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800279c:	f8d3 40c0 	ldr.w	r4, [r3, #192]	@ 0xc0
        if (fs >= 0)
 80027a0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80027a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027a8:	db0b      	blt.n	80027c2 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x36>
            return (int)(fs + 0.5f);
 80027aa:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80027ae:	ee30 0a27 	vadd.f32	s0, s0, s15
 80027b2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80027b6:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80027ba:	4623      	mov	r3, r4
    }
 80027bc:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80027c0:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80027c2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80027c6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80027ca:	ee17 3a90 	vmov	r3, s15
 80027ce:	3b01      	subs	r3, #1
 80027d0:	ee30 0a47 	vsub.f32	s0, s0, s14
 80027d4:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80027d8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80027dc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80027e0:	ee10 2a10 	vmov	r2, s0
 80027e4:	441a      	add	r2, r3
 80027e6:	e7e8      	b.n	80027ba <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>

080027e8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 80027e8:	f8d0 312c 	ldr.w	r3, [r0, #300]	@ 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 80027ec:	6b02      	ldr	r2, [r0, #48]	@ 0x30
        if (i >= 0)
 80027ee:	2b00      	cmp	r3, #0
 80027f0:	db07      	blt.n	8002802 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80027f2:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 80027f6:	fb90 f0f2 	sdiv	r0, r0, r2
 80027fa:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80027fe:	1040      	asrs	r0, r0, #1
 8002800:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002802:	f06f 0101 	mvn.w	r1, #1
 8002806:	fb01 2003 	mla	r0, r1, r3, r2
 800280a:	3801      	subs	r0, #1
 800280c:	fb90 f0f2 	sdiv	r0, r0, r2
 8002810:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002814:	1040      	asrs	r0, r0, #1
 8002816:	4240      	negs	r0, r0
    }
 8002818:	4770      	bx	lr

0800281a <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 800281a:	edd0 7a4b 	vldr	s15, [r0, #300]	@ 0x12c
 800281e:	ed90 0a0c 	vldr	s0, [r0, #48]	@ 0x30
 8002822:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002826:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 800282a:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800282e:	4770      	bx	lr

08002830 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 8002830:	f8d0 012c 	ldr.w	r0, [r0, #300]	@ 0x12c
 8002834:	4770      	bx	lr

08002836 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 8002836:	f8d0 3130 	ldr.w	r3, [r0, #304]	@ 0x130
        return scaled2int(i, xScale);
 800283a:	6b02      	ldr	r2, [r0, #48]	@ 0x30
        if (i >= 0)
 800283c:	2b00      	cmp	r3, #0
 800283e:	db07      	blt.n	8002850 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8002840:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 8002844:	fb90 f0f2 	sdiv	r0, r0, r2
 8002848:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800284c:	1040      	asrs	r0, r0, #1
 800284e:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002850:	f06f 0101 	mvn.w	r1, #1
 8002854:	fb01 2003 	mla	r0, r1, r3, r2
 8002858:	3801      	subs	r0, #1
 800285a:	fb90 f0f2 	sdiv	r0, r0, r2
 800285e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002862:	1040      	asrs	r0, r0, #1
 8002864:	4240      	negs	r0, r0
    }
 8002866:	4770      	bx	lr

08002868 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8002868:	edd0 7a4c 	vldr	s15, [r0, #304]	@ 0x130
 800286c:	ed90 0a0c 	vldr	s0, [r0, #48]	@ 0x30
 8002870:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002874:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 8002878:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800287c:	4770      	bx	lr

0800287e <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 800287e:	f8d0 0130 	ldr.w	r0, [r0, #304]	@ 0x130
 8002882:	4770      	bx	lr

08002884 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8002884:	f8d0 3134 	ldr.w	r3, [r0, #308]	@ 0x134
        return scaled2int(i, yScale);
 8002888:	6b42      	ldr	r2, [r0, #52]	@ 0x34
        if (i >= 0)
 800288a:	2b00      	cmp	r3, #0
 800288c:	db07      	blt.n	800289e <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800288e:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 8002892:	fb90 f0f2 	sdiv	r0, r0, r2
 8002896:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800289a:	1040      	asrs	r0, r0, #1
 800289c:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800289e:	f06f 0101 	mvn.w	r1, #1
 80028a2:	fb01 2003 	mla	r0, r1, r3, r2
 80028a6:	3801      	subs	r0, #1
 80028a8:	fb90 f0f2 	sdiv	r0, r0, r2
 80028ac:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80028b0:	1040      	asrs	r0, r0, #1
 80028b2:	4240      	negs	r0, r0
    }
 80028b4:	4770      	bx	lr

080028b6 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 80028b6:	edd0 7a4d 	vldr	s15, [r0, #308]	@ 0x134
 80028ba:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
 80028be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80028c2:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 80028c6:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80028ca:	4770      	bx	lr

080028cc <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 80028cc:	f8d0 0134 	ldr.w	r0, [r0, #308]	@ 0x134
 80028d0:	4770      	bx	lr

080028d2 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 80028d2:	f8d0 3138 	ldr.w	r3, [r0, #312]	@ 0x138
        return scaled2int(i, yScale);
 80028d6:	6b42      	ldr	r2, [r0, #52]	@ 0x34
        if (i >= 0)
 80028d8:	2b00      	cmp	r3, #0
 80028da:	db07      	blt.n	80028ec <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80028dc:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 80028e0:	fb90 f0f2 	sdiv	r0, r0, r2
 80028e4:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80028e8:	1040      	asrs	r0, r0, #1
 80028ea:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80028ec:	f06f 0101 	mvn.w	r1, #1
 80028f0:	fb01 2003 	mla	r0, r1, r3, r2
 80028f4:	3801      	subs	r0, #1
 80028f6:	fb90 f0f2 	sdiv	r0, r0, r2
 80028fa:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80028fe:	1040      	asrs	r0, r0, #1
 8002900:	4240      	negs	r0, r0
    }
 8002902:	4770      	bx	lr

08002904 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 8002904:	edd0 7a4e 	vldr	s15, [r0, #312]	@ 0x138
 8002908:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
 800290c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002910:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 8002914:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8002918:	4770      	bx	lr

0800291a <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 800291a:	f8d0 0138 	ldr.w	r0, [r0, #312]	@ 0x138
 800291e:	4770      	bx	lr

08002920 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
    {
        setScaleX(scale, updateData);
 8002920:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 8002922:	b570      	push	{r4, r5, r6, lr}
 8002924:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 8002926:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    virtual void setScale(int scale, bool updateData = false)
 800292a:	460d      	mov	r5, r1
 800292c:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 800292e:	4798      	blx	r3
        setScaleY(scale, updateData);
 8002930:	6823      	ldr	r3, [r4, #0]
 8002932:	4632      	mov	r2, r6
 8002934:	4629      	mov	r1, r5
 8002936:	4620      	mov	r0, r4
 8002938:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
    }
 800293c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 8002940:	4718      	bx	r3

08002942 <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 8002942:	6803      	ldr	r3, [r0, #0]
 8002944:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002948:	4718      	bx	r3

0800294a <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 800294a:	6803      	ldr	r3, [r0, #0]
 800294c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8002950:	4718      	bx	r3

08002952 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 8002952:	6803      	ldr	r3, [r0, #0]
 8002954:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002958:	4718      	bx	r3

0800295a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800295a:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 800295c:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 800295e:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8002960:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
        return scaled2int(i, xScale);
 8002964:	6b04      	ldr	r4, [r0, #48]	@ 0x30
        if (i >= 0)
 8002966:	db0e      	blt.n	8002986 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8002968:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800296c:	fb92 f1f4 	sdiv	r1, r2, r4
 8002970:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002974:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8002976:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	@ 0x11e
    }
 800297a:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800297e:	3a01      	subs	r2, #1
 8002980:	440a      	add	r2, r1
 8002982:	4249      	negs	r1, r1
 8002984:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002986:	f06f 0101 	mvn.w	r1, #1
 800298a:	fb01 4102 	mla	r1, r1, r2, r4
 800298e:	3901      	subs	r1, #1
 8002990:	fb91 f1f4 	sdiv	r1, r1, r4
 8002994:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002998:	1049      	asrs	r1, r1, #1
 800299a:	4249      	negs	r1, r1
 800299c:	e7eb      	b.n	8002976 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

0800299e <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 800299e:	6803      	ldr	r3, [r0, #0]
 80029a0:	f8d3 313c 	ldr.w	r3, [r3, #316]	@ 0x13c
 80029a4:	4718      	bx	r3

080029a6 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 80029a6:	6b02      	ldr	r2, [r0, #48]	@ 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 80029a8:	6803      	ldr	r3, [r0, #0]
 80029aa:	4351      	muls	r1, r2
 80029ac:	f8d3 3148 	ldr.w	r3, [r3, #328]	@ 0x148
 80029b0:	4718      	bx	r3

080029b2 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 80029b2:	6803      	ldr	r3, [r0, #0]
 80029b4:	f8d3 3144 	ldr.w	r3, [r3, #324]	@ 0x144
 80029b8:	4718      	bx	r3

080029ba <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 80029ba:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 80029be:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80029c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80029c4:	f8d3 2148 	ldr.w	r2, [r3, #328]	@ 0x148
        const float fs = f * (float)scale;
 80029c8:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80029cc:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80029d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80029d4:	db08      	blt.n	80029e8 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 80029d6:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80029da:	ee30 0a27 	vadd.f32	s0, s0, s15
 80029de:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80029e2:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80029e6:	4710      	bx	r2
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80029e8:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80029ec:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80029f0:	ee17 3a90 	vmov	r3, s15
 80029f4:	3b01      	subs	r3, #1
 80029f6:	ee30 0a47 	vsub.f32	s0, s0, s14
 80029fa:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80029fe:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002a02:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8002a06:	ee10 1a10 	vmov	r1, s0
 8002a0a:	4419      	add	r1, r3
 8002a0c:	e7eb      	b.n	80029e6 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08002a0e <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8002a0e:	f8c0 113c 	str.w	r1, [r0, #316]	@ 0x13c
    }
 8002a12:	4770      	bx	lr

08002a14 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 8002a14:	6803      	ldr	r3, [r0, #0]
 8002a16:	f8d3 3150 	ldr.w	r3, [r3, #336]	@ 0x150
 8002a1a:	4718      	bx	r3

08002a1c <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8002a1c:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8002a1e:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8002a20:	f8d3 315c 	ldr.w	r3, [r3, #348]	@ 0x15c
    virtual int getXAxisFactorAsInt() const
 8002a24:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8002a26:	4798      	blx	r3
        if (i >= 0)
 8002a28:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8002a2a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        if (i >= 0)
 8002a2c:	db07      	blt.n	8002a3e <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8002a2e:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002a32:	fb90 f0f3 	sdiv	r0, r0, r3
 8002a36:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002a3a:	1040      	asrs	r0, r0, #1
    }
 8002a3c:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002a3e:	f06f 0201 	mvn.w	r2, #1
 8002a42:	fb02 3000 	mla	r0, r2, r0, r3
 8002a46:	3801      	subs	r0, #1
 8002a48:	fb90 f0f3 	sdiv	r0, r0, r3
 8002a4c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002a50:	1040      	asrs	r0, r0, #1
 8002a52:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8002a54:	e7f2      	b.n	8002a3c <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08002a56 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8002a56:	6803      	ldr	r3, [r0, #0]
 8002a58:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8002a5c:	4718      	bx	r3

08002a5e <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8002a5e:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8002a60:	b510      	push	{r4, lr}
 8002a62:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8002a64:	f8d3 315c 	ldr.w	r3, [r3, #348]	@ 0x15c
 8002a68:	4798      	blx	r3
 8002a6a:	ee07 0a90 	vmov	s15, r0
        return (float)i / (float)scale;
 8002a6e:	ed94 0a0c 	vldr	s0, [r4, #48]	@ 0x30
 8002a72:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002a76:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 8002a7a:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8002a7e:	bd10      	pop	{r4, pc}

08002a80 <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8002a80:	f8d0 013c 	ldr.w	r0, [r0, #316]	@ 0x13c
 8002a84:	4770      	bx	lr

08002a86 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8002a86:	6b02      	ldr	r2, [r0, #48]	@ 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8002a88:	6803      	ldr	r3, [r0, #0]
 8002a8a:	4351      	muls	r1, r2
 8002a8c:	f8d3 3168 	ldr.w	r3, [r3, #360]	@ 0x168
 8002a90:	4718      	bx	r3

08002a92 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8002a92:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8002a96:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002a98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8002a9c:	f8d3 2168 	ldr.w	r2, [r3, #360]	@ 0x168
        const float fs = f * (float)scale;
 8002aa0:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8002aa4:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002aa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002aac:	db08      	blt.n	8002ac0 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8002aae:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8002ab2:	ee30 0a27 	vadd.f32	s0, s0, s15
 8002ab6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002aba:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8002abe:	4710      	bx	r2
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002ac0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002ac4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002ac8:	ee17 3a90 	vmov	r3, s15
 8002acc:	3b01      	subs	r3, #1
 8002ace:	ee30 0a47 	vsub.f32	s0, s0, s14
 8002ad2:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8002ad6:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002ada:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8002ade:	ee10 1a10 	vmov	r1, s0
 8002ae2:	4419      	add	r1, r3
 8002ae4:	e7eb      	b.n	8002abe <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08002ae6 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8002ae6:	f8c0 1140 	str.w	r1, [r0, #320]	@ 0x140
    }
 8002aea:	4770      	bx	lr

08002aec <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8002aec:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8002aee:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8002af0:	f8d3 3174 	ldr.w	r3, [r3, #372]	@ 0x174
    virtual int getXAxisOffsetAsInt() const
 8002af4:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8002af6:	4798      	blx	r3
        if (i >= 0)
 8002af8:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8002afa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        if (i >= 0)
 8002afc:	db07      	blt.n	8002b0e <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8002afe:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002b02:	fb90 f0f3 	sdiv	r0, r0, r3
 8002b06:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002b0a:	1040      	asrs	r0, r0, #1
    }
 8002b0c:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002b0e:	f06f 0201 	mvn.w	r2, #1
 8002b12:	fb02 3000 	mla	r0, r2, r0, r3
 8002b16:	3801      	subs	r0, #1
 8002b18:	fb90 f0f3 	sdiv	r0, r0, r3
 8002b1c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002b20:	1040      	asrs	r0, r0, #1
 8002b22:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8002b24:	e7f2      	b.n	8002b0c <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08002b26 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8002b26:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8002b28:	b510      	push	{r4, lr}
 8002b2a:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8002b2c:	f8d3 3174 	ldr.w	r3, [r3, #372]	@ 0x174
 8002b30:	4798      	blx	r3
 8002b32:	ee07 0a90 	vmov	s15, r0
        return (float)i / (float)scale;
 8002b36:	ed94 0a0c 	vldr	s0, [r4, #48]	@ 0x30
 8002b3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002b3e:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 8002b42:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8002b46:	bd10      	pop	{r4, pc}

08002b48 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8002b48:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002b4c:	4770      	bx	lr

08002b4e <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
     * @return The index in the yValues array.
     */
    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return screenIndex;
    }
 8002b4e:	4608      	mov	r0, r1
 8002b50:	4770      	bx	lr

08002b52 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8002b52:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8002b54:	2900      	cmp	r1, #0
        return scaled2int(i, xScale);
 8002b56:	6b02      	ldr	r2, [r0, #48]	@ 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8002b58:	f8d3 3184 	ldr.w	r3, [r3, #388]	@ 0x184
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8002b5c:	b510      	push	{r4, lr}
 8002b5e:	4604      	mov	r4, r0
        if (i >= 0)
 8002b60:	db0e      	blt.n	8002b80 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8002b62:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8002b66:	fb91 f1f2 	sdiv	r1, r1, r2
 8002b6a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002b6e:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8002b70:	b209      	sxth	r1, r1
 8002b72:	4620      	mov	r0, r4
 8002b74:	4798      	blx	r3
 8002b76:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	@ 0x13c
    }
 8002b7a:	fb02 3000 	mla	r0, r2, r0, r3
 8002b7e:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002b80:	f06f 0001 	mvn.w	r0, #1
 8002b84:	fb00 2101 	mla	r1, r0, r1, r2
 8002b88:	3901      	subs	r1, #1
 8002b8a:	fb91 f1f2 	sdiv	r1, r1, r2
 8002b8e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002b92:	1049      	asrs	r1, r1, #1
 8002b94:	4249      	negs	r1, r1
 8002b96:	e7eb      	b.n	8002b70 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08002b98 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8002b98:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8002b9a:	4770      	bx	lr

08002b9c <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8002b9c:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8002b9e:	4770      	bx	lr

08002ba0 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8002ba0:	6803      	ldr	r3, [r0, #0]
 8002ba2:	f8d3 3148 	ldr.w	r3, [r3, #328]	@ 0x148
 8002ba6:	4718      	bx	r3

08002ba8 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8002ba8:	6803      	ldr	r3, [r0, #0]
 8002baa:	f8d3 315c 	ldr.w	r3, [r3, #348]	@ 0x15c
 8002bae:	4718      	bx	r3

08002bb0 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8002bb0:	6b02      	ldr	r2, [r0, #48]	@ 0x30

    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8002bb2:	6803      	ldr	r3, [r0, #0]
 8002bb4:	4351      	muls	r1, r2
 8002bb6:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 8002bba:	4718      	bx	r3

08002bbc <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8002bbc:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8002bbe:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8002bc0:	f8d3 5118 	ldr.w	r5, [r3, #280]	@ 0x118
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8002bc4:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8002bc6:	f8d0 6144 	ldr.w	r6, [r0, #324]	@ 0x144
 8002bca:	f8d3 3180 	ldr.w	r3, [r3, #384]	@ 0x180
 8002bce:	4798      	blx	r3
 8002bd0:	462b      	mov	r3, r5
 8002bd2:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8002bd6:	4620      	mov	r0, r4
    }
 8002bd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8002bdc:	4718      	bx	r3

08002bde <_ZNK8touchgfx21GraphWrapAndClearData18indexToGlobalIndexEs>:

    virtual void clear();

    virtual int32_t indexToGlobalIndex(int16_t index) const
    {
        return (this->dataCounter - this->usedCapacity) + index;
 8002bde:	f8d0 3148 	ldr.w	r3, [r0, #328]	@ 0x148
 8002be2:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	@ 0x11e
 8002be6:	4419      	add	r1, r3
    }
 8002be8:	1a08      	subs	r0, r1, r0
 8002bea:	4770      	bx	lr

08002bec <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002bec:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 8002bf0:	4770      	bx	lr

08002bf2 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8002bf2:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8002bf6:	4770      	bx	lr

08002bf8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002bf8:	2200      	movs	r2, #0
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002bfa:	b510      	push	{r4, lr}
        return rect.width;
 8002bfc:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002c00:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002c04:	8002      	strh	r2, [r0, #0]
 8002c06:	8042      	strh	r2, [r0, #2]
 8002c08:	8084      	strh	r4, [r0, #4]
 8002c0a:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002c0c:	bd10      	pop	{r4, pc}

08002c0e <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002c0e:	2200      	movs	r2, #0
 8002c10:	8002      	strh	r2, [r0, #0]
 8002c12:	8042      	strh	r2, [r0, #2]
 8002c14:	8082      	strh	r2, [r0, #4]
 8002c16:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002c18:	4770      	bx	lr

08002c1a <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8002c1a:	62c1      	str	r1, [r0, #44]	@ 0x2c
    }
 8002c1c:	4770      	bx	lr

08002c1e <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8002c1e:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8002c20:	4770      	bx	lr

08002c22 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8002c22:	2001      	movs	r0, #1
 8002c24:	4770      	bx	lr

08002c26 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8002c26:	4770      	bx	lr

08002c28 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8002c28:	4770      	bx	lr

08002c2a <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8002c2a:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8002c2c:	b118      	cbz	r0, 8002c36 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8002c2e:	6803      	ldr	r3, [r0, #0]
 8002c30:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8002c34:	4718      	bx	r3
    }
 8002c36:	4770      	bx	lr

08002c38 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8002c38:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8002c3a:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	@ 0x116
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8002c3e:	f8b2 4118 	ldrh.w	r4, [r2, #280]	@ 0x118
 8002c42:	f8b2 1040 	ldrh.w	r1, [r2, #64]	@ 0x40
 8002c46:	442c      	add	r4, r5
 8002c48:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	@ 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002c4c:	8005      	strh	r5, [r0, #0]
 8002c4e:	1b09      	subs	r1, r1, r4
 8002c50:	2400      	movs	r4, #0
 8002c52:	80c2      	strh	r2, [r0, #6]
 8002c54:	8044      	strh	r4, [r0, #2]
 8002c56:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8002c58:	bd30      	pop	{r4, r5, pc}

08002c5a <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8002c5a:	8002      	strh	r2, [r0, #0]
 8002c5c:	8083      	strh	r3, [r0, #4]
 8002c5e:	f9bd 2000 	ldrsh.w	r2, [sp]
 8002c62:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8002c66:	8042      	strh	r2, [r0, #2]
 8002c68:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8002c6a:	4770      	bx	lr

08002c6c <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8002c6c:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8002c6e:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8002c70:	f8d3 30ec 	ldr.w	r3, [r3, #236]	@ 0xec
 8002c74:	4718      	bx	r3

08002c76 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8002c76:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8002c78:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8002c7a:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 8002c7e:	4718      	bx	r3

08002c80 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8002c80:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	@ 0x116
 8002c84:	4770      	bx	lr

08002c86 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8002c86:	f8b1 3116 	ldrh.w	r3, [r1, #278]	@ 0x116
 8002c8a:	f8b1 2118 	ldrh.w	r2, [r1, #280]	@ 0x118
 8002c8e:	f8b1 0040 	ldrh.w	r0, [r1, #64]	@ 0x40
 8002c92:	4413      	add	r3, r2
 8002c94:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8002c96:	b200      	sxth	r0, r0
 8002c98:	4770      	bx	lr

08002c9a <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8002c9a:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	@ 0x114
 8002c9e:	4770      	bx	lr

08002ca0 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8002ca0:	f8b1 3114 	ldrh.w	r3, [r1, #276]	@ 0x114
 8002ca4:	f8b1 211a 	ldrh.w	r2, [r1, #282]	@ 0x11a
 8002ca8:	f8b1 0042 	ldrh.w	r0, [r1, #66]	@ 0x42
 8002cac:	4413      	add	r3, r2
 8002cae:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8002cb0:	b200      	sxth	r0, r0
 8002cb2:	4770      	bx	lr

08002cb4 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8002cb4:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8002cb6:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8002cb8:	4611      	mov	r1, r2
 8002cba:	f8d3 3118 	ldr.w	r3, [r3, #280]	@ 0x118
 8002cbe:	4718      	bx	r3

08002cc0 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002cc0:	b530      	push	{r4, r5, lr}
 8002cc2:	b085      	sub	sp, #20
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002cc4:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 8002cc6:	4604      	mov	r4, r0
        rect.width = width;
 8002cc8:	8101      	strh	r1, [r0, #8]
        boundingArea = calculateBoundingArea();
 8002cca:	466d      	mov	r5, sp
 8002ccc:	4601      	mov	r1, r0
 8002cce:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002cd2:	343c      	adds	r4, #60	@ 0x3c
 8002cd4:	4628      	mov	r0, r5
 8002cd6:	4798      	blx	r3
 8002cd8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002cdc:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002ce0:	b005      	add	sp, #20
 8002ce2:	bd30      	pop	{r4, r5, pc}

08002ce4 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002ce4:	b530      	push	{r4, r5, lr}
 8002ce6:	b085      	sub	sp, #20
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002ce8:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 8002cea:	4604      	mov	r4, r0
        rect.height = height;
 8002cec:	8141      	strh	r1, [r0, #10]
        boundingArea = calculateBoundingArea();
 8002cee:	466d      	mov	r5, sp
 8002cf0:	4601      	mov	r1, r0
 8002cf2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002cf6:	343c      	adds	r4, #60	@ 0x3c
 8002cf8:	4628      	mov	r0, r5
 8002cfa:	4798      	blx	r3
 8002cfc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002d00:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002d04:	b005      	add	sp, #20
 8002d06:	bd30      	pop	{r4, r5, pc}

08002d08 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002d08:	2200      	movs	r2, #0
 8002d0a:	8002      	strh	r2, [r0, #0]
 8002d0c:	8042      	strh	r2, [r0, #2]
 8002d0e:	8082      	strh	r2, [r0, #4]
 8002d10:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002d12:	4770      	bx	lr

08002d14 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002d14:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 8002d18:	4770      	bx	lr

08002d1a <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
    {
        setX(x);
 8002d1a:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002d1c:	b570      	push	{r4, r5, r6, lr}
 8002d1e:	4604      	mov	r4, r0
        setX(x);
 8002d20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002d22:	4615      	mov	r5, r2
        setX(x);
 8002d24:	4798      	blx	r3
        setBaselineY(baselineY);
 8002d26:	6823      	ldr	r3, [r4, #0]
 8002d28:	4620      	mov	r0, r4
 8002d2a:	4629      	mov	r1, r5
 8002d2c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 8002d2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002d32:	4718      	bx	r3

08002d34 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002d34:	2000      	movs	r0, #0
 8002d36:	4770      	bx	lr

08002d38 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002d38:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8002d3a:	4770      	bx	lr

08002d3c <_ZN12MainViewBase18sliderValueChangedEi>:
     * Virtual Action Handlers
     */
    virtual void sliderValueChanged(int value)
    {
        // Override and implement this function in Main
    }
 8002d3c:	4770      	bx	lr

08002d3e <_ZN12MainViewBase10send_helloEv>:
    virtual void send_hello()
    {
        // Override and implement this function in Main
    }
 8002d3e:	4770      	bx	lr

08002d40 <_ZN12MainViewBase11setupScreenEv>:
}

void MainViewBase::setupScreen()
{

}
 8002d40:	4770      	bx	lr

08002d42 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002d42:	4770      	bx	lr

08002d44 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_6SliderEivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8002d44:	4770      	bx	lr

08002d46 <_ZN8touchgfx17GraphWrapAndClearILs100EED1Ev>:
 * be created as new values are added.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphWrapAndClear : public GraphWrapAndClearData
 8002d46:	4770      	bx	lr

08002d48 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002d48:	4770      	bx	lr

08002d4a <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8002d4a:	4770      	bx	lr

08002d4c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002d4c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002d4e:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 8002d50:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002d52:	68c2      	ldr	r2, [r0, #12]
 8002d54:	689b      	ldr	r3, [r3, #8]
 8002d56:	1055      	asrs	r5, r2, #1
 8002d58:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002d5c:	07d2      	lsls	r2, r2, #31
 8002d5e:	bf48      	it	mi
 8002d60:	5962      	ldrmi	r2, [r4, r5]
    }
 8002d62:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002d64:	bf48      	it	mi
 8002d66:	58d3      	ldrmi	r3, [r2, r3]
 8002d68:	4718      	bx	r3

08002d6a <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8002d6a:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8002d6c:	6840      	ldr	r0, [r0, #4]
 8002d6e:	b130      	cbz	r0, 8002d7e <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002d70:	689a      	ldr	r2, [r3, #8]
 8002d72:	b91a      	cbnz	r2, 8002d7c <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8002d74:	68d8      	ldr	r0, [r3, #12]
 8002d76:	f000 0001 	and.w	r0, r0, #1
 8002d7a:	4770      	bx	lr
 8002d7c:	2001      	movs	r0, #1
    }
 8002d7e:	4770      	bx	lr

08002d80 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_6SliderEivE7executeES4_i>:
    virtual void execute(T1 t1, T2 t2)
 8002d80:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 8002d82:	6845      	ldr	r5, [r0, #4]
    virtual void execute(T1 t1, T2 t2)
 8002d84:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1, t2);
 8002d86:	68c4      	ldr	r4, [r0, #12]
 8002d88:	689b      	ldr	r3, [r3, #8]
 8002d8a:	1066      	asrs	r6, r4, #1
 8002d8c:	eb05 0064 	add.w	r0, r5, r4, asr #1
 8002d90:	07e4      	lsls	r4, r4, #31
 8002d92:	bf44      	itt	mi
 8002d94:	59ac      	ldrmi	r4, [r5, r6]
 8002d96:	58e3      	ldrmi	r3, [r4, r3]
    }
 8002d98:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 8002d9a:	4718      	bx	r3

08002d9c <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_6SliderEivE7isValidEv>:
    virtual bool isValid() const
 8002d9c:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8002d9e:	6840      	ldr	r0, [r0, #4]
 8002da0:	b130      	cbz	r0, 8002db0 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_6SliderEivE7isValidEv+0x14>
 8002da2:	689a      	ldr	r2, [r3, #8]
 8002da4:	b91a      	cbnz	r2, 8002dae <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_6SliderEivE7isValidEv+0x12>
 8002da6:	68d8      	ldr	r0, [r3, #12]
 8002da8:	f000 0001 	and.w	r0, r0, #1
 8002dac:	4770      	bx	lr
 8002dae:	2001      	movs	r0, #1
    }
 8002db0:	4770      	bx	lr

08002db2 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002db2:	b510      	push	{r4, lr}
 8002db4:	4604      	mov	r4, r0
 8002db6:	214c      	movs	r1, #76	@ 0x4c
 8002db8:	f01e f8a2 	bl	8020f00 <_ZdlPvj>
 8002dbc:	4620      	mov	r0, r4
 8002dbe:	bd10      	pop	{r4, pc}

08002dc0 <_ZN8touchgfx17GraphElementGridYD0Ev>:
 8002dc0:	b510      	push	{r4, lr}
 8002dc2:	4604      	mov	r4, r0
 8002dc4:	2140      	movs	r1, #64	@ 0x40
 8002dc6:	f01e f89b 	bl	8020f00 <_ZdlPvj>
 8002dca:	4620      	mov	r0, r4
 8002dcc:	bd10      	pop	{r4, pc}

08002dce <_ZN8touchgfx17GraphWrapAndClearILs100EED0Ev>:
 8002dce:	b510      	push	{r4, lr}
 8002dd0:	4604      	mov	r4, r0
 8002dd2:	f44f 7137 	mov.w	r1, #732	@ 0x2dc
 8002dd6:	f01e f893 	bl	8020f00 <_ZdlPvj>
 8002dda:	4620      	mov	r0, r4
 8002ddc:	bd10      	pop	{r4, pc}

08002dde <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_6SliderEivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8002dde:	b510      	push	{r4, lr}
 8002de0:	4604      	mov	r4, r0
 8002de2:	2110      	movs	r1, #16
 8002de4:	f01e f88c 	bl	8020f00 <_ZdlPvj>
 8002de8:	4620      	mov	r0, r4
 8002dea:	bd10      	pop	{r4, pc}

08002dec <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002dec:	b510      	push	{r4, lr}
 8002dee:	4604      	mov	r4, r0
 8002df0:	2110      	movs	r1, #16
 8002df2:	f01e f885 	bl	8020f00 <_ZdlPvj>
 8002df6:	4620      	mov	r0, r4
 8002df8:	bd10      	pop	{r4, pc}

08002dfa <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8002dfa:	b538      	push	{r3, r4, r5, lr}
 8002dfc:	4603      	mov	r3, r0
 8002dfe:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8002e00:	e9d3 540c 	ldrd	r5, r4, [r3, #48]	@ 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8002e04:	680b      	ldr	r3, [r1, #0]
 8002e06:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002e0a:	4798      	blx	r3
 8002e0c:	4629      	mov	r1, r5
 8002e0e:	4602      	mov	r2, r0
 8002e10:	4620      	mov	r0, r4
    }
 8002e12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8002e16:	f008 bf99 	b.w	800bd4c <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08002e1c <_ZN12MainViewBaseD1Ev>:
MainViewBase::~MainViewBase()
 8002e1c:	4b03      	ldr	r3, [pc, #12]	@ (8002e2c <_ZN12MainViewBaseD1Ev+0x10>)
 8002e1e:	b510      	push	{r4, lr}
 8002e20:	4604      	mov	r4, r0
 8002e22:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002e24:	f00b fb42 	bl	800e4ac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002e28:	4620      	mov	r0, r4
 8002e2a:	bd10      	pop	{r4, pc}
 8002e2c:	08023cb0 	.word	0x08023cb0

08002e30 <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 8002e30:	4b06      	ldr	r3, [pc, #24]	@ (8002e4c <_ZN12MainViewBaseD0Ev+0x1c>)
 8002e32:	b510      	push	{r4, lr}
 8002e34:	4604      	mov	r4, r0
 8002e36:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002e38:	f00b fb38 	bl	800e4ac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002e3c:	f242 218c 	movw	r1, #8844	@ 0x228c
 8002e40:	4620      	mov	r0, r4
 8002e42:	f01e f85d 	bl	8020f00 <_ZdlPvj>
 8002e46:	4620      	mov	r0, r4
 8002e48:	bd10      	pop	{r4, pc}
 8002e4a:	bf00      	nop
 8002e4c:	08023cb0 	.word	0x08023cb0

08002e50 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002e50:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002e54:	b112      	cbz	r2, 8002e5c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002e56:	6803      	ldr	r3, [r0, #0]
 8002e58:	695b      	ldr	r3, [r3, #20]
 8002e5a:	4718      	bx	r3
    }
 8002e5c:	4770      	bx	lr

08002e5e <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
    virtual void invalidateContent() const
 8002e5e:	b508      	push	{r3, lr}
        if (alpha > 0)
 8002e60:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8002e64:	b10b      	cbz	r3, 8002e6a <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xc>
            Container::invalidateContent();
 8002e66:	f7ff fff3 	bl	8002e50 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002e6a:	bd08      	pop	{r3, pc}

08002e6c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002e6c:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002e6e:	f7ff ffef 	bl	8002e50 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002e72:	bd08      	pop	{r3, pc}

08002e74 <_ZN12MainViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi>:

void MainViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
 8002e74:	b410      	push	{r4}
    if (&src == &sliderResolution)
 8002e76:	f200 44c4 	addw	r4, r0, #1220	@ 0x4c4
 8002e7a:	428c      	cmp	r4, r1
 8002e7c:	d105      	bne.n	8002e8a <_ZN12MainViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x16>
    {
        //SliderValueChanged
        //When sliderResolution value changed call virtual function
        //Call sliderValueChanged
        sliderValueChanged(value);
 8002e7e:	6803      	ldr	r3, [r0, #0]
 8002e80:	4611      	mov	r1, r2
    }
}
 8002e82:	f85d 4b04 	ldr.w	r4, [sp], #4
        sliderValueChanged(value);
 8002e86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e88:	4718      	bx	r3
}
 8002e8a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002e8e:	4770      	bx	lr

08002e90 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &bt_send_hello)
 8002e90:	f500 62b7 	add.w	r2, r0, #1464	@ 0x5b8
 8002e94:	428a      	cmp	r2, r1
 8002e96:	d102      	bne.n	8002e9e <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //Interaction1
        //When bt_send_hello clicked call virtual function
        //Call send_hello
        send_hello();
 8002e98:	6803      	ldr	r3, [r0, #0]
 8002e9a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e9c:	4718      	bx	r3
    }
}
 8002e9e:	4770      	bx	lr

08002ea0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8002ea0:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8002ea2:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8002ea4:	db03      	blt.n	8002eae <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8002ea6:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	@ 0x11e
 8002eaa:	4294      	cmp	r4, r2
 8002eac:	dc06      	bgt.n	8002ebc <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8002eae:	4b08      	ldr	r3, [pc, #32]	@ (8002ed0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8002eb0:	f240 6139 	movw	r1, #1593	@ 0x639
 8002eb4:	4a07      	ldr	r2, [pc, #28]	@ (8002ed4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8002eb6:	4808      	ldr	r0, [pc, #32]	@ (8002ed8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8002eb8:	f01e fd8c 	bl	80219d4 <__assert_func>
        return yValues[dataIndex(index)];
 8002ebc:	6803      	ldr	r3, [r0, #0]
 8002ebe:	f8d0 4144 	ldr.w	r4, [r0, #324]	@ 0x144
 8002ec2:	f8d3 3180 	ldr.w	r3, [r3, #384]	@ 0x180
 8002ec6:	4798      	blx	r3
    }
 8002ec8:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8002ecc:	bd10      	pop	{r4, pc}
 8002ece:	bf00      	nop
 8002ed0:	080235f4 	.word	0x080235f4
 8002ed4:	08023617 	.word	0x08023617
 8002ed8:	08023666 	.word	0x08023666

08002edc <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8002edc:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8002ede:	b510      	push	{r4, lr}
 8002ee0:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8002ee2:	db03      	blt.n	8002eec <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8002ee4:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	@ 0x11e
 8002ee8:	429a      	cmp	r2, r3
 8002eea:	dc06      	bgt.n	8002efa <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8002eec:	4b07      	ldr	r3, [pc, #28]	@ (8002f0c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8002eee:	f240 6133 	movw	r1, #1587	@ 0x633
 8002ef2:	4a07      	ldr	r2, [pc, #28]	@ (8002f10 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8002ef4:	4807      	ldr	r0, [pc, #28]	@ (8002f14 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8002ef6:	f01e fd6d 	bl	80219d4 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8002efa:	6803      	ldr	r3, [r0, #0]
 8002efc:	f8d3 3184 	ldr.w	r3, [r3, #388]	@ 0x184
 8002f00:	4798      	blx	r3
 8002f02:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	@ 0x13c
    }
 8002f06:	fb02 3000 	mla	r0, r2, r0, r3
 8002f0a:	bd10      	pop	{r4, pc}
 8002f0c:	080235f4 	.word	0x080235f4
 8002f10:	080236c3 	.word	0x080236c3
 8002f14:	08023666 	.word	0x08023666

08002f18 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002f18:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002f1c:	b11a      	cbz	r2, 8002f26 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002f1e:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8002f22:	b102      	cbz	r2, 8002f26 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002f24:	6018      	str	r0, [r3, #0]
        }
    }
 8002f26:	4770      	bx	lr

08002f28 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002f28:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002f2a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002f2c:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
    virtual void setBaselineY(int16_t baselineY)
 8002f2e:	4604      	mov	r4, r0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002f30:	4b11      	ldr	r3, [pc, #68]	@ (8002f78 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002f32:	b28d      	uxth	r5, r1
 8002f34:	681b      	ldr	r3, [r3, #0]
 8002f36:	b92b      	cbnz	r3, 8002f44 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002f38:	4b10      	ldr	r3, [pc, #64]	@ (8002f7c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002f3a:	216c      	movs	r1, #108	@ 0x6c
 8002f3c:	4a10      	ldr	r2, [pc, #64]	@ (8002f80 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002f3e:	4811      	ldr	r0, [pc, #68]	@ (8002f84 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002f40:	f01e fd48 	bl	80219d4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002f44:	4910      	ldr	r1, [pc, #64]	@ (8002f88 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002f46:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002f48:	8809      	ldrh	r1, [r1, #0]
 8002f4a:	4291      	cmp	r1, r2
 8002f4c:	d803      	bhi.n	8002f56 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002f4e:	4b0f      	ldr	r3, [pc, #60]	@ (8002f8c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002f50:	216d      	movs	r1, #109	@ 0x6d
 8002f52:	4a0b      	ldr	r2, [pc, #44]	@ (8002f80 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002f54:	e7f3      	b.n	8002f3e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002f56:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002f5a:	4b0d      	ldr	r3, [pc, #52]	@ (8002f90 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002f5c:	681b      	ldr	r3, [r3, #0]
 8002f5e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002f62:	6803      	ldr	r3, [r0, #0]
 8002f64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f66:	4798      	blx	r3
 8002f68:	1a29      	subs	r1, r5, r0
 8002f6a:	4633      	mov	r3, r6
 8002f6c:	4620      	mov	r0, r4
 8002f6e:	b209      	sxth	r1, r1
    }
 8002f70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002f74:	4718      	bx	r3
 8002f76:	bf00      	nop
 8002f78:	20016bcc 	.word	0x20016bcc
 8002f7c:	08023712 	.word	0x08023712
 8002f80:	08023754 	.word	0x08023754
 8002f84:	0802378f 	.word	0x0802378f
 8002f88:	20016bd0 	.word	0x20016bd0
 8002f8c:	080237d6 	.word	0x080237d6
 8002f90:	20016bd4 	.word	0x20016bd4

08002f94 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002f94:	2200      	movs	r2, #0
 8002f96:	f04f 31ff 	mov.w	r1, #4294967295
              text(0)
 8002f9a:	6082      	str	r2, [r0, #8]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002f9c:	e9c0 2100 	strd	r2, r1, [r0]
    }
 8002fa0:	4770      	bx	lr

08002fa2 <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
 8002fa2:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002fa4:	b570      	push	{r4, r5, r6, lr}
 8002fa6:	4604      	mov	r4, r0
        setX(x);
 8002fa8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8002faa:	4615      	mov	r5, r2
        setX(x);
 8002fac:	4798      	blx	r3
        setY(y);
 8002fae:	6823      	ldr	r3, [r4, #0]
 8002fb0:	4620      	mov	r0, r4
 8002fb2:	4629      	mov	r1, r5
 8002fb4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 8002fb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002fba:	4718      	bx	r3

08002fbc <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002fbc:	b570      	push	{r4, r5, r6, lr}
 8002fbe:	4604      	mov	r4, r0
 8002fc0:	461d      	mov	r5, r3
 8002fc2:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002fc6:	f7ff ffec 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002fca:	6823      	ldr	r3, [r4, #0]
 8002fcc:	4629      	mov	r1, r5
 8002fce:	4620      	mov	r0, r4
 8002fd0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002fd2:	4798      	blx	r3
        setHeight(height);
 8002fd4:	6823      	ldr	r3, [r4, #0]
 8002fd6:	4631      	mov	r1, r6
 8002fd8:	4620      	mov	r0, r4
 8002fda:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8002fdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002fe0:	4718      	bx	r3
	...

08002fe4 <_ZN8touchgfx6WidgetC1Ev>:
 8002fe4:	2200      	movs	r2, #0
 8002fe6:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002fea:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002fee:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002ff2:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002ff6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002ffa:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8002ffc:	4a01      	ldr	r2, [pc, #4]	@ (8003004 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002ffe:	6002      	str	r2, [r0, #0]
 8003000:	4770      	bx	lr
 8003002:	bf00      	nop
 8003004:	08023918 	.word	0x08023918

08003008 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8003008:	b510      	push	{r4, lr}
 800300a:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 800300c:	2226      	movs	r2, #38	@ 0x26
 800300e:	2100      	movs	r1, #0
 8003010:	f01e ff7c 	bl	8021f0c <memset>
 8003014:	4620      	mov	r0, r4
 8003016:	f7ff ffe5 	bl	8002fe4 <_ZN8touchgfx6WidgetC1Ev>
 800301a:	4b04      	ldr	r3, [pc, #16]	@ (800302c <_ZN8touchgfx3BoxC1Ev+0x24>)
    {
    }
 800301c:	4620      	mov	r0, r4
        : Widget(), alpha(255), color(0)
 800301e:	6023      	str	r3, [r4, #0]
 8003020:	23ff      	movs	r3, #255	@ 0xff
 8003022:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
        : color(col)
 8003026:	2300      	movs	r3, #0
 8003028:	62a3      	str	r3, [r4, #40]	@ 0x28
    }
 800302a:	bd10      	pop	{r4, pc}
 800302c:	08024754 	.word	0x08024754

08003030 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003030:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003032:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003034:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003036:	f00e f90f 	bl	8011258 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 800303a:	2800      	cmp	r0, #0
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 800303c:	462a      	mov	r2, r5
 800303e:	9901      	ldr	r1, [sp, #4]
 8003040:	ea4f 1440 	mov.w	r4, r0, lsl #5
 8003044:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003048:	db04      	blt.n	8003054 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 800304a:	f00e f924 	bl	8011296 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 800304e:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003050:	b003      	add	sp, #12
 8003052:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003054:	f00e f91f 	bl	8011296 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003058:	1a20      	subs	r0, r4, r0
        explicit Q5(int i)
 800305a:	e7f9      	b.n	8003050 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

0800305c <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 800305c:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 800305e:	f8b0 311a 	ldrh.w	r3, [r0, #282]	@ 0x11a
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003062:	460e      	mov	r6, r1
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003064:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	@ 0x114
 8003068:	f8b0 5042 	ldrh.w	r5, [r0, #66]	@ 0x42
 800306c:	4423      	add	r3, r4
 800306e:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003070:	b22d      	sxth	r5, r5
 8003072:	442c      	add	r4, r5
 8003074:	1e69      	subs	r1, r5, #1
 8003076:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	@ 0x134
 800307a:	3c01      	subs	r4, #1
 800307c:	1ad2      	subs	r2, r2, r3
 800307e:	1af0      	subs	r0, r6, r3
 8003080:	f7ff ffd6 	bl	8003030 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
    }
 8003084:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8003088:	bd70      	pop	{r4, r5, r6, pc}

0800308a <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 800308a:	b538      	push	{r3, r4, r5, lr}
 800308c:	4604      	mov	r4, r0
 800308e:	460d      	mov	r5, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003090:	f8b4 3116 	ldrh.w	r3, [r4, #278]	@ 0x116
 8003094:	f8b4 1118 	ldrh.w	r1, [r4, #280]	@ 0x118
 8003098:	440b      	add	r3, r1
 800309a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800309e:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80030a0:	e9d0 024b 	ldrd	r0, r2, [r0, #300]	@ 0x12c
 80030a4:	b209      	sxth	r1, r1
 80030a6:	1a12      	subs	r2, r2, r0
 80030a8:	1a28      	subs	r0, r5, r0
 80030aa:	3901      	subs	r1, #1
 80030ac:	f7ff ffc0 	bl	8003030 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 80030b0:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	@ 0x116
    }
 80030b4:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 80030b8:	bd38      	pop	{r3, r4, r5, pc}
	...

080030bc <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 80030bc:	b510      	push	{r4, lr}
 80030be:	4604      	mov	r4, r0
        : CanvasWidget()
 80030c0:	f008 fa1c 	bl	800b4fc <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 80030c4:	4a0a      	ldr	r2, [pc, #40]	@ (80030f0 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 80030c6:	2300      	movs	r3, #0
    {
    }
 80030c8:	4620      	mov	r0, r4
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 80030ca:	6022      	str	r2, [r4, #0]
 80030cc:	2201      	movs	r2, #1
 80030ce:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80030d0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80030d4:	f8a4 3042 	strh.w	r3, [r4, #66]	@ 0x42
 80030d8:	64a3      	str	r3, [r4, #72]	@ 0x48
 80030da:	e9c4 230c 	strd	r2, r3, [r4, #48]	@ 0x30
        : typedTextId(id)
 80030de:	4a05      	ldr	r2, [pc, #20]	@ (80030f4 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 80030e0:	63a2      	str	r2, [r4, #56]	@ 0x38
 80030e2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80030e6:	87a2      	strh	r2, [r4, #60]	@ 0x3c
 80030e8:	222e      	movs	r2, #46	@ 0x2e
 80030ea:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
    }
 80030ee:	bd10      	pop	{r4, pc}
 80030f0:	080246b4 	.word	0x080246b4
 80030f4:	0802320c 	.word	0x0802320c

080030f8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
        : widgetWidth(0)
 80030f8:	2300      	movs	r3, #0
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80030fa:	b570      	push	{r4, r5, r6, lr}
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80030fc:	4e12      	ldr	r6, [pc, #72]	@ (8003148 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80030fe:	4605      	mov	r5, r0
 8003100:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003102:	4b12      	ldr	r3, [pc, #72]	@ (800314c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003104:	6003      	str	r3, [r0, #0]
 8003106:	6833      	ldr	r3, [r6, #0]
 8003108:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800310c:	b10a      	cbz	r2, 8003112 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800310e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8003110:	b900      	cbnz	r0, 8003114 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003112:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003114:	6803      	ldr	r3, [r0, #0]
 8003116:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003118:	4798      	blx	r3
        return auxiliaryLCD;
 800311a:	6833      	ldr	r3, [r6, #0]
 800311c:	fab0 f480 	clz	r4, r0
 8003120:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8003122:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003124:	b130      	cbz	r0, 8003134 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003126:	6803      	ldr	r3, [r0, #0]
 8003128:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800312a:	4798      	blx	r3
 800312c:	2800      	cmp	r0, #0
 800312e:	bf08      	it	eq
 8003130:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003134:	b92c      	cbnz	r4, 8003142 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003136:	4b06      	ldr	r3, [pc, #24]	@ (8003150 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003138:	212c      	movs	r1, #44	@ 0x2c
 800313a:	4a06      	ldr	r2, [pc, #24]	@ (8003154 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800313c:	4806      	ldr	r0, [pc, #24]	@ (8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800313e:	f01e fc49 	bl	80219d4 <__assert_func>
    }
 8003142:	4628      	mov	r0, r5
 8003144:	bd70      	pop	{r4, r5, r6, pc}
 8003146:	bf00      	nop
 8003148:	20016b74 	.word	0x20016b74
 800314c:	08023a38 	.word	0x08023a38
 8003150:	08023814 	.word	0x08023814
 8003154:	08023872 	.word	0x08023872
 8003158:	080238ab 	.word	0x080238ab

0800315c <_ZN12MainViewBaseC1Ev>:
MainViewBase::MainViewBase() :
 800315c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003160:	4604      	mov	r4, r0
 8003162:	b095      	sub	sp, #84	@ 0x54
        : presenter(0)
 8003164:	2500      	movs	r5, #0
 8003166:	f00e fa41 	bl	80115ec <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 800316a:	46a2      	mov	sl, r4
 800316c:	4be3      	ldr	r3, [pc, #908]	@ (80034fc <_ZN12MainViewBaseC1Ev+0x3a0>)
 800316e:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003172:	f04f 0826 	mov.w	r8, #38	@ 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003176:	f64f 7bff 	movw	fp, #65535	@ 0xffff
 800317a:	63e5      	str	r5, [r4, #60]	@ 0x3c
 800317c:	f84a 3b40 	str.w	r3, [sl], #64
 8003180:	4650      	mov	r0, sl
 8003182:	f7ff ff41 	bl	8003008 <_ZN8touchgfx3BoxC1Ev>
 8003186:	4642      	mov	r2, r8
 8003188:	4629      	mov	r1, r5
 800318a:	4648      	mov	r0, r9
 800318c:	f8ad b048 	strh.w	fp, [sp, #72]	@ 0x48
 8003190:	f01e febc 	bl	8021f0c <memset>
 8003194:	4648      	mov	r0, r9
 8003196:	f104 07cc 	add.w	r7, r4, #204	@ 0xcc
 800319a:	f7ff ff23 	bl	8002fe4 <_ZN8touchgfx6WidgetC1Ev>
 800319e:	4bd8      	ldr	r3, [pc, #864]	@ (8003500 <_ZN12MainViewBaseC1Ev+0x3a4>)
    {
        Image::setBitmap(bmp);
 80031a0:	a912      	add	r1, sp, #72	@ 0x48
 80031a2:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
 80031a4:	66e3      	str	r3, [r4, #108]	@ 0x6c
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80031a6:	2601      	movs	r6, #1
 80031a8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80031ac:	f884 b094 	strb.w	fp, [r4, #148]	@ 0x94
 80031b0:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
        Image::setBitmap(bmp);
 80031b4:	f00a fa74 	bl	800d6a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031b8:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 80031bc:	4618      	mov	r0, r3
 80031be:	9306      	str	r3, [sp, #24]
 80031c0:	f7ff ff22 	bl	8003008 <_ZN8touchgfx3BoxC1Ev>
 80031c4:	4bcf      	ldr	r3, [pc, #828]	@ (8003504 <_ZN12MainViewBaseC1Ev+0x3a8>)
 80031c6:	2164      	movs	r1, #100	@ 0x64
 80031c8:	4638      	mov	r0, r7
 80031ca:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80031ce:	f8c4 50c4 	str.w	r5, [r4, #196]	@ 0xc4
 80031d2:	f8a4 50c8 	strh.w	r5, [r4, #200]	@ 0xc8
 80031d6:	f008 fd55 	bl	800bc84 <_ZN8touchgfx17AbstractDataGraphC1Es>
 80031da:	4bcb      	ldr	r3, [pc, #812]	@ (8003508 <_ZN12MainViewBaseC1Ev+0x3ac>)
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80031dc:	4629      	mov	r1, r5
 80031de:	2263      	movs	r2, #99	@ 0x63
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80031e0:	f8c4 30cc 	str.w	r3, [r4, #204]	@ 0xcc
{
public:
    GraphWrapAndClear()
        : GraphWrapAndClearData(CAPACITY, y)
 80031e4:	f504 7306 	add.w	r3, r4, #536	@ 0x218
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80031e8:	4638      	mov	r0, r7
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80031ea:	e9c4 6582 	strd	r6, r5, [r4, #520]	@ 0x208
 80031ee:	e9c4 3584 	strd	r3, r5, [r4, #528]	@ 0x210
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80031f2:	f7ff f9d7 	bl	80025a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 80031f6:	4bc5      	ldr	r3, [pc, #788]	@ (800350c <_ZN12MainViewBaseC1Ev+0x3b0>)
 80031f8:	f8c4 30cc 	str.w	r3, [r4, #204]	@ 0xcc
 80031fc:	f504 736a 	add.w	r3, r4, #936	@ 0x3a8
 8003200:	4618      	mov	r0, r3
 8003202:	9307      	str	r3, [sp, #28]
 8003204:	f008 f97a 	bl	800b4fc <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003208:	230a      	movs	r3, #10
 800320a:	f884 63e0 	strb.w	r6, [r4, #992]	@ 0x3e0
 800320e:	f8c4 33dc 	str.w	r3, [r4, #988]	@ 0x3dc
class GraphElementGridY : public GraphElementGridBase
 8003212:	4bbf      	ldr	r3, [pc, #764]	@ (8003510 <_ZN12MainViewBaseC1Ev+0x3b4>)
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003214:	f8c4 53e4 	str.w	r5, [r4, #996]	@ 0x3e4
class GraphElementGridY : public GraphElementGridBase
 8003218:	f8c4 33a8 	str.w	r3, [r4, #936]	@ 0x3a8
 800321c:	f504 737a 	add.w	r3, r4, #1000	@ 0x3e8
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003220:	e9c4 56f5 	strd	r5, r6, [r4, #980]	@ 0x3d4

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 8003224:	4618      	mov	r0, r3
 8003226:	9308      	str	r3, [sp, #32]
 8003228:	f7ff ff48 	bl	80030bc <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800322c:	4bb9      	ldr	r3, [pc, #740]	@ (8003514 <_ZN12MainViewBaseC1Ev+0x3b8>)
 800322e:	f8c4 33e8 	str.w	r3, [r4, #1000]	@ 0x3e8
 8003232:	f204 4334 	addw	r3, r4, #1076	@ 0x434

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8003236:	4618      	mov	r0, r3
 8003238:	9309      	str	r3, [sp, #36]	@ 0x24
 800323a:	f7ff ff3f 	bl	80030bc <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800323e:	4bb6      	ldr	r3, [pc, #728]	@ (8003518 <_ZN12MainViewBaseC1Ev+0x3bc>)
 8003240:	f8c4 3434 	str.w	r3, [r4, #1076]	@ 0x434
 8003244:	f504 6390 	add.w	r3, r4, #1152	@ 0x480
        : CanvasWidget()
 8003248:	4618      	mov	r0, r3
 800324a:	930a      	str	r3, [sp, #40]	@ 0x28
 800324c:	f008 f956 	bl	800b4fc <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8003250:	4bb2      	ldr	r3, [pc, #712]	@ (800351c <_ZN12MainViewBaseC1Ev+0x3c0>)
 8003252:	f8c4 3480 	str.w	r3, [r4, #1152]	@ 0x480
 8003256:	f04f 0302 	mov.w	r3, #2
 800325a:	f884 34ac 	strb.w	r3, [r4, #1196]	@ 0x4ac
 800325e:	f504 6396 	add.w	r3, r4, #1200	@ 0x4b0
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003262:	4618      	mov	r0, r3
 8003264:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003266:	f7ff ff47 	bl	80030f8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800326a:	4bad      	ldr	r3, [pc, #692]	@ (8003520 <_ZN12MainViewBaseC1Ev+0x3c4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800326c:	f8c4 54bc 	str.w	r5, [r4, #1212]	@ 0x4bc
 8003270:	f8c4 34b0 	str.w	r3, [r4, #1200]	@ 0x4b0
 8003274:	3324      	adds	r3, #36	@ 0x24
 8003276:	f8c4 34b8 	str.w	r3, [r4, #1208]	@ 0x4b8
 800327a:	f204 43c4 	addw	r3, r4, #1220	@ 0x4c4
 800327e:	4618      	mov	r0, r3
 8003280:	9303      	str	r3, [sp, #12]
 8003282:	f007 f8ab 	bl	800a3dc <_ZN8touchgfx6SliderC1Ev>
 8003286:	f504 63b7 	add.w	r3, r4, #1464	@ 0x5b8
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 800328a:	4642      	mov	r2, r8
 800328c:	4629      	mov	r1, r5
 800328e:	4618      	mov	r0, r3
 8003290:	9305      	str	r3, [sp, #20]
 8003292:	f01e fe3b 	bl	8021f0c <memset>
 8003296:	9805      	ldr	r0, [sp, #20]
 8003298:	f7ff fea4 	bl	8002fe4 <_ZN8touchgfx6WidgetC1Ev>
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 800329c:	4ba1      	ldr	r3, [pc, #644]	@ (8003524 <_ZN12MainViewBaseC1Ev+0x3c8>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800329e:	4642      	mov	r2, r8
 80032a0:	4629      	mov	r1, r5
 80032a2:	f8c4 35b8 	str.w	r3, [r4, #1464]	@ 0x5b8
 80032a6:	f204 53ec 	addw	r3, r4, #1516	@ 0x5ec
        touchable = touch;
 80032aa:	f884 65dc 	strb.w	r6, [r4, #1500]	@ 0x5dc
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80032ae:	f104 0804 	add.w	r8, r4, #4
 80032b2:	4618      	mov	r0, r3
 80032b4:	f8a4 b5e6 	strh.w	fp, [r4, #1510]	@ 0x5e6
 80032b8:	f8a4 b5e8 	strh.w	fp, [r4, #1512]	@ 0x5e8
 80032bc:	f884 b5ea 	strb.w	fp, [r4, #1514]	@ 0x5ea
 80032c0:	f8c4 55e0 	str.w	r5, [r4, #1504]	@ 0x5e0
 80032c4:	f884 55e4 	strb.w	r5, [r4, #1508]	@ 0x5e4
 80032c8:	9304      	str	r3, [sp, #16]
 80032ca:	f01e fe1f 	bl	8021f0c <memset>
 80032ce:	9804      	ldr	r0, [sp, #16]
 80032d0:	f7ff fe88 	bl	8002fe4 <_ZN8touchgfx6WidgetC1Ev>
 80032d4:	4b94      	ldr	r3, [pc, #592]	@ (8003528 <_ZN12MainViewBaseC1Ev+0x3cc>)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80032d6:	f04f 32ff 	mov.w	r2, #4294967295
 80032da:	f8a4 b618 	strh.w	fp, [r4, #1560]	@ 0x618
 80032de:	f8c4 3614 	str.w	r3, [r4, #1556]	@ 0x614
 80032e2:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
 80032e6:	f8c4 262c 	str.w	r2, [r4, #1580]	@ 0x62c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80032ea:	f204 604c 	addw	r0, r4, #1612	@ 0x64c
 80032ee:	f8c4 3620 	str.w	r3, [r4, #1568]	@ 0x620
 80032f2:	f44f 51e1 	mov.w	r1, #7200	@ 0x1c20
        : TextAreaWithWildcardBase(), wc1(0)
 80032f6:	4b8d      	ldr	r3, [pc, #564]	@ (800352c <_ZN12MainViewBaseC1Ev+0x3d0>)
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80032f8:	f04f 4b7f 	mov.w	fp, #4278190080	@ 0xff000000
        : pobject(pObject), pmemfun(pmemfun_2)
 80032fc:	4a8c      	ldr	r2, [pc, #560]	@ (8003530 <_ZN12MainViewBaseC1Ev+0x3d4>)
 80032fe:	f8c4 35ec 	str.w	r3, [r4, #1516]	@ 0x5ec
 8003302:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
        : color(col)
 8003306:	f8c4 561c 	str.w	r5, [r4, #1564]	@ 0x61c
 800330a:	f8a4 5624 	strh.w	r5, [r4, #1572]	@ 0x624
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800330e:	f8c4 5628 	str.w	r5, [r4, #1576]	@ 0x628
              text(0)
 8003312:	f8c4 5630 	str.w	r5, [r4, #1584]	@ 0x630
 8003316:	f8c4 5634 	str.w	r5, [r4, #1588]	@ 0x634
 800331a:	e9c3 249b 	strd	r2, r4, [r3, #620]	@ 0x26c
 800331e:	4a85      	ldr	r2, [pc, #532]	@ (8003534 <_ZN12MainViewBaseC1Ev+0x3d8>)
 8003320:	e9c3 259d 	strd	r2, r5, [r3, #628]	@ 0x274
        : pobject(pObject), pmemfun(pmemfun_1)
 8003324:	4a84      	ldr	r2, [pc, #528]	@ (8003538 <_ZN12MainViewBaseC1Ev+0x3dc>)
 8003326:	e9c3 249f 	strd	r2, r4, [r3, #636]	@ 0x27c
 800332a:	4a84      	ldr	r2, [pc, #528]	@ (800353c <_ZN12MainViewBaseC1Ev+0x3e0>)
 800332c:	e9c3 25a1 	strd	r2, r5, [r3, #644]	@ 0x284
 8003330:	f00b f8b2 	bl	800e498 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 480, 272);
 8003334:	f44f 7388 	mov.w	r3, #272	@ 0x110
 8003338:	462a      	mov	r2, r5
 800333a:	4629      	mov	r1, r5
 800333c:	4650      	mov	r0, sl
 800333e:	9300      	str	r3, [sp, #0]
 8003340:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8003344:	f7ff fe3a 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 8003348:	4651      	mov	r1, sl
 800334a:	4640      	mov	r0, r8
 800334c:	f8c4 b068 	str.w	fp, [r4, #104]	@ 0x68
 8003350:	f006 fb72 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 8003354:	462a      	mov	r2, r5
 8003356:	4629      	mov	r1, r5
 8003358:	4648      	mov	r0, r9
 800335a:	f7ff fe22 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 800335e:	f04f 0202 	mov.w	r2, #2
    background.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_480X272PX_ID));
 8003362:	a912      	add	r1, sp, #72	@ 0x48
 8003364:	4648      	mov	r0, r9
 8003366:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 800336a:	f00a f999 	bl	800d6a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800336e:	4649      	mov	r1, r9
    graphBackground.setPosition(15, 24, 389, 224);
 8003370:	f04f 09e0 	mov.w	r9, #224	@ 0xe0
 8003374:	4640      	mov	r0, r8
        color = newColor;
 8003376:	f8df a1c8 	ldr.w	sl, [pc, #456]	@ 8003540 <_ZN12MainViewBaseC1Ev+0x3e4>
 800337a:	f006 fb5d 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800337e:	f240 1385 	movw	r3, #389	@ 0x185
 8003382:	9806      	ldr	r0, [sp, #24]
 8003384:	2218      	movs	r2, #24
 8003386:	f8cd 9000 	str.w	r9, [sp]
 800338a:	210f      	movs	r1, #15
 800338c:	f7ff fe16 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 8003390:	f04f 32ff 	mov.w	r2, #4294967295
 8003394:	9906      	ldr	r1, [sp, #24]
 8003396:	4640      	mov	r0, r8
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003398:	f8a4 60c8 	strh.w	r6, [r4, #200]	@ 0xc8
        borderColor = colorBorder;
 800339c:	e9c4 2b30 	strd	r2, fp, [r4, #192]	@ 0xc0
 80033a0:	f006 fb4a 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    graph.setPosition(15, 24, 389, 224);
 80033a4:	f240 1385 	movw	r3, #389	@ 0x185
 80033a8:	4638      	mov	r0, r7
 80033aa:	f8cd 9000 	str.w	r9, [sp]
 80033ae:	2218      	movs	r2, #24
 80033b0:	210f      	movs	r1, #15
 80033b2:	f7ff fe03 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
    graph.setScale(1);
 80033b6:	462a      	mov	r2, r5
 80033b8:	4631      	mov	r1, r6
 80033ba:	4638      	mov	r0, r7
 80033bc:	f7ff fab0 	bl	8002920 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    graph.setGraphRangeX(0, 100);
 80033c0:	4629      	mov	r1, r5
 80033c2:	4638      	mov	r0, r7
 80033c4:	2264      	movs	r2, #100	@ 0x64
 80033c6:	f7ff f8ed 	bl	80025a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    graph.setGraphAreaMargin(10, 28, 19, 22);
 80033ca:	2316      	movs	r3, #22
 80033cc:	4638      	mov	r0, r7
 80033ce:	221c      	movs	r2, #28
 80033d0:	9300      	str	r3, [sp, #0]
 80033d2:	210a      	movs	r1, #10
 80033d4:	2313      	movs	r3, #19
        setIntervalScaled(abs(interval) * dataScale);
 80033d6:	f04f 0914 	mov.w	r9, #20
 80033da:	f008 fc04 	bl	800bbe6 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    graph.setGraphAreaPadding(2, 6, 0, 6);
 80033de:	2206      	movs	r2, #6
 80033e0:	462b      	mov	r3, r5
 80033e2:	4638      	mov	r0, r7
 80033e4:	9200      	str	r2, [sp, #0]
 80033e6:	2102      	movs	r1, #2
 80033e8:	f008 fb00 	bl	800b9ec <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    graph.setGraphRangeY(0, 180);
 80033ec:	4629      	mov	r1, r5
 80033ee:	4638      	mov	r0, r7
 80033f0:	22b4      	movs	r2, #180	@ 0xb4
 80033f2:	f7ff f968 	bl	80026c6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>
 80033f6:	f8d4 13d8 	ldr.w	r1, [r4, #984]	@ 0x3d8
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80033fa:	4632      	mov	r2, r6
        color = newColor;
 80033fc:	f8c4 a3d4 	str.w	sl, [r4, #980]	@ 0x3d4
        setIntervalScaled(abs(interval) * dataScale);
 8003400:	fb09 f001 	mul.w	r0, r9, r1
        lineWidth = width;
 8003404:	f884 63e0 	strb.w	r6, [r4, #992]	@ 0x3e0
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 8003408:	2800      	cmp	r0, #0
 800340a:	bfb8      	it	lt
 800340c:	4240      	neglt	r0, r0
        gridInterval = abs(interval);
 800340e:	f8c4 03dc 	str.w	r0, [r4, #988]	@ 0x3dc
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8003412:	f008 fc9b 	bl	800bd4c <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    graph.addGraphElement(graphMajorYAxisGrid);
 8003416:	9907      	ldr	r1, [sp, #28]
        dataScale = scale;
 8003418:	e9c4 60f6 	strd	r6, r0, [r4, #984]	@ 0x3d8
 800341c:	4638      	mov	r0, r7
 800341e:	f008 faf0 	bl	800ba02 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 8003422:	f8d4 1418 	ldr.w	r1, [r4, #1048]	@ 0x418
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8003426:	4632      	mov	r2, r6
class TypedText
 8003428:	f8a4 6424 	strh.w	r6, [r4, #1060]	@ 0x424
        return i * scale;
 800342c:	fb09 f001 	mul.w	r0, r9, r1
        color = newColor;
 8003430:	f8c4 b414 	str.w	fp, [r4, #1044]	@ 0x414
 8003434:	2800      	cmp	r0, #0
 8003436:	bfb8      	it	lt
 8003438:	4240      	neglt	r0, r0
        labelInterval = abs(interval);
 800343a:	f8c4 041c 	str.w	r0, [r4, #1052]	@ 0x41c
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800343e:	f008 fc85 	bl	800bd4c <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    graph.addBottomElement(graphMajorXAxisLabel);
 8003442:	9908      	ldr	r1, [sp, #32]
 8003444:	f8c4 041c 	str.w	r0, [r4, #1052]	@ 0x41c
 8003448:	4638      	mov	r0, r7
        dataScale = scale;
 800344a:	f8c4 6418 	str.w	r6, [r4, #1048]	@ 0x418
 800344e:	f008 fafc 	bl	800ba4a <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 8003452:	f8d4 1464 	ldr.w	r1, [r4, #1124]	@ 0x464
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8003456:	4632      	mov	r2, r6
 8003458:	f8a4 5470 	strh.w	r5, [r4, #1136]	@ 0x470
 800345c:	fb09 f001 	mul.w	r0, r9, r1
 8003460:	f8c4 b460 	str.w	fp, [r4, #1120]	@ 0x460
 8003464:	2800      	cmp	r0, #0
 8003466:	bfb8      	it	lt
 8003468:	4240      	neglt	r0, r0
        labelInterval = abs(interval);
 800346a:	f8c4 0468 	str.w	r0, [r4, #1128]	@ 0x468
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800346e:	f008 fc6d 	bl	800bd4c <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    graph.addLeftElement(graphMajorYAxisLabel);
 8003472:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003474:	f8c4 0468 	str.w	r0, [r4, #1128]	@ 0x468
 8003478:	4638      	mov	r0, r7
        dataScale = scale;
 800347a:	f8c4 6464 	str.w	r6, [r4, #1124]	@ 0x464
 800347e:	f008 fad2 	bl	800ba26 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 8003482:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003484:	f241 43b8 	movw	r3, #5304	@ 0x14b8
    graph.addGraphElement(graphLine1);
 8003488:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800348a:	f8c4 24a8 	str.w	r2, [r4, #1192]	@ 0x4a8
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 800348e:	f04f 0202 	mov.w	r2, #2
 8003492:	f8a4 34c0 	strh.w	r3, [r4, #1216]	@ 0x4c0
 8003496:	4638      	mov	r0, r7
 8003498:	f884 24ac 	strb.w	r2, [r4, #1196]	@ 0x4ac
 800349c:	f8c4 a4bc 	str.w	sl, [r4, #1212]	@ 0x4bc
 80034a0:	f04f 0a03 	mov.w	sl, #3
 80034a4:	f008 faad 	bl	800ba02 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
 80034a8:	4639      	mov	r1, r7
 80034aa:	4640      	mov	r0, r8
    sliderResolution.setupVerticalSlider(7, 3, 0, 0, 125);
 80034ac:	277d      	movs	r7, #125	@ 0x7d
 80034ae:	f006 fac3 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sliderResolution.setXY(422, 47);
 80034b2:	9803      	ldr	r0, [sp, #12]
 80034b4:	222f      	movs	r2, #47	@ 0x2f
 80034b6:	f44f 71d3 	mov.w	r1, #422	@ 0x1a6
 80034ba:	f7ff fd72 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 80034be:	2304      	movs	r3, #4
    sliderResolution.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
 80034c0:	aa12      	add	r2, sp, #72	@ 0x48
 80034c2:	a910      	add	r1, sp, #64	@ 0x40
 80034c4:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
 80034c8:	2305      	movs	r3, #5
 80034ca:	9803      	ldr	r0, [sp, #12]
 80034cc:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80034d0:	4613      	mov	r3, r2
 80034d2:	aa11      	add	r2, sp, #68	@ 0x44
 80034d4:	f8ad a048 	strh.w	sl, [sp, #72]	@ 0x48
 80034d8:	f006 ffda 	bl	800a490 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    sliderResolution.setupVerticalSlider(7, 3, 0, 0, 125);
 80034dc:	462b      	mov	r3, r5
 80034de:	4652      	mov	r2, sl
 80034e0:	9803      	ldr	r0, [sp, #12]
 80034e2:	2107      	movs	r1, #7
 80034e4:	e9cd 5700 	strd	r5, r7, [sp]
 80034e8:	f006 ff21 	bl	800a32e <_ZN8touchgfx6Slider19setupVerticalSliderEsssss>
    sliderResolution.setValueRange(20, 250);
 80034ec:	22fa      	movs	r2, #250	@ 0xfa
 80034ee:	4649      	mov	r1, r9
 80034f0:	9803      	ldr	r0, [sp, #12]
 80034f2:	f006 fd6e 	bl	8009fd2 <_ZN8touchgfx6Slider13setValueRangeEss>
    sliderResolution.setValue(180);
 80034f6:	9803      	ldr	r0, [sp, #12]
 80034f8:	21b4      	movs	r1, #180	@ 0xb4
 80034fa:	e023      	b.n	8003544 <_ZN12MainViewBaseC1Ev+0x3e8>
 80034fc:	08023cb0 	.word	0x08023cb0
 8003500:	08024898 	.word	0x08024898
 8003504:	08024830 	.word	0x08024830
 8003508:	0802422c 	.word	0x0802422c
 800350c:	08023ae8 	.word	0x08023ae8
 8003510:	08023980 	.word	0x08023980
 8003514:	08024574 	.word	0x08024574
 8003518:	08024614 	.word	0x08024614
 800351c:	080244f4 	.word	0x080244f4
 8003520:	0802417c 	.word	0x0802417c
 8003524:	080247bc 	.word	0x080247bc
 8003528:	0802320c 	.word	0x0802320c
 800352c:	08023a58 	.word	0x08023a58
 8003530:	08023c80 	.word	0x08023c80
 8003534:	08002e75 	.word	0x08002e75
 8003538:	08023c98 	.word	0x08023c98
 800353c:	08002e91 	.word	0x08002e91
 8003540:	ff1497c5 	.word	0xff1497c5
 8003544:	f006 fd0d 	bl	8009f62 <_ZN8touchgfx6Slider8setValueEs>
    sliderResolution.setNewValueCallback(sliderValueChangedCallback);
 8003548:	f504 5309 	add.w	r3, r4, #8768	@ 0x2240
 800354c:	9903      	ldr	r1, [sp, #12]
 800354e:	4640      	mov	r0, r8
 8003550:	332c      	adds	r3, #44	@ 0x2c
     *
     * @see GenericCallback
     */
    void setNewValueCallback(GenericCallback<const Slider&, int>& callback)
    {
        newValueCallback = &callback;
 8003552:	f8c4 35b4 	str.w	r3, [r4, #1460]	@ 0x5b4
 8003556:	f006 fa6f 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bt_send_hello.setXY(199, 201);
 800355a:	9805      	ldr	r0, [sp, #20]
 800355c:	22c9      	movs	r2, #201	@ 0xc9
 800355e:	21c7      	movs	r1, #199	@ 0xc7
 8003560:	f7ff fd1f 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    bt_send_hello.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 8003564:	aa12      	add	r2, sp, #72	@ 0x48
 8003566:	a911      	add	r1, sp, #68	@ 0x44
 8003568:	9805      	ldr	r0, [sp, #20]
 800356a:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
        boundingArea = calculateBoundingArea();
 800356e:	ae0c      	add	r6, sp, #48	@ 0x30
 8003570:	f8ad 5044 	strh.w	r5, [sp, #68]	@ 0x44
 8003574:	f009 fec6 	bl	800d304 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    bt_send_hello.setAction(buttonCallback);
 8003578:	f504 5309 	add.w	r3, r4, #8768	@ 0x2240
 800357c:	9905      	ldr	r1, [sp, #20]
 800357e:	4640      	mov	r0, r8
 8003580:	333c      	adds	r3, #60	@ 0x3c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003582:	f8c4 35e0 	str.w	r3, [r4, #1504]	@ 0x5e0
 8003586:	f006 fa57 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setPosition(125, 9, 151, 30);
 800358a:	231e      	movs	r3, #30
 800358c:	2209      	movs	r2, #9
 800358e:	4639      	mov	r1, r7
 8003590:	9804      	ldr	r0, [sp, #16]
 8003592:	9300      	str	r3, [sp, #0]
 8003594:	2397      	movs	r3, #151	@ 0x97
 8003596:	f7ff fd11 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800359a:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	@ 0x5ec
 800359e:	9904      	ldr	r1, [sp, #16]
 80035a0:	4630      	mov	r0, r6
 80035a2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 80035a6:	f8c4 b61c 	str.w	fp, [r4, #1564]	@ 0x61c
        linespace = space;
 80035aa:	f8a4 5620 	strh.w	r5, [r4, #1568]	@ 0x620
        boundingArea = calculateBoundingArea();
 80035ae:	4798      	blx	r3
 80035b0:	f504 63c5 	add.w	r3, r4, #1576	@ 0x628
 80035b4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80035b8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setWildcard(textArea1Buffer);
 80035bc:	f504 63c7 	add.w	r3, r4, #1592	@ 0x638
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JOGG));
 80035c0:	a912      	add	r1, sp, #72	@ 0x48
 80035c2:	9804      	ldr	r0, [sp, #16]
        wc1 = value;
 80035c4:	f8c4 3634 	str.w	r3, [r4, #1588]	@ 0x634
        : typedTextId(id)
 80035c8:	4b08      	ldr	r3, [pc, #32]	@ (80035ec <_ZN12MainViewBaseC1Ev+0x490>)
    textArea1Buffer[0] = 0;
 80035ca:	f8a4 5638 	strh.w	r5, [r4, #1592]	@ 0x638
 80035ce:	9312      	str	r3, [sp, #72]	@ 0x48
 80035d0:	f04f 0302 	mov.w	r3, #2
 80035d4:	f8ad 304c 	strh.w	r3, [sp, #76]	@ 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JOGG));
 80035d8:	f009 fe36 	bl	800d248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035dc:	4640      	mov	r0, r8
 80035de:	9904      	ldr	r1, [sp, #16]
 80035e0:	f006 fa2a 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80035e4:	4620      	mov	r0, r4
 80035e6:	b015      	add	sp, #84	@ 0x54
 80035e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035ec:	0802320c 	.word	0x0802320c

080035f0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_NotoSans_Regular_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_NotoSans_Regular_12_4bpp();

touchgfx::GeneratedFont& getFont_NotoSans_Regular_12_4bpp()
{
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 15, 14, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 80035f0:	4770      	bx	lr
	...

080035f4 <_Z32getFont_NotoSans_Regular_12_4bppv>:
{
 80035f4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 15, 14, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 80035f6:	4d17      	ldr	r5, [pc, #92]	@ (8003654 <_Z32getFont_NotoSans_Regular_12_4bppv+0x60>)
{
 80035f8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 15, 14, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 80035fa:	682c      	ldr	r4, [r5, #0]
 80035fc:	f3bf 8f5b 	dmb	ish
 8003600:	f014 0401 	ands.w	r4, r4, #1
 8003604:	d122      	bne.n	800364c <_Z32getFont_NotoSans_Regular_12_4bppv+0x58>
 8003606:	4628      	mov	r0, r5
 8003608:	f01d fc7c 	bl	8020f04 <__cxa_guard_acquire>
 800360c:	b1f0      	cbz	r0, 800364c <_Z32getFont_NotoSans_Regular_12_4bppv+0x58>
 800360e:	233f      	movs	r3, #63	@ 0x3f
 8003610:	2201      	movs	r2, #1
 8003612:	4911      	ldr	r1, [pc, #68]	@ (8003658 <_Z32getFont_NotoSans_Regular_12_4bppv+0x64>)
 8003614:	9309      	str	r3, [sp, #36]	@ 0x24
 8003616:	4b11      	ldr	r3, [pc, #68]	@ (800365c <_Z32getFont_NotoSans_Regular_12_4bppv+0x68>)
 8003618:	4811      	ldr	r0, [pc, #68]	@ (8003660 <_Z32getFont_NotoSans_Regular_12_4bppv+0x6c>)
 800361a:	9308      	str	r3, [sp, #32]
 800361c:	4b11      	ldr	r3, [pc, #68]	@ (8003664 <_Z32getFont_NotoSans_Regular_12_4bppv+0x70>)
 800361e:	940a      	str	r4, [sp, #40]	@ 0x28
 8003620:	9405      	str	r4, [sp, #20]
 8003622:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003626:	2304      	movs	r3, #4
 8003628:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800362c:	230c      	movs	r3, #12
 800362e:	220f      	movs	r2, #15
 8003630:	9300      	str	r3, [sp, #0]
 8003632:	230e      	movs	r3, #14
 8003634:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003638:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800363c:	f7fe ff4c 	bl	80024d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003640:	4809      	ldr	r0, [pc, #36]	@ (8003668 <_Z32getFont_NotoSans_Regular_12_4bppv+0x74>)
 8003642:	f01e f9e5 	bl	8021a10 <atexit>
 8003646:	4628      	mov	r0, r5
 8003648:	f01d fc68 	bl	8020f1c <__cxa_guard_release>
    return NotoSans_Regular_12_4bpp;
}
 800364c:	4804      	ldr	r0, [pc, #16]	@ (8003660 <_Z32getFont_NotoSans_Regular_12_4bppv+0x6c>)
 800364e:	b00f      	add	sp, #60	@ 0x3c
 8003650:	bd30      	pop	{r4, r5, pc}
 8003652:	bf00      	nop
 8003654:	20003738 	.word	0x20003738
 8003658:	900602ac 	.word	0x900602ac
 800365c:	080251d4 	.word	0x080251d4
 8003660:	2000373c 	.word	0x2000373c
 8003664:	080251dc 	.word	0x080251dc
 8003668:	080035f1 	.word	0x080035f1

0800366c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_25_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_25_4bpp();

touchgfx::GeneratedFont& getFont_verdana_25_4bpp()
{
    static touchgfx::GeneratedFont verdana_25_4bpp(glyphs_verdana_25_4bpp, 13, 25, 25, 0, 0, 4, 1, 0, 0, unicodes_verdana_25_4bpp, kerning_verdana_25_4bpp, 63, 0, 0, 0);
 800366c:	4770      	bx	lr
	...

08003670 <_Z23getFont_verdana_25_4bppv>:
{
 8003670:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_25_4bpp(glyphs_verdana_25_4bpp, 13, 25, 25, 0, 0, 4, 1, 0, 0, unicodes_verdana_25_4bpp, kerning_verdana_25_4bpp, 63, 0, 0, 0);
 8003672:	4d16      	ldr	r5, [pc, #88]	@ (80036cc <_Z23getFont_verdana_25_4bppv+0x5c>)
{
 8003674:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_25_4bpp(glyphs_verdana_25_4bpp, 13, 25, 25, 0, 0, 4, 1, 0, 0, unicodes_verdana_25_4bpp, kerning_verdana_25_4bpp, 63, 0, 0, 0);
 8003676:	682c      	ldr	r4, [r5, #0]
 8003678:	f3bf 8f5b 	dmb	ish
 800367c:	f014 0401 	ands.w	r4, r4, #1
 8003680:	d121      	bne.n	80036c6 <_Z23getFont_verdana_25_4bppv+0x56>
 8003682:	4628      	mov	r0, r5
 8003684:	f01d fc3e 	bl	8020f04 <__cxa_guard_acquire>
 8003688:	b1e8      	cbz	r0, 80036c6 <_Z23getFont_verdana_25_4bppv+0x56>
 800368a:	233f      	movs	r3, #63	@ 0x3f
 800368c:	2201      	movs	r2, #1
 800368e:	4910      	ldr	r1, [pc, #64]	@ (80036d0 <_Z23getFont_verdana_25_4bppv+0x60>)
 8003690:	9309      	str	r3, [sp, #36]	@ 0x24
 8003692:	4b10      	ldr	r3, [pc, #64]	@ (80036d4 <_Z23getFont_verdana_25_4bppv+0x64>)
 8003694:	4810      	ldr	r0, [pc, #64]	@ (80036d8 <_Z23getFont_verdana_25_4bppv+0x68>)
 8003696:	9308      	str	r3, [sp, #32]
 8003698:	4b10      	ldr	r3, [pc, #64]	@ (80036dc <_Z23getFont_verdana_25_4bppv+0x6c>)
 800369a:	940a      	str	r4, [sp, #40]	@ 0x28
 800369c:	9405      	str	r4, [sp, #20]
 800369e:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80036a2:	2304      	movs	r3, #4
 80036a4:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80036a8:	2319      	movs	r3, #25
 80036aa:	220d      	movs	r2, #13
 80036ac:	9300      	str	r3, [sp, #0]
 80036ae:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80036b2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80036b6:	f7fe ff0f 	bl	80024d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80036ba:	4809      	ldr	r0, [pc, #36]	@ (80036e0 <_Z23getFont_verdana_25_4bppv+0x70>)
 80036bc:	f01e f9a8 	bl	8021a10 <atexit>
 80036c0:	4628      	mov	r0, r5
 80036c2:	f01d fc2b 	bl	8020f1c <__cxa_guard_release>
    return verdana_25_4bpp;
}
 80036c6:	4804      	ldr	r0, [pc, #16]	@ (80036d8 <_Z23getFont_verdana_25_4bppv+0x68>)
 80036c8:	b00f      	add	sp, #60	@ 0x3c
 80036ca:	bd30      	pop	{r4, r5, pc}
 80036cc:	20003768 	.word	0x20003768
 80036d0:	90060380 	.word	0x90060380
 80036d4:	080251d8 	.word	0x080251d8
 80036d8:	2000376c 	.word	0x2000376c
 80036dc:	080251e0 	.word	0x080251e0
 80036e0:	0800366d 	.word	0x0800366d

080036e4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 80036e4:	2000      	movs	r0, #0
 80036e6:	4770      	bx	lr

080036e8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 80036e8:	2000      	movs	r0, #0
 80036ea:	4770      	bx	lr

080036ec <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80036ec:	b40e      	push	{r1, r2, r3}
 80036ee:	b503      	push	{r0, r1, lr}
 80036f0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80036f2:	2100      	movs	r1, #0
{
 80036f4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80036f8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80036fa:	f00d fad7 	bl	8010cac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80036fe:	b002      	add	sp, #8
 8003700:	f85d eb04 	ldr.w	lr, [sp], #4
 8003704:	b003      	add	sp, #12
 8003706:	4770      	bx	lr

08003708 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003708:	b40c      	push	{r2, r3}
 800370a:	b507      	push	{r0, r1, r2, lr}
 800370c:	ab04      	add	r3, sp, #16
 800370e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003712:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003714:	f00d faca 	bl	8010cac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003718:	b003      	add	sp, #12
 800371a:	f85d eb04 	ldr.w	lr, [sp], #4
 800371e:	b002      	add	sp, #8
 8003720:	4770      	bx	lr
	...

08003724 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003724:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8003726:	b510      	push	{r4, lr}
 8003728:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800372a:	b373      	cbz	r3, 800378a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800372c:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 800372e:	b92b      	cbnz	r3, 800373c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003730:	4b18      	ldr	r3, [pc, #96]	@ (8003794 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8003732:	21c5      	movs	r1, #197	@ 0xc5
 8003734:	4a18      	ldr	r2, [pc, #96]	@ (8003798 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8003736:	4819      	ldr	r0, [pc, #100]	@ (800379c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8003738:	f01e f94c 	bl	80219d4 <__assert_func>
            return buffer[pos];
 800373c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800373e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8003742:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8003744:	b30b      	cbz	r3, 800378a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8003746:	f00e fe15 	bl	8012374 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800374a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800374c:	2b01      	cmp	r3, #1
 800374e:	d803      	bhi.n	8003758 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003750:	4b13      	ldr	r3, [pc, #76]	@ (80037a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8003752:	21cb      	movs	r1, #203	@ 0xcb
 8003754:	4a13      	ldr	r2, [pc, #76]	@ (80037a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8003756:	e7ee      	b.n	8003736 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8003758:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800375a:	f640 103f 	movw	r0, #2367	@ 0x93f
 800375e:	1c53      	adds	r3, r2, #1
 8003760:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8003762:	2b09      	cmp	r3, #9
 8003764:	4619      	mov	r1, r3
 8003766:	bf88      	it	hi
 8003768:	f1a3 010a 	subhi.w	r1, r3, #10
 800376c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8003770:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8003772:	4281      	cmp	r1, r0
 8003774:	d109      	bne.n	800378a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8003776:	2b0a      	cmp	r3, #10
 8003778:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800377c:	bf28      	it	cs
 800377e:	2300      	movcs	r3, #0
            return buffer[pos];
 8003780:	8c50      	ldrh	r0, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003782:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8003786:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8003788:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800378a:	4620      	mov	r0, r4
}
 800378c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003790:	f00e bcf2 	b.w	8012178 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003794:	08023ce4 	.word	0x08023ce4
 8003798:	08023ced 	.word	0x08023ced
 800379c:	08023d98 	.word	0x08023d98
 80037a0:	08023de2 	.word	0x08023de2
 80037a4:	08023df0 	.word	0x08023df0

080037a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80037a8:	f00e bcaf 	b.w	801210a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080037ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80037ac:	b510      	push	{r4, lr}
 80037ae:	b086      	sub	sp, #24
 80037b0:	ac02      	add	r4, sp, #8
 80037b2:	e884 0006 	stmia.w	r4, {r1, r2}
 80037b6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80037b8:	ab0a      	add	r3, sp, #40	@ 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80037ba:	4621      	mov	r1, r4
    va_start(pArg, format);
 80037bc:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80037be:	9301      	str	r3, [sp, #4]
 80037c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80037c2:	9300      	str	r3, [sp, #0]
 80037c4:	9b08      	ldr	r3, [sp, #32]
 80037c6:	f00b ff07 	bl	800f5d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80037ca:	b006      	add	sp, #24
 80037cc:	bd10      	pop	{r4, pc}
	...

080037d0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80037d0:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80037d2:	bb18      	cbnz	r0, 800381c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80037d4:	4b12      	ldr	r3, [pc, #72]	@ (8003820 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80037d6:	4813      	ldr	r0, [pc, #76]	@ (8003824 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80037d8:	681c      	ldr	r4, [r3, #0]
 80037da:	4913      	ldr	r1, [pc, #76]	@ (8003828 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80037dc:	b1b4      	cbz	r4, 800380c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80037de:	6822      	ldr	r2, [r4, #0]
 80037e0:	4422      	add	r2, r4
 80037e2:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80037e4:	6862      	ldr	r2, [r4, #4]
 80037e6:	4422      	add	r2, r4
 80037e8:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80037ea:	68a2      	ldr	r2, [r4, #8]
 80037ec:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80037ee:	4b0f      	ldr	r3, [pc, #60]	@ (800382c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80037f0:	2200      	movs	r2, #0
 80037f2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80037f4:	f000 f838 	bl	8003868 <_ZN17TypedTextDatabase8getFontsEv>
 80037f8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80037fa:	f000 f833 	bl	8003864 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80037fe:	4b0c      	ldr	r3, [pc, #48]	@ (8003830 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003800:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003802:	4b0c      	ldr	r3, [pc, #48]	@ (8003834 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003804:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003806:	4b0c      	ldr	r3, [pc, #48]	@ (8003838 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003808:	8018      	strh	r0, [r3, #0]
    }
}
 800380a:	e007      	b.n	800381c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800380c:	4b0b      	ldr	r3, [pc, #44]	@ (800383c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800380e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003810:	4b0b      	ldr	r3, [pc, #44]	@ (8003840 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003812:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003814:	4b0b      	ldr	r3, [pc, #44]	@ (8003844 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003816:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003818:	2c00      	cmp	r4, #0
 800381a:	d1e8      	bne.n	80037ee <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800381c:	bd38      	pop	{r3, r4, r5, pc}
 800381e:	bf00      	nop
 8003820:	200037a4 	.word	0x200037a4
 8003824:	2000379c 	.word	0x2000379c
 8003828:	20003798 	.word	0x20003798
 800382c:	200037a0 	.word	0x200037a0
 8003830:	20016bcc 	.word	0x20016bcc
 8003834:	20016bd4 	.word	0x20016bd4
 8003838:	20016bd0 	.word	0x20016bd0
 800383c:	90060444 	.word	0x90060444
 8003840:	90060438 	.word	0x90060438
 8003844:	90060450 	.word	0x90060450

08003848 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8003848:	4b04      	ldr	r3, [pc, #16]	@ (800385c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8003850:	4b03      	ldr	r3, [pc, #12]	@ (8003860 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8003852:	681b      	ldr	r3, [r3, #0]
}
 8003854:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003858:	4770      	bx	lr
 800385a:	bf00      	nop
 800385c:	20003798 	.word	0x20003798
 8003860:	2000379c 	.word	0x2000379c

08003864 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003864:	2003      	movs	r0, #3
 8003866:	4770      	bx	lr

08003868 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003868:	4800      	ldr	r0, [pc, #0]	@ (800386c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800386a:	4770      	bx	lr
 800386c:	200037a8 	.word	0x200037a8

08003870 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 1:
        touchgfx_fonts[1] = &(getFont_verdana_25_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003870:	b510      	push	{r4, lr}
};
 8003872:	4c04      	ldr	r4, [pc, #16]	@ (8003884 <_GLOBAL__sub_I_touchgfx_fonts+0x14>)
    &(getFont_NotoSans_Regular_12_4bpp()),
 8003874:	f7ff febe 	bl	80035f4 <_Z32getFont_NotoSans_Regular_12_4bppv>
};
 8003878:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_25_4bpp())
 800387a:	f7ff fef9 	bl	8003670 <_Z23getFont_verdana_25_4bppv>
};
 800387e:	6060      	str	r0, [r4, #4]
} // namespace TypedTextDatabase
 8003880:	bd10      	pop	{r4, pc}
 8003882:	bf00      	nop
 8003884:	200037a8 	.word	0x200037a8

08003888 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003888:	4770      	bx	lr

0800388a <_ZN19FrontendApplicationD0Ev>:
 800388a:	b510      	push	{r4, lr}
 800388c:	4604      	mov	r4, r0
 800388e:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003892:	f01d fb35 	bl	8020f00 <_ZdlPvj>
 8003896:	4620      	mov	r0, r4
 8003898:	bd10      	pop	{r4, pc}

0800389a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800389a:	b510      	push	{r4, lr}
 800389c:	4604      	mov	r4, r0
    {
        model.tick();
 800389e:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 80038a2:	f000 f940 	bl	8003b26 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80038a6:	4620      	mov	r0, r4
    }
 80038a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80038ac:	f00c bb32 	b.w	800ff14 <_ZN8touchgfx11Application15handleTickEventEv>

080038b0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80038b0:	b510      	push	{r4, lr}
 80038b2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80038b4:	f7fe fd9e 	bl	80023f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80038b8:	4b01      	ldr	r3, [pc, #4]	@ (80038c0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 80038ba:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 80038bc:	6023      	str	r3, [r4, #0]
}
 80038be:	bd10      	pop	{r4, pc}
 80038c0:	08023ecc 	.word	0x08023ecc

080038c4 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 80038c4:	4770      	bx	lr

080038c6 <_ZThn4_N13MainPresenterD1Ev>:
 80038c6:	3804      	subs	r0, #4
 80038c8:	4770      	bx	lr

080038ca <_ZN13MainPresenter10deactivateEv>:
}

void MainPresenter::activate()
{

}
 80038ca:	4770      	bx	lr

080038cc <_ZN13MainPresenterD0Ev>:
 80038cc:	b510      	push	{r4, lr}
 80038ce:	4604      	mov	r4, r0
 80038d0:	2110      	movs	r1, #16
 80038d2:	f01d fb15 	bl	8020f00 <_ZdlPvj>
 80038d6:	4620      	mov	r0, r4
 80038d8:	bd10      	pop	{r4, pc}

080038da <_ZThn4_N13MainPresenterD0Ev>:
 80038da:	f1a0 0004 	sub.w	r0, r0, #4
 80038de:	e7f5      	b.n	80038cc <_ZN13MainPresenterD0Ev>

080038e0 <_ZN13MainPresenter9con_sh_bcEv>:

}

void MainPresenter::con_sh_bc()
{
	model->push_button();
 80038e0:	6880      	ldr	r0, [r0, #8]
 80038e2:	f000 b921 	b.w	8003b28 <_ZN5Model11push_buttonEv>
	...

080038e8 <_ZN13MainPresenter4tickEv>:
}

void MainPresenter::tick()
{
 80038e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t i = prev_bt_index;
 80038ec:	4e1b      	ldr	r6, [pc, #108]	@ (800395c <_ZN13MainPresenter4tickEv+0x74>)
    while(bt.rx_buffer[prev_bt_index]!='S')
 80038ee:	2100      	movs	r1, #0
    {
    	if(prev_bt_index>bt.rx_index){prev_bt_index = 0 ; return;}
 80038f0:	4d1b      	ldr	r5, [pc, #108]	@ (8003960 <_ZN13MainPresenter4tickEv+0x78>)
    uint16_t i = prev_bt_index;
 80038f2:	8834      	ldrh	r4, [r6, #0]
    	if(prev_bt_index>bt.rx_index){prev_bt_index = 0 ; return;}
 80038f4:	f8b5 2104 	ldrh.w	r2, [r5, #260]	@ 0x104
    while(bt.rx_buffer[prev_bt_index]!='S')
 80038f8:	4623      	mov	r3, r4
 80038fa:	18e8      	adds	r0, r5, r3
 80038fc:	7900      	ldrb	r0, [r0, #4]
 80038fe:	2853      	cmp	r0, #83	@ 0x53
 8003900:	d122      	bne.n	8003948 <_ZN13MainPresenter4tickEv+0x60>
 8003902:	b101      	cbz	r1, 8003906 <_ZN13MainPresenter4tickEv+0x1e>
 8003904:	8033      	strh	r3, [r6, #0]
    	prev_bt_index++;
    }
    // Ensure prev_bt_index is less than bt.rx_index
    if (prev_bt_index < bt.rx_index) {
 8003906:	429a      	cmp	r2, r3
 8003908:	d922      	bls.n	8003950 <_ZN13MainPresenter4tickEv+0x68>
        // Check if there are at least 8 characters available ("S1xxxx\r\n")
        if ((bt.rx_index - i) >= 8 && strncmp((char*)bt.rx_buffer + i, "S1", 2) == 0) {
 800390a:	1b12      	subs	r2, r2, r4
 800390c:	2a07      	cmp	r2, #7
 800390e:	dd1f      	ble.n	8003950 <_ZN13MainPresenter4tickEv+0x68>
 8003910:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 800396c <_ZN13MainPresenter4tickEv+0x84>
 8003914:	2202      	movs	r2, #2
 8003916:	4913      	ldr	r1, [pc, #76]	@ (8003964 <_ZN13MainPresenter4tickEv+0x7c>)
 8003918:	eb08 0004 	add.w	r0, r8, r4
 800391c:	f01e fafe 	bl	8021f1c <strncmp>
 8003920:	4607      	mov	r7, r0
 8003922:	b9a8      	cbnz	r0, 8003950 <_ZN13MainPresenter4tickEv+0x68>
            // Check for the terminating '\r\n' characters
            if (bt.rx_buffer[i + 6] == '\r' && bt.rx_buffer[i + 7] == '\n') {
 8003924:	4425      	add	r5, r4
 8003926:	7aab      	ldrb	r3, [r5, #10]
 8003928:	2b0d      	cmp	r3, #13
 800392a:	d111      	bne.n	8003950 <_ZN13MainPresenter4tickEv+0x68>
 800392c:	7aeb      	ldrb	r3, [r5, #11]
 800392e:	2b0a      	cmp	r3, #10
 8003930:	d10e      	bne.n	8003950 <_ZN13MainPresenter4tickEv+0x68>
                strncpy(sensor1, (char*)bt.rx_buffer + i + 2, 4);
 8003932:	1ca1      	adds	r1, r4, #2
 8003934:	4b0c      	ldr	r3, [pc, #48]	@ (8003968 <_ZN13MainPresenter4tickEv+0x80>)
                // Null terminate the destination string
                sensor1[4] = '\0';
                // Update prev_bt_index to point after the '\r\n' characters
                prev_bt_index = i + 8;
 8003936:	3408      	adds	r4, #8
                strncpy(sensor1, (char*)bt.rx_buffer + i + 2, 4);
 8003938:	2204      	movs	r2, #4
 800393a:	4441      	add	r1, r8
 800393c:	4618      	mov	r0, r3
 800393e:	f01e faff 	bl	8021f40 <strncpy>
                prev_bt_index = i + 8;
 8003942:	8034      	strh	r4, [r6, #0]
                sensor1[4] = '\0';
 8003944:	7107      	strb	r7, [r0, #4]
                prev_bt_index = i + 8;
 8003946:	e003      	b.n	8003950 <_ZN13MainPresenter4tickEv+0x68>
    	if(prev_bt_index>bt.rx_index){prev_bt_index = 0 ; return;}
 8003948:	429a      	cmp	r2, r3
 800394a:	d203      	bcs.n	8003954 <_ZN13MainPresenter4tickEv+0x6c>
 800394c:	2300      	movs	r3, #0
 800394e:	8033      	strh	r3, [r6, #0]
            }
        }
    }
}
 8003950:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    	prev_bt_index++;
 8003954:	3301      	adds	r3, #1
 8003956:	2101      	movs	r1, #1
 8003958:	b29b      	uxth	r3, r3
 800395a:	e7ce      	b.n	80038fa <_ZN13MainPresenter4tickEv+0x12>
 800395c:	200037b6 	.word	0x200037b6
 8003960:	200037bc 	.word	0x200037bc
 8003964:	08023f18 	.word	0x08023f18
 8003968:	200037b0 	.word	0x200037b0
 800396c:	200037c0 	.word	0x200037c0

08003970 <_ZN13MainPresenterC1ER8MainView>:
    ModelListener() : model(0) {}
 8003970:	2200      	movs	r2, #0
    : view(v)
 8003972:	60c1      	str	r1, [r0, #12]
 8003974:	6082      	str	r2, [r0, #8]
 8003976:	4a02      	ldr	r2, [pc, #8]	@ (8003980 <_ZN13MainPresenterC1ER8MainView+0x10>)
 8003978:	6002      	str	r2, [r0, #0]
 800397a:	3220      	adds	r2, #32
 800397c:	6042      	str	r2, [r0, #4]
}
 800397e:	4770      	bx	lr
 8003980:	08023f24 	.word	0x08023f24

08003984 <_ZN8MainView14tearDownScreenEv>:
}

void MainView::tearDownScreen()
{
    MainViewBase::tearDownScreen();
}
 8003984:	4770      	bx	lr

08003986 <_ZN8MainView10send_helloEv>:
    graphMajorYAxisGrid.invalidate();
}

void MainView::send_hello()
{
	presenter->con_sh_bc();
 8003986:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8003988:	6803      	ldr	r3, [r0, #0]
 800398a:	695b      	ldr	r3, [r3, #20]
 800398c:	4718      	bx	r3
	...

08003990 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    virtual ~MainView() {}
 8003990:	4b03      	ldr	r3, [pc, #12]	@ (80039a0 <_ZN8MainViewD1Ev+0x10>)
 8003992:	b510      	push	{r4, lr}
 8003994:	4604      	mov	r4, r0
 8003996:	6003      	str	r3, [r0, #0]
 8003998:	f7ff fa40 	bl	8002e1c <_ZN12MainViewBaseD1Ev>
 800399c:	4620      	mov	r0, r4
 800399e:	bd10      	pop	{r4, pc}
 80039a0:	08023f54 	.word	0x08023f54

080039a4 <_ZN8MainViewD0Ev>:
 80039a4:	b510      	push	{r4, lr}
 80039a6:	4604      	mov	r4, r0
 80039a8:	f7ff fff2 	bl	8003990 <_ZN8MainViewD1Ev>
 80039ac:	f242 2190 	movw	r1, #8848	@ 0x2290
 80039b0:	4620      	mov	r0, r4
 80039b2:	f01d faa5 	bl	8020f00 <_ZdlPvj>
 80039b6:	4620      	mov	r0, r4
 80039b8:	bd10      	pop	{r4, pc}
	...

080039bc <_ZN8MainView15handleTickEventEv>:
{
 80039bc:	b570      	push	{r4, r5, r6, lr}
    tickCounter++;
 80039be:	f500 5500 	add.w	r5, r0, #8192	@ 0x2000
{
 80039c2:	4604      	mov	r4, r0
    presenter->tick();
 80039c4:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
    tickCounter++;
 80039c6:	f8d5 328c 	ldr.w	r3, [r5, #652]	@ 0x28c
 80039ca:	3301      	adds	r3, #1
{
 80039cc:	ed2d 8b02 	vpush	{d8}
    tickCounter++;
 80039d0:	f8c5 328c 	str.w	r3, [r5, #652]	@ 0x28c
    presenter->tick();
 80039d4:	6803      	ldr	r3, [r0, #0]
 80039d6:	691b      	ldr	r3, [r3, #16]
 80039d8:	4798      	blx	r3
    if (tickCounter % 2 == 0)
 80039da:	f8d5 528c 	ldr.w	r5, [r5, #652]	@ 0x28c
 80039de:	07eb      	lsls	r3, r5, #31
 80039e0:	d447      	bmi.n	8003a72 <_ZN8MainView15handleTickEventEv+0xb6>
        return scaled2float(i, yScale);
 80039e2:	f8d4 6100 	ldr.w	r6, [r4, #256]	@ 0x100
        return (float)i / (float)scale;
 80039e6:	edd4 7a81 	vldr	s15, [r4, #516]	@ 0x204
 80039ea:	ee07 6a10 	vmov	s14, r6
 80039ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80039f2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80039f6:	ee87 8a87 	vdiv.f32	s16, s15, s14
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 80039fa:	ee07 5a90 	vmov	s15, r5
 80039fe:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003a02:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 8003a78 <_ZN8MainView15handleTickEventEv+0xbc>
 8003a06:	ee20 0a27 	vmul.f32	s0, s0, s15
 8003a0a:	f01d faa1 	bl	8020f50 <sinf>
 8003a0e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8003a12:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 8003a7c <_ZN8MainView15handleTickEventEv+0xc0>
    const uint16_t num = (seed * (1337 + last)) % 0xFFFF;
 8003a16:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8003a1a:	4919      	ldr	r1, [pc, #100]	@ (8003a80 <_ZN8MainView15handleTickEventEv+0xc4>)
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 8003a1c:	ee30 0a27 	vadd.f32	s0, s0, s15
    const uint16_t num = (seed * (1337 + last)) % 0xFFFF;
 8003a20:	880b      	ldrh	r3, [r1, #0]
 8003a22:	f203 5339 	addw	r3, r3, #1337	@ 0x539
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 8003a26:	eec8 7a07 	vdiv.f32	s15, s16, s14
    const uint16_t num = (seed * (1337 + last)) % 0xFFFF;
 8003a2a:	436b      	muls	r3, r5
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 8003a2c:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
    const uint16_t num = (seed * (1337 + last)) % 0xFFFF;
 8003a30:	fb93 f2f2 	sdiv	r2, r3, r2
 8003a34:	ebc2 4202 	rsb	r2, r2, r2, lsl #16
 8003a38:	1a9b      	subs	r3, r3, r2
 8003a3a:	800b      	strh	r3, [r1, #0]
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 8003a3c:	b29b      	uxth	r3, r3
 8003a3e:	ee20 0a27 	vmul.f32	s0, s0, s15
 8003a42:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003a46:	ee17 1a90 	vmov	r1, s15
 8003a4a:	eec8 7a07 	vdiv.f32	s15, s16, s14
}
 8003a4e:	ecbd 8b02 	vpop	{d8}
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 8003a52:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003a56:	ee17 2a90 	vmov	r2, s15
 8003a5a:	fb93 f0f2 	sdiv	r0, r3, r2
 8003a5e:	fb02 3310 	mls	r3, r2, r0, r3
        return addDataPointScaled(int2scaledY(y));
 8003a62:	f104 00cc 	add.w	r0, r4, #204	@ 0xcc
 8003a66:	4419      	add	r1, r3
 8003a68:	4371      	muls	r1, r6
}
 8003a6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003a6e:	f008 b9c6 	b.w	800bdfe <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
 8003a72:	ecbd 8b02 	vpop	{d8}
 8003a76:	bd70      	pop	{r4, r5, r6, pc}
 8003a78:	3ca3d70a 	.word	0x3ca3d70a
 8003a7c:	400ccccd 	.word	0x400ccccd
 8003a80:	200037b8 	.word	0x200037b8

08003a84 <_ZN8MainViewC1Ev>:
MainView::MainView()
 8003a84:	b510      	push	{r4, lr}
 8003a86:	4604      	mov	r4, r0
 8003a88:	f7ff fb68 	bl	800315c <_ZN12MainViewBaseC1Ev>
 8003a8c:	4b04      	ldr	r3, [pc, #16]	@ (8003aa0 <_ZN8MainViewC1Ev+0x1c>)
    tickCounter = 0;
 8003a8e:	2200      	movs	r2, #0
}
 8003a90:	4620      	mov	r0, r4
MainView::MainView()
 8003a92:	6023      	str	r3, [r4, #0]
    tickCounter = 0;
 8003a94:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 8003a98:	f8c3 228c 	str.w	r2, [r3, #652]	@ 0x28c
}
 8003a9c:	bd10      	pop	{r4, pc}
 8003a9e:	bf00      	nop
 8003aa0:	08023f54 	.word	0x08023f54

08003aa4 <_ZN8MainView11setupScreenEv>:
{
 8003aa4:	b510      	push	{r4, lr}
 8003aa6:	4604      	mov	r4, r0
    MainViewBase::setupScreen();
 8003aa8:	f7ff f94a 	bl	8002d40 <_ZN12MainViewBase11setupScreenEv>
    sliderValueChanged(sliderResolution.getValue());
 8003aac:	6823      	ldr	r3, [r4, #0]
 8003aae:	4620      	mov	r0, r4
 8003ab0:	f9b4 14f2 	ldrsh.w	r1, [r4, #1266]	@ 0x4f2
 8003ab4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
}
 8003ab6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sliderValueChanged(sliderResolution.getValue());
 8003aba:	4718      	bx	r3

08003abc <_ZN8MainView18sliderValueChangedEi>:
{
 8003abc:	b570      	push	{r4, r5, r6, lr}
        return i * scale;
 8003abe:	f8d0 2100 	ldr.w	r2, [r0, #256]	@ 0x100
    graph.setGraphRangeY(0, value);
 8003ac2:	f100 06cc 	add.w	r6, r0, #204	@ 0xcc
{
 8003ac6:	4604      	mov	r4, r0
 8003ac8:	460d      	mov	r5, r1
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8003aca:	434a      	muls	r2, r1
 8003acc:	4630      	mov	r0, r6
 8003ace:	2100      	movs	r1, #0
 8003ad0:	f007 fd84 	bl	800b5dc <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>
    graph.invalidate();
 8003ad4:	4630      	mov	r0, r6
 8003ad6:	f00d fa14 	bl	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (value > 199)
 8003ada:	2dc7      	cmp	r5, #199	@ 0xc7
 8003adc:	f8d4 3464 	ldr.w	r3, [r4, #1124]	@ 0x464
 8003ae0:	f8d4 23d8 	ldr.w	r2, [r4, #984]	@ 0x3d8
 8003ae4:	dd17      	ble.n	8003b16 <_ZN8MainView18sliderValueChangedEi+0x5a>
        return i * scale;
 8003ae6:	2132      	movs	r1, #50	@ 0x32
 8003ae8:	434b      	muls	r3, r1
    graphMajorYAxisLabel.invalidate();
 8003aea:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 8003aee:	2b00      	cmp	r3, #0
 8003af0:	bfb8      	it	lt
 8003af2:	425b      	neglt	r3, r3
        labelInterval = abs(interval);
 8003af4:	f8c4 3468 	str.w	r3, [r4, #1128]	@ 0x468
        setIntervalScaled(abs(interval) * dataScale);
 8003af8:	fb01 f302 	mul.w	r3, r1, r2
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	bfb8      	it	lt
 8003b00:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 8003b02:	f8c4 33dc 	str.w	r3, [r4, #988]	@ 0x3dc
 8003b06:	f007 fcdd 	bl	800b4c4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    graphMajorYAxisGrid.invalidate();
 8003b0a:	f504 706a 	add.w	r0, r4, #936	@ 0x3a8
}
 8003b0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    graphMajorYAxisGrid.invalidate();
 8003b12:	f007 bcd7 	b.w	800b4c4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    else if (value > 100)
 8003b16:	2d64      	cmp	r5, #100	@ 0x64
 8003b18:	bfcc      	ite	gt
 8003b1a:	2114      	movgt	r1, #20
 8003b1c:	210a      	movle	r1, #10
 8003b1e:	e7e3      	b.n	8003ae8 <_ZN8MainView18sliderValueChangedEi+0x2c>

08003b20 <_ZN5ModelC1Ev>:
#include <gui/model/ModelListener.hpp>
#include "bluetoothinterface.h"

extern void push_bt_button(void);

Model::Model() : modelListener(0)
 8003b20:	2200      	movs	r2, #0
 8003b22:	6002      	str	r2, [r0, #0]
{

}
 8003b24:	4770      	bx	lr

08003b26 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003b26:	4770      	bx	lr

08003b28 <_ZN5Model11push_buttonEv>:

void Model::push_button()
{
	push_bt_button();
 8003b28:	f7fd b86a 	b.w	8000c00 <_Z14push_bt_buttonv>

08003b2c <Bluetooth_init>:
#include "cmsis_os.h"
#include <stdlib.h> // malloc과 free를 사용하기 위한 헤더 파일

Bluetooth bt;

void Bluetooth_init(Bluetooth* bt, UART_HandleTypeDef* huart, void (*rx_callback)(uint8_t* data, uint16_t size), void (*tx_callback)(void)) {
 8003b2c:	b570      	push	{r4, r5, r6, lr}
 8003b2e:	4605      	mov	r5, r0
    bt->rx_index = 0;
 8003b30:	2400      	movs	r4, #0
    bt->huart = huart;
    bt->bluetooth_rx_callback = rx_callback;
    bt->bluetooth_tx_callback = tx_callback;
    bt->tx_complete = 1; // 전송 완료 플래그 초기화
 8003b32:	2601      	movs	r6, #1
void Bluetooth_init(Bluetooth* bt, UART_HandleTypeDef* huart, void (*rx_callback)(uint8_t* data, uint16_t size), void (*tx_callback)(void)) {
 8003b34:	4608      	mov	r0, r1
    bt->huart = huart;
 8003b36:	6029      	str	r1, [r5, #0]
    bt->rx_index = 0;
 8003b38:	f8a5 4104 	strh.w	r4, [r5, #260]	@ 0x104
    bt->tx_complete = 1; // 전송 완료 플래그 초기화
 8003b3c:	f885 6106 	strb.w	r6, [r5, #262]	@ 0x106
    bt->bluetooth_tx_callback = tx_callback;
 8003b40:	e9c5 2342 	strd	r2, r3, [r5, #264]	@ 0x108

    // UART 초기화 코드
    huart->Instance = UART7;
    huart->Init.BaudRate = 9600;
 8003b44:	4a0b      	ldr	r2, [pc, #44]	@ (8003b74 <Bluetooth_init+0x48>)
 8003b46:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
    huart->Init.WordLength = UART_WORDLENGTH_8B;
    huart->Init.StopBits = UART_STOPBITS_1;
    huart->Init.Parity = UART_PARITY_NONE;
 8003b4a:	610c      	str	r4, [r1, #16]
    huart->Init.Mode = UART_MODE_TX_RX;
    huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
    huart->Init.OverSampling = UART_OVERSAMPLING_16;
 8003b4c:	61cc      	str	r4, [r1, #28]
    huart->Init.BaudRate = 9600;
 8003b4e:	e9c1 2300 	strd	r2, r3, [r1]
    huart->Init.Mode = UART_MODE_TX_RX;
 8003b52:	230c      	movs	r3, #12
    huart->Init.StopBits = UART_STOPBITS_1;
 8003b54:	e9c1 4402 	strd	r4, r4, [r1, #8]
    huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003b58:	e9c1 3405 	strd	r3, r4, [r1, #20]
    if (HAL_UART_Init(huart) != HAL_OK) {
 8003b5c:	f003 fb18 	bl	8007190 <HAL_UART_Init>
        // 초기화 오류 처리
        // 오류 처리 코드 추가
    }

    // UART 인터럽트 활성화
    HAL_NVIC_SetPriority(UART7_IRQn, 0, 1);
 8003b60:	4632      	mov	r2, r6
 8003b62:	4621      	mov	r1, r4
 8003b64:	2052      	movs	r0, #82	@ 0x52
 8003b66:	f000 fb23 	bl	80041b0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART7_IRQn);
 8003b6a:	2052      	movs	r0, #82	@ 0x52

    // 첫 수신 인터럽트 시작
    //HAL_UART_Receive_IT(huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
}
 8003b6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(UART7_IRQn);
 8003b70:	f000 bb50 	b.w	8004214 <HAL_NVIC_EnableIRQ>
 8003b74:	40007800 	.word	0x40007800

08003b78 <Bluetooth_write_data>:


void Bluetooth_write_data(Bluetooth* bt, uint8_t* data, uint16_t size) {
 8003b78:	b508      	push	{r3, lr}
    bt->tx_complete = 0; // 전송 완료 플래그 초기화
 8003b7a:	2300      	movs	r3, #0
 8003b7c:	f880 3106 	strb.w	r3, [r0, #262]	@ 0x106
#if 0
    if (HAL_UART_Transmit_IT(bt->huart, data, size) != HAL_OK) {
#else
    if (HAL_UART_Transmit(bt->huart, data, size, -1) != HAL_OK) {
 8003b80:	f04f 33ff 	mov.w	r3, #4294967295
 8003b84:	6800      	ldr	r0, [r0, #0]
 8003b86:	f003 fa90 	bl	80070aa <HAL_UART_Transmit>
 8003b8a:	b100      	cbz	r0, 8003b8e <Bluetooth_write_data+0x16>
#endif
        // 전송 오류 처리
        	while(1){
 8003b8c:	e7fe      	b.n	8003b8c <Bluetooth_write_data+0x14>
            // 오류 처리 루프
        	}
    }

}
 8003b8e:	bd08      	pop	{r3, pc}

08003b90 <Bluetooth_handle_rx_interrupt>:
// 전송 완료 콜백 함수


void Bluetooth_handle_rx_interrupt(Bluetooth* bt) {
    // 버퍼 오버플로 방지
    if (bt->rx_index >= sizeof(bt->rx_buffer)) {
 8003b90:	f8b0 3104 	ldrh.w	r3, [r0, #260]	@ 0x104
        bt->rx_index = 0;
    }
    bt->rx_index++;
    // 다음 수신을 위한 인터럽트 설정
    HAL_UART_Receive_IT(bt->huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
 8003b94:	2201      	movs	r2, #1
    if (bt->rx_index >= sizeof(bt->rx_buffer)) {
 8003b96:	2bff      	cmp	r3, #255	@ 0xff
        bt->rx_index = 0;
 8003b98:	bf88      	it	hi
 8003b9a:	2300      	movhi	r3, #0
void Bluetooth_handle_rx_interrupt(Bluetooth* bt) {
 8003b9c:	b510      	push	{r4, lr}
        bt->rx_index = 0;
 8003b9e:	bf88      	it	hi
 8003ba0:	f8a0 3104 	strhhi.w	r3, [r0, #260]	@ 0x104
void Bluetooth_handle_rx_interrupt(Bluetooth* bt) {
 8003ba4:	4604      	mov	r4, r0
    bt->rx_index++;
 8003ba6:	f8b0 1104 	ldrh.w	r1, [r0, #260]	@ 0x104
 8003baa:	3101      	adds	r1, #1
 8003bac:	b289      	uxth	r1, r1
 8003bae:	f8a0 1104 	strh.w	r1, [r0, #260]	@ 0x104
    HAL_UART_Receive_IT(bt->huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
 8003bb2:	3104      	adds	r1, #4
 8003bb4:	4401      	add	r1, r0
 8003bb6:	6800      	ldr	r0, [r0, #0]
 8003bb8:	f003 fb72 	bl	80072a0 <HAL_UART_Receive_IT>


    // 수신된 문자가 '\n'일 경우, 이전 문자가 '\r'인지 확인
    if (bt->rx_buffer[bt->rx_index - 1] == '\n' && bt->rx_buffer[bt->rx_index - 2] == '\r') {
 8003bbc:	f8b4 1104 	ldrh.w	r1, [r4, #260]	@ 0x104
 8003bc0:	1863      	adds	r3, r4, r1
 8003bc2:	78da      	ldrb	r2, [r3, #3]
 8003bc4:	2a0a      	cmp	r2, #10
 8003bc6:	d10a      	bne.n	8003bde <Bluetooth_handle_rx_interrupt+0x4e>
 8003bc8:	789b      	ldrb	r3, [r3, #2]
 8003bca:	2b0d      	cmp	r3, #13
 8003bcc:	d107      	bne.n	8003bde <Bluetooth_handle_rx_interrupt+0x4e>
        // 수신된 데이터를 콜백으로 전달
        if (bt->bluetooth_rx_callback) {
 8003bce:	f8d4 3108 	ldr.w	r3, [r4, #264]	@ 0x108
 8003bd2:	b10b      	cbz	r3, 8003bd8 <Bluetooth_handle_rx_interrupt+0x48>
            bt->bluetooth_rx_callback(bt->rx_buffer, bt->rx_index);
 8003bd4:	1d20      	adds	r0, r4, #4
 8003bd6:	4798      	blx	r3
        }
        bt->rx_index = 0;
 8003bd8:	2300      	movs	r3, #0
 8003bda:	f8a4 3104 	strh.w	r3, [r4, #260]	@ 0x104
    }
}
 8003bde:	bd10      	pop	{r4, pc}

08003be0 <UART7_IRQHandler>:

void UART7_IRQHandler(void) {
    HAL_UART_IRQHandler(bt.huart);
 8003be0:	4b01      	ldr	r3, [pc, #4]	@ (8003be8 <UART7_IRQHandler+0x8>)
 8003be2:	6818      	ldr	r0, [r3, #0]
 8003be4:	f002 beaa 	b.w	800693c <HAL_UART_IRQHandler>
 8003be8:	200037bc 	.word	0x200037bc

08003bec <QSPI_AutoPollingMemReady.constprop.0>:
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout
  * @retval None
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003bec:	b500      	push	{lr}
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003bee:	f44f 7280 	mov.w	r2, #256	@ 0x100
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003bf2:	b095      	sub	sp, #84	@ 0x54
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003bf4:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003bf8:	4603      	mov	r3, r0
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003bfa:	920c      	str	r2, [sp, #48]	@ 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8003bfc:	2205      	movs	r2, #5
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003bfe:	910f      	str	r1, [sp, #60]	@ 0x3c
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8003c00:	2101      	movs	r1, #1
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8003c02:	9206      	str	r2, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003c04:	2200      	movs	r2, #0
  s_config.Mask            = N25Q128A_SR_WIP;
 8003c06:	9101      	str	r1, [sp, #4]
  s_command.DummyCycles       = 0;
 8003c08:	920b      	str	r2, [sp, #44]	@ 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003c0a:	9213      	str	r2, [sp, #76]	@ 0x4c
  s_config.Match           = 0;
 8003c0c:	9200      	str	r2, [sp, #0]
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
  s_config.Interval        = 0x10;
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003c0e:	480b      	ldr	r0, [pc, #44]	@ (8003c3c <QSPI_AutoPollingMemReady.constprop.0+0x50>)
  s_config.StatusBytesSize = 1;
 8003c10:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003c14:	e9cd 220d 	strd	r2, r2, [sp, #52]	@ 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003c18:	e9cd 2211 	strd	r2, r2, [sp, #68]	@ 0x44
  s_config.Interval        = 0x10;
 8003c1c:	2210      	movs	r2, #16
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003c1e:	a906      	add	r1, sp, #24
  s_config.Interval        = 0x10;
 8003c20:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003c22:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8003c26:	9205      	str	r2, [sp, #20]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003c28:	466a      	mov	r2, sp
 8003c2a:	f001 fd83 	bl	8005734 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8003c2e:	3800      	subs	r0, #0
 8003c30:	bf18      	it	ne
 8003c32:	2001      	movne	r0, #1
 8003c34:	b015      	add	sp, #84	@ 0x54
 8003c36:	f85d fb04 	ldr.w	pc, [sp], #4
 8003c3a:	bf00      	nop
 8003c3c:	200038cc 	.word	0x200038cc

08003c40 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8003c40:	b500      	push	{lr}
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003c42:	f44f 7380 	mov.w	r3, #256	@ 0x100
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8003c46:	b095      	sub	sp, #84	@ 0x54
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c48:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003c4c:	4817      	ldr	r0, [pc, #92]	@ (8003cac <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003c4e:	930c      	str	r3, [sp, #48]	@ 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8003c50:	2306      	movs	r3, #6
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c52:	a906      	add	r1, sp, #24
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8003c54:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003c56:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003c58:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
  s_command.DataMode          = QSPI_DATA_NONE;
 8003c5c:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.DummyCycles       = 0;
 8003c5e:	930b      	str	r3, [sp, #44]	@ 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003c60:	9313      	str	r3, [sp, #76]	@ 0x4c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003c62:	e9cd 3311 	strd	r3, r3, [sp, #68]	@ 0x44
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c66:	f001 fd20 	bl	80056aa <HAL_QSPI_Command>
 8003c6a:	b9e0      	cbnz	r0, 8003ca6 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8003c6c:	2302      	movs	r3, #2
  s_config.Interval        = 0x10;
 8003c6e:	2201      	movs	r2, #1
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8003c70:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8003c74:	9004      	str	r0, [sp, #16]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c76:	480d      	ldr	r0, [pc, #52]	@ (8003cac <QSPI_WriteEnable.constprop.0+0x6c>)
  s_config.Mask            = N25Q128A_SR_WREN;
 8003c78:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8003c7c:	2310      	movs	r3, #16
 8003c7e:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8003c82:	2305      	movs	r3, #5
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c84:	466a      	mov	r2, sp
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8003c86:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003c8a:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c8e:	a906      	add	r1, sp, #24
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003c90:	930f      	str	r3, [sp, #60]	@ 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c92:	f241 3388 	movw	r3, #5000	@ 0x1388
 8003c96:	f001 fd4d 	bl	8005734 <HAL_QSPI_AutoPolling>
 8003c9a:	3800      	subs	r0, #0
 8003c9c:	bf18      	it	ne
 8003c9e:	2001      	movne	r0, #1
}
 8003ca0:	b015      	add	sp, #84	@ 0x54
 8003ca2:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 8003ca6:	2001      	movs	r0, #1
 8003ca8:	e7fa      	b.n	8003ca0 <QSPI_WriteEnable.constprop.0+0x60>
 8003caa:	bf00      	nop
 8003cac:	200038cc 	.word	0x200038cc

08003cb0 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8003cb0:	b500      	push	{lr}
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003cb2:	f44f 7380 	mov.w	r3, #256	@ 0x100
{
 8003cb6:	b091      	sub	sp, #68	@ 0x44
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8003cb8:	f04f 7240 	mov.w	r2, #50331648	@ 0x3000000
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003cbc:	480e      	ldr	r0, [pc, #56]	@ (8003cf8 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003cbe:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8003cc0:	23eb      	movs	r3, #235	@ 0xeb
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003cc2:	a902      	add	r1, sp, #8
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8003cc4:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8003cc6:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8003cca:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8003ccc:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8003cd0:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8003cd2:	2300      	movs	r3, #0
 8003cd4:	e9cd 320a 	strd	r3, r2, [sp, #40]	@ 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8003cd8:	220a      	movs	r2, #10
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003cda:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8003cdc:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003cde:	466a      	mov	r2, sp
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003ce0:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 8003ce4:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003ce8:	f001 fd75 	bl	80057d6 <HAL_QSPI_MemoryMapped>
}
 8003cec:	3800      	subs	r0, #0
 8003cee:	bf18      	it	ne
 8003cf0:	2001      	movne	r0, #1
 8003cf2:	b011      	add	sp, #68	@ 0x44
 8003cf4:	f85d fb04 	ldr.w	pc, [sp], #4
 8003cf8:	200038cc 	.word	0x200038cc

08003cfc <BSP_QSPI_MspInit>:
  QSPI_CLK_ENABLE();
 8003cfc:	4b45      	ldr	r3, [pc, #276]	@ (8003e14 <BSP_QSPI_MspInit+0x118>)
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8003cfe:	2101      	movs	r1, #1
  QSPI_CLK_ENABLE();
 8003d00:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8003d02:	f042 0202 	orr.w	r2, r2, #2
{
 8003d06:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPI_CLK_ENABLE();
 8003d08:	639a      	str	r2, [r3, #56]	@ 0x38
{
 8003d0a:	b08d      	sub	sp, #52	@ 0x34
  QSPI_CLK_ENABLE();
 8003d0c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8003d0e:	2409      	movs	r4, #9
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003d10:	4d41      	ldr	r5, [pc, #260]	@ (8003e18 <BSP_QSPI_MspInit+0x11c>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8003d12:	2704      	movs	r7, #4
  QSPI_CLK_ENABLE();
 8003d14:	f002 0202 	and.w	r2, r2, #2
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8003d18:	2600      	movs	r6, #0
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003d1a:	4628      	mov	r0, r5
  QSPI_CLK_ENABLE();
 8003d1c:	9200      	str	r2, [sp, #0]
 8003d1e:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8003d20:	699a      	ldr	r2, [r3, #24]
 8003d22:	f042 0202 	orr.w	r2, r2, #2
 8003d26:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003d28:	699a      	ldr	r2, [r3, #24]
 8003d2a:	f022 0202 	bic.w	r2, r2, #2
 8003d2e:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8003d30:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003d32:	f042 0202 	orr.w	r2, r2, #2
 8003d36:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d38:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003d3a:	f002 0202 	and.w	r2, r2, #2
 8003d3e:	9201      	str	r2, [sp, #4]
 8003d40:	9a01      	ldr	r2, [sp, #4]
  QSPI_CLK_GPIO_CLK_ENABLE();
 8003d42:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003d44:	f042 0202 	orr.w	r2, r2, #2
 8003d48:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d4a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003d4c:	f002 0202 	and.w	r2, r2, #2
 8003d50:	9202      	str	r2, [sp, #8]
 8003d52:	9a02      	ldr	r2, [sp, #8]
  QSPI_D0_GPIO_CLK_ENABLE();
 8003d54:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003d56:	f042 0208 	orr.w	r2, r2, #8
 8003d5a:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d5c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003d5e:	f002 0208 	and.w	r2, r2, #8
 8003d62:	9203      	str	r2, [sp, #12]
 8003d64:	9a03      	ldr	r2, [sp, #12]
  QSPI_D1_GPIO_CLK_ENABLE();
 8003d66:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003d68:	f042 0208 	orr.w	r2, r2, #8
 8003d6c:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d6e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003d70:	f002 0208 	and.w	r2, r2, #8
 8003d74:	9204      	str	r2, [sp, #16]
 8003d76:	9a04      	ldr	r2, [sp, #16]
  QSPI_D2_GPIO_CLK_ENABLE();
 8003d78:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003d7a:	f042 0210 	orr.w	r2, r2, #16
 8003d7e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d80:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003d82:	f002 0210 	and.w	r2, r2, #16
 8003d86:	9205      	str	r2, [sp, #20]
 8003d88:	9a05      	ldr	r2, [sp, #20]
  QSPI_D3_GPIO_CLK_ENABLE();
 8003d8a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003d8c:	f042 0208 	orr.w	r2, r2, #8
 8003d90:	631a      	str	r2, [r3, #48]	@ 0x30
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003d92:	2240      	movs	r2, #64	@ 0x40
  QSPI_D3_GPIO_CLK_ENABLE();
 8003d94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003d96:	f003 0308 	and.w	r3, r3, #8
 8003d9a:	9306      	str	r3, [sp, #24]
 8003d9c:	9b06      	ldr	r3, [sp, #24]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003d9e:	2302      	movs	r3, #2
 8003da0:	e9cd 2307 	strd	r2, r3, [sp, #28]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8003da4:	2303      	movs	r3, #3
 8003da6:	e9cd 1309 	strd	r1, r3, [sp, #36]	@ 0x24
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 8003daa:	230a      	movs	r3, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003dac:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 8003dae:	930b      	str	r3, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003db0:	f000 fc48 	bl	8004644 <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003db4:	a907      	add	r1, sp, #28
 8003db6:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8003db8:	9707      	str	r7, [sp, #28]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8003dba:	9609      	str	r6, [sp, #36]	@ 0x24
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8003dbc:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003dbe:	f000 fc41 	bl	8004644 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D0_PIN;
 8003dc2:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 8003dc6:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8003dc8:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 8003dca:	441d      	add	r5, r3
  gpio_init_structure.Pin       = QSPI_D0_PIN;
 8003dcc:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 8003dce:	4628      	mov	r0, r5
 8003dd0:	f000 fc38 	bl	8004644 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D1_PIN;
 8003dd4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  HAL_GPIO_Init(QSPI_D1_GPIO_PORT, &gpio_init_structure);
 8003dd8:	a907      	add	r1, sp, #28
 8003dda:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = QSPI_D1_PIN;
 8003ddc:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8003dde:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D1_GPIO_PORT, &gpio_init_structure);
 8003de0:	f000 fc30 	bl	8004644 <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_D2_GPIO_PORT, &gpio_init_structure);
 8003de4:	a907      	add	r1, sp, #28
 8003de6:	480d      	ldr	r0, [pc, #52]	@ (8003e1c <BSP_QSPI_MspInit+0x120>)
  gpio_init_structure.Pin       = QSPI_D2_PIN;
 8003de8:	9707      	str	r7, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8003dea:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D2_GPIO_PORT, &gpio_init_structure);
 8003dec:	f000 fc2a 	bl	8004644 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D3_PIN;
 8003df0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(QSPI_D3_GPIO_PORT, &gpio_init_structure);
 8003df4:	a907      	add	r1, sp, #28
 8003df6:	4628      	mov	r0, r5
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8003df8:	940b      	str	r4, [sp, #44]	@ 0x2c
  gpio_init_structure.Pin       = QSPI_D3_PIN;
 8003dfa:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(QSPI_D3_GPIO_PORT, &gpio_init_structure);
 8003dfc:	f000 fc22 	bl	8004644 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8003e00:	4632      	mov	r2, r6
 8003e02:	210f      	movs	r1, #15
 8003e04:	205c      	movs	r0, #92	@ 0x5c
 8003e06:	f000 f9d3 	bl	80041b0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8003e0a:	205c      	movs	r0, #92	@ 0x5c
 8003e0c:	f000 fa02 	bl	8004214 <HAL_NVIC_EnableIRQ>
}
 8003e10:	b00d      	add	sp, #52	@ 0x34
 8003e12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003e14:	40023800 	.word	0x40023800
 8003e18:	40020400 	.word	0x40020400
 8003e1c:	40021000 	.word	0x40021000

08003e20 <BSP_QSPI_Init>:
{ 
 8003e20:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8003e22:	4c49      	ldr	r4, [pc, #292]	@ (8003f48 <BSP_QSPI_Init+0x128>)
{ 
 8003e24:	b091      	sub	sp, #68	@ 0x44
  QSPIHandle.Instance = QUADSPI;
 8003e26:	4b49      	ldr	r3, [pc, #292]	@ (8003f4c <BSP_QSPI_Init+0x12c>)
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003e28:	4620      	mov	r0, r4
  QSPIHandle.Instance = QUADSPI;
 8003e2a:	6023      	str	r3, [r4, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003e2c:	f001 fc2a 	bl	8005684 <HAL_QSPI_DeInit>
 8003e30:	4605      	mov	r5, r0
 8003e32:	b110      	cbz	r0, 8003e3a <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8003e34:	2001      	movs	r0, #1
}
 8003e36:	b011      	add	sp, #68	@ 0x44
 8003e38:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8003e3a:	4601      	mov	r1, r0
 8003e3c:	4620      	mov	r0, r4
 8003e3e:	f7ff ff5d 	bl	8003cfc <BSP_QSPI_MspInit>
  QSPIHandle.Init.FifoThreshold      = 4;
 8003e42:	2601      	movs	r6, #1
 8003e44:	2304      	movs	r3, #4
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8003e46:	f04f 7780 	mov.w	r7, #16777216	@ 0x1000000
 8003e4a:	e9c4 6301 	strd	r6, r3, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003e4e:	2310      	movs	r3, #16
 8003e50:	60e3      	str	r3, [r4, #12]
 8003e52:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003e56:	fab3 f383 	clz	r3, r3
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003e5a:	4620      	mov	r0, r4
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003e5c:	3b01      	subs	r3, #1
 8003e5e:	6123      	str	r3, [r4, #16]
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE; /* Min 50ns for nonRead */
 8003e60:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8003e64:	e9c4 5507 	strd	r5, r5, [r4, #28]
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8003e68:	e9c4 3505 	strd	r3, r5, [r4, #20]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003e6c:	f001 fbb8 	bl	80055e0 <HAL_QSPI_Init>
 8003e70:	2800      	cmp	r0, #0
 8003e72:	d1df      	bne.n	8003e34 <BSP_QSPI_Init+0x14>
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003e74:	f44f 7580 	mov.w	r5, #256	@ 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003e78:	2366      	movs	r3, #102	@ 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8003e7a:	900b      	str	r0, [sp, #44]	@ 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e7c:	f241 3288 	movw	r2, #5000	@ 0x1388
  s_command.DummyCycles       = 0;
 8003e80:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e82:	a902      	add	r1, sp, #8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003e84:	900f      	str	r0, [sp, #60]	@ 0x3c
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003e86:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003e88:	9302      	str	r3, [sp, #8]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003e8a:	e9cd 0009 	strd	r0, r0, [sp, #36]	@ 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003e8e:	e9cd 000d 	strd	r0, r0, [sp, #52]	@ 0x34
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e92:	4620      	mov	r0, r4
 8003e94:	f001 fc09 	bl	80056aa <HAL_QSPI_Command>
 8003e98:	b108      	cbz	r0, 8003e9e <BSP_QSPI_Init+0x7e>
    return QSPI_NOT_SUPPORTED;
 8003e9a:	2004      	movs	r0, #4
 8003e9c:	e7cb      	b.n	8003e36 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8003e9e:	2399      	movs	r3, #153	@ 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ea0:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003ea4:	a902      	add	r1, sp, #8
 8003ea6:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8003ea8:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003eaa:	f001 fbfe 	bl	80056aa <HAL_QSPI_Command>
 8003eae:	2800      	cmp	r0, #0
 8003eb0:	d1f3      	bne.n	8003e9a <BSP_QSPI_Init+0x7a>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8003eb2:	f241 3088 	movw	r0, #5000	@ 0x1388
 8003eb6:	f7ff fe99 	bl	8003bec <QSPI_AutoPollingMemReady.constprop.0>
 8003eba:	2800      	cmp	r0, #0
 8003ebc:	d1ed      	bne.n	8003e9a <BSP_QSPI_Init+0x7a>
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003ebe:	2385      	movs	r3, #133	@ 0x85
  s_command.DummyCycles       = 0;
 8003ec0:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ec2:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003ec6:	a902      	add	r1, sp, #8
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003ec8:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003eca:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003ecc:	970b      	str	r7, [sp, #44]	@ 0x2c
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003ece:	e9cd 0009 	strd	r0, r0, [sp, #36]	@ 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8003ed2:	e9cd 600c 	strd	r6, r0, [sp, #48]	@ 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003ed6:	e9cd 000e 	strd	r0, r0, [sp, #56]	@ 0x38
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003eda:	4620      	mov	r0, r4
 8003edc:	f001 fbe5 	bl	80056aa <HAL_QSPI_Command>
 8003ee0:	2800      	cmp	r0, #0
 8003ee2:	d1da      	bne.n	8003e9a <BSP_QSPI_Init+0x7a>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ee4:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003ee8:	f10d 0107 	add.w	r1, sp, #7
 8003eec:	4620      	mov	r0, r4
 8003eee:	f001 fd5c 	bl	80059aa <HAL_QSPI_Receive>
 8003ef2:	2800      	cmp	r0, #0
 8003ef4:	d1d1      	bne.n	8003e9a <BSP_QSPI_Init+0x7a>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8003ef6:	f7ff fea3 	bl	8003c40 <QSPI_WriteEnable.constprop.0>
 8003efa:	2800      	cmp	r0, #0
 8003efc:	d1cd      	bne.n	8003e9a <BSP_QSPI_Init+0x7a>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8003efe:	2381      	movs	r3, #129	@ 0x81
 8003f00:	22f0      	movs	r2, #240	@ 0xf0
 8003f02:	9302      	str	r3, [sp, #8]
 8003f04:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003f08:	210a      	movs	r1, #10
 8003f0a:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003f0e:	fab2 f282 	clz	r2, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f12:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003f14:	f003 030f 	and.w	r3, r3, #15
 8003f18:	fa01 f202 	lsl.w	r2, r1, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f1c:	a902      	add	r1, sp, #8
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003f1e:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f20:	f241 3288 	movw	r2, #5000	@ 0x1388
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003f24:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f28:	f001 fbbf 	bl	80056aa <HAL_QSPI_Command>
 8003f2c:	2800      	cmp	r0, #0
 8003f2e:	d1b4      	bne.n	8003e9a <BSP_QSPI_Init+0x7a>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f30:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003f34:	f10d 0107 	add.w	r1, sp, #7
 8003f38:	4620      	mov	r0, r4
 8003f3a:	f001 fcd7 	bl	80058ec <HAL_QSPI_Transmit>
 8003f3e:	2800      	cmp	r0, #0
 8003f40:	f43f af79 	beq.w	8003e36 <BSP_QSPI_Init+0x16>
 8003f44:	e7a9      	b.n	8003e9a <BSP_QSPI_Init+0x7a>
 8003f46:	bf00      	nop
 8003f48:	200038cc 	.word	0x200038cc
 8003f4c:	a0001000 	.word	0xa0001000

08003f50 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003f50:	490f      	ldr	r1, [pc, #60]	@ (8003f90 <SystemInit+0x40>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8003f52:	2000      	movs	r0, #0
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003f54:	f8d1 3088 	ldr.w	r3, [r1, #136]	@ 0x88
 8003f58:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003f5c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
  RCC->CR |= (uint32_t)0x00000001;
 8003f60:	4b0c      	ldr	r3, [pc, #48]	@ (8003f94 <SystemInit+0x44>)
 8003f62:	681a      	ldr	r2, [r3, #0]
 8003f64:	f042 0201 	orr.w	r2, r2, #1
 8003f68:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000;
 8003f6a:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8003f6c:	681a      	ldr	r2, [r3, #0]
 8003f6e:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 8003f72:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8003f76:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 8003f78:	4a07      	ldr	r2, [pc, #28]	@ (8003f98 <SystemInit+0x48>)
 8003f7a:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8003f7c:	681a      	ldr	r2, [r3, #0]
 8003f7e:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003f82:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8003f84:	60d8      	str	r0, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = RAMDTCM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003f86:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8003f8a:	608b      	str	r3, [r1, #8]
#endif
}
 8003f8c:	4770      	bx	lr
 8003f8e:	bf00      	nop
 8003f90:	e000ed00 	.word	0xe000ed00
 8003f94:	40023800 	.word	0x40023800
 8003f98:	24003010 	.word	0x24003010

08003f9c <ft5336_Reset>:
  */
void ft5336_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT5336 IC */
}
 8003f9c:	4770      	bx	lr

08003f9e <ft5336_TS_ITStatus>:
  */
uint8_t ft5336_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT5336 */
  return 0;
}
 8003f9e:	2000      	movs	r0, #0
 8003fa0:	4770      	bx	lr
	...

08003fa4 <ft5336_ReadID>:
  volatile uint8_t ucReadId = 0;
 8003fa4:	2300      	movs	r3, #0
{
 8003fa6:	b537      	push	{r0, r1, r2, r4, r5, lr}
  volatile uint8_t ucReadId = 0;
 8003fa8:	f88d 3007 	strb.w	r3, [sp, #7]
  * @param  None.
  * @retval : I2C initialization status.
  */
static uint8_t ft5336_Get_I2C_InitializedStatus(void)
{
  return(ft5336_handle.i2cInitialized);
 8003fac:	4b0c      	ldr	r3, [pc, #48]	@ (8003fe0 <ft5336_ReadID+0x3c>)
  * @param  None.
  * @retval : None.
  */
static void ft5336_I2C_InitializeIfRequired(void)
{
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8003fae:	781a      	ldrb	r2, [r3, #0]
 8003fb0:	b90a      	cbnz	r2, 8003fb6 <ft5336_ReadID+0x12>
  {
    /* Initialize TS IO BUS layer (I2C) */
    //TS_IO_Init();

    /* Set state to initialized */
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8003fb2:	2201      	movs	r2, #1
 8003fb4:	701a      	strb	r2, [r3, #0]
{
 8003fb6:	2403      	movs	r4, #3
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8003fb8:	b2c5      	uxtb	r5, r0
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8003fba:	3c01      	subs	r4, #1
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8003fbc:	21a8      	movs	r1, #168	@ 0xa8
 8003fbe:	4628      	mov	r0, r5
 8003fc0:	f7fd fa6a 	bl	8001498 <TS_IO_Read>
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8003fc4:	f014 04ff 	ands.w	r4, r4, #255	@ 0xff
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8003fc8:	f88d 0007 	strb.w	r0, [sp, #7]
    if(ucReadId == FT5336_ID_VALUE)
 8003fcc:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003fd0:	b2db      	uxtb	r3, r3
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8003fd2:	d001      	beq.n	8003fd8 <ft5336_ReadID+0x34>
 8003fd4:	2b51      	cmp	r3, #81	@ 0x51
 8003fd6:	d1f0      	bne.n	8003fba <ft5336_ReadID+0x16>
  return (ucReadId);
 8003fd8:	f89d 0007 	ldrb.w	r0, [sp, #7]
}
 8003fdc:	b003      	add	sp, #12
 8003fde:	bd30      	pop	{r4, r5, pc}
 8003fe0:	2000391a 	.word	0x2000391a

08003fe4 <ft5336_TS_DetectTouch>:
{
 8003fe4:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8003fe6:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 8003fe8:	2102      	movs	r1, #2
 8003fea:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8003fec:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 8003ff0:	f7fd fa52 	bl	8001498 <TS_IO_Read>
 8003ff4:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT5336_TD_STAT_MASK;
 8003ff8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003ffc:	f003 030f 	and.w	r3, r3, #15
 8004000:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT5336_MAX_DETECTABLE_TOUCH)
 8004004:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004008:	2b05      	cmp	r3, #5
 800400a:	d901      	bls.n	8004010 <ft5336_TS_DetectTouch+0x2c>
    nbTouch = 0;
 800400c:	f88d 4007 	strb.w	r4, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
 8004010:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8004014:	4b03      	ldr	r3, [pc, #12]	@ (8004024 <ft5336_TS_DetectTouch+0x40>)
  return(nbTouch);
 8004016:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
 800401a:	705a      	strb	r2, [r3, #1]
  ft5336_handle.currActiveTouchIdx = 0;
 800401c:	2200      	movs	r2, #0
 800401e:	709a      	strb	r2, [r3, #2]
}
 8004020:	b002      	add	sp, #8
 8004022:	bd10      	pop	{r4, pc}
 8004024:	2000391a 	.word	0x2000391a

08004028 <ft5336_TS_GetXY>:
{
 8004028:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 800402c:	4c2f      	ldr	r4, [pc, #188]	@ (80040ec <ft5336_TS_GetXY+0xc4>)
{
 800402e:	4615      	mov	r5, r2
  volatile uint8_t ucReadData = 0;
 8004030:	f04f 0800 	mov.w	r8, #0
{
 8004034:	460f      	mov	r7, r1
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8004036:	78a3      	ldrb	r3, [r4, #2]
 8004038:	7862      	ldrb	r2, [r4, #1]
  volatile uint8_t ucReadData = 0;
 800403a:	f88d 8007 	strb.w	r8, [sp, #7]
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 800403e:	429a      	cmp	r2, r3
 8004040:	d94d      	bls.n	80040de <ft5336_TS_GetXY+0xb6>
    switch(ft5336_handle.currActiveTouchIdx)
 8004042:	2b09      	cmp	r3, #9
 8004044:	d84e      	bhi.n	80040e4 <ft5336_TS_GetXY+0xbc>
 8004046:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800404a:	005b      	lsls	r3, r3, #1
 800404c:	b2db      	uxtb	r3, r3
 800404e:	1d19      	adds	r1, r3, #4
 8004050:	f103 0b03 	add.w	fp, r3, #3
 8004054:	f103 0a06 	add.w	sl, r3, #6
 8004058:	3305      	adds	r3, #5
 800405a:	b2c9      	uxtb	r1, r1
 800405c:	fa5f fb8b 	uxtb.w	fp, fp
 8004060:	fa5f fa8a 	uxtb.w	sl, sl
 8004064:	fa5f f883 	uxtb.w	r8, r3
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 8004068:	b2c6      	uxtb	r6, r0
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 800406a:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 80040f0 <ft5336_TS_GetXY+0xc8>
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 800406e:	4630      	mov	r0, r6
 8004070:	f7fd fa12 	bl	8001498 <TS_IO_Read>
 8004074:	f88d 0007 	strb.w	r0, [sp, #7]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004078:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 800407c:	4659      	mov	r1, fp
 800407e:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004080:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8004084:	f7fd fa08 	bl	8001498 <TS_IO_Read>
 8004088:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 800408c:	4651      	mov	r1, sl
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 800408e:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8004092:	4630      	mov	r0, r6
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004094:	f8b9 2000 	ldrh.w	r2, [r9]
 8004098:	021b      	lsls	r3, r3, #8
 800409a:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 800409e:	4313      	orrs	r3, r2
    *X = coord;
 80040a0:	803b      	strh	r3, [r7, #0]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 80040a2:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 80040a6:	f7fd f9f7 	bl	8001498 <TS_IO_Read>
 80040aa:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 80040ae:	4641      	mov	r1, r8
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 80040b0:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 80040b4:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 80040b6:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 80040ba:	f7fd f9ed 	bl	8001498 <TS_IO_Read>
 80040be:	f88d 0007 	strb.w	r0, [sp, #7]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 80040c2:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80040c6:	f8b9 2000 	ldrh.w	r2, [r9]
 80040ca:	021b      	lsls	r3, r3, #8
 80040cc:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 80040d0:	4313      	orrs	r3, r2
 80040d2:	f8a9 3000 	strh.w	r3, [r9]
    *Y = coord;
 80040d6:	802b      	strh	r3, [r5, #0]
    ft5336_handle.currActiveTouchIdx++; /* next call will work on next touch */
 80040d8:	78a3      	ldrb	r3, [r4, #2]
 80040da:	3301      	adds	r3, #1
 80040dc:	70a3      	strb	r3, [r4, #2]
}
 80040de:	b003      	add	sp, #12
 80040e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 80040e4:	46c2      	mov	sl, r8
 80040e6:	46c3      	mov	fp, r8
 80040e8:	4641      	mov	r1, r8
 80040ea:	e7bd      	b.n	8004068 <ft5336_TS_GetXY+0x40>
 80040ec:	2000391a 	.word	0x2000391a
 80040f0:	20003918 	.word	0x20003918

080040f4 <ft5336_TS_EnableIT>:
   TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 80040f4:	2201      	movs	r2, #1
 80040f6:	21a4      	movs	r1, #164	@ 0xa4
 80040f8:	b2c0      	uxtb	r0, r0
 80040fa:	f7fd b9b3 	b.w	8001464 <TS_IO_Write>

080040fe <ft5336_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 80040fe:	2200      	movs	r2, #0
 8004100:	21a4      	movs	r1, #164	@ 0xa4
 8004102:	b2c0      	uxtb	r0, r0
 8004104:	f7fd b9ae 	b.w	8001464 <TS_IO_Write>

08004108 <ft5336_TS_Start>:
  ft5336_TS_DisableIT(DeviceAddr);
 8004108:	f7ff bff9 	b.w	80040fe <ft5336_TS_DisableIT>

0800410c <ft5336_TS_ClearIT>:
void ft5336_TS_ClearIT(uint16_t DeviceAddr)
 800410c:	4770      	bx	lr
	...

08004110 <ft5336_Init>:
  return(ft5336_handle.i2cInitialized);
 8004110:	4b02      	ldr	r3, [pc, #8]	@ (800411c <ft5336_Init+0xc>)
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8004112:	781a      	ldrb	r2, [r3, #0]
 8004114:	b90a      	cbnz	r2, 800411a <ft5336_Init+0xa>
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8004116:	2201      	movs	r2, #1
 8004118:	701a      	strb	r2, [r3, #0]
}
 800411a:	4770      	bx	lr
 800411c:	2000391a 	.word	0x2000391a

08004120 <HAL_Init>:
  __HAL_FLASH_ART_ENABLE();
#endif /* ART_ACCELERATOR_ENABLE */

  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004120:	4a07      	ldr	r2, [pc, #28]	@ (8004140 <HAL_Init+0x20>)
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004122:	2003      	movs	r0, #3
{
 8004124:	b508      	push	{r3, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004126:	6813      	ldr	r3, [r2, #0]
 8004128:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800412c:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800412e:	f000 f82d 	bl	800418c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004132:	2000      	movs	r0, #0
 8004134:	f7fd f830 	bl	8001198 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004138:	f7fc fd8e 	bl	8000c58 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800413c:	2000      	movs	r0, #0
 800413e:	bd08      	pop	{r3, pc}
 8004140:	40023c00 	.word	0x40023c00

08004144 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004144:	4a03      	ldr	r2, [pc, #12]	@ (8004154 <HAL_IncTick+0x10>)
 8004146:	4b04      	ldr	r3, [pc, #16]	@ (8004158 <HAL_IncTick+0x14>)
 8004148:	6811      	ldr	r1, [r2, #0]
 800414a:	781b      	ldrb	r3, [r3, #0]
 800414c:	440b      	add	r3, r1
 800414e:	6013      	str	r3, [r2, #0]
}
 8004150:	4770      	bx	lr
 8004152:	bf00      	nop
 8004154:	20003920 	.word	0x20003920
 8004158:	20000038 	.word	0x20000038

0800415c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800415c:	4b01      	ldr	r3, [pc, #4]	@ (8004164 <HAL_GetTick+0x8>)
 800415e:	6818      	ldr	r0, [r3, #0]
}
 8004160:	4770      	bx	lr
 8004162:	bf00      	nop
 8004164:	20003920 	.word	0x20003920

08004168 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004168:	b538      	push	{r3, r4, r5, lr}
 800416a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800416c:	f7ff fff6 	bl	800415c <HAL_GetTick>
 8004170:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004172:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004174:	bf1e      	ittt	ne
 8004176:	4b04      	ldrne	r3, [pc, #16]	@ (8004188 <HAL_Delay+0x20>)
 8004178:	781b      	ldrbne	r3, [r3, #0]
 800417a:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 800417c:	f7ff ffee 	bl	800415c <HAL_GetTick>
 8004180:	1b43      	subs	r3, r0, r5
 8004182:	42a3      	cmp	r3, r4
 8004184:	d3fa      	bcc.n	800417c <HAL_Delay+0x14>
  {
  }
}
 8004186:	bd38      	pop	{r3, r4, r5, pc}
 8004188:	20000038 	.word	0x20000038

0800418c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800418c:	4907      	ldr	r1, [pc, #28]	@ (80041ac <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800418e:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004190:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004192:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004196:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800419a:	0412      	lsls	r2, r2, #16
 800419c:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800419e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80041a0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80041a4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 80041a8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80041aa:	4770      	bx	lr
 80041ac:	e000ed00 	.word	0xe000ed00

080041b0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80041b0:	4b16      	ldr	r3, [pc, #88]	@ (800420c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80041b2:	b530      	push	{r4, r5, lr}
 80041b4:	68dc      	ldr	r4, [r3, #12]
 80041b6:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80041ba:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80041be:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80041c0:	2b04      	cmp	r3, #4
 80041c2:	bf28      	it	cs
 80041c4:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80041c6:	2d06      	cmp	r5, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80041c8:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80041cc:	bf8c      	ite	hi
 80041ce:	3c03      	subhi	r4, #3
 80041d0:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80041d2:	fa05 f303 	lsl.w	r3, r5, r3
  if ((int32_t)(IRQn) >= 0)
 80041d6:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80041d8:	fa05 f504 	lsl.w	r5, r5, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80041dc:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80041e0:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80041e4:	fa03 f304 	lsl.w	r3, r3, r4
 80041e8:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80041ec:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80041f0:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 80041f2:	db06      	blt.n	8004202 <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80041f4:	f100 4060 	add.w	r0, r0, #3758096384	@ 0xe0000000
 80041f8:	f500 4061 	add.w	r0, r0, #57600	@ 0xe100
 80041fc:	f880 3300 	strb.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004200:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004202:	f000 000f 	and.w	r0, r0, #15
 8004206:	4a02      	ldr	r2, [pc, #8]	@ (8004210 <HAL_NVIC_SetPriority+0x60>)
 8004208:	5413      	strb	r3, [r2, r0]
 800420a:	e7f9      	b.n	8004200 <HAL_NVIC_SetPriority+0x50>
 800420c:	e000ed00 	.word	0xe000ed00
 8004210:	e000ed14 	.word	0xe000ed14

08004214 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004214:	2800      	cmp	r0, #0
 8004216:	db07      	blt.n	8004228 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004218:	0941      	lsrs	r1, r0, #5
 800421a:	2301      	movs	r3, #1
 800421c:	f000 001f 	and.w	r0, r0, #31
 8004220:	4a02      	ldr	r2, [pc, #8]	@ (800422c <HAL_NVIC_EnableIRQ+0x18>)
 8004222:	4083      	lsls	r3, r0
 8004224:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004228:	4770      	bx	lr
 800422a:	bf00      	nop
 800422c:	e000e100 	.word	0xe000e100

08004230 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004230:	2800      	cmp	r0, #0
 8004232:	db0c      	blt.n	800424e <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004234:	0943      	lsrs	r3, r0, #5
 8004236:	2201      	movs	r2, #1
 8004238:	f000 001f 	and.w	r0, r0, #31
 800423c:	4904      	ldr	r1, [pc, #16]	@ (8004250 <HAL_NVIC_DisableIRQ+0x20>)
 800423e:	3320      	adds	r3, #32
 8004240:	4082      	lsls	r2, r0
 8004242:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8004246:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800424a:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 800424e:	4770      	bx	lr
 8004250:	e000e100 	.word	0xe000e100

08004254 <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 8004254:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 8004258:	4b04      	ldr	r3, [pc, #16]	@ (800426c <HAL_MPU_Disable+0x18>)
 800425a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800425c:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8004260:	625a      	str	r2, [r3, #36]	@ 0x24
  
  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 8004262:	2200      	movs	r2, #0
 8004264:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
}
 8004268:	4770      	bx	lr
 800426a:	bf00      	nop
 800426c:	e000ed00 	.word	0xe000ed00

08004270 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 8004270:	4b06      	ldr	r3, [pc, #24]	@ (800428c <HAL_MPU_Enable+0x1c>)
 8004272:	f040 0001 	orr.w	r0, r0, #1
 8004276:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94
  
  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 800427a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800427c:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8004280:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 8004282:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004286:	f3bf 8f6f 	isb	sy
  
  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 800428a:	4770      	bx	lr
 800428c:	e000ed00 	.word	0xe000ed00

08004290 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8004290:	7843      	ldrb	r3, [r0, #1]
 8004292:	4a14      	ldr	r2, [pc, #80]	@ (80042e4 <HAL_MPU_ConfigRegion+0x54>)
{
 8004294:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 8004296:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  if ((MPU_Init->Enable) != RESET)
 800429a:	7801      	ldrb	r1, [r0, #0]
 800429c:	b1e9      	cbz	r1, 80042da <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
    
    MPU->RBAR = MPU_Init->BaseAddress;
 800429e:	6843      	ldr	r3, [r0, #4]
 80042a0:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 80042a4:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80042a6:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 80042a8:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80042aa:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80042ae:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 80042b0:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80042b2:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 80042b6:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80042b8:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 80042bc:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80042be:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 80042c2:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80042c4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 80042c8:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80042ca:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80042ce:	7a01      	ldrb	r1, [r0, #8]
 80042d0:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80042d4:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 80042d8:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 80042da:	f8c2 109c 	str.w	r1, [r2, #156]	@ 0x9c
    MPU->RASR = 0x00;
 80042de:	f8c2 10a0 	str.w	r1, [r2, #160]	@ 0xa0
}
 80042e2:	e7f9      	b.n	80042d8 <HAL_MPU_ConfigRegion+0x48>
 80042e4:	e000ed00 	.word	0xe000ed00

080042e8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80042e8:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80042ea:	4604      	mov	r4, r0
 80042ec:	b908      	cbnz	r0, 80042f2 <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 80042ee:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 80042f0:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 80042f2:	7f43      	ldrb	r3, [r0, #29]
 80042f4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80042f8:	b913      	cbnz	r3, 8004300 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 80042fa:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 80042fc:	f7fc fcca 	bl	8000c94 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8004300:	2302      	movs	r3, #2
 8004302:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8004304:	7923      	ldrb	r3, [r4, #4]
 8004306:	b9e3      	cbnz	r3, 8004342 <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8004308:	6823      	ldr	r3, [r4, #0]
 800430a:	4a13      	ldr	r2, [pc, #76]	@ (8004358 <HAL_CRC_Init+0x70>)
 800430c:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 800430e:	689a      	ldr	r2, [r3, #8]
 8004310:	f022 0218 	bic.w	r2, r2, #24
 8004314:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004316:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004318:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 800431a:	b9d2      	cbnz	r2, 8004352 <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 800431c:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004320:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 8004322:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004324:	689a      	ldr	r2, [r3, #8]
 8004326:	6961      	ldr	r1, [r4, #20]
 8004328:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800432c:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 800432e:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004330:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8004332:	689a      	ldr	r2, [r3, #8]
 8004334:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004338:	430a      	orrs	r2, r1
 800433a:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 800433c:	2301      	movs	r3, #1
 800433e:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8004340:	e7d6      	b.n	80042f0 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8004342:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8004346:	4620      	mov	r0, r4
 8004348:	f000 f808 	bl	800435c <HAL_CRCEx_Polynomial_Set>
 800434c:	2800      	cmp	r0, #0
 800434e:	d0e2      	beq.n	8004316 <HAL_CRC_Init+0x2e>
 8004350:	e7cd      	b.n	80042ee <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004352:	6922      	ldr	r2, [r4, #16]
 8004354:	e7e4      	b.n	8004320 <HAL_CRC_Init+0x38>
 8004356:	bf00      	nop
 8004358:	04c11db7 	.word	0x04c11db7

0800435c <HAL_CRCEx_Polynomial_Set>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 800435c:	231f      	movs	r3, #31
{
 800435e:	b510      	push	{r4, lr}
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8004360:	3b01      	subs	r3, #1
 8004362:	d31d      	bcc.n	80043a0 <HAL_CRCEx_Polynomial_Set+0x44>
 8004364:	fa21 f403 	lsr.w	r4, r1, r3
 8004368:	07e4      	lsls	r4, r4, #31
 800436a:	d5f9      	bpl.n	8004360 <HAL_CRCEx_Polynomial_Set+0x4>
  {
  }

  switch (PolyLength)
 800436c:	2a10      	cmp	r2, #16
 800436e:	d013      	beq.n	8004398 <HAL_CRCEx_Polynomial_Set+0x3c>
 8004370:	2a10      	cmp	r2, #16
 8004372:	d804      	bhi.n	800437e <HAL_CRCEx_Polynomial_Set+0x22>
 8004374:	b13a      	cbz	r2, 8004386 <HAL_CRCEx_Polynomial_Set+0x2a>
 8004376:	2a08      	cmp	r2, #8
 8004378:	d010      	beq.n	800439c <HAL_CRCEx_Polynomial_Set+0x40>
 800437a:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 800437c:	e00b      	b.n	8004396 <HAL_CRCEx_Polynomial_Set+0x3a>
  switch (PolyLength)
 800437e:	2a18      	cmp	r2, #24
 8004380:	d1fb      	bne.n	800437a <HAL_CRCEx_Polynomial_Set+0x1e>
      if (msb >= HAL_CRC_LENGTH_7B)
 8004382:	2b06      	cmp	r3, #6
      if (msb >= HAL_CRC_LENGTH_16B)
 8004384:	d8f9      	bhi.n	800437a <HAL_CRCEx_Polynomial_Set+0x1e>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8004386:	6800      	ldr	r0, [r0, #0]
 8004388:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 800438a:	6883      	ldr	r3, [r0, #8]
 800438c:	f023 0318 	bic.w	r3, r3, #24
 8004390:	4313      	orrs	r3, r2
 8004392:	6083      	str	r3, [r0, #8]
 8004394:	2000      	movs	r0, #0
}
 8004396:	bd10      	pop	{r4, pc}
      if (msb >= HAL_CRC_LENGTH_8B)
 8004398:	2b07      	cmp	r3, #7
 800439a:	e7f3      	b.n	8004384 <HAL_CRCEx_Polynomial_Set+0x28>
      if (msb >= HAL_CRC_LENGTH_16B)
 800439c:	2b0f      	cmp	r3, #15
 800439e:	e7f1      	b.n	8004384 <HAL_CRCEx_Polynomial_Set+0x28>
  switch (PolyLength)
 80043a0:	2a10      	cmp	r2, #16
 80043a2:	d1e5      	bne.n	8004370 <HAL_CRCEx_Polynomial_Set+0x14>
 80043a4:	e7e9      	b.n	800437a <HAL_CRCEx_Polynomial_Set+0x1e>

080043a6 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 80043a6:	b570      	push	{r4, r5, r6, lr}
 80043a8:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80043aa:	6d86      	ldr	r6, [r0, #88]	@ 0x58
  
  uint32_t tickstart = HAL_GetTick();
 80043ac:	f7ff fed6 	bl	800415c <HAL_GetTick>
 80043b0:	4605      	mov	r5, r0
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80043b2:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
 80043b6:	2b02      	cmp	r3, #2
 80043b8:	d006      	beq.n	80043c8 <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80043ba:	2380      	movs	r3, #128	@ 0x80
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
    
    return HAL_ERROR;
 80043bc:	2001      	movs	r0, #1
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80043be:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
 80043c0:	2300      	movs	r3, #0
 80043c2:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
    
  }
  return HAL_OK;
}
 80043c6:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80043c8:	6823      	ldr	r3, [r4, #0]
 80043ca:	681a      	ldr	r2, [r3, #0]
 80043cc:	f022 0216 	bic.w	r2, r2, #22
 80043d0:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 80043d2:	695a      	ldr	r2, [r3, #20]
 80043d4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80043d8:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80043da:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80043dc:	b90a      	cbnz	r2, 80043e2 <HAL_DMA_Abort+0x3c>
 80043de:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 80043e0:	b11a      	cbz	r2, 80043ea <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 80043e2:	681a      	ldr	r2, [r3, #0]
 80043e4:	f022 0208 	bic.w	r2, r2, #8
 80043e8:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 80043ea:	681a      	ldr	r2, [r3, #0]
 80043ec:	f022 0201 	bic.w	r2, r2, #1
 80043f0:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80043f2:	6823      	ldr	r3, [r4, #0]
 80043f4:	6818      	ldr	r0, [r3, #0]
 80043f6:	f010 0001 	ands.w	r0, r0, #1
 80043fa:	d107      	bne.n	800440c <HAL_DMA_Abort+0x66>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80043fc:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 80043fe:	233f      	movs	r3, #63	@ 0x3f
 8004400:	4093      	lsls	r3, r2
 8004402:	60b3      	str	r3, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8004404:	2301      	movs	r3, #1
 8004406:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
  return HAL_OK;
 800440a:	e7d9      	b.n	80043c0 <HAL_DMA_Abort+0x1a>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800440c:	f7ff fea6 	bl	800415c <HAL_GetTick>
 8004410:	1b40      	subs	r0, r0, r5
 8004412:	2805      	cmp	r0, #5
 8004414:	d9ed      	bls.n	80043f2 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004416:	2320      	movs	r3, #32
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004418:	2003      	movs	r0, #3
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800441a:	6563      	str	r3, [r4, #84]	@ 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800441c:	f884 0035 	strb.w	r0, [r4, #53]	@ 0x35
        return HAL_TIMEOUT;
 8004420:	e7ce      	b.n	80043c0 <HAL_DMA_Abort+0x1a>

08004422 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004422:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 8004426:	2b02      	cmp	r3, #2
 8004428:	d003      	beq.n	8004432 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800442a:	2380      	movs	r3, #128	@ 0x80
 800442c:	6543      	str	r3, [r0, #84]	@ 0x54
    return HAL_ERROR;
 800442e:	2001      	movs	r0, #1
 8004430:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8004432:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8004434:	2305      	movs	r3, #5
 8004436:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
  }

  return HAL_OK;
 800443a:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800443c:	6813      	ldr	r3, [r2, #0]
 800443e:	f023 0301 	bic.w	r3, r3, #1
 8004442:	6013      	str	r3, [r2, #0]
}
 8004444:	4770      	bx	lr

08004446 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004446:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004448:	4604      	mov	r4, r0
 800444a:	b330      	cbz	r0, 800449a <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800444c:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8004450:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004454:	b91b      	cbnz	r3, 800445e <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004456:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800445a:	f7fc fc31 	bl	8000cc0 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800445e:	6822      	ldr	r2, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004460:	2302      	movs	r3, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004462:	6861      	ldr	r1, [r4, #4]
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004464:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004466:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800446a:	6813      	ldr	r3, [r2, #0]
 800446c:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8004470:	430b      	orrs	r3, r1
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004472:	68a1      	ldr	r1, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004474:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004476:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8004478:	f023 0307 	bic.w	r3, r3, #7
 800447c:	430b      	orrs	r3, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800447e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004480:	6353      	str	r3, [r2, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004482:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8004484:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8004488:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 800448c:	430b      	orrs	r3, r1
 800448e:	6413      	str	r3, [r2, #64]	@ 0x40

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004490:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004492:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004494:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8004498:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800449a:	2001      	movs	r0, #1
 800449c:	e7fc      	b.n	8004498 <HAL_DMA2D_Init+0x52>

0800449e <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 800449e:	4770      	bx	lr

080044a0 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 80044a0:	4770      	bx	lr

080044a2 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80044a2:	6803      	ldr	r3, [r0, #0]
{
 80044a4:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80044a6:	685e      	ldr	r6, [r3, #4]
{
 80044a8:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80044aa:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80044ac:	07f2      	lsls	r2, r6, #31
 80044ae:	d514      	bpl.n	80044da <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 80044b0:	05e9      	lsls	r1, r5, #23
 80044b2:	d512      	bpl.n	80044da <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80044b4:	681a      	ldr	r2, [r3, #0]
 80044b6:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80044ba:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80044bc:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80044be:	f042 0201 	orr.w	r2, r2, #1
 80044c2:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80044c4:	2201      	movs	r2, #1
 80044c6:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80044c8:	2304      	movs	r3, #4
 80044ca:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80044ce:	2300      	movs	r3, #0
 80044d0:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80044d4:	6943      	ldr	r3, [r0, #20]
 80044d6:	b103      	cbz	r3, 80044da <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80044d8:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80044da:	06b2      	lsls	r2, r6, #26
 80044dc:	d516      	bpl.n	800450c <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80044de:	04ab      	lsls	r3, r5, #18
 80044e0:	d514      	bpl.n	800450c <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80044e2:	6823      	ldr	r3, [r4, #0]
 80044e4:	681a      	ldr	r2, [r3, #0]
 80044e6:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80044ea:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80044ec:	2220      	movs	r2, #32
 80044ee:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80044f0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80044f2:	f043 0302 	orr.w	r3, r3, #2
 80044f6:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80044f8:	2304      	movs	r3, #4
 80044fa:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80044fe:	2300      	movs	r3, #0
 8004500:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004504:	6963      	ldr	r3, [r4, #20]
 8004506:	b10b      	cbz	r3, 800450c <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004508:	4620      	mov	r0, r4
 800450a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800450c:	0730      	lsls	r0, r6, #28
 800450e:	d516      	bpl.n	800453e <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004510:	0529      	lsls	r1, r5, #20
 8004512:	d514      	bpl.n	800453e <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004514:	6823      	ldr	r3, [r4, #0]
 8004516:	681a      	ldr	r2, [r3, #0]
 8004518:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800451c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800451e:	2208      	movs	r2, #8
 8004520:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004522:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004524:	f043 0304 	orr.w	r3, r3, #4
 8004528:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800452a:	2304      	movs	r3, #4
 800452c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004530:	2300      	movs	r3, #0
 8004532:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004536:	6963      	ldr	r3, [r4, #20]
 8004538:	b10b      	cbz	r3, 800453e <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 800453a:	4620      	mov	r0, r4
 800453c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800453e:	0772      	lsls	r2, r6, #29
 8004540:	d50b      	bpl.n	800455a <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004542:	056b      	lsls	r3, r5, #21
 8004544:	d509      	bpl.n	800455a <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004546:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004548:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800454a:	681a      	ldr	r2, [r3, #0]
 800454c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004550:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004552:	2204      	movs	r2, #4
 8004554:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004556:	f7ff ffa2 	bl	800449e <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800455a:	07b0      	lsls	r0, r6, #30
 800455c:	d514      	bpl.n	8004588 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 800455e:	05a9      	lsls	r1, r5, #22
 8004560:	d512      	bpl.n	8004588 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004562:	6823      	ldr	r3, [r4, #0]
 8004564:	681a      	ldr	r2, [r3, #0]
 8004566:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800456a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800456c:	2202      	movs	r2, #2
 800456e:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004570:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004572:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004574:	2301      	movs	r3, #1
 8004576:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800457a:	2300      	movs	r3, #0
 800457c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8004580:	6923      	ldr	r3, [r4, #16]
 8004582:	b10b      	cbz	r3, 8004588 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004584:	4620      	mov	r0, r4
 8004586:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004588:	06f2      	lsls	r2, r6, #27
 800458a:	d513      	bpl.n	80045b4 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800458c:	04eb      	lsls	r3, r5, #19
 800458e:	d511      	bpl.n	80045b4 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004590:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004592:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004594:	681a      	ldr	r2, [r3, #0]
 8004596:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800459a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800459c:	2210      	movs	r2, #16
 800459e:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80045a0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80045a2:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80045a4:	2301      	movs	r3, #1
 80045a6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80045aa:	2300      	movs	r3, #0
 80045ac:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80045b0:	f7ff ff76 	bl	80044a0 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 80045b4:	bd70      	pop	{r4, r5, r6, pc}
	...

080045b8 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80045b8:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80045ba:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
{
 80045be:	4603      	mov	r3, r0
 80045c0:	2002      	movs	r0, #2
  __HAL_LOCK(hdma2d);
 80045c2:	2a01      	cmp	r2, #1
 80045c4:	d02b      	beq.n	800461e <HAL_DMA2D_ConfigLayer+0x66>
 80045c6:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80045c8:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39
#if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
#else
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80045cc:	010e      	lsls	r6, r1, #4
 80045ce:	4f1c      	ldr	r7, [pc, #112]	@ (8004640 <HAL_DMA2D_ConfigLayer+0x88>)
  __HAL_LOCK(hdma2d);
 80045d0:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80045d4:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 80045d8:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 80045dc:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 80045de:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80045e2:	3c09      	subs	r4, #9
 80045e4:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80045e6:	bf96      	itet	ls
 80045e8:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80045ec:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80045f0:	4310      	orrls	r0, r2

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80045f2:	681a      	ldr	r2, [r3, #0]
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80045f4:	b9a1      	cbnz	r1, 8004620 <HAL_DMA2D_ConfigLayer+0x68>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80045f6:	6a51      	ldr	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80045f8:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80045fa:	ea01 0107 	and.w	r1, r1, r7
 80045fe:	ea41 0100 	orr.w	r1, r1, r0
 8004602:	6251      	str	r1, [r2, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004604:	6999      	ldr	r1, [r3, #24]
 8004606:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004608:	d803      	bhi.n	8004612 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800460a:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 800460c:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8004610:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004612:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004614:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004616:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 800461a:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 800461e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004620:	69d1      	ldr	r1, [r2, #28]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004622:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004624:	ea01 0107 	and.w	r1, r1, r7
 8004628:	ea41 0100 	orr.w	r1, r1, r0
 800462c:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800462e:	eb03 0106 	add.w	r1, r3, r6
 8004632:	6989      	ldr	r1, [r1, #24]
 8004634:	6111      	str	r1, [r2, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004636:	d8ec      	bhi.n	8004612 <HAL_DMA2D_ConfigLayer+0x5a>
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004638:	f025 457f 	bic.w	r5, r5, #4278190080	@ 0xff000000
 800463c:	6215      	str	r5, [r2, #32]
 800463e:	e7e8      	b.n	8004612 <HAL_DMA2D_ConfigLayer+0x5a>
 8004640:	00fcfff0 	.word	0x00fcfff0

08004644 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004644:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8004648:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800464a:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8004808 <HAL_GPIO_Init+0x1c4>
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800464e:	4a6c      	ldr	r2, [pc, #432]	@ (8004800 <HAL_GPIO_Init+0x1bc>)
    ioposition = ((uint32_t)0x01) << position;
 8004650:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004652:	680d      	ldr	r5, [r1, #0]
    ioposition = ((uint32_t)0x01) << position;
 8004654:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004656:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800465a:	43ac      	bics	r4, r5
 800465c:	f040 80b7 	bne.w	80047ce <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004660:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004662:	2703      	movs	r7, #3
 8004664:	ea4f 0e43 	mov.w	lr, r3, lsl #1
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004668:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 800466c:	fa07 fc0e 	lsl.w	ip, r7, lr
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004670:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004672:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004676:	2f01      	cmp	r7, #1
 8004678:	d834      	bhi.n	80046e4 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800467a:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 800467c:	ea07 080c 	and.w	r8, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2));
 8004680:	68cf      	ldr	r7, [r1, #12]
 8004682:	fa07 f70e 	lsl.w	r7, r7, lr
 8004686:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OSPEEDR = temp;
 800468a:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800468c:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800468e:	ea27 0806 	bic.w	r8, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004692:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8004696:	409f      	lsls	r7, r3
 8004698:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OTYPER = temp;
 800469c:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800469e:	68c7      	ldr	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80046a0:	2c02      	cmp	r4, #2
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 80046a2:	ea07 080c 	and.w	r8, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2));
 80046a6:	688f      	ldr	r7, [r1, #8]
 80046a8:	fa07 f70e 	lsl.w	r7, r7, lr
 80046ac:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->PUPDR = temp;
 80046b0:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80046b2:	d119      	bne.n	80046e8 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3];
 80046b4:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80046b8:	f003 0a07 	and.w	sl, r3, #7
 80046bc:	f04f 0b0f 	mov.w	fp, #15
 80046c0:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 80046c4:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
        temp = GPIOx->AFR[position >> 3];
 80046c8:	f8d8 7020 	ldr.w	r7, [r8, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80046cc:	fa0b fb0a 	lsl.w	fp, fp, sl
 80046d0:	ea27 0b0b 	bic.w	fp, r7, fp
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 80046d4:	690f      	ldr	r7, [r1, #16]
 80046d6:	fa07 f70a 	lsl.w	r7, r7, sl
 80046da:	ea47 070b 	orr.w	r7, r7, fp
        GPIOx->AFR[position >> 3] = temp;
 80046de:	f8c8 7020 	str.w	r7, [r8, #32]
 80046e2:	e001      	b.n	80046e8 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80046e4:	2c03      	cmp	r4, #3
 80046e6:	d1da      	bne.n	800469e <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80046e8:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80046ea:	fa04 f40e 	lsl.w	r4, r4, lr
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80046ee:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 80046f2:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80046f6:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
 80046fa:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80046fc:	d067      	beq.n	80047ce <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80046fe:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8004702:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004706:	f003 0c03 	and.w	ip, r3, #3
 800470a:	f04f 0e0f 	mov.w	lr, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800470e:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8004712:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004716:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800471a:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 800471e:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8004722:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004726:	fa0e fe0c 	lsl.w	lr, lr, ip
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800472a:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 800472e:	9401      	str	r4, [sp, #4]
 8004730:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2];
 8004732:	68bc      	ldr	r4, [r7, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004734:	ea24 0e0e 	bic.w	lr, r4, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8004738:	4c32      	ldr	r4, [pc, #200]	@ (8004804 <HAL_GPIO_Init+0x1c0>)
 800473a:	42a0      	cmp	r0, r4
 800473c:	d04e      	beq.n	80047dc <HAL_GPIO_Init+0x198>
 800473e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004742:	42a0      	cmp	r0, r4
 8004744:	d04c      	beq.n	80047e0 <HAL_GPIO_Init+0x19c>
 8004746:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800474a:	42a0      	cmp	r0, r4
 800474c:	d04a      	beq.n	80047e4 <HAL_GPIO_Init+0x1a0>
 800474e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004752:	42a0      	cmp	r0, r4
 8004754:	d048      	beq.n	80047e8 <HAL_GPIO_Init+0x1a4>
 8004756:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800475a:	42a0      	cmp	r0, r4
 800475c:	d046      	beq.n	80047ec <HAL_GPIO_Init+0x1a8>
 800475e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004762:	42a0      	cmp	r0, r4
 8004764:	d044      	beq.n	80047f0 <HAL_GPIO_Init+0x1ac>
 8004766:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800476a:	42a0      	cmp	r0, r4
 800476c:	d042      	beq.n	80047f4 <HAL_GPIO_Init+0x1b0>
 800476e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004772:	42a0      	cmp	r0, r4
 8004774:	d040      	beq.n	80047f8 <HAL_GPIO_Init+0x1b4>
 8004776:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800477a:	42a0      	cmp	r0, r4
 800477c:	d03e      	beq.n	80047fc <HAL_GPIO_Init+0x1b8>
 800477e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004782:	42a0      	cmp	r0, r4
 8004784:	bf14      	ite	ne
 8004786:	240a      	movne	r4, #10
 8004788:	2409      	moveq	r4, #9
 800478a:	fa04 f40c 	lsl.w	r4, r4, ip
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 800478e:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8004792:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2] = temp;
 8004796:	60bc      	str	r4, [r7, #8]
        temp &= ~((uint32_t)iocurrent);
 8004798:	ea6f 0706 	mvn.w	r7, r6
        temp = EXTI->RTSR;
 800479c:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800479e:	bf0c      	ite	eq
 80047a0:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80047a2:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80047a4:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        EXTI->RTSR = temp;
 80047a8:	6094      	str	r4, [r2, #8]
        temp = EXTI->FTSR;
 80047aa:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 80047ac:	bf0c      	ite	eq
 80047ae:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80047b0:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80047b2:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        EXTI->FTSR = temp;
 80047b6:	60d4      	str	r4, [r2, #12]
        temp = EXTI->EMR;
 80047b8:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 80047ba:	bf0c      	ite	eq
 80047bc:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80047be:	4334      	orrne	r4, r6
        EXTI->EMR = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 80047c0:	03ed      	lsls	r5, r5, #15
        EXTI->EMR = temp;
 80047c2:	6054      	str	r4, [r2, #4]
        temp = EXTI->IMR;
 80047c4:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80047c6:	bf54      	ite	pl
 80047c8:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 80047ca:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 80047cc:	6014      	str	r4, [r2, #0]
  for(position = 0; position < GPIO_NUMBER; position++)
 80047ce:	3301      	adds	r3, #1
 80047d0:	2b10      	cmp	r3, #16
 80047d2:	f47f af3d 	bne.w	8004650 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80047d6:	b003      	add	sp, #12
 80047d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80047dc:	2400      	movs	r4, #0
 80047de:	e7d4      	b.n	800478a <HAL_GPIO_Init+0x146>
 80047e0:	2401      	movs	r4, #1
 80047e2:	e7d2      	b.n	800478a <HAL_GPIO_Init+0x146>
 80047e4:	2402      	movs	r4, #2
 80047e6:	e7d0      	b.n	800478a <HAL_GPIO_Init+0x146>
 80047e8:	2403      	movs	r4, #3
 80047ea:	e7ce      	b.n	800478a <HAL_GPIO_Init+0x146>
 80047ec:	2404      	movs	r4, #4
 80047ee:	e7cc      	b.n	800478a <HAL_GPIO_Init+0x146>
 80047f0:	2405      	movs	r4, #5
 80047f2:	e7ca      	b.n	800478a <HAL_GPIO_Init+0x146>
 80047f4:	2406      	movs	r4, #6
 80047f6:	e7c8      	b.n	800478a <HAL_GPIO_Init+0x146>
 80047f8:	2407      	movs	r4, #7
 80047fa:	e7c6      	b.n	800478a <HAL_GPIO_Init+0x146>
 80047fc:	2408      	movs	r4, #8
 80047fe:	e7c4      	b.n	800478a <HAL_GPIO_Init+0x146>
 8004800:	40013c00 	.word	0x40013c00
 8004804:	40020000 	.word	0x40020000
 8004808:	40023800 	.word	0x40023800

0800480c <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800480c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8004810:	2200      	movs	r2, #0
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8004812:	f04f 0a01 	mov.w	sl, #1

    if(iocurrent == ioposition)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2];
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004816:	f04f 080f 	mov.w	r8, #15
        tmp = ((uint32_t)0x0F) << (4 * (position & 0x03));
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
      }
      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 800481a:	f04f 0b03 	mov.w	fp, #3
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800481e:	4c46      	ldr	r4, [pc, #280]	@ (8004938 <HAL_GPIO_DeInit+0x12c>)
    ioposition = ((uint32_t)0x01) << position;
 8004820:	fa0a fc02 	lsl.w	ip, sl, r2
    if(iocurrent == ioposition)
 8004824:	ea3c 0301 	bics.w	r3, ip, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8004828:	ea0c 0601 	and.w	r6, ip, r1
    if(iocurrent == ioposition)
 800482c:	d16c      	bne.n	8004908 <HAL_GPIO_DeInit+0xfc>
      tmp = SYSCFG->EXTICR[position >> 2];
 800482e:	f022 0503 	bic.w	r5, r2, #3
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004832:	f002 0703 	and.w	r7, r2, #3
 8004836:	f105 4580 	add.w	r5, r5, #1073741824	@ 0x40000000
 800483a:	00bf      	lsls	r7, r7, #2
 800483c:	f505 359c 	add.w	r5, r5, #79872	@ 0x13800
 8004840:	fa08 f907 	lsl.w	r9, r8, r7
      tmp = SYSCFG->EXTICR[position >> 2];
 8004844:	68ab      	ldr	r3, [r5, #8]
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004846:	ea09 0e03 	and.w	lr, r9, r3
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 800484a:	4b3c      	ldr	r3, [pc, #240]	@ (800493c <HAL_GPIO_DeInit+0x130>)
 800484c:	4298      	cmp	r0, r3
 800484e:	d060      	beq.n	8004912 <HAL_GPIO_DeInit+0x106>
 8004850:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004854:	4298      	cmp	r0, r3
 8004856:	d05e      	beq.n	8004916 <HAL_GPIO_DeInit+0x10a>
 8004858:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800485c:	4298      	cmp	r0, r3
 800485e:	d05c      	beq.n	800491a <HAL_GPIO_DeInit+0x10e>
 8004860:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004864:	4298      	cmp	r0, r3
 8004866:	d05a      	beq.n	800491e <HAL_GPIO_DeInit+0x112>
 8004868:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800486c:	4298      	cmp	r0, r3
 800486e:	d058      	beq.n	8004922 <HAL_GPIO_DeInit+0x116>
 8004870:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004874:	4298      	cmp	r0, r3
 8004876:	d056      	beq.n	8004926 <HAL_GPIO_DeInit+0x11a>
 8004878:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800487c:	4298      	cmp	r0, r3
 800487e:	d054      	beq.n	800492a <HAL_GPIO_DeInit+0x11e>
 8004880:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004884:	4298      	cmp	r0, r3
 8004886:	d052      	beq.n	800492e <HAL_GPIO_DeInit+0x122>
 8004888:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800488c:	4298      	cmp	r0, r3
 800488e:	d050      	beq.n	8004932 <HAL_GPIO_DeInit+0x126>
 8004890:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004894:	4298      	cmp	r0, r3
 8004896:	bf0c      	ite	eq
 8004898:	2309      	moveq	r3, #9
 800489a:	230a      	movne	r3, #10
 800489c:	40bb      	lsls	r3, r7
 800489e:	4573      	cmp	r3, lr
 80048a0:	d113      	bne.n	80048ca <HAL_GPIO_DeInit+0xbe>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80048a2:	6823      	ldr	r3, [r4, #0]
 80048a4:	ea23 0306 	bic.w	r3, r3, r6
 80048a8:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 80048aa:	6863      	ldr	r3, [r4, #4]
 80048ac:	ea23 0306 	bic.w	r3, r3, r6
 80048b0:	6063      	str	r3, [r4, #4]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 80048b2:	68e3      	ldr	r3, [r4, #12]
 80048b4:	ea23 0306 	bic.w	r3, r3, r6
 80048b8:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 80048ba:	68a3      	ldr	r3, [r4, #8]
 80048bc:	ea23 0306 	bic.w	r3, r3, r6
 80048c0:	60a3      	str	r3, [r4, #8]
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
 80048c2:	68ab      	ldr	r3, [r5, #8]
 80048c4:	ea23 0309 	bic.w	r3, r3, r9
 80048c8:	60ab      	str	r3, [r5, #8]
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 80048ca:	0053      	lsls	r3, r2, #1
 80048cc:	6805      	ldr	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80048ce:	08d6      	lsrs	r6, r2, #3
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 80048d0:	fa0b f303 	lsl.w	r3, fp, r3
 80048d4:	eb00 0686 	add.w	r6, r0, r6, lsl #2
 80048d8:	ea25 0503 	bic.w	r5, r5, r3
 80048dc:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80048de:	f002 0507 	and.w	r5, r2, #7
 80048e2:	6a37      	ldr	r7, [r6, #32]
 80048e4:	00ad      	lsls	r5, r5, #2
 80048e6:	fa08 f505 	lsl.w	r5, r8, r5
 80048ea:	ea27 0705 	bic.w	r7, r7, r5
 80048ee:	6237      	str	r7, [r6, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 80048f0:	68c5      	ldr	r5, [r0, #12]
 80048f2:	ea25 0503 	bic.w	r5, r5, r3
 80048f6:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 80048f8:	6845      	ldr	r5, [r0, #4]
 80048fa:	ea25 050c 	bic.w	r5, r5, ip
 80048fe:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004900:	6885      	ldr	r5, [r0, #8]
 8004902:	ea25 0303 	bic.w	r3, r5, r3
 8004906:	6083      	str	r3, [r0, #8]
  for(position = 0; position < GPIO_NUMBER; position++)
 8004908:	3201      	adds	r2, #1
 800490a:	2a10      	cmp	r2, #16
 800490c:	d188      	bne.n	8004820 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 800490e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 8004912:	2300      	movs	r3, #0
 8004914:	e7c2      	b.n	800489c <HAL_GPIO_DeInit+0x90>
 8004916:	2301      	movs	r3, #1
 8004918:	e7c0      	b.n	800489c <HAL_GPIO_DeInit+0x90>
 800491a:	2302      	movs	r3, #2
 800491c:	e7be      	b.n	800489c <HAL_GPIO_DeInit+0x90>
 800491e:	2303      	movs	r3, #3
 8004920:	e7bc      	b.n	800489c <HAL_GPIO_DeInit+0x90>
 8004922:	2304      	movs	r3, #4
 8004924:	e7ba      	b.n	800489c <HAL_GPIO_DeInit+0x90>
 8004926:	2305      	movs	r3, #5
 8004928:	e7b8      	b.n	800489c <HAL_GPIO_DeInit+0x90>
 800492a:	2306      	movs	r3, #6
 800492c:	e7b6      	b.n	800489c <HAL_GPIO_DeInit+0x90>
 800492e:	2307      	movs	r3, #7
 8004930:	e7b4      	b.n	800489c <HAL_GPIO_DeInit+0x90>
 8004932:	2308      	movs	r3, #8
 8004934:	e7b2      	b.n	800489c <HAL_GPIO_DeInit+0x90>
 8004936:	bf00      	nop
 8004938:	40013c00 	.word	0x40013c00
 800493c:	40020000 	.word	0x40020000

08004940 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004940:	6903      	ldr	r3, [r0, #16]
 8004942:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8004944:	bf14      	ite	ne
 8004946:	2001      	movne	r0, #1
 8004948:	2000      	moveq	r0, #0
 800494a:	4770      	bx	lr

0800494c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800494c:	b10a      	cbz	r2, 8004952 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 800494e:	6181      	str	r1, [r0, #24]
  }
}
 8004950:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8004952:	0409      	lsls	r1, r1, #16
 8004954:	e7fb      	b.n	800494e <HAL_GPIO_WritePin+0x2>

08004956 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004956:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004958:	ea01 0203 	and.w	r2, r1, r3
 800495c:	ea21 0103 	bic.w	r1, r1, r3
 8004960:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004964:	6181      	str	r1, [r0, #24]
}
 8004966:	4770      	bx	lr

08004968 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8004968:	6803      	ldr	r3, [r0, #0]
 800496a:	699a      	ldr	r2, [r3, #24]
 800496c:	0791      	lsls	r1, r2, #30
 800496e:	d501      	bpl.n	8004974 <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8004970:	2200      	movs	r2, #0
 8004972:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004974:	699a      	ldr	r2, [r3, #24]
 8004976:	07d2      	lsls	r2, r2, #31
 8004978:	d403      	bmi.n	8004982 <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 800497a:	699a      	ldr	r2, [r3, #24]
 800497c:	f042 0201 	orr.w	r2, r2, #1
 8004980:	619a      	str	r2, [r3, #24]
  }
}
 8004982:	4770      	bx	lr

08004984 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8004984:	b530      	push	{r4, r5, lr}
 8004986:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004988:	f3c1 0109 	ubfx	r1, r1, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 800498c:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800498e:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
 8004990:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004992:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 8004996:	4a05      	ldr	r2, [pc, #20]	@ (80049ac <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004998:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 800499a:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800499e:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 80049a2:	ea20 0002 	bic.w	r0, r0, r2
 80049a6:	4303      	orrs	r3, r0
 80049a8:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 80049aa:	bd30      	pop	{r4, r5, pc}
 80049ac:	03ff63ff 	.word	0x03ff63ff

080049b0 <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 80049b0:	6803      	ldr	r3, [r0, #0]
{
 80049b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 80049b6:	699c      	ldr	r4, [r3, #24]
{
 80049b8:	4605      	mov	r5, r0
 80049ba:	460f      	mov	r7, r1
 80049bc:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 80049be:	f014 0410 	ands.w	r4, r4, #16
 80049c2:	d06f      	beq.n	8004aa4 <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 80049c4:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80049c6:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 80049c8:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80049ca:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 80049cc:	682b      	ldr	r3, [r5, #0]
 80049ce:	699a      	ldr	r2, [r3, #24]
 80049d0:	0690      	lsls	r0, r2, #26
 80049d2:	d461      	bmi.n	8004a98 <I2C_IsErrorOccurred+0xe8>
 80049d4:	f1b8 0f00 	cmp.w	r8, #0
 80049d8:	d035      	beq.n	8004a46 <I2C_IsErrorOccurred+0x96>
    error_code |= HAL_I2C_ERROR_AF;
 80049da:	f044 0404 	orr.w	r4, r4, #4
    status = HAL_ERROR;
 80049de:	2001      	movs	r0, #1
  itflag = hi2c->Instance->ISR;
 80049e0:	682e      	ldr	r6, [r5, #0]
 80049e2:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 80049e4:	05d9      	lsls	r1, r3, #23
 80049e6:	d505      	bpl.n	80049f4 <I2C_IsErrorOccurred+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80049e8:	f44f 7280 	mov.w	r2, #256	@ 0x100
    error_code |= HAL_I2C_ERROR_BERR;
 80049ec:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
 80049f0:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80049f2:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 80049f4:	055a      	lsls	r2, r3, #21
 80049f6:	d505      	bpl.n	8004a04 <I2C_IsErrorOccurred+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 80049f8:	f44f 6280 	mov.w	r2, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
 80049fc:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
 8004a00:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004a02:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8004a04:	059b      	lsls	r3, r3, #22
 8004a06:	d54f      	bpl.n	8004aa8 <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004a08:	f44f 7300 	mov.w	r3, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8004a0c:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004a10:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 8004a12:	4628      	mov	r0, r5
 8004a14:	f7ff ffa8 	bl	8004968 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8004a18:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 8004a1a:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8004a1c:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
 8004a20:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
 8004a24:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
 8004a28:	f023 0301 	bic.w	r3, r3, #1
 8004a2c:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 8004a2e:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8004a30:	4323      	orrs	r3, r4
 8004a32:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8004a34:	2320      	movs	r3, #32
 8004a36:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004a3a:	2300      	movs	r3, #0
 8004a3c:	f885 3042 	strb.w	r3, [r5, #66]	@ 0x42
    __HAL_UNLOCK(hi2c);
 8004a40:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
 8004a44:	e032      	b.n	8004aac <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 8004a46:	1c7a      	adds	r2, r7, #1
 8004a48:	d0c1      	beq.n	80049ce <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004a4a:	f7ff fb87 	bl	800415c <HAL_GetTick>
 8004a4e:	1b80      	subs	r0, r0, r6
 8004a50:	42b8      	cmp	r0, r7
 8004a52:	d801      	bhi.n	8004a58 <I2C_IsErrorOccurred+0xa8>
 8004a54:	2f00      	cmp	r7, #0
 8004a56:	d1b9      	bne.n	80049cc <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8004a58:	682b      	ldr	r3, [r5, #0]
 8004a5a:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8004a5c:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004a60:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8004a62:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004a64:	0400      	lsls	r0, r0, #16
 8004a66:	d50a      	bpl.n	8004a7e <I2C_IsErrorOccurred+0xce>
 8004a68:	0449      	lsls	r1, r1, #17
 8004a6a:	d408      	bmi.n	8004a7e <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 8004a6c:	2a20      	cmp	r2, #32
 8004a6e:	d006      	beq.n	8004a7e <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8004a70:	685a      	ldr	r2, [r3, #4]
 8004a72:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004a76:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8004a78:	f7ff fb70 	bl	800415c <HAL_GetTick>
 8004a7c:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004a7e:	682b      	ldr	r3, [r5, #0]
 8004a80:	699b      	ldr	r3, [r3, #24]
 8004a82:	069b      	lsls	r3, r3, #26
 8004a84:	d4a2      	bmi.n	80049cc <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8004a86:	f7ff fb69 	bl	800415c <HAL_GetTick>
 8004a8a:	1b80      	subs	r0, r0, r6
 8004a8c:	2819      	cmp	r0, #25
 8004a8e:	d9f6      	bls.n	8004a7e <I2C_IsErrorOccurred+0xce>
              error_code |=HAL_I2C_ERROR_TIMEOUT;
 8004a90:	2420      	movs	r4, #32
              status = HAL_ERROR;
 8004a92:	f04f 0801 	mov.w	r8, #1
 8004a96:	e799      	b.n	80049cc <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 8004a98:	f1b8 0f00 	cmp.w	r8, #0
 8004a9c:	d19d      	bne.n	80049da <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004a9e:	2220      	movs	r2, #32
 8004aa0:	61da      	str	r2, [r3, #28]
 8004aa2:	e79a      	b.n	80049da <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 8004aa4:	4620      	mov	r0, r4
 8004aa6:	e79b      	b.n	80049e0 <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 8004aa8:	2800      	cmp	r0, #0
 8004aaa:	d1b2      	bne.n	8004a12 <I2C_IsErrorOccurred+0x62>
}
 8004aac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004ab0 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8004ab0:	b570      	push	{r4, r5, r6, lr}
 8004ab2:	4604      	mov	r4, r0
 8004ab4:	460d      	mov	r5, r1
 8004ab6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004ab8:	6823      	ldr	r3, [r4, #0]
 8004aba:	699b      	ldr	r3, [r3, #24]
 8004abc:	079b      	lsls	r3, r3, #30
 8004abe:	d501      	bpl.n	8004ac4 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8004ac0:	2000      	movs	r0, #0
 8004ac2:	e01b      	b.n	8004afc <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004ac4:	4632      	mov	r2, r6
 8004ac6:	4629      	mov	r1, r5
 8004ac8:	4620      	mov	r0, r4
 8004aca:	f7ff ff71 	bl	80049b0 <I2C_IsErrorOccurred>
 8004ace:	b9a0      	cbnz	r0, 8004afa <I2C_WaitOnTXISFlagUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8004ad0:	1c6a      	adds	r2, r5, #1
 8004ad2:	d0f1      	beq.n	8004ab8 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004ad4:	f7ff fb42 	bl	800415c <HAL_GetTick>
 8004ad8:	1b80      	subs	r0, r0, r6
 8004ada:	42a8      	cmp	r0, r5
 8004adc:	d801      	bhi.n	8004ae2 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8004ade:	2d00      	cmp	r5, #0
 8004ae0:	d1ea      	bne.n	8004ab8 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004ae2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8004ae4:	f043 0320 	orr.w	r3, r3, #32
 8004ae8:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8004aea:	2320      	movs	r3, #32
 8004aec:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8004af0:	2300      	movs	r3, #0
 8004af2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
 8004af6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004afa:	2001      	movs	r0, #1
}
 8004afc:	bd70      	pop	{r4, r5, r6, pc}

08004afe <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8004afe:	b570      	push	{r4, r5, r6, lr}
 8004b00:	4604      	mov	r4, r0
 8004b02:	460d      	mov	r5, r1
 8004b04:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004b06:	6823      	ldr	r3, [r4, #0]
 8004b08:	699b      	ldr	r3, [r3, #24]
 8004b0a:	069b      	lsls	r3, r3, #26
 8004b0c:	d501      	bpl.n	8004b12 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 8004b0e:	2000      	movs	r0, #0
 8004b10:	e019      	b.n	8004b46 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004b12:	4632      	mov	r2, r6
 8004b14:	4629      	mov	r1, r5
 8004b16:	4620      	mov	r0, r4
 8004b18:	f7ff ff4a 	bl	80049b0 <I2C_IsErrorOccurred>
 8004b1c:	b990      	cbnz	r0, 8004b44 <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004b1e:	f7ff fb1d 	bl	800415c <HAL_GetTick>
 8004b22:	1b80      	subs	r0, r0, r6
 8004b24:	42a8      	cmp	r0, r5
 8004b26:	d801      	bhi.n	8004b2c <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8004b28:	2d00      	cmp	r5, #0
 8004b2a:	d1ec      	bne.n	8004b06 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004b2c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8004b2e:	f043 0320 	orr.w	r3, r3, #32
 8004b32:	6463      	str	r3, [r4, #68]	@ 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 8004b34:	2320      	movs	r3, #32
 8004b36:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8004b3a:	2300      	movs	r3, #0
 8004b3c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      __HAL_UNLOCK(hi2c);
 8004b40:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004b44:	2001      	movs	r0, #1
}
 8004b46:	bd70      	pop	{r4, r5, r6, pc}

08004b48 <I2C_WaitOnFlagUntilTimeout>:
{
 8004b48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b4c:	9f06      	ldr	r7, [sp, #24]
 8004b4e:	4604      	mov	r4, r0
 8004b50:	4688      	mov	r8, r1
 8004b52:	4616      	mov	r6, r2
 8004b54:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004b56:	6822      	ldr	r2, [r4, #0]
 8004b58:	6993      	ldr	r3, [r2, #24]
 8004b5a:	ea38 0303 	bics.w	r3, r8, r3
 8004b5e:	bf0c      	ite	eq
 8004b60:	2301      	moveq	r3, #1
 8004b62:	2300      	movne	r3, #0
 8004b64:	42b3      	cmp	r3, r6
 8004b66:	d001      	beq.n	8004b6c <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 8004b68:	2000      	movs	r0, #0
 8004b6a:	e015      	b.n	8004b98 <I2C_WaitOnFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8004b6c:	1c6b      	adds	r3, r5, #1
 8004b6e:	d0f3      	beq.n	8004b58 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004b70:	f7ff faf4 	bl	800415c <HAL_GetTick>
 8004b74:	1bc0      	subs	r0, r0, r7
 8004b76:	42a8      	cmp	r0, r5
 8004b78:	d801      	bhi.n	8004b7e <I2C_WaitOnFlagUntilTimeout+0x36>
 8004b7a:	2d00      	cmp	r5, #0
 8004b7c:	d1eb      	bne.n	8004b56 <I2C_WaitOnFlagUntilTimeout+0xe>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004b7e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
        __HAL_UNLOCK(hi2c);
 8004b80:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004b82:	f043 0320 	orr.w	r3, r3, #32
 8004b86:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8004b88:	2320      	movs	r3, #32
 8004b8a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8004b8e:	2300      	movs	r3, #0
 8004b90:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
 8004b94:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8004b98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004b9c <HAL_I2C_Init>:
{
 8004b9c:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004b9e:	4604      	mov	r4, r0
 8004ba0:	2800      	cmp	r0, #0
 8004ba2:	d04a      	beq.n	8004c3a <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004ba4:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8004ba8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004bac:	b91b      	cbnz	r3, 8004bb6 <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8004bae:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
 8004bb2:	f7fc f8a5 	bl	8000d00 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004bb6:	2324      	movs	r3, #36	@ 0x24
 8004bb8:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8004bbc:	6823      	ldr	r3, [r4, #0]
 8004bbe:	681a      	ldr	r2, [r3, #0]
 8004bc0:	f022 0201 	bic.w	r2, r2, #1
 8004bc4:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8004bc6:	6862      	ldr	r2, [r4, #4]
 8004bc8:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8004bcc:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8004bce:	689a      	ldr	r2, [r3, #8]
 8004bd0:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004bd4:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8004bd6:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004bda:	2901      	cmp	r1, #1
 8004bdc:	d124      	bne.n	8004c28 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8004bde:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004be2:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8004be4:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004be6:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8004be8:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 8004bec:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004bf0:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8004bf2:	68da      	ldr	r2, [r3, #12]
 8004bf4:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004bf8:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8004bfa:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8004bfe:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8004c00:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8004c02:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004c06:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8004c08:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8004c0c:	430a      	orrs	r2, r1
 8004c0e:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8004c10:	681a      	ldr	r2, [r3, #0]
 8004c12:	f042 0201 	orr.w	r2, r2, #1
 8004c16:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8004c18:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004c1a:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8004c1c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8004c20:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004c22:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 8004c26:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004c28:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004c2c:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004c2e:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004c30:	d1d8      	bne.n	8004be4 <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8004c32:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8004c36:	605a      	str	r2, [r3, #4]
 8004c38:	e7d4      	b.n	8004be4 <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 8004c3a:	2001      	movs	r0, #1
 8004c3c:	e7f3      	b.n	8004c26 <HAL_I2C_Init+0x8a>

08004c3e <HAL_I2C_DeInit>:
{
 8004c3e:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004c40:	4604      	mov	r4, r0
 8004c42:	b198      	cbz	r0, 8004c6c <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8004c44:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004c46:	2324      	movs	r3, #36	@ 0x24
 8004c48:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8004c4c:	6813      	ldr	r3, [r2, #0]
 8004c4e:	f023 0301 	bic.w	r3, r3, #1
 8004c52:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8004c54:	f7fc f898 	bl	8000d88 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004c58:	2000      	movs	r0, #0
 8004c5a:	6460      	str	r0, [r4, #68]	@ 0x44
  __HAL_UNLOCK(hi2c);
 8004c5c:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 8004c60:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8004c64:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004c66:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 8004c6a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004c6c:	2001      	movs	r0, #1
 8004c6e:	e7fc      	b.n	8004c6a <HAL_I2C_DeInit+0x2c>

08004c70 <HAL_I2C_Mem_Write>:
{
 8004c70:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004c74:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c76:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8004c7a:	4604      	mov	r4, r0
 8004c7c:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c7e:	2b20      	cmp	r3, #32
{
 8004c80:	4616      	mov	r6, r2
 8004c82:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8004c86:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c8a:	f040 80c6 	bne.w	8004e1a <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 8004c8e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004c90:	b113      	cbz	r3, 8004c98 <HAL_I2C_Mem_Write+0x28>
 8004c92:	f1ba 0f00 	cmp.w	sl, #0
 8004c96:	d106      	bne.n	8004ca6 <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8004c98:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004c9c:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8004c9e:	2001      	movs	r0, #1
}
 8004ca0:	b003      	add	sp, #12
 8004ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8004ca6:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8004caa:	2b01      	cmp	r3, #1
 8004cac:	f000 80b5 	beq.w	8004e1a <HAL_I2C_Mem_Write+0x1aa>
 8004cb0:	f04f 0b01 	mov.w	fp, #1
 8004cb4:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8004cb8:	f7ff fa50 	bl	800415c <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004cbc:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 8004cbe:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004cc0:	9000      	str	r0, [sp, #0]
 8004cc2:	465a      	mov	r2, fp
 8004cc4:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8004cc8:	4620      	mov	r0, r4
 8004cca:	f7ff ff3d 	bl	8004b48 <I2C_WaitOnFlagUntilTimeout>
 8004cce:	2800      	cmp	r0, #0
 8004cd0:	d1e5      	bne.n	8004c9e <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004cd2:	2321      	movs	r3, #33	@ 0x21
    hi2c->XferISR   = NULL;
 8004cd4:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004cd6:	fa5f f289 	uxtb.w	r2, r9
 8004cda:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004cdc:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004ce0:	2340      	movs	r3, #64	@ 0x40
 8004ce2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8004ce6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004ce8:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004cea:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8004cec:	6263      	str	r3, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004cee:	4b4c      	ldr	r3, [pc, #304]	@ (8004e20 <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferCount = Size;
 8004cf0:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004cf4:	9300      	str	r3, [sp, #0]
 8004cf6:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8004cfa:	f7ff fe43 	bl	8004984 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004cfe:	462a      	mov	r2, r5
 8004d00:	4641      	mov	r1, r8
 8004d02:	4620      	mov	r0, r4
 8004d04:	f7ff fed4 	bl	8004ab0 <I2C_WaitOnTXISFlagUntilTimeout>
 8004d08:	bb18      	cbnz	r0, 8004d52 <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004d0a:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004d0e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004d10:	d115      	bne.n	8004d3e <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004d12:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8004d14:	2200      	movs	r2, #0
 8004d16:	2180      	movs	r1, #128	@ 0x80
 8004d18:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004d1a:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8004d1c:	4643      	mov	r3, r8
 8004d1e:	9500      	str	r5, [sp, #0]
 8004d20:	f7ff ff12 	bl	8004b48 <I2C_WaitOnFlagUntilTimeout>
 8004d24:	b9a8      	cbnz	r0, 8004d52 <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004d26:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004d28:	b29b      	uxth	r3, r3
 8004d2a:	2bff      	cmp	r3, #255	@ 0xff
 8004d2c:	d815      	bhi.n	8004d5a <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8004d2e:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004d30:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 8004d34:	b292      	uxth	r2, r2
 8004d36:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004d38:	b2d2      	uxtb	r2, r2
 8004d3a:	9000      	str	r0, [sp, #0]
 8004d3c:	e012      	b.n	8004d64 <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004d3e:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d40:	4641      	mov	r1, r8
 8004d42:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004d44:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d46:	462a      	mov	r2, r5
 8004d48:	f7ff feb2 	bl	8004ab0 <I2C_WaitOnTXISFlagUntilTimeout>
 8004d4c:	b908      	cbnz	r0, 8004d52 <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004d4e:	6823      	ldr	r3, [r4, #0]
 8004d50:	e7df      	b.n	8004d12 <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 8004d52:	2300      	movs	r3, #0
 8004d54:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004d58:	e7a1      	b.n	8004c9e <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004d5a:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8004d5c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004d60:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8004d62:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004d64:	4639      	mov	r1, r7
 8004d66:	4620      	mov	r0, r4
 8004d68:	f7ff fe0c 	bl	8004984 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004d6c:	462a      	mov	r2, r5
 8004d6e:	4641      	mov	r1, r8
 8004d70:	4620      	mov	r0, r4
 8004d72:	f7ff fe9d 	bl	8004ab0 <I2C_WaitOnTXISFlagUntilTimeout>
 8004d76:	2800      	cmp	r0, #0
 8004d78:	d191      	bne.n	8004c9e <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8004d7a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004d7c:	6822      	ldr	r2, [r4, #0]
 8004d7e:	f813 1b01 	ldrb.w	r1, [r3], #1
 8004d82:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8004d84:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8004d86:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004d88:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8004d8a:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8004d8c:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 8004d8e:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8004d90:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8004d92:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004d94:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004d96:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004d98:	b29b      	uxth	r3, r3
 8004d9a:	b1b3      	cbz	r3, 8004dca <HAL_I2C_Mem_Write+0x15a>
 8004d9c:	b9aa      	cbnz	r2, 8004dca <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8004d9e:	4643      	mov	r3, r8
 8004da0:	2180      	movs	r1, #128	@ 0x80
 8004da2:	4620      	mov	r0, r4
 8004da4:	9500      	str	r5, [sp, #0]
 8004da6:	f7ff fecf 	bl	8004b48 <I2C_WaitOnFlagUntilTimeout>
 8004daa:	2800      	cmp	r0, #0
 8004dac:	f47f af77 	bne.w	8004c9e <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004db0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004db2:	b29b      	uxth	r3, r3
 8004db4:	2bff      	cmp	r3, #255	@ 0xff
 8004db6:	d928      	bls.n	8004e0a <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004db8:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004dba:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004dbe:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004dc0:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004dc2:	4639      	mov	r1, r7
 8004dc4:	4620      	mov	r0, r4
 8004dc6:	f7ff fddd 	bl	8004984 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8004dca:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004dcc:	b29b      	uxth	r3, r3
 8004dce:	2b00      	cmp	r3, #0
 8004dd0:	d1cc      	bne.n	8004d6c <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004dd2:	462a      	mov	r2, r5
 8004dd4:	4641      	mov	r1, r8
 8004dd6:	4620      	mov	r0, r4
 8004dd8:	f7ff fe91 	bl	8004afe <I2C_WaitOnSTOPFlagUntilTimeout>
 8004ddc:	2800      	cmp	r0, #0
 8004dde:	f47f af5e 	bne.w	8004c9e <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004de2:	6823      	ldr	r3, [r4, #0]
 8004de4:	2120      	movs	r1, #32
 8004de6:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8004de8:	685a      	ldr	r2, [r3, #4]
 8004dea:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8004dee:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8004df2:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8004df6:	f022 0201 	bic.w	r2, r2, #1
 8004dfa:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8004dfc:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8004e00:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8004e04:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8004e08:	e74a      	b.n	8004ca0 <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8004e0a:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004e0c:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8004e10:	b292      	uxth	r2, r2
 8004e12:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004e14:	b2d2      	uxtb	r2, r2
 8004e16:	9000      	str	r0, [sp, #0]
 8004e18:	e7d3      	b.n	8004dc2 <HAL_I2C_Mem_Write+0x152>
    __HAL_LOCK(hi2c);
 8004e1a:	2002      	movs	r0, #2
 8004e1c:	e740      	b.n	8004ca0 <HAL_I2C_Mem_Write+0x30>
 8004e1e:	bf00      	nop
 8004e20:	80002000 	.word	0x80002000

08004e24 <HAL_I2C_Mem_Read>:
{
 8004e24:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e28:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e2a:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8004e2e:	4604      	mov	r4, r0
 8004e30:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e32:	2b20      	cmp	r3, #32
{
 8004e34:	4616      	mov	r6, r2
 8004e36:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8004e3a:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e3e:	f040 80c9 	bne.w	8004fd4 <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 8004e42:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004e44:	b113      	cbz	r3, 8004e4c <HAL_I2C_Mem_Read+0x28>
 8004e46:	f1ba 0f00 	cmp.w	sl, #0
 8004e4a:	d106      	bne.n	8004e5a <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8004e4c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004e50:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8004e52:	2001      	movs	r0, #1
}
 8004e54:	b003      	add	sp, #12
 8004e56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8004e5a:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8004e5e:	2b01      	cmp	r3, #1
 8004e60:	f000 80b8 	beq.w	8004fd4 <HAL_I2C_Mem_Read+0x1b0>
 8004e64:	f04f 0b01 	mov.w	fp, #1
 8004e68:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8004e6c:	f7ff f976 	bl	800415c <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004e70:	2319      	movs	r3, #25
 8004e72:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8004e74:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004e76:	465a      	mov	r2, fp
 8004e78:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8004e7c:	4620      	mov	r0, r4
 8004e7e:	f7ff fe63 	bl	8004b48 <I2C_WaitOnFlagUntilTimeout>
 8004e82:	4603      	mov	r3, r0
 8004e84:	2800      	cmp	r0, #0
 8004e86:	d1e4      	bne.n	8004e52 <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004e88:	2222      	movs	r2, #34	@ 0x22
    hi2c->XferISR   = NULL;
 8004e8a:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8004e8c:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004e8e:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004e92:	2240      	movs	r2, #64	@ 0x40
 8004e94:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8004e98:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e9a:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8004e9c:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8004e9e:	6262      	str	r2, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8004ea0:	4a4d      	ldr	r2, [pc, #308]	@ (8004fd8 <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferCount = Size;
 8004ea2:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8004ea6:	9200      	str	r2, [sp, #0]
 8004ea8:	fa5f f289 	uxtb.w	r2, r9
 8004eac:	f7ff fd6a 	bl	8004984 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004eb0:	462a      	mov	r2, r5
 8004eb2:	4641      	mov	r1, r8
 8004eb4:	4620      	mov	r0, r4
 8004eb6:	f7ff fdfb 	bl	8004ab0 <I2C_WaitOnTXISFlagUntilTimeout>
 8004eba:	bb20      	cbnz	r0, 8004f06 <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004ebc:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004ec0:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004ec2:	d116      	bne.n	8004ef2 <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004ec4:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8004ec6:	2200      	movs	r2, #0
 8004ec8:	2140      	movs	r1, #64	@ 0x40
 8004eca:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004ecc:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8004ece:	4643      	mov	r3, r8
 8004ed0:	9500      	str	r5, [sp, #0]
 8004ed2:	f7ff fe39 	bl	8004b48 <I2C_WaitOnFlagUntilTimeout>
 8004ed6:	b9b0      	cbnz	r0, 8004f06 <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004ed8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004eda:	b29b      	uxth	r3, r3
 8004edc:	2bff      	cmp	r3, #255	@ 0xff
 8004ede:	4b3f      	ldr	r3, [pc, #252]	@ (8004fdc <HAL_I2C_Mem_Read+0x1b8>)
 8004ee0:	d815      	bhi.n	8004f0e <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8004ee2:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 8004ee4:	b292      	uxth	r2, r2
 8004ee6:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004ee8:	b2d2      	uxtb	r2, r2
 8004eea:	9300      	str	r3, [sp, #0]
 8004eec:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8004ef0:	e012      	b.n	8004f18 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004ef2:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004ef4:	4641      	mov	r1, r8
 8004ef6:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004ef8:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004efa:	462a      	mov	r2, r5
 8004efc:	f7ff fdd8 	bl	8004ab0 <I2C_WaitOnTXISFlagUntilTimeout>
 8004f00:	b908      	cbnz	r0, 8004f06 <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004f02:	6823      	ldr	r3, [r4, #0]
 8004f04:	e7de      	b.n	8004ec4 <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 8004f06:	2300      	movs	r3, #0
 8004f08:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004f0c:	e7a1      	b.n	8004e52 <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004f0e:	22ff      	movs	r2, #255	@ 0xff
 8004f10:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004f12:	9300      	str	r3, [sp, #0]
 8004f14:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004f18:	4639      	mov	r1, r7
 8004f1a:	4620      	mov	r0, r4
 8004f1c:	f7ff fd32 	bl	8004984 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8004f20:	4643      	mov	r3, r8
 8004f22:	2200      	movs	r2, #0
 8004f24:	2104      	movs	r1, #4
 8004f26:	4620      	mov	r0, r4
 8004f28:	9500      	str	r5, [sp, #0]
 8004f2a:	f7ff fe0d 	bl	8004b48 <I2C_WaitOnFlagUntilTimeout>
 8004f2e:	2800      	cmp	r0, #0
 8004f30:	d18f      	bne.n	8004e52 <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8004f32:	6823      	ldr	r3, [r4, #0]
 8004f34:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004f36:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004f38:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8004f3a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 8004f3c:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8004f3e:	3301      	adds	r3, #1
      hi2c->XferSize--;
 8004f40:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 8004f42:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8004f44:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004f46:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8004f48:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8004f4a:	8522      	strh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8004f4c:	b29b      	uxth	r3, r3
 8004f4e:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004f50:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004f52:	b29b      	uxth	r3, r3
 8004f54:	b1b3      	cbz	r3, 8004f84 <HAL_I2C_Mem_Read+0x160>
 8004f56:	b9aa      	cbnz	r2, 8004f84 <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8004f58:	4643      	mov	r3, r8
 8004f5a:	2180      	movs	r1, #128	@ 0x80
 8004f5c:	4620      	mov	r0, r4
 8004f5e:	9500      	str	r5, [sp, #0]
 8004f60:	f7ff fdf2 	bl	8004b48 <I2C_WaitOnFlagUntilTimeout>
 8004f64:	2800      	cmp	r0, #0
 8004f66:	f47f af74 	bne.w	8004e52 <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004f6a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004f6c:	b29b      	uxth	r3, r3
 8004f6e:	2bff      	cmp	r3, #255	@ 0xff
 8004f70:	d928      	bls.n	8004fc4 <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004f72:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8004f74:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004f78:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8004f7a:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004f7c:	4639      	mov	r1, r7
 8004f7e:	4620      	mov	r0, r4
 8004f80:	f7ff fd00 	bl	8004984 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8004f84:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004f86:	b29b      	uxth	r3, r3
 8004f88:	2b00      	cmp	r3, #0
 8004f8a:	d1c9      	bne.n	8004f20 <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f8c:	462a      	mov	r2, r5
 8004f8e:	4641      	mov	r1, r8
 8004f90:	4620      	mov	r0, r4
 8004f92:	f7ff fdb4 	bl	8004afe <I2C_WaitOnSTOPFlagUntilTimeout>
 8004f96:	2800      	cmp	r0, #0
 8004f98:	f47f af5b 	bne.w	8004e52 <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004f9c:	6823      	ldr	r3, [r4, #0]
 8004f9e:	2120      	movs	r1, #32
 8004fa0:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8004fa2:	685a      	ldr	r2, [r3, #4]
 8004fa4:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8004fa8:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8004fac:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8004fb0:	f022 0201 	bic.w	r2, r2, #1
 8004fb4:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8004fb6:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8004fba:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8004fbe:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8004fc2:	e747      	b.n	8004e54 <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8004fc4:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004fc6:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8004fca:	b292      	uxth	r2, r2
 8004fcc:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004fce:	b2d2      	uxtb	r2, r2
 8004fd0:	9000      	str	r0, [sp, #0]
 8004fd2:	e7d3      	b.n	8004f7c <HAL_I2C_Mem_Read+0x158>
    __HAL_LOCK(hi2c);
 8004fd4:	2002      	movs	r0, #2
 8004fd6:	e73d      	b.n	8004e54 <HAL_I2C_Mem_Read+0x30>
 8004fd8:	80002000 	.word	0x80002000
 8004fdc:	80002400 	.word	0x80002400

08004fe0 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004fe0:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004fe2:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 8004fe6:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004fe8:	2a20      	cmp	r2, #32
 8004fea:	b2d4      	uxtb	r4, r2
 8004fec:	d11c      	bne.n	8005028 <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004fee:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8004ff2:	2a01      	cmp	r2, #1
 8004ff4:	d018      	beq.n	8005028 <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8004ff6:	2224      	movs	r2, #36	@ 0x24
 8004ff8:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004ffc:	6802      	ldr	r2, [r0, #0]
 8004ffe:	6810      	ldr	r0, [r2, #0]
 8005000:	f020 0001 	bic.w	r0, r0, #1
 8005004:	6010      	str	r0, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8005006:	6810      	ldr	r0, [r2, #0]
 8005008:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 800500c:	6010      	str	r0, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 800500e:	6810      	ldr	r0, [r2, #0]
 8005010:	4301      	orrs	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005012:	2000      	movs	r0, #0
    hi2c->Instance->CR1 |= AnalogFilter;
 8005014:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8005016:	6811      	ldr	r1, [r2, #0]
 8005018:	f041 0101 	orr.w	r1, r1, #1
 800501c:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800501e:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005022:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005026:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 8005028:	2002      	movs	r0, #2
 800502a:	e7fc      	b.n	8005026 <HAL_I2CEx_ConfigAnalogFilter+0x46>

0800502c <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800502c:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800502e:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 8005032:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005034:	2a20      	cmp	r2, #32
 8005036:	b2d4      	uxtb	r4, r2
 8005038:	d11b      	bne.n	8005072 <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 800503a:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 800503e:	2a01      	cmp	r2, #1
 8005040:	d017      	beq.n	8005072 <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005042:	2224      	movs	r2, #36	@ 0x24
 8005044:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005048:	6802      	ldr	r2, [r0, #0]
 800504a:	6810      	ldr	r0, [r2, #0]
 800504c:	f020 0001 	bic.w	r0, r0, #1
 8005050:	6010      	str	r0, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8005052:	6810      	ldr	r0, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8005054:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8005058:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800505c:	2000      	movs	r0, #0
    hi2c->Instance->CR1 = tmpreg;
 800505e:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8005060:	6811      	ldr	r1, [r2, #0]
 8005062:	f041 0101 	orr.w	r1, r1, #1
 8005066:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005068:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 800506c:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005070:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 8005072:	2002      	movs	r0, #2
 8005074:	e7fc      	b.n	8005070 <HAL_I2CEx_ConfigDigitalFilter+0x44>

08005076 <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005076:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005078:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800507a:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800507e:	3284      	adds	r2, #132	@ 0x84
 8005080:	1883      	adds	r3, r0, r2
{
 8005082:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005086:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005088:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800508c:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800508e:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005092:	684c      	ldr	r4, [r1, #4]
 8005094:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005098:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800509c:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80050a0:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80050a2:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80050a4:	68c5      	ldr	r5, [r0, #12]
 80050a6:	f3c5 450b 	ubfx	r5, r5, #16, #12
 80050aa:	443d      	add	r5, r7
 80050ac:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80050b0:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80050b2:	68c6      	ldr	r6, [r0, #12]
 80050b4:	68cd      	ldr	r5, [r1, #12]
 80050b6:	f3c6 060a 	ubfx	r6, r6, #0, #11
 80050ba:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80050bc:	689d      	ldr	r5, [r3, #8]
 80050be:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 80050c2:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80050c4:	688d      	ldr	r5, [r1, #8]
 80050c6:	68c7      	ldr	r7, [r0, #12]
 80050c8:	3501      	adds	r5, #1
 80050ca:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80050ce:	443d      	add	r5, r7
 80050d0:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80050d4:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80050d6:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80050d8:	691d      	ldr	r5, [r3, #16]
 80050da:	f025 0507 	bic.w	r5, r5, #7
 80050de:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80050e0:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80050e2:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80050e4:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80050e8:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80050ec:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80050f0:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 80050f4:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80050f8:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80050fc:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005100:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005102:	695d      	ldr	r5, [r3, #20]
 8005104:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8005108:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800510a:	694d      	ldr	r5, [r1, #20]
 800510c:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800510e:	69dd      	ldr	r5, [r3, #28]
 8005110:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8005114:	f025 0507 	bic.w	r5, r5, #7
 8005118:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800511a:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800511e:	433d      	orrs	r5, r7
 8005120:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005122:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005124:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005126:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800512a:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800512c:	b31e      	cbz	r6, 8005176 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800512e:	2e01      	cmp	r6, #1
 8005130:	d023      	beq.n	800517a <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005132:	1eb5      	subs	r5, r6, #2
 8005134:	2d02      	cmp	r5, #2
 8005136:	d922      	bls.n	800517e <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 8005138:	2e07      	cmp	r6, #7
 800513a:	bf14      	ite	ne
 800513c:	2501      	movne	r5, #1
 800513e:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005140:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005142:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005146:	f006 26e0 	and.w	r6, r6, #3758153728	@ 0xe000e000
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800514a:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800514c:	62de      	str	r6, [r3, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800514e:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005150:	6a8e      	ldr	r6, [r1, #40]	@ 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005152:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005154:	436e      	muls	r6, r5
 8005156:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800515a:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800515c:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 800515e:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 8005162:	f024 0407 	bic.w	r4, r4, #7
 8005166:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005168:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800516a:	5883      	ldr	r3, [r0, r2]
 800516c:	f043 0301 	orr.w	r3, r3, #1
 8005170:	5083      	str	r3, [r0, r2]
}
 8005172:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005176:	2504      	movs	r5, #4
 8005178:	e7e2      	b.n	8005140 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800517a:	2503      	movs	r5, #3
 800517c:	e7e0      	b.n	8005140 <LTDC_SetConfig+0xca>
    tmp = 2U;
 800517e:	2502      	movs	r5, #2
 8005180:	e7de      	b.n	8005140 <LTDC_SetConfig+0xca>
	...

08005184 <HAL_LTDC_Init>:
{
 8005184:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005186:	4604      	mov	r4, r0
 8005188:	2800      	cmp	r0, #0
 800518a:	d063      	beq.n	8005254 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800518c:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8005190:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005194:	b91b      	cbnz	r3, 800519e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005196:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 800519a:	f7fb fe11 	bl	8000dc0 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800519e:	2302      	movs	r3, #2
 80051a0:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80051a4:	6823      	ldr	r3, [r4, #0]
 80051a6:	699a      	ldr	r2, [r3, #24]
 80051a8:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 80051ac:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80051ae:	6999      	ldr	r1, [r3, #24]
 80051b0:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80051b4:	4302      	orrs	r2, r0
 80051b6:	68e0      	ldr	r0, [r4, #12]
 80051b8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80051ba:	6920      	ldr	r0, [r4, #16]
 80051bc:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80051be:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80051c0:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80051c2:	4925      	ldr	r1, [pc, #148]	@ (8005258 <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80051c4:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80051c6:	689a      	ldr	r2, [r3, #8]
 80051c8:	400a      	ands	r2, r1
 80051ca:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80051cc:	689a      	ldr	r2, [r3, #8]
 80051ce:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80051d2:	69a0      	ldr	r0, [r4, #24]
 80051d4:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80051d6:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80051d8:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80051da:	68da      	ldr	r2, [r3, #12]
 80051dc:	400a      	ands	r2, r1
 80051de:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80051e0:	68da      	ldr	r2, [r3, #12]
 80051e2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80051e6:	6a20      	ldr	r0, [r4, #32]
 80051e8:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80051ea:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80051ec:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80051ee:	691a      	ldr	r2, [r3, #16]
 80051f0:	400a      	ands	r2, r1
 80051f2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80051f4:	691a      	ldr	r2, [r3, #16]
 80051f6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80051fa:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80051fc:	4302      	orrs	r2, r0
 80051fe:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005200:	695a      	ldr	r2, [r3, #20]
 8005202:	400a      	ands	r2, r1
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005204:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005206:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005208:	695a      	ldr	r2, [r3, #20]
 800520a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800520e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8005210:	430a      	orrs	r2, r1
 8005212:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005214:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005216:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800521a:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800521e:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005222:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005224:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8005226:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 800522a:	432a      	orrs	r2, r5
 800522c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005230:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005232:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005236:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005238:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800523a:	f042 0206 	orr.w	r2, r2, #6
 800523e:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005240:	699a      	ldr	r2, [r3, #24]
 8005242:	f042 0201 	orr.w	r2, r2, #1
 8005246:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8005248:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800524a:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800524e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8005252:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005254:	2001      	movs	r0, #1
 8005256:	e7fc      	b.n	8005252 <HAL_LTDC_Init+0xce>
 8005258:	f000f800 	.word	0xf000f800

0800525c <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 800525c:	4770      	bx	lr

0800525e <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 800525e:	4770      	bx	lr

08005260 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005260:	6803      	ldr	r3, [r0, #0]
{
 8005262:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005264:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
{
 8005266:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005268:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800526a:	0772      	lsls	r2, r6, #29
 800526c:	d514      	bpl.n	8005298 <HAL_LTDC_IRQHandler+0x38>
 800526e:	0769      	lsls	r1, r5, #29
 8005270:	d512      	bpl.n	8005298 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005272:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005274:	f022 0204 	bic.w	r2, r2, #4
 8005278:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800527a:	2204      	movs	r2, #4
 800527c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800527e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8005282:	f043 0301 	orr.w	r3, r3, #1
 8005286:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 800528a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800528c:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005290:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005294:	f7ff ffe2 	bl	800525c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005298:	07b2      	lsls	r2, r6, #30
 800529a:	d516      	bpl.n	80052ca <HAL_LTDC_IRQHandler+0x6a>
 800529c:	07ab      	lsls	r3, r5, #30
 800529e:	d514      	bpl.n	80052ca <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80052a0:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 80052a2:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80052a4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80052a6:	f022 0202 	bic.w	r2, r2, #2
 80052aa:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80052ac:	2202      	movs	r2, #2
 80052ae:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80052b0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 80052b4:	4313      	orrs	r3, r2
 80052b6:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80052ba:	2304      	movs	r3, #4
 80052bc:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80052c0:	2300      	movs	r3, #0
 80052c2:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80052c6:	f7ff ffc9 	bl	800525c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80052ca:	07f0      	lsls	r0, r6, #31
 80052cc:	d510      	bpl.n	80052f0 <HAL_LTDC_IRQHandler+0x90>
 80052ce:	07e9      	lsls	r1, r5, #31
 80052d0:	d50e      	bpl.n	80052f0 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80052d2:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 80052d4:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80052d6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80052d8:	f022 0201 	bic.w	r2, r2, #1
 80052dc:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80052de:	2201      	movs	r2, #1
 80052e0:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 80052e2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80052e4:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80052e8:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80052ec:	f7fc fee4 	bl	80020b8 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80052f0:	0732      	lsls	r2, r6, #28
 80052f2:	d511      	bpl.n	8005318 <HAL_LTDC_IRQHandler+0xb8>
 80052f4:	072b      	lsls	r3, r5, #28
 80052f6:	d50f      	bpl.n	8005318 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80052f8:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 80052fa:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80052fc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80052fe:	f022 0208 	bic.w	r2, r2, #8
 8005302:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005304:	2208      	movs	r2, #8
 8005306:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005308:	2301      	movs	r3, #1
 800530a:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800530e:	2300      	movs	r3, #0
 8005310:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005314:	f7ff ffa3 	bl	800525e <HAL_LTDC_ReloadEventCallback>
}
 8005318:	bd70      	pop	{r4, r5, r6, pc}

0800531a <HAL_LTDC_ConfigLayer>:
{
 800531a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800531e:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
 8005322:	4606      	mov	r6, r0
 8005324:	460f      	mov	r7, r1
 8005326:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
 8005328:	2b01      	cmp	r3, #1
 800532a:	f04f 0002 	mov.w	r0, #2
 800532e:	d01f      	beq.n	8005370 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005330:	2434      	movs	r4, #52	@ 0x34
  __HAL_LOCK(hltdc);
 8005332:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005336:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005338:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800533c:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 8005340:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005344:	3438      	adds	r4, #56	@ 0x38
 8005346:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005348:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800534a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800534c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800534e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005350:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005352:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005354:	4630      	mov	r0, r6
 8005356:	4662      	mov	r2, ip
 8005358:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800535a:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800535c:	f7ff fe8b 	bl	8005076 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005360:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005362:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005364:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005368:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800536c:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8005370:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005374 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005374:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
{
 8005378:	4603      	mov	r3, r0
 800537a:	2002      	movs	r0, #2
  __HAL_LOCK(hltdc);
 800537c:	2a01      	cmp	r2, #1
 800537e:	d012      	beq.n	80053a6 <HAL_LTDC_ProgramLineEvent+0x32>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005380:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005382:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005386:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8005388:	f020 0001 	bic.w	r0, r0, #1
 800538c:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800538e:	4806      	ldr	r0, [pc, #24]	@ (80053a8 <HAL_LTDC_ProgramLineEvent+0x34>)
 8005390:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_UNLOCK(hltdc);
 8005392:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005394:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8005396:	f041 0101 	orr.w	r1, r1, #1
 800539a:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800539c:	2201      	movs	r2, #1
  __HAL_UNLOCK(hltdc);
 800539e:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_READY;
 80053a2:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
}
 80053a6:	4770      	bx	lr
 80053a8:	40016800 	.word	0x40016800

080053ac <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 80053ac:	4b19      	ldr	r3, [pc, #100]	@ (8005414 <HAL_PWREx_EnableOverDrive+0x68>)
{
 80053ae:	b537      	push	{r0, r1, r2, r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 80053b0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 80053b2:	4c19      	ldr	r4, [pc, #100]	@ (8005418 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80053b4:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80053b8:	641a      	str	r2, [r3, #64]	@ 0x40
 80053ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80053bc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80053c0:	9301      	str	r3, [sp, #4]
 80053c2:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 80053c4:	6823      	ldr	r3, [r4, #0]
 80053c6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80053ca:	6023      	str	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80053cc:	f7fe fec6 	bl	800415c <HAL_GetTick>
 80053d0:	4605      	mov	r5, r0

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80053d2:	6863      	ldr	r3, [r4, #4]
 80053d4:	03da      	lsls	r2, r3, #15
 80053d6:	d50c      	bpl.n	80053f2 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80053d8:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80053da:	4d0f      	ldr	r5, [pc, #60]	@ (8005418 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80053dc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80053e0:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 80053e2:	f7fe febb 	bl	800415c <HAL_GetTick>
 80053e6:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80053e8:	686b      	ldr	r3, [r5, #4]
 80053ea:	039b      	lsls	r3, r3, #14
 80053ec:	d50a      	bpl.n	8005404 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 80053ee:	2000      	movs	r0, #0
 80053f0:	e006      	b.n	8005400 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80053f2:	f7fe feb3 	bl	800415c <HAL_GetTick>
 80053f6:	1b40      	subs	r0, r0, r5
 80053f8:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80053fc:	d9e9      	bls.n	80053d2 <HAL_PWREx_EnableOverDrive+0x26>
      return HAL_TIMEOUT;
 80053fe:	2003      	movs	r0, #3
}
 8005400:	b003      	add	sp, #12
 8005402:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005404:	f7fe feaa 	bl	800415c <HAL_GetTick>
 8005408:	1b00      	subs	r0, r0, r4
 800540a:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800540e:	d9eb      	bls.n	80053e8 <HAL_PWREx_EnableOverDrive+0x3c>
 8005410:	e7f5      	b.n	80053fe <HAL_PWREx_EnableOverDrive+0x52>
 8005412:	bf00      	nop
 8005414:	40023800 	.word	0x40023800
 8005418:	40007000 	.word	0x40007000

0800541c <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 800541c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8005420:	6a4e      	ldr	r6, [r1, #36]	@ 0x24
 8005422:	b136      	cbz	r6, 8005432 <QSPI_Config+0x16>
 8005424:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
 8005428:	d003      	beq.n	8005432 <QSPI_Config+0x16>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800542a:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 800542c:	6804      	ldr	r4, [r0, #0]
 800542e:	3b01      	subs	r3, #1
 8005430:	6123      	str	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005432:	f8d1 a018 	ldr.w	sl, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005436:	e9d1 7e07 	ldrd	r7, lr, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800543a:	f1ba 0f00 	cmp.w	sl, #0
 800543e:	d04c      	beq.n	80054da <QSPI_Config+0xbe>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005440:	694c      	ldr	r4, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005442:	6805      	ldr	r5, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005444:	ea4f 4c84 	mov.w	ip, r4, lsl #18
 8005448:	ea4a 0406 	orr.w	r4, sl, r6
 800544c:	680b      	ldr	r3, [r1, #0]
 800544e:	f8d1 8034 	ldr.w	r8, [r1, #52]	@ 0x34
 8005452:	ea44 0a02 	orr.w	sl, r4, r2
 8005456:	e9d1 090b 	ldrd	r0, r9, [r1, #44]	@ 0x2c
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800545a:	f1be 0f00 	cmp.w	lr, #0
 800545e:	d024      	beq.n	80054aa <QSPI_Config+0x8e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005460:	688e      	ldr	r6, [r1, #8]
 8005462:	ea4a 040e 	orr.w	r4, sl, lr
 8005466:	61ee      	str	r6, [r5, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005468:	690e      	ldr	r6, [r1, #16]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800546a:	b19f      	cbz	r7, 8005494 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800546c:	433b      	orrs	r3, r7
 800546e:	4303      	orrs	r3, r0
 8005470:	68c8      	ldr	r0, [r1, #12]
 8005472:	ea43 0309 	orr.w	r3, r3, r9
 8005476:	ea43 0308 	orr.w	r3, r3, r8
 800547a:	4333      	orrs	r3, r6
 800547c:	4303      	orrs	r3, r0
 800547e:	ea43 030c 	orr.w	r3, r3, ip
 8005482:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005484:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005488:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800548a:	d001      	beq.n	8005490 <QSPI_Config+0x74>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800548c:	684b      	ldr	r3, [r1, #4]
 800548e:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8005490:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005494:	4303      	orrs	r3, r0
 8005496:	ea43 0309 	orr.w	r3, r3, r9
 800549a:	ea43 0308 	orr.w	r3, r3, r8
 800549e:	4333      	orrs	r3, r6
 80054a0:	ea43 030c 	orr.w	r3, r3, ip
 80054a4:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80054a6:	616b      	str	r3, [r5, #20]
 80054a8:	e7f2      	b.n	8005490 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80054aa:	b167      	cbz	r7, 80054c6 <QSPI_Config+0xaa>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80054ac:	433b      	orrs	r3, r7
 80054ae:	4303      	orrs	r3, r0
 80054b0:	68c8      	ldr	r0, [r1, #12]
 80054b2:	ea43 0309 	orr.w	r3, r3, r9
 80054b6:	ea43 0308 	orr.w	r3, r3, r8
 80054ba:	4303      	orrs	r3, r0
 80054bc:	ea43 030c 	orr.w	r3, r3, ip
 80054c0:	ea43 030a 	orr.w	r3, r3, sl
 80054c4:	e7de      	b.n	8005484 <QSPI_Config+0x68>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80054c6:	4303      	orrs	r3, r0
 80054c8:	ea43 0309 	orr.w	r3, r3, r9
 80054cc:	ea43 0408 	orr.w	r4, r3, r8
 80054d0:	ea44 030c 	orr.w	r3, r4, ip
 80054d4:	ea43 030a 	orr.w	r3, r3, sl
 80054d8:	e7e5      	b.n	80054a6 <QSPI_Config+0x8a>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80054da:	f1be 0f00 	cmp.w	lr, #0
 80054de:	d02c      	beq.n	800553a <QSPI_Config+0x11e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80054e0:	ea46 050e 	orr.w	r5, r6, lr
 80054e4:	688b      	ldr	r3, [r1, #8]
 80054e6:	6804      	ldr	r4, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80054e8:	694e      	ldr	r6, [r1, #20]
 80054ea:	4315      	orrs	r5, r2
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80054ec:	61e3      	str	r3, [r4, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80054ee:	f8d1 c034 	ldr.w	ip, [r1, #52]	@ 0x34
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80054f2:	04b6      	lsls	r6, r6, #18
 80054f4:	690b      	ldr	r3, [r1, #16]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80054f6:	e9d1 8e0b 	ldrd	r8, lr, [r1, #44]	@ 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80054fa:	b1a7      	cbz	r7, 8005526 <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80054fc:	433b      	orrs	r3, r7
 80054fe:	68c8      	ldr	r0, [r1, #12]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005500:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005504:	ea43 0308 	orr.w	r3, r3, r8
 8005508:	ea43 030e 	orr.w	r3, r3, lr
 800550c:	ea43 030c 	orr.w	r3, r3, ip
 8005510:	ea43 0300 	orr.w	r3, r3, r0
 8005514:	ea43 0306 	orr.w	r3, r3, r6
 8005518:	ea43 0305 	orr.w	r3, r3, r5
 800551c:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800551e:	d0b7      	beq.n	8005490 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005520:	684b      	ldr	r3, [r1, #4]
 8005522:	61a3      	str	r3, [r4, #24]
 8005524:	e7b4      	b.n	8005490 <QSPI_Config+0x74>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005526:	ea43 0308 	orr.w	r3, r3, r8
 800552a:	ea43 030e 	orr.w	r3, r3, lr
 800552e:	ea43 030c 	orr.w	r3, r3, ip
 8005532:	4333      	orrs	r3, r6
 8005534:	432b      	orrs	r3, r5
 8005536:	6163      	str	r3, [r4, #20]
 8005538:	e7aa      	b.n	8005490 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800553a:	b1d7      	cbz	r7, 8005572 <QSPI_Config+0x156>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800553c:	ea46 0307 	orr.w	r3, r6, r7
 8005540:	6acc      	ldr	r4, [r1, #44]	@ 0x2c
 8005542:	6800      	ldr	r0, [r0, #0]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005544:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005548:	ea43 0302 	orr.w	r3, r3, r2
 800554c:	ea43 0304 	orr.w	r3, r3, r4
 8005550:	6b0c      	ldr	r4, [r1, #48]	@ 0x30
 8005552:	ea43 0304 	orr.w	r3, r3, r4
 8005556:	6b4c      	ldr	r4, [r1, #52]	@ 0x34
 8005558:	ea43 0304 	orr.w	r3, r3, r4
 800555c:	68cc      	ldr	r4, [r1, #12]
 800555e:	ea43 0304 	orr.w	r3, r3, r4
 8005562:	694c      	ldr	r4, [r1, #20]
 8005564:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8005568:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800556a:	d091      	beq.n	8005490 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800556c:	684b      	ldr	r3, [r1, #4]
 800556e:	6183      	str	r3, [r0, #24]
 8005570:	e78e      	b.n	8005490 <QSPI_Config+0x74>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8005572:	2e00      	cmp	r6, #0
 8005574:	d08c      	beq.n	8005490 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005576:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 8005578:	6800      	ldr	r0, [r0, #0]
 800557a:	4333      	orrs	r3, r6
 800557c:	4313      	orrs	r3, r2
 800557e:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 8005580:	4313      	orrs	r3, r2
 8005582:	6b4a      	ldr	r2, [r1, #52]	@ 0x34
 8005584:	4313      	orrs	r3, r2
 8005586:	694a      	ldr	r2, [r1, #20]
 8005588:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 800558c:	6143      	str	r3, [r0, #20]
}
 800558e:	e77f      	b.n	8005490 <QSPI_Config+0x74>

08005590 <QSPI_WaitFlagStateUntilTimeout>:
{
 8005590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005594:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005598:	4604      	mov	r4, r0
 800559a:	460e      	mov	r6, r1
 800559c:	4615      	mov	r5, r2
 800559e:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 80055a0:	6822      	ldr	r2, [r4, #0]
 80055a2:	6893      	ldr	r3, [r2, #8]
 80055a4:	4233      	tst	r3, r6
 80055a6:	bf14      	ite	ne
 80055a8:	2301      	movne	r3, #1
 80055aa:	2300      	moveq	r3, #0
 80055ac:	42ab      	cmp	r3, r5
 80055ae:	d101      	bne.n	80055b4 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 80055b0:	2000      	movs	r0, #0
 80055b2:	e012      	b.n	80055da <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 80055b4:	f1b8 3fff 	cmp.w	r8, #4294967295
 80055b8:	d0f3      	beq.n	80055a2 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80055ba:	f7fe fdcf 	bl	800415c <HAL_GetTick>
 80055be:	1bc0      	subs	r0, r0, r7
 80055c0:	4540      	cmp	r0, r8
 80055c2:	d802      	bhi.n	80055ca <QSPI_WaitFlagStateUntilTimeout+0x3a>
 80055c4:	f1b8 0f00 	cmp.w	r8, #0
 80055c8:	d1ea      	bne.n	80055a0 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 80055ca:	2304      	movs	r3, #4
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 80055cc:	2001      	movs	r0, #1
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 80055ce:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 80055d2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80055d4:	f043 0301 	orr.w	r3, r3, #1
 80055d8:	6463      	str	r3, [r4, #68]	@ 0x44
}
 80055da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080055e0 <HAL_QSPI_Init>:
{
 80055e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80055e2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80055e4:	f7fe fdba 	bl	800415c <HAL_GetTick>
 80055e8:	4605      	mov	r5, r0
  if(hqspi == NULL)
 80055ea:	2c00      	cmp	r4, #0
 80055ec:	d046      	beq.n	800567c <HAL_QSPI_Init+0x9c>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 80055ee:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 80055f2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80055f6:	b93b      	cbnz	r3, 8005608 <HAL_QSPI_Init+0x28>
    HAL_QSPI_MspInit(hqspi);
 80055f8:	4620      	mov	r0, r4
    hqspi->Lock = HAL_UNLOCKED;
 80055fa:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    HAL_QSPI_MspInit(hqspi);
 80055fe:	f7fb fc8d 	bl	8000f1c <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8005602:	f241 3388 	movw	r3, #5000	@ 0x1388
 8005606:	64a3      	str	r3, [r4, #72]	@ 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005608:	6821      	ldr	r1, [r4, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800560a:	4620      	mov	r0, r4
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 800560c:	68a3      	ldr	r3, [r4, #8]
 800560e:	680a      	ldr	r2, [r1, #0]
 8005610:	3b01      	subs	r3, #1
 8005612:	f422 52f8 	bic.w	r2, r2, #7936	@ 0x1f00
 8005616:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800561a:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 800561c:	600a      	str	r2, [r1, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800561e:	2200      	movs	r2, #0
 8005620:	9300      	str	r3, [sp, #0]
 8005622:	2120      	movs	r1, #32
 8005624:	462b      	mov	r3, r5
 8005626:	f7ff ffb3 	bl	8005590 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 800562a:	bb10      	cbnz	r0, 8005672 <HAL_QSPI_Init+0x92>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 800562c:	6822      	ldr	r2, [r4, #0]
 800562e:	69e5      	ldr	r5, [r4, #28]
 8005630:	68e3      	ldr	r3, [r4, #12]
 8005632:	6811      	ldr	r1, [r2, #0]
 8005634:	432b      	orrs	r3, r5
 8005636:	6a25      	ldr	r5, [r4, #32]
 8005638:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 800563c:	432b      	orrs	r3, r5
 800563e:	6865      	ldr	r5, [r4, #4]
 8005640:	f021 01d0 	bic.w	r1, r1, #208	@ 0xd0
 8005644:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8005648:	430b      	orrs	r3, r1
 800564a:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800564c:	6855      	ldr	r5, [r2, #4]
 800564e:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005652:	430b      	orrs	r3, r1
 8005654:	6921      	ldr	r1, [r4, #16]
 8005656:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800565a:	4909      	ldr	r1, [pc, #36]	@ (8005680 <HAL_QSPI_Init+0xa0>)
 800565c:	4029      	ands	r1, r5
 800565e:	430b      	orrs	r3, r1
 8005660:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8005662:	6813      	ldr	r3, [r2, #0]
 8005664:	f043 0301 	orr.w	r3, r3, #1
 8005668:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800566a:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800566c:	6460      	str	r0, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800566e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005672:	2300      	movs	r3, #0
 8005674:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005678:	b003      	add	sp, #12
 800567a:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 800567c:	2001      	movs	r0, #1
 800567e:	e7fb      	b.n	8005678 <HAL_QSPI_Init+0x98>
 8005680:	ffe0f8fe 	.word	0xffe0f8fe

08005684 <HAL_QSPI_DeInit>:
{
 8005684:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8005686:	4604      	mov	r4, r0
 8005688:	b168      	cbz	r0, 80056a6 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 800568a:	6802      	ldr	r2, [r0, #0]
 800568c:	6813      	ldr	r3, [r2, #0]
 800568e:	f023 0301 	bic.w	r3, r3, #1
 8005692:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8005694:	f7fb fcb0 	bl	8000ff8 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005698:	2000      	movs	r0, #0
 800569a:	6460      	str	r0, [r4, #68]	@ 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 800569c:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 80056a0:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
}
 80056a4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80056a6:	2001      	movs	r0, #1
 80056a8:	e7fc      	b.n	80056a4 <HAL_QSPI_DeInit+0x20>

080056aa <HAL_QSPI_Command>:
{
 80056aa:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80056ae:	4604      	mov	r4, r0
 80056b0:	468a      	mov	sl, r1
 80056b2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80056b4:	f7fe fd52 	bl	800415c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80056b8:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 80056bc:	4607      	mov	r7, r0
  __HAL_LOCK(hqspi);
 80056be:	2b01      	cmp	r3, #1
 80056c0:	d036      	beq.n	8005730 <HAL_QSPI_Command+0x86>
 80056c2:	2301      	movs	r3, #1
 80056c4:	2602      	movs	r6, #2
 80056c6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80056ca:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 80056ce:	2b01      	cmp	r3, #1
 80056d0:	fa5f f983 	uxtb.w	r9, r3
 80056d4:	d128      	bne.n	8005728 <HAL_QSPI_Command+0x7e>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80056d6:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80056d8:	4603      	mov	r3, r0
 80056da:	2120      	movs	r1, #32
 80056dc:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80056de:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY;
 80056e0:	f884 6041 	strb.w	r6, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80056e4:	f8cd 8000 	str.w	r8, [sp]
 80056e8:	f7ff ff52 	bl	8005590 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80056ec:	4605      	mov	r5, r0
 80056ee:	b9a0      	cbnz	r0, 800571a <HAL_QSPI_Command+0x70>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80056f0:	4602      	mov	r2, r0
 80056f2:	4651      	mov	r1, sl
 80056f4:	4620      	mov	r0, r4
 80056f6:	f7ff fe91 	bl	800541c <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 80056fa:	f8da 3024 	ldr.w	r3, [sl, #36]	@ 0x24
 80056fe:	b953      	cbnz	r3, 8005716 <HAL_QSPI_Command+0x6c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005700:	463b      	mov	r3, r7
 8005702:	464a      	mov	r2, r9
 8005704:	4631      	mov	r1, r6
 8005706:	4620      	mov	r0, r4
 8005708:	f8cd 8000 	str.w	r8, [sp]
 800570c:	f7ff ff40 	bl	8005590 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005710:	b960      	cbnz	r0, 800572c <HAL_QSPI_Command+0x82>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005712:	6823      	ldr	r3, [r4, #0]
 8005714:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005716:	f884 9041 	strb.w	r9, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 800571a:	2300      	movs	r3, #0
 800571c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005720:	4628      	mov	r0, r5
 8005722:	b002      	add	sp, #8
 8005724:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    status = HAL_BUSY;
 8005728:	4635      	mov	r5, r6
 800572a:	e7f6      	b.n	800571a <HAL_QSPI_Command+0x70>
 800572c:	4605      	mov	r5, r0
 800572e:	e7f4      	b.n	800571a <HAL_QSPI_Command+0x70>
  __HAL_LOCK(hqspi);
 8005730:	2502      	movs	r5, #2
 8005732:	e7f5      	b.n	8005720 <HAL_QSPI_Command+0x76>

08005734 <HAL_QSPI_AutoPolling>:
{
 8005734:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005738:	4604      	mov	r4, r0
 800573a:	461f      	mov	r7, r3
 800573c:	4689      	mov	r9, r1
 800573e:	4615      	mov	r5, r2
  uint32_t tickstart = HAL_GetTick();
 8005740:	f7fe fd0c 	bl	800415c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005744:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 8005748:	4606      	mov	r6, r0
  __HAL_LOCK(hqspi);
 800574a:	2b01      	cmp	r3, #1
 800574c:	d041      	beq.n	80057d2 <HAL_QSPI_AutoPolling+0x9e>
 800574e:	2301      	movs	r3, #1
 8005750:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005754:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8005758:	2b01      	cmp	r3, #1
 800575a:	fa5f f883 	uxtb.w	r8, r3
 800575e:	d136      	bne.n	80057ce <HAL_QSPI_AutoPolling+0x9a>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005760:	2342      	movs	r3, #66	@ 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005762:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005764:	2120      	movs	r1, #32
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005766:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005768:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800576c:	4603      	mov	r3, r0
 800576e:	9700      	str	r7, [sp, #0]
 8005770:	4620      	mov	r0, r4
 8005772:	f7ff ff0d 	bl	8005590 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005776:	bb20      	cbnz	r0, 80057c2 <HAL_QSPI_AutoPolling+0x8e>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005778:	6822      	ldr	r2, [r4, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800577a:	4620      	mov	r0, r4
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800577c:	682b      	ldr	r3, [r5, #0]
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800577e:	6929      	ldr	r1, [r5, #16]
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005780:	6293      	str	r3, [r2, #40]	@ 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8005782:	686b      	ldr	r3, [r5, #4]
 8005784:	6253      	str	r3, [r2, #36]	@ 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8005786:	68ab      	ldr	r3, [r5, #8]
 8005788:	62d3      	str	r3, [r2, #44]	@ 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800578a:	6813      	ldr	r3, [r2, #0]
 800578c:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8005790:	430b      	orrs	r3, r1
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005792:	4649      	mov	r1, r9
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8005794:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8005798:	6013      	str	r3, [r2, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800579a:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
      cmd->NbData = cfg->StatusBytesSize;
 800579e:	68eb      	ldr	r3, [r5, #12]
 80057a0:	f8c9 3028 	str.w	r3, [r9, #40]	@ 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 80057a4:	f7ff fe3a 	bl	800541c <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 80057a8:	4633      	mov	r3, r6
 80057aa:	4642      	mov	r2, r8
 80057ac:	2108      	movs	r1, #8
 80057ae:	4620      	mov	r0, r4
 80057b0:	9700      	str	r7, [sp, #0]
 80057b2:	f7ff feed 	bl	8005590 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80057b6:	b920      	cbnz	r0, 80057c2 <HAL_QSPI_AutoPolling+0x8e>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 80057b8:	6823      	ldr	r3, [r4, #0]
 80057ba:	2208      	movs	r2, #8
 80057bc:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80057be:	f884 8041 	strb.w	r8, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 80057c2:	2300      	movs	r3, #0
 80057c4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 80057c8:	b003      	add	sp, #12
 80057ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 80057ce:	2002      	movs	r0, #2
 80057d0:	e7f7      	b.n	80057c2 <HAL_QSPI_AutoPolling+0x8e>
  __HAL_LOCK(hqspi);
 80057d2:	2002      	movs	r0, #2
 80057d4:	e7f8      	b.n	80057c8 <HAL_QSPI_AutoPolling+0x94>

080057d6 <HAL_QSPI_MemoryMapped>:
{
 80057d6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80057d8:	4604      	mov	r4, r0
 80057da:	4616      	mov	r6, r2
 80057dc:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80057de:	f7fe fcbd 	bl	800415c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80057e2:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 80057e6:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80057e8:	2a01      	cmp	r2, #1
 80057ea:	d033      	beq.n	8005854 <HAL_QSPI_MemoryMapped+0x7e>
 80057ec:	2201      	movs	r2, #1
 80057ee:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80057f2:	f894 2041 	ldrb.w	r2, [r4, #65]	@ 0x41
 80057f6:	2a01      	cmp	r2, #1
 80057f8:	d12a      	bne.n	8005850 <HAL_QSPI_MemoryMapped+0x7a>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80057fa:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80057fc:	2182      	movs	r1, #130	@ 0x82
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80057fe:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005800:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005802:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005806:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8005808:	9100      	str	r1, [sp, #0]
 800580a:	2120      	movs	r1, #32
 800580c:	f7ff fec0 	bl	8005590 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005810:	4605      	mov	r5, r0
 8005812:	b9b8      	cbnz	r0, 8005844 <HAL_QSPI_MemoryMapped+0x6e>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005814:	6823      	ldr	r3, [r4, #0]
 8005816:	6872      	ldr	r2, [r6, #4]
 8005818:	6818      	ldr	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800581a:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800581c:	f020 0008 	bic.w	r0, r0, #8
 8005820:	ea40 0002 	orr.w	r0, r0, r2
 8005824:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005826:	d107      	bne.n	8005838 <HAL_QSPI_MemoryMapped+0x62>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8005828:	6832      	ldr	r2, [r6, #0]
 800582a:	631a      	str	r2, [r3, #48]	@ 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 800582c:	2210      	movs	r2, #16
 800582e:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8005830:	681a      	ldr	r2, [r3, #0]
 8005832:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8005836:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8005838:	f04f 6240 	mov.w	r2, #201326592	@ 0xc000000
 800583c:	4639      	mov	r1, r7
 800583e:	4620      	mov	r0, r4
 8005840:	f7ff fdec 	bl	800541c <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8005844:	2300      	movs	r3, #0
 8005846:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 800584a:	4628      	mov	r0, r5
 800584c:	b003      	add	sp, #12
 800584e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8005850:	2502      	movs	r5, #2
 8005852:	e7f7      	b.n	8005844 <HAL_QSPI_MemoryMapped+0x6e>
  __HAL_LOCK(hqspi);
 8005854:	2502      	movs	r5, #2
 8005856:	e7f8      	b.n	800584a <HAL_QSPI_MemoryMapped+0x74>

08005858 <HAL_QSPI_Abort>:
{
 8005858:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800585a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800585c:	f7fe fc7e 	bl	800415c <HAL_GetTick>
 8005860:	4605      	mov	r5, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8005862:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8005866:	0798      	lsls	r0, r3, #30
 8005868:	d534      	bpl.n	80058d4 <HAL_QSPI_Abort+0x7c>
    __HAL_UNLOCK(hqspi);
 800586a:	2300      	movs	r3, #0
 800586c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8005870:	6823      	ldr	r3, [r4, #0]
 8005872:	681a      	ldr	r2, [r3, #0]
 8005874:	0751      	lsls	r1, r2, #29
 8005876:	d507      	bpl.n	8005888 <HAL_QSPI_Abort+0x30>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005878:	681a      	ldr	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800587a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800587c:	f022 0204 	bic.w	r2, r2, #4
 8005880:	601a      	str	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005882:	f7fe fd90 	bl	80043a6 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8005886:	bb40      	cbnz	r0, 80058da <HAL_QSPI_Abort+0x82>
  HAL_StatusTypeDef status = HAL_OK;
 8005888:	2000      	movs	r0, #0
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 800588a:	6823      	ldr	r3, [r4, #0]
 800588c:	689a      	ldr	r2, [r3, #8]
 800588e:	0692      	lsls	r2, r2, #26
 8005890:	d528      	bpl.n	80058e4 <HAL_QSPI_Abort+0x8c>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005892:	681a      	ldr	r2, [r3, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005894:	2102      	movs	r1, #2
 8005896:	4620      	mov	r0, r4
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005898:	f042 0202 	orr.w	r2, r2, #2
 800589c:	601a      	str	r2, [r3, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800589e:	2201      	movs	r2, #1
 80058a0:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80058a2:	9300      	str	r3, [sp, #0]
 80058a4:	462b      	mov	r3, r5
 80058a6:	f7ff fe73 	bl	8005590 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80058aa:	b9a0      	cbnz	r0, 80058d6 <HAL_QSPI_Abort+0x7e>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80058ac:	6823      	ldr	r3, [r4, #0]
 80058ae:	2202      	movs	r2, #2
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80058b0:	2120      	movs	r1, #32
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80058b2:	60da      	str	r2, [r3, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80058b4:	4602      	mov	r2, r0
 80058b6:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80058b8:	4620      	mov	r0, r4
 80058ba:	9300      	str	r3, [sp, #0]
 80058bc:	462b      	mov	r3, r5
 80058be:	f7ff fe67 	bl	8005590 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80058c2:	b940      	cbnz	r0, 80058d6 <HAL_QSPI_Abort+0x7e>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 80058c4:	6822      	ldr	r2, [r4, #0]
 80058c6:	6953      	ldr	r3, [r2, #20]
 80058c8:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 80058cc:	6153      	str	r3, [r2, #20]
        hqspi->State = HAL_QSPI_STATE_READY;
 80058ce:	2301      	movs	r3, #1
 80058d0:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  HAL_StatusTypeDef status = HAL_OK;
 80058d4:	2000      	movs	r0, #0
}
 80058d6:	b003      	add	sp, #12
 80058d8:	bd30      	pop	{r4, r5, pc}
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 80058da:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80058dc:	f043 0304 	orr.w	r3, r3, #4
 80058e0:	6463      	str	r3, [r4, #68]	@ 0x44
 80058e2:	e7d2      	b.n	800588a <HAL_QSPI_Abort+0x32>
      hqspi->State = HAL_QSPI_STATE_READY;
 80058e4:	2301      	movs	r3, #1
 80058e6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 80058ea:	e7f4      	b.n	80058d6 <HAL_QSPI_Abort+0x7e>

080058ec <HAL_QSPI_Transmit>:
{
 80058ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80058f0:	4604      	mov	r4, r0
 80058f2:	4688      	mov	r8, r1
 80058f4:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 80058f6:	f7fe fc31 	bl	800415c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80058fa:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 80058fe:	4606      	mov	r6, r0
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8005900:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8005902:	2b01      	cmp	r3, #1
 8005904:	d04f      	beq.n	80059a6 <HAL_QSPI_Transmit+0xba>
 8005906:	2301      	movs	r3, #1
 8005908:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800590c:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8005910:	2b01      	cmp	r3, #1
 8005912:	b2d8      	uxtb	r0, r3
 8005914:	d145      	bne.n	80059a2 <HAL_QSPI_Transmit+0xb6>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005916:	2300      	movs	r3, #0
 8005918:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 800591a:	f1b8 0f00 	cmp.w	r8, #0
 800591e:	d03b      	beq.n	8005998 <HAL_QSPI_Transmit+0xac>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8005920:	2312      	movs	r3, #18
 8005922:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005926:	692b      	ldr	r3, [r5, #16]
 8005928:	3301      	adds	r3, #1
 800592a:	62e3      	str	r3, [r4, #44]	@ 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800592c:	692b      	ldr	r3, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 800592e:	f8c4 8024 	str.w	r8, [r4, #36]	@ 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005932:	3301      	adds	r3, #1
 8005934:	62a3      	str	r3, [r4, #40]	@ 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005936:	696b      	ldr	r3, [r5, #20]
 8005938:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 800593c:	616b      	str	r3, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 800593e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8005940:	b9b3      	cbnz	r3, 8005970 <HAL_QSPI_Transmit+0x84>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005942:	4633      	mov	r3, r6
 8005944:	2201      	movs	r2, #1
 8005946:	2102      	movs	r1, #2
 8005948:	4620      	mov	r0, r4
 800594a:	9700      	str	r7, [sp, #0]
 800594c:	f7ff fe20 	bl	8005590 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005950:	b928      	cbnz	r0, 800595e <HAL_QSPI_Transmit+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005952:	6823      	ldr	r3, [r4, #0]
 8005954:	2202      	movs	r2, #2
          status = HAL_QSPI_Abort(hqspi);
 8005956:	4620      	mov	r0, r4
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005958:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800595a:	f7ff ff7d 	bl	8005858 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800595e:	2301      	movs	r3, #1
 8005960:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005964:	2300      	movs	r3, #0
 8005966:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 800596a:	b002      	add	sp, #8
 800596c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8005970:	4633      	mov	r3, r6
 8005972:	2201      	movs	r2, #1
 8005974:	2104      	movs	r1, #4
 8005976:	4620      	mov	r0, r4
 8005978:	9700      	str	r7, [sp, #0]
 800597a:	f7ff fe09 	bl	8005590 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800597e:	2800      	cmp	r0, #0
 8005980:	d1ed      	bne.n	800595e <HAL_QSPI_Transmit+0x72>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005982:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005984:	781b      	ldrb	r3, [r3, #0]
 8005986:	f885 3020 	strb.w	r3, [r5, #32]
        hqspi->pTxBuffPtr++;
 800598a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800598c:	3301      	adds	r3, #1
 800598e:	6263      	str	r3, [r4, #36]	@ 0x24
        hqspi->TxXferCount--;
 8005990:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8005992:	3b01      	subs	r3, #1
 8005994:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8005996:	e7d2      	b.n	800593e <HAL_QSPI_Transmit+0x52>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005998:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800599a:	f043 0308 	orr.w	r3, r3, #8
 800599e:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 80059a0:	e7e0      	b.n	8005964 <HAL_QSPI_Transmit+0x78>
    status = HAL_BUSY;
 80059a2:	2002      	movs	r0, #2
 80059a4:	e7de      	b.n	8005964 <HAL_QSPI_Transmit+0x78>
  __HAL_LOCK(hqspi);
 80059a6:	2002      	movs	r0, #2
 80059a8:	e7df      	b.n	800596a <HAL_QSPI_Transmit+0x7e>

080059aa <HAL_QSPI_Receive>:
{
 80059aa:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80059ae:	4604      	mov	r4, r0
 80059b0:	4616      	mov	r6, r2
 80059b2:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 80059b4:	f7fe fbd2 	bl	800415c <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 80059b8:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 80059ba:	4607      	mov	r7, r0
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 80059bc:	69aa      	ldr	r2, [r5, #24]
  __HAL_LOCK(hqspi);
 80059be:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 80059c2:	2b01      	cmp	r3, #1
 80059c4:	d052      	beq.n	8005a6c <HAL_QSPI_Receive+0xc2>
 80059c6:	2301      	movs	r3, #1
 80059c8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80059cc:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 80059d0:	2b01      	cmp	r3, #1
 80059d2:	b2d8      	uxtb	r0, r3
 80059d4:	d148      	bne.n	8005a68 <HAL_QSPI_Receive+0xbe>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80059d6:	2300      	movs	r3, #0
 80059d8:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 80059da:	f1b8 0f00 	cmp.w	r8, #0
 80059de:	d03e      	beq.n	8005a5e <HAL_QSPI_Receive+0xb4>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 80059e0:	2322      	movs	r3, #34	@ 0x22
 80059e2:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80059e6:	692b      	ldr	r3, [r5, #16]
 80059e8:	3301      	adds	r3, #1
 80059ea:	63a3      	str	r3, [r4, #56]	@ 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80059ec:	692b      	ldr	r3, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 80059ee:	f8c4 8030 	str.w	r8, [r4, #48]	@ 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80059f2:	3301      	adds	r3, #1
 80059f4:	6363      	str	r3, [r4, #52]	@ 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80059f6:	6969      	ldr	r1, [r5, #20]
 80059f8:	f021 6140 	bic.w	r1, r1, #201326592	@ 0xc000000
 80059fc:	f041 6180 	orr.w	r1, r1, #67108864	@ 0x4000000
 8005a00:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8005a02:	61aa      	str	r2, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8005a04:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005a06:	b9b3      	cbnz	r3, 8005a36 <HAL_QSPI_Receive+0x8c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005a08:	463b      	mov	r3, r7
 8005a0a:	2201      	movs	r2, #1
 8005a0c:	2102      	movs	r1, #2
 8005a0e:	4620      	mov	r0, r4
 8005a10:	9600      	str	r6, [sp, #0]
 8005a12:	f7ff fdbd 	bl	8005590 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8005a16:	b928      	cbnz	r0, 8005a24 <HAL_QSPI_Receive+0x7a>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005a18:	6823      	ldr	r3, [r4, #0]
 8005a1a:	2202      	movs	r2, #2
          status = HAL_QSPI_Abort(hqspi);
 8005a1c:	4620      	mov	r0, r4
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005a1e:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005a20:	f7ff ff1a 	bl	8005858 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005a24:	2301      	movs	r3, #1
 8005a26:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005a2a:	2300      	movs	r3, #0
 8005a2c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005a30:	b002      	add	sp, #8
 8005a32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8005a36:	463b      	mov	r3, r7
 8005a38:	2201      	movs	r2, #1
 8005a3a:	2106      	movs	r1, #6
 8005a3c:	4620      	mov	r0, r4
 8005a3e:	9600      	str	r6, [sp, #0]
 8005a40:	f7ff fda6 	bl	8005590 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8005a44:	2800      	cmp	r0, #0
 8005a46:	d1ed      	bne.n	8005a24 <HAL_QSPI_Receive+0x7a>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8005a48:	f895 2020 	ldrb.w	r2, [r5, #32]
 8005a4c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005a4e:	701a      	strb	r2, [r3, #0]
        hqspi->pRxBuffPtr++;
 8005a50:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005a52:	3301      	adds	r3, #1
 8005a54:	6323      	str	r3, [r4, #48]	@ 0x30
        hqspi->RxXferCount--;
 8005a56:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005a58:	3b01      	subs	r3, #1
 8005a5a:	63a3      	str	r3, [r4, #56]	@ 0x38
 8005a5c:	e7d2      	b.n	8005a04 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005a5e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8005a60:	f043 0308 	orr.w	r3, r3, #8
 8005a64:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 8005a66:	e7e0      	b.n	8005a2a <HAL_QSPI_Receive+0x80>
    status = HAL_BUSY;
 8005a68:	2002      	movs	r0, #2
 8005a6a:	e7de      	b.n	8005a2a <HAL_QSPI_Receive+0x80>
  __HAL_LOCK(hqspi);
 8005a6c:	2002      	movs	r0, #2
 8005a6e:	e7df      	b.n	8005a30 <HAL_QSPI_Receive+0x86>

08005a70 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005a70:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005a74:	4604      	mov	r4, r0
 8005a76:	b340      	cbz	r0, 8005aca <HAL_RCC_OscConfig+0x5a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005a78:	6803      	ldr	r3, [r0, #0]
 8005a7a:	07de      	lsls	r6, r3, #31
 8005a7c:	d410      	bmi.n	8005aa0 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005a7e:	6823      	ldr	r3, [r4, #0]
 8005a80:	079d      	lsls	r5, r3, #30
 8005a82:	d461      	bmi.n	8005b48 <HAL_RCC_OscConfig+0xd8>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005a84:	6823      	ldr	r3, [r4, #0]
 8005a86:	0719      	lsls	r1, r3, #28
 8005a88:	f100 80a6 	bmi.w	8005bd8 <HAL_RCC_OscConfig+0x168>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005a8c:	6823      	ldr	r3, [r4, #0]
 8005a8e:	075a      	lsls	r2, r3, #29
 8005a90:	f100 80c7 	bmi.w	8005c22 <HAL_RCC_OscConfig+0x1b2>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005a94:	69a2      	ldr	r2, [r4, #24]
 8005a96:	2a00      	cmp	r2, #0
 8005a98:	f040 8130 	bne.w	8005cfc <HAL_RCC_OscConfig+0x28c>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
 8005a9c:	2000      	movs	r0, #0
 8005a9e:	e02c      	b.n	8005afa <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8005aa0:	4b94      	ldr	r3, [pc, #592]	@ (8005cf4 <HAL_RCC_OscConfig+0x284>)
 8005aa2:	689a      	ldr	r2, [r3, #8]
 8005aa4:	f002 020c 	and.w	r2, r2, #12
 8005aa8:	2a04      	cmp	r2, #4
 8005aaa:	d007      	beq.n	8005abc <HAL_RCC_OscConfig+0x4c>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005aac:	689a      	ldr	r2, [r3, #8]
 8005aae:	f002 020c 	and.w	r2, r2, #12
 8005ab2:	2a08      	cmp	r2, #8
 8005ab4:	d10b      	bne.n	8005ace <HAL_RCC_OscConfig+0x5e>
 8005ab6:	685b      	ldr	r3, [r3, #4]
 8005ab8:	0259      	lsls	r1, r3, #9
 8005aba:	d508      	bpl.n	8005ace <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005abc:	4b8d      	ldr	r3, [pc, #564]	@ (8005cf4 <HAL_RCC_OscConfig+0x284>)
 8005abe:	681b      	ldr	r3, [r3, #0]
 8005ac0:	039a      	lsls	r2, r3, #14
 8005ac2:	d5dc      	bpl.n	8005a7e <HAL_RCC_OscConfig+0xe>
 8005ac4:	6863      	ldr	r3, [r4, #4]
 8005ac6:	2b00      	cmp	r3, #0
 8005ac8:	d1d9      	bne.n	8005a7e <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 8005aca:	2001      	movs	r0, #1
 8005acc:	e015      	b.n	8005afa <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005ace:	6863      	ldr	r3, [r4, #4]
 8005ad0:	4d88      	ldr	r5, [pc, #544]	@ (8005cf4 <HAL_RCC_OscConfig+0x284>)
 8005ad2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005ad6:	d113      	bne.n	8005b00 <HAL_RCC_OscConfig+0x90>
 8005ad8:	682b      	ldr	r3, [r5, #0]
 8005ada:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005ade:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005ae0:	f7fe fb3c 	bl	800415c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005ae4:	4e83      	ldr	r6, [pc, #524]	@ (8005cf4 <HAL_RCC_OscConfig+0x284>)
        tickstart = HAL_GetTick();
 8005ae6:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005ae8:	6833      	ldr	r3, [r6, #0]
 8005aea:	039b      	lsls	r3, r3, #14
 8005aec:	d4c7      	bmi.n	8005a7e <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005aee:	f7fe fb35 	bl	800415c <HAL_GetTick>
 8005af2:	1b40      	subs	r0, r0, r5
 8005af4:	2864      	cmp	r0, #100	@ 0x64
 8005af6:	d9f7      	bls.n	8005ae8 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8005af8:	2003      	movs	r0, #3
}
 8005afa:	b002      	add	sp, #8
 8005afc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005b00:	b99b      	cbnz	r3, 8005b2a <HAL_RCC_OscConfig+0xba>
 8005b02:	682b      	ldr	r3, [r5, #0]
 8005b04:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005b08:	602b      	str	r3, [r5, #0]
 8005b0a:	682b      	ldr	r3, [r5, #0]
 8005b0c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005b10:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005b12:	f7fe fb23 	bl	800415c <HAL_GetTick>
 8005b16:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005b18:	682b      	ldr	r3, [r5, #0]
 8005b1a:	039f      	lsls	r7, r3, #14
 8005b1c:	d5af      	bpl.n	8005a7e <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005b1e:	f7fe fb1d 	bl	800415c <HAL_GetTick>
 8005b22:	1b80      	subs	r0, r0, r6
 8005b24:	2864      	cmp	r0, #100	@ 0x64
 8005b26:	d9f7      	bls.n	8005b18 <HAL_RCC_OscConfig+0xa8>
 8005b28:	e7e6      	b.n	8005af8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005b2a:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005b2e:	682b      	ldr	r3, [r5, #0]
 8005b30:	d103      	bne.n	8005b3a <HAL_RCC_OscConfig+0xca>
 8005b32:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005b36:	602b      	str	r3, [r5, #0]
 8005b38:	e7ce      	b.n	8005ad8 <HAL_RCC_OscConfig+0x68>
 8005b3a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005b3e:	602b      	str	r3, [r5, #0]
 8005b40:	682b      	ldr	r3, [r5, #0]
 8005b42:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005b46:	e7ca      	b.n	8005ade <HAL_RCC_OscConfig+0x6e>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8005b48:	4b6a      	ldr	r3, [pc, #424]	@ (8005cf4 <HAL_RCC_OscConfig+0x284>)
 8005b4a:	689a      	ldr	r2, [r3, #8]
 8005b4c:	f012 0f0c 	tst.w	r2, #12
 8005b50:	d007      	beq.n	8005b62 <HAL_RCC_OscConfig+0xf2>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005b52:	689a      	ldr	r2, [r3, #8]
 8005b54:	f002 020c 	and.w	r2, r2, #12
 8005b58:	2a08      	cmp	r2, #8
 8005b5a:	d111      	bne.n	8005b80 <HAL_RCC_OscConfig+0x110>
 8005b5c:	685b      	ldr	r3, [r3, #4]
 8005b5e:	025d      	lsls	r5, r3, #9
 8005b60:	d40e      	bmi.n	8005b80 <HAL_RCC_OscConfig+0x110>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005b62:	4a64      	ldr	r2, [pc, #400]	@ (8005cf4 <HAL_RCC_OscConfig+0x284>)
 8005b64:	6813      	ldr	r3, [r2, #0]
 8005b66:	0799      	lsls	r1, r3, #30
 8005b68:	d502      	bpl.n	8005b70 <HAL_RCC_OscConfig+0x100>
 8005b6a:	68e3      	ldr	r3, [r4, #12]
 8005b6c:	2b01      	cmp	r3, #1
 8005b6e:	d1ac      	bne.n	8005aca <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005b70:	6813      	ldr	r3, [r2, #0]
 8005b72:	6921      	ldr	r1, [r4, #16]
 8005b74:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005b78:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005b7c:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005b7e:	e781      	b.n	8005a84 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005b80:	68e3      	ldr	r3, [r4, #12]
 8005b82:	4d5c      	ldr	r5, [pc, #368]	@ (8005cf4 <HAL_RCC_OscConfig+0x284>)
 8005b84:	b1bb      	cbz	r3, 8005bb6 <HAL_RCC_OscConfig+0x146>
        __HAL_RCC_HSI_ENABLE();
 8005b86:	682b      	ldr	r3, [r5, #0]
 8005b88:	f043 0301 	orr.w	r3, r3, #1
 8005b8c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005b8e:	f7fe fae5 	bl	800415c <HAL_GetTick>
 8005b92:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005b94:	682b      	ldr	r3, [r5, #0]
 8005b96:	079b      	lsls	r3, r3, #30
 8005b98:	d507      	bpl.n	8005baa <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005b9a:	682b      	ldr	r3, [r5, #0]
 8005b9c:	6922      	ldr	r2, [r4, #16]
 8005b9e:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005ba2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005ba6:	602b      	str	r3, [r5, #0]
 8005ba8:	e76c      	b.n	8005a84 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005baa:	f7fe fad7 	bl	800415c <HAL_GetTick>
 8005bae:	1b80      	subs	r0, r0, r6
 8005bb0:	2802      	cmp	r0, #2
 8005bb2:	d9ef      	bls.n	8005b94 <HAL_RCC_OscConfig+0x124>
 8005bb4:	e7a0      	b.n	8005af8 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8005bb6:	682b      	ldr	r3, [r5, #0]
 8005bb8:	f023 0301 	bic.w	r3, r3, #1
 8005bbc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005bbe:	f7fe facd 	bl	800415c <HAL_GetTick>
 8005bc2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005bc4:	682b      	ldr	r3, [r5, #0]
 8005bc6:	079f      	lsls	r7, r3, #30
 8005bc8:	f57f af5c 	bpl.w	8005a84 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005bcc:	f7fe fac6 	bl	800415c <HAL_GetTick>
 8005bd0:	1b80      	subs	r0, r0, r6
 8005bd2:	2802      	cmp	r0, #2
 8005bd4:	d9f6      	bls.n	8005bc4 <HAL_RCC_OscConfig+0x154>
 8005bd6:	e78f      	b.n	8005af8 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8005bd8:	6963      	ldr	r3, [r4, #20]
 8005bda:	4d46      	ldr	r5, [pc, #280]	@ (8005cf4 <HAL_RCC_OscConfig+0x284>)
 8005bdc:	b183      	cbz	r3, 8005c00 <HAL_RCC_OscConfig+0x190>
      __HAL_RCC_LSI_ENABLE();
 8005bde:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 8005be0:	f043 0301 	orr.w	r3, r3, #1
 8005be4:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
 8005be6:	f7fe fab9 	bl	800415c <HAL_GetTick>
 8005bea:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005bec:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 8005bee:	079b      	lsls	r3, r3, #30
 8005bf0:	f53f af4c 	bmi.w	8005a8c <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005bf4:	f7fe fab2 	bl	800415c <HAL_GetTick>
 8005bf8:	1b80      	subs	r0, r0, r6
 8005bfa:	2802      	cmp	r0, #2
 8005bfc:	d9f6      	bls.n	8005bec <HAL_RCC_OscConfig+0x17c>
 8005bfe:	e77b      	b.n	8005af8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8005c00:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 8005c02:	f023 0301 	bic.w	r3, r3, #1
 8005c06:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
 8005c08:	f7fe faa8 	bl	800415c <HAL_GetTick>
 8005c0c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005c0e:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 8005c10:	079f      	lsls	r7, r3, #30
 8005c12:	f57f af3b 	bpl.w	8005a8c <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005c16:	f7fe faa1 	bl	800415c <HAL_GetTick>
 8005c1a:	1b80      	subs	r0, r0, r6
 8005c1c:	2802      	cmp	r0, #2
 8005c1e:	d9f6      	bls.n	8005c0e <HAL_RCC_OscConfig+0x19e>
 8005c20:	e76a      	b.n	8005af8 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005c22:	4b34      	ldr	r3, [pc, #208]	@ (8005cf4 <HAL_RCC_OscConfig+0x284>)
 8005c24:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005c26:	00d5      	lsls	r5, r2, #3
 8005c28:	d427      	bmi.n	8005c7a <HAL_RCC_OscConfig+0x20a>
      __HAL_RCC_PWR_CLK_ENABLE();
 8005c2a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
      pwrclkchanged = SET;
 8005c2c:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8005c2e:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005c32:	641a      	str	r2, [r3, #64]	@ 0x40
 8005c34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005c36:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005c3a:	9301      	str	r3, [sp, #4]
 8005c3c:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8005c3e:	4d2e      	ldr	r5, [pc, #184]	@ (8005cf8 <HAL_RCC_OscConfig+0x288>)
 8005c40:	682b      	ldr	r3, [r5, #0]
 8005c42:	05d8      	lsls	r0, r3, #23
 8005c44:	d51b      	bpl.n	8005c7e <HAL_RCC_OscConfig+0x20e>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005c46:	68a3      	ldr	r3, [r4, #8]
 8005c48:	4d2a      	ldr	r5, [pc, #168]	@ (8005cf4 <HAL_RCC_OscConfig+0x284>)
 8005c4a:	2b01      	cmp	r3, #1
 8005c4c:	d127      	bne.n	8005c9e <HAL_RCC_OscConfig+0x22e>
 8005c4e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005c50:	f043 0301 	orr.w	r3, r3, #1
 8005c54:	672b      	str	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005c56:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8005c5a:	f7fe fa7f 	bl	800415c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005c5e:	4e25      	ldr	r6, [pc, #148]	@ (8005cf4 <HAL_RCC_OscConfig+0x284>)
      tickstart = HAL_GetTick();
 8005c60:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005c62:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8005c64:	079a      	lsls	r2, r3, #30
 8005c66:	d53f      	bpl.n	8005ce8 <HAL_RCC_OscConfig+0x278>
    if (pwrclkchanged == SET)
 8005c68:	2f00      	cmp	r7, #0
 8005c6a:	f43f af13 	beq.w	8005a94 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8005c6e:	4a21      	ldr	r2, [pc, #132]	@ (8005cf4 <HAL_RCC_OscConfig+0x284>)
 8005c70:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8005c72:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005c76:	6413      	str	r3, [r2, #64]	@ 0x40
 8005c78:	e70c      	b.n	8005a94 <HAL_RCC_OscConfig+0x24>
  FlagStatus pwrclkchanged = RESET;
 8005c7a:	2700      	movs	r7, #0
 8005c7c:	e7df      	b.n	8005c3e <HAL_RCC_OscConfig+0x1ce>
      PWR->CR1 |= PWR_CR1_DBP;
 8005c7e:	682b      	ldr	r3, [r5, #0]
 8005c80:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005c84:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8005c86:	f7fe fa69 	bl	800415c <HAL_GetTick>
 8005c8a:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8005c8c:	682b      	ldr	r3, [r5, #0]
 8005c8e:	05d9      	lsls	r1, r3, #23
 8005c90:	d4d9      	bmi.n	8005c46 <HAL_RCC_OscConfig+0x1d6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005c92:	f7fe fa63 	bl	800415c <HAL_GetTick>
 8005c96:	1b80      	subs	r0, r0, r6
 8005c98:	2864      	cmp	r0, #100	@ 0x64
 8005c9a:	d9f7      	bls.n	8005c8c <HAL_RCC_OscConfig+0x21c>
 8005c9c:	e72c      	b.n	8005af8 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005c9e:	b9ab      	cbnz	r3, 8005ccc <HAL_RCC_OscConfig+0x25c>
 8005ca0:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005ca2:	f241 3888 	movw	r8, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005ca6:	f023 0301 	bic.w	r3, r3, #1
 8005caa:	672b      	str	r3, [r5, #112]	@ 0x70
 8005cac:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005cae:	f023 0304 	bic.w	r3, r3, #4
 8005cb2:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8005cb4:	f7fe fa52 	bl	800415c <HAL_GetTick>
 8005cb8:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005cba:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005cbc:	079b      	lsls	r3, r3, #30
 8005cbe:	d5d3      	bpl.n	8005c68 <HAL_RCC_OscConfig+0x1f8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005cc0:	f7fe fa4c 	bl	800415c <HAL_GetTick>
 8005cc4:	1b80      	subs	r0, r0, r6
 8005cc6:	4540      	cmp	r0, r8
 8005cc8:	d9f7      	bls.n	8005cba <HAL_RCC_OscConfig+0x24a>
 8005cca:	e715      	b.n	8005af8 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005ccc:	2b05      	cmp	r3, #5
 8005cce:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005cd0:	d103      	bne.n	8005cda <HAL_RCC_OscConfig+0x26a>
 8005cd2:	f043 0304 	orr.w	r3, r3, #4
 8005cd6:	672b      	str	r3, [r5, #112]	@ 0x70
 8005cd8:	e7b9      	b.n	8005c4e <HAL_RCC_OscConfig+0x1de>
 8005cda:	f023 0301 	bic.w	r3, r3, #1
 8005cde:	672b      	str	r3, [r5, #112]	@ 0x70
 8005ce0:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005ce2:	f023 0304 	bic.w	r3, r3, #4
 8005ce6:	e7b5      	b.n	8005c54 <HAL_RCC_OscConfig+0x1e4>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005ce8:	f7fe fa38 	bl	800415c <HAL_GetTick>
 8005cec:	1b40      	subs	r0, r0, r5
 8005cee:	4540      	cmp	r0, r8
 8005cf0:	d9b7      	bls.n	8005c62 <HAL_RCC_OscConfig+0x1f2>
 8005cf2:	e701      	b.n	8005af8 <HAL_RCC_OscConfig+0x88>
 8005cf4:	40023800 	.word	0x40023800
 8005cf8:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8005cfc:	4d38      	ldr	r5, [pc, #224]	@ (8005de0 <HAL_RCC_OscConfig+0x370>)
 8005cfe:	68ab      	ldr	r3, [r5, #8]
 8005d00:	f003 030c 	and.w	r3, r3, #12
 8005d04:	2b08      	cmp	r3, #8
 8005d06:	d041      	beq.n	8005d8c <HAL_RCC_OscConfig+0x31c>
        __HAL_RCC_PLL_DISABLE();
 8005d08:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005d0a:	2a02      	cmp	r2, #2
        __HAL_RCC_PLL_DISABLE();
 8005d0c:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8005d10:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005d12:	d12e      	bne.n	8005d72 <HAL_RCC_OscConfig+0x302>
        tickstart = HAL_GetTick();
 8005d14:	f7fe fa22 	bl	800415c <HAL_GetTick>
 8005d18:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005d1a:	682b      	ldr	r3, [r5, #0]
 8005d1c:	0199      	lsls	r1, r3, #6
 8005d1e:	d422      	bmi.n	8005d66 <HAL_RCC_OscConfig+0x2f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8005d20:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005d22:	085b      	lsrs	r3, r3, #1
 8005d24:	1e5a      	subs	r2, r3, #1
 8005d26:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 8005d2a:	430b      	orrs	r3, r1
 8005d2c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005d30:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005d32:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005d36:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005d38:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8005d3c:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8005d40:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8005d42:	682b      	ldr	r3, [r5, #0]
 8005d44:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8005d48:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005d4a:	f7fe fa07 	bl	800415c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005d4e:	4d24      	ldr	r5, [pc, #144]	@ (8005de0 <HAL_RCC_OscConfig+0x370>)
        tickstart = HAL_GetTick();
 8005d50:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005d52:	682b      	ldr	r3, [r5, #0]
 8005d54:	019a      	lsls	r2, r3, #6
 8005d56:	f53f aea1 	bmi.w	8005a9c <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005d5a:	f7fe f9ff 	bl	800415c <HAL_GetTick>
 8005d5e:	1b00      	subs	r0, r0, r4
 8005d60:	2802      	cmp	r0, #2
 8005d62:	d9f6      	bls.n	8005d52 <HAL_RCC_OscConfig+0x2e2>
 8005d64:	e6c8      	b.n	8005af8 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005d66:	f7fe f9f9 	bl	800415c <HAL_GetTick>
 8005d6a:	1b80      	subs	r0, r0, r6
 8005d6c:	2802      	cmp	r0, #2
 8005d6e:	d9d4      	bls.n	8005d1a <HAL_RCC_OscConfig+0x2aa>
 8005d70:	e6c2      	b.n	8005af8 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8005d72:	f7fe f9f3 	bl	800415c <HAL_GetTick>
 8005d76:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005d78:	682b      	ldr	r3, [r5, #0]
 8005d7a:	019b      	lsls	r3, r3, #6
 8005d7c:	f57f ae8e 	bpl.w	8005a9c <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005d80:	f7fe f9ec 	bl	800415c <HAL_GetTick>
 8005d84:	1b00      	subs	r0, r0, r4
 8005d86:	2802      	cmp	r0, #2
 8005d88:	d9f6      	bls.n	8005d78 <HAL_RCC_OscConfig+0x308>
 8005d8a:	e6b5      	b.n	8005af8 <HAL_RCC_OscConfig+0x88>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005d8c:	2a01      	cmp	r2, #1
      pll_config = RCC->PLLCFGR;
 8005d8e:	686b      	ldr	r3, [r5, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005d90:	f43f ae9b 	beq.w	8005aca <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005d94:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005d98:	69e1      	ldr	r1, [r4, #28]
 8005d9a:	428a      	cmp	r2, r1
 8005d9c:	f47f ae95 	bne.w	8005aca <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005da0:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005da4:	6a21      	ldr	r1, [r4, #32]
 8005da6:	428a      	cmp	r2, r1
 8005da8:	f47f ae8f 	bne.w	8005aca <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005dac:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8005db0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005db2:	401a      	ands	r2, r3
 8005db4:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8005db8:	f47f ae87 	bne.w	8005aca <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8005dbc:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005dbe:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8005dc2:	0852      	lsrs	r2, r2, #1
 8005dc4:	3a01      	subs	r2, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8005dc6:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8005dca:	f47f ae7e 	bne.w	8005aca <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8005dce:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005dd0:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8005dd4:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8005dd8:	bf14      	ite	ne
 8005dda:	2001      	movne	r0, #1
 8005ddc:	2000      	moveq	r0, #0
 8005dde:	e68c      	b.n	8005afa <HAL_RCC_OscConfig+0x8a>
 8005de0:	40023800 	.word	0x40023800

08005de4 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005de4:	4913      	ldr	r1, [pc, #76]	@ (8005e34 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005de6:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005de8:	688b      	ldr	r3, [r1, #8]
 8005dea:	f003 030c 	and.w	r3, r3, #12
 8005dee:	2b04      	cmp	r3, #4
 8005df0:	d01b      	beq.n	8005e2a <HAL_RCC_GetSysClockFreq+0x46>
 8005df2:	2b08      	cmp	r3, #8
 8005df4:	d11b      	bne.n	8005e2e <HAL_RCC_GetSysClockFreq+0x4a>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005df6:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8005df8:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005dfa:	6849      	ldr	r1, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005dfc:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8005e00:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005e04:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005e08:	bf1a      	itte	ne
 8005e0a:	480b      	ldrne	r0, [pc, #44]	@ (8005e38 <HAL_RCC_GetSysClockFreq+0x54>)
 8005e0c:	2300      	movne	r3, #0
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005e0e:	480b      	ldreq	r0, [pc, #44]	@ (8005e3c <HAL_RCC_GetSysClockFreq+0x58>)
 8005e10:	fba1 0100 	umull	r0, r1, r1, r0
 8005e14:	f7fa fa4c 	bl	80002b0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8005e18:	4b06      	ldr	r3, [pc, #24]	@ (8005e34 <HAL_RCC_GetSysClockFreq+0x50>)
 8005e1a:	685b      	ldr	r3, [r3, #4]
 8005e1c:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005e20:	3301      	adds	r3, #1
 8005e22:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8005e24:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005e28:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005e2a:	4803      	ldr	r0, [pc, #12]	@ (8005e38 <HAL_RCC_GetSysClockFreq+0x54>)
 8005e2c:	e7fc      	b.n	8005e28 <HAL_RCC_GetSysClockFreq+0x44>
      sysclockfreq = HSI_VALUE;
 8005e2e:	4803      	ldr	r0, [pc, #12]	@ (8005e3c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8005e30:	e7fa      	b.n	8005e28 <HAL_RCC_GetSysClockFreq+0x44>
 8005e32:	bf00      	nop
 8005e34:	40023800 	.word	0x40023800
 8005e38:	017d7840 	.word	0x017d7840
 8005e3c:	00f42400 	.word	0x00f42400

08005e40 <HAL_RCC_ClockConfig>:
{
 8005e40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005e44:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8005e46:	4604      	mov	r4, r0
 8005e48:	b910      	cbnz	r0, 8005e50 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005e4a:	2001      	movs	r0, #1
}
 8005e4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005e50:	4a45      	ldr	r2, [pc, #276]	@ (8005f68 <HAL_RCC_ClockConfig+0x128>)
 8005e52:	6813      	ldr	r3, [r2, #0]
 8005e54:	f003 030f 	and.w	r3, r3, #15
 8005e58:	428b      	cmp	r3, r1
 8005e5a:	d328      	bcc.n	8005eae <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005e5c:	6821      	ldr	r1, [r4, #0]
 8005e5e:	078f      	lsls	r7, r1, #30
 8005e60:	d430      	bmi.n	8005ec4 <HAL_RCC_ClockConfig+0x84>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005e62:	07c8      	lsls	r0, r1, #31
 8005e64:	d443      	bmi.n	8005eee <HAL_RCC_ClockConfig+0xae>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8005e66:	4a40      	ldr	r2, [pc, #256]	@ (8005f68 <HAL_RCC_ClockConfig+0x128>)
 8005e68:	6813      	ldr	r3, [r2, #0]
 8005e6a:	f003 030f 	and.w	r3, r3, #15
 8005e6e:	42ab      	cmp	r3, r5
 8005e70:	d866      	bhi.n	8005f40 <HAL_RCC_ClockConfig+0x100>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005e72:	6822      	ldr	r2, [r4, #0]
 8005e74:	0751      	lsls	r1, r2, #29
 8005e76:	d46f      	bmi.n	8005f58 <HAL_RCC_ClockConfig+0x118>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005e78:	0713      	lsls	r3, r2, #28
 8005e7a:	d507      	bpl.n	8005e8c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8005e7c:	4a3b      	ldr	r2, [pc, #236]	@ (8005f6c <HAL_RCC_ClockConfig+0x12c>)
 8005e7e:	6921      	ldr	r1, [r4, #16]
 8005e80:	6893      	ldr	r3, [r2, #8]
 8005e82:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8005e86:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005e8a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8005e8c:	f7ff ffaa 	bl	8005de4 <HAL_RCC_GetSysClockFreq>
 8005e90:	4b36      	ldr	r3, [pc, #216]	@ (8005f6c <HAL_RCC_ClockConfig+0x12c>)
 8005e92:	4a37      	ldr	r2, [pc, #220]	@ (8005f70 <HAL_RCC_ClockConfig+0x130>)
 8005e94:	689b      	ldr	r3, [r3, #8]
 8005e96:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005e9a:	5cd3      	ldrb	r3, [r2, r3]
 8005e9c:	40d8      	lsrs	r0, r3
 8005e9e:	4b35      	ldr	r3, [pc, #212]	@ (8005f74 <HAL_RCC_ClockConfig+0x134>)
 8005ea0:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8005ea2:	4b35      	ldr	r3, [pc, #212]	@ (8005f78 <HAL_RCC_ClockConfig+0x138>)
 8005ea4:	6818      	ldr	r0, [r3, #0]
 8005ea6:	f7fb f977 	bl	8001198 <HAL_InitTick>
  return HAL_OK;
 8005eaa:	2000      	movs	r0, #0
 8005eac:	e7ce      	b.n	8005e4c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005eae:	6813      	ldr	r3, [r2, #0]
 8005eb0:	f023 030f 	bic.w	r3, r3, #15
 8005eb4:	430b      	orrs	r3, r1
 8005eb6:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005eb8:	6813      	ldr	r3, [r2, #0]
 8005eba:	f003 030f 	and.w	r3, r3, #15
 8005ebe:	428b      	cmp	r3, r1
 8005ec0:	d1c3      	bne.n	8005e4a <HAL_RCC_ClockConfig+0xa>
 8005ec2:	e7cb      	b.n	8005e5c <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005ec4:	f011 0f04 	tst.w	r1, #4
 8005ec8:	4b28      	ldr	r3, [pc, #160]	@ (8005f6c <HAL_RCC_ClockConfig+0x12c>)
 8005eca:	d003      	beq.n	8005ed4 <HAL_RCC_ClockConfig+0x94>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005ecc:	689a      	ldr	r2, [r3, #8]
 8005ece:	f442 52e0 	orr.w	r2, r2, #7168	@ 0x1c00
 8005ed2:	609a      	str	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005ed4:	070e      	lsls	r6, r1, #28
 8005ed6:	d503      	bpl.n	8005ee0 <HAL_RCC_ClockConfig+0xa0>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005ed8:	689a      	ldr	r2, [r3, #8]
 8005eda:	f442 4260 	orr.w	r2, r2, #57344	@ 0xe000
 8005ede:	609a      	str	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005ee0:	689a      	ldr	r2, [r3, #8]
 8005ee2:	68a0      	ldr	r0, [r4, #8]
 8005ee4:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8005ee8:	4302      	orrs	r2, r0
 8005eea:	609a      	str	r2, [r3, #8]
 8005eec:	e7b9      	b.n	8005e62 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005eee:	6861      	ldr	r1, [r4, #4]
 8005ef0:	4b1e      	ldr	r3, [pc, #120]	@ (8005f6c <HAL_RCC_ClockConfig+0x12c>)
 8005ef2:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005ef4:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005ef6:	d11b      	bne.n	8005f30 <HAL_RCC_ClockConfig+0xf0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005ef8:	f412 3f00 	tst.w	r2, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005efc:	d0a5      	beq.n	8005e4a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005efe:	689a      	ldr	r2, [r3, #8]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005f00:	f241 3888 	movw	r8, #5000	@ 0x1388
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005f04:	4f19      	ldr	r7, [pc, #100]	@ (8005f6c <HAL_RCC_ClockConfig+0x12c>)
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005f06:	f022 0203 	bic.w	r2, r2, #3
 8005f0a:	430a      	orrs	r2, r1
 8005f0c:	609a      	str	r2, [r3, #8]
    tickstart = HAL_GetTick();
 8005f0e:	f7fe f925 	bl	800415c <HAL_GetTick>
 8005f12:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005f14:	68bb      	ldr	r3, [r7, #8]
 8005f16:	6862      	ldr	r2, [r4, #4]
 8005f18:	f003 030c 	and.w	r3, r3, #12
 8005f1c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005f20:	d0a1      	beq.n	8005e66 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005f22:	f7fe f91b 	bl	800415c <HAL_GetTick>
 8005f26:	1b80      	subs	r0, r0, r6
 8005f28:	4540      	cmp	r0, r8
 8005f2a:	d9f3      	bls.n	8005f14 <HAL_RCC_ClockConfig+0xd4>
        return HAL_TIMEOUT;
 8005f2c:	2003      	movs	r0, #3
 8005f2e:	e78d      	b.n	8005e4c <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8005f30:	2902      	cmp	r1, #2
 8005f32:	d102      	bne.n	8005f3a <HAL_RCC_ClockConfig+0xfa>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005f34:	f012 7f00 	tst.w	r2, #33554432	@ 0x2000000
 8005f38:	e7e0      	b.n	8005efc <HAL_RCC_ClockConfig+0xbc>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005f3a:	f012 0f02 	tst.w	r2, #2
 8005f3e:	e7dd      	b.n	8005efc <HAL_RCC_ClockConfig+0xbc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005f40:	6813      	ldr	r3, [r2, #0]
 8005f42:	f023 030f 	bic.w	r3, r3, #15
 8005f46:	432b      	orrs	r3, r5
 8005f48:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005f4a:	6813      	ldr	r3, [r2, #0]
 8005f4c:	f003 030f 	and.w	r3, r3, #15
 8005f50:	42ab      	cmp	r3, r5
 8005f52:	f47f af7a 	bne.w	8005e4a <HAL_RCC_ClockConfig+0xa>
 8005f56:	e78c      	b.n	8005e72 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005f58:	4904      	ldr	r1, [pc, #16]	@ (8005f6c <HAL_RCC_ClockConfig+0x12c>)
 8005f5a:	68e0      	ldr	r0, [r4, #12]
 8005f5c:	688b      	ldr	r3, [r1, #8]
 8005f5e:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8005f62:	4303      	orrs	r3, r0
 8005f64:	608b      	str	r3, [r1, #8]
 8005f66:	e787      	b.n	8005e78 <HAL_RCC_ClockConfig+0x38>
 8005f68:	40023c00 	.word	0x40023c00
 8005f6c:	40023800 	.word	0x40023800
 8005f70:	08023f90 	.word	0x08023f90
 8005f74:	2000000c 	.word	0x2000000c
 8005f78:	2000003c 	.word	0x2000003c

08005f7c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8005f7c:	4b04      	ldr	r3, [pc, #16]	@ (8005f90 <HAL_RCC_GetPCLK1Freq+0x14>)
 8005f7e:	4a05      	ldr	r2, [pc, #20]	@ (8005f94 <HAL_RCC_GetPCLK1Freq+0x18>)
 8005f80:	689b      	ldr	r3, [r3, #8]
 8005f82:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005f86:	5cd3      	ldrb	r3, [r2, r3]
 8005f88:	4a03      	ldr	r2, [pc, #12]	@ (8005f98 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005f8a:	6810      	ldr	r0, [r2, #0]
}
 8005f8c:	40d8      	lsrs	r0, r3
 8005f8e:	4770      	bx	lr
 8005f90:	40023800 	.word	0x40023800
 8005f94:	08023f88 	.word	0x08023f88
 8005f98:	2000000c 	.word	0x2000000c

08005f9c <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8005f9c:	4b04      	ldr	r3, [pc, #16]	@ (8005fb0 <HAL_RCC_GetPCLK2Freq+0x14>)
 8005f9e:	4a05      	ldr	r2, [pc, #20]	@ (8005fb4 <HAL_RCC_GetPCLK2Freq+0x18>)
 8005fa0:	689b      	ldr	r3, [r3, #8]
 8005fa2:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8005fa6:	5cd3      	ldrb	r3, [r2, r3]
 8005fa8:	4a03      	ldr	r2, [pc, #12]	@ (8005fb8 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8005faa:	6810      	ldr	r0, [r2, #0]
}
 8005fac:	40d8      	lsrs	r0, r3
 8005fae:	4770      	bx	lr
 8005fb0:	40023800 	.word	0x40023800
 8005fb4:	08023f88 	.word	0x08023f88
 8005fb8:	2000000c 	.word	0x2000000c

08005fbc <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005fbc:	230f      	movs	r3, #15
 8005fbe:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005fc0:	4b0b      	ldr	r3, [pc, #44]	@ (8005ff0 <HAL_RCC_GetClockConfig+0x34>)
 8005fc2:	689a      	ldr	r2, [r3, #8]
 8005fc4:	f002 0203 	and.w	r2, r2, #3
 8005fc8:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8005fca:	689a      	ldr	r2, [r3, #8]
 8005fcc:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8005fd0:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8005fd2:	689a      	ldr	r2, [r3, #8]
 8005fd4:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8005fd8:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 8005fda:	689b      	ldr	r3, [r3, #8]
 8005fdc:	08db      	lsrs	r3, r3, #3
 8005fde:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8005fe2:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005fe4:	4b03      	ldr	r3, [pc, #12]	@ (8005ff4 <HAL_RCC_GetClockConfig+0x38>)
 8005fe6:	681b      	ldr	r3, [r3, #0]
 8005fe8:	f003 030f 	and.w	r3, r3, #15
 8005fec:	600b      	str	r3, [r1, #0]
}
 8005fee:	4770      	bx	lr
 8005ff0:	40023800 	.word	0x40023800
 8005ff4:	40023c00 	.word	0x40023c00

08005ff8 <HAL_RCCEx_PeriphCLKConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005ff8:	6803      	ldr	r3, [r0, #0]
{
 8005ffa:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005ffe:	f013 0601 	ands.w	r6, r3, #1
{
 8006002:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006004:	d00b      	beq.n	800601e <HAL_RCCEx_PeriphCLKConfig+0x26>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8006006:	4aad      	ldr	r2, [pc, #692]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006008:	6891      	ldr	r1, [r2, #8]
 800600a:	f421 0100 	bic.w	r1, r1, #8388608	@ 0x800000
 800600e:	6091      	str	r1, [r2, #8]
 8006010:	6b46      	ldr	r6, [r0, #52]	@ 0x34
 8006012:	6891      	ldr	r1, [r2, #8]
 8006014:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8006016:	fab6 f686 	clz	r6, r6
 800601a:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 800601c:	6091      	str	r1, [r2, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 800601e:	f413 2500 	ands.w	r5, r3, #524288	@ 0x80000
 8006022:	d012      	beq.n	800604a <HAL_RCCEx_PeriphCLKConfig+0x52>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006024:	49a5      	ldr	r1, [pc, #660]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006026:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 8006028:	f8d1 208c 	ldr.w	r2, [r1, #140]	@ 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 800602c:	f5b5 1f80 	cmp.w	r5, #1048576	@ 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006030:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
    {
      plli2sused = 1;
 8006034:	bf08      	it	eq
 8006036:	2601      	moveq	r6, #1
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006038:	ea42 0205 	orr.w	r2, r2, r5
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 800603c:	bf16      	itet	ne
 800603e:	fab5 f585 	clzne	r5, r5
  uint32_t pllsaiused = 0;
 8006042:	2500      	moveq	r5, #0
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8006044:	096d      	lsrne	r5, r5, #5
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006046:	f8c1 208c 	str.w	r2, [r1, #140]	@ 0x8c
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 800604a:	02d8      	lsls	r0, r3, #11
 800604c:	d510      	bpl.n	8006070 <HAL_RCCEx_PeriphCLKConfig+0x78>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 800604e:	489b      	ldr	r0, [pc, #620]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006050:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8006052:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8006056:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 800605a:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 800605e:	ea42 0201 	orr.w	r2, r2, r1
 8006062:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8006066:	f000 8186 	beq.w	8006376 <HAL_RCCEx_PeriphCLKConfig+0x37e>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
 800606a:	2900      	cmp	r1, #0
 800606c:	bf08      	it	eq
 800606e:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
 8006070:	f013 7f80 	tst.w	r3, #16777216	@ 0x1000000
 8006074:	bf18      	it	ne
 8006076:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006078:	0699      	lsls	r1, r3, #26
 800607a:	d532      	bpl.n	80060e2 <HAL_RCCEx_PeriphCLKConfig+0xea>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800607c:	4b8f      	ldr	r3, [pc, #572]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 800607e:	4f90      	ldr	r7, [pc, #576]	@ (80062c0 <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006080:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006082:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006086:	641a      	str	r2, [r3, #64]	@ 0x40
 8006088:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800608a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800608e:	9301      	str	r3, [sp, #4]
 8006090:	9b01      	ldr	r3, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 8006092:	683b      	ldr	r3, [r7, #0]
 8006094:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006098:	603b      	str	r3, [r7, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800609a:	f7fe f85f 	bl	800415c <HAL_GetTick>
 800609e:	4680      	mov	r8, r0

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 80060a0:	683b      	ldr	r3, [r7, #0]
 80060a2:	05da      	lsls	r2, r3, #23
 80060a4:	f140 8169 	bpl.w	800637a <HAL_RCCEx_PeriphCLKConfig+0x382>
        return HAL_TIMEOUT;
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80060a8:	4f84      	ldr	r7, [pc, #528]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80060aa:	6b22      	ldr	r2, [r4, #48]	@ 0x30
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80060ac:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80060ae:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 80060b2:	f040 816d 	bne.w	8006390 <HAL_RCCEx_PeriphCLKConfig+0x398>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80060b6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80060b8:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 80060bc:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 80060c0:	4a7e      	ldr	r2, [pc, #504]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80060c2:	f040 818a 	bne.w	80063da <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 80060c6:	6891      	ldr	r1, [r2, #8]
 80060c8:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 80060cc:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 80060d0:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 80060d4:	4301      	orrs	r1, r0
 80060d6:	6091      	str	r1, [r2, #8]
 80060d8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80060dc:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 80060de:	430b      	orrs	r3, r1
 80060e0:	6713      	str	r3, [r2, #112]	@ 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80060e2:	6823      	ldr	r3, [r4, #0]
 80060e4:	06d9      	lsls	r1, r3, #27
 80060e6:	d50c      	bpl.n	8006102 <HAL_RCCEx_PeriphCLKConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80060e8:	4a74      	ldr	r2, [pc, #464]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80060ea:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
 80060ee:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
 80060f2:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
 80060f6:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
 80060fa:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 80060fc:	4301      	orrs	r1, r0
 80060fe:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8006102:	045a      	lsls	r2, r3, #17
 8006104:	d508      	bpl.n	8006118 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8006106:	496d      	ldr	r1, [pc, #436]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006108:	6e60      	ldr	r0, [r4, #100]	@ 0x64
 800610a:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 800610e:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8006112:	4302      	orrs	r2, r0
 8006114:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8006118:	041f      	lsls	r7, r3, #16
 800611a:	d508      	bpl.n	800612e <HAL_RCCEx_PeriphCLKConfig+0x136>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 800611c:	4967      	ldr	r1, [pc, #412]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 800611e:	6ea0      	ldr	r0, [r4, #104]	@ 0x68
 8006120:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006124:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 8006128:	4302      	orrs	r2, r0
 800612a:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 800612e:	03d8      	lsls	r0, r3, #15
 8006130:	d508      	bpl.n	8006144 <HAL_RCCEx_PeriphCLKConfig+0x14c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8006132:	4962      	ldr	r1, [pc, #392]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006134:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
 8006136:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 800613a:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 800613e:	4302      	orrs	r2, r0
 8006140:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8006144:	0399      	lsls	r1, r3, #14
 8006146:	d508      	bpl.n	800615a <HAL_RCCEx_PeriphCLKConfig+0x162>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8006148:	495c      	ldr	r1, [pc, #368]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 800614a:	6f20      	ldr	r0, [r4, #112]	@ 0x70
 800614c:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006150:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8006154:	4302      	orrs	r2, r0
 8006156:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 800615a:	065a      	lsls	r2, r3, #25
 800615c:	d508      	bpl.n	8006170 <HAL_RCCEx_PeriphCLKConfig+0x178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 800615e:	4957      	ldr	r1, [pc, #348]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006160:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8006162:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006166:	f022 0203 	bic.w	r2, r2, #3
 800616a:	4302      	orrs	r2, r0
 800616c:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8006170:	061f      	lsls	r7, r3, #24
 8006172:	d508      	bpl.n	8006186 <HAL_RCCEx_PeriphCLKConfig+0x18e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8006174:	4951      	ldr	r1, [pc, #324]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006176:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 8006178:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 800617c:	f022 020c 	bic.w	r2, r2, #12
 8006180:	4302      	orrs	r2, r0
 8006182:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8006186:	05d8      	lsls	r0, r3, #23
 8006188:	d508      	bpl.n	800619c <HAL_RCCEx_PeriphCLKConfig+0x1a4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 800618a:	494c      	ldr	r1, [pc, #304]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 800618c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800618e:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006192:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 8006196:	4302      	orrs	r2, r0
 8006198:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 800619c:	0599      	lsls	r1, r3, #22
 800619e:	d508      	bpl.n	80061b2 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 80061a0:	4946      	ldr	r1, [pc, #280]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80061a2:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 80061a4:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 80061a8:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 80061ac:	4302      	orrs	r2, r0
 80061ae:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 80061b2:	055a      	lsls	r2, r3, #21
 80061b4:	d508      	bpl.n	80061c8 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 80061b6:	4941      	ldr	r1, [pc, #260]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80061b8:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 80061ba:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 80061be:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80061c2:	4302      	orrs	r2, r0
 80061c4:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 80061c8:	051f      	lsls	r7, r3, #20
 80061ca:	d508      	bpl.n	80061de <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 80061cc:	493b      	ldr	r1, [pc, #236]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80061ce:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80061d0:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 80061d4:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 80061d8:	4302      	orrs	r2, r0
 80061da:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 80061de:	04d8      	lsls	r0, r3, #19
 80061e0:	d508      	bpl.n	80061f4 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 80061e2:	4936      	ldr	r1, [pc, #216]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80061e4:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 80061e6:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 80061ea:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 80061ee:	4302      	orrs	r2, r0
 80061f0:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 80061f4:	0499      	lsls	r1, r3, #18
 80061f6:	d508      	bpl.n	800620a <HAL_RCCEx_PeriphCLKConfig+0x212>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 80061f8:	4930      	ldr	r1, [pc, #192]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80061fa:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 80061fc:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006200:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8006204:	4302      	orrs	r2, r0
 8006206:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 800620a:	025a      	lsls	r2, r3, #9
 800620c:	d508      	bpl.n	8006220 <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 800620e:	492b      	ldr	r1, [pc, #172]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006210:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
 8006212:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006216:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
 800621a:	4302      	orrs	r2, r0
 800621c:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006220:	029f      	lsls	r7, r3, #10
 8006222:	d50c      	bpl.n	800623e <HAL_RCCEx_PeriphCLKConfig+0x246>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006224:	4825      	ldr	r0, [pc, #148]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006226:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
 8006228:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
 800622c:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006230:	f022 6200 	bic.w	r2, r2, #134217728	@ 0x8000000
      pllsaiused = 1;
 8006234:	bf08      	it	eq
 8006236:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006238:	430a      	orrs	r2, r1
 800623a:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
 800623e:	f013 0f08 	tst.w	r3, #8
 8006242:	bf18      	it	ne
 8006244:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8006246:	0358      	lsls	r0, r3, #13
 8006248:	d508      	bpl.n	800625c <HAL_RCCEx_PeriphCLKConfig+0x264>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 800624a:	491c      	ldr	r1, [pc, #112]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 800624c:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 800624e:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006252:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8006256:	4302      	orrs	r2, r0
 8006258:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 800625c:	0219      	lsls	r1, r3, #8
 800625e:	d509      	bpl.n	8006274 <HAL_RCCEx_PeriphCLKConfig+0x27c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8006260:	4916      	ldr	r1, [pc, #88]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006262:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 8006266:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 800626a:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
 800626e:	4302      	orrs	r2, r0
 8006270:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8006274:	2e01      	cmp	r6, #1
 8006276:	f000 80b4 	beq.w	80063e2 <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 800627a:	019a      	lsls	r2, r3, #6
 800627c:	f100 80b1 	bmi.w	80063e2 <HAL_RCCEx_PeriphCLKConfig+0x3ea>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8006280:	2d01      	cmp	r5, #1
 8006282:	d176      	bne.n	8006372 <HAL_RCCEx_PeriphCLKConfig+0x37a>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006284:	4d0d      	ldr	r5, [pc, #52]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006286:	682b      	ldr	r3, [r5, #0]
 8006288:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800628c:	602b      	str	r3, [r5, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800628e:	f7fd ff65 	bl	800415c <HAL_GetTick>
 8006292:	4606      	mov	r6, r0

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006294:	682b      	ldr	r3, [r5, #0]
 8006296:	009f      	lsls	r7, r3, #2
 8006298:	f100 8127 	bmi.w	80064ea <HAL_RCCEx_PeriphCLKConfig+0x4f2>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 800629c:	6821      	ldr	r1, [r4, #0]
 800629e:	030e      	lsls	r6, r1, #12
 80062a0:	d501      	bpl.n	80062a6 <HAL_RCCEx_PeriphCLKConfig+0x2ae>
 80062a2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80062a4:	b11b      	cbz	r3, 80062ae <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 80062a6:	02cd      	lsls	r5, r1, #11
 80062a8:	d523      	bpl.n	80062f2 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 80062aa:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80062ac:	bb0b      	cbnz	r3, 80062f2 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 80062ae:	4a03      	ldr	r2, [pc, #12]	@ (80062bc <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80062b0:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80062b4:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88
 80062b8:	e004      	b.n	80062c4 <HAL_RCCEx_PeriphCLKConfig+0x2cc>
 80062ba:	bf00      	nop
 80062bc:	40023800 	.word	0x40023800
 80062c0:	40007000 	.word	0x40007000
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80062c4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80062c8:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 80062cc:	4303      	orrs	r3, r0
 80062ce:	6960      	ldr	r0, [r4, #20]
 80062d0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80062d4:	69a0      	ldr	r0, [r4, #24]
 80062d6:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 80062da:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80062de:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 80062e2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80062e4:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 80062e8:	3801      	subs	r0, #1
 80062ea:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80062ee:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 80062f2:	0288      	lsls	r0, r1, #10
 80062f4:	d515      	bpl.n	8006322 <HAL_RCCEx_PeriphCLKConfig+0x32a>
 80062f6:	6fe3      	ldr	r3, [r4, #124]	@ 0x7c
 80062f8:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80062fc:	d111      	bne.n	8006322 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80062fe:	4a82      	ldr	r2, [pc, #520]	@ (8006508 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006300:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006304:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8006308:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
 800630c:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006310:	4303      	orrs	r3, r0
 8006312:	6960      	ldr	r0, [r4, #20]
 8006314:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006318:	6a20      	ldr	r0, [r4, #32]
 800631a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800631e:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006322:	070a      	lsls	r2, r1, #28
 8006324:	d519      	bpl.n	800635a <HAL_RCCEx_PeriphCLKConfig+0x362>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006326:	4a78      	ldr	r2, [pc, #480]	@ (8006508 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006328:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 800632c:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8006330:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8006334:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006338:	430b      	orrs	r3, r1
 800633a:	6961      	ldr	r1, [r4, #20]
 800633c:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8006340:	69e1      	ldr	r1, [r4, #28]
 8006342:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8006346:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800634a:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 800634e:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8006350:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8006354:	430b      	orrs	r3, r1
 8006356:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800635a:	4c6b      	ldr	r4, [pc, #428]	@ (8006508 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 800635c:	6823      	ldr	r3, [r4, #0]
 800635e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006362:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006364:	f7fd fefa 	bl	800415c <HAL_GetTick>
 8006368:	4605      	mov	r5, r0

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800636a:	6823      	ldr	r3, [r4, #0]
 800636c:	009b      	lsls	r3, r3, #2
 800636e:	f140 80c3 	bpl.w	80064f8 <HAL_RCCEx_PeriphCLKConfig+0x500>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8006372:	2000      	movs	r0, #0
 8006374:	e009      	b.n	800638a <HAL_RCCEx_PeriphCLKConfig+0x392>
      plli2sused = 1;
 8006376:	2601      	movs	r6, #1
 8006378:	e67a      	b.n	8006070 <HAL_RCCEx_PeriphCLKConfig+0x78>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800637a:	f7fd feef 	bl	800415c <HAL_GetTick>
 800637e:	eba0 0008 	sub.w	r0, r0, r8
 8006382:	2864      	cmp	r0, #100	@ 0x64
 8006384:	f67f ae8c 	bls.w	80060a0 <HAL_RCCEx_PeriphCLKConfig+0xa8>
        return HAL_TIMEOUT;
 8006388:	2003      	movs	r0, #3
}
 800638a:	b003      	add	sp, #12
 800638c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006390:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8006394:	4293      	cmp	r3, r2
 8006396:	f43f ae8e 	beq.w	80060b6 <HAL_RCCEx_PeriphCLKConfig+0xbe>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800639a:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800639c:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800639e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 80063a2:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 80063a6:	673a      	str	r2, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 80063a8:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 80063aa:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80063ae:	673a      	str	r2, [r7, #112]	@ 0x70
      RCC->BDCR = tmpreg0;
 80063b0:	673b      	str	r3, [r7, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80063b2:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80063b4:	07db      	lsls	r3, r3, #31
 80063b6:	f57f ae7e 	bpl.w	80060b6 <HAL_RCCEx_PeriphCLKConfig+0xbe>
        tickstart = HAL_GetTick();
 80063ba:	f7fd fecf 	bl	800415c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80063be:	f241 3988 	movw	r9, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 80063c2:	4680      	mov	r8, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80063c4:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80063c6:	0798      	lsls	r0, r3, #30
 80063c8:	f53f ae75 	bmi.w	80060b6 <HAL_RCCEx_PeriphCLKConfig+0xbe>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80063cc:	f7fd fec6 	bl	800415c <HAL_GetTick>
 80063d0:	eba0 0008 	sub.w	r0, r0, r8
 80063d4:	4548      	cmp	r0, r9
 80063d6:	d9f5      	bls.n	80063c4 <HAL_RCCEx_PeriphCLKConfig+0x3cc>
 80063d8:	e7d6      	b.n	8006388 <HAL_RCCEx_PeriphCLKConfig+0x390>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80063da:	6891      	ldr	r1, [r2, #8]
 80063dc:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 80063e0:	e679      	b.n	80060d6 <HAL_RCCEx_PeriphCLKConfig+0xde>
    __HAL_RCC_PLLI2S_DISABLE();
 80063e2:	4e49      	ldr	r6, [pc, #292]	@ (8006508 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 80063e4:	6833      	ldr	r3, [r6, #0]
 80063e6:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80063ea:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 80063ec:	f7fd feb6 	bl	800415c <HAL_GetTick>
 80063f0:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80063f2:	6833      	ldr	r3, [r6, #0]
 80063f4:	011b      	lsls	r3, r3, #4
 80063f6:	d472      	bmi.n	80064de <HAL_RCCEx_PeriphCLKConfig+0x4e6>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 80063f8:	6822      	ldr	r2, [r4, #0]
 80063fa:	07d7      	lsls	r7, r2, #31
 80063fc:	d512      	bpl.n	8006424 <HAL_RCCEx_PeriphCLKConfig+0x42c>
 80063fe:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8006400:	b983      	cbnz	r3, 8006424 <HAL_RCCEx_PeriphCLKConfig+0x42c>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8006402:	f8d6 3084 	ldr.w	r3, [r6, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8006406:	f8d6 1084 	ldr.w	r1, [r6, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 800640a:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800640e:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8006412:	430b      	orrs	r3, r1
 8006414:	6861      	ldr	r1, [r4, #4]
 8006416:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 800641a:	68a1      	ldr	r1, [r4, #8]
 800641c:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8006420:	f8c6 3084 	str.w	r3, [r6, #132]	@ 0x84
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8006424:	0316      	lsls	r6, r2, #12
 8006426:	d503      	bpl.n	8006430 <HAL_RCCEx_PeriphCLKConfig+0x438>
 8006428:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800642a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800642e:	d005      	beq.n	800643c <HAL_RCCEx_PeriphCLKConfig+0x444>
 8006430:	02d0      	lsls	r0, r2, #11
 8006432:	d51e      	bpl.n	8006472 <HAL_RCCEx_PeriphCLKConfig+0x47a>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8006434:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8006436:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800643a:	d11a      	bne.n	8006472 <HAL_RCCEx_PeriphCLKConfig+0x47a>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 800643c:	4932      	ldr	r1, [pc, #200]	@ (8006508 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 800643e:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006442:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8006446:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800644a:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 800644e:	4303      	orrs	r3, r0
 8006450:	6860      	ldr	r0, [r4, #4]
 8006452:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006456:	68e0      	ldr	r0, [r4, #12]
 8006458:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 800645c:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006460:	f8d1 008c 	ldr.w	r0, [r1, #140]	@ 0x8c
 8006464:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006466:	f020 001f 	bic.w	r0, r0, #31
 800646a:	3b01      	subs	r3, #1
 800646c:	4303      	orrs	r3, r0
 800646e:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8006472:	01d1      	lsls	r1, r2, #7
 8006474:	d511      	bpl.n	800649a <HAL_RCCEx_PeriphCLKConfig+0x4a2>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8006476:	4924      	ldr	r1, [pc, #144]	@ (8006508 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006478:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800647c:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8006480:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
 8006484:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006488:	4303      	orrs	r3, r0
 800648a:	6860      	ldr	r0, [r4, #4]
 800648c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006490:	6920      	ldr	r0, [r4, #16]
 8006492:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8006496:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800649a:	0192      	lsls	r2, r2, #6
 800649c:	d50d      	bpl.n	80064ba <HAL_RCCEx_PeriphCLKConfig+0x4c2>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800649e:	6923      	ldr	r3, [r4, #16]
 80064a0:	6862      	ldr	r2, [r4, #4]
 80064a2:	041b      	lsls	r3, r3, #16
 80064a4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80064a8:	68e2      	ldr	r2, [r4, #12]
 80064aa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80064ae:	68a2      	ldr	r2, [r4, #8]
 80064b0:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80064b4:	4a14      	ldr	r2, [pc, #80]	@ (8006508 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 80064b6:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80064ba:	4e13      	ldr	r6, [pc, #76]	@ (8006508 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 80064bc:	6833      	ldr	r3, [r6, #0]
 80064be:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80064c2:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 80064c4:	f7fd fe4a 	bl	800415c <HAL_GetTick>
 80064c8:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80064ca:	6833      	ldr	r3, [r6, #0]
 80064cc:	011b      	lsls	r3, r3, #4
 80064ce:	f53f aed7 	bmi.w	8006280 <HAL_RCCEx_PeriphCLKConfig+0x288>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80064d2:	f7fd fe43 	bl	800415c <HAL_GetTick>
 80064d6:	1bc0      	subs	r0, r0, r7
 80064d8:	2864      	cmp	r0, #100	@ 0x64
 80064da:	d9f6      	bls.n	80064ca <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 80064dc:	e754      	b.n	8006388 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80064de:	f7fd fe3d 	bl	800415c <HAL_GetTick>
 80064e2:	1bc0      	subs	r0, r0, r7
 80064e4:	2864      	cmp	r0, #100	@ 0x64
 80064e6:	d984      	bls.n	80063f2 <HAL_RCCEx_PeriphCLKConfig+0x3fa>
 80064e8:	e74e      	b.n	8006388 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80064ea:	f7fd fe37 	bl	800415c <HAL_GetTick>
 80064ee:	1b80      	subs	r0, r0, r6
 80064f0:	2864      	cmp	r0, #100	@ 0x64
 80064f2:	f67f aecf 	bls.w	8006294 <HAL_RCCEx_PeriphCLKConfig+0x29c>
 80064f6:	e747      	b.n	8006388 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80064f8:	f7fd fe30 	bl	800415c <HAL_GetTick>
 80064fc:	1b40      	subs	r0, r0, r5
 80064fe:	2864      	cmp	r0, #100	@ 0x64
 8006500:	f67f af33 	bls.w	800636a <HAL_RCCEx_PeriphCLKConfig+0x372>
 8006504:	e740      	b.n	8006388 <HAL_RCCEx_PeriphCLKConfig+0x390>
 8006506:	bf00      	nop
 8006508:	40023800 	.word	0x40023800

0800650c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800650c:	b538      	push	{r3, r4, r5, lr}
 800650e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8006510:	4604      	mov	r4, r0
 8006512:	b1c8      	cbz	r0, 8006548 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006514:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8006518:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800651c:	b91b      	cbnz	r3, 8006526 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800651e:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006522:	f7fa fdd1 	bl	80010c8 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006526:	2302      	movs	r3, #2

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006528:	1d21      	adds	r1, r4, #4
 800652a:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800652c:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006530:	f000 fed3 	bl	80072da <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006534:	6862      	ldr	r2, [r4, #4]
 8006536:	4629      	mov	r1, r5
 8006538:	6820      	ldr	r0, [r4, #0]
 800653a:	f000 ff06 	bl	800734a <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800653e:	2301      	movs	r3, #1

  return HAL_OK;
 8006540:	2000      	movs	r0, #0
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006542:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
}
 8006546:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006548:	2001      	movs	r0, #1
 800654a:	e7fc      	b.n	8006546 <HAL_SDRAM_Init+0x3a>

0800654c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800654c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800654e:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
 8006552:	4605      	mov	r5, r0
 8006554:	460e      	mov	r6, r1

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8006556:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006558:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800655a:	d010      	beq.n	800657e <HAL_SDRAM_SendCommand+0x32>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800655c:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8006560:	2c01      	cmp	r4, #1
 8006562:	d110      	bne.n	8006586 <HAL_SDRAM_SendCommand+0x3a>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006564:	2302      	movs	r3, #2

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006566:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006568:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800656c:	f000 ff23 	bl	80073b6 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006570:	6833      	ldr	r3, [r6, #0]
 8006572:	2b02      	cmp	r3, #2
 8006574:	d104      	bne.n	8006580 <HAL_SDRAM_SendCommand+0x34>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006576:	2305      	movs	r3, #5
 8006578:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800657c:	2000      	movs	r0, #0
}
 800657e:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006580:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
 8006584:	e7fa      	b.n	800657c <HAL_SDRAM_SendCommand+0x30>
    return HAL_ERROR;
 8006586:	2001      	movs	r0, #1
 8006588:	e7f9      	b.n	800657e <HAL_SDRAM_SendCommand+0x32>

0800658a <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800658a:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800658c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
 8006590:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006592:	2b02      	cmp	r3, #2
 8006594:	b2d8      	uxtb	r0, r3
 8006596:	d00d      	beq.n	80065b4 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8006598:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800659c:	2b01      	cmp	r3, #1
 800659e:	b2dd      	uxtb	r5, r3
 80065a0:	d109      	bne.n	80065b6 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80065a2:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80065a4:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80065a6:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80065aa:	f000 ff16 	bl	80073da <FMC_SDRAM_ProgramRefreshRate>
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80065ae:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
 80065b0:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
 80065b4:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80065b6:	2001      	movs	r0, #1
 80065b8:	e7fc      	b.n	80065b4 <HAL_SDRAM_ProgramRefreshRate+0x2a>

080065ba <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80065ba:	4770      	bx	lr

080065bc <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80065bc:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80065c0:	2b01      	cmp	r3, #1
 80065c2:	d133      	bne.n	800662c <HAL_TIM_Base_Start_IT+0x70>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80065c4:	2302      	movs	r3, #2
 80065c6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80065ca:	6803      	ldr	r3, [r0, #0]
 80065cc:	68da      	ldr	r2, [r3, #12]
 80065ce:	f042 0201 	orr.w	r2, r2, #1
 80065d2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80065d4:	4a16      	ldr	r2, [pc, #88]	@ (8006630 <HAL_TIM_Base_Start_IT+0x74>)
 80065d6:	4293      	cmp	r3, r2
 80065d8:	d01a      	beq.n	8006610 <HAL_TIM_Base_Start_IT+0x54>
 80065da:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80065de:	d017      	beq.n	8006610 <HAL_TIM_Base_Start_IT+0x54>
 80065e0:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80065e4:	4293      	cmp	r3, r2
 80065e6:	d013      	beq.n	8006610 <HAL_TIM_Base_Start_IT+0x54>
 80065e8:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80065ec:	4293      	cmp	r3, r2
 80065ee:	d00f      	beq.n	8006610 <HAL_TIM_Base_Start_IT+0x54>
 80065f0:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80065f4:	4293      	cmp	r3, r2
 80065f6:	d00b      	beq.n	8006610 <HAL_TIM_Base_Start_IT+0x54>
 80065f8:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80065fc:	4293      	cmp	r3, r2
 80065fe:	d007      	beq.n	8006610 <HAL_TIM_Base_Start_IT+0x54>
 8006600:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8006604:	4293      	cmp	r3, r2
 8006606:	d003      	beq.n	8006610 <HAL_TIM_Base_Start_IT+0x54>
 8006608:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 800660c:	4293      	cmp	r3, r2
 800660e:	d107      	bne.n	8006620 <HAL_TIM_Base_Start_IT+0x64>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006610:	6899      	ldr	r1, [r3, #8]
 8006612:	4a08      	ldr	r2, [pc, #32]	@ (8006634 <HAL_TIM_Base_Start_IT+0x78>)
 8006614:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006616:	2a06      	cmp	r2, #6
 8006618:	d006      	beq.n	8006628 <HAL_TIM_Base_Start_IT+0x6c>
 800661a:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 800661e:	d003      	beq.n	8006628 <HAL_TIM_Base_Start_IT+0x6c>
    {
      __HAL_TIM_ENABLE(htim);
 8006620:	681a      	ldr	r2, [r3, #0]
 8006622:	f042 0201 	orr.w	r2, r2, #1
 8006626:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8006628:	2000      	movs	r0, #0
 800662a:	4770      	bx	lr
    return HAL_ERROR;
 800662c:	2001      	movs	r0, #1
}
 800662e:	4770      	bx	lr
 8006630:	40010000 	.word	0x40010000
 8006634:	00010007 	.word	0x00010007

08006638 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8006638:	4770      	bx	lr

0800663a <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 800663a:	4770      	bx	lr

0800663c <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 800663c:	4770      	bx	lr

0800663e <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 800663e:	4770      	bx	lr

08006640 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006640:	6803      	ldr	r3, [r0, #0]
 8006642:	691a      	ldr	r2, [r3, #16]
 8006644:	0791      	lsls	r1, r2, #30
{
 8006646:	b510      	push	{r4, lr}
 8006648:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800664a:	d50f      	bpl.n	800666c <HAL_TIM_IRQHandler+0x2c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800664c:	68da      	ldr	r2, [r3, #12]
 800664e:	0792      	lsls	r2, r2, #30
 8006650:	d50c      	bpl.n	800666c <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006652:	f06f 0202 	mvn.w	r2, #2
 8006656:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006658:	2201      	movs	r2, #1
 800665a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800665c:	699b      	ldr	r3, [r3, #24]
 800665e:	0799      	lsls	r1, r3, #30
 8006660:	f000 8085 	beq.w	800676e <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 8006664:	f7ff ffe9 	bl	800663a <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006668:	2300      	movs	r3, #0
 800666a:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800666c:	6823      	ldr	r3, [r4, #0]
 800666e:	691a      	ldr	r2, [r3, #16]
 8006670:	0752      	lsls	r2, r2, #29
 8006672:	d510      	bpl.n	8006696 <HAL_TIM_IRQHandler+0x56>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006674:	68da      	ldr	r2, [r3, #12]
 8006676:	0750      	lsls	r0, r2, #29
 8006678:	d50d      	bpl.n	8006696 <HAL_TIM_IRQHandler+0x56>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800667a:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
 800667e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006680:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006682:	2202      	movs	r2, #2
 8006684:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006686:	699b      	ldr	r3, [r3, #24]
 8006688:	f413 7f40 	tst.w	r3, #768	@ 0x300
 800668c:	d075      	beq.n	800677a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 800668e:	f7ff ffd4 	bl	800663a <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006692:	2300      	movs	r3, #0
 8006694:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006696:	6823      	ldr	r3, [r4, #0]
 8006698:	691a      	ldr	r2, [r3, #16]
 800669a:	0711      	lsls	r1, r2, #28
 800669c:	d50f      	bpl.n	80066be <HAL_TIM_IRQHandler+0x7e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800669e:	68da      	ldr	r2, [r3, #12]
 80066a0:	0712      	lsls	r2, r2, #28
 80066a2:	d50c      	bpl.n	80066be <HAL_TIM_IRQHandler+0x7e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80066a4:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
 80066a8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80066aa:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80066ac:	2204      	movs	r2, #4
 80066ae:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80066b0:	69db      	ldr	r3, [r3, #28]
 80066b2:	079b      	lsls	r3, r3, #30
 80066b4:	d067      	beq.n	8006786 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 80066b6:	f7ff ffc0 	bl	800663a <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80066ba:	2300      	movs	r3, #0
 80066bc:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80066be:	6823      	ldr	r3, [r4, #0]
 80066c0:	691a      	ldr	r2, [r3, #16]
 80066c2:	06d0      	lsls	r0, r2, #27
 80066c4:	d510      	bpl.n	80066e8 <HAL_TIM_IRQHandler+0xa8>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80066c6:	68da      	ldr	r2, [r3, #12]
 80066c8:	06d1      	lsls	r1, r2, #27
 80066ca:	d50d      	bpl.n	80066e8 <HAL_TIM_IRQHandler+0xa8>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80066cc:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
 80066d0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80066d2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80066d4:	2208      	movs	r2, #8
 80066d6:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80066d8:	69db      	ldr	r3, [r3, #28]
 80066da:	f413 7f40 	tst.w	r3, #768	@ 0x300
 80066de:	d058      	beq.n	8006792 <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 80066e0:	f7ff ffab 	bl	800663a <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80066e4:	2300      	movs	r3, #0
 80066e6:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80066e8:	6823      	ldr	r3, [r4, #0]
 80066ea:	691a      	ldr	r2, [r3, #16]
 80066ec:	07d2      	lsls	r2, r2, #31
 80066ee:	d508      	bpl.n	8006702 <HAL_TIM_IRQHandler+0xc2>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80066f0:	68da      	ldr	r2, [r3, #12]
 80066f2:	07d0      	lsls	r0, r2, #31
 80066f4:	d505      	bpl.n	8006702 <HAL_TIM_IRQHandler+0xc2>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80066f6:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
 80066fa:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80066fc:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 80066fe:	f7fa fa9f 	bl	8000c40 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006702:	6823      	ldr	r3, [r4, #0]
 8006704:	691a      	ldr	r2, [r3, #16]
 8006706:	0611      	lsls	r1, r2, #24
 8006708:	d508      	bpl.n	800671c <HAL_TIM_IRQHandler+0xdc>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800670a:	68da      	ldr	r2, [r3, #12]
 800670c:	0612      	lsls	r2, r2, #24
 800670e:	d505      	bpl.n	800671c <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006710:	f06f 0280 	mvn.w	r2, #128	@ 0x80
      HAL_TIMEx_BreakCallback(htim);
 8006714:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006716:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006718:	f000 f8d9 	bl	80068ce <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 800671c:	6823      	ldr	r3, [r4, #0]
 800671e:	691a      	ldr	r2, [r3, #16]
 8006720:	05d0      	lsls	r0, r2, #23
 8006722:	d508      	bpl.n	8006736 <HAL_TIM_IRQHandler+0xf6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006724:	68da      	ldr	r2, [r3, #12]
 8006726:	0611      	lsls	r1, r2, #24
 8006728:	d505      	bpl.n	8006736 <HAL_TIM_IRQHandler+0xf6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 800672a:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
 800672e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8006730:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 8006732:	f000 f8cd 	bl	80068d0 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006736:	6823      	ldr	r3, [r4, #0]
 8006738:	691a      	ldr	r2, [r3, #16]
 800673a:	0652      	lsls	r2, r2, #25
 800673c:	d508      	bpl.n	8006750 <HAL_TIM_IRQHandler+0x110>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800673e:	68da      	ldr	r2, [r3, #12]
 8006740:	0650      	lsls	r0, r2, #25
 8006742:	d505      	bpl.n	8006750 <HAL_TIM_IRQHandler+0x110>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006744:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
 8006748:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800674a:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800674c:	f7ff ff77 	bl	800663e <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006750:	6823      	ldr	r3, [r4, #0]
 8006752:	691a      	ldr	r2, [r3, #16]
 8006754:	0691      	lsls	r1, r2, #26
 8006756:	d522      	bpl.n	800679e <HAL_TIM_IRQHandler+0x15e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006758:	68da      	ldr	r2, [r3, #12]
 800675a:	0692      	lsls	r2, r2, #26
 800675c:	d51f      	bpl.n	800679e <HAL_TIM_IRQHandler+0x15e>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800675e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8006762:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006764:	611a      	str	r2, [r3, #16]
}
 8006766:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800676a:	f000 b8af 	b.w	80068cc <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800676e:	f7ff ff63 	bl	8006638 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006772:	4620      	mov	r0, r4
 8006774:	f7ff ff62 	bl	800663c <HAL_TIM_PWM_PulseFinishedCallback>
 8006778:	e776      	b.n	8006668 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800677a:	f7ff ff5d 	bl	8006638 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800677e:	4620      	mov	r0, r4
 8006780:	f7ff ff5c 	bl	800663c <HAL_TIM_PWM_PulseFinishedCallback>
 8006784:	e785      	b.n	8006692 <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006786:	f7ff ff57 	bl	8006638 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800678a:	4620      	mov	r0, r4
 800678c:	f7ff ff56 	bl	800663c <HAL_TIM_PWM_PulseFinishedCallback>
 8006790:	e793      	b.n	80066ba <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006792:	f7ff ff51 	bl	8006638 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006796:	4620      	mov	r0, r4
 8006798:	f7ff ff50 	bl	800663c <HAL_TIM_PWM_PulseFinishedCallback>
 800679c:	e7a2      	b.n	80066e4 <HAL_TIM_IRQHandler+0xa4>
}
 800679e:	bd10      	pop	{r4, pc}

080067a0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80067a0:	4a30      	ldr	r2, [pc, #192]	@ (8006864 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80067a2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80067a4:	4290      	cmp	r0, r2
 80067a6:	d012      	beq.n	80067ce <TIM_Base_SetConfig+0x2e>
 80067a8:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 80067ac:	d00f      	beq.n	80067ce <TIM_Base_SetConfig+0x2e>
 80067ae:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80067b2:	4290      	cmp	r0, r2
 80067b4:	d00b      	beq.n	80067ce <TIM_Base_SetConfig+0x2e>
 80067b6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80067ba:	4290      	cmp	r0, r2
 80067bc:	d007      	beq.n	80067ce <TIM_Base_SetConfig+0x2e>
 80067be:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80067c2:	4290      	cmp	r0, r2
 80067c4:	d003      	beq.n	80067ce <TIM_Base_SetConfig+0x2e>
 80067c6:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80067ca:	4290      	cmp	r0, r2
 80067cc:	d119      	bne.n	8006802 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80067ce:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80067d0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 80067d4:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80067d6:	4a23      	ldr	r2, [pc, #140]	@ (8006864 <TIM_Base_SetConfig+0xc4>)
 80067d8:	4290      	cmp	r0, r2
 80067da:	d029      	beq.n	8006830 <TIM_Base_SetConfig+0x90>
 80067dc:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 80067e0:	d026      	beq.n	8006830 <TIM_Base_SetConfig+0x90>
 80067e2:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80067e6:	4290      	cmp	r0, r2
 80067e8:	d022      	beq.n	8006830 <TIM_Base_SetConfig+0x90>
 80067ea:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80067ee:	4290      	cmp	r0, r2
 80067f0:	d01e      	beq.n	8006830 <TIM_Base_SetConfig+0x90>
 80067f2:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80067f6:	4290      	cmp	r0, r2
 80067f8:	d01a      	beq.n	8006830 <TIM_Base_SetConfig+0x90>
 80067fa:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80067fe:	4290      	cmp	r0, r2
 8006800:	d016      	beq.n	8006830 <TIM_Base_SetConfig+0x90>
 8006802:	4a19      	ldr	r2, [pc, #100]	@ (8006868 <TIM_Base_SetConfig+0xc8>)
 8006804:	4290      	cmp	r0, r2
 8006806:	d013      	beq.n	8006830 <TIM_Base_SetConfig+0x90>
 8006808:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800680c:	4290      	cmp	r0, r2
 800680e:	d00f      	beq.n	8006830 <TIM_Base_SetConfig+0x90>
 8006810:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006814:	4290      	cmp	r0, r2
 8006816:	d00b      	beq.n	8006830 <TIM_Base_SetConfig+0x90>
 8006818:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 800681c:	4290      	cmp	r0, r2
 800681e:	d007      	beq.n	8006830 <TIM_Base_SetConfig+0x90>
 8006820:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006824:	4290      	cmp	r0, r2
 8006826:	d003      	beq.n	8006830 <TIM_Base_SetConfig+0x90>
 8006828:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800682c:	4290      	cmp	r0, r2
 800682e:	d103      	bne.n	8006838 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8006830:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006834:	68ca      	ldr	r2, [r1, #12]
 8006836:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006838:	694a      	ldr	r2, [r1, #20]
 800683a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800683e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006840:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006842:	688b      	ldr	r3, [r1, #8]
 8006844:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006846:	680b      	ldr	r3, [r1, #0]
 8006848:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800684a:	4b06      	ldr	r3, [pc, #24]	@ (8006864 <TIM_Base_SetConfig+0xc4>)
 800684c:	4298      	cmp	r0, r3
 800684e:	d003      	beq.n	8006858 <TIM_Base_SetConfig+0xb8>
 8006850:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8006854:	4298      	cmp	r0, r3
 8006856:	d101      	bne.n	800685c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006858:	690b      	ldr	r3, [r1, #16]
 800685a:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800685c:	2301      	movs	r3, #1
 800685e:	6143      	str	r3, [r0, #20]
}
 8006860:	4770      	bx	lr
 8006862:	bf00      	nop
 8006864:	40010000 	.word	0x40010000
 8006868:	40014000 	.word	0x40014000

0800686c <HAL_TIM_Base_Init>:
{
 800686c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800686e:	4604      	mov	r4, r0
 8006870:	b350      	cbz	r0, 80068c8 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006872:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006876:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800687a:	b91b      	cbnz	r3, 8006884 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800687c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006880:	f7ff fe9b 	bl	80065ba <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006884:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006886:	6820      	ldr	r0, [r4, #0]
 8006888:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 800688a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800688e:	f7ff ff87 	bl	80067a0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006892:	2301      	movs	r3, #1
  return HAL_OK;
 8006894:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006896:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800689a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800689e:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 80068a2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80068a6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 80068aa:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80068ae:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80068b2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 80068b6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 80068ba:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 80068be:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 80068c2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 80068c6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80068c8:	2001      	movs	r0, #1
 80068ca:	e7fc      	b.n	80068c6 <HAL_TIM_Base_Init+0x5a>

080068cc <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 80068cc:	4770      	bx	lr

080068ce <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 80068ce:	4770      	bx	lr

080068d0 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 80068d0:	4770      	bx	lr

080068d2 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80068d2:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80068d4:	e852 3f00 	ldrex	r3, [r2]
 80068d8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80068dc:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 80068e0:	6802      	ldr	r2, [r0, #0]
 80068e2:	2900      	cmp	r1, #0
 80068e4:	d1f5      	bne.n	80068d2 <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80068e6:	f102 0308 	add.w	r3, r2, #8
 80068ea:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80068ee:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80068f2:	f102 0c08 	add.w	ip, r2, #8
 80068f6:	e84c 3100 	strex	r1, r3, [ip]
 80068fa:	2900      	cmp	r1, #0
 80068fc:	d1f3      	bne.n	80068e6 <UART_EndRxTransfer+0x14>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80068fe:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8006900:	2b01      	cmp	r3, #1
 8006902:	d107      	bne.n	8006914 <UART_EndRxTransfer+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006904:	e852 3f00 	ldrex	r3, [r2]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006908:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800690c:	e842 3100 	strex	r1, r3, [r2]
 8006910:	2900      	cmp	r1, #0
 8006912:	d1f7      	bne.n	8006904 <UART_EndRxTransfer+0x32>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8006914:	2320      	movs	r3, #32
 8006916:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800691a:	2300      	movs	r3, #0
 800691c:	6603      	str	r3, [r0, #96]	@ 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 800691e:	6683      	str	r3, [r0, #104]	@ 0x68
}
 8006920:	4770      	bx	lr

08006922 <HAL_UART_ErrorCallback>:
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
 8006922:	4770      	bx	lr

08006924 <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8006924:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8006926:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->RxXferCount = 0U;
 8006928:	2300      	movs	r3, #0
 800692a:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
  huart->TxXferCount = 0U;
 800692e:	f8a0 3052 	strh.w	r3, [r0, #82]	@ 0x52
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 8006932:	f7ff fff6 	bl	8006922 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8006936:	bd08      	pop	{r3, pc}

08006938 <HAL_UARTEx_RxEventCallback>:
}
 8006938:	4770      	bx	lr
	...

0800693c <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 800693c:	6803      	ldr	r3, [r0, #0]
{
 800693e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8006940:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
 8006942:	f640 060f 	movw	r6, #2063	@ 0x80f
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8006946:	6819      	ldr	r1, [r3, #0]
{
 8006948:	4604      	mov	r4, r0
  if (errorflags == 0U)
 800694a:	4232      	tst	r2, r6
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 800694c:	689d      	ldr	r5, [r3, #8]
  if (errorflags == 0U)
 800694e:	d10b      	bne.n	8006968 <HAL_UART_IRQHandler+0x2c>
    if (((isrflags & USART_ISR_RXNE) != 0U)
 8006950:	0696      	lsls	r6, r2, #26
 8006952:	f140 8088 	bpl.w	8006a66 <HAL_UART_IRQHandler+0x12a>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8006956:	068d      	lsls	r5, r1, #26
 8006958:	f140 8085 	bpl.w	8006a66 <HAL_UART_IRQHandler+0x12a>
      if (huart->RxISR != NULL)
 800695c:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 800695e:	2b00      	cmp	r3, #0
 8006960:	d07b      	beq.n	8006a5a <HAL_UART_IRQHandler+0x11e>
}
 8006962:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
 8006966:	4718      	bx	r3
      && (((cr3its & USART_CR3_EIE) != 0U)
 8006968:	f005 0001 	and.w	r0, r5, #1
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 800696c:	4d93      	ldr	r5, [pc, #588]	@ (8006bbc <HAL_UART_IRQHandler+0x280>)
 800696e:	400d      	ands	r5, r1
 8006970:	4305      	orrs	r5, r0
 8006972:	d078      	beq.n	8006a66 <HAL_UART_IRQHandler+0x12a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8006974:	07d6      	lsls	r6, r2, #31
 8006976:	d509      	bpl.n	800698c <HAL_UART_IRQHandler+0x50>
 8006978:	05cd      	lsls	r5, r1, #23
 800697a:	d507      	bpl.n	800698c <HAL_UART_IRQHandler+0x50>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 800697c:	2501      	movs	r5, #1
 800697e:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8006980:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 8006984:	f045 0501 	orr.w	r5, r5, #1
 8006988:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 800698c:	0796      	lsls	r6, r2, #30
 800698e:	d508      	bpl.n	80069a2 <HAL_UART_IRQHandler+0x66>
 8006990:	b138      	cbz	r0, 80069a2 <HAL_UART_IRQHandler+0x66>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 8006992:	2502      	movs	r5, #2
 8006994:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8006996:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 800699a:	f045 0504 	orr.w	r5, r5, #4
 800699e:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80069a2:	0755      	lsls	r5, r2, #29
 80069a4:	d508      	bpl.n	80069b8 <HAL_UART_IRQHandler+0x7c>
 80069a6:	b138      	cbz	r0, 80069b8 <HAL_UART_IRQHandler+0x7c>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 80069a8:	2504      	movs	r5, #4
 80069aa:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 80069ac:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 80069b0:	f045 0502 	orr.w	r5, r5, #2
 80069b4:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_ORE) != 0U)
 80069b8:	0716      	lsls	r6, r2, #28
 80069ba:	d50b      	bpl.n	80069d4 <HAL_UART_IRQHandler+0x98>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 80069bc:	f001 0520 	and.w	r5, r1, #32
 80069c0:	4305      	orrs	r5, r0
 80069c2:	d007      	beq.n	80069d4 <HAL_UART_IRQHandler+0x98>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 80069c4:	2008      	movs	r0, #8
 80069c6:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80069c8:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
 80069cc:	f040 0008 	orr.w	r0, r0, #8
 80069d0:	f8c4 0084 	str.w	r0, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 80069d4:	0515      	lsls	r5, r2, #20
 80069d6:	d50a      	bpl.n	80069ee <HAL_UART_IRQHandler+0xb2>
 80069d8:	0148      	lsls	r0, r1, #5
 80069da:	d508      	bpl.n	80069ee <HAL_UART_IRQHandler+0xb2>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80069dc:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80069e0:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 80069e2:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 80069e6:	f043 0320 	orr.w	r3, r3, #32
 80069ea:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80069ee:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 80069f2:	2b00      	cmp	r3, #0
 80069f4:	d031      	beq.n	8006a5a <HAL_UART_IRQHandler+0x11e>
      if (((isrflags & USART_ISR_RXNE) != 0U)
 80069f6:	0692      	lsls	r2, r2, #26
 80069f8:	d505      	bpl.n	8006a06 <HAL_UART_IRQHandler+0xca>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 80069fa:	068b      	lsls	r3, r1, #26
 80069fc:	d503      	bpl.n	8006a06 <HAL_UART_IRQHandler+0xca>
        if (huart->RxISR != NULL)
 80069fe:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 8006a00:	b10b      	cbz	r3, 8006a06 <HAL_UART_IRQHandler+0xca>
          huart->RxISR(huart);
 8006a02:	4620      	mov	r0, r4
 8006a04:	4798      	blx	r3
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8006a06:	6826      	ldr	r6, [r4, #0]
        UART_EndRxTransfer(huart);
 8006a08:	4620      	mov	r0, r4
      errorcode = huart->ErrorCode;
 8006a0a:	f8d4 2084 	ldr.w	r2, [r4, #132]	@ 0x84
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8006a0e:	68b3      	ldr	r3, [r6, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 8006a10:	f002 0228 	and.w	r2, r2, #40	@ 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8006a14:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006a18:	ea53 0502 	orrs.w	r5, r3, r2
 8006a1c:	d01e      	beq.n	8006a5c <HAL_UART_IRQHandler+0x120>
        UART_EndRxTransfer(huart);
 8006a1e:	f7ff ff58 	bl	80068d2 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8006a22:	68b3      	ldr	r3, [r6, #8]
 8006a24:	065e      	lsls	r6, r3, #25
 8006a26:	d515      	bpl.n	8006a54 <HAL_UART_IRQHandler+0x118>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8006a28:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006a2a:	f102 0308 	add.w	r3, r2, #8
 8006a2e:	e853 3f00 	ldrex	r3, [r3]
 8006a32:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006a36:	3208      	adds	r2, #8
 8006a38:	e842 3100 	strex	r1, r3, [r2]
 8006a3c:	2900      	cmp	r1, #0
 8006a3e:	d1f3      	bne.n	8006a28 <HAL_UART_IRQHandler+0xec>
          if (huart->hdmarx != NULL)
 8006a40:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8006a42:	b138      	cbz	r0, 8006a54 <HAL_UART_IRQHandler+0x118>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8006a44:	4b5e      	ldr	r3, [pc, #376]	@ (8006bc0 <HAL_UART_IRQHandler+0x284>)
 8006a46:	6503      	str	r3, [r0, #80]	@ 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8006a48:	f7fd fceb 	bl	8004422 <HAL_DMA_Abort_IT>
 8006a4c:	b128      	cbz	r0, 8006a5a <HAL_UART_IRQHandler+0x11e>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8006a4e:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8006a50:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8006a52:	e786      	b.n	8006962 <HAL_UART_IRQHandler+0x26>
            HAL_UART_ErrorCallback(huart);
 8006a54:	4620      	mov	r0, r4
 8006a56:	f7ff ff64 	bl	8006922 <HAL_UART_ErrorCallback>
}
 8006a5a:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_ErrorCallback(huart);
 8006a5c:	f7ff ff61 	bl	8006922 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006a60:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
 8006a64:	e7f9      	b.n	8006a5a <HAL_UART_IRQHandler+0x11e>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006a66:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8006a68:	2801      	cmp	r0, #1
 8006a6a:	f040 8088 	bne.w	8006b7e <HAL_UART_IRQHandler+0x242>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 8006a6e:	06d5      	lsls	r5, r2, #27
 8006a70:	f140 8085 	bpl.w	8006b7e <HAL_UART_IRQHandler+0x242>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 8006a74:	06c8      	lsls	r0, r1, #27
 8006a76:	f140 8082 	bpl.w	8006b7e <HAL_UART_IRQHandler+0x242>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8006a7a:	2210      	movs	r2, #16
 8006a7c:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8006a7e:	689a      	ldr	r2, [r3, #8]
 8006a80:	0652      	lsls	r2, r2, #25
 8006a82:	d54a      	bpl.n	8006b1a <HAL_UART_IRQHandler+0x1de>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8006a84:	6f61      	ldr	r1, [r4, #116]	@ 0x74
 8006a86:	680a      	ldr	r2, [r1, #0]
 8006a88:	6852      	ldr	r2, [r2, #4]
 8006a8a:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
 8006a8c:	2a00      	cmp	r2, #0
 8006a8e:	d0e4      	beq.n	8006a5a <HAL_UART_IRQHandler+0x11e>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8006a90:	f8b4 0058 	ldrh.w	r0, [r4, #88]	@ 0x58
 8006a94:	4290      	cmp	r0, r2
 8006a96:	d9e0      	bls.n	8006a5a <HAL_UART_IRQHandler+0x11e>
        huart->RxXferCount = nb_remaining_rx_data;
 8006a98:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8006a9c:	69ca      	ldr	r2, [r1, #28]
 8006a9e:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 8006aa2:	d02e      	beq.n	8006b02 <HAL_UART_IRQHandler+0x1c6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006aa4:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8006aa8:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006aac:	e843 2100 	strex	r1, r2, [r3]
 8006ab0:	2900      	cmp	r1, #0
 8006ab2:	d1f7      	bne.n	8006aa4 <HAL_UART_IRQHandler+0x168>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006ab4:	f103 0208 	add.w	r2, r3, #8
 8006ab8:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006abc:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006ac0:	f103 0008 	add.w	r0, r3, #8
 8006ac4:	e840 2100 	strex	r1, r2, [r0]
 8006ac8:	2900      	cmp	r1, #0
 8006aca:	d1f3      	bne.n	8006ab4 <HAL_UART_IRQHandler+0x178>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006acc:	f103 0208 	add.w	r2, r3, #8
 8006ad0:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8006ad4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006ad8:	f103 0008 	add.w	r0, r3, #8
 8006adc:	e840 2100 	strex	r1, r2, [r0]
 8006ae0:	2900      	cmp	r1, #0
 8006ae2:	d1f3      	bne.n	8006acc <HAL_UART_IRQHandler+0x190>
          huart->RxState = HAL_UART_STATE_READY;
 8006ae4:	2220      	movs	r2, #32
 8006ae6:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006aea:	6621      	str	r1, [r4, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006aec:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006af0:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006af4:	e843 2100 	strex	r1, r2, [r3]
 8006af8:	2900      	cmp	r1, #0
 8006afa:	d1f7      	bne.n	8006aec <HAL_UART_IRQHandler+0x1b0>
          (void)HAL_DMA_Abort(huart->hdmarx);
 8006afc:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8006afe:	f7fd fc52 	bl	80043a6 <HAL_DMA_Abort>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8006b02:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8006b04:	f8b4 1058 	ldrh.w	r1, [r4, #88]	@ 0x58
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8006b08:	6663      	str	r3, [r4, #100]	@ 0x64
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8006b0a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 8006b0e:	1ac9      	subs	r1, r1, r3
 8006b10:	b289      	uxth	r1, r1
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 8006b12:	4620      	mov	r0, r4
 8006b14:	f7ff ff10 	bl	8006938 <HAL_UARTEx_RxEventCallback>
 8006b18:	e79f      	b.n	8006a5a <HAL_UART_IRQHandler+0x11e>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8006b1a:	f8b4 205a 	ldrh.w	r2, [r4, #90]	@ 0x5a
      if ((huart->RxXferCount > 0U)
 8006b1e:	f8b4 005a 	ldrh.w	r0, [r4, #90]	@ 0x5a
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8006b22:	f8b4 1058 	ldrh.w	r1, [r4, #88]	@ 0x58
 8006b26:	b292      	uxth	r2, r2
      if ((huart->RxXferCount > 0U)
 8006b28:	b280      	uxth	r0, r0
 8006b2a:	2800      	cmp	r0, #0
 8006b2c:	d095      	beq.n	8006a5a <HAL_UART_IRQHandler+0x11e>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8006b2e:	1a89      	subs	r1, r1, r2
 8006b30:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
 8006b32:	2900      	cmp	r1, #0
 8006b34:	d091      	beq.n	8006a5a <HAL_UART_IRQHandler+0x11e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006b36:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006b3a:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006b3e:	e843 2000 	strex	r0, r2, [r3]
 8006b42:	2800      	cmp	r0, #0
 8006b44:	d1f7      	bne.n	8006b36 <HAL_UART_IRQHandler+0x1fa>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006b46:	f103 0208 	add.w	r2, r3, #8
 8006b4a:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006b4e:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006b52:	f103 0508 	add.w	r5, r3, #8
 8006b56:	e845 2000 	strex	r0, r2, [r5]
 8006b5a:	2800      	cmp	r0, #0
 8006b5c:	d1f3      	bne.n	8006b46 <HAL_UART_IRQHandler+0x20a>
        huart->RxState = HAL_UART_STATE_READY;
 8006b5e:	2220      	movs	r2, #32
        huart->RxISR = NULL;
 8006b60:	66a0      	str	r0, [r4, #104]	@ 0x68
        huart->RxState = HAL_UART_STATE_READY;
 8006b62:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006b66:	6620      	str	r0, [r4, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006b68:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006b6c:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006b70:	e843 2000 	strex	r0, r2, [r3]
 8006b74:	2800      	cmp	r0, #0
 8006b76:	d1f7      	bne.n	8006b68 <HAL_UART_IRQHandler+0x22c>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8006b78:	2302      	movs	r3, #2
 8006b7a:	6663      	str	r3, [r4, #100]	@ 0x64
 8006b7c:	e7c9      	b.n	8006b12 <HAL_UART_IRQHandler+0x1d6>
  if (((isrflags & USART_ISR_TXE) != 0U)
 8006b7e:	0616      	lsls	r6, r2, #24
 8006b80:	d507      	bpl.n	8006b92 <HAL_UART_IRQHandler+0x256>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 8006b82:	060d      	lsls	r5, r1, #24
 8006b84:	d505      	bpl.n	8006b92 <HAL_UART_IRQHandler+0x256>
    if (huart->TxISR != NULL)
 8006b86:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 8006b88:	2b00      	cmp	r3, #0
 8006b8a:	f43f af66 	beq.w	8006a5a <HAL_UART_IRQHandler+0x11e>
      huart->TxISR(huart);
 8006b8e:	4620      	mov	r0, r4
 8006b90:	e6e7      	b.n	8006962 <HAL_UART_IRQHandler+0x26>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 8006b92:	0650      	lsls	r0, r2, #25
 8006b94:	f57f af61 	bpl.w	8006a5a <HAL_UART_IRQHandler+0x11e>
 8006b98:	064a      	lsls	r2, r1, #25
 8006b9a:	f57f af5e 	bpl.w	8006a5a <HAL_UART_IRQHandler+0x11e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006b9e:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8006ba2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006ba6:	e843 2100 	strex	r1, r2, [r3]
 8006baa:	2900      	cmp	r1, #0
 8006bac:	d1f7      	bne.n	8006b9e <HAL_UART_IRQHandler+0x262>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8006bae:	2320      	movs	r3, #32
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 8006bb0:	4620      	mov	r0, r4
  huart->TxISR = NULL;
 8006bb2:	66e1      	str	r1, [r4, #108]	@ 0x6c
  huart->gState = HAL_UART_STATE_READY;
 8006bb4:	67e3      	str	r3, [r4, #124]	@ 0x7c
  HAL_UART_TxCpltCallback(huart);
 8006bb6:	f7fa f805 	bl	8000bc4 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8006bba:	e74e      	b.n	8006a5a <HAL_UART_IRQHandler+0x11e>
 8006bbc:	04000120 	.word	0x04000120
 8006bc0:	08006925 	.word	0x08006925

08006bc4 <UART_RxISR_8BIT>:
{
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8006bc4:	f8d0 2080 	ldr.w	r2, [r0, #128]	@ 0x80
  uint16_t uhMask = huart->Mask;
 8006bc8:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8006bcc:	2a22      	cmp	r2, #34	@ 0x22
{
 8006bce:	b508      	push	{r3, lr}
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8006bd0:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8006bd2:	d143      	bne.n	8006c5c <UART_RxISR_8BIT+0x98>
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8006bd4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 8006bd6:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 8006bd8:	400b      	ands	r3, r1
 8006bda:	7013      	strb	r3, [r2, #0]
    huart->pRxBuffPtr++;
 8006bdc:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006bde:	3301      	adds	r3, #1
 8006be0:	6543      	str	r3, [r0, #84]	@ 0x54
    huart->RxXferCount--;
 8006be2:	f8b0 305a 	ldrh.w	r3, [r0, #90]	@ 0x5a
 8006be6:	3b01      	subs	r3, #1
 8006be8:	b29b      	uxth	r3, r3
 8006bea:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a

    if (huart->RxXferCount == 0U)
 8006bee:	f8b0 305a 	ldrh.w	r3, [r0, #90]	@ 0x5a
 8006bf2:	b29b      	uxth	r3, r3
 8006bf4:	bb73      	cbnz	r3, 8006c54 <UART_RxISR_8BIT+0x90>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006bf6:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006bf8:	e852 3f00 	ldrex	r3, [r2]
 8006bfc:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006c00:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8006c04:	6803      	ldr	r3, [r0, #0]
 8006c06:	2900      	cmp	r1, #0
 8006c08:	d1f5      	bne.n	8006bf6 <UART_RxISR_8BIT+0x32>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006c0a:	f103 0208 	add.w	r2, r3, #8
 8006c0e:	e852 1f00 	ldrex	r1, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006c12:	f021 0101 	bic.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006c16:	4694      	mov	ip, r2
 8006c18:	e84c 1200 	strex	r2, r1, [ip]
 8006c1c:	2a00      	cmp	r2, #0
 8006c1e:	d1f4      	bne.n	8006c0a <UART_RxISR_8BIT+0x46>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8006c20:	2120      	movs	r1, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 8006c22:	6682      	str	r2, [r0, #104]	@ 0x68
      huart->RxState = HAL_UART_STATE_READY;
 8006c24:	f8c0 1080 	str.w	r1, [r0, #128]	@ 0x80

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8006c28:	6642      	str	r2, [r0, #100]	@ 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006c2a:	6e01      	ldr	r1, [r0, #96]	@ 0x60
 8006c2c:	2901      	cmp	r1, #1
 8006c2e:	d112      	bne.n	8006c56 <UART_RxISR_8BIT+0x92>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006c30:	6602      	str	r2, [r0, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006c32:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006c36:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006c3a:	e843 2100 	strex	r1, r2, [r3]
 8006c3e:	2900      	cmp	r1, #0
 8006c40:	d1f7      	bne.n	8006c32 <UART_RxISR_8BIT+0x6e>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 8006c42:	69da      	ldr	r2, [r3, #28]
 8006c44:	06d2      	lsls	r2, r2, #27
 8006c46:	d501      	bpl.n	8006c4c <UART_RxISR_8BIT+0x88>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8006c48:	2210      	movs	r2, #16
 8006c4a:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8006c4c:	f8b0 1058 	ldrh.w	r1, [r0, #88]	@ 0x58
 8006c50:	f7ff fe72 	bl	8006938 <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 8006c54:	bd08      	pop	{r3, pc}
        HAL_UART_RxCpltCallback(huart);
 8006c56:	f7f9 ffc7 	bl	8000be8 <HAL_UART_RxCpltCallback>
 8006c5a:	e7fb      	b.n	8006c54 <UART_RxISR_8BIT+0x90>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8006c5c:	699a      	ldr	r2, [r3, #24]
 8006c5e:	f042 0208 	orr.w	r2, r2, #8
 8006c62:	619a      	str	r2, [r3, #24]
}
 8006c64:	e7f6      	b.n	8006c54 <UART_RxISR_8BIT+0x90>

08006c66 <UART_RxISR_16BIT>:
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8006c66:	f8d0 2080 	ldr.w	r2, [r0, #128]	@ 0x80
  uint16_t uhMask = huart->Mask;
 8006c6a:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8006c6e:	2a22      	cmp	r2, #34	@ 0x22
{
 8006c70:	b508      	push	{r3, lr}
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8006c72:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8006c74:	d140      	bne.n	8006cf8 <UART_RxISR_16BIT+0x92>
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8006c76:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
    tmp = (uint16_t *) huart->pRxBuffPtr ;
    *tmp = (uint16_t)(uhdata & uhMask);
 8006c78:	4011      	ands	r1, r2
 8006c7a:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 8006c7c:	f822 1b02 	strh.w	r1, [r2], #2
    huart->pRxBuffPtr += 2U;
 8006c80:	6542      	str	r2, [r0, #84]	@ 0x54
    huart->RxXferCount--;
 8006c82:	f8b0 205a 	ldrh.w	r2, [r0, #90]	@ 0x5a
 8006c86:	3a01      	subs	r2, #1
 8006c88:	b292      	uxth	r2, r2
 8006c8a:	f8a0 205a 	strh.w	r2, [r0, #90]	@ 0x5a

    if (huart->RxXferCount == 0U)
 8006c8e:	f8b0 205a 	ldrh.w	r2, [r0, #90]	@ 0x5a
 8006c92:	b292      	uxth	r2, r2
 8006c94:	bb62      	cbnz	r2, 8006cf0 <UART_RxISR_16BIT+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006c96:	e853 2f00 	ldrex	r2, [r3]
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006c9a:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006c9e:	e843 2100 	strex	r1, r2, [r3]
 8006ca2:	2900      	cmp	r1, #0
 8006ca4:	d1f7      	bne.n	8006c96 <UART_RxISR_16BIT+0x30>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006ca6:	f103 0208 	add.w	r2, r3, #8
 8006caa:	e852 1f00 	ldrex	r1, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006cae:	f021 0101 	bic.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006cb2:	4694      	mov	ip, r2
 8006cb4:	e84c 1200 	strex	r2, r1, [ip]
 8006cb8:	2a00      	cmp	r2, #0
 8006cba:	d1f4      	bne.n	8006ca6 <UART_RxISR_16BIT+0x40>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8006cbc:	2120      	movs	r1, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 8006cbe:	6682      	str	r2, [r0, #104]	@ 0x68
      huart->RxState = HAL_UART_STATE_READY;
 8006cc0:	f8c0 1080 	str.w	r1, [r0, #128]	@ 0x80

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8006cc4:	6642      	str	r2, [r0, #100]	@ 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006cc6:	6e01      	ldr	r1, [r0, #96]	@ 0x60
 8006cc8:	2901      	cmp	r1, #1
 8006cca:	d112      	bne.n	8006cf2 <UART_RxISR_16BIT+0x8c>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006ccc:	6602      	str	r2, [r0, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006cce:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006cd2:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006cd6:	e843 2100 	strex	r1, r2, [r3]
 8006cda:	2900      	cmp	r1, #0
 8006cdc:	d1f7      	bne.n	8006cce <UART_RxISR_16BIT+0x68>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 8006cde:	69da      	ldr	r2, [r3, #28]
 8006ce0:	06d2      	lsls	r2, r2, #27
 8006ce2:	d501      	bpl.n	8006ce8 <UART_RxISR_16BIT+0x82>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8006ce4:	2210      	movs	r2, #16
 8006ce6:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8006ce8:	f8b0 1058 	ldrh.w	r1, [r0, #88]	@ 0x58
 8006cec:	f7ff fe24 	bl	8006938 <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 8006cf0:	bd08      	pop	{r3, pc}
        HAL_UART_RxCpltCallback(huart);
 8006cf2:	f7f9 ff79 	bl	8000be8 <HAL_UART_RxCpltCallback>
 8006cf6:	e7fb      	b.n	8006cf0 <UART_RxISR_16BIT+0x8a>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8006cf8:	699a      	ldr	r2, [r3, #24]
 8006cfa:	f042 0208 	orr.w	r2, r2, #8
 8006cfe:	619a      	str	r2, [r3, #24]
}
 8006d00:	e7f6      	b.n	8006cf0 <UART_RxISR_16BIT+0x8a>
	...

08006d04 <UART_SetConfig>:
{
 8006d04:	b538      	push	{r3, r4, r5, lr}
 8006d06:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8006d08:	69c0      	ldr	r0, [r0, #28]
 8006d0a:	6921      	ldr	r1, [r4, #16]
 8006d0c:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8006d0e:	6823      	ldr	r3, [r4, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8006d10:	430a      	orrs	r2, r1
 8006d12:	6961      	ldr	r1, [r4, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8006d14:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8006d16:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8006d18:	497d      	ldr	r1, [pc, #500]	@ (8006f10 <UART_SetConfig+0x20c>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8006d1a:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8006d1c:	4029      	ands	r1, r5
  tmpreg |= huart->Init.OneBitSampling;
 8006d1e:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8006d20:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006d22:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8006d24:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006d26:	685a      	ldr	r2, [r3, #4]
 8006d28:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8006d2c:	430a      	orrs	r2, r1
 8006d2e:	605a      	str	r2, [r3, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8006d30:	69a2      	ldr	r2, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8006d32:	6899      	ldr	r1, [r3, #8]
  tmpreg |= huart->Init.OneBitSampling;
 8006d34:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8006d36:	f421 6130 	bic.w	r1, r1, #2816	@ 0xb00
 8006d3a:	430a      	orrs	r2, r1
 8006d3c:	609a      	str	r2, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8006d3e:	4a75      	ldr	r2, [pc, #468]	@ (8006f14 <UART_SetConfig+0x210>)
 8006d40:	4293      	cmp	r3, r2
 8006d42:	d113      	bne.n	8006d6c <UART_SetConfig+0x68>
 8006d44:	4b74      	ldr	r3, [pc, #464]	@ (8006f18 <UART_SetConfig+0x214>)
 8006d46:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006d4a:	f003 0303 	and.w	r3, r3, #3
 8006d4e:	2b02      	cmp	r3, #2
 8006d50:	f000 80a8 	beq.w	8006ea4 <UART_SetConfig+0x1a0>
 8006d54:	2b03      	cmp	r3, #3
 8006d56:	d021      	beq.n	8006d9c <UART_SetConfig+0x98>
 8006d58:	2b01      	cmp	r3, #1
 8006d5a:	f040 80bd 	bne.w	8006ed8 <UART_SetConfig+0x1d4>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006d5e:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8006d62:	f040 809c 	bne.w	8006e9e <UART_SetConfig+0x19a>
        pclk = HAL_RCC_GetSysClockFreq();
 8006d66:	f7ff f83d 	bl	8005de4 <HAL_RCC_GetSysClockFreq>
        break;
 8006d6a:	e092      	b.n	8006e92 <UART_SetConfig+0x18e>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8006d6c:	4a6b      	ldr	r2, [pc, #428]	@ (8006f1c <UART_SetConfig+0x218>)
 8006d6e:	4293      	cmp	r3, r2
 8006d70:	d11b      	bne.n	8006daa <UART_SetConfig+0xa6>
 8006d72:	4b69      	ldr	r3, [pc, #420]	@ (8006f18 <UART_SetConfig+0x214>)
 8006d74:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006d78:	f003 030c 	and.w	r3, r3, #12
 8006d7c:	2b08      	cmp	r3, #8
 8006d7e:	f000 8091 	beq.w	8006ea4 <UART_SetConfig+0x1a0>
 8006d82:	d809      	bhi.n	8006d98 <UART_SetConfig+0x94>
 8006d84:	2b00      	cmp	r3, #0
 8006d86:	f000 80ad 	beq.w	8006ee4 <UART_SetConfig+0x1e0>
 8006d8a:	2b04      	cmp	r3, #4
 8006d8c:	d0e7      	beq.n	8006d5e <UART_SetConfig+0x5a>
        ret = HAL_ERROR;
 8006d8e:	2001      	movs	r0, #1
  huart->RxISR = NULL;
 8006d90:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 8006d92:	e9c4 331a 	strd	r3, r3, [r4, #104]	@ 0x68
}
 8006d96:	bd38      	pop	{r3, r4, r5, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 8006d98:	2b0c      	cmp	r3, #12
 8006d9a:	d1f8      	bne.n	8006d8e <UART_SetConfig+0x8a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006d9c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8006da0:	f000 8084 	beq.w	8006eac <UART_SetConfig+0x1a8>
        pclk = (uint32_t) LSE_VALUE;
 8006da4:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 8006da8:	e0a3      	b.n	8006ef2 <UART_SetConfig+0x1ee>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8006daa:	4a5d      	ldr	r2, [pc, #372]	@ (8006f20 <UART_SetConfig+0x21c>)
 8006dac:	4293      	cmp	r3, r2
 8006dae:	d10e      	bne.n	8006dce <UART_SetConfig+0xca>
 8006db0:	4b59      	ldr	r3, [pc, #356]	@ (8006f18 <UART_SetConfig+0x214>)
 8006db2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006db6:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8006dba:	2b20      	cmp	r3, #32
 8006dbc:	d072      	beq.n	8006ea4 <UART_SetConfig+0x1a0>
 8006dbe:	d804      	bhi.n	8006dca <UART_SetConfig+0xc6>
 8006dc0:	2b00      	cmp	r3, #0
 8006dc2:	f000 808f 	beq.w	8006ee4 <UART_SetConfig+0x1e0>
 8006dc6:	2b10      	cmp	r3, #16
 8006dc8:	e7e0      	b.n	8006d8c <UART_SetConfig+0x88>
 8006dca:	2b30      	cmp	r3, #48	@ 0x30
 8006dcc:	e7e5      	b.n	8006d9a <UART_SetConfig+0x96>
 8006dce:	4a55      	ldr	r2, [pc, #340]	@ (8006f24 <UART_SetConfig+0x220>)
 8006dd0:	4293      	cmp	r3, r2
 8006dd2:	d10d      	bne.n	8006df0 <UART_SetConfig+0xec>
 8006dd4:	4b50      	ldr	r3, [pc, #320]	@ (8006f18 <UART_SetConfig+0x214>)
 8006dd6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006dda:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 8006dde:	2b80      	cmp	r3, #128	@ 0x80
 8006de0:	d060      	beq.n	8006ea4 <UART_SetConfig+0x1a0>
 8006de2:	d803      	bhi.n	8006dec <UART_SetConfig+0xe8>
 8006de4:	2b00      	cmp	r3, #0
 8006de6:	d07d      	beq.n	8006ee4 <UART_SetConfig+0x1e0>
 8006de8:	2b40      	cmp	r3, #64	@ 0x40
 8006dea:	e7cf      	b.n	8006d8c <UART_SetConfig+0x88>
 8006dec:	2bc0      	cmp	r3, #192	@ 0xc0
 8006dee:	e7d4      	b.n	8006d9a <UART_SetConfig+0x96>
 8006df0:	4a4d      	ldr	r2, [pc, #308]	@ (8006f28 <UART_SetConfig+0x224>)
 8006df2:	4293      	cmp	r3, r2
 8006df4:	d110      	bne.n	8006e18 <UART_SetConfig+0x114>
 8006df6:	4b48      	ldr	r3, [pc, #288]	@ (8006f18 <UART_SetConfig+0x214>)
 8006df8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006dfc:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006e00:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006e04:	d04e      	beq.n	8006ea4 <UART_SetConfig+0x1a0>
 8006e06:	d804      	bhi.n	8006e12 <UART_SetConfig+0x10e>
 8006e08:	2b00      	cmp	r3, #0
 8006e0a:	d06b      	beq.n	8006ee4 <UART_SetConfig+0x1e0>
 8006e0c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006e10:	e7bc      	b.n	8006d8c <UART_SetConfig+0x88>
 8006e12:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8006e16:	e7c0      	b.n	8006d9a <UART_SetConfig+0x96>
 8006e18:	4a44      	ldr	r2, [pc, #272]	@ (8006f2c <UART_SetConfig+0x228>)
 8006e1a:	4293      	cmp	r3, r2
 8006e1c:	d110      	bne.n	8006e40 <UART_SetConfig+0x13c>
 8006e1e:	4b3e      	ldr	r3, [pc, #248]	@ (8006f18 <UART_SetConfig+0x214>)
 8006e20:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006e24:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8006e28:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8006e2c:	d03a      	beq.n	8006ea4 <UART_SetConfig+0x1a0>
 8006e2e:	d804      	bhi.n	8006e3a <UART_SetConfig+0x136>
 8006e30:	2b00      	cmp	r3, #0
 8006e32:	d051      	beq.n	8006ed8 <UART_SetConfig+0x1d4>
 8006e34:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006e38:	e7a8      	b.n	8006d8c <UART_SetConfig+0x88>
 8006e3a:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8006e3e:	e7ac      	b.n	8006d9a <UART_SetConfig+0x96>
 8006e40:	4a3b      	ldr	r2, [pc, #236]	@ (8006f30 <UART_SetConfig+0x22c>)
 8006e42:	4293      	cmp	r3, r2
 8006e44:	d110      	bne.n	8006e68 <UART_SetConfig+0x164>
 8006e46:	4b34      	ldr	r3, [pc, #208]	@ (8006f18 <UART_SetConfig+0x214>)
 8006e48:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006e4c:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 8006e50:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006e54:	d026      	beq.n	8006ea4 <UART_SetConfig+0x1a0>
 8006e56:	d804      	bhi.n	8006e62 <UART_SetConfig+0x15e>
 8006e58:	2b00      	cmp	r3, #0
 8006e5a:	d043      	beq.n	8006ee4 <UART_SetConfig+0x1e0>
 8006e5c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006e60:	e794      	b.n	8006d8c <UART_SetConfig+0x88>
 8006e62:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8006e66:	e798      	b.n	8006d9a <UART_SetConfig+0x96>
 8006e68:	4a32      	ldr	r2, [pc, #200]	@ (8006f34 <UART_SetConfig+0x230>)
 8006e6a:	4293      	cmp	r3, r2
 8006e6c:	d18f      	bne.n	8006d8e <UART_SetConfig+0x8a>
 8006e6e:	4b2a      	ldr	r3, [pc, #168]	@ (8006f18 <UART_SetConfig+0x214>)
 8006e70:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006e74:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8006e78:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006e7c:	d012      	beq.n	8006ea4 <UART_SetConfig+0x1a0>
 8006e7e:	d803      	bhi.n	8006e88 <UART_SetConfig+0x184>
 8006e80:	b383      	cbz	r3, 8006ee4 <UART_SetConfig+0x1e0>
 8006e82:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8006e86:	e781      	b.n	8006d8c <UART_SetConfig+0x88>
 8006e88:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 8006e8c:	e785      	b.n	8006d9a <UART_SetConfig+0x96>
        pclk = HAL_RCC_GetPCLK1Freq();
 8006e8e:	f7ff f875 	bl	8005f7c <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 8006e92:	b958      	cbnz	r0, 8006eac <UART_SetConfig+0x1a8>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006e94:	2000      	movs	r0, #0
 8006e96:	e77b      	b.n	8006d90 <UART_SetConfig+0x8c>
        pclk = HAL_RCC_GetPCLK2Freq();
 8006e98:	f7ff f880 	bl	8005f9c <HAL_RCC_GetPCLK2Freq>
        break;
 8006e9c:	e027      	b.n	8006eee <UART_SetConfig+0x1ea>
        pclk = HAL_RCC_GetSysClockFreq();
 8006e9e:	f7fe ffa1 	bl	8005de4 <HAL_RCC_GetSysClockFreq>
        break;
 8006ea2:	e024      	b.n	8006eee <UART_SetConfig+0x1ea>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006ea4:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) HSI_VALUE;
 8006ea8:	4823      	ldr	r0, [pc, #140]	@ (8006f38 <UART_SetConfig+0x234>)
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006eaa:	d122      	bne.n	8006ef2 <UART_SetConfig+0x1ee>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8006eac:	6862      	ldr	r2, [r4, #4]
 8006eae:	0853      	lsrs	r3, r2, #1
 8006eb0:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8006eb4:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8006eb8:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 8006ebc:	f1a3 0110 	sub.w	r1, r3, #16
 8006ec0:	4291      	cmp	r1, r2
 8006ec2:	f63f af64 	bhi.w	8006d8e <UART_SetConfig+0x8a>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8006ec6:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8006eca:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
 8006ece:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8006ed0:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
 8006ed2:	4313      	orrs	r3, r2
 8006ed4:	60cb      	str	r3, [r1, #12]
 8006ed6:	e7dd      	b.n	8006e94 <UART_SetConfig+0x190>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006ed8:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8006edc:	d1dc      	bne.n	8006e98 <UART_SetConfig+0x194>
        pclk = HAL_RCC_GetPCLK2Freq();
 8006ede:	f7ff f85d 	bl	8005f9c <HAL_RCC_GetPCLK2Freq>
        break;
 8006ee2:	e7d6      	b.n	8006e92 <UART_SetConfig+0x18e>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006ee4:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8006ee8:	d0d1      	beq.n	8006e8e <UART_SetConfig+0x18a>
        pclk = HAL_RCC_GetPCLK1Freq();
 8006eea:	f7ff f847 	bl	8005f7c <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 8006eee:	2800      	cmp	r0, #0
 8006ef0:	d0d0      	beq.n	8006e94 <UART_SetConfig+0x190>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8006ef2:	6862      	ldr	r2, [r4, #4]
 8006ef4:	eb00 0352 	add.w	r3, r0, r2, lsr #1
 8006ef8:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8006efc:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 8006f00:	f1a3 0110 	sub.w	r1, r3, #16
 8006f04:	4291      	cmp	r1, r2
 8006f06:	f63f af42 	bhi.w	8006d8e <UART_SetConfig+0x8a>
        huart->Instance->BRR = (uint16_t)usartdiv;
 8006f0a:	6822      	ldr	r2, [r4, #0]
 8006f0c:	60d3      	str	r3, [r2, #12]
 8006f0e:	e7c1      	b.n	8006e94 <UART_SetConfig+0x190>
 8006f10:	efff69f3 	.word	0xefff69f3
 8006f14:	40011000 	.word	0x40011000
 8006f18:	40023800 	.word	0x40023800
 8006f1c:	40004400 	.word	0x40004400
 8006f20:	40004800 	.word	0x40004800
 8006f24:	40004c00 	.word	0x40004c00
 8006f28:	40005000 	.word	0x40005000
 8006f2c:	40011400 	.word	0x40011400
 8006f30:	40007800 	.word	0x40007800
 8006f34:	40007c00 	.word	0x40007c00
 8006f38:	00f42400 	.word	0x00f42400

08006f3c <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8006f3c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8006f3e:	07da      	lsls	r2, r3, #31
{
 8006f40:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8006f42:	d506      	bpl.n	8006f52 <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8006f44:	6801      	ldr	r1, [r0, #0]
 8006f46:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8006f48:	684a      	ldr	r2, [r1, #4]
 8006f4a:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
 8006f4e:	4322      	orrs	r2, r4
 8006f50:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8006f52:	079c      	lsls	r4, r3, #30
 8006f54:	d506      	bpl.n	8006f64 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8006f56:	6801      	ldr	r1, [r0, #0]
 8006f58:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 8006f5a:	684a      	ldr	r2, [r1, #4]
 8006f5c:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8006f60:	4322      	orrs	r2, r4
 8006f62:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8006f64:	0759      	lsls	r1, r3, #29
 8006f66:	d506      	bpl.n	8006f76 <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8006f68:	6801      	ldr	r1, [r0, #0]
 8006f6a:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 8006f6c:	684a      	ldr	r2, [r1, #4]
 8006f6e:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8006f72:	4322      	orrs	r2, r4
 8006f74:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8006f76:	071a      	lsls	r2, r3, #28
 8006f78:	d506      	bpl.n	8006f88 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8006f7a:	6801      	ldr	r1, [r0, #0]
 8006f7c:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 8006f7e:	684a      	ldr	r2, [r1, #4]
 8006f80:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8006f84:	4322      	orrs	r2, r4
 8006f86:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8006f88:	06dc      	lsls	r4, r3, #27
 8006f8a:	d506      	bpl.n	8006f9a <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8006f8c:	6801      	ldr	r1, [r0, #0]
 8006f8e:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8006f90:	688a      	ldr	r2, [r1, #8]
 8006f92:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8006f96:	4322      	orrs	r2, r4
 8006f98:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8006f9a:	0699      	lsls	r1, r3, #26
 8006f9c:	d506      	bpl.n	8006fac <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8006f9e:	6801      	ldr	r1, [r0, #0]
 8006fa0:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8006fa2:	688a      	ldr	r2, [r1, #8]
 8006fa4:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006fa8:	4322      	orrs	r2, r4
 8006faa:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8006fac:	065a      	lsls	r2, r3, #25
 8006fae:	d510      	bpl.n	8006fd2 <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8006fb0:	6801      	ldr	r1, [r0, #0]
 8006fb2:	6c04      	ldr	r4, [r0, #64]	@ 0x40
 8006fb4:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8006fb6:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8006fba:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 8006fbe:	ea42 0204 	orr.w	r2, r2, r4
 8006fc2:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8006fc4:	d105      	bne.n	8006fd2 <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8006fc6:	684a      	ldr	r2, [r1, #4]
 8006fc8:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 8006fca:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
 8006fce:	4322      	orrs	r2, r4
 8006fd0:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8006fd2:	061b      	lsls	r3, r3, #24
 8006fd4:	d506      	bpl.n	8006fe4 <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8006fd6:	6802      	ldr	r2, [r0, #0]
 8006fd8:	6c81      	ldr	r1, [r0, #72]	@ 0x48
 8006fda:	6853      	ldr	r3, [r2, #4]
 8006fdc:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 8006fe0:	430b      	orrs	r3, r1
 8006fe2:	6053      	str	r3, [r2, #4]
}
 8006fe4:	bd10      	pop	{r4, pc}

08006fe6 <UART_WaitOnFlagUntilTimeout>:
{
 8006fe6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006fea:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006fee:	4605      	mov	r5, r0
 8006ff0:	460f      	mov	r7, r1
 8006ff2:	4616      	mov	r6, r2
 8006ff4:	4698      	mov	r8, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8006ff6:	682a      	ldr	r2, [r5, #0]
 8006ff8:	69d3      	ldr	r3, [r2, #28]
 8006ffa:	ea37 0303 	bics.w	r3, r7, r3
 8006ffe:	bf0c      	ite	eq
 8007000:	2301      	moveq	r3, #1
 8007002:	2300      	movne	r3, #0
 8007004:	42b3      	cmp	r3, r6
 8007006:	d001      	beq.n	800700c <UART_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
 8007008:	2000      	movs	r0, #0
 800700a:	e028      	b.n	800705e <UART_WaitOnFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
 800700c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8007010:	d0f2      	beq.n	8006ff8 <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007012:	f7fd f8a3 	bl	800415c <HAL_GetTick>
 8007016:	eba0 0008 	sub.w	r0, r0, r8
 800701a:	682c      	ldr	r4, [r5, #0]
 800701c:	4548      	cmp	r0, r9
 800701e:	d802      	bhi.n	8007026 <UART_WaitOnFlagUntilTimeout+0x40>
 8007020:	f1b9 0f00 	cmp.w	r9, #0
 8007024:	d11d      	bne.n	8007062 <UART_WaitOnFlagUntilTimeout+0x7c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007026:	e854 3f00 	ldrex	r3, [r4]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800702a:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800702e:	e844 3200 	strex	r2, r3, [r4]
 8007032:	2a00      	cmp	r2, #0
 8007034:	d1f7      	bne.n	8007026 <UART_WaitOnFlagUntilTimeout+0x40>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007036:	f104 0308 	add.w	r3, r4, #8
 800703a:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800703e:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007042:	f104 0108 	add.w	r1, r4, #8
 8007046:	e841 3200 	strex	r2, r3, [r1]
 800704a:	2a00      	cmp	r2, #0
 800704c:	d1f3      	bne.n	8007036 <UART_WaitOnFlagUntilTimeout+0x50>
        huart->gState = HAL_UART_STATE_READY;
 800704e:	2320      	movs	r3, #32
 8007050:	67eb      	str	r3, [r5, #124]	@ 0x7c
        huart->RxState = HAL_UART_STATE_READY;
 8007052:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
          __HAL_UNLOCK(huart);
 8007056:	2300      	movs	r3, #0
        return HAL_TIMEOUT;
 8007058:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 800705a:	f885 3078 	strb.w	r3, [r5, #120]	@ 0x78
}
 800705e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8007062:	6823      	ldr	r3, [r4, #0]
 8007064:	075a      	lsls	r2, r3, #29
 8007066:	d5c6      	bpl.n	8006ff6 <UART_WaitOnFlagUntilTimeout+0x10>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8007068:	69e3      	ldr	r3, [r4, #28]
 800706a:	051b      	lsls	r3, r3, #20
 800706c:	d5c3      	bpl.n	8006ff6 <UART_WaitOnFlagUntilTimeout+0x10>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800706e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8007072:	6223      	str	r3, [r4, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007074:	e854 3f00 	ldrex	r3, [r4]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8007078:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800707c:	e844 3200 	strex	r2, r3, [r4]
 8007080:	2a00      	cmp	r2, #0
 8007082:	d1f7      	bne.n	8007074 <UART_WaitOnFlagUntilTimeout+0x8e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007084:	f104 0308 	add.w	r3, r4, #8
 8007088:	e853 3f00 	ldrex	r3, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800708c:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007090:	f104 0108 	add.w	r1, r4, #8
 8007094:	e841 3200 	strex	r2, r3, [r1]
 8007098:	2a00      	cmp	r2, #0
 800709a:	d1f3      	bne.n	8007084 <UART_WaitOnFlagUntilTimeout+0x9e>
          huart->gState = HAL_UART_STATE_READY;
 800709c:	2320      	movs	r3, #32
 800709e:	67eb      	str	r3, [r5, #124]	@ 0x7c
          huart->RxState = HAL_UART_STATE_READY;
 80070a0:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 80070a4:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
          return HAL_TIMEOUT;
 80070a8:	e7d5      	b.n	8007056 <UART_WaitOnFlagUntilTimeout+0x70>

080070aa <HAL_UART_Transmit>:
{
 80070aa:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80070ae:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 80070b0:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
{
 80070b2:	4604      	mov	r4, r0
 80070b4:	460e      	mov	r6, r1
  if (huart->gState == HAL_UART_STATE_READY)
 80070b6:	2b20      	cmp	r3, #32
{
 80070b8:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 80070ba:	d141      	bne.n	8007140 <HAL_UART_Transmit+0x96>
    if ((pData == NULL) || (Size == 0U))
 80070bc:	2900      	cmp	r1, #0
 80070be:	d041      	beq.n	8007144 <HAL_UART_Transmit+0x9a>
 80070c0:	2a00      	cmp	r2, #0
 80070c2:	d03f      	beq.n	8007144 <HAL_UART_Transmit+0x9a>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80070c4:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80070c6:	2500      	movs	r5, #0
 80070c8:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80070cc:	67c3      	str	r3, [r0, #124]	@ 0x7c
    tickstart = HAL_GetTick();
 80070ce:	f7fd f845 	bl	800415c <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80070d2:	68a3      	ldr	r3, [r4, #8]
    tickstart = HAL_GetTick();
 80070d4:	4681      	mov	r9, r0
    huart->TxXferSize  = Size;
 80070d6:	f8a4 7050 	strh.w	r7, [r4, #80]	@ 0x50
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80070da:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->TxXferCount = Size;
 80070de:	f8a4 7052 	strh.w	r7, [r4, #82]	@ 0x52
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80070e2:	d103      	bne.n	80070ec <HAL_UART_Transmit+0x42>
 80070e4:	6923      	ldr	r3, [r4, #16]
 80070e6:	b90b      	cbnz	r3, 80070ec <HAL_UART_Transmit+0x42>
 80070e8:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 80070ea:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 80070ec:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80070f0:	464b      	mov	r3, r9
 80070f2:	f8cd 8000 	str.w	r8, [sp]
    while (huart->TxXferCount > 0U)
 80070f6:	b292      	uxth	r2, r2
 80070f8:	b93a      	cbnz	r2, 800710a <HAL_UART_Transmit+0x60>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80070fa:	2140      	movs	r1, #64	@ 0x40
 80070fc:	4620      	mov	r0, r4
 80070fe:	f7ff ff72 	bl	8006fe6 <UART_WaitOnFlagUntilTimeout>
 8007102:	b940      	cbnz	r0, 8007116 <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 8007104:	2320      	movs	r3, #32
 8007106:	67e3      	str	r3, [r4, #124]	@ 0x7c
    return HAL_OK;
 8007108:	e006      	b.n	8007118 <HAL_UART_Transmit+0x6e>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800710a:	2200      	movs	r2, #0
 800710c:	2180      	movs	r1, #128	@ 0x80
 800710e:	4620      	mov	r0, r4
 8007110:	f7ff ff69 	bl	8006fe6 <UART_WaitOnFlagUntilTimeout>
 8007114:	b118      	cbz	r0, 800711e <HAL_UART_Transmit+0x74>
        return HAL_TIMEOUT;
 8007116:	2003      	movs	r0, #3
}
 8007118:	b003      	add	sp, #12
 800711a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 800711e:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 8007120:	b95e      	cbnz	r6, 800713a <HAL_UART_Transmit+0x90>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8007122:	f835 3b02 	ldrh.w	r3, [r5], #2
 8007126:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 800712a:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
 800712c:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
 8007130:	3a01      	subs	r2, #1
 8007132:	b292      	uxth	r2, r2
 8007134:	f8a4 2052 	strh.w	r2, [r4, #82]	@ 0x52
 8007138:	e7d8      	b.n	80070ec <HAL_UART_Transmit+0x42>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 800713a:	f816 3b01 	ldrb.w	r3, [r6], #1
 800713e:	e7f4      	b.n	800712a <HAL_UART_Transmit+0x80>
    return HAL_BUSY;
 8007140:	2002      	movs	r0, #2
 8007142:	e7e9      	b.n	8007118 <HAL_UART_Transmit+0x6e>
      return  HAL_ERROR;
 8007144:	2001      	movs	r0, #1
 8007146:	e7e7      	b.n	8007118 <HAL_UART_Transmit+0x6e>

08007148 <UART_CheckIdleState>:
{
 8007148:	b537      	push	{r0, r1, r2, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800714a:	2500      	movs	r5, #0
{
 800714c:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800714e:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
  tickstart = HAL_GetTick();
 8007152:	f7fd f803 	bl	800415c <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8007156:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
 8007158:	4603      	mov	r3, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 800715a:	6812      	ldr	r2, [r2, #0]
 800715c:	0712      	lsls	r2, r2, #28
 800715e:	d40a      	bmi.n	8007176 <UART_CheckIdleState+0x2e>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007160:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8007162:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 8007164:	f884 0078 	strb.w	r0, [r4, #120]	@ 0x78
  huart->gState = HAL_UART_STATE_READY;
 8007168:	67e3      	str	r3, [r4, #124]	@ 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 800716a:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800716e:	6620      	str	r0, [r4, #96]	@ 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8007170:	6660      	str	r0, [r4, #100]	@ 0x64
}
 8007172:	b003      	add	sp, #12
 8007174:	bd30      	pop	{r4, r5, pc}
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8007176:	f06f 427e 	mvn.w	r2, #4261412864	@ 0xfe000000
 800717a:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 800717e:	4620      	mov	r0, r4
 8007180:	9200      	str	r2, [sp, #0]
 8007182:	462a      	mov	r2, r5
 8007184:	f7ff ff2f 	bl	8006fe6 <UART_WaitOnFlagUntilTimeout>
 8007188:	2800      	cmp	r0, #0
 800718a:	d0e9      	beq.n	8007160 <UART_CheckIdleState+0x18>
      return HAL_TIMEOUT;
 800718c:	2003      	movs	r0, #3
 800718e:	e7f0      	b.n	8007172 <UART_CheckIdleState+0x2a>

08007190 <HAL_UART_Init>:
{
 8007190:	b510      	push	{r4, lr}
  if (huart == NULL)
 8007192:	4604      	mov	r4, r0
 8007194:	b340      	cbz	r0, 80071e8 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8007196:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
 8007198:	b91b      	cbnz	r3, 80071a2 <HAL_UART_Init+0x12>
    huart->Lock = HAL_UNLOCKED;
 800719a:	f880 3078 	strb.w	r3, [r0, #120]	@ 0x78
    HAL_UART_MspInit(huart);
 800719e:	f7f9 ff4f 	bl	8001040 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 80071a2:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 80071a4:	2324      	movs	r3, #36	@ 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
 80071a6:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
 80071a8:	67e3      	str	r3, [r4, #124]	@ 0x7c
  __HAL_UART_DISABLE(huart);
 80071aa:	6813      	ldr	r3, [r2, #0]
 80071ac:	f023 0301 	bic.w	r3, r3, #1
 80071b0:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 80071b2:	f7ff fda7 	bl	8006d04 <UART_SetConfig>
 80071b6:	2801      	cmp	r0, #1
 80071b8:	d016      	beq.n	80071e8 <HAL_UART_Init+0x58>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 80071ba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80071bc:	b113      	cbz	r3, 80071c4 <HAL_UART_Init+0x34>
    UART_AdvFeatureConfig(huart);
 80071be:	4620      	mov	r0, r4
 80071c0:	f7ff febc 	bl	8006f3c <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80071c4:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
 80071c6:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80071c8:	685a      	ldr	r2, [r3, #4]
 80071ca:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 80071ce:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80071d0:	689a      	ldr	r2, [r3, #8]
 80071d2:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 80071d6:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 80071d8:	681a      	ldr	r2, [r3, #0]
 80071da:	f042 0201 	orr.w	r2, r2, #1
}
 80071de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
 80071e2:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 80071e4:	f7ff bfb0 	b.w	8007148 <UART_CheckIdleState>
}
 80071e8:	2001      	movs	r0, #1
 80071ea:	bd10      	pop	{r4, pc}

080071ec <UART_Start_Receive_IT>:
{
 80071ec:	b510      	push	{r4, lr}
  huart->RxXferSize  = Size;
 80071ee:	f8a0 2058 	strh.w	r2, [r0, #88]	@ 0x58
  huart->RxISR       = NULL;
 80071f2:	2300      	movs	r3, #0
  huart->RxXferCount = Size;
 80071f4:	f8a0 205a 	strh.w	r2, [r0, #90]	@ 0x5a
  UART_MASK_COMPUTATION(huart);
 80071f8:	6882      	ldr	r2, [r0, #8]
  huart->pRxBuffPtr  = pData;
 80071fa:	6541      	str	r1, [r0, #84]	@ 0x54
  UART_MASK_COMPUTATION(huart);
 80071fc:	f5b2 5f80 	cmp.w	r2, #4096	@ 0x1000
  huart->RxISR       = NULL;
 8007200:	6683      	str	r3, [r0, #104]	@ 0x68
  UART_MASK_COMPUTATION(huart);
 8007202:	d130      	bne.n	8007266 <UART_Start_Receive_IT+0x7a>
 8007204:	6903      	ldr	r3, [r0, #16]
 8007206:	2b00      	cmp	r3, #0
 8007208:	f240 13ff 	movw	r3, #511	@ 0x1ff
 800720c:	bf18      	it	ne
 800720e:	23ff      	movne	r3, #255	@ 0xff
 8007210:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007214:	2300      	movs	r3, #0
 8007216:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 800721a:	2322      	movs	r3, #34	@ 0x22
 800721c:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007220:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007222:	f102 0308 	add.w	r3, r2, #8
 8007226:	e853 3f00 	ldrex	r3, [r3]
 800722a:	f043 0301 	orr.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800722e:	3208      	adds	r2, #8
 8007230:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8007234:	6802      	ldr	r2, [r0, #0]
 8007236:	2900      	cmp	r1, #0
 8007238:	d1f2      	bne.n	8007220 <UART_Start_Receive_IT+0x34>
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800723a:	6883      	ldr	r3, [r0, #8]
 800723c:	6901      	ldr	r1, [r0, #16]
 800723e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->RxISR = UART_RxISR_16BIT;
 8007242:	4b15      	ldr	r3, [pc, #84]	@ (8007298 <UART_Start_Receive_IT+0xac>)
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007244:	d103      	bne.n	800724e <UART_Start_Receive_IT+0x62>
    huart->RxISR = UART_RxISR_16BIT;
 8007246:	4c15      	ldr	r4, [pc, #84]	@ (800729c <UART_Start_Receive_IT+0xb0>)
 8007248:	2900      	cmp	r1, #0
 800724a:	bf08      	it	eq
 800724c:	4623      	moveq	r3, r4
 800724e:	6683      	str	r3, [r0, #104]	@ 0x68
  if (huart->Init.Parity != UART_PARITY_NONE)
 8007250:	b1c9      	cbz	r1, 8007286 <UART_Start_Receive_IT+0x9a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007252:	e852 3f00 	ldrex	r3, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 8007256:	f443 7390 	orr.w	r3, r3, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800725a:	e842 3100 	strex	r1, r3, [r2]
 800725e:	2900      	cmp	r1, #0
 8007260:	d1f7      	bne.n	8007252 <UART_Start_Receive_IT+0x66>
}
 8007262:	2000      	movs	r0, #0
 8007264:	bd10      	pop	{r4, pc}
  UART_MASK_COMPUTATION(huart);
 8007266:	b92a      	cbnz	r2, 8007274 <UART_Start_Receive_IT+0x88>
 8007268:	6903      	ldr	r3, [r0, #16]
 800726a:	2b00      	cmp	r3, #0
 800726c:	bf14      	ite	ne
 800726e:	237f      	movne	r3, #127	@ 0x7f
 8007270:	23ff      	moveq	r3, #255	@ 0xff
 8007272:	e7cd      	b.n	8007210 <UART_Start_Receive_IT+0x24>
 8007274:	f1b2 5f80 	cmp.w	r2, #268435456	@ 0x10000000
 8007278:	d1ca      	bne.n	8007210 <UART_Start_Receive_IT+0x24>
 800727a:	6903      	ldr	r3, [r0, #16]
 800727c:	2b00      	cmp	r3, #0
 800727e:	bf14      	ite	ne
 8007280:	233f      	movne	r3, #63	@ 0x3f
 8007282:	237f      	moveq	r3, #127	@ 0x7f
 8007284:	e7c4      	b.n	8007210 <UART_Start_Receive_IT+0x24>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007286:	e852 3f00 	ldrex	r3, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE);
 800728a:	f043 0320 	orr.w	r3, r3, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800728e:	e842 3100 	strex	r1, r3, [r2]
 8007292:	2900      	cmp	r1, #0
 8007294:	d1f7      	bne.n	8007286 <UART_Start_Receive_IT+0x9a>
 8007296:	e7e4      	b.n	8007262 <UART_Start_Receive_IT+0x76>
 8007298:	08006bc5 	.word	0x08006bc5
 800729c:	08006c67 	.word	0x08006c67

080072a0 <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
 80072a0:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
 80072a4:	2b20      	cmp	r3, #32
{
 80072a6:	b430      	push	{r4, r5}
  if (huart->RxState == HAL_UART_STATE_READY)
 80072a8:	d112      	bne.n	80072d0 <HAL_UART_Receive_IT+0x30>
    if ((pData == NULL) || (Size == 0U))
 80072aa:	b1a1      	cbz	r1, 80072d6 <HAL_UART_Receive_IT+0x36>
 80072ac:	b19a      	cbz	r2, 80072d6 <HAL_UART_Receive_IT+0x36>
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80072ae:	2300      	movs	r3, #0
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 80072b0:	6804      	ldr	r4, [r0, #0]
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80072b2:	6603      	str	r3, [r0, #96]	@ 0x60
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 80072b4:	6863      	ldr	r3, [r4, #4]
 80072b6:	021b      	lsls	r3, r3, #8
 80072b8:	d507      	bpl.n	80072ca <HAL_UART_Receive_IT+0x2a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80072ba:	e854 3f00 	ldrex	r3, [r4]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 80072be:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80072c2:	e844 3500 	strex	r5, r3, [r4]
 80072c6:	2d00      	cmp	r5, #0
 80072c8:	d1f7      	bne.n	80072ba <HAL_UART_Receive_IT+0x1a>
}
 80072ca:	bc30      	pop	{r4, r5}
    return (UART_Start_Receive_IT(huart, pData, Size));
 80072cc:	f7ff bf8e 	b.w	80071ec <UART_Start_Receive_IT>
    return HAL_BUSY;
 80072d0:	2002      	movs	r0, #2
}
 80072d2:	bc30      	pop	{r4, r5}
 80072d4:	4770      	bx	lr
      return HAL_ERROR;
 80072d6:	2001      	movs	r0, #1
 80072d8:	e7fb      	b.n	80072d2 <HAL_UART_Receive_IT+0x32>

080072da <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80072da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80072de:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 80072e2:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 80072e6:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
 80072ea:	ea43 0308 	orr.w	r3, r3, r8
 80072ee:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 80072f2:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80072f6:	6809      	ldr	r1, [r1, #0]
 80072f8:	b991      	cbnz	r1, 8007320 <FMC_SDRAM_Init+0x46>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80072fa:	ea43 030e 	orr.w	r3, r3, lr
 80072fe:	6801      	ldr	r1, [r0, #0]
 8007300:	4313      	orrs	r3, r2
 8007302:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8007306:	ea43 030c 	orr.w	r3, r3, ip
 800730a:	f021 017f 	bic.w	r1, r1, #127	@ 0x7f
 800730e:	433b      	orrs	r3, r7
 8007310:	4333      	orrs	r3, r6
 8007312:	432b      	orrs	r3, r5
 8007314:	4323      	orrs	r3, r4
 8007316:	430b      	orrs	r3, r1
 8007318:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800731a:	2000      	movs	r0, #0
 800731c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007320:	6801      	ldr	r1, [r0, #0]
 8007322:	ea43 030e 	orr.w	r3, r3, lr
 8007326:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 800732a:	430b      	orrs	r3, r1
 800732c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800732e:	ea42 030c 	orr.w	r3, r2, ip
 8007332:	6841      	ldr	r1, [r0, #4]
 8007334:	433b      	orrs	r3, r7
 8007336:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 800733a:	4333      	orrs	r3, r6
 800733c:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8007340:	432b      	orrs	r3, r5
 8007342:	4323      	orrs	r3, r4
 8007344:	4313      	orrs	r3, r2
 8007346:	6043      	str	r3, [r0, #4]
 8007348:	e7e7      	b.n	800731a <FMC_SDRAM_Init+0x40>

0800734a <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800734a:	68cb      	ldr	r3, [r1, #12]
 800734c:	f103 3cff 	add.w	ip, r3, #4294967295
 8007350:	694b      	ldr	r3, [r1, #20]
{
 8007352:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007354:	3b01      	subs	r3, #1
 8007356:	680f      	ldr	r7, [r1, #0]
 8007358:	684c      	ldr	r4, [r1, #4]
 800735a:	688e      	ldr	r6, [r1, #8]
 800735c:	051b      	lsls	r3, r3, #20
 800735e:	690d      	ldr	r5, [r1, #16]
 8007360:	3c01      	subs	r4, #1
 8007362:	6989      	ldr	r1, [r1, #24]
 8007364:	3e01      	subs	r6, #1
 8007366:	3d01      	subs	r5, #1
 8007368:	3f01      	subs	r7, #1
 800736a:	3901      	subs	r1, #1
 800736c:	0124      	lsls	r4, r4, #4
 800736e:	0236      	lsls	r6, r6, #8
 8007370:	042d      	lsls	r5, r5, #16
 8007372:	0609      	lsls	r1, r1, #24
 8007374:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8007378:	b95a      	cbnz	r2, 8007392 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800737a:	433b      	orrs	r3, r7
 800737c:	6882      	ldr	r2, [r0, #8]
 800737e:	4323      	orrs	r3, r4
 8007380:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007384:	4333      	orrs	r3, r6
 8007386:	432b      	orrs	r3, r5
 8007388:	430b      	orrs	r3, r1
 800738a:	4313      	orrs	r3, r2
 800738c:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800738e:	2000      	movs	r0, #0
 8007390:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007392:	6882      	ldr	r2, [r0, #8]
 8007394:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8007398:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 800739c:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800739e:	ea44 0306 	orr.w	r3, r4, r6
 80073a2:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80073a4:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 80073a6:	68c2      	ldr	r2, [r0, #12]
 80073a8:	432b      	orrs	r3, r5
 80073aa:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 80073ae:	430b      	orrs	r3, r1
 80073b0:	4313      	orrs	r3, r2
 80073b2:	60c3      	str	r3, [r0, #12]
 80073b4:	e7eb      	b.n	800738e <FMC_SDRAM_Timing_Init+0x44>

080073b6 <FMC_SDRAM_SendCommand>:
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80073b6:	6902      	ldr	r2, [r0, #16]
{
 80073b8:	b510      	push	{r4, lr}
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80073ba:	e9d1 3400 	ldrd	r3, r4, [r1]
 80073be:	0d92      	lsrs	r2, r2, #22
 80073c0:	4323      	orrs	r3, r4
 80073c2:	68cc      	ldr	r4, [r1, #12]
 80073c4:	0592      	lsls	r2, r2, #22
 80073c6:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
 80073ca:	4313      	orrs	r3, r2
 80073cc:	688a      	ldr	r2, [r1, #8]
 80073ce:	3a01      	subs	r2, #1
 80073d0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80073d4:	6103      	str	r3, [r0, #16]
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
 80073d6:	2000      	movs	r0, #0
 80073d8:	bd10      	pop	{r4, pc}

080073da <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 80073da:	6943      	ldr	r3, [r0, #20]
 80073dc:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 80073e0:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
 80073e4:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 80073e8:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 80073ea:	2000      	movs	r0, #0
 80073ec:	4770      	bx	lr
	...

080073f0 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80073f0:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80073f4:	b113      	cbz	r3, 80073fc <osKernelInitialize+0xc>
    stat = osErrorISR;
 80073f6:	f06f 0005 	mvn.w	r0, #5
 80073fa:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80073fc:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007400:	4b07      	ldr	r3, [pc, #28]	@ (8007420 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8007402:	b912      	cbnz	r2, 800740a <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007404:	f3ef 8211 	mrs	r2, BASEPRI
 8007408:	b112      	cbz	r2, 8007410 <osKernelInitialize+0x20>
 800740a:	681a      	ldr	r2, [r3, #0]
 800740c:	2a02      	cmp	r2, #2
 800740e:	d0f2      	beq.n	80073f6 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8007410:	6818      	ldr	r0, [r3, #0]
 8007412:	b910      	cbnz	r0, 800741a <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007414:	2201      	movs	r2, #1
 8007416:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007418:	4770      	bx	lr
    } else {
      stat = osError;
 800741a:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800741e:	4770      	bx	lr
 8007420:	20003fe4 	.word	0x20003fe4

08007424 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007424:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007426:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800742a:	b113      	cbz	r3, 8007432 <osKernelStart+0xe>
    stat = osErrorISR;
 800742c:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8007430:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007432:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007436:	4b0a      	ldr	r3, [pc, #40]	@ (8007460 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8007438:	b912      	cbnz	r2, 8007440 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800743a:	f3ef 8211 	mrs	r2, BASEPRI
 800743e:	b112      	cbz	r2, 8007446 <osKernelStart+0x22>
 8007440:	681a      	ldr	r2, [r3, #0]
 8007442:	2a02      	cmp	r2, #2
 8007444:	d0f2      	beq.n	800742c <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8007446:	681a      	ldr	r2, [r3, #0]
 8007448:	2a01      	cmp	r2, #1
 800744a:	d105      	bne.n	8007458 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 800744c:	2202      	movs	r2, #2
 800744e:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8007450:	f001 fe68 	bl	8009124 <vTaskStartScheduler>
      stat = osOK;
 8007454:	2000      	movs	r0, #0
 8007456:	e7eb      	b.n	8007430 <osKernelStart+0xc>
      stat = osError;
 8007458:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800745c:	e7e8      	b.n	8007430 <osKernelStart+0xc>
 800745e:	bf00      	nop
 8007460:	20003fe4 	.word	0x20003fe4

08007464 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007464:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007466:	4614      	mov	r4, r2
 8007468:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800746a:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800746c:	460b      	mov	r3, r1
  hTask = NULL;
 800746e:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007470:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007474:	bb1a      	cbnz	r2, 80074be <osThreadNew+0x5a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007476:	f3ef 8210 	mrs	r2, PRIMASK
 800747a:	b912      	cbnz	r2, 8007482 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800747c:	f3ef 8211 	mrs	r2, BASEPRI
 8007480:	b11a      	cbz	r2, 800748a <osThreadNew+0x26>
 8007482:	4a21      	ldr	r2, [pc, #132]	@ (8007508 <osThreadNew+0xa4>)
 8007484:	6812      	ldr	r2, [r2, #0]
 8007486:	2a02      	cmp	r2, #2
 8007488:	d019      	beq.n	80074be <osThreadNew+0x5a>
 800748a:	b1c0      	cbz	r0, 80074be <osThreadNew+0x5a>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800748c:	b36c      	cbz	r4, 80074ea <osThreadNew+0x86>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800748e:	69a5      	ldr	r5, [r4, #24]
 8007490:	2d00      	cmp	r5, #0
 8007492:	bf08      	it	eq
 8007494:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007496:	1e6a      	subs	r2, r5, #1
 8007498:	46ac      	mov	ip, r5
 800749a:	2a37      	cmp	r2, #55	@ 0x37
 800749c:	d82a      	bhi.n	80074f4 <osThreadNew+0x90>
 800749e:	6862      	ldr	r2, [r4, #4]
 80074a0:	07d2      	lsls	r2, r2, #31
 80074a2:	d427      	bmi.n	80074f4 <osThreadNew+0x90>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80074a4:	6966      	ldr	r6, [r4, #20]
 80074a6:	b16e      	cbz	r6, 80074c4 <osThreadNew+0x60>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80074a8:	08b2      	lsrs	r2, r6, #2
      if (attr->name != NULL) {
 80074aa:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80074ac:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
 80074b0:	b157      	cbz	r7, 80074c8 <osThreadNew+0x64>
 80074b2:	f1be 0f5f 	cmp.w	lr, #95	@ 0x5f
 80074b6:	d902      	bls.n	80074be <osThreadNew+0x5a>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80074b8:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80074ba:	b104      	cbz	r4, 80074be <osThreadNew+0x5a>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80074bc:	b9e6      	cbnz	r6, 80074f8 <osThreadNew+0x94>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 80074be:	9805      	ldr	r0, [sp, #20]
}
 80074c0:	b007      	add	sp, #28
 80074c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80074c4:	2280      	movs	r2, #128	@ 0x80
 80074c6:	e7f0      	b.n	80074aa <osThreadNew+0x46>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80074c8:	f1be 0f00 	cmp.w	lr, #0
 80074cc:	d1f7      	bne.n	80074be <osThreadNew+0x5a>
      if (mem == 0) {
 80074ce:	6924      	ldr	r4, [r4, #16]
 80074d0:	2c00      	cmp	r4, #0
 80074d2:	d1f4      	bne.n	80074be <osThreadNew+0x5a>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80074d4:	ac05      	add	r4, sp, #20
 80074d6:	b292      	uxth	r2, r2
 80074d8:	e9cd c400 	strd	ip, r4, [sp]
 80074dc:	f001 fc95 	bl	8008e0a <xTaskCreate>
 80074e0:	2801      	cmp	r0, #1
          hTask = NULL;
 80074e2:	bf1c      	itt	ne
 80074e4:	2300      	movne	r3, #0
 80074e6:	9305      	strne	r3, [sp, #20]
 80074e8:	e7e9      	b.n	80074be <osThreadNew+0x5a>
    name = NULL;
 80074ea:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 80074ec:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80074f0:	2280      	movs	r2, #128	@ 0x80
 80074f2:	e7ef      	b.n	80074d4 <osThreadNew+0x70>
        return (NULL);
 80074f4:	2000      	movs	r0, #0
 80074f6:	e7e3      	b.n	80074c0 <osThreadNew+0x5c>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80074f8:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80074fc:	9500      	str	r5, [sp, #0]
 80074fe:	f001 fc46 	bl	8008d8e <xTaskCreateStatic>
 8007502:	9005      	str	r0, [sp, #20]
 8007504:	e7db      	b.n	80074be <osThreadNew+0x5a>
 8007506:	bf00      	nop
 8007508:	20003fe4 	.word	0x20003fe4

0800750c <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 800750c:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800750e:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007512:	b113      	cbz	r3, 800751a <osDelay+0xe>
    stat = osErrorISR;
 8007514:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8007518:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800751a:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800751e:	b913      	cbnz	r3, 8007526 <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007520:	f3ef 8311 	mrs	r3, BASEPRI
 8007524:	b11b      	cbz	r3, 800752e <osDelay+0x22>
 8007526:	4b04      	ldr	r3, [pc, #16]	@ (8007538 <osDelay+0x2c>)
 8007528:	681b      	ldr	r3, [r3, #0]
 800752a:	2b02      	cmp	r3, #2
 800752c:	d0f2      	beq.n	8007514 <osDelay+0x8>
    if (ticks != 0U) {
 800752e:	b108      	cbz	r0, 8007534 <osDelay+0x28>
      vTaskDelay(ticks);
 8007530:	f001 fdb6 	bl	80090a0 <vTaskDelay>
    stat = osOK;
 8007534:	2000      	movs	r0, #0
  return (stat);
 8007536:	e7ef      	b.n	8007518 <osDelay+0xc>
 8007538:	20003fe4 	.word	0x20003fe4

0800753c <osMutexNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
 800753c:	b570      	push	{r4, r5, r6, lr}
 800753e:	4605      	mov	r5, r0
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007540:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
 8007544:	b116      	cbz	r6, 800754c <osMutexNew+0x10>
  hMutex = NULL;
 8007546:	2400      	movs	r4, #0
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
 8007548:	4620      	mov	r0, r4
 800754a:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800754c:	f3ef 8210 	mrs	r2, PRIMASK
  if (!IS_IRQ()) {
 8007550:	b912      	cbnz	r2, 8007558 <osMutexNew+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007552:	f3ef 8211 	mrs	r2, BASEPRI
 8007556:	b11a      	cbz	r2, 8007560 <osMutexNew+0x24>
 8007558:	4a18      	ldr	r2, [pc, #96]	@ (80075bc <osMutexNew+0x80>)
 800755a:	6812      	ldr	r2, [r2, #0]
 800755c:	2a02      	cmp	r2, #2
 800755e:	d0f2      	beq.n	8007546 <osMutexNew+0xa>
    if (attr != NULL) {
 8007560:	b115      	cbz	r5, 8007568 <osMutexNew+0x2c>
      type = attr->attr_bits;
 8007562:	686e      	ldr	r6, [r5, #4]
    if ((type & osMutexRobust) != osMutexRobust) {
 8007564:	0733      	lsls	r3, r6, #28
 8007566:	d4ee      	bmi.n	8007546 <osMutexNew+0xa>
    if ((type & osMutexRecursive) == osMutexRecursive) {
 8007568:	f006 0601 	and.w	r6, r6, #1
      if (attr != NULL) {
 800756c:	b17d      	cbz	r5, 800758e <osMutexNew+0x52>
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800756e:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
 8007572:	b151      	cbz	r1, 800758a <osMutexNew+0x4e>
 8007574:	2b4f      	cmp	r3, #79	@ 0x4f
 8007576:	d9e6      	bls.n	8007546 <osMutexNew+0xa>
        if (rmtx != 0U) {
 8007578:	b1de      	cbz	r6, 80075b2 <osMutexNew+0x76>
          hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
 800757a:	2004      	movs	r0, #4
          hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
 800757c:	f000 ff4f 	bl	800841e <xQueueCreateMutexStatic>
 8007580:	4604      	mov	r4, r0
      if (hMutex != NULL) {
 8007582:	2800      	cmp	r0, #0
 8007584:	d0df      	beq.n	8007546 <osMutexNew+0xa>
          name = attr->name;
 8007586:	682d      	ldr	r5, [r5, #0]
 8007588:	e00a      	b.n	80075a0 <osMutexNew+0x64>
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800758a:	2b00      	cmp	r3, #0
 800758c:	d1db      	bne.n	8007546 <osMutexNew+0xa>
          if (rmtx != 0U) {
 800758e:	b196      	cbz	r6, 80075b6 <osMutexNew+0x7a>
            hMutex = xSemaphoreCreateRecursiveMutex ();
 8007590:	2004      	movs	r0, #4
            hMutex = xSemaphoreCreateMutex ();
 8007592:	f000 ff7a 	bl	800848a <xQueueCreateMutex>
 8007596:	4604      	mov	r4, r0
      if (hMutex != NULL) {
 8007598:	2800      	cmp	r0, #0
 800759a:	d0d4      	beq.n	8007546 <osMutexNew+0xa>
        if (attr != NULL) {
 800759c:	2d00      	cmp	r5, #0
 800759e:	d1f2      	bne.n	8007586 <osMutexNew+0x4a>
        vQueueAddToRegistry (hMutex, name);
 80075a0:	4629      	mov	r1, r5
 80075a2:	4620      	mov	r0, r4
 80075a4:	f001 fa2a 	bl	80089fc <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
 80075a8:	2e00      	cmp	r6, #0
 80075aa:	d0cd      	beq.n	8007548 <osMutexNew+0xc>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
 80075ac:	f044 0401 	orr.w	r4, r4, #1
  return ((osMutexId_t)hMutex);
 80075b0:	e7ca      	b.n	8007548 <osMutexNew+0xc>
          hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
 80075b2:	2001      	movs	r0, #1
 80075b4:	e7e2      	b.n	800757c <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutex ();
 80075b6:	2001      	movs	r0, #1
 80075b8:	e7eb      	b.n	8007592 <osMutexNew+0x56>
 80075ba:	bf00      	nop
 80075bc:	20003fe4 	.word	0x20003fe4

080075c0 <osMutexAcquire>:

osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
 80075c0:	4603      	mov	r3, r0
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
 80075c2:	f020 0001 	bic.w	r0, r0, #1
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
 80075c6:	b510      	push	{r4, lr}

  rmtx = (uint32_t)mutex_id & 1U;
 80075c8:	f003 0201 	and.w	r2, r3, #1
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
 80075cc:	460c      	mov	r4, r1
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80075ce:	f3ef 8105 	mrs	r1, IPSR

  stat = osOK;

  if (IS_IRQ()) {
 80075d2:	b111      	cbz	r1, 80075da <osMutexAcquire+0x1a>
    stat = osErrorISR;
 80075d4:	f06f 0005 	mvn.w	r0, #5
      }
    }
  }

  return (stat);
}
 80075d8:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80075da:	f3ef 8110 	mrs	r1, PRIMASK
  if (IS_IRQ()) {
 80075de:	b911      	cbnz	r1, 80075e6 <osMutexAcquire+0x26>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80075e0:	f3ef 8111 	mrs	r1, BASEPRI
 80075e4:	b119      	cbz	r1, 80075ee <osMutexAcquire+0x2e>
 80075e6:	490d      	ldr	r1, [pc, #52]	@ (800761c <osMutexAcquire+0x5c>)
 80075e8:	6809      	ldr	r1, [r1, #0]
 80075ea:	2902      	cmp	r1, #2
 80075ec:	d0f2      	beq.n	80075d4 <osMutexAcquire+0x14>
  else if (hMutex == NULL) {
 80075ee:	2b01      	cmp	r3, #1
 80075f0:	d911      	bls.n	8007616 <osMutexAcquire+0x56>
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
 80075f2:	4621      	mov	r1, r4
    if (rmtx != 0U) {
 80075f4:	b162      	cbz	r2, 8007610 <osMutexAcquire+0x50>
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
 80075f6:	f001 f98b 	bl	8008910 <xQueueTakeMutexRecursive>
 80075fa:	2801      	cmp	r0, #1
 80075fc:	d101      	bne.n	8007602 <osMutexAcquire+0x42>
  stat = osOK;
 80075fe:	2000      	movs	r0, #0
 8007600:	e7ea      	b.n	80075d8 <osMutexAcquire+0x18>
          stat = osErrorResource;
 8007602:	2c00      	cmp	r4, #0
 8007604:	bf14      	ite	ne
 8007606:	f06f 0001 	mvnne.w	r0, #1
 800760a:	f06f 0002 	mvneq.w	r0, #2
 800760e:	e7e3      	b.n	80075d8 <osMutexAcquire+0x18>
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
 8007610:	f001 f8b9 	bl	8008786 <xQueueSemaphoreTake>
 8007614:	e7f1      	b.n	80075fa <osMutexAcquire+0x3a>
    stat = osErrorParameter;
 8007616:	f06f 0003 	mvn.w	r0, #3
 800761a:	e7dd      	b.n	80075d8 <osMutexAcquire+0x18>
 800761c:	20003fe4 	.word	0x20003fe4

08007620 <osMutexRelease>:

osStatus_t osMutexRelease (osMutexId_t mutex_id) {
 8007620:	4602      	mov	r2, r0
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
 8007622:	f020 0001 	bic.w	r0, r0, #1
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
 8007626:	b508      	push	{r3, lr}

  rmtx = (uint32_t)mutex_id & 1U;
 8007628:	f002 0301 	and.w	r3, r2, #1
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800762c:	f3ef 8105 	mrs	r1, IPSR

  stat = osOK;

  if (IS_IRQ()) {
 8007630:	b111      	cbz	r1, 8007638 <osMutexRelease+0x18>
    stat = osErrorISR;
 8007632:	f06f 0005 	mvn.w	r0, #5
      }
    }
  }

  return (stat);
}
 8007636:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007638:	f3ef 8110 	mrs	r1, PRIMASK
  if (IS_IRQ()) {
 800763c:	b911      	cbnz	r1, 8007644 <osMutexRelease+0x24>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800763e:	f3ef 8111 	mrs	r1, BASEPRI
 8007642:	b119      	cbz	r1, 800764c <osMutexRelease+0x2c>
 8007644:	490b      	ldr	r1, [pc, #44]	@ (8007674 <osMutexRelease+0x54>)
 8007646:	6809      	ldr	r1, [r1, #0]
 8007648:	2902      	cmp	r1, #2
 800764a:	d0f2      	beq.n	8007632 <osMutexRelease+0x12>
  else if (hMutex == NULL) {
 800764c:	2a01      	cmp	r2, #1
 800764e:	d90d      	bls.n	800766c <osMutexRelease+0x4c>
    if (rmtx != 0U) {
 8007650:	b13b      	cbz	r3, 8007662 <osMutexRelease+0x42>
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
 8007652:	f000 fef9 	bl	8008448 <xQueueGiveMutexRecursive>
 8007656:	2801      	cmp	r0, #1
  stat = osOK;
 8007658:	bf0c      	ite	eq
 800765a:	2000      	moveq	r0, #0
        stat = osErrorResource;
 800765c:	f06f 0002 	mvnne.w	r0, #2
 8007660:	e7e9      	b.n	8007636 <osMutexRelease+0x16>
      if (xSemaphoreGive (hMutex) != pdPASS) {
 8007662:	461a      	mov	r2, r3
 8007664:	4619      	mov	r1, r3
 8007666:	f000 fe20 	bl	80082aa <xQueueGenericSend>
 800766a:	e7f4      	b.n	8007656 <osMutexRelease+0x36>
    stat = osErrorParameter;
 800766c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007670:	e7e1      	b.n	8007636 <osMutexRelease+0x16>
 8007672:	bf00      	nop
 8007674:	20003fe4 	.word	0x20003fe4

08007678 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007678:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800767a:	460e      	mov	r6, r1
 800767c:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800767e:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007682:	b993      	cbnz	r3, 80076aa <osSemaphoreNew+0x32>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007684:	f3ef 8310 	mrs	r3, PRIMASK
 8007688:	b913      	cbnz	r3, 8007690 <osSemaphoreNew+0x18>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800768a:	f3ef 8311 	mrs	r3, BASEPRI
 800768e:	b11b      	cbz	r3, 8007698 <osSemaphoreNew+0x20>
 8007690:	4b24      	ldr	r3, [pc, #144]	@ (8007724 <osSemaphoreNew+0xac>)
 8007692:	681b      	ldr	r3, [r3, #0]
 8007694:	2b02      	cmp	r3, #2
 8007696:	d008      	beq.n	80076aa <osSemaphoreNew+0x32>
 8007698:	b138      	cbz	r0, 80076aa <osSemaphoreNew+0x32>
 800769a:	42b0      	cmp	r0, r6
 800769c:	d305      	bcc.n	80076aa <osSemaphoreNew+0x32>
    mem = -1;

    if (attr != NULL) {
 800769e:	b155      	cbz	r5, 80076b6 <osSemaphoreNew+0x3e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80076a0:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 80076a4:	b12b      	cbz	r3, 80076b2 <osSemaphoreNew+0x3a>
 80076a6:	2a4f      	cmp	r2, #79	@ 0x4f
 80076a8:	d823      	bhi.n	80076f2 <osSemaphoreNew+0x7a>
  hSemaphore = NULL;
 80076aa:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80076ac:	4620      	mov	r0, r4
 80076ae:	b002      	add	sp, #8
 80076b0:	bd70      	pop	{r4, r5, r6, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80076b2:	2a00      	cmp	r2, #0
 80076b4:	d1f9      	bne.n	80076aa <osSemaphoreNew+0x32>
      if (max_count == 1U) {
 80076b6:	2801      	cmp	r0, #1
 80076b8:	d10e      	bne.n	80076d8 <osSemaphoreNew+0x60>
          hSemaphore = xSemaphoreCreateBinary();
 80076ba:	2203      	movs	r2, #3
 80076bc:	2100      	movs	r1, #0
 80076be:	2001      	movs	r0, #1
 80076c0:	f000 fd82 	bl	80081c8 <xQueueGenericCreate>
 80076c4:	e01d      	b.n	8007702 <osSemaphoreNew+0x8a>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80076c6:	461a      	mov	r2, r3
 80076c8:	4631      	mov	r1, r6
 80076ca:	f000 fda6 	bl	800821a <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80076ce:	4604      	mov	r4, r0
 80076d0:	2800      	cmp	r0, #0
 80076d2:	d0ea      	beq.n	80076aa <osSemaphoreNew+0x32>
          name = attr->name;
 80076d4:	682d      	ldr	r5, [r5, #0]
 80076d6:	e007      	b.n	80076e8 <osSemaphoreNew+0x70>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80076d8:	4631      	mov	r1, r6
 80076da:	f000 fdc4 	bl	8008266 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80076de:	4604      	mov	r4, r0
 80076e0:	2800      	cmp	r0, #0
 80076e2:	d0e2      	beq.n	80076aa <osSemaphoreNew+0x32>
        if (attr != NULL) {
 80076e4:	2d00      	cmp	r5, #0
 80076e6:	d1f5      	bne.n	80076d4 <osSemaphoreNew+0x5c>
        vQueueAddToRegistry (hSemaphore, name);
 80076e8:	4629      	mov	r1, r5
 80076ea:	4620      	mov	r0, r4
 80076ec:	f001 f986 	bl	80089fc <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80076f0:	e7dc      	b.n	80076ac <osSemaphoreNew+0x34>
      if (max_count == 1U) {
 80076f2:	2801      	cmp	r0, #1
 80076f4:	d1e7      	bne.n	80076c6 <osSemaphoreNew+0x4e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80076f6:	2203      	movs	r2, #3
 80076f8:	9200      	str	r2, [sp, #0]
 80076fa:	2200      	movs	r2, #0
 80076fc:	4611      	mov	r1, r2
 80076fe:	f000 fd4f 	bl	80081a0 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8007702:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007704:	2800      	cmp	r0, #0
 8007706:	d0d0      	beq.n	80076aa <osSemaphoreNew+0x32>
 8007708:	2e00      	cmp	r6, #0
 800770a:	d0eb      	beq.n	80076e4 <osSemaphoreNew+0x6c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800770c:	2300      	movs	r3, #0
 800770e:	461a      	mov	r2, r3
 8007710:	4619      	mov	r1, r3
 8007712:	f000 fdca 	bl	80082aa <xQueueGenericSend>
 8007716:	2801      	cmp	r0, #1
 8007718:	d0e4      	beq.n	80076e4 <osSemaphoreNew+0x6c>
            vSemaphoreDelete (hSemaphore);
 800771a:	4620      	mov	r0, r4
 800771c:	f001 f998 	bl	8008a50 <vQueueDelete>
      if (hSemaphore != NULL) {
 8007720:	e7c3      	b.n	80076aa <osSemaphoreNew+0x32>
 8007722:	bf00      	nop
 8007724:	20003fe4 	.word	0x20003fe4

08007728 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007728:	b513      	push	{r0, r1, r4, lr}
 800772a:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800772c:	b918      	cbnz	r0, 8007736 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 800772e:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007732:	b002      	add	sp, #8
 8007734:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007736:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 800773a:	b15b      	cbz	r3, 8007754 <osSemaphoreAcquire+0x2c>
    if (timeout != 0U) {
 800773c:	2c00      	cmp	r4, #0
 800773e:	d1f6      	bne.n	800772e <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007740:	aa01      	add	r2, sp, #4
 8007742:	4621      	mov	r1, r4
      yield = pdFALSE;
 8007744:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007746:	f001 f906 	bl	8008956 <xQueueReceiveFromISR>
 800774a:	2801      	cmp	r0, #1
 800774c:	d016      	beq.n	800777c <osSemaphoreAcquire+0x54>
        stat = osErrorResource;
 800774e:	f06f 0002 	mvn.w	r0, #2
 8007752:	e7ee      	b.n	8007732 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007754:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8007758:	b913      	cbnz	r3, 8007760 <osSemaphoreAcquire+0x38>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800775a:	f3ef 8311 	mrs	r3, BASEPRI
 800775e:	b11b      	cbz	r3, 8007768 <osSemaphoreAcquire+0x40>
 8007760:	4b0e      	ldr	r3, [pc, #56]	@ (800779c <osSemaphoreAcquire+0x74>)
 8007762:	681b      	ldr	r3, [r3, #0]
 8007764:	2b02      	cmp	r3, #2
 8007766:	d0e9      	beq.n	800773c <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007768:	4621      	mov	r1, r4
 800776a:	f001 f80c 	bl	8008786 <xQueueSemaphoreTake>
 800776e:	2801      	cmp	r0, #1
 8007770:	d006      	beq.n	8007780 <osSemaphoreAcquire+0x58>
      if (timeout != 0U) {
 8007772:	2c00      	cmp	r4, #0
 8007774:	d0eb      	beq.n	800774e <osSemaphoreAcquire+0x26>
        stat = osErrorTimeout;
 8007776:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800777a:	e7da      	b.n	8007732 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 800777c:	9b01      	ldr	r3, [sp, #4]
 800777e:	b90b      	cbnz	r3, 8007784 <osSemaphoreAcquire+0x5c>
  stat = osOK;
 8007780:	2000      	movs	r0, #0
 8007782:	e7d6      	b.n	8007732 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8007784:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007788:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800778c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007790:	f3bf 8f4f 	dsb	sy
 8007794:	f3bf 8f6f 	isb	sy
 8007798:	e7f2      	b.n	8007780 <osSemaphoreAcquire+0x58>
 800779a:	bf00      	nop
 800779c:	20003fe4 	.word	0x20003fe4

080077a0 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80077a0:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80077a2:	b370      	cbz	r0, 8007802 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80077a4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80077a8:	b15b      	cbz	r3, 80077c2 <osSemaphoreRelease+0x22>
    yield = pdFALSE;
 80077aa:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80077ac:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80077ae:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80077b0:	f000 feec 	bl	800858c <xQueueGiveFromISR>
 80077b4:	2801      	cmp	r0, #1
 80077b6:	d016      	beq.n	80077e6 <osSemaphoreRelease+0x46>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 80077b8:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 80077bc:	b003      	add	sp, #12
 80077be:	f85d fb04 	ldr.w	pc, [sp], #4
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80077c2:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80077c6:	b913      	cbnz	r3, 80077ce <osSemaphoreRelease+0x2e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80077c8:	f3ef 8311 	mrs	r3, BASEPRI
 80077cc:	b11b      	cbz	r3, 80077d6 <osSemaphoreRelease+0x36>
 80077ce:	4b0e      	ldr	r3, [pc, #56]	@ (8007808 <osSemaphoreRelease+0x68>)
 80077d0:	681b      	ldr	r3, [r3, #0]
 80077d2:	2b02      	cmp	r3, #2
 80077d4:	d0e9      	beq.n	80077aa <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80077d6:	2300      	movs	r3, #0
 80077d8:	461a      	mov	r2, r3
 80077da:	4619      	mov	r1, r3
 80077dc:	f000 fd65 	bl	80082aa <xQueueGenericSend>
 80077e0:	2801      	cmp	r0, #1
 80077e2:	d00c      	beq.n	80077fe <osSemaphoreRelease+0x5e>
 80077e4:	e7e8      	b.n	80077b8 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 80077e6:	9b01      	ldr	r3, [sp, #4]
 80077e8:	b14b      	cbz	r3, 80077fe <osSemaphoreRelease+0x5e>
 80077ea:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80077ee:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80077f2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80077f6:	f3bf 8f4f 	dsb	sy
 80077fa:	f3bf 8f6f 	isb	sy
  stat = osOK;
 80077fe:	2000      	movs	r0, #0
 8007800:	e7dc      	b.n	80077bc <osSemaphoreRelease+0x1c>
    stat = osErrorParameter;
 8007802:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007806:	e7d9      	b.n	80077bc <osSemaphoreRelease+0x1c>
 8007808:	20003fe4 	.word	0x20003fe4

0800780c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800780c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800780e:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007810:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007814:	b11b      	cbz	r3, 800781e <osMessageQueueNew+0x12>
  hQueue = NULL;
 8007816:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007818:	4628      	mov	r0, r5
 800781a:	b002      	add	sp, #8
 800781c:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800781e:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007822:	b913      	cbnz	r3, 800782a <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007824:	f3ef 8311 	mrs	r3, BASEPRI
 8007828:	b11b      	cbz	r3, 8007832 <osMessageQueueNew+0x26>
 800782a:	4b1a      	ldr	r3, [pc, #104]	@ (8007894 <osMessageQueueNew+0x88>)
 800782c:	681b      	ldr	r3, [r3, #0]
 800782e:	2b02      	cmp	r3, #2
 8007830:	d0f1      	beq.n	8007816 <osMessageQueueNew+0xa>
 8007832:	2800      	cmp	r0, #0
 8007834:	d0ef      	beq.n	8007816 <osMessageQueueNew+0xa>
 8007836:	2900      	cmp	r1, #0
 8007838:	d0ed      	beq.n	8007816 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800783a:	b1ec      	cbz	r4, 8007878 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800783c:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8007840:	b193      	cbz	r3, 8007868 <osMessageQueueNew+0x5c>
 8007842:	2a4f      	cmp	r2, #79	@ 0x4f
 8007844:	d9e7      	bls.n	8007816 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007846:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007848:	2a00      	cmp	r2, #0
 800784a:	d0e4      	beq.n	8007816 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800784c:	fb01 f500 	mul.w	r5, r1, r0
 8007850:	6966      	ldr	r6, [r4, #20]
 8007852:	42ae      	cmp	r6, r5
 8007854:	d3df      	bcc.n	8007816 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007856:	2500      	movs	r5, #0
 8007858:	9500      	str	r5, [sp, #0]
 800785a:	f000 fca1 	bl	80081a0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800785e:	4605      	mov	r5, r0
 8007860:	2800      	cmp	r0, #0
 8007862:	d0d8      	beq.n	8007816 <osMessageQueueNew+0xa>
        name = attr->name;
 8007864:	6824      	ldr	r4, [r4, #0]
 8007866:	e00f      	b.n	8007888 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007868:	2a00      	cmp	r2, #0
 800786a:	d1d4      	bne.n	8007816 <osMessageQueueNew+0xa>
 800786c:	6923      	ldr	r3, [r4, #16]
 800786e:	2b00      	cmp	r3, #0
 8007870:	d1d1      	bne.n	8007816 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007872:	6963      	ldr	r3, [r4, #20]
 8007874:	2b00      	cmp	r3, #0
 8007876:	d1ce      	bne.n	8007816 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8007878:	2200      	movs	r2, #0
 800787a:	f000 fca5 	bl	80081c8 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800787e:	4605      	mov	r5, r0
 8007880:	2800      	cmp	r0, #0
 8007882:	d0c8      	beq.n	8007816 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8007884:	2c00      	cmp	r4, #0
 8007886:	d1ed      	bne.n	8007864 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8007888:	4621      	mov	r1, r4
 800788a:	4628      	mov	r0, r5
 800788c:	f001 f8b6 	bl	80089fc <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007890:	e7c2      	b.n	8007818 <osMessageQueueNew+0xc>
 8007892:	bf00      	nop
 8007894:	20003fe4 	.word	0x20003fe4

08007898 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007898:	b513      	push	{r0, r1, r4, lr}
 800789a:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800789c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80078a0:	b123      	cbz	r3, 80078ac <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80078a2:	b9d8      	cbnz	r0, 80078dc <osMessageQueuePut+0x44>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
 80078a4:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80078a8:	b002      	add	sp, #8
 80078aa:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80078ac:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80078b0:	b913      	cbnz	r3, 80078b8 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80078b2:	f3ef 8311 	mrs	r3, BASEPRI
 80078b6:	b11b      	cbz	r3, 80078c0 <osMessageQueuePut+0x28>
 80078b8:	4b17      	ldr	r3, [pc, #92]	@ (8007918 <osMessageQueuePut+0x80>)
 80078ba:	681b      	ldr	r3, [r3, #0]
 80078bc:	2b02      	cmp	r3, #2
 80078be:	d0f0      	beq.n	80078a2 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80078c0:	2800      	cmp	r0, #0
 80078c2:	d0ef      	beq.n	80078a4 <osMessageQueuePut+0xc>
 80078c4:	2900      	cmp	r1, #0
 80078c6:	d0ed      	beq.n	80078a4 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80078c8:	2300      	movs	r3, #0
 80078ca:	4622      	mov	r2, r4
 80078cc:	f000 fced 	bl	80082aa <xQueueGenericSend>
 80078d0:	2801      	cmp	r0, #1
 80078d2:	d013      	beq.n	80078fc <osMessageQueuePut+0x64>
        if (timeout != 0U) {
 80078d4:	b16c      	cbz	r4, 80078f2 <osMessageQueuePut+0x5a>
          stat = osErrorTimeout;
 80078d6:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80078da:	e7e5      	b.n	80078a8 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80078dc:	2900      	cmp	r1, #0
 80078de:	d0e1      	beq.n	80078a4 <osMessageQueuePut+0xc>
 80078e0:	2c00      	cmp	r4, #0
 80078e2:	d1df      	bne.n	80078a4 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80078e4:	4623      	mov	r3, r4
 80078e6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80078e8:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80078ea:	f000 fdeb 	bl	80084c4 <xQueueGenericSendFromISR>
 80078ee:	2801      	cmp	r0, #1
 80078f0:	d002      	beq.n	80078f8 <osMessageQueuePut+0x60>
        stat = osErrorResource;
 80078f2:	f06f 0002 	mvn.w	r0, #2
 80078f6:	e7d7      	b.n	80078a8 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 80078f8:	9b01      	ldr	r3, [sp, #4]
 80078fa:	b90b      	cbnz	r3, 8007900 <osMessageQueuePut+0x68>
  stat = osOK;
 80078fc:	2000      	movs	r0, #0
 80078fe:	e7d3      	b.n	80078a8 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8007900:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007904:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007908:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800790c:	f3bf 8f4f 	dsb	sy
 8007910:	f3bf 8f6f 	isb	sy
 8007914:	e7f2      	b.n	80078fc <osMessageQueuePut+0x64>
 8007916:	bf00      	nop
 8007918:	20003fe4 	.word	0x20003fe4

0800791c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800791c:	b513      	push	{r0, r1, r4, lr}
 800791e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007920:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007924:	b123      	cbz	r3, 8007930 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007926:	b9d0      	cbnz	r0, 800795e <osMessageQueueGet+0x42>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
 8007928:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800792c:	b002      	add	sp, #8
 800792e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007930:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007934:	b913      	cbnz	r3, 800793c <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007936:	f3ef 8311 	mrs	r3, BASEPRI
 800793a:	b11b      	cbz	r3, 8007944 <osMessageQueueGet+0x28>
 800793c:	4b16      	ldr	r3, [pc, #88]	@ (8007998 <osMessageQueueGet+0x7c>)
 800793e:	681b      	ldr	r3, [r3, #0]
 8007940:	2b02      	cmp	r3, #2
 8007942:	d0f0      	beq.n	8007926 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007944:	2800      	cmp	r0, #0
 8007946:	d0ef      	beq.n	8007928 <osMessageQueueGet+0xc>
 8007948:	2900      	cmp	r1, #0
 800794a:	d0ed      	beq.n	8007928 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800794c:	4622      	mov	r2, r4
 800794e:	f000 fe76 	bl	800863e <xQueueReceive>
 8007952:	2801      	cmp	r0, #1
 8007954:	d012      	beq.n	800797c <osMessageQueueGet+0x60>
        if (timeout != 0U) {
 8007956:	b164      	cbz	r4, 8007972 <osMessageQueueGet+0x56>
          stat = osErrorTimeout;
 8007958:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800795c:	e7e6      	b.n	800792c <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800795e:	2900      	cmp	r1, #0
 8007960:	d0e2      	beq.n	8007928 <osMessageQueueGet+0xc>
 8007962:	2c00      	cmp	r4, #0
 8007964:	d1e0      	bne.n	8007928 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007966:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007968:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800796a:	f000 fff4 	bl	8008956 <xQueueReceiveFromISR>
 800796e:	2801      	cmp	r0, #1
 8007970:	d002      	beq.n	8007978 <osMessageQueueGet+0x5c>
        stat = osErrorResource;
 8007972:	f06f 0002 	mvn.w	r0, #2
 8007976:	e7d9      	b.n	800792c <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8007978:	9b01      	ldr	r3, [sp, #4]
 800797a:	b90b      	cbnz	r3, 8007980 <osMessageQueueGet+0x64>
  stat = osOK;
 800797c:	2000      	movs	r0, #0
 800797e:	e7d5      	b.n	800792c <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8007980:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007984:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007988:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800798c:	f3bf 8f4f 	dsb	sy
 8007990:	f3bf 8f6f 	isb	sy
 8007994:	e7f2      	b.n	800797c <osMessageQueueGet+0x60>
 8007996:	bf00      	nop
 8007998:	20003fe4 	.word	0x20003fe4

0800799c <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800799c:	4b03      	ldr	r3, [pc, #12]	@ (80079ac <vApplicationGetIdleTaskMemory+0x10>)
 800799e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80079a0:	4b03      	ldr	r3, [pc, #12]	@ (80079b0 <vApplicationGetIdleTaskMemory+0x14>)
 80079a2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80079a4:	2380      	movs	r3, #128	@ 0x80
 80079a6:	6013      	str	r3, [r2, #0]
}
 80079a8:	4770      	bx	lr
 80079aa:	bf00      	nop
 80079ac:	20003f84 	.word	0x20003f84
 80079b0:	20003d84 	.word	0x20003d84

080079b4 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80079b4:	4b03      	ldr	r3, [pc, #12]	@ (80079c4 <vApplicationGetTimerTaskMemory+0x10>)
 80079b6:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80079b8:	4b03      	ldr	r3, [pc, #12]	@ (80079c8 <vApplicationGetTimerTaskMemory+0x14>)
 80079ba:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80079bc:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80079c0:	6013      	str	r3, [r2, #0]
}
 80079c2:	4770      	bx	lr
 80079c4:	20003d24 	.word	0x20003d24
 80079c8:	20003924 	.word	0x20003924

080079cc <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80079cc:	4b10      	ldr	r3, [pc, #64]	@ (8007a10 <prvInsertBlockIntoFreeList+0x44>)
{
 80079ce:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80079d0:	461a      	mov	r2, r3
 80079d2:	681b      	ldr	r3, [r3, #0]
 80079d4:	4283      	cmp	r3, r0
 80079d6:	d3fb      	bcc.n	80079d0 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80079d8:	6854      	ldr	r4, [r2, #4]
 80079da:	1911      	adds	r1, r2, r4
 80079dc:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80079de:	bf01      	itttt	eq
 80079e0:	6841      	ldreq	r1, [r0, #4]
 80079e2:	4610      	moveq	r0, r2
 80079e4:	1909      	addeq	r1, r1, r4
 80079e6:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80079e8:	6844      	ldr	r4, [r0, #4]
 80079ea:	1901      	adds	r1, r0, r4
 80079ec:	428b      	cmp	r3, r1
 80079ee:	d10c      	bne.n	8007a0a <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80079f0:	4908      	ldr	r1, [pc, #32]	@ (8007a14 <prvInsertBlockIntoFreeList+0x48>)
 80079f2:	6809      	ldr	r1, [r1, #0]
 80079f4:	428b      	cmp	r3, r1
 80079f6:	d003      	beq.n	8007a00 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80079f8:	6859      	ldr	r1, [r3, #4]
 80079fa:	4421      	add	r1, r4
 80079fc:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80079fe:	6819      	ldr	r1, [r3, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007a00:	4290      	cmp	r0, r2
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8007a02:	6001      	str	r1, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007a04:	bf18      	it	ne
 8007a06:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8007a08:	bd10      	pop	{r4, pc}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007a0a:	4619      	mov	r1, r3
 8007a0c:	e7f8      	b.n	8007a00 <prvInsertBlockIntoFreeList+0x34>
 8007a0e:	bf00      	nop
 8007a10:	20003ff8 	.word	0x20003ff8
 8007a14:	20003ff4 	.word	0x20003ff4

08007a18 <pvPortMalloc>:
{
 8007a18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007a1c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007a1e:	f001 fa23 	bl	8008e68 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8007a22:	4940      	ldr	r1, [pc, #256]	@ (8007b24 <pvPortMalloc+0x10c>)
 8007a24:	4d40      	ldr	r5, [pc, #256]	@ (8007b28 <pvPortMalloc+0x110>)
 8007a26:	680b      	ldr	r3, [r1, #0]
 8007a28:	b9f3      	cbnz	r3, 8007a68 <pvPortMalloc+0x50>
	uxAddress = ( size_t ) ucHeap;
 8007a2a:	4a40      	ldr	r2, [pc, #256]	@ (8007b2c <pvPortMalloc+0x114>)
	xStart.xBlockSize = ( size_t ) 0;
 8007a2c:	2000      	movs	r0, #0
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007a2e:	0756      	lsls	r6, r2, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007a30:	4e3f      	ldr	r6, [pc, #252]	@ (8007b30 <pvPortMalloc+0x118>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007a32:	bf1b      	ittet	ne
 8007a34:	3207      	addne	r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007a36:	4b3f      	ldrne	r3, [pc, #252]	@ (8007b34 <pvPortMalloc+0x11c>)
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007a38:	4b3f      	ldreq	r3, [pc, #252]	@ (8007b38 <pvPortMalloc+0x120>)
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007a3a:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007a3e:	6070      	str	r0, [r6, #4]
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007a40:	bf18      	it	ne
 8007a42:	1a9b      	subne	r3, r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007a44:	6032      	str	r2, [r6, #0]
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007a46:	4413      	add	r3, r2
	uxAddress -= xHeapStructSize;
 8007a48:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007a4a:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8007a4e:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007a52:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8007a54:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007a56:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007a5a:	4b38      	ldr	r3, [pc, #224]	@ (8007b3c <pvPortMalloc+0x124>)
 8007a5c:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007a5e:	4b38      	ldr	r3, [pc, #224]	@ (8007b40 <pvPortMalloc+0x128>)
 8007a60:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007a62:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8007a66:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007a68:	682e      	ldr	r6, [r5, #0]
 8007a6a:	4226      	tst	r6, r4
 8007a6c:	d154      	bne.n	8007b18 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8007a6e:	2c00      	cmp	r4, #0
 8007a70:	d043      	beq.n	8007afa <pvPortMalloc+0xe2>
				xWantedSize += xHeapStructSize;
 8007a72:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007a76:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8007a78:	bf1c      	itt	ne
 8007a7a:	f023 0307 	bicne.w	r3, r3, #7
 8007a7e:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8007a80:	2b00      	cmp	r3, #0
 8007a82:	d049      	beq.n	8007b18 <pvPortMalloc+0x100>
 8007a84:	4f2e      	ldr	r7, [pc, #184]	@ (8007b40 <pvPortMalloc+0x128>)
 8007a86:	683c      	ldr	r4, [r7, #0]
 8007a88:	429c      	cmp	r4, r3
 8007a8a:	d345      	bcc.n	8007b18 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8007a8c:	4a28      	ldr	r2, [pc, #160]	@ (8007b30 <pvPortMalloc+0x118>)
 8007a8e:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007a90:	6868      	ldr	r0, [r5, #4]
 8007a92:	4298      	cmp	r0, r3
 8007a94:	d204      	bcs.n	8007aa0 <pvPortMalloc+0x88>
 8007a96:	f8d5 c000 	ldr.w	ip, [r5]
 8007a9a:	f1bc 0f00 	cmp.w	ip, #0
 8007a9e:	d117      	bne.n	8007ad0 <pvPortMalloc+0xb8>
				if( pxBlock != pxEnd )
 8007aa0:	6809      	ldr	r1, [r1, #0]
 8007aa2:	42a9      	cmp	r1, r5
 8007aa4:	d038      	beq.n	8007b18 <pvPortMalloc+0x100>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007aa6:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007aa8:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007aac:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007aae:	1ac2      	subs	r2, r0, r3
 8007ab0:	2a10      	cmp	r2, #16
 8007ab2:	d914      	bls.n	8007ade <pvPortMalloc+0xc6>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8007ab4:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007ab6:	0741      	lsls	r1, r0, #29
 8007ab8:	d00d      	beq.n	8007ad6 <pvPortMalloc+0xbe>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007aba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007abe:	b672      	cpsid	i
 8007ac0:	f383 8811 	msr	BASEPRI, r3
 8007ac4:	f3bf 8f6f 	isb	sy
 8007ac8:	f3bf 8f4f 	dsb	sy
 8007acc:	b662      	cpsie	i
 8007ace:	e7fe      	b.n	8007ace <pvPortMalloc+0xb6>
 8007ad0:	462a      	mov	r2, r5
 8007ad2:	4665      	mov	r5, ip
 8007ad4:	e7dc      	b.n	8007a90 <pvPortMalloc+0x78>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007ad6:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007ad8:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007ada:	f7ff ff77 	bl	80079cc <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007ade:	686a      	ldr	r2, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8007ae0:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007ae2:	4916      	ldr	r1, [pc, #88]	@ (8007b3c <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007ae4:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007ae6:	4316      	orrs	r6, r2
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007ae8:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007aea:	603c      	str	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007aec:	4284      	cmp	r4, r0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007aee:	606e      	str	r6, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8007af0:	602b      	str	r3, [r5, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007af2:	bf38      	it	cc
 8007af4:	600c      	strcc	r4, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007af6:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 8007afa:	f001 fa5b 	bl	8008fb4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007afe:	0763      	lsls	r3, r4, #29
 8007b00:	d00c      	beq.n	8007b1c <pvPortMalloc+0x104>
 8007b02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b06:	b672      	cpsid	i
 8007b08:	f383 8811 	msr	BASEPRI, r3
 8007b0c:	f3bf 8f6f 	isb	sy
 8007b10:	f3bf 8f4f 	dsb	sy
 8007b14:	b662      	cpsie	i
 8007b16:	e7fe      	b.n	8007b16 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8007b18:	2400      	movs	r4, #0
 8007b1a:	e7ee      	b.n	8007afa <pvPortMalloc+0xe2>
}
 8007b1c:	4620      	mov	r0, r4
 8007b1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007b22:	bf00      	nop
 8007b24:	20003ff4 	.word	0x20003ff4
 8007b28:	20003fe8 	.word	0x20003fe8
 8007b2c:	20004000 	.word	0x20004000
 8007b30:	20003ff8 	.word	0x20003ff8
 8007b34:	200164f8 	.word	0x200164f8
 8007b38:	000124f8 	.word	0x000124f8
 8007b3c:	20003fec 	.word	0x20003fec
 8007b40:	20003ff0 	.word	0x20003ff0

08007b44 <vPortFree>:
{
 8007b44:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007b46:	4604      	mov	r4, r0
 8007b48:	2800      	cmp	r0, #0
 8007b4a:	d032      	beq.n	8007bb2 <vPortFree+0x6e>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007b4c:	4a19      	ldr	r2, [pc, #100]	@ (8007bb4 <vPortFree+0x70>)
 8007b4e:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007b52:	6812      	ldr	r2, [r2, #0]
 8007b54:	4213      	tst	r3, r2
 8007b56:	d10a      	bne.n	8007b6e <vPortFree+0x2a>
 8007b58:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b5c:	b672      	cpsid	i
 8007b5e:	f383 8811 	msr	BASEPRI, r3
 8007b62:	f3bf 8f6f 	isb	sy
 8007b66:	f3bf 8f4f 	dsb	sy
 8007b6a:	b662      	cpsie	i
 8007b6c:	e7fe      	b.n	8007b6c <vPortFree+0x28>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007b6e:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007b72:	b151      	cbz	r1, 8007b8a <vPortFree+0x46>
 8007b74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b78:	b672      	cpsid	i
 8007b7a:	f383 8811 	msr	BASEPRI, r3
 8007b7e:	f3bf 8f6f 	isb	sy
 8007b82:	f3bf 8f4f 	dsb	sy
 8007b86:	b662      	cpsie	i
 8007b88:	e7fe      	b.n	8007b88 <vPortFree+0x44>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007b8a:	ea23 0302 	bic.w	r3, r3, r2
 8007b8e:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8007b92:	f001 f969 	bl	8008e68 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007b96:	4a08      	ldr	r2, [pc, #32]	@ (8007bb8 <vPortFree+0x74>)
 8007b98:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007b9c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007ba0:	6811      	ldr	r1, [r2, #0]
 8007ba2:	440b      	add	r3, r1
 8007ba4:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007ba6:	f7ff ff11 	bl	80079cc <prvInsertBlockIntoFreeList>
}
 8007baa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8007bae:	f001 ba01 	b.w	8008fb4 <xTaskResumeAll>
}
 8007bb2:	bd10      	pop	{r4, pc}
 8007bb4:	20003fe8 	.word	0x20003fe8
 8007bb8:	20003ff0 	.word	0x20003ff0

08007bbc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007bbc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007bc0:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007bc4:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007bc6:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007bc8:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007bcc:	2300      	movs	r3, #0
 8007bce:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007bd0:	4770      	bx	lr

08007bd2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8007bd2:	2300      	movs	r3, #0
 8007bd4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8007bd6:	4770      	bx	lr

08007bd8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007bd8:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007bda:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 8007bdc:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007bde:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007be0:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007be2:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007be4:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007be6:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007be8:	3301      	adds	r3, #1
 8007bea:	6003      	str	r3, [r0, #0]
}
 8007bec:	4770      	bx	lr

08007bee <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8007bee:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007bf0:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007bf2:	1c63      	adds	r3, r4, #1
 8007bf4:	d10a      	bne.n	8007c0c <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007bf6:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007bf8:	685a      	ldr	r2, [r3, #4]
 8007bfa:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007bfc:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007bfe:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007c00:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007c02:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007c04:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007c06:	3301      	adds	r3, #1
 8007c08:	6003      	str	r3, [r0, #0]
}
 8007c0a:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007c0c:	f100 0208 	add.w	r2, r0, #8
 8007c10:	4613      	mov	r3, r2
 8007c12:	6852      	ldr	r2, [r2, #4]
 8007c14:	6815      	ldr	r5, [r2, #0]
 8007c16:	42a5      	cmp	r5, r4
 8007c18:	d9fa      	bls.n	8007c10 <vListInsert+0x22>
 8007c1a:	e7ed      	b.n	8007bf8 <vListInsert+0xa>

08007c1c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 8007c1c:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007c1e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8007c22:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007c24:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007c26:	6859      	ldr	r1, [r3, #4]
 8007c28:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007c2a:	bf08      	it	eq
 8007c2c:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007c2e:	2200      	movs	r2, #0
 8007c30:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007c32:	681a      	ldr	r2, [r3, #0]
 8007c34:	3a01      	subs	r2, #1
 8007c36:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007c38:	6818      	ldr	r0, [r3, #0]
}
 8007c3a:	4770      	bx	lr

08007c3c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007c3c:	4808      	ldr	r0, [pc, #32]	@ (8007c60 <prvPortStartFirstTask+0x24>)
 8007c3e:	6800      	ldr	r0, [r0, #0]
 8007c40:	6800      	ldr	r0, [r0, #0]
 8007c42:	f380 8808 	msr	MSP, r0
 8007c46:	f04f 0000 	mov.w	r0, #0
 8007c4a:	f380 8814 	msr	CONTROL, r0
 8007c4e:	b662      	cpsie	i
 8007c50:	b661      	cpsie	f
 8007c52:	f3bf 8f4f 	dsb	sy
 8007c56:	f3bf 8f6f 	isb	sy
 8007c5a:	df00      	svc	0
 8007c5c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007c5e:	0000      	.short	0x0000
 8007c60:	e000ed08 	.word	0xe000ed08

08007c64 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007c64:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8007c74 <vPortEnableVFP+0x10>
 8007c68:	6801      	ldr	r1, [r0, #0]
 8007c6a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8007c6e:	6001      	str	r1, [r0, #0]
 8007c70:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8007c72:	0000      	.short	0x0000
 8007c74:	e000ed88 	.word	0xe000ed88

08007c78 <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
 8007c78:	2300      	movs	r3, #0
{
 8007c7a:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007c7c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8007c7e:	4b0f      	ldr	r3, [pc, #60]	@ (8007cbc <prvTaskExitError+0x44>)
 8007c80:	681b      	ldr	r3, [r3, #0]
 8007c82:	3301      	adds	r3, #1
 8007c84:	d00a      	beq.n	8007c9c <prvTaskExitError+0x24>
 8007c86:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c8a:	b672      	cpsid	i
 8007c8c:	f383 8811 	msr	BASEPRI, r3
 8007c90:	f3bf 8f6f 	isb	sy
 8007c94:	f3bf 8f4f 	dsb	sy
 8007c98:	b662      	cpsie	i
 8007c9a:	e7fe      	b.n	8007c9a <prvTaskExitError+0x22>
 8007c9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ca0:	b672      	cpsid	i
 8007ca2:	f383 8811 	msr	BASEPRI, r3
 8007ca6:	f3bf 8f6f 	isb	sy
 8007caa:	f3bf 8f4f 	dsb	sy
 8007cae:	b662      	cpsie	i
	while( ulDummy == 0 )
 8007cb0:	9b01      	ldr	r3, [sp, #4]
 8007cb2:	2b00      	cmp	r3, #0
 8007cb4:	d0fc      	beq.n	8007cb0 <prvTaskExitError+0x38>
}
 8007cb6:	b002      	add	sp, #8
 8007cb8:	4770      	bx	lr
 8007cba:	bf00      	nop
 8007cbc:	20000040 	.word	0x20000040

08007cc0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007cc0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007cc4:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8007cc8:	f840 2c20 	str.w	r2, [r0, #-32]
}
 8007ccc:	3844      	subs	r0, #68	@ 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007cce:	6403      	str	r3, [r0, #64]	@ 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007cd0:	4b03      	ldr	r3, [pc, #12]	@ (8007ce0 <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007cd2:	63c1      	str	r1, [r0, #60]	@ 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007cd4:	6383      	str	r3, [r0, #56]	@ 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007cd6:	f06f 0302 	mvn.w	r3, #2
 8007cda:	6203      	str	r3, [r0, #32]
}
 8007cdc:	4770      	bx	lr
 8007cde:	bf00      	nop
 8007ce0:	08007c79 	.word	0x08007c79
	...

08007cf0 <SVC_Handler>:
	__asm volatile (
 8007cf0:	4b07      	ldr	r3, [pc, #28]	@ (8007d10 <pxCurrentTCBConst2>)
 8007cf2:	6819      	ldr	r1, [r3, #0]
 8007cf4:	6808      	ldr	r0, [r1, #0]
 8007cf6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007cfa:	f380 8809 	msr	PSP, r0
 8007cfe:	f3bf 8f6f 	isb	sy
 8007d02:	f04f 0000 	mov.w	r0, #0
 8007d06:	f380 8811 	msr	BASEPRI, r0
 8007d0a:	4770      	bx	lr
 8007d0c:	f3af 8000 	nop.w

08007d10 <pxCurrentTCBConst2>:
 8007d10:	20016a38 	.word	0x20016a38

08007d14 <vPortEnterCritical>:
 8007d14:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d18:	b672      	cpsid	i
 8007d1a:	f383 8811 	msr	BASEPRI, r3
 8007d1e:	f3bf 8f6f 	isb	sy
 8007d22:	f3bf 8f4f 	dsb	sy
 8007d26:	b662      	cpsie	i
	uxCriticalNesting++;
 8007d28:	4a0b      	ldr	r2, [pc, #44]	@ (8007d58 <vPortEnterCritical+0x44>)
 8007d2a:	6813      	ldr	r3, [r2, #0]
 8007d2c:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8007d2e:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8007d30:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8007d32:	d110      	bne.n	8007d56 <vPortEnterCritical+0x42>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007d34:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007d38:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8007d3c:	b2db      	uxtb	r3, r3
 8007d3e:	b153      	cbz	r3, 8007d56 <vPortEnterCritical+0x42>
 8007d40:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d44:	b672      	cpsid	i
 8007d46:	f383 8811 	msr	BASEPRI, r3
 8007d4a:	f3bf 8f6f 	isb	sy
 8007d4e:	f3bf 8f4f 	dsb	sy
 8007d52:	b662      	cpsie	i
 8007d54:	e7fe      	b.n	8007d54 <vPortEnterCritical+0x40>
}
 8007d56:	4770      	bx	lr
 8007d58:	20000040 	.word	0x20000040

08007d5c <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007d5c:	4a09      	ldr	r2, [pc, #36]	@ (8007d84 <vPortExitCritical+0x28>)
 8007d5e:	6813      	ldr	r3, [r2, #0]
 8007d60:	b953      	cbnz	r3, 8007d78 <vPortExitCritical+0x1c>
 8007d62:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d66:	b672      	cpsid	i
 8007d68:	f383 8811 	msr	BASEPRI, r3
 8007d6c:	f3bf 8f6f 	isb	sy
 8007d70:	f3bf 8f4f 	dsb	sy
 8007d74:	b662      	cpsie	i
 8007d76:	e7fe      	b.n	8007d76 <vPortExitCritical+0x1a>
	uxCriticalNesting--;
 8007d78:	3b01      	subs	r3, #1
 8007d7a:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007d7c:	b90b      	cbnz	r3, 8007d82 <vPortExitCritical+0x26>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007d7e:	f383 8811 	msr	BASEPRI, r3
}
 8007d82:	4770      	bx	lr
 8007d84:	20000040 	.word	0x20000040
	...

08007d90 <PendSV_Handler>:
	__asm volatile
 8007d90:	f3ef 8009 	mrs	r0, PSP
 8007d94:	f3bf 8f6f 	isb	sy
 8007d98:	4b15      	ldr	r3, [pc, #84]	@ (8007df0 <pxCurrentTCBConst>)
 8007d9a:	681a      	ldr	r2, [r3, #0]
 8007d9c:	f01e 0f10 	tst.w	lr, #16
 8007da0:	bf08      	it	eq
 8007da2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007da6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007daa:	6010      	str	r0, [r2, #0]
 8007dac:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007db0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8007db4:	b672      	cpsid	i
 8007db6:	f380 8811 	msr	BASEPRI, r0
 8007dba:	f3bf 8f4f 	dsb	sy
 8007dbe:	f3bf 8f6f 	isb	sy
 8007dc2:	b662      	cpsie	i
 8007dc4:	f001 fa00 	bl	80091c8 <vTaskSwitchContext>
 8007dc8:	f04f 0000 	mov.w	r0, #0
 8007dcc:	f380 8811 	msr	BASEPRI, r0
 8007dd0:	bc09      	pop	{r0, r3}
 8007dd2:	6819      	ldr	r1, [r3, #0]
 8007dd4:	6808      	ldr	r0, [r1, #0]
 8007dd6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007dda:	f01e 0f10 	tst.w	lr, #16
 8007dde:	bf08      	it	eq
 8007de0:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007de4:	f380 8809 	msr	PSP, r0
 8007de8:	f3bf 8f6f 	isb	sy
 8007dec:	4770      	bx	lr
 8007dee:	bf00      	nop

08007df0 <pxCurrentTCBConst>:
 8007df0:	20016a38 	.word	0x20016a38

08007df4 <SysTick_Handler>:
{
 8007df4:	b508      	push	{r3, lr}
	__asm volatile
 8007df6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007dfa:	b672      	cpsid	i
 8007dfc:	f383 8811 	msr	BASEPRI, r3
 8007e00:	f3bf 8f6f 	isb	sy
 8007e04:	f3bf 8f4f 	dsb	sy
 8007e08:	b662      	cpsie	i
		if( xTaskIncrementTick() != pdFALSE )
 8007e0a:	f001 f83b 	bl	8008e84 <xTaskIncrementTick>
 8007e0e:	b128      	cbz	r0, 8007e1c <SysTick_Handler+0x28>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8007e10:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007e14:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007e18:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8007e1c:	2300      	movs	r3, #0
 8007e1e:	f383 8811 	msr	BASEPRI, r3
}
 8007e22:	bd08      	pop	{r3, pc}

08007e24 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007e24:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8007e28:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8007e2a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007e2e:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007e30:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8007e32:	4b04      	ldr	r3, [pc, #16]	@ (8007e44 <vPortSetupTimerInterrupt+0x20>)
 8007e34:	681b      	ldr	r3, [r3, #0]
 8007e36:	fbb3 f3f1 	udiv	r3, r3, r1
 8007e3a:	3b01      	subs	r3, #1
 8007e3c:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8007e3e:	2307      	movs	r3, #7
 8007e40:	6113      	str	r3, [r2, #16]
}
 8007e42:	4770      	bx	lr
 8007e44:	2000000c 	.word	0x2000000c

08007e48 <xPortStartScheduler>:
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007e48:	4b2c      	ldr	r3, [pc, #176]	@ (8007efc <xPortStartScheduler+0xb4>)
{
 8007e4a:	b537      	push	{r0, r1, r2, r4, r5, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007e4c:	781a      	ldrb	r2, [r3, #0]
 8007e4e:	b2d2      	uxtb	r2, r2
 8007e50:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007e52:	22ff      	movs	r2, #255	@ 0xff
 8007e54:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007e56:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007e58:	4a29      	ldr	r2, [pc, #164]	@ (8007f00 <xPortStartScheduler+0xb8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007e5a:	b2db      	uxtb	r3, r3
 8007e5c:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007e60:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007e64:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8007e68:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007e6a:	2307      	movs	r3, #7
 8007e6c:	4a25      	ldr	r2, [pc, #148]	@ (8007f04 <xPortStartScheduler+0xbc>)
 8007e6e:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007e70:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 8007e74:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007e76:	0609      	lsls	r1, r1, #24
 8007e78:	d40c      	bmi.n	8007e94 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007e7a:	2b03      	cmp	r3, #3
 8007e7c:	d013      	beq.n	8007ea6 <xPortStartScheduler+0x5e>
	__asm volatile
 8007e7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e82:	b672      	cpsid	i
 8007e84:	f383 8811 	msr	BASEPRI, r3
 8007e88:	f3bf 8f6f 	isb	sy
 8007e8c:	f3bf 8f4f 	dsb	sy
 8007e90:	b662      	cpsie	i
 8007e92:	e7fe      	b.n	8007e92 <xPortStartScheduler+0x4a>
			ulMaxPRIGROUPValue--;
 8007e94:	3b01      	subs	r3, #1
 8007e96:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007e98:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007e9c:	005b      	lsls	r3, r3, #1
 8007e9e:	b2db      	uxtb	r3, r3
 8007ea0:	f88d 3003 	strb.w	r3, [sp, #3]
 8007ea4:	e7e4      	b.n	8007e70 <xPortStartScheduler+0x28>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007ea6:	f44f 7340 	mov.w	r3, #768	@ 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007eaa:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
	uxCriticalNesting = 0;
 8007eae:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007eb0:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007eb2:	9b01      	ldr	r3, [sp, #4]
 8007eb4:	4a11      	ldr	r2, [pc, #68]	@ (8007efc <xPortStartScheduler+0xb4>)
 8007eb6:	b2db      	uxtb	r3, r3
 8007eb8:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007eba:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007ebe:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8007ec2:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007ec6:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007eca:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8007ece:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8007ed2:	f7ff ffa7 	bl	8007e24 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007ed6:	4b0c      	ldr	r3, [pc, #48]	@ (8007f08 <xPortStartScheduler+0xc0>)
 8007ed8:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007eda:	f7ff fec3 	bl	8007c64 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007ede:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8007ee2:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8007ee6:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 8007eea:	f7ff fea7 	bl	8007c3c <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007eee:	f001 f96b 	bl	80091c8 <vTaskSwitchContext>
}
 8007ef2:	4628      	mov	r0, r5
	prvTaskExitError();
 8007ef4:	f7ff fec0 	bl	8007c78 <prvTaskExitError>
}
 8007ef8:	b003      	add	sp, #12
 8007efa:	bd30      	pop	{r4, r5, pc}
 8007efc:	e000e400 	.word	0xe000e400
 8007f00:	200164fc 	.word	0x200164fc
 8007f04:	200164f8 	.word	0x200164f8
 8007f08:	20000040 	.word	0x20000040

08007f0c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007f0c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007f10:	2b0f      	cmp	r3, #15
 8007f12:	d910      	bls.n	8007f36 <vPortValidateInterruptPriority+0x2a>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007f14:	4a13      	ldr	r2, [pc, #76]	@ (8007f64 <vPortValidateInterruptPriority+0x58>)
 8007f16:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007f18:	4a13      	ldr	r2, [pc, #76]	@ (8007f68 <vPortValidateInterruptPriority+0x5c>)
 8007f1a:	7812      	ldrb	r2, [r2, #0]
 8007f1c:	429a      	cmp	r2, r3
 8007f1e:	d90a      	bls.n	8007f36 <vPortValidateInterruptPriority+0x2a>
 8007f20:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f24:	b672      	cpsid	i
 8007f26:	f383 8811 	msr	BASEPRI, r3
 8007f2a:	f3bf 8f6f 	isb	sy
 8007f2e:	f3bf 8f4f 	dsb	sy
 8007f32:	b662      	cpsie	i
 8007f34:	e7fe      	b.n	8007f34 <vPortValidateInterruptPriority+0x28>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007f36:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007f3a:	4a0c      	ldr	r2, [pc, #48]	@ (8007f6c <vPortValidateInterruptPriority+0x60>)
 8007f3c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8007f40:	6812      	ldr	r2, [r2, #0]
 8007f42:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8007f46:	4293      	cmp	r3, r2
 8007f48:	d90a      	bls.n	8007f60 <vPortValidateInterruptPriority+0x54>
 8007f4a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f4e:	b672      	cpsid	i
 8007f50:	f383 8811 	msr	BASEPRI, r3
 8007f54:	f3bf 8f6f 	isb	sy
 8007f58:	f3bf 8f4f 	dsb	sy
 8007f5c:	b662      	cpsie	i
 8007f5e:	e7fe      	b.n	8007f5e <vPortValidateInterruptPriority+0x52>
	}
 8007f60:	4770      	bx	lr
 8007f62:	bf00      	nop
 8007f64:	e000e3f0 	.word	0xe000e3f0
 8007f68:	200164fc 	.word	0x200164fc
 8007f6c:	200164f8 	.word	0x200164f8

08007f70 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007f70:	b510      	push	{r4, lr}
 8007f72:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007f74:	f7ff fece 	bl	8007d14 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007f78:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007f7a:	f7ff feef 	bl	8007d5c <vPortExitCritical>

	return xReturn;
}
 8007f7e:	fab4 f084 	clz	r0, r4
 8007f82:	0940      	lsrs	r0, r0, #5
 8007f84:	bd10      	pop	{r4, pc}

08007f86 <prvCopyDataToQueue>:
{
 8007f86:	b570      	push	{r4, r5, r6, lr}
 8007f88:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007f8a:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
 8007f8c:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007f8e:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007f90:	b942      	cbnz	r2, 8007fa4 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007f92:	6806      	ldr	r6, [r0, #0]
 8007f94:	b99e      	cbnz	r6, 8007fbe <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007f96:	6880      	ldr	r0, [r0, #8]
 8007f98:	f001 fa82 	bl	80094a0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007f9c:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007f9e:	3501      	adds	r5, #1
 8007fa0:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8007fa2:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007fa4:	b96e      	cbnz	r6, 8007fc2 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007fa6:	6840      	ldr	r0, [r0, #4]
 8007fa8:	f01a f8a5 	bl	80220f6 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007fac:	6863      	ldr	r3, [r4, #4]
 8007fae:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007fb0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007fb2:	68a2      	ldr	r2, [r4, #8]
 8007fb4:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007fb6:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007fb8:	bf24      	itt	cs
 8007fba:	6823      	ldrcs	r3, [r4, #0]
 8007fbc:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8007fbe:	2000      	movs	r0, #0
 8007fc0:	e7ed      	b.n	8007f9e <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007fc2:	68c0      	ldr	r0, [r0, #12]
 8007fc4:	f01a f897 	bl	80220f6 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007fc8:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007fca:	68e3      	ldr	r3, [r4, #12]
 8007fcc:	4251      	negs	r1, r2
 8007fce:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007fd0:	6822      	ldr	r2, [r4, #0]
 8007fd2:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007fd4:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007fd6:	bf3e      	ittt	cc
 8007fd8:	68a3      	ldrcc	r3, [r4, #8]
 8007fda:	185b      	addcc	r3, r3, r1
 8007fdc:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007fde:	2e02      	cmp	r6, #2
 8007fe0:	d1ed      	bne.n	8007fbe <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007fe2:	b10d      	cbz	r5, 8007fe8 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007fe4:	3d01      	subs	r5, #1
 8007fe6:	e7ea      	b.n	8007fbe <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8007fe8:	4628      	mov	r0, r5
 8007fea:	e7d8      	b.n	8007f9e <prvCopyDataToQueue+0x18>

08007fec <prvCopyDataFromQueue>:
{
 8007fec:	4603      	mov	r3, r0
 8007fee:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007ff0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8007ff2:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007ff4:	b162      	cbz	r2, 8008010 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ff6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007ff8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ffa:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007ffc:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ffe:	60dc      	str	r4, [r3, #12]
}
 8008000:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008004:	bf24      	itt	cs
 8008006:	6819      	ldrcs	r1, [r3, #0]
 8008008:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800800a:	68d9      	ldr	r1, [r3, #12]
 800800c:	f01a b873 	b.w	80220f6 <memcpy>
}
 8008010:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008014:	4770      	bx	lr

08008016 <prvUnlockQueue>:
{
 8008016:	b570      	push	{r4, r5, r6, lr}
 8008018:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800801a:	f7ff fe7b 	bl	8007d14 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800801e:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008022:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008026:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008028:	2d00      	cmp	r5, #0
 800802a:	dc14      	bgt.n	8008056 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800802c:	23ff      	movs	r3, #255	@ 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800802e:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 8008032:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8008036:	f7ff fe91 	bl	8007d5c <vPortExitCritical>
	taskENTER_CRITICAL();
 800803a:	f7ff fe6b 	bl	8007d14 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800803e:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
 8008042:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008044:	2d00      	cmp	r5, #0
 8008046:	dc12      	bgt.n	800806e <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008048:	23ff      	movs	r3, #255	@ 0xff
 800804a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800804e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008052:	f7ff be83 	b.w	8007d5c <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008056:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008058:	2b00      	cmp	r3, #0
 800805a:	d0e7      	beq.n	800802c <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800805c:	4630      	mov	r0, r6
 800805e:	f001 f935 	bl	80092cc <xTaskRemoveFromEventList>
 8008062:	b108      	cbz	r0, 8008068 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008064:	f001 f9c2 	bl	80093ec <vTaskMissedYield>
			--cTxLock;
 8008068:	3d01      	subs	r5, #1
 800806a:	b26d      	sxtb	r5, r5
 800806c:	e7dc      	b.n	8008028 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800806e:	6923      	ldr	r3, [r4, #16]
 8008070:	2b00      	cmp	r3, #0
 8008072:	d0e9      	beq.n	8008048 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008074:	4630      	mov	r0, r6
 8008076:	f001 f929 	bl	80092cc <xTaskRemoveFromEventList>
 800807a:	b108      	cbz	r0, 8008080 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800807c:	f001 f9b6 	bl	80093ec <vTaskMissedYield>
				--cRxLock;
 8008080:	3d01      	subs	r5, #1
 8008082:	b26d      	sxtb	r5, r5
 8008084:	e7de      	b.n	8008044 <prvUnlockQueue+0x2e>

08008086 <xQueueGenericReset>:
{
 8008086:	b538      	push	{r3, r4, r5, lr}
 8008088:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800808a:	4604      	mov	r4, r0
 800808c:	b950      	cbnz	r0, 80080a4 <xQueueGenericReset+0x1e>
 800808e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008092:	b672      	cpsid	i
 8008094:	f383 8811 	msr	BASEPRI, r3
 8008098:	f3bf 8f6f 	isb	sy
 800809c:	f3bf 8f4f 	dsb	sy
 80080a0:	b662      	cpsie	i
 80080a2:	e7fe      	b.n	80080a2 <xQueueGenericReset+0x1c>
	taskENTER_CRITICAL();
 80080a4:	f7ff fe36 	bl	8007d14 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80080a8:	6822      	ldr	r2, [r4, #0]
 80080aa:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80080ae:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80080b0:	434b      	muls	r3, r1
 80080b2:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80080b4:	1a5b      	subs	r3, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80080b6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80080b8:	441a      	add	r2, r3
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80080ba:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 80080bc:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80080be:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80080c0:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80080c2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80080c6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 80080ca:	b9a5      	cbnz	r5, 80080f6 <xQueueGenericReset+0x70>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80080cc:	6923      	ldr	r3, [r4, #16]
 80080ce:	b173      	cbz	r3, 80080ee <xQueueGenericReset+0x68>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80080d0:	f104 0010 	add.w	r0, r4, #16
 80080d4:	f001 f8fa 	bl	80092cc <xTaskRemoveFromEventList>
 80080d8:	b148      	cbz	r0, 80080ee <xQueueGenericReset+0x68>
					queueYIELD_IF_USING_PREEMPTION();
 80080da:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80080de:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80080e2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80080e6:	f3bf 8f4f 	dsb	sy
 80080ea:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 80080ee:	f7ff fe35 	bl	8007d5c <vPortExitCritical>
}
 80080f2:	2001      	movs	r0, #1
 80080f4:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80080f6:	f104 0010 	add.w	r0, r4, #16
 80080fa:	f7ff fd5f 	bl	8007bbc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80080fe:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008102:	f7ff fd5b 	bl	8007bbc <vListInitialise>
 8008106:	e7f2      	b.n	80080ee <xQueueGenericReset+0x68>

08008108 <xQueueGenericCreateStatic.part.0>:
	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType )
 8008108:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800810a:	460d      	mov	r5, r1
		configASSERT( pxStaticQueue != NULL );
 800810c:	461c      	mov	r4, r3
 800810e:	b953      	cbnz	r3, 8008126 <xQueueGenericCreateStatic.part.0+0x1e>
 8008110:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008114:	b672      	cpsid	i
 8008116:	f383 8811 	msr	BASEPRI, r3
 800811a:	f3bf 8f6f 	isb	sy
 800811e:	f3bf 8f4f 	dsb	sy
 8008122:	b662      	cpsie	i
 8008124:	e7fe      	b.n	8008124 <xQueueGenericCreateStatic.part.0+0x1c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008126:	b15a      	cbz	r2, 8008140 <xQueueGenericCreateStatic.part.0+0x38>
 8008128:	b9b1      	cbnz	r1, 8008158 <xQueueGenericCreateStatic.part.0+0x50>
 800812a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800812e:	b672      	cpsid	i
 8008130:	f383 8811 	msr	BASEPRI, r3
 8008134:	f3bf 8f6f 	isb	sy
 8008138:	f3bf 8f4f 	dsb	sy
 800813c:	b662      	cpsie	i
 800813e:	e7fe      	b.n	800813e <xQueueGenericCreateStatic.part.0+0x36>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008140:	b151      	cbz	r1, 8008158 <xQueueGenericCreateStatic.part.0+0x50>
 8008142:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008146:	b672      	cpsid	i
 8008148:	f383 8811 	msr	BASEPRI, r3
 800814c:	f3bf 8f6f 	isb	sy
 8008150:	f3bf 8f4f 	dsb	sy
 8008154:	b662      	cpsie	i
 8008156:	e7fe      	b.n	8008156 <xQueueGenericCreateStatic.part.0+0x4e>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008158:	2350      	movs	r3, #80	@ 0x50
 800815a:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800815c:	9b01      	ldr	r3, [sp, #4]
 800815e:	2b50      	cmp	r3, #80	@ 0x50
 8008160:	d00a      	beq.n	8008178 <xQueueGenericCreateStatic.part.0+0x70>
 8008162:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008166:	b672      	cpsid	i
 8008168:	f383 8811 	msr	BASEPRI, r3
 800816c:	f3bf 8f6f 	isb	sy
 8008170:	f3bf 8f4f 	dsb	sy
 8008174:	b662      	cpsie	i
 8008176:	e7fe      	b.n	8008176 <xQueueGenericCreateStatic.part.0+0x6e>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008178:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800817a:	2d00      	cmp	r5, #0
 800817c:	bf08      	it	eq
 800817e:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8008180:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008182:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008186:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8008188:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800818c:	4620      	mov	r0, r4
 800818e:	f7ff ff7a 	bl	8008086 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008192:	f89d 3018 	ldrb.w	r3, [sp, #24]
	}
 8008196:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8008198:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 800819c:	b003      	add	sp, #12
 800819e:	bd30      	pop	{r4, r5, pc}

080081a0 <xQueueGenericCreateStatic>:
	{
 80081a0:	b410      	push	{r4}
 80081a2:	f89d 4004 	ldrb.w	r4, [sp, #4]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80081a6:	b950      	cbnz	r0, 80081be <xQueueGenericCreateStatic+0x1e>
 80081a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081ac:	b672      	cpsid	i
 80081ae:	f383 8811 	msr	BASEPRI, r3
 80081b2:	f3bf 8f6f 	isb	sy
 80081b6:	f3bf 8f4f 	dsb	sy
 80081ba:	b662      	cpsie	i
 80081bc:	e7fe      	b.n	80081bc <xQueueGenericCreateStatic+0x1c>
 80081be:	9401      	str	r4, [sp, #4]
	}
 80081c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80081c4:	f7ff bfa0 	b.w	8008108 <xQueueGenericCreateStatic.part.0>

080081c8 <xQueueGenericCreate>:
	{
 80081c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80081ca:	460d      	mov	r5, r1
 80081cc:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80081ce:	4606      	mov	r6, r0
 80081d0:	b950      	cbnz	r0, 80081e8 <xQueueGenericCreate+0x20>
 80081d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081d6:	b672      	cpsid	i
 80081d8:	f383 8811 	msr	BASEPRI, r3
 80081dc:	f3bf 8f6f 	isb	sy
 80081e0:	f3bf 8f4f 	dsb	sy
 80081e4:	b662      	cpsie	i
 80081e6:	e7fe      	b.n	80081e6 <xQueueGenericCreate+0x1e>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80081e8:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80081ea:	3050      	adds	r0, #80	@ 0x50
 80081ec:	f7ff fc14 	bl	8007a18 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80081f0:	4604      	mov	r4, r0
 80081f2:	b170      	cbz	r0, 8008212 <xQueueGenericCreate+0x4a>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80081f4:	2300      	movs	r3, #0
 80081f6:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80081fa:	b165      	cbz	r5, 8008216 <xQueueGenericCreate+0x4e>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80081fc:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008200:	2101      	movs	r1, #1
 8008202:	4620      	mov	r0, r4
 8008204:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8008206:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800820a:	f7ff ff3c 	bl	8008086 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800820e:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8008212:	4620      	mov	r0, r4
 8008214:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008216:	4603      	mov	r3, r0
 8008218:	e7f2      	b.n	8008200 <xQueueGenericCreate+0x38>

0800821a <xQueueCreateCountingSemaphoreStatic>:
	{
 800821a:	b513      	push	{r0, r1, r4, lr}
 800821c:	4613      	mov	r3, r2
 800821e:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008220:	b950      	cbnz	r0, 8008238 <xQueueCreateCountingSemaphoreStatic+0x1e>
 8008222:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008226:	b672      	cpsid	i
 8008228:	f383 8811 	msr	BASEPRI, r3
 800822c:	f3bf 8f6f 	isb	sy
 8008230:	f3bf 8f4f 	dsb	sy
 8008234:	b662      	cpsie	i
 8008236:	e7fe      	b.n	8008236 <xQueueCreateCountingSemaphoreStatic+0x1c>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008238:	4288      	cmp	r0, r1
 800823a:	d20a      	bcs.n	8008252 <xQueueCreateCountingSemaphoreStatic+0x38>
 800823c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008240:	b672      	cpsid	i
 8008242:	f383 8811 	msr	BASEPRI, r3
 8008246:	f3bf 8f6f 	isb	sy
 800824a:	f3bf 8f4f 	dsb	sy
 800824e:	b662      	cpsie	i
 8008250:	e7fe      	b.n	8008250 <xQueueCreateCountingSemaphoreStatic+0x36>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008252:	2202      	movs	r2, #2
 8008254:	9200      	str	r2, [sp, #0]
 8008256:	2200      	movs	r2, #0
 8008258:	4611      	mov	r1, r2
 800825a:	f7ff ffa1 	bl	80081a0 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800825e:	b100      	cbz	r0, 8008262 <xQueueCreateCountingSemaphoreStatic+0x48>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008260:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008262:	b002      	add	sp, #8
 8008264:	bd10      	pop	{r4, pc}

08008266 <xQueueCreateCountingSemaphore>:
	{
 8008266:	b510      	push	{r4, lr}
 8008268:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800826a:	b950      	cbnz	r0, 8008282 <xQueueCreateCountingSemaphore+0x1c>
 800826c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008270:	b672      	cpsid	i
 8008272:	f383 8811 	msr	BASEPRI, r3
 8008276:	f3bf 8f6f 	isb	sy
 800827a:	f3bf 8f4f 	dsb	sy
 800827e:	b662      	cpsie	i
 8008280:	e7fe      	b.n	8008280 <xQueueCreateCountingSemaphore+0x1a>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008282:	4288      	cmp	r0, r1
 8008284:	d20a      	bcs.n	800829c <xQueueCreateCountingSemaphore+0x36>
 8008286:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800828a:	b672      	cpsid	i
 800828c:	f383 8811 	msr	BASEPRI, r3
 8008290:	f3bf 8f6f 	isb	sy
 8008294:	f3bf 8f4f 	dsb	sy
 8008298:	b662      	cpsie	i
 800829a:	e7fe      	b.n	800829a <xQueueCreateCountingSemaphore+0x34>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800829c:	2202      	movs	r2, #2
 800829e:	2100      	movs	r1, #0
 80082a0:	f7ff ff92 	bl	80081c8 <xQueueGenericCreate>
		if( xHandle != NULL )
 80082a4:	b100      	cbz	r0, 80082a8 <xQueueCreateCountingSemaphore+0x42>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80082a6:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 80082a8:	bd10      	pop	{r4, pc}

080082aa <xQueueGenericSend>:
{
 80082aa:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80082ae:	460f      	mov	r7, r1
 80082b0:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 80082b2:	4604      	mov	r4, r0
{
 80082b4:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 80082b6:	b950      	cbnz	r0, 80082ce <xQueueGenericSend+0x24>
 80082b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082bc:	b672      	cpsid	i
 80082be:	f383 8811 	msr	BASEPRI, r3
 80082c2:	f3bf 8f6f 	isb	sy
 80082c6:	f3bf 8f4f 	dsb	sy
 80082ca:	b662      	cpsie	i
 80082cc:	e7fe      	b.n	80082cc <xQueueGenericSend+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80082ce:	b961      	cbnz	r1, 80082ea <xQueueGenericSend+0x40>
 80082d0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80082d2:	b153      	cbz	r3, 80082ea <xQueueGenericSend+0x40>
 80082d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082d8:	b672      	cpsid	i
 80082da:	f383 8811 	msr	BASEPRI, r3
 80082de:	f3bf 8f6f 	isb	sy
 80082e2:	f3bf 8f4f 	dsb	sy
 80082e6:	b662      	cpsie	i
 80082e8:	e7fe      	b.n	80082e8 <xQueueGenericSend+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80082ea:	2e02      	cmp	r6, #2
 80082ec:	d10d      	bne.n	800830a <xQueueGenericSend+0x60>
 80082ee:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80082f0:	2b01      	cmp	r3, #1
 80082f2:	d00a      	beq.n	800830a <xQueueGenericSend+0x60>
 80082f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082f8:	b672      	cpsid	i
 80082fa:	f383 8811 	msr	BASEPRI, r3
 80082fe:	f3bf 8f6f 	isb	sy
 8008302:	f3bf 8f4f 	dsb	sy
 8008306:	b662      	cpsie	i
 8008308:	e7fe      	b.n	8008308 <xQueueGenericSend+0x5e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800830a:	f001 f87b 	bl	8009404 <xTaskGetSchedulerState>
 800830e:	4605      	mov	r5, r0
 8008310:	b330      	cbz	r0, 8008360 <xQueueGenericSend+0xb6>
 8008312:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008314:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008318:	f7ff fcfc 	bl	8007d14 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800831c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800831e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008320:	429a      	cmp	r2, r3
 8008322:	d301      	bcc.n	8008328 <xQueueGenericSend+0x7e>
 8008324:	2e02      	cmp	r6, #2
 8008326:	d129      	bne.n	800837c <xQueueGenericSend+0xd2>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008328:	4632      	mov	r2, r6
 800832a:	4639      	mov	r1, r7
 800832c:	4620      	mov	r0, r4
 800832e:	f7ff fe2a 	bl	8007f86 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008332:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008334:	b11b      	cbz	r3, 800833e <xQueueGenericSend+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008336:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800833a:	f000 ffc7 	bl	80092cc <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800833e:	b148      	cbz	r0, 8008354 <xQueueGenericSend+0xaa>
						queueYIELD_IF_USING_PREEMPTION();
 8008340:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008344:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008348:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800834c:	f3bf 8f4f 	dsb	sy
 8008350:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008354:	f7ff fd02 	bl	8007d5c <vPortExitCritical>
				return pdPASS;
 8008358:	2001      	movs	r0, #1
}
 800835a:	b004      	add	sp, #16
 800835c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008360:	9b01      	ldr	r3, [sp, #4]
 8008362:	2b00      	cmp	r3, #0
 8008364:	d0d6      	beq.n	8008314 <xQueueGenericSend+0x6a>
 8008366:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800836a:	b672      	cpsid	i
 800836c:	f383 8811 	msr	BASEPRI, r3
 8008370:	f3bf 8f6f 	isb	sy
 8008374:	f3bf 8f4f 	dsb	sy
 8008378:	b662      	cpsie	i
 800837a:	e7fe      	b.n	800837a <xQueueGenericSend+0xd0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800837c:	9b01      	ldr	r3, [sp, #4]
 800837e:	b91b      	cbnz	r3, 8008388 <xQueueGenericSend+0xde>
					taskEXIT_CRITICAL();
 8008380:	f7ff fcec 	bl	8007d5c <vPortExitCritical>
					return errQUEUE_FULL;
 8008384:	2000      	movs	r0, #0
 8008386:	e7e8      	b.n	800835a <xQueueGenericSend+0xb0>
				else if( xEntryTimeSet == pdFALSE )
 8008388:	b915      	cbnz	r5, 8008390 <xQueueGenericSend+0xe6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800838a:	a802      	add	r0, sp, #8
 800838c:	f000 ffe2 	bl	8009354 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008390:	f7ff fce4 	bl	8007d5c <vPortExitCritical>
		vTaskSuspendAll();
 8008394:	f000 fd68 	bl	8008e68 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008398:	f7ff fcbc 	bl	8007d14 <vPortEnterCritical>
 800839c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80083a0:	2bff      	cmp	r3, #255	@ 0xff
 80083a2:	d101      	bne.n	80083a8 <xQueueGenericSend+0xfe>
 80083a4:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
 80083a8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80083ac:	2bff      	cmp	r3, #255	@ 0xff
 80083ae:	d101      	bne.n	80083b4 <xQueueGenericSend+0x10a>
 80083b0:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
 80083b4:	f7ff fcd2 	bl	8007d5c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80083b8:	a901      	add	r1, sp, #4
 80083ba:	a802      	add	r0, sp, #8
 80083bc:	f000 ffd6 	bl	800936c <xTaskCheckForTimeOut>
 80083c0:	bb38      	cbnz	r0, 8008412 <xQueueGenericSend+0x168>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80083c2:	f7ff fca7 	bl	8007d14 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80083c6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80083c8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80083ca:	429a      	cmp	r2, r3
 80083cc:	d10e      	bne.n	80083ec <xQueueGenericSend+0x142>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80083ce:	f7ff fcc5 	bl	8007d5c <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80083d2:	9901      	ldr	r1, [sp, #4]
 80083d4:	f104 0010 	add.w	r0, r4, #16
 80083d8:	f000 ff3c 	bl	8009254 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80083dc:	4620      	mov	r0, r4
 80083de:	f7ff fe1a 	bl	8008016 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80083e2:	f000 fde7 	bl	8008fb4 <xTaskResumeAll>
 80083e6:	b148      	cbz	r0, 80083fc <xQueueGenericSend+0x152>
 80083e8:	2501      	movs	r5, #1
 80083ea:	e795      	b.n	8008318 <xQueueGenericSend+0x6e>
	taskEXIT_CRITICAL();
 80083ec:	f7ff fcb6 	bl	8007d5c <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80083f0:	4620      	mov	r0, r4
 80083f2:	f7ff fe10 	bl	8008016 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80083f6:	f000 fddd 	bl	8008fb4 <xTaskResumeAll>
 80083fa:	e7f5      	b.n	80083e8 <xQueueGenericSend+0x13e>
					portYIELD_WITHIN_API();
 80083fc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008400:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008404:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008408:	f3bf 8f4f 	dsb	sy
 800840c:	f3bf 8f6f 	isb	sy
 8008410:	e7ea      	b.n	80083e8 <xQueueGenericSend+0x13e>
			prvUnlockQueue( pxQueue );
 8008412:	4620      	mov	r0, r4
 8008414:	f7ff fdff 	bl	8008016 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008418:	f000 fdcc 	bl	8008fb4 <xTaskResumeAll>
			return errQUEUE_FULL;
 800841c:	e7b2      	b.n	8008384 <xQueueGenericSend+0xda>

0800841e <xQueueCreateMutexStatic>:
		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueType );
 800841e:	2200      	movs	r2, #0
	{
 8008420:	460b      	mov	r3, r1
 8008422:	b513      	push	{r0, r1, r4, lr}
 8008424:	4611      	mov	r1, r2
 8008426:	9000      	str	r0, [sp, #0]
 8008428:	2001      	movs	r0, #1
 800842a:	f7ff fe6d 	bl	8008108 <xQueueGenericCreateStatic.part.0>
		if( pxNewQueue != NULL )
 800842e:	4604      	mov	r4, r0
 8008430:	b138      	cbz	r0, 8008442 <xQueueCreateMutexStatic+0x24>
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 8008432:	2300      	movs	r3, #0
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 8008434:	461a      	mov	r2, r3
 8008436:	4619      	mov	r1, r3
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 8008438:	6083      	str	r3, [r0, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 800843a:	6003      	str	r3, [r0, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 800843c:	60c3      	str	r3, [r0, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 800843e:	f7ff ff34 	bl	80082aa <xQueueGenericSend>
	}
 8008442:	4620      	mov	r0, r4
 8008444:	b002      	add	sp, #8
 8008446:	bd10      	pop	{r4, pc}

08008448 <xQueueGiveMutexRecursive>:
	{
 8008448:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
 800844a:	4604      	mov	r4, r0
 800844c:	b950      	cbnz	r0, 8008464 <xQueueGiveMutexRecursive+0x1c>
 800844e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008452:	b672      	cpsid	i
 8008454:	f383 8811 	msr	BASEPRI, r3
 8008458:	f3bf 8f6f 	isb	sy
 800845c:	f3bf 8f4f 	dsb	sy
 8008460:	b662      	cpsie	i
 8008462:	e7fe      	b.n	8008462 <xQueueGiveMutexRecursive+0x1a>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 8008464:	6885      	ldr	r5, [r0, #8]
 8008466:	f000 ffc7 	bl	80093f8 <xTaskGetCurrentTaskHandle>
 800846a:	4285      	cmp	r5, r0
 800846c:	d10b      	bne.n	8008486 <xQueueGiveMutexRecursive+0x3e>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 800846e:	68e3      	ldr	r3, [r4, #12]
 8008470:	3b01      	subs	r3, #1
 8008472:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 8008474:	b10b      	cbz	r3, 800847a <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
 8008476:	2001      	movs	r0, #1
	}
 8008478:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 800847a:	461a      	mov	r2, r3
 800847c:	4619      	mov	r1, r3
 800847e:	4620      	mov	r0, r4
 8008480:	f7ff ff13 	bl	80082aa <xQueueGenericSend>
 8008484:	e7f7      	b.n	8008476 <xQueueGiveMutexRecursive+0x2e>
			xReturn = pdFAIL;
 8008486:	2000      	movs	r0, #0
		return xReturn;
 8008488:	e7f6      	b.n	8008478 <xQueueGiveMutexRecursive+0x30>

0800848a <xQueueCreateMutex>:
	{
 800848a:	b570      	push	{r4, r5, r6, lr}
 800848c:	4606      	mov	r6, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800848e:	2050      	movs	r0, #80	@ 0x50
 8008490:	f7ff fac2 	bl	8007a18 <pvPortMalloc>
 8008494:	4604      	mov	r4, r0
		if( pxNewQueue != NULL )
 8008496:	b198      	cbz	r0, 80084c0 <xQueueCreateMutex+0x36>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008498:	2500      	movs	r5, #0
	pxNewQueue->uxLength = uxQueueLength;
 800849a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800849c:	6000      	str	r0, [r0, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800849e:	f880 5046 	strb.w	r5, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
 80084a2:	e9c0 150f 	strd	r1, r5, [r0, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80084a6:	f7ff fdee 	bl	8008086 <xQueueGenericReset>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 80084aa:	462b      	mov	r3, r5
 80084ac:	462a      	mov	r2, r5
 80084ae:	4629      	mov	r1, r5
 80084b0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 80084b2:	f884 604c 	strb.w	r6, [r4, #76]	@ 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 80084b6:	60a5      	str	r5, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 80084b8:	6025      	str	r5, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 80084ba:	60e5      	str	r5, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 80084bc:	f7ff fef5 	bl	80082aa <xQueueGenericSend>
	}
 80084c0:	4620      	mov	r0, r4
 80084c2:	bd70      	pop	{r4, r5, r6, pc}

080084c4 <xQueueGenericSendFromISR>:
{
 80084c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80084c8:	4689      	mov	r9, r1
 80084ca:	4617      	mov	r7, r2
 80084cc:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 80084ce:	4604      	mov	r4, r0
 80084d0:	b950      	cbnz	r0, 80084e8 <xQueueGenericSendFromISR+0x24>
 80084d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80084d6:	b672      	cpsid	i
 80084d8:	f383 8811 	msr	BASEPRI, r3
 80084dc:	f3bf 8f6f 	isb	sy
 80084e0:	f3bf 8f4f 	dsb	sy
 80084e4:	b662      	cpsie	i
 80084e6:	e7fe      	b.n	80084e6 <xQueueGenericSendFromISR+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80084e8:	b961      	cbnz	r1, 8008504 <xQueueGenericSendFromISR+0x40>
 80084ea:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80084ec:	b153      	cbz	r3, 8008504 <xQueueGenericSendFromISR+0x40>
 80084ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80084f2:	b672      	cpsid	i
 80084f4:	f383 8811 	msr	BASEPRI, r3
 80084f8:	f3bf 8f6f 	isb	sy
 80084fc:	f3bf 8f4f 	dsb	sy
 8008500:	b662      	cpsie	i
 8008502:	e7fe      	b.n	8008502 <xQueueGenericSendFromISR+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008504:	2e02      	cmp	r6, #2
 8008506:	d10d      	bne.n	8008524 <xQueueGenericSendFromISR+0x60>
 8008508:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800850a:	2b01      	cmp	r3, #1
 800850c:	d00a      	beq.n	8008524 <xQueueGenericSendFromISR+0x60>
 800850e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008512:	b672      	cpsid	i
 8008514:	f383 8811 	msr	BASEPRI, r3
 8008518:	f3bf 8f6f 	isb	sy
 800851c:	f3bf 8f4f 	dsb	sy
 8008520:	b662      	cpsie	i
 8008522:	e7fe      	b.n	8008522 <xQueueGenericSendFromISR+0x5e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008524:	f7ff fcf2 	bl	8007f0c <vPortValidateInterruptPriority>
	__asm volatile
 8008528:	f3ef 8811 	mrs	r8, BASEPRI
 800852c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008530:	b672      	cpsid	i
 8008532:	f383 8811 	msr	BASEPRI, r3
 8008536:	f3bf 8f6f 	isb	sy
 800853a:	f3bf 8f4f 	dsb	sy
 800853e:	b662      	cpsie	i
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008540:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008542:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008544:	429a      	cmp	r2, r3
 8008546:	d301      	bcc.n	800854c <xQueueGenericSendFromISR+0x88>
 8008548:	2e02      	cmp	r6, #2
 800854a:	d11d      	bne.n	8008588 <xQueueGenericSendFromISR+0xc4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800854c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008550:	4632      	mov	r2, r6
 8008552:	4649      	mov	r1, r9
 8008554:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 8008556:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008558:	f7ff fd15 	bl	8007f86 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800855c:	1c6b      	adds	r3, r5, #1
 800855e:	d10e      	bne.n	800857e <xQueueGenericSendFromISR+0xba>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008560:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008562:	b13b      	cbz	r3, 8008574 <xQueueGenericSendFromISR+0xb0>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008564:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008568:	f000 feb0 	bl	80092cc <xTaskRemoveFromEventList>
 800856c:	b110      	cbz	r0, 8008574 <xQueueGenericSendFromISR+0xb0>
							if( pxHigherPriorityTaskWoken != NULL )
 800856e:	b10f      	cbz	r7, 8008574 <xQueueGenericSendFromISR+0xb0>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008570:	2301      	movs	r3, #1
 8008572:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8008574:	2001      	movs	r0, #1
	__asm volatile
 8008576:	f388 8811 	msr	BASEPRI, r8
}
 800857a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800857e:	3501      	adds	r5, #1
 8008580:	b26d      	sxtb	r5, r5
 8008582:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8008586:	e7f5      	b.n	8008574 <xQueueGenericSendFromISR+0xb0>
			xReturn = errQUEUE_FULL;
 8008588:	2000      	movs	r0, #0
 800858a:	e7f4      	b.n	8008576 <xQueueGenericSendFromISR+0xb2>

0800858c <xQueueGiveFromISR>:
{
 800858c:	b570      	push	{r4, r5, r6, lr}
 800858e:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008590:	4604      	mov	r4, r0
 8008592:	b950      	cbnz	r0, 80085aa <xQueueGiveFromISR+0x1e>
	__asm volatile
 8008594:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008598:	b672      	cpsid	i
 800859a:	f383 8811 	msr	BASEPRI, r3
 800859e:	f3bf 8f6f 	isb	sy
 80085a2:	f3bf 8f4f 	dsb	sy
 80085a6:	b662      	cpsie	i
 80085a8:	e7fe      	b.n	80085a8 <xQueueGiveFromISR+0x1c>
	configASSERT( pxQueue->uxItemSize == 0 );
 80085aa:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80085ac:	b153      	cbz	r3, 80085c4 <xQueueGiveFromISR+0x38>
 80085ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80085b2:	b672      	cpsid	i
 80085b4:	f383 8811 	msr	BASEPRI, r3
 80085b8:	f3bf 8f6f 	isb	sy
 80085bc:	f3bf 8f4f 	dsb	sy
 80085c0:	b662      	cpsie	i
 80085c2:	e7fe      	b.n	80085c2 <xQueueGiveFromISR+0x36>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80085c4:	6803      	ldr	r3, [r0, #0]
 80085c6:	b963      	cbnz	r3, 80085e2 <xQueueGiveFromISR+0x56>
 80085c8:	6883      	ldr	r3, [r0, #8]
 80085ca:	b153      	cbz	r3, 80085e2 <xQueueGiveFromISR+0x56>
 80085cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80085d0:	b672      	cpsid	i
 80085d2:	f383 8811 	msr	BASEPRI, r3
 80085d6:	f3bf 8f6f 	isb	sy
 80085da:	f3bf 8f4f 	dsb	sy
 80085de:	b662      	cpsie	i
 80085e0:	e7fe      	b.n	80085e0 <xQueueGiveFromISR+0x54>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80085e2:	f7ff fc93 	bl	8007f0c <vPortValidateInterruptPriority>
	__asm volatile
 80085e6:	f3ef 8611 	mrs	r6, BASEPRI
 80085ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80085ee:	b672      	cpsid	i
 80085f0:	f383 8811 	msr	BASEPRI, r3
 80085f4:	f3bf 8f6f 	isb	sy
 80085f8:	f3bf 8f4f 	dsb	sy
 80085fc:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80085fe:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008600:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008602:	4293      	cmp	r3, r2
 8008604:	d919      	bls.n	800863a <xQueueGiveFromISR+0xae>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008606:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800860a:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800860c:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800860e:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008610:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8008612:	d10d      	bne.n	8008630 <xQueueGiveFromISR+0xa4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008614:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008616:	b13b      	cbz	r3, 8008628 <xQueueGiveFromISR+0x9c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008618:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800861c:	f000 fe56 	bl	80092cc <xTaskRemoveFromEventList>
 8008620:	b110      	cbz	r0, 8008628 <xQueueGiveFromISR+0x9c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008622:	b10d      	cbz	r5, 8008628 <xQueueGiveFromISR+0x9c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008624:	2301      	movs	r3, #1
 8008626:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 8008628:	2001      	movs	r0, #1
	__asm volatile
 800862a:	f386 8811 	msr	BASEPRI, r6
}
 800862e:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008630:	3301      	adds	r3, #1
 8008632:	b25b      	sxtb	r3, r3
 8008634:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8008638:	e7f6      	b.n	8008628 <xQueueGiveFromISR+0x9c>
			xReturn = errQUEUE_FULL;
 800863a:	2000      	movs	r0, #0
 800863c:	e7f5      	b.n	800862a <xQueueGiveFromISR+0x9e>

0800863e <xQueueReceive>:
{
 800863e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008642:	460e      	mov	r6, r1
	configASSERT( ( pxQueue ) );
 8008644:	4604      	mov	r4, r0
{
 8008646:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008648:	b950      	cbnz	r0, 8008660 <xQueueReceive+0x22>
	__asm volatile
 800864a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800864e:	b672      	cpsid	i
 8008650:	f383 8811 	msr	BASEPRI, r3
 8008654:	f3bf 8f6f 	isb	sy
 8008658:	f3bf 8f4f 	dsb	sy
 800865c:	b662      	cpsie	i
 800865e:	e7fe      	b.n	800865e <xQueueReceive+0x20>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008660:	b961      	cbnz	r1, 800867c <xQueueReceive+0x3e>
 8008662:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008664:	b153      	cbz	r3, 800867c <xQueueReceive+0x3e>
 8008666:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800866a:	b672      	cpsid	i
 800866c:	f383 8811 	msr	BASEPRI, r3
 8008670:	f3bf 8f6f 	isb	sy
 8008674:	f3bf 8f4f 	dsb	sy
 8008678:	b662      	cpsie	i
 800867a:	e7fe      	b.n	800867a <xQueueReceive+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800867c:	f000 fec2 	bl	8009404 <xTaskGetSchedulerState>
 8008680:	4605      	mov	r5, r0
 8008682:	b318      	cbz	r0, 80086cc <xQueueReceive+0x8e>
 8008684:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008686:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800868a:	f7ff fb43 	bl	8007d14 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800868e:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008690:	b357      	cbz	r7, 80086e8 <xQueueReceive+0xaa>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008692:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008694:	4631      	mov	r1, r6
 8008696:	4620      	mov	r0, r4
 8008698:	f7ff fca8 	bl	8007fec <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800869c:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800869e:	6923      	ldr	r3, [r4, #16]
 80086a0:	b173      	cbz	r3, 80086c0 <xQueueReceive+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80086a2:	f104 0010 	add.w	r0, r4, #16
 80086a6:	f000 fe11 	bl	80092cc <xTaskRemoveFromEventList>
 80086aa:	b148      	cbz	r0, 80086c0 <xQueueReceive+0x82>
						queueYIELD_IF_USING_PREEMPTION();
 80086ac:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80086b0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80086b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80086b8:	f3bf 8f4f 	dsb	sy
 80086bc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80086c0:	f7ff fb4c 	bl	8007d5c <vPortExitCritical>
				return pdPASS;
 80086c4:	2001      	movs	r0, #1
}
 80086c6:	b004      	add	sp, #16
 80086c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80086cc:	9b01      	ldr	r3, [sp, #4]
 80086ce:	2b00      	cmp	r3, #0
 80086d0:	d0d9      	beq.n	8008686 <xQueueReceive+0x48>
 80086d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80086d6:	b672      	cpsid	i
 80086d8:	f383 8811 	msr	BASEPRI, r3
 80086dc:	f3bf 8f6f 	isb	sy
 80086e0:	f3bf 8f4f 	dsb	sy
 80086e4:	b662      	cpsie	i
 80086e6:	e7fe      	b.n	80086e6 <xQueueReceive+0xa8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80086e8:	9b01      	ldr	r3, [sp, #4]
 80086ea:	b91b      	cbnz	r3, 80086f4 <xQueueReceive+0xb6>
					taskEXIT_CRITICAL();
 80086ec:	f7ff fb36 	bl	8007d5c <vPortExitCritical>
					return errQUEUE_EMPTY;
 80086f0:	2000      	movs	r0, #0
 80086f2:	e7e8      	b.n	80086c6 <xQueueReceive+0x88>
				else if( xEntryTimeSet == pdFALSE )
 80086f4:	b915      	cbnz	r5, 80086fc <xQueueReceive+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80086f6:	a802      	add	r0, sp, #8
 80086f8:	f000 fe2c 	bl	8009354 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80086fc:	f7ff fb2e 	bl	8007d5c <vPortExitCritical>
		vTaskSuspendAll();
 8008700:	f000 fbb2 	bl	8008e68 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008704:	f7ff fb06 	bl	8007d14 <vPortEnterCritical>
 8008708:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800870c:	2bff      	cmp	r3, #255	@ 0xff
 800870e:	d101      	bne.n	8008714 <xQueueReceive+0xd6>
 8008710:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
 8008714:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008718:	2bff      	cmp	r3, #255	@ 0xff
 800871a:	d101      	bne.n	8008720 <xQueueReceive+0xe2>
 800871c:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
 8008720:	f7ff fb1c 	bl	8007d5c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008724:	a901      	add	r1, sp, #4
 8008726:	a802      	add	r0, sp, #8
 8008728:	f000 fe20 	bl	800936c <xTaskCheckForTimeOut>
 800872c:	bb00      	cbnz	r0, 8008770 <xQueueReceive+0x132>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800872e:	4620      	mov	r0, r4
 8008730:	f7ff fc1e 	bl	8007f70 <prvIsQueueEmpty>
 8008734:	b1b0      	cbz	r0, 8008764 <xQueueReceive+0x126>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008736:	9901      	ldr	r1, [sp, #4]
 8008738:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800873c:	f000 fd8a 	bl	8009254 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008740:	4620      	mov	r0, r4
 8008742:	f7ff fc68 	bl	8008016 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008746:	f000 fc35 	bl	8008fb4 <xTaskResumeAll>
 800874a:	b948      	cbnz	r0, 8008760 <xQueueReceive+0x122>
					portYIELD_WITHIN_API();
 800874c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008750:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008754:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008758:	f3bf 8f4f 	dsb	sy
 800875c:	f3bf 8f6f 	isb	sy
 8008760:	2501      	movs	r5, #1
 8008762:	e792      	b.n	800868a <xQueueReceive+0x4c>
				prvUnlockQueue( pxQueue );
 8008764:	4620      	mov	r0, r4
 8008766:	f7ff fc56 	bl	8008016 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800876a:	f000 fc23 	bl	8008fb4 <xTaskResumeAll>
 800876e:	e7f7      	b.n	8008760 <xQueueReceive+0x122>
			prvUnlockQueue( pxQueue );
 8008770:	4620      	mov	r0, r4
 8008772:	f7ff fc50 	bl	8008016 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008776:	f000 fc1d 	bl	8008fb4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800877a:	4620      	mov	r0, r4
 800877c:	f7ff fbf8 	bl	8007f70 <prvIsQueueEmpty>
 8008780:	2800      	cmp	r0, #0
 8008782:	d0ed      	beq.n	8008760 <xQueueReceive+0x122>
 8008784:	e7b4      	b.n	80086f0 <xQueueReceive+0xb2>

08008786 <xQueueSemaphoreTake>:
{
 8008786:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008788:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800878a:	4604      	mov	r4, r0
{
 800878c:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800878e:	b950      	cbnz	r0, 80087a6 <xQueueSemaphoreTake+0x20>
 8008790:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008794:	b672      	cpsid	i
 8008796:	f383 8811 	msr	BASEPRI, r3
 800879a:	f3bf 8f6f 	isb	sy
 800879e:	f3bf 8f4f 	dsb	sy
 80087a2:	b662      	cpsie	i
 80087a4:	e7fe      	b.n	80087a4 <xQueueSemaphoreTake+0x1e>
	configASSERT( pxQueue->uxItemSize == 0 );
 80087a6:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 80087a8:	b155      	cbz	r5, 80087c0 <xQueueSemaphoreTake+0x3a>
 80087aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087ae:	b672      	cpsid	i
 80087b0:	f383 8811 	msr	BASEPRI, r3
 80087b4:	f3bf 8f6f 	isb	sy
 80087b8:	f3bf 8f4f 	dsb	sy
 80087bc:	b662      	cpsie	i
 80087be:	e7fe      	b.n	80087be <xQueueSemaphoreTake+0x38>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80087c0:	f000 fe20 	bl	8009404 <xTaskGetSchedulerState>
 80087c4:	4606      	mov	r6, r0
 80087c6:	b320      	cbz	r0, 8008812 <xQueueSemaphoreTake+0x8c>
 80087c8:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 80087ca:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 80087cc:	f7ff faa2 	bl	8007d14 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80087d0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80087d2:	b363      	cbz	r3, 800882e <xQueueSemaphoreTake+0xa8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80087d4:	3b01      	subs	r3, #1
 80087d6:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80087d8:	6823      	ldr	r3, [r4, #0]
 80087da:	b913      	cbnz	r3, 80087e2 <xQueueSemaphoreTake+0x5c>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80087dc:	f000 fef8 	bl	80095d0 <pvTaskIncrementMutexHeldCount>
 80087e0:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80087e2:	6923      	ldr	r3, [r4, #16]
 80087e4:	b173      	cbz	r3, 8008804 <xQueueSemaphoreTake+0x7e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80087e6:	f104 0010 	add.w	r0, r4, #16
 80087ea:	f000 fd6f 	bl	80092cc <xTaskRemoveFromEventList>
 80087ee:	b148      	cbz	r0, 8008804 <xQueueSemaphoreTake+0x7e>
						queueYIELD_IF_USING_PREEMPTION();
 80087f0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80087f4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80087f8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80087fc:	f3bf 8f4f 	dsb	sy
 8008800:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008804:	f7ff faaa 	bl	8007d5c <vPortExitCritical>
				return pdPASS;
 8008808:	2001      	movs	r0, #1
}
 800880a:	b005      	add	sp, #20
 800880c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800880e:	4635      	mov	r5, r6
 8008810:	e7db      	b.n	80087ca <xQueueSemaphoreTake+0x44>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008812:	9b01      	ldr	r3, [sp, #4]
 8008814:	2b00      	cmp	r3, #0
 8008816:	d0fa      	beq.n	800880e <xQueueSemaphoreTake+0x88>
 8008818:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800881c:	b672      	cpsid	i
 800881e:	f383 8811 	msr	BASEPRI, r3
 8008822:	f3bf 8f6f 	isb	sy
 8008826:	f3bf 8f4f 	dsb	sy
 800882a:	b662      	cpsie	i
 800882c:	e7fe      	b.n	800882c <xQueueSemaphoreTake+0xa6>
				if( xTicksToWait == ( TickType_t ) 0 )
 800882e:	9b01      	ldr	r3, [sp, #4]
 8008830:	b963      	cbnz	r3, 800884c <xQueueSemaphoreTake+0xc6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008832:	2d00      	cmp	r5, #0
 8008834:	d068      	beq.n	8008908 <xQueueSemaphoreTake+0x182>
 8008836:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800883a:	b672      	cpsid	i
 800883c:	f383 8811 	msr	BASEPRI, r3
 8008840:	f3bf 8f6f 	isb	sy
 8008844:	f3bf 8f4f 	dsb	sy
 8008848:	b662      	cpsie	i
 800884a:	e7fe      	b.n	800884a <xQueueSemaphoreTake+0xc4>
				else if( xEntryTimeSet == pdFALSE )
 800884c:	b916      	cbnz	r6, 8008854 <xQueueSemaphoreTake+0xce>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800884e:	a802      	add	r0, sp, #8
 8008850:	f000 fd80 	bl	8009354 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008854:	f7ff fa82 	bl	8007d5c <vPortExitCritical>
		vTaskSuspendAll();
 8008858:	f000 fb06 	bl	8008e68 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800885c:	f7ff fa5a 	bl	8007d14 <vPortEnterCritical>
 8008860:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008864:	2bff      	cmp	r3, #255	@ 0xff
 8008866:	d101      	bne.n	800886c <xQueueSemaphoreTake+0xe6>
 8008868:	f884 7044 	strb.w	r7, [r4, #68]	@ 0x44
 800886c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008870:	2bff      	cmp	r3, #255	@ 0xff
 8008872:	d101      	bne.n	8008878 <xQueueSemaphoreTake+0xf2>
 8008874:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8008878:	f7ff fa70 	bl	8007d5c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800887c:	a901      	add	r1, sp, #4
 800887e:	a802      	add	r0, sp, #8
 8008880:	f000 fd74 	bl	800936c <xTaskCheckForTimeOut>
 8008884:	bb50      	cbnz	r0, 80088dc <xQueueSemaphoreTake+0x156>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008886:	4620      	mov	r0, r4
 8008888:	f7ff fb72 	bl	8007f70 <prvIsQueueEmpty>
 800888c:	b300      	cbz	r0, 80088d0 <xQueueSemaphoreTake+0x14a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800888e:	6823      	ldr	r3, [r4, #0]
 8008890:	b93b      	cbnz	r3, 80088a2 <xQueueSemaphoreTake+0x11c>
						taskENTER_CRITICAL();
 8008892:	f7ff fa3f 	bl	8007d14 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008896:	68a0      	ldr	r0, [r4, #8]
 8008898:	f000 fdc4 	bl	8009424 <xTaskPriorityInherit>
 800889c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800889e:	f7ff fa5d 	bl	8007d5c <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80088a2:	9901      	ldr	r1, [sp, #4]
 80088a4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80088a8:	f000 fcd4 	bl	8009254 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80088ac:	4620      	mov	r0, r4
 80088ae:	f7ff fbb2 	bl	8008016 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80088b2:	f000 fb7f 	bl	8008fb4 <xTaskResumeAll>
 80088b6:	b948      	cbnz	r0, 80088cc <xQueueSemaphoreTake+0x146>
					portYIELD_WITHIN_API();
 80088b8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80088bc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80088c0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80088c4:	f3bf 8f4f 	dsb	sy
 80088c8:	f3bf 8f6f 	isb	sy
 80088cc:	2601      	movs	r6, #1
 80088ce:	e77d      	b.n	80087cc <xQueueSemaphoreTake+0x46>
				prvUnlockQueue( pxQueue );
 80088d0:	4620      	mov	r0, r4
 80088d2:	f7ff fba0 	bl	8008016 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80088d6:	f000 fb6d 	bl	8008fb4 <xTaskResumeAll>
 80088da:	e7f7      	b.n	80088cc <xQueueSemaphoreTake+0x146>
			prvUnlockQueue( pxQueue );
 80088dc:	4620      	mov	r0, r4
 80088de:	f7ff fb9a 	bl	8008016 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80088e2:	f000 fb67 	bl	8008fb4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80088e6:	4620      	mov	r0, r4
 80088e8:	f7ff fb42 	bl	8007f70 <prvIsQueueEmpty>
 80088ec:	2800      	cmp	r0, #0
 80088ee:	d0ed      	beq.n	80088cc <xQueueSemaphoreTake+0x146>
					if( xInheritanceOccurred != pdFALSE )
 80088f0:	b165      	cbz	r5, 800890c <xQueueSemaphoreTake+0x186>
						taskENTER_CRITICAL();
 80088f2:	f7ff fa0f 	bl	8007d14 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80088f6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80088f8:	b119      	cbz	r1, 8008902 <xQueueSemaphoreTake+0x17c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80088fa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80088fc:	6819      	ldr	r1, [r3, #0]
 80088fe:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008902:	68a0      	ldr	r0, [r4, #8]
 8008904:	f000 fe12 	bl	800952c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 8008908:	f7ff fa28 	bl	8007d5c <vPortExitCritical>
					return errQUEUE_EMPTY;
 800890c:	2000      	movs	r0, #0
 800890e:	e77c      	b.n	800880a <xQueueSemaphoreTake+0x84>

08008910 <xQueueTakeMutexRecursive>:
	{
 8008910:	b570      	push	{r4, r5, r6, lr}
 8008912:	460d      	mov	r5, r1
		configASSERT( pxMutex );
 8008914:	4604      	mov	r4, r0
 8008916:	b950      	cbnz	r0, 800892e <xQueueTakeMutexRecursive+0x1e>
 8008918:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800891c:	b672      	cpsid	i
 800891e:	f383 8811 	msr	BASEPRI, r3
 8008922:	f3bf 8f6f 	isb	sy
 8008926:	f3bf 8f4f 	dsb	sy
 800892a:	b662      	cpsie	i
 800892c:	e7fe      	b.n	800892c <xQueueTakeMutexRecursive+0x1c>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 800892e:	6886      	ldr	r6, [r0, #8]
 8008930:	f000 fd62 	bl	80093f8 <xTaskGetCurrentTaskHandle>
 8008934:	4286      	cmp	r6, r0
 8008936:	d104      	bne.n	8008942 <xQueueTakeMutexRecursive+0x32>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 8008938:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
 800893a:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 800893c:	3301      	adds	r3, #1
 800893e:	60e3      	str	r3, [r4, #12]
	}
 8008940:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 8008942:	4629      	mov	r1, r5
 8008944:	4620      	mov	r0, r4
 8008946:	f7ff ff1e 	bl	8008786 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
 800894a:	2800      	cmp	r0, #0
 800894c:	d0f8      	beq.n	8008940 <xQueueTakeMutexRecursive+0x30>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 800894e:	68e3      	ldr	r3, [r4, #12]
 8008950:	3301      	adds	r3, #1
 8008952:	60e3      	str	r3, [r4, #12]
 8008954:	e7f4      	b.n	8008940 <xQueueTakeMutexRecursive+0x30>

08008956 <xQueueReceiveFromISR>:
{
 8008956:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800895a:	4689      	mov	r9, r1
 800895c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800895e:	4604      	mov	r4, r0
 8008960:	b950      	cbnz	r0, 8008978 <xQueueReceiveFromISR+0x22>
 8008962:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008966:	b672      	cpsid	i
 8008968:	f383 8811 	msr	BASEPRI, r3
 800896c:	f3bf 8f6f 	isb	sy
 8008970:	f3bf 8f4f 	dsb	sy
 8008974:	b662      	cpsie	i
 8008976:	e7fe      	b.n	8008976 <xQueueReceiveFromISR+0x20>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008978:	b961      	cbnz	r1, 8008994 <xQueueReceiveFromISR+0x3e>
 800897a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800897c:	b153      	cbz	r3, 8008994 <xQueueReceiveFromISR+0x3e>
 800897e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008982:	b672      	cpsid	i
 8008984:	f383 8811 	msr	BASEPRI, r3
 8008988:	f3bf 8f6f 	isb	sy
 800898c:	f3bf 8f4f 	dsb	sy
 8008990:	b662      	cpsie	i
 8008992:	e7fe      	b.n	8008992 <xQueueReceiveFromISR+0x3c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008994:	f7ff faba 	bl	8007f0c <vPortValidateInterruptPriority>
	__asm volatile
 8008998:	f3ef 8711 	mrs	r7, BASEPRI
 800899c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089a0:	b672      	cpsid	i
 80089a2:	f383 8811 	msr	BASEPRI, r3
 80089a6:	f3bf 8f6f 	isb	sy
 80089aa:	f3bf 8f4f 	dsb	sy
 80089ae:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80089b0:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80089b2:	b30d      	cbz	r5, 80089f8 <xQueueReceiveFromISR+0xa2>
			const int8_t cRxLock = pxQueue->cRxLock;
 80089b4:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80089b8:	4649      	mov	r1, r9
 80089ba:	4620      	mov	r0, r4
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80089bc:	3d01      	subs	r5, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 80089be:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80089c0:	f7ff fb14 	bl	8007fec <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80089c4:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 80089c6:	1c73      	adds	r3, r6, #1
 80089c8:	d111      	bne.n	80089ee <xQueueReceiveFromISR+0x98>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80089ca:	6923      	ldr	r3, [r4, #16]
 80089cc:	b153      	cbz	r3, 80089e4 <xQueueReceiveFromISR+0x8e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80089ce:	f104 0010 	add.w	r0, r4, #16
 80089d2:	f000 fc7b 	bl	80092cc <xTaskRemoveFromEventList>
 80089d6:	b128      	cbz	r0, 80089e4 <xQueueReceiveFromISR+0x8e>
						if( pxHigherPriorityTaskWoken != NULL )
 80089d8:	f1b8 0f00 	cmp.w	r8, #0
 80089dc:	d002      	beq.n	80089e4 <xQueueReceiveFromISR+0x8e>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80089de:	2301      	movs	r3, #1
 80089e0:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 80089e4:	2001      	movs	r0, #1
	__asm volatile
 80089e6:	f387 8811 	msr	BASEPRI, r7
}
 80089ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80089ee:	3601      	adds	r6, #1
 80089f0:	b276      	sxtb	r6, r6
 80089f2:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 80089f6:	e7f5      	b.n	80089e4 <xQueueReceiveFromISR+0x8e>
			xReturn = pdFAIL;
 80089f8:	4628      	mov	r0, r5
 80089fa:	e7f4      	b.n	80089e6 <xQueueReceiveFromISR+0x90>

080089fc <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80089fc:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80089fe:	4a07      	ldr	r2, [pc, #28]	@ (8008a1c <vQueueAddToRegistry+0x20>)
	{
 8008a00:	b530      	push	{r4, r5, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008a02:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8008a06:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8008a0a:	b91d      	cbnz	r5, 8008a14 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008a0c:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008a10:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8008a12:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008a14:	3301      	adds	r3, #1
 8008a16:	2b08      	cmp	r3, #8
 8008a18:	d1f3      	bne.n	8008a02 <vQueueAddToRegistry+0x6>
 8008a1a:	e7fa      	b.n	8008a12 <vQueueAddToRegistry+0x16>
 8008a1c:	20016500 	.word	0x20016500

08008a20 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008a20:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008a22:	4a09      	ldr	r2, [pc, #36]	@ (8008a48 <vQueueUnregisterQueue+0x28>)
	{
 8008a24:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008a26:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 8008a2a:	00dc      	lsls	r4, r3, #3
 8008a2c:	4281      	cmp	r1, r0
 8008a2e:	d106      	bne.n	8008a3e <vQueueUnregisterQueue+0x1e>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008a30:	4a06      	ldr	r2, [pc, #24]	@ (8008a4c <vQueueUnregisterQueue+0x2c>)
 8008a32:	2100      	movs	r1, #0
 8008a34:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008a38:	4422      	add	r2, r4
 8008a3a:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008a3c:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008a3e:	3301      	adds	r3, #1
 8008a40:	2b08      	cmp	r3, #8
 8008a42:	d1f0      	bne.n	8008a26 <vQueueUnregisterQueue+0x6>
 8008a44:	e7fa      	b.n	8008a3c <vQueueUnregisterQueue+0x1c>
 8008a46:	bf00      	nop
 8008a48:	20016504 	.word	0x20016504
 8008a4c:	20016500 	.word	0x20016500

08008a50 <vQueueDelete>:
{
 8008a50:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008a52:	b950      	cbnz	r0, 8008a6a <vQueueDelete+0x1a>
	__asm volatile
 8008a54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a58:	b672      	cpsid	i
 8008a5a:	f383 8811 	msr	BASEPRI, r3
 8008a5e:	f3bf 8f6f 	isb	sy
 8008a62:	f3bf 8f4f 	dsb	sy
 8008a66:	b662      	cpsie	i
 8008a68:	e7fe      	b.n	8008a68 <vQueueDelete+0x18>
		vQueueUnregisterQueue( pxQueue );
 8008a6a:	f7ff ffd9 	bl	8008a20 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008a6e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8008a72:	b91b      	cbnz	r3, 8008a7c <vQueueDelete+0x2c>
}
 8008a74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008a78:	f7ff b864 	b.w	8007b44 <vPortFree>
}
 8008a7c:	bd10      	pop	{r4, pc}

08008a7e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008a7e:	b570      	push	{r4, r5, r6, lr}
 8008a80:	4604      	mov	r4, r0
 8008a82:	460d      	mov	r5, r1
 8008a84:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008a86:	f7ff f945 	bl	8007d14 <vPortEnterCritical>
 8008a8a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008a8e:	2bff      	cmp	r3, #255	@ 0xff
 8008a90:	d102      	bne.n	8008a98 <vQueueWaitForMessageRestricted+0x1a>
 8008a92:	2300      	movs	r3, #0
 8008a94:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8008a98:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008a9c:	2bff      	cmp	r3, #255	@ 0xff
 8008a9e:	d102      	bne.n	8008aa6 <vQueueWaitForMessageRestricted+0x28>
 8008aa0:	2300      	movs	r3, #0
 8008aa2:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8008aa6:	f7ff f959 	bl	8007d5c <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8008aaa:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8008aac:	b92b      	cbnz	r3, 8008aba <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008aae:	4632      	mov	r2, r6
 8008ab0:	4629      	mov	r1, r5
 8008ab2:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008ab6:	f000 fbe9 	bl	800928c <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8008aba:	4620      	mov	r0, r4
	}
 8008abc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008ac0:	f7ff baa9 	b.w	8008016 <prvUnlockQueue>

08008ac4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008ac4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008ac8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8008aca:	f7ff f923 	bl	8007d14 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8008ace:	4b2f      	ldr	r3, [pc, #188]	@ (8008b8c <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8008ad0:	4e2f      	ldr	r6, [pc, #188]	@ (8008b90 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8008ad2:	681a      	ldr	r2, [r3, #0]
 8008ad4:	4f2f      	ldr	r7, [pc, #188]	@ (8008b94 <prvAddNewTaskToReadyList+0xd0>)
 8008ad6:	3201      	adds	r2, #1
 8008ad8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8008ada:	6835      	ldr	r5, [r6, #0]
 8008adc:	2d00      	cmp	r5, #0
 8008ade:	d14a      	bne.n	8008b76 <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008ae0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008ae2:	681b      	ldr	r3, [r3, #0]
 8008ae4:	2b01      	cmp	r3, #1
 8008ae6:	d11f      	bne.n	8008b28 <prvAddNewTaskToReadyList+0x64>
 8008ae8:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008aea:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008aec:	4640      	mov	r0, r8
 8008aee:	f7ff f865 	bl	8007bbc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008af2:	f108 0814 	add.w	r8, r8, #20
 8008af6:	2d38      	cmp	r5, #56	@ 0x38
 8008af8:	d1f7      	bne.n	8008aea <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8008afa:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8008bbc <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 8008afe:	4d26      	ldr	r5, [pc, #152]	@ (8008b98 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8008b00:	4640      	mov	r0, r8
 8008b02:	f7ff f85b 	bl	8007bbc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008b06:	4628      	mov	r0, r5
 8008b08:	f7ff f858 	bl	8007bbc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8008b0c:	4823      	ldr	r0, [pc, #140]	@ (8008b9c <prvAddNewTaskToReadyList+0xd8>)
 8008b0e:	f7ff f855 	bl	8007bbc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008b12:	4823      	ldr	r0, [pc, #140]	@ (8008ba0 <prvAddNewTaskToReadyList+0xdc>)
 8008b14:	f7ff f852 	bl	8007bbc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008b18:	4822      	ldr	r0, [pc, #136]	@ (8008ba4 <prvAddNewTaskToReadyList+0xe0>)
 8008b1a:	f7ff f84f 	bl	8007bbc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8008b1e:	4b22      	ldr	r3, [pc, #136]	@ (8008ba8 <prvAddNewTaskToReadyList+0xe4>)
 8008b20:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008b24:	4b21      	ldr	r3, [pc, #132]	@ (8008bac <prvAddNewTaskToReadyList+0xe8>)
 8008b26:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8008b28:	4a21      	ldr	r2, [pc, #132]	@ (8008bb0 <prvAddNewTaskToReadyList+0xec>)
 8008b2a:	6813      	ldr	r3, [r2, #0]
 8008b2c:	3301      	adds	r3, #1
 8008b2e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008b30:	4a20      	ldr	r2, [pc, #128]	@ (8008bb4 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008b32:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008b34:	6811      	ldr	r1, [r2, #0]
 8008b36:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008b38:	428b      	cmp	r3, r1
 8008b3a:	d900      	bls.n	8008b3e <prvAddNewTaskToReadyList+0x7a>
 8008b3c:	6013      	str	r3, [r2, #0]
 8008b3e:	2014      	movs	r0, #20
 8008b40:	1d21      	adds	r1, r4, #4
 8008b42:	fb00 7003 	mla	r0, r0, r3, r7
 8008b46:	f7ff f847 	bl	8007bd8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8008b4a:	f7ff f907 	bl	8007d5c <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008b4e:	4b1a      	ldr	r3, [pc, #104]	@ (8008bb8 <prvAddNewTaskToReadyList+0xf4>)
 8008b50:	681b      	ldr	r3, [r3, #0]
 8008b52:	b173      	cbz	r3, 8008b72 <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008b54:	6833      	ldr	r3, [r6, #0]
 8008b56:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008b58:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008b5a:	429a      	cmp	r2, r3
 8008b5c:	d209      	bcs.n	8008b72 <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
 8008b5e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008b62:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008b66:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008b6a:	f3bf 8f4f 	dsb	sy
 8008b6e:	f3bf 8f6f 	isb	sy
}
 8008b72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008b76:	4b10      	ldr	r3, [pc, #64]	@ (8008bb8 <prvAddNewTaskToReadyList+0xf4>)
 8008b78:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008b7a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 8008b7c:	2a00      	cmp	r2, #0
 8008b7e:	d1d3      	bne.n	8008b28 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008b80:	6832      	ldr	r2, [r6, #0]
 8008b82:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008b84:	429a      	cmp	r2, r3
 8008b86:	d8cf      	bhi.n	8008b28 <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 8008b88:	6034      	str	r4, [r6, #0]
 8008b8a:	e7cd      	b.n	8008b28 <prvAddNewTaskToReadyList+0x64>
 8008b8c:	20016564 	.word	0x20016564
 8008b90:	20016a38 	.word	0x20016a38
 8008b94:	200165d8 	.word	0x200165d8
 8008b98:	200165b0 	.word	0x200165b0
 8008b9c:	20016594 	.word	0x20016594
 8008ba0:	20016580 	.word	0x20016580
 8008ba4:	20016568 	.word	0x20016568
 8008ba8:	200165ac 	.word	0x200165ac
 8008bac:	200165a8 	.word	0x200165a8
 8008bb0:	20016548 	.word	0x20016548
 8008bb4:	2001655c 	.word	0x2001655c
 8008bb8:	20016558 	.word	0x20016558
 8008bbc:	200165c4 	.word	0x200165c4

08008bc0 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008bc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008bc2:	4b15      	ldr	r3, [pc, #84]	@ (8008c18 <prvAddCurrentTaskToDelayedList+0x58>)
{
 8008bc4:	4606      	mov	r6, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008bc6:	4d15      	ldr	r5, [pc, #84]	@ (8008c1c <prvAddCurrentTaskToDelayedList+0x5c>)
{
 8008bc8:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 8008bca:	681c      	ldr	r4, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008bcc:	6828      	ldr	r0, [r5, #0]
 8008bce:	3004      	adds	r0, #4
 8008bd0:	f7ff f824 	bl	8007c1c <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008bd4:	1c73      	adds	r3, r6, #1
 8008bd6:	d107      	bne.n	8008be8 <prvAddCurrentTaskToDelayedList+0x28>
 8008bd8:	b137      	cbz	r7, 8008be8 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008bda:	6829      	ldr	r1, [r5, #0]
 8008bdc:	4810      	ldr	r0, [pc, #64]	@ (8008c20 <prvAddCurrentTaskToDelayedList+0x60>)
 8008bde:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008be0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008be4:	f7fe bff8 	b.w	8007bd8 <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
 8008be8:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8008bea:	682b      	ldr	r3, [r5, #0]
 8008bec:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8008bee:	d307      	bcc.n	8008c00 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008bf0:	4b0c      	ldr	r3, [pc, #48]	@ (8008c24 <prvAddCurrentTaskToDelayedList+0x64>)
 8008bf2:	6818      	ldr	r0, [r3, #0]
 8008bf4:	6829      	ldr	r1, [r5, #0]
}
 8008bf6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008bfa:	3104      	adds	r1, #4
 8008bfc:	f7fe bff7 	b.w	8007bee <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008c00:	4b09      	ldr	r3, [pc, #36]	@ (8008c28 <prvAddCurrentTaskToDelayedList+0x68>)
 8008c02:	6818      	ldr	r0, [r3, #0]
 8008c04:	6829      	ldr	r1, [r5, #0]
 8008c06:	3104      	adds	r1, #4
 8008c08:	f7fe fff1 	bl	8007bee <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8008c0c:	4b07      	ldr	r3, [pc, #28]	@ (8008c2c <prvAddCurrentTaskToDelayedList+0x6c>)
 8008c0e:	681a      	ldr	r2, [r3, #0]
 8008c10:	42a2      	cmp	r2, r4
 8008c12:	d900      	bls.n	8008c16 <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
 8008c14:	601c      	str	r4, [r3, #0]
}
 8008c16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008c18:	20016560 	.word	0x20016560
 8008c1c:	20016a38 	.word	0x20016a38
 8008c20:	20016568 	.word	0x20016568
 8008c24:	200165a8 	.word	0x200165a8
 8008c28:	200165ac 	.word	0x200165ac
 8008c2c:	20016544 	.word	0x20016544

08008c30 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008c30:	4a06      	ldr	r2, [pc, #24]	@ (8008c4c <prvResetNextTaskUnblockTime+0x1c>)
 8008c32:	6813      	ldr	r3, [r2, #0]
 8008c34:	6819      	ldr	r1, [r3, #0]
 8008c36:	4b06      	ldr	r3, [pc, #24]	@ (8008c50 <prvResetNextTaskUnblockTime+0x20>)
 8008c38:	b919      	cbnz	r1, 8008c42 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8008c3a:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008c3e:	601a      	str	r2, [r3, #0]
}
 8008c40:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c42:	6812      	ldr	r2, [r2, #0]
 8008c44:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008c46:	68d2      	ldr	r2, [r2, #12]
 8008c48:	6852      	ldr	r2, [r2, #4]
 8008c4a:	e7f8      	b.n	8008c3e <prvResetNextTaskUnblockTime+0xe>
 8008c4c:	200165ac 	.word	0x200165ac
 8008c50:	20016544 	.word	0x20016544

08008c54 <prvDeleteTCB>:
	{
 8008c54:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008c56:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 8008c5a:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008c5c:	b93b      	cbnz	r3, 8008c6e <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8008c5e:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8008c60:	f7fe ff70 	bl	8007b44 <vPortFree>
				vPortFree( pxTCB );
 8008c64:	4620      	mov	r0, r4
	}
 8008c66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8008c6a:	f7fe bf6b 	b.w	8007b44 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008c6e:	2b01      	cmp	r3, #1
 8008c70:	d0f9      	beq.n	8008c66 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008c72:	2b02      	cmp	r3, #2
 8008c74:	d00a      	beq.n	8008c8c <prvDeleteTCB+0x38>
 8008c76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c7a:	b672      	cpsid	i
 8008c7c:	f383 8811 	msr	BASEPRI, r3
 8008c80:	f3bf 8f6f 	isb	sy
 8008c84:	f3bf 8f4f 	dsb	sy
 8008c88:	b662      	cpsie	i
 8008c8a:	e7fe      	b.n	8008c8a <prvDeleteTCB+0x36>
	}
 8008c8c:	bd10      	pop	{r4, pc}
	...

08008c90 <prvIdleTask>:
{
 8008c90:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008c92:	4c14      	ldr	r4, [pc, #80]	@ (8008ce4 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c94:	4f14      	ldr	r7, [pc, #80]	@ (8008ce8 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8008c96:	4d15      	ldr	r5, [pc, #84]	@ (8008cec <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008c98:	6823      	ldr	r3, [r4, #0]
 8008c9a:	b983      	cbnz	r3, 8008cbe <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8008c9c:	4b14      	ldr	r3, [pc, #80]	@ (8008cf0 <prvIdleTask+0x60>)
 8008c9e:	681b      	ldr	r3, [r3, #0]
 8008ca0:	2b01      	cmp	r3, #1
 8008ca2:	d909      	bls.n	8008cb8 <prvIdleTask+0x28>
				taskYIELD();
 8008ca4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008ca8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008cac:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008cb0:	f3bf 8f4f 	dsb	sy
 8008cb4:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8008cb8:	f7f7 fc72 	bl	80005a0 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8008cbc:	e7eb      	b.n	8008c96 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8008cbe:	f7ff f829 	bl	8007d14 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008cc2:	68fb      	ldr	r3, [r7, #12]
 8008cc4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008cc6:	1d30      	adds	r0, r6, #4
 8008cc8:	f7fe ffa8 	bl	8007c1c <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008ccc:	682b      	ldr	r3, [r5, #0]
 8008cce:	3b01      	subs	r3, #1
 8008cd0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008cd2:	6823      	ldr	r3, [r4, #0]
 8008cd4:	3b01      	subs	r3, #1
 8008cd6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008cd8:	f7ff f840 	bl	8007d5c <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008cdc:	4630      	mov	r0, r6
 8008cde:	f7ff ffb9 	bl	8008c54 <prvDeleteTCB>
 8008ce2:	e7d9      	b.n	8008c98 <prvIdleTask+0x8>
 8008ce4:	2001657c 	.word	0x2001657c
 8008ce8:	20016580 	.word	0x20016580
 8008cec:	20016564 	.word	0x20016564
 8008cf0:	200165d8 	.word	0x200165d8

08008cf4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008cf4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008cf8:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008cfa:	4607      	mov	r7, r0
 8008cfc:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008cfe:	21a5      	movs	r1, #165	@ 0xa5
 8008d00:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008d02:	4698      	mov	r8, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8008d04:	3e04      	subs	r6, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008d06:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008d0a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8008d0c:	f019 f8fe 	bl	8021f0c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8008d10:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008d12:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008d14:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 8008d18:	b3b5      	cbz	r5, 8008d88 <prvInitialiseNewTask.constprop.0+0x94>
 8008d1a:	1e6b      	subs	r3, r5, #1
 8008d1c:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8008d20:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008d22:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008d26:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 8008d2a:	b109      	cbz	r1, 8008d30 <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008d2c:	42ab      	cmp	r3, r5
 8008d2e:	d1f8      	bne.n	8008d22 <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008d30:	2300      	movs	r3, #0
 8008d32:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8008d36:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 8008d38:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008d3c:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8008d3e:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008d40:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8008d44:	bf28      	it	cs
 8008d46:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
 8008d48:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008d4a:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d4c:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008d50:	f7fe ff3f 	bl	8007bd2 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008d54:	f104 0018 	add.w	r0, r4, #24
 8008d58:	f7fe ff3b 	bl	8007bd2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008d5c:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008d60:	4642      	mov	r2, r8
 8008d62:	4639      	mov	r1, r7
 8008d64:	4630      	mov	r0, r6
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008d66:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d68:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008d6a:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 8008d6c:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008d70:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008d74:	f7fe ffa4 	bl	8007cc0 <pxPortInitialiseStack>
 8008d78:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008d7a:	f1b9 0f00 	cmp.w	r9, #0
 8008d7e:	d001      	beq.n	8008d84 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008d80:	f8c9 4000 	str.w	r4, [r9]
}
 8008d84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008d88:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8008d8c:	e7d3      	b.n	8008d36 <prvInitialiseNewTask.constprop.0+0x42>

08008d8e <xTaskCreateStatic>:
	{
 8008d8e:	b570      	push	{r4, r5, r6, lr}
 8008d90:	b086      	sub	sp, #24
 8008d92:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008d96:	b955      	cbnz	r5, 8008dae <xTaskCreateStatic+0x20>
 8008d98:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d9c:	b672      	cpsid	i
 8008d9e:	f383 8811 	msr	BASEPRI, r3
 8008da2:	f3bf 8f6f 	isb	sy
 8008da6:	f3bf 8f4f 	dsb	sy
 8008daa:	b662      	cpsie	i
 8008dac:	e7fe      	b.n	8008dac <xTaskCreateStatic+0x1e>
		configASSERT( pxTaskBuffer != NULL );
 8008dae:	b954      	cbnz	r4, 8008dc6 <xTaskCreateStatic+0x38>
 8008db0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008db4:	b672      	cpsid	i
 8008db6:	f383 8811 	msr	BASEPRI, r3
 8008dba:	f3bf 8f6f 	isb	sy
 8008dbe:	f3bf 8f4f 	dsb	sy
 8008dc2:	b662      	cpsie	i
 8008dc4:	e7fe      	b.n	8008dc4 <xTaskCreateStatic+0x36>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008dc6:	2660      	movs	r6, #96	@ 0x60
 8008dc8:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008dca:	9e05      	ldr	r6, [sp, #20]
 8008dcc:	2e60      	cmp	r6, #96	@ 0x60
 8008dce:	d00a      	beq.n	8008de6 <xTaskCreateStatic+0x58>
 8008dd0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dd4:	b672      	cpsid	i
 8008dd6:	f383 8811 	msr	BASEPRI, r3
 8008dda:	f3bf 8f6f 	isb	sy
 8008dde:	f3bf 8f4f 	dsb	sy
 8008de2:	b662      	cpsie	i
 8008de4:	e7fe      	b.n	8008de4 <xTaskCreateStatic+0x56>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8008de6:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008de8:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008dea:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008dec:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008df0:	ad04      	add	r5, sp, #16
 8008df2:	9402      	str	r4, [sp, #8]
 8008df4:	9501      	str	r5, [sp, #4]
 8008df6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8008df8:	9500      	str	r5, [sp, #0]
 8008dfa:	f7ff ff7b 	bl	8008cf4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008dfe:	4620      	mov	r0, r4
 8008e00:	f7ff fe60 	bl	8008ac4 <prvAddNewTaskToReadyList>
	}
 8008e04:	9804      	ldr	r0, [sp, #16]
 8008e06:	b006      	add	sp, #24
 8008e08:	bd70      	pop	{r4, r5, r6, pc}

08008e0a <xTaskCreate>:
	{
 8008e0a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008e0e:	4607      	mov	r7, r0
 8008e10:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008e12:	0090      	lsls	r0, r2, #2
	{
 8008e14:	4688      	mov	r8, r1
 8008e16:	4616      	mov	r6, r2
 8008e18:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008e1a:	f7fe fdfd 	bl	8007a18 <pvPortMalloc>
			if( pxStack != NULL )
 8008e1e:	4605      	mov	r5, r0
 8008e20:	b920      	cbnz	r0, 8008e2c <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008e22:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8008e26:	b005      	add	sp, #20
 8008e28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008e2c:	2060      	movs	r0, #96	@ 0x60
 8008e2e:	f7fe fdf3 	bl	8007a18 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008e32:	4604      	mov	r4, r0
 8008e34:	b198      	cbz	r0, 8008e5e <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008e36:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 8008e38:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008e3a:	4632      	mov	r2, r6
 8008e3c:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008e3e:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008e42:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8008e44:	9002      	str	r0, [sp, #8]
 8008e46:	4638      	mov	r0, r7
 8008e48:	9301      	str	r3, [sp, #4]
 8008e4a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8008e4c:	9300      	str	r3, [sp, #0]
 8008e4e:	464b      	mov	r3, r9
 8008e50:	f7ff ff50 	bl	8008cf4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008e54:	4620      	mov	r0, r4
 8008e56:	f7ff fe35 	bl	8008ac4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008e5a:	2001      	movs	r0, #1
 8008e5c:	e7e3      	b.n	8008e26 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 8008e5e:	4628      	mov	r0, r5
 8008e60:	f7fe fe70 	bl	8007b44 <vPortFree>
		if( pxNewTCB != NULL )
 8008e64:	e7dd      	b.n	8008e22 <xTaskCreate+0x18>
	...

08008e68 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008e68:	4a02      	ldr	r2, [pc, #8]	@ (8008e74 <vTaskSuspendAll+0xc>)
 8008e6a:	6813      	ldr	r3, [r2, #0]
 8008e6c:	3301      	adds	r3, #1
 8008e6e:	6013      	str	r3, [r2, #0]
}
 8008e70:	4770      	bx	lr
 8008e72:	bf00      	nop
 8008e74:	20016540 	.word	0x20016540

08008e78 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008e78:	4b01      	ldr	r3, [pc, #4]	@ (8008e80 <xTaskGetTickCount+0x8>)
 8008e7a:	6818      	ldr	r0, [r3, #0]
}
 8008e7c:	4770      	bx	lr
 8008e7e:	bf00      	nop
 8008e80:	20016560 	.word	0x20016560

08008e84 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008e84:	4b40      	ldr	r3, [pc, #256]	@ (8008f88 <xTaskIncrementTick+0x104>)
 8008e86:	681b      	ldr	r3, [r3, #0]
{
 8008e88:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008e8c:	2b00      	cmp	r3, #0
 8008e8e:	d173      	bne.n	8008f78 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008e90:	4b3e      	ldr	r3, [pc, #248]	@ (8008f8c <xTaskIncrementTick+0x108>)
 8008e92:	681c      	ldr	r4, [r3, #0]
 8008e94:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8008e96:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008e98:	b9cc      	cbnz	r4, 8008ece <xTaskIncrementTick+0x4a>
			taskSWITCH_DELAYED_LISTS();
 8008e9a:	4b3d      	ldr	r3, [pc, #244]	@ (8008f90 <xTaskIncrementTick+0x10c>)
 8008e9c:	681a      	ldr	r2, [r3, #0]
 8008e9e:	6812      	ldr	r2, [r2, #0]
 8008ea0:	b152      	cbz	r2, 8008eb8 <xTaskIncrementTick+0x34>
 8008ea2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ea6:	b672      	cpsid	i
 8008ea8:	f383 8811 	msr	BASEPRI, r3
 8008eac:	f3bf 8f6f 	isb	sy
 8008eb0:	f3bf 8f4f 	dsb	sy
 8008eb4:	b662      	cpsie	i
 8008eb6:	e7fe      	b.n	8008eb6 <xTaskIncrementTick+0x32>
 8008eb8:	4a36      	ldr	r2, [pc, #216]	@ (8008f94 <xTaskIncrementTick+0x110>)
 8008eba:	6819      	ldr	r1, [r3, #0]
 8008ebc:	6810      	ldr	r0, [r2, #0]
 8008ebe:	6018      	str	r0, [r3, #0]
 8008ec0:	6011      	str	r1, [r2, #0]
 8008ec2:	4a35      	ldr	r2, [pc, #212]	@ (8008f98 <xTaskIncrementTick+0x114>)
 8008ec4:	6813      	ldr	r3, [r2, #0]
 8008ec6:	3301      	adds	r3, #1
 8008ec8:	6013      	str	r3, [r2, #0]
 8008eca:	f7ff feb1 	bl	8008c30 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008ece:	4d33      	ldr	r5, [pc, #204]	@ (8008f9c <xTaskIncrementTick+0x118>)
BaseType_t xSwitchRequired = pdFALSE;
 8008ed0:	f04f 0b00 	mov.w	fp, #0
 8008ed4:	4e32      	ldr	r6, [pc, #200]	@ (8008fa0 <xTaskIncrementTick+0x11c>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008ed6:	682b      	ldr	r3, [r5, #0]
 8008ed8:	4f32      	ldr	r7, [pc, #200]	@ (8008fa4 <xTaskIncrementTick+0x120>)
 8008eda:	42a3      	cmp	r3, r4
 8008edc:	d911      	bls.n	8008f02 <xTaskIncrementTick+0x7e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008ede:	683a      	ldr	r2, [r7, #0]
 8008ee0:	2114      	movs	r1, #20
 8008ee2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008ee4:	434a      	muls	r2, r1
 8008ee6:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8008ee8:	2a02      	cmp	r2, #2
 8008eea:	bf28      	it	cs
 8008eec:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 8008ef0:	4a2d      	ldr	r2, [pc, #180]	@ (8008fa8 <xTaskIncrementTick+0x124>)
 8008ef2:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 8008ef4:	2a00      	cmp	r2, #0
}
 8008ef6:	bf0c      	ite	eq
 8008ef8:	4658      	moveq	r0, fp
 8008efa:	2001      	movne	r0, #1
 8008efc:	b003      	add	sp, #12
 8008efe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008f02:	f8df 908c 	ldr.w	r9, [pc, #140]	@ 8008f90 <xTaskIncrementTick+0x10c>
					prvAddTaskToReadyList( pxTCB );
 8008f06:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 8008fb0 <xTaskIncrementTick+0x12c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008f0a:	f8d9 2000 	ldr.w	r2, [r9]
 8008f0e:	6812      	ldr	r2, [r2, #0]
 8008f10:	b91a      	cbnz	r2, 8008f1a <xTaskIncrementTick+0x96>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008f12:	f04f 32ff 	mov.w	r2, #4294967295
 8008f16:	602a      	str	r2, [r5, #0]
					break;
 8008f18:	e7e1      	b.n	8008ede <xTaskIncrementTick+0x5a>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f1a:	f8d9 2000 	ldr.w	r2, [r9]
 8008f1e:	68d2      	ldr	r2, [r2, #12]
 8008f20:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008f24:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8008f28:	428c      	cmp	r4, r1
 8008f2a:	d201      	bcs.n	8008f30 <xTaskIncrementTick+0xac>
						xNextTaskUnblockTime = xItemValue;
 8008f2c:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008f2e:	e7d6      	b.n	8008ede <xTaskIncrementTick+0x5a>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008f30:	f108 0304 	add.w	r3, r8, #4
 8008f34:	4618      	mov	r0, r3
 8008f36:	9301      	str	r3, [sp, #4]
 8008f38:	f7fe fe70 	bl	8007c1c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008f3c:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8008f40:	b119      	cbz	r1, 8008f4a <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008f42:	f108 0018 	add.w	r0, r8, #24
 8008f46:	f7fe fe69 	bl	8007c1c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008f4a:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8008f4e:	f8da 1000 	ldr.w	r1, [sl]
 8008f52:	4288      	cmp	r0, r1
 8008f54:	d901      	bls.n	8008f5a <xTaskIncrementTick+0xd6>
 8008f56:	f8ca 0000 	str.w	r0, [sl]
 8008f5a:	2314      	movs	r3, #20
 8008f5c:	9901      	ldr	r1, [sp, #4]
 8008f5e:	fb03 6000 	mla	r0, r3, r0, r6
 8008f62:	f7fe fe39 	bl	8007bd8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008f66:	6838      	ldr	r0, [r7, #0]
 8008f68:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8008f6c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8008f6e:	4291      	cmp	r1, r2
 8008f70:	bf28      	it	cs
 8008f72:	f04f 0b01 	movcs.w	fp, #1
 8008f76:	e7c8      	b.n	8008f0a <xTaskIncrementTick+0x86>
		++uxPendedTicks;
 8008f78:	4a0c      	ldr	r2, [pc, #48]	@ (8008fac <xTaskIncrementTick+0x128>)
BaseType_t xSwitchRequired = pdFALSE;
 8008f7a:	f04f 0b00 	mov.w	fp, #0
		++uxPendedTicks;
 8008f7e:	6813      	ldr	r3, [r2, #0]
 8008f80:	3301      	adds	r3, #1
 8008f82:	6013      	str	r3, [r2, #0]
 8008f84:	e7b4      	b.n	8008ef0 <xTaskIncrementTick+0x6c>
 8008f86:	bf00      	nop
 8008f88:	20016540 	.word	0x20016540
 8008f8c:	20016560 	.word	0x20016560
 8008f90:	200165ac 	.word	0x200165ac
 8008f94:	200165a8 	.word	0x200165a8
 8008f98:	2001654c 	.word	0x2001654c
 8008f9c:	20016544 	.word	0x20016544
 8008fa0:	200165d8 	.word	0x200165d8
 8008fa4:	20016a38 	.word	0x20016a38
 8008fa8:	20016550 	.word	0x20016550
 8008fac:	20016554 	.word	0x20016554
 8008fb0:	2001655c 	.word	0x2001655c

08008fb4 <xTaskResumeAll>:
{
 8008fb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8008fb8:	4c31      	ldr	r4, [pc, #196]	@ (8009080 <xTaskResumeAll+0xcc>)
 8008fba:	6823      	ldr	r3, [r4, #0]
 8008fbc:	b953      	cbnz	r3, 8008fd4 <xTaskResumeAll+0x20>
 8008fbe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008fc2:	b672      	cpsid	i
 8008fc4:	f383 8811 	msr	BASEPRI, r3
 8008fc8:	f3bf 8f6f 	isb	sy
 8008fcc:	f3bf 8f4f 	dsb	sy
 8008fd0:	b662      	cpsie	i
 8008fd2:	e7fe      	b.n	8008fd2 <xTaskResumeAll+0x1e>
	taskENTER_CRITICAL();
 8008fd4:	f7fe fe9e 	bl	8007d14 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008fd8:	6823      	ldr	r3, [r4, #0]
 8008fda:	3b01      	subs	r3, #1
 8008fdc:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008fde:	6824      	ldr	r4, [r4, #0]
 8008fe0:	b12c      	cbz	r4, 8008fee <xTaskResumeAll+0x3a>
BaseType_t xAlreadyYielded = pdFALSE;
 8008fe2:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008fe4:	f7fe feba 	bl	8007d5c <vPortExitCritical>
}
 8008fe8:	4620      	mov	r0, r4
 8008fea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008fee:	4b25      	ldr	r3, [pc, #148]	@ (8009084 <xTaskResumeAll+0xd0>)
 8008ff0:	681b      	ldr	r3, [r3, #0]
 8008ff2:	2b00      	cmp	r3, #0
 8008ff4:	d0f5      	beq.n	8008fe2 <xTaskResumeAll+0x2e>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008ff6:	4d24      	ldr	r5, [pc, #144]	@ (8009088 <xTaskResumeAll+0xd4>)
					prvAddTaskToReadyList( pxTCB );
 8008ff8:	4e24      	ldr	r6, [pc, #144]	@ (800908c <xTaskResumeAll+0xd8>)
 8008ffa:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800909c <xTaskResumeAll+0xe8>
 8008ffe:	e01d      	b.n	800903c <xTaskResumeAll+0x88>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009000:	68eb      	ldr	r3, [r5, #12]
 8009002:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009004:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009006:	f104 0018 	add.w	r0, r4, #24
 800900a:	f7fe fe07 	bl	8007c1c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800900e:	4638      	mov	r0, r7
 8009010:	f7fe fe04 	bl	8007c1c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009014:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009016:	6832      	ldr	r2, [r6, #0]
 8009018:	4293      	cmp	r3, r2
 800901a:	d900      	bls.n	800901e <xTaskResumeAll+0x6a>
 800901c:	6033      	str	r3, [r6, #0]
 800901e:	2014      	movs	r0, #20
 8009020:	4639      	mov	r1, r7
 8009022:	fb00 8003 	mla	r0, r0, r3, r8
 8009026:	f7fe fdd7 	bl	8007bd8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800902a:	4b19      	ldr	r3, [pc, #100]	@ (8009090 <xTaskResumeAll+0xdc>)
 800902c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800902e:	681b      	ldr	r3, [r3, #0]
 8009030:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009032:	429a      	cmp	r2, r3
 8009034:	d302      	bcc.n	800903c <xTaskResumeAll+0x88>
						xYieldPending = pdTRUE;
 8009036:	4b17      	ldr	r3, [pc, #92]	@ (8009094 <xTaskResumeAll+0xe0>)
 8009038:	2201      	movs	r2, #1
 800903a:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800903c:	682b      	ldr	r3, [r5, #0]
 800903e:	2b00      	cmp	r3, #0
 8009040:	d1de      	bne.n	8009000 <xTaskResumeAll+0x4c>
				if( pxTCB != NULL )
 8009042:	b10c      	cbz	r4, 8009048 <xTaskResumeAll+0x94>
					prvResetNextTaskUnblockTime();
 8009044:	f7ff fdf4 	bl	8008c30 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009048:	4d13      	ldr	r5, [pc, #76]	@ (8009098 <xTaskResumeAll+0xe4>)
 800904a:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800904c:	b144      	cbz	r4, 8009060 <xTaskResumeAll+0xac>
								xYieldPending = pdTRUE;
 800904e:	4e11      	ldr	r6, [pc, #68]	@ (8009094 <xTaskResumeAll+0xe0>)
 8009050:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009052:	f7ff ff17 	bl	8008e84 <xTaskIncrementTick>
 8009056:	b100      	cbz	r0, 800905a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009058:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800905a:	3c01      	subs	r4, #1
 800905c:	d1f9      	bne.n	8009052 <xTaskResumeAll+0x9e>
						uxPendedTicks = 0;
 800905e:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009060:	4b0c      	ldr	r3, [pc, #48]	@ (8009094 <xTaskResumeAll+0xe0>)
 8009062:	681b      	ldr	r3, [r3, #0]
 8009064:	2b00      	cmp	r3, #0
 8009066:	d0bc      	beq.n	8008fe2 <xTaskResumeAll+0x2e>
					taskYIELD_IF_USING_PREEMPTION();
 8009068:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800906c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009070:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009074:	f3bf 8f4f 	dsb	sy
 8009078:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800907c:	2401      	movs	r4, #1
 800907e:	e7b1      	b.n	8008fe4 <xTaskResumeAll+0x30>
 8009080:	20016540 	.word	0x20016540
 8009084:	20016564 	.word	0x20016564
 8009088:	20016594 	.word	0x20016594
 800908c:	2001655c 	.word	0x2001655c
 8009090:	20016a38 	.word	0x20016a38
 8009094:	20016550 	.word	0x20016550
 8009098:	20016554 	.word	0x20016554
 800909c:	200165d8 	.word	0x200165d8

080090a0 <vTaskDelay>:
	{
 80090a0:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80090a2:	b950      	cbnz	r0, 80090ba <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 80090a4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80090a8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80090ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80090b0:	f3bf 8f4f 	dsb	sy
 80090b4:	f3bf 8f6f 	isb	sy
	}
 80090b8:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 80090ba:	4b0b      	ldr	r3, [pc, #44]	@ (80090e8 <vTaskDelay+0x48>)
 80090bc:	6819      	ldr	r1, [r3, #0]
 80090be:	b151      	cbz	r1, 80090d6 <vTaskDelay+0x36>
 80090c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090c4:	b672      	cpsid	i
 80090c6:	f383 8811 	msr	BASEPRI, r3
 80090ca:	f3bf 8f6f 	isb	sy
 80090ce:	f3bf 8f4f 	dsb	sy
 80090d2:	b662      	cpsie	i
 80090d4:	e7fe      	b.n	80090d4 <vTaskDelay+0x34>
			vTaskSuspendAll();
 80090d6:	f7ff fec7 	bl	8008e68 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80090da:	f7ff fd71 	bl	8008bc0 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 80090de:	f7ff ff69 	bl	8008fb4 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 80090e2:	2800      	cmp	r0, #0
 80090e4:	d0de      	beq.n	80090a4 <vTaskDelay+0x4>
 80090e6:	e7e7      	b.n	80090b8 <vTaskDelay+0x18>
 80090e8:	20016540 	.word	0x20016540

080090ec <vTaskSetApplicationTaskTag>:
	{
 80090ec:	b538      	push	{r3, r4, r5, lr}
 80090ee:	460d      	mov	r5, r1
		if( xTask == NULL )
 80090f0:	4604      	mov	r4, r0
 80090f2:	b908      	cbnz	r0, 80090f8 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 80090f4:	4b04      	ldr	r3, [pc, #16]	@ (8009108 <vTaskSetApplicationTaskTag+0x1c>)
 80090f6:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 80090f8:	f7fe fe0c 	bl	8007d14 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 80090fc:	6565      	str	r5, [r4, #84]	@ 0x54
	}
 80090fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8009102:	f7fe be2b 	b.w	8007d5c <vPortExitCritical>
 8009106:	bf00      	nop
 8009108:	20016a38 	.word	0x20016a38

0800910c <xTaskCallApplicationTaskHook>:
	{
 800910c:	4603      	mov	r3, r0
 800910e:	4608      	mov	r0, r1
		if( xTask == NULL )
 8009110:	b90b      	cbnz	r3, 8009116 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 8009112:	4b03      	ldr	r3, [pc, #12]	@ (8009120 <xTaskCallApplicationTaskHook+0x14>)
 8009114:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8009116:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009118:	b103      	cbz	r3, 800911c <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800911a:	4718      	bx	r3
	}
 800911c:	4618      	mov	r0, r3
 800911e:	4770      	bx	lr
 8009120:	20016a38 	.word	0x20016a38

08009124 <vTaskStartScheduler>:
{
 8009124:	b510      	push	{r4, lr}
 8009126:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009128:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800912a:	aa07      	add	r2, sp, #28
 800912c:	a906      	add	r1, sp, #24
 800912e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009130:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009134:	f7fe fc32 	bl	800799c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009138:	9b05      	ldr	r3, [sp, #20]
 800913a:	9a07      	ldr	r2, [sp, #28]
 800913c:	9302      	str	r3, [sp, #8]
 800913e:	9b06      	ldr	r3, [sp, #24]
 8009140:	491b      	ldr	r1, [pc, #108]	@ (80091b0 <vTaskStartScheduler+0x8c>)
 8009142:	481c      	ldr	r0, [pc, #112]	@ (80091b4 <vTaskStartScheduler+0x90>)
 8009144:	e9cd 4300 	strd	r4, r3, [sp]
 8009148:	4623      	mov	r3, r4
 800914a:	f7ff fe20 	bl	8008d8e <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800914e:	b360      	cbz	r0, 80091aa <vTaskStartScheduler+0x86>
			xReturn = xTimerCreateTimerTask();
 8009150:	f000 fa9c 	bl	800968c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009154:	2801      	cmp	r0, #1
 8009156:	d11b      	bne.n	8009190 <vTaskStartScheduler+0x6c>
 8009158:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800915c:	b672      	cpsid	i
 800915e:	f383 8811 	msr	BASEPRI, r3
 8009162:	f3bf 8f6f 	isb	sy
 8009166:	f3bf 8f4f 	dsb	sy
 800916a:	b662      	cpsie	i
		xNextTaskUnblockTime = portMAX_DELAY;
 800916c:	f04f 32ff 	mov.w	r2, #4294967295
 8009170:	4b11      	ldr	r3, [pc, #68]	@ (80091b8 <vTaskStartScheduler+0x94>)
		traceTASK_SWITCHED_IN();
 8009172:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
 8009174:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009176:	4b11      	ldr	r3, [pc, #68]	@ (80091bc <vTaskStartScheduler+0x98>)
 8009178:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800917a:	4b11      	ldr	r3, [pc, #68]	@ (80091c0 <vTaskStartScheduler+0x9c>)
 800917c:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800917e:	4b11      	ldr	r3, [pc, #68]	@ (80091c4 <vTaskStartScheduler+0xa0>)
 8009180:	6818      	ldr	r0, [r3, #0]
 8009182:	f7ff ffc3 	bl	800910c <xTaskCallApplicationTaskHook>
}
 8009186:	b008      	add	sp, #32
 8009188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800918c:	f7fe be5c 	b.w	8007e48 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009190:	3001      	adds	r0, #1
 8009192:	d10a      	bne.n	80091aa <vTaskStartScheduler+0x86>
 8009194:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009198:	b672      	cpsid	i
 800919a:	f383 8811 	msr	BASEPRI, r3
 800919e:	f3bf 8f6f 	isb	sy
 80091a2:	f3bf 8f4f 	dsb	sy
 80091a6:	b662      	cpsie	i
 80091a8:	e7fe      	b.n	80091a8 <vTaskStartScheduler+0x84>
}
 80091aa:	b008      	add	sp, #32
 80091ac:	bd10      	pop	{r4, pc}
 80091ae:	bf00      	nop
 80091b0:	08023fa0 	.word	0x08023fa0
 80091b4:	08008c91 	.word	0x08008c91
 80091b8:	20016544 	.word	0x20016544
 80091bc:	20016558 	.word	0x20016558
 80091c0:	20016560 	.word	0x20016560
 80091c4:	20016a38 	.word	0x20016a38

080091c8 <vTaskSwitchContext>:
{
 80091c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80091ca:	4b1d      	ldr	r3, [pc, #116]	@ (8009240 <vTaskSwitchContext+0x78>)
 80091cc:	681a      	ldr	r2, [r3, #0]
 80091ce:	4b1d      	ldr	r3, [pc, #116]	@ (8009244 <vTaskSwitchContext+0x7c>)
 80091d0:	b112      	cbz	r2, 80091d8 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80091d2:	2201      	movs	r2, #1
 80091d4:	601a      	str	r2, [r3, #0]
}
 80091d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 80091d8:	4c1b      	ldr	r4, [pc, #108]	@ (8009248 <vTaskSwitchContext+0x80>)
 80091da:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80091dc:	4e1b      	ldr	r6, [pc, #108]	@ (800924c <vTaskSwitchContext+0x84>)
 80091de:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
 80091e0:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 80091e2:	6820      	ldr	r0, [r4, #0]
 80091e4:	f7ff ff92 	bl	800910c <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80091e8:	6832      	ldr	r2, [r6, #0]
 80091ea:	4919      	ldr	r1, [pc, #100]	@ (8009250 <vTaskSwitchContext+0x88>)
 80091ec:	fb07 f302 	mul.w	r3, r7, r2
 80091f0:	58cd      	ldr	r5, [r1, r3]
 80091f2:	18c8      	adds	r0, r1, r3
 80091f4:	b1ad      	cbz	r5, 8009222 <vTaskSwitchContext+0x5a>
 80091f6:	6845      	ldr	r5, [r0, #4]
 80091f8:	3308      	adds	r3, #8
 80091fa:	686d      	ldr	r5, [r5, #4]
 80091fc:	440b      	add	r3, r1
 80091fe:	429d      	cmp	r5, r3
 8009200:	6045      	str	r5, [r0, #4]
 8009202:	bf04      	itt	eq
 8009204:	686b      	ldreq	r3, [r5, #4]
 8009206:	6043      	streq	r3, [r0, #4]
 8009208:	2314      	movs	r3, #20
 800920a:	fb03 1102 	mla	r1, r3, r2, r1
 800920e:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
 8009210:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009212:	68db      	ldr	r3, [r3, #12]
 8009214:	6023      	str	r3, [r4, #0]
 8009216:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 8009218:	6820      	ldr	r0, [r4, #0]
}
 800921a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800921e:	f7ff bf75 	b.w	800910c <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009222:	b952      	cbnz	r2, 800923a <vTaskSwitchContext+0x72>
 8009224:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009228:	b672      	cpsid	i
 800922a:	f383 8811 	msr	BASEPRI, r3
 800922e:	f3bf 8f6f 	isb	sy
 8009232:	f3bf 8f4f 	dsb	sy
 8009236:	b662      	cpsie	i
 8009238:	e7fe      	b.n	8009238 <vTaskSwitchContext+0x70>
 800923a:	3a01      	subs	r2, #1
 800923c:	e7d6      	b.n	80091ec <vTaskSwitchContext+0x24>
 800923e:	bf00      	nop
 8009240:	20016540 	.word	0x20016540
 8009244:	20016550 	.word	0x20016550
 8009248:	20016a38 	.word	0x20016a38
 800924c:	2001655c 	.word	0x2001655c
 8009250:	200165d8 	.word	0x200165d8

08009254 <vTaskPlaceOnEventList>:
{
 8009254:	b510      	push	{r4, lr}
 8009256:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009258:	b950      	cbnz	r0, 8009270 <vTaskPlaceOnEventList+0x1c>
 800925a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800925e:	b672      	cpsid	i
 8009260:	f383 8811 	msr	BASEPRI, r3
 8009264:	f3bf 8f6f 	isb	sy
 8009268:	f3bf 8f4f 	dsb	sy
 800926c:	b662      	cpsie	i
 800926e:	e7fe      	b.n	800926e <vTaskPlaceOnEventList+0x1a>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009270:	4b05      	ldr	r3, [pc, #20]	@ (8009288 <vTaskPlaceOnEventList+0x34>)
 8009272:	6819      	ldr	r1, [r3, #0]
 8009274:	3118      	adds	r1, #24
 8009276:	f7fe fcba 	bl	8007bee <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800927a:	4620      	mov	r0, r4
 800927c:	2101      	movs	r1, #1
}
 800927e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009282:	f7ff bc9d 	b.w	8008bc0 <prvAddCurrentTaskToDelayedList>
 8009286:	bf00      	nop
 8009288:	20016a38 	.word	0x20016a38

0800928c <vTaskPlaceOnEventListRestricted>:
	{
 800928c:	b538      	push	{r3, r4, r5, lr}
 800928e:	460d      	mov	r5, r1
 8009290:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009292:	b950      	cbnz	r0, 80092aa <vTaskPlaceOnEventListRestricted+0x1e>
 8009294:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009298:	b672      	cpsid	i
 800929a:	f383 8811 	msr	BASEPRI, r3
 800929e:	f3bf 8f6f 	isb	sy
 80092a2:	f3bf 8f4f 	dsb	sy
 80092a6:	b662      	cpsie	i
 80092a8:	e7fe      	b.n	80092a8 <vTaskPlaceOnEventListRestricted+0x1c>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80092aa:	4b07      	ldr	r3, [pc, #28]	@ (80092c8 <vTaskPlaceOnEventListRestricted+0x3c>)
 80092ac:	6819      	ldr	r1, [r3, #0]
 80092ae:	3118      	adds	r1, #24
 80092b0:	f7fe fc92 	bl	8007bd8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 80092b4:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80092b6:	4621      	mov	r1, r4
 80092b8:	bf0c      	ite	eq
 80092ba:	4628      	moveq	r0, r5
 80092bc:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80092c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80092c4:	f7ff bc7c 	b.w	8008bc0 <prvAddCurrentTaskToDelayedList>
 80092c8:	20016a38 	.word	0x20016a38

080092cc <xTaskRemoveFromEventList>:
{
 80092cc:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80092ce:	68c3      	ldr	r3, [r0, #12]
 80092d0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80092d2:	b954      	cbnz	r4, 80092ea <xTaskRemoveFromEventList+0x1e>
 80092d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092d8:	b672      	cpsid	i
 80092da:	f383 8811 	msr	BASEPRI, r3
 80092de:	f3bf 8f6f 	isb	sy
 80092e2:	f3bf 8f4f 	dsb	sy
 80092e6:	b662      	cpsie	i
 80092e8:	e7fe      	b.n	80092e8 <xTaskRemoveFromEventList+0x1c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80092ea:	f104 0518 	add.w	r5, r4, #24
 80092ee:	4628      	mov	r0, r5
 80092f0:	f7fe fc94 	bl	8007c1c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80092f4:	4b11      	ldr	r3, [pc, #68]	@ (800933c <xTaskRemoveFromEventList+0x70>)
 80092f6:	681b      	ldr	r3, [r3, #0]
 80092f8:	b9d3      	cbnz	r3, 8009330 <xTaskRemoveFromEventList+0x64>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80092fa:	1d25      	adds	r5, r4, #4
 80092fc:	4628      	mov	r0, r5
 80092fe:	f7fe fc8d 	bl	8007c1c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009302:	4a0f      	ldr	r2, [pc, #60]	@ (8009340 <xTaskRemoveFromEventList+0x74>)
 8009304:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009306:	6811      	ldr	r1, [r2, #0]
 8009308:	428b      	cmp	r3, r1
 800930a:	d900      	bls.n	800930e <xTaskRemoveFromEventList+0x42>
 800930c:	6013      	str	r3, [r2, #0]
 800930e:	2014      	movs	r0, #20
 8009310:	4a0c      	ldr	r2, [pc, #48]	@ (8009344 <xTaskRemoveFromEventList+0x78>)
 8009312:	4629      	mov	r1, r5
 8009314:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009318:	f7fe fc5e 	bl	8007bd8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800931c:	4b0a      	ldr	r3, [pc, #40]	@ (8009348 <xTaskRemoveFromEventList+0x7c>)
 800931e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8009320:	681b      	ldr	r3, [r3, #0]
 8009322:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009324:	429a      	cmp	r2, r3
 8009326:	d906      	bls.n	8009336 <xTaskRemoveFromEventList+0x6a>
		xYieldPending = pdTRUE;
 8009328:	2001      	movs	r0, #1
 800932a:	4b08      	ldr	r3, [pc, #32]	@ (800934c <xTaskRemoveFromEventList+0x80>)
 800932c:	6018      	str	r0, [r3, #0]
}
 800932e:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009330:	4629      	mov	r1, r5
 8009332:	4807      	ldr	r0, [pc, #28]	@ (8009350 <xTaskRemoveFromEventList+0x84>)
 8009334:	e7f0      	b.n	8009318 <xTaskRemoveFromEventList+0x4c>
		xReturn = pdFALSE;
 8009336:	2000      	movs	r0, #0
	return xReturn;
 8009338:	e7f9      	b.n	800932e <xTaskRemoveFromEventList+0x62>
 800933a:	bf00      	nop
 800933c:	20016540 	.word	0x20016540
 8009340:	2001655c 	.word	0x2001655c
 8009344:	200165d8 	.word	0x200165d8
 8009348:	20016a38 	.word	0x20016a38
 800934c:	20016550 	.word	0x20016550
 8009350:	20016594 	.word	0x20016594

08009354 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009354:	4b03      	ldr	r3, [pc, #12]	@ (8009364 <vTaskInternalSetTimeOutState+0x10>)
 8009356:	681b      	ldr	r3, [r3, #0]
 8009358:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800935a:	4b03      	ldr	r3, [pc, #12]	@ (8009368 <vTaskInternalSetTimeOutState+0x14>)
 800935c:	681b      	ldr	r3, [r3, #0]
 800935e:	6043      	str	r3, [r0, #4]
}
 8009360:	4770      	bx	lr
 8009362:	bf00      	nop
 8009364:	2001654c 	.word	0x2001654c
 8009368:	20016560 	.word	0x20016560

0800936c <xTaskCheckForTimeOut>:
{
 800936c:	b570      	push	{r4, r5, r6, lr}
 800936e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009370:	4605      	mov	r5, r0
 8009372:	b950      	cbnz	r0, 800938a <xTaskCheckForTimeOut+0x1e>
 8009374:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009378:	b672      	cpsid	i
 800937a:	f383 8811 	msr	BASEPRI, r3
 800937e:	f3bf 8f6f 	isb	sy
 8009382:	f3bf 8f4f 	dsb	sy
 8009386:	b662      	cpsie	i
 8009388:	e7fe      	b.n	8009388 <xTaskCheckForTimeOut+0x1c>
	configASSERT( pxTicksToWait );
 800938a:	b951      	cbnz	r1, 80093a2 <xTaskCheckForTimeOut+0x36>
 800938c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009390:	b672      	cpsid	i
 8009392:	f383 8811 	msr	BASEPRI, r3
 8009396:	f3bf 8f6f 	isb	sy
 800939a:	f3bf 8f4f 	dsb	sy
 800939e:	b662      	cpsie	i
 80093a0:	e7fe      	b.n	80093a0 <xTaskCheckForTimeOut+0x34>
	taskENTER_CRITICAL();
 80093a2:	f7fe fcb7 	bl	8007d14 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80093a6:	4b0f      	ldr	r3, [pc, #60]	@ (80093e4 <xTaskCheckForTimeOut+0x78>)
 80093a8:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80093aa:	6823      	ldr	r3, [r4, #0]
 80093ac:	1c5a      	adds	r2, r3, #1
 80093ae:	d010      	beq.n	80093d2 <xTaskCheckForTimeOut+0x66>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80093b0:	480d      	ldr	r0, [pc, #52]	@ (80093e8 <xTaskCheckForTimeOut+0x7c>)
 80093b2:	682e      	ldr	r6, [r5, #0]
 80093b4:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80093b6:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80093b8:	4286      	cmp	r6, r0
 80093ba:	d001      	beq.n	80093c0 <xTaskCheckForTimeOut+0x54>
 80093bc:	428a      	cmp	r2, r1
 80093be:	d90f      	bls.n	80093e0 <xTaskCheckForTimeOut+0x74>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80093c0:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80093c2:	4283      	cmp	r3, r0
 80093c4:	d90a      	bls.n	80093dc <xTaskCheckForTimeOut+0x70>
			*pxTicksToWait -= xElapsedTime;
 80093c6:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
 80093c8:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 80093ca:	4413      	add	r3, r2
 80093cc:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80093ce:	f7ff ffc1 	bl	8009354 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80093d2:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80093d4:	f7fe fcc2 	bl	8007d5c <vPortExitCritical>
}
 80093d8:	4620      	mov	r0, r4
 80093da:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 80093dc:	2300      	movs	r3, #0
 80093de:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80093e0:	2401      	movs	r4, #1
 80093e2:	e7f7      	b.n	80093d4 <xTaskCheckForTimeOut+0x68>
 80093e4:	20016560 	.word	0x20016560
 80093e8:	2001654c 	.word	0x2001654c

080093ec <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80093ec:	4b01      	ldr	r3, [pc, #4]	@ (80093f4 <vTaskMissedYield+0x8>)
 80093ee:	2201      	movs	r2, #1
 80093f0:	601a      	str	r2, [r3, #0]
}
 80093f2:	4770      	bx	lr
 80093f4:	20016550 	.word	0x20016550

080093f8 <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
 80093f8:	4b01      	ldr	r3, [pc, #4]	@ (8009400 <xTaskGetCurrentTaskHandle+0x8>)
 80093fa:	6818      	ldr	r0, [r3, #0]
	}
 80093fc:	4770      	bx	lr
 80093fe:	bf00      	nop
 8009400:	20016a38 	.word	0x20016a38

08009404 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009404:	4b05      	ldr	r3, [pc, #20]	@ (800941c <xTaskGetSchedulerState+0x18>)
 8009406:	681b      	ldr	r3, [r3, #0]
 8009408:	b133      	cbz	r3, 8009418 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800940a:	4b05      	ldr	r3, [pc, #20]	@ (8009420 <xTaskGetSchedulerState+0x1c>)
 800940c:	6818      	ldr	r0, [r3, #0]
 800940e:	fab0 f080 	clz	r0, r0
 8009412:	0940      	lsrs	r0, r0, #5
 8009414:	0040      	lsls	r0, r0, #1
 8009416:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009418:	2001      	movs	r0, #1
	}
 800941a:	4770      	bx	lr
 800941c:	20016558 	.word	0x20016558
 8009420:	20016540 	.word	0x20016540

08009424 <xTaskPriorityInherit>:
	{
 8009424:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8009426:	4604      	mov	r4, r0
 8009428:	b338      	cbz	r0, 800947a <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800942a:	4d1a      	ldr	r5, [pc, #104]	@ (8009494 <xTaskPriorityInherit+0x70>)
 800942c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800942e:	682a      	ldr	r2, [r5, #0]
 8009430:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009432:	4293      	cmp	r3, r2
 8009434:	d226      	bcs.n	8009484 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009436:	6982      	ldr	r2, [r0, #24]
 8009438:	2a00      	cmp	r2, #0
 800943a:	db04      	blt.n	8009446 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800943c:	682a      	ldr	r2, [r5, #0]
 800943e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009440:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
 8009444:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009446:	2214      	movs	r2, #20
 8009448:	4e13      	ldr	r6, [pc, #76]	@ (8009498 <xTaskPriorityInherit+0x74>)
 800944a:	fb02 6303 	mla	r3, r2, r3, r6
 800944e:	6962      	ldr	r2, [r4, #20]
 8009450:	429a      	cmp	r2, r3
 8009452:	d113      	bne.n	800947c <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009454:	1d27      	adds	r7, r4, #4
 8009456:	4638      	mov	r0, r7
 8009458:	f7fe fbe0 	bl	8007c1c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800945c:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800945e:	4a0f      	ldr	r2, [pc, #60]	@ (800949c <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009460:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009462:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009464:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009466:	428b      	cmp	r3, r1
 8009468:	d900      	bls.n	800946c <xTaskPriorityInherit+0x48>
 800946a:	6013      	str	r3, [r2, #0]
 800946c:	2014      	movs	r0, #20
 800946e:	4639      	mov	r1, r7
 8009470:	fb00 6003 	mla	r0, r0, r3, r6
 8009474:	f7fe fbb0 	bl	8007bd8 <vListInsertEnd>
				xReturn = pdTRUE;
 8009478:	2001      	movs	r0, #1
	}
 800947a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800947c:	682b      	ldr	r3, [r5, #0]
 800947e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009480:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8009482:	e7f9      	b.n	8009478 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009484:	682b      	ldr	r3, [r5, #0]
 8009486:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8009488:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800948a:	4298      	cmp	r0, r3
 800948c:	bf2c      	ite	cs
 800948e:	2000      	movcs	r0, #0
 8009490:	2001      	movcc	r0, #1
 8009492:	e7f2      	b.n	800947a <xTaskPriorityInherit+0x56>
 8009494:	20016a38 	.word	0x20016a38
 8009498:	200165d8 	.word	0x200165d8
 800949c:	2001655c 	.word	0x2001655c

080094a0 <xTaskPriorityDisinherit>:
	{
 80094a0:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 80094a2:	b908      	cbnz	r0, 80094a8 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 80094a4:	2000      	movs	r0, #0
	}
 80094a6:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 80094a8:	4b1d      	ldr	r3, [pc, #116]	@ (8009520 <xTaskPriorityDisinherit+0x80>)
 80094aa:	681c      	ldr	r4, [r3, #0]
 80094ac:	4284      	cmp	r4, r0
 80094ae:	d00a      	beq.n	80094c6 <xTaskPriorityDisinherit+0x26>
 80094b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094b4:	b672      	cpsid	i
 80094b6:	f383 8811 	msr	BASEPRI, r3
 80094ba:	f3bf 8f6f 	isb	sy
 80094be:	f3bf 8f4f 	dsb	sy
 80094c2:	b662      	cpsie	i
 80094c4:	e7fe      	b.n	80094c4 <xTaskPriorityDisinherit+0x24>
			configASSERT( pxTCB->uxMutexesHeld );
 80094c6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80094c8:	b953      	cbnz	r3, 80094e0 <xTaskPriorityDisinherit+0x40>
 80094ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094ce:	b672      	cpsid	i
 80094d0:	f383 8811 	msr	BASEPRI, r3
 80094d4:	f3bf 8f6f 	isb	sy
 80094d8:	f3bf 8f4f 	dsb	sy
 80094dc:	b662      	cpsie	i
 80094de:	e7fe      	b.n	80094de <xTaskPriorityDisinherit+0x3e>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80094e0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
 80094e2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80094e4:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 80094e6:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80094e8:	4291      	cmp	r1, r2
 80094ea:	d0db      	beq.n	80094a4 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80094ec:	2b00      	cmp	r3, #0
 80094ee:	d1d9      	bne.n	80094a4 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80094f0:	1d25      	adds	r5, r4, #4
 80094f2:	4628      	mov	r0, r5
 80094f4:	f7fe fb92 	bl	8007c1c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80094f8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80094fa:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80094fe:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009500:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009502:	4a08      	ldr	r2, [pc, #32]	@ (8009524 <xTaskPriorityDisinherit+0x84>)
 8009504:	6811      	ldr	r1, [r2, #0]
 8009506:	428b      	cmp	r3, r1
 8009508:	d900      	bls.n	800950c <xTaskPriorityDisinherit+0x6c>
 800950a:	6013      	str	r3, [r2, #0]
 800950c:	4a06      	ldr	r2, [pc, #24]	@ (8009528 <xTaskPriorityDisinherit+0x88>)
 800950e:	2014      	movs	r0, #20
 8009510:	4629      	mov	r1, r5
 8009512:	fb00 2003 	mla	r0, r0, r3, r2
 8009516:	f7fe fb5f 	bl	8007bd8 <vListInsertEnd>
					xReturn = pdTRUE;
 800951a:	2001      	movs	r0, #1
		return xReturn;
 800951c:	e7c3      	b.n	80094a6 <xTaskPriorityDisinherit+0x6>
 800951e:	bf00      	nop
 8009520:	20016a38 	.word	0x20016a38
 8009524:	2001655c 	.word	0x2001655c
 8009528:	200165d8 	.word	0x200165d8

0800952c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800952c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800952e:	4604      	mov	r4, r0
 8009530:	2800      	cmp	r0, #0
 8009532:	d046      	beq.n	80095c2 <vTaskPriorityDisinheritAfterTimeout+0x96>
			configASSERT( pxTCB->uxMutexesHeld );
 8009534:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8009536:	b952      	cbnz	r2, 800954e <vTaskPriorityDisinheritAfterTimeout+0x22>
 8009538:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800953c:	b672      	cpsid	i
 800953e:	f383 8811 	msr	BASEPRI, r3
 8009542:	f3bf 8f6f 	isb	sy
 8009546:	f3bf 8f4f 	dsb	sy
 800954a:	b662      	cpsie	i
 800954c:	e7fe      	b.n	800954c <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800954e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8009550:	4299      	cmp	r1, r3
 8009552:	bf38      	it	cc
 8009554:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009556:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8009558:	428b      	cmp	r3, r1
 800955a:	d032      	beq.n	80095c2 <vTaskPriorityDisinheritAfterTimeout+0x96>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800955c:	2a01      	cmp	r2, #1
 800955e:	d130      	bne.n	80095c2 <vTaskPriorityDisinheritAfterTimeout+0x96>
					configASSERT( pxTCB != pxCurrentTCB );
 8009560:	4a18      	ldr	r2, [pc, #96]	@ (80095c4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009562:	6812      	ldr	r2, [r2, #0]
 8009564:	4282      	cmp	r2, r0
 8009566:	d10a      	bne.n	800957e <vTaskPriorityDisinheritAfterTimeout+0x52>
 8009568:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800956c:	b672      	cpsid	i
 800956e:	f383 8811 	msr	BASEPRI, r3
 8009572:	f3bf 8f6f 	isb	sy
 8009576:	f3bf 8f4f 	dsb	sy
 800957a:	b662      	cpsie	i
 800957c:	e7fe      	b.n	800957c <vTaskPriorityDisinheritAfterTimeout+0x50>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800957e:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009580:	4d11      	ldr	r5, [pc, #68]	@ (80095c8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009582:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009584:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 8009588:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800958a:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800958e:	bfa8      	it	ge
 8009590:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009594:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009596:	bfa8      	it	ge
 8009598:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800959a:	429a      	cmp	r2, r3
 800959c:	d111      	bne.n	80095c2 <vTaskPriorityDisinheritAfterTimeout+0x96>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800959e:	1d06      	adds	r6, r0, #4
 80095a0:	4630      	mov	r0, r6
 80095a2:	f7fe fb3b 	bl	8007c1c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80095a6:	4a09      	ldr	r2, [pc, #36]	@ (80095cc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 80095a8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80095aa:	6811      	ldr	r1, [r2, #0]
 80095ac:	428b      	cmp	r3, r1
 80095ae:	d900      	bls.n	80095b2 <vTaskPriorityDisinheritAfterTimeout+0x86>
 80095b0:	6013      	str	r3, [r2, #0]
 80095b2:	2014      	movs	r0, #20
 80095b4:	4631      	mov	r1, r6
 80095b6:	fb00 5003 	mla	r0, r0, r3, r5
	}
 80095ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 80095be:	f7fe bb0b 	b.w	8007bd8 <vListInsertEnd>
	}
 80095c2:	bd70      	pop	{r4, r5, r6, pc}
 80095c4:	20016a38 	.word	0x20016a38
 80095c8:	200165d8 	.word	0x200165d8
 80095cc:	2001655c 	.word	0x2001655c

080095d0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80095d0:	4b04      	ldr	r3, [pc, #16]	@ (80095e4 <pvTaskIncrementMutexHeldCount+0x14>)
 80095d2:	681a      	ldr	r2, [r3, #0]
 80095d4:	b11a      	cbz	r2, 80095de <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80095d6:	6819      	ldr	r1, [r3, #0]
 80095d8:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 80095da:	3201      	adds	r2, #1
 80095dc:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 80095de:	6818      	ldr	r0, [r3, #0]
	}
 80095e0:	4770      	bx	lr
 80095e2:	bf00      	nop
 80095e4:	20016a38 	.word	0x20016a38

080095e8 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 80095e8:	4291      	cmp	r1, r2
{
 80095ea:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80095ec:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80095ee:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 80095f0:	d80a      	bhi.n	8009608 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80095f2:	1ad2      	subs	r2, r2, r3
 80095f4:	6983      	ldr	r3, [r0, #24]
 80095f6:	429a      	cmp	r2, r3
 80095f8:	d20d      	bcs.n	8009616 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80095fa:	1d01      	adds	r1, r0, #4
 80095fc:	4b07      	ldr	r3, [pc, #28]	@ (800961c <prvInsertTimerInActiveList+0x34>)
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80095fe:	6818      	ldr	r0, [r3, #0]
 8009600:	f7fe faf5 	bl	8007bee <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009604:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8009606:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009608:	429a      	cmp	r2, r3
 800960a:	d201      	bcs.n	8009610 <prvInsertTimerInActiveList+0x28>
 800960c:	4299      	cmp	r1, r3
 800960e:	d202      	bcs.n	8009616 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009610:	1d01      	adds	r1, r0, #4
 8009612:	4b03      	ldr	r3, [pc, #12]	@ (8009620 <prvInsertTimerInActiveList+0x38>)
 8009614:	e7f3      	b.n	80095fe <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009616:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009618:	e7f5      	b.n	8009606 <prvInsertTimerInActiveList+0x1e>
 800961a:	bf00      	nop
 800961c:	20016b38 	.word	0x20016b38
 8009620:	20016b3c 	.word	0x20016b3c

08009624 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009624:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009626:	4c11      	ldr	r4, [pc, #68]	@ (800966c <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009628:	f7fe fb74 	bl	8007d14 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800962c:	6825      	ldr	r5, [r4, #0]
 800962e:	b9bd      	cbnz	r5, 8009660 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009630:	4f0f      	ldr	r7, [pc, #60]	@ (8009670 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009632:	4e10      	ldr	r6, [pc, #64]	@ (8009674 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009634:	4638      	mov	r0, r7
 8009636:	f7fe fac1 	bl	8007bbc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800963a:	4630      	mov	r0, r6
 800963c:	f7fe fabe 	bl	8007bbc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009640:	4b0d      	ldr	r3, [pc, #52]	@ (8009678 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009642:	4a0e      	ldr	r2, [pc, #56]	@ (800967c <prvCheckForValidListAndQueue+0x58>)
 8009644:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 8009646:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009648:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 800964a:	4b0d      	ldr	r3, [pc, #52]	@ (8009680 <prvCheckForValidListAndQueue+0x5c>)
 800964c:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800964e:	4b0d      	ldr	r3, [pc, #52]	@ (8009684 <prvCheckForValidListAndQueue+0x60>)
 8009650:	9500      	str	r5, [sp, #0]
 8009652:	f7fe fda5 	bl	80081a0 <xQueueGenericCreateStatic>
 8009656:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009658:	b110      	cbz	r0, 8009660 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800965a:	490b      	ldr	r1, [pc, #44]	@ (8009688 <prvCheckForValidListAndQueue+0x64>)
 800965c:	f7ff f9ce 	bl	80089fc <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009660:	b003      	add	sp, #12
 8009662:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009666:	f7fe bb79 	b.w	8007d5c <vPortExitCritical>
 800966a:	bf00      	nop
 800966c:	20016b34 	.word	0x20016b34
 8009670:	20016b54 	.word	0x20016b54
 8009674:	20016b40 	.word	0x20016b40
 8009678:	20016b3c 	.word	0x20016b3c
 800967c:	20016a8c 	.word	0x20016a8c
 8009680:	20016b38 	.word	0x20016b38
 8009684:	20016a3c 	.word	0x20016a3c
 8009688:	08023fa5 	.word	0x08023fa5

0800968c <xTimerCreateTimerTask>:
{
 800968c:	b510      	push	{r4, lr}
 800968e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009690:	f7ff ffc8 	bl	8009624 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009694:	4b13      	ldr	r3, [pc, #76]	@ (80096e4 <xTimerCreateTimerTask+0x58>)
 8009696:	681b      	ldr	r3, [r3, #0]
 8009698:	b1b3      	cbz	r3, 80096c8 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800969a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800969c:	aa07      	add	r2, sp, #28
 800969e:	a906      	add	r1, sp, #24
 80096a0:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80096a2:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80096a6:	f7fe f985 	bl	80079b4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80096aa:	9b05      	ldr	r3, [sp, #20]
 80096ac:	9a07      	ldr	r2, [sp, #28]
 80096ae:	9302      	str	r3, [sp, #8]
 80096b0:	9b06      	ldr	r3, [sp, #24]
 80096b2:	490d      	ldr	r1, [pc, #52]	@ (80096e8 <xTimerCreateTimerTask+0x5c>)
 80096b4:	9301      	str	r3, [sp, #4]
 80096b6:	2302      	movs	r3, #2
 80096b8:	480c      	ldr	r0, [pc, #48]	@ (80096ec <xTimerCreateTimerTask+0x60>)
 80096ba:	9300      	str	r3, [sp, #0]
 80096bc:	4623      	mov	r3, r4
 80096be:	f7ff fb66 	bl	8008d8e <xTaskCreateStatic>
 80096c2:	4b0b      	ldr	r3, [pc, #44]	@ (80096f0 <xTimerCreateTimerTask+0x64>)
 80096c4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80096c6:	b950      	cbnz	r0, 80096de <xTimerCreateTimerTask+0x52>
 80096c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80096cc:	b672      	cpsid	i
 80096ce:	f383 8811 	msr	BASEPRI, r3
 80096d2:	f3bf 8f6f 	isb	sy
 80096d6:	f3bf 8f4f 	dsb	sy
 80096da:	b662      	cpsie	i
	configASSERT( xReturn );
 80096dc:	e7fe      	b.n	80096dc <xTimerCreateTimerTask+0x50>
}
 80096de:	2001      	movs	r0, #1
 80096e0:	b008      	add	sp, #32
 80096e2:	bd10      	pop	{r4, pc}
 80096e4:	20016b34 	.word	0x20016b34
 80096e8:	08023faa 	.word	0x08023faa
 80096ec:	080097f5 	.word	0x080097f5
 80096f0:	20016b30 	.word	0x20016b30

080096f4 <xTimerGenericCommand>:
{
 80096f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80096f6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 80096f8:	4604      	mov	r4, r0
{
 80096fa:	461a      	mov	r2, r3
	configASSERT( xTimer );
 80096fc:	b950      	cbnz	r0, 8009714 <xTimerGenericCommand+0x20>
 80096fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009702:	b672      	cpsid	i
 8009704:	f383 8811 	msr	BASEPRI, r3
 8009708:	f3bf 8f6f 	isb	sy
 800970c:	f3bf 8f4f 	dsb	sy
 8009710:	b662      	cpsie	i
 8009712:	e7fe      	b.n	8009712 <xTimerGenericCommand+0x1e>
	if( xTimerQueue != NULL )
 8009714:	4d0c      	ldr	r5, [pc, #48]	@ (8009748 <xTimerGenericCommand+0x54>)
 8009716:	6828      	ldr	r0, [r5, #0]
 8009718:	b178      	cbz	r0, 800973a <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800971a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800971c:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800971e:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009722:	dc0c      	bgt.n	800973e <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009724:	f7ff fe6e 	bl	8009404 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009728:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800972a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800972c:	4669      	mov	r1, sp
 800972e:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009730:	bf0c      	ite	eq
 8009732:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009734:	461a      	movne	r2, r3
 8009736:	f7fe fdb8 	bl	80082aa <xQueueGenericSend>
}
 800973a:	b004      	add	sp, #16
 800973c:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800973e:	2300      	movs	r3, #0
 8009740:	4669      	mov	r1, sp
 8009742:	f7fe febf 	bl	80084c4 <xQueueGenericSendFromISR>
 8009746:	e7f8      	b.n	800973a <xTimerGenericCommand+0x46>
 8009748:	20016b34 	.word	0x20016b34

0800974c <prvSampleTimeNow>:
{
 800974c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009750:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 80097f0 <prvSampleTimeNow+0xa4>
{
 8009754:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8009756:	f7ff fb8f 	bl	8008e78 <xTaskGetTickCount>
 800975a:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800975c:	f8d8 3000 	ldr.w	r3, [r8]
 8009760:	4283      	cmp	r3, r0
 8009762:	d909      	bls.n	8009778 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009764:	4f20      	ldr	r7, [pc, #128]	@ (80097e8 <prvSampleTimeNow+0x9c>)
 8009766:	683b      	ldr	r3, [r7, #0]
 8009768:	681a      	ldr	r2, [r3, #0]
 800976a:	b96a      	cbnz	r2, 8009788 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800976c:	4a1f      	ldr	r2, [pc, #124]	@ (80097ec <prvSampleTimeNow+0xa0>)
 800976e:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 8009770:	6013      	str	r3, [r2, #0]
 8009772:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
 8009774:	6039      	str	r1, [r7, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009776:	e000      	b.n	800977a <prvSampleTimeNow+0x2e>
 8009778:	2300      	movs	r3, #0
}
 800977a:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800977c:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800977e:	f8c8 5000 	str.w	r5, [r8]
}
 8009782:	b002      	add	sp, #8
 8009784:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009788:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800978a:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800978c:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009790:	f104 0a04 	add.w	sl, r4, #4
 8009794:	4650      	mov	r0, sl
 8009796:	f7fe fa41 	bl	8007c1c <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800979a:	6a23      	ldr	r3, [r4, #32]
 800979c:	4620      	mov	r0, r4
 800979e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80097a0:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80097a4:	075b      	lsls	r3, r3, #29
 80097a6:	d5de      	bpl.n	8009766 <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80097a8:	69a3      	ldr	r3, [r4, #24]
 80097aa:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 80097ac:	4599      	cmp	r9, r3
 80097ae:	d206      	bcs.n	80097be <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80097b0:	4651      	mov	r1, sl
 80097b2:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80097b4:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80097b6:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80097b8:	f7fe fa19 	bl	8007bee <vListInsert>
 80097bc:	e7d3      	b.n	8009766 <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80097be:	2300      	movs	r3, #0
 80097c0:	464a      	mov	r2, r9
 80097c2:	4620      	mov	r0, r4
 80097c4:	4619      	mov	r1, r3
 80097c6:	9300      	str	r3, [sp, #0]
 80097c8:	f7ff ff94 	bl	80096f4 <xTimerGenericCommand>
				configASSERT( xResult );
 80097cc:	2800      	cmp	r0, #0
 80097ce:	d1ca      	bne.n	8009766 <prvSampleTimeNow+0x1a>
 80097d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097d4:	b672      	cpsid	i
 80097d6:	f383 8811 	msr	BASEPRI, r3
 80097da:	f3bf 8f6f 	isb	sy
 80097de:	f3bf 8f4f 	dsb	sy
 80097e2:	b662      	cpsie	i
 80097e4:	e7fe      	b.n	80097e4 <prvSampleTimeNow+0x98>
 80097e6:	bf00      	nop
 80097e8:	20016b3c 	.word	0x20016b3c
 80097ec:	20016b38 	.word	0x20016b38
 80097f0:	20016b2c 	.word	0x20016b2c

080097f4 <prvTimerTask>:
{
 80097f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80097f8:	4d71      	ldr	r5, [pc, #452]	@ (80099c0 <prvTimerTask+0x1cc>)
{
 80097fa:	b089      	sub	sp, #36	@ 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80097fc:	4e71      	ldr	r6, [pc, #452]	@ (80099c4 <prvTimerTask+0x1d0>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80097fe:	682b      	ldr	r3, [r5, #0]
 8009800:	f8d3 8000 	ldr.w	r8, [r3]
 8009804:	f1b8 0f00 	cmp.w	r8, #0
 8009808:	d037      	beq.n	800987a <prvTimerTask+0x86>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800980a:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800980c:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800980e:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
 8009812:	f7ff fb29 	bl	8008e68 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009816:	a804      	add	r0, sp, #16
 8009818:	f7ff ff98 	bl	800974c <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800981c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800981e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009820:	2b00      	cmp	r3, #0
 8009822:	d16b      	bne.n	80098fc <prvTimerTask+0x108>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009824:	2c00      	cmp	r4, #0
 8009826:	d14e      	bne.n	80098c6 <prvTimerTask+0xd2>
 8009828:	4540      	cmp	r0, r8
 800982a:	d352      	bcc.n	80098d2 <prvTimerTask+0xde>
				( void ) xTaskResumeAll();
 800982c:	f7ff fbc2 	bl	8008fb4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009830:	682b      	ldr	r3, [r5, #0]
 8009832:	68db      	ldr	r3, [r3, #12]
 8009834:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009836:	1d38      	adds	r0, r7, #4
 8009838:	f7fe f9f0 	bl	8007c1c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800983c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8009840:	0758      	lsls	r0, r3, #29
 8009842:	d51c      	bpl.n	800987e <prvTimerTask+0x8a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009844:	69b9      	ldr	r1, [r7, #24]
 8009846:	4643      	mov	r3, r8
 8009848:	464a      	mov	r2, r9
 800984a:	4638      	mov	r0, r7
 800984c:	4441      	add	r1, r8
 800984e:	f7ff fecb 	bl	80095e8 <prvInsertTimerInActiveList>
 8009852:	b1c0      	cbz	r0, 8009886 <prvTimerTask+0x92>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009854:	4623      	mov	r3, r4
 8009856:	4642      	mov	r2, r8
 8009858:	4621      	mov	r1, r4
 800985a:	4638      	mov	r0, r7
 800985c:	9400      	str	r4, [sp, #0]
 800985e:	f7ff ff49 	bl	80096f4 <xTimerGenericCommand>
			configASSERT( xResult );
 8009862:	b980      	cbnz	r0, 8009886 <prvTimerTask+0x92>
 8009864:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009868:	b672      	cpsid	i
 800986a:	f383 8811 	msr	BASEPRI, r3
 800986e:	f3bf 8f6f 	isb	sy
 8009872:	f3bf 8f4f 	dsb	sy
 8009876:	b662      	cpsie	i
 8009878:	e7fe      	b.n	8009878 <prvTimerTask+0x84>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800987a:	2401      	movs	r4, #1
 800987c:	e7c9      	b.n	8009812 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800987e:	f023 0301 	bic.w	r3, r3, #1
 8009882:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009886:	6a3b      	ldr	r3, [r7, #32]
 8009888:	4638      	mov	r0, r7
 800988a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800988c:	2200      	movs	r2, #0
 800988e:	a904      	add	r1, sp, #16
 8009890:	6830      	ldr	r0, [r6, #0]
 8009892:	f7fe fed4 	bl	800863e <xQueueReceive>
 8009896:	2800      	cmp	r0, #0
 8009898:	d0b1      	beq.n	80097fe <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800989a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800989c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800989e:	2b00      	cmp	r3, #0
 80098a0:	db2f      	blt.n	8009902 <prvTimerTask+0x10e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80098a2:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80098a4:	6963      	ldr	r3, [r4, #20]
 80098a6:	2b00      	cmp	r3, #0
 80098a8:	d132      	bne.n	8009910 <prvTimerTask+0x11c>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80098aa:	a803      	add	r0, sp, #12
 80098ac:	f7ff ff4e 	bl	800974c <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 80098b0:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80098b2:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 80098b4:	2b09      	cmp	r3, #9
 80098b6:	d8e9      	bhi.n	800988c <prvTimerTask+0x98>
 80098b8:	e8df f003 	tbb	[pc, r3]
 80098bc:	592e2e2e 	.word	0x592e2e2e
 80098c0:	2e2e7a60 	.word	0x2e2e7a60
 80098c4:	6059      	.short	0x6059
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80098c6:	4b40      	ldr	r3, [pc, #256]	@ (80099c8 <prvTimerTask+0x1d4>)
 80098c8:	681b      	ldr	r3, [r3, #0]
 80098ca:	681c      	ldr	r4, [r3, #0]
 80098cc:	fab4 f484 	clz	r4, r4
 80098d0:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80098d2:	4622      	mov	r2, r4
 80098d4:	eba8 0109 	sub.w	r1, r8, r9
 80098d8:	6830      	ldr	r0, [r6, #0]
 80098da:	f7ff f8d0 	bl	8008a7e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80098de:	f7ff fb69 	bl	8008fb4 <xTaskResumeAll>
 80098e2:	2800      	cmp	r0, #0
 80098e4:	d1d2      	bne.n	800988c <prvTimerTask+0x98>
					portYIELD_WITHIN_API();
 80098e6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80098ea:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80098ee:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80098f2:	f3bf 8f4f 	dsb	sy
 80098f6:	f3bf 8f6f 	isb	sy
 80098fa:	e7c7      	b.n	800988c <prvTimerTask+0x98>
			( void ) xTaskResumeAll();
 80098fc:	f7ff fb5a 	bl	8008fb4 <xTaskResumeAll>
}
 8009900:	e7c4      	b.n	800988c <prvTimerTask+0x98>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009902:	9b05      	ldr	r3, [sp, #20]
 8009904:	9907      	ldr	r1, [sp, #28]
 8009906:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009908:	9b04      	ldr	r3, [sp, #16]
 800990a:	2b00      	cmp	r3, #0
 800990c:	dbbe      	blt.n	800988c <prvTimerTask+0x98>
 800990e:	e7c8      	b.n	80098a2 <prvTimerTask+0xae>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009910:	1d20      	adds	r0, r4, #4
 8009912:	f7fe f983 	bl	8007c1c <uxListRemove>
 8009916:	e7c8      	b.n	80098aa <prvTimerTask+0xb6>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009918:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800991c:	4620      	mov	r0, r4
 800991e:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009920:	f043 0301 	orr.w	r3, r3, #1
 8009924:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009928:	9b05      	ldr	r3, [sp, #20]
 800992a:	4419      	add	r1, r3
 800992c:	f7ff fe5c 	bl	80095e8 <prvInsertTimerInActiveList>
 8009930:	2800      	cmp	r0, #0
 8009932:	d0ab      	beq.n	800988c <prvTimerTask+0x98>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009934:	6a23      	ldr	r3, [r4, #32]
 8009936:	4620      	mov	r0, r4
 8009938:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800993a:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800993e:	0759      	lsls	r1, r3, #29
 8009940:	d5a4      	bpl.n	800988c <prvTimerTask+0x98>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009942:	69a2      	ldr	r2, [r4, #24]
 8009944:	2300      	movs	r3, #0
 8009946:	9905      	ldr	r1, [sp, #20]
 8009948:	4620      	mov	r0, r4
 800994a:	9300      	str	r3, [sp, #0]
 800994c:	440a      	add	r2, r1
 800994e:	4619      	mov	r1, r3
 8009950:	f7ff fed0 	bl	80096f4 <xTimerGenericCommand>
							configASSERT( xResult );
 8009954:	2800      	cmp	r0, #0
 8009956:	d199      	bne.n	800988c <prvTimerTask+0x98>
 8009958:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800995c:	b672      	cpsid	i
 800995e:	f383 8811 	msr	BASEPRI, r3
 8009962:	f3bf 8f6f 	isb	sy
 8009966:	f3bf 8f4f 	dsb	sy
 800996a:	b662      	cpsie	i
 800996c:	e7fe      	b.n	800996c <prvTimerTask+0x178>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800996e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009972:	f023 0301 	bic.w	r3, r3, #1
 8009976:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800997a:	e787      	b.n	800988c <prvTimerTask+0x98>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800997c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009980:	f043 0301 	orr.w	r3, r3, #1
 8009984:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009988:	9905      	ldr	r1, [sp, #20]
 800998a:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800998c:	b951      	cbnz	r1, 80099a4 <prvTimerTask+0x1b0>
 800998e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009992:	b672      	cpsid	i
 8009994:	f383 8811 	msr	BASEPRI, r3
 8009998:	f3bf 8f6f 	isb	sy
 800999c:	f3bf 8f4f 	dsb	sy
 80099a0:	b662      	cpsie	i
 80099a2:	e7fe      	b.n	80099a2 <prvTimerTask+0x1ae>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80099a4:	4603      	mov	r3, r0
 80099a6:	4401      	add	r1, r0
 80099a8:	4620      	mov	r0, r4
 80099aa:	f7ff fe1d 	bl	80095e8 <prvInsertTimerInActiveList>
					break;
 80099ae:	e76d      	b.n	800988c <prvTimerTask+0x98>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80099b0:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80099b4:	079a      	lsls	r2, r3, #30
 80099b6:	d4dc      	bmi.n	8009972 <prvTimerTask+0x17e>
							vPortFree( pxTimer );
 80099b8:	4620      	mov	r0, r4
 80099ba:	f7fe f8c3 	bl	8007b44 <vPortFree>
 80099be:	e765      	b.n	800988c <prvTimerTask+0x98>
 80099c0:	20016b3c 	.word	0x20016b3c
 80099c4:	20016b34 	.word	0x20016b34
 80099c8:	20016b38 	.word	0x20016b38

080099cc <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80099cc:	8880      	ldrh	r0, [r0, #4]
 80099ce:	4770      	bx	lr

080099d0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80099d0:	b570      	push	{r4, r5, r6, lr}
 80099d2:	6803      	ldr	r3, [r0, #0]
 80099d4:	460c      	mov	r4, r1
 80099d6:	2100      	movs	r1, #0
 80099d8:	4605      	mov	r5, r0
 80099da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80099dc:	4798      	blx	r3
 80099de:	4606      	mov	r6, r0
 80099e0:	682b      	ldr	r3, [r5, #0]
 80099e2:	4628      	mov	r0, r5
 80099e4:	1ba4      	subs	r4, r4, r6
 80099e6:	6a1b      	ldr	r3, [r3, #32]
 80099e8:	b2a4      	uxth	r4, r4
 80099ea:	4798      	blx	r3
 80099ec:	fbb4 f0f0 	udiv	r0, r4, r0
 80099f0:	bd70      	pop	{r4, r5, r6, pc}

080099f2 <_ZN8touchgfx17AbstractPartition5clearEv>:
 80099f2:	2300      	movs	r3, #0
 80099f4:	8083      	strh	r3, [r0, #4]
 80099f6:	4770      	bx	lr

080099f8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80099f8:	b510      	push	{r4, lr}
 80099fa:	6803      	ldr	r3, [r0, #0]
 80099fc:	4604      	mov	r4, r0
 80099fe:	8881      	ldrh	r1, [r0, #4]
 8009a00:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009a02:	4798      	blx	r3
 8009a04:	88a3      	ldrh	r3, [r4, #4]
 8009a06:	3301      	adds	r3, #1
 8009a08:	80a3      	strh	r3, [r4, #4]
 8009a0a:	bd10      	pop	{r4, pc}

08009a0c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009a0c:	6803      	ldr	r3, [r0, #0]
 8009a0e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009a10:	4718      	bx	r3

08009a12 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8009a12:	4770      	bx	lr

08009a14 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009a14:	4a02      	ldr	r2, [pc, #8]	@ (8009a20 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009a16:	6002      	str	r2, [r0, #0]
 8009a18:	2200      	movs	r2, #0
 8009a1a:	8082      	strh	r2, [r0, #4]
 8009a1c:	4770      	bx	lr
 8009a1e:	bf00      	nop
 8009a20:	08023fbc 	.word	0x08023fbc

08009a24 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009a24:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009a26:	2000      	movs	r0, #0
 8009a28:	b12b      	cbz	r3, 8009a36 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009a2a:	b920      	cbnz	r0, 8009a36 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009a2c:	1a5a      	subs	r2, r3, r1
 8009a2e:	699b      	ldr	r3, [r3, #24]
 8009a30:	4250      	negs	r0, r2
 8009a32:	4150      	adcs	r0, r2
 8009a34:	e7f8      	b.n	8009a28 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009a36:	4770      	bx	lr

08009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009a38:	2300      	movs	r3, #0
 8009a3a:	6148      	str	r0, [r1, #20]
 8009a3c:	618b      	str	r3, [r1, #24]
 8009a3e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009a40:	b913      	cbnz	r3, 8009a48 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8009a42:	6281      	str	r1, [r0, #40]	@ 0x28
 8009a44:	4770      	bx	lr
 8009a46:	4613      	mov	r3, r2
 8009a48:	699a      	ldr	r2, [r3, #24]
 8009a4a:	2a00      	cmp	r2, #0
 8009a4c:	d1fb      	bne.n	8009a46 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8009a4e:	6199      	str	r1, [r3, #24]
 8009a50:	4770      	bx	lr

08009a52 <_ZN8touchgfx9Container9removeAllEv>:
 8009a52:	2200      	movs	r2, #0
 8009a54:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009a56:	b123      	cbz	r3, 8009a62 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8009a58:	6999      	ldr	r1, [r3, #24]
 8009a5a:	6281      	str	r1, [r0, #40]	@ 0x28
 8009a5c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009a60:	e7f8      	b.n	8009a54 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009a62:	4770      	bx	lr

08009a64 <_ZN8touchgfx9Container6unlinkEv>:
 8009a64:	2300      	movs	r3, #0
 8009a66:	6283      	str	r3, [r0, #40]	@ 0x28
 8009a68:	4770      	bx	lr

08009a6a <_ZNK8touchgfx9Container12getSolidRectEv>:
 8009a6a:	2200      	movs	r2, #0
 8009a6c:	8002      	strh	r2, [r0, #0]
 8009a6e:	8042      	strh	r2, [r0, #2]
 8009a70:	8082      	strh	r2, [r0, #4]
 8009a72:	80c2      	strh	r2, [r0, #6]
 8009a74:	4770      	bx	lr

08009a76 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8009a76:	b570      	push	{r4, r5, r6, lr}
 8009a78:	460d      	mov	r5, r1
 8009a7a:	4616      	mov	r6, r2
 8009a7c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009a7e:	b13c      	cbz	r4, 8009a90 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8009a80:	6823      	ldr	r3, [r4, #0]
 8009a82:	4620      	mov	r0, r4
 8009a84:	4632      	mov	r2, r6
 8009a86:	4629      	mov	r1, r5
 8009a88:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009a8a:	4798      	blx	r3
 8009a8c:	69a4      	ldr	r4, [r4, #24]
 8009a8e:	e7f6      	b.n	8009a7e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8009a90:	bd70      	pop	{r4, r5, r6, pc}

08009a92 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8009a92:	b538      	push	{r3, r4, r5, lr}
 8009a94:	460d      	mov	r5, r1
 8009a96:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009a98:	b134      	cbz	r4, 8009aa8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8009a9a:	682b      	ldr	r3, [r5, #0]
 8009a9c:	4621      	mov	r1, r4
 8009a9e:	4628      	mov	r0, r5
 8009aa0:	689b      	ldr	r3, [r3, #8]
 8009aa2:	4798      	blx	r3
 8009aa4:	69a4      	ldr	r4, [r4, #24]
 8009aa6:	e7f7      	b.n	8009a98 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8009aa8:	bd38      	pop	{r3, r4, r5, pc}

08009aaa <_ZN8touchgfx9ContainerD1Ev>:
 8009aaa:	4770      	bx	lr

08009aac <_ZN8touchgfx9ContainerD0Ev>:
 8009aac:	b510      	push	{r4, lr}
 8009aae:	4604      	mov	r4, r0
 8009ab0:	212c      	movs	r1, #44	@ 0x2c
 8009ab2:	f017 fa25 	bl	8020f00 <_ZdlPvj>
 8009ab6:	4620      	mov	r0, r4
 8009ab8:	bd10      	pop	{r4, pc}

08009aba <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8009aba:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009abc:	b19b      	cbz	r3, 8009ae6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009abe:	428b      	cmp	r3, r1
 8009ac0:	d109      	bne.n	8009ad6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8009ac2:	699a      	ldr	r2, [r3, #24]
 8009ac4:	2100      	movs	r1, #0
 8009ac6:	6159      	str	r1, [r3, #20]
 8009ac8:	6282      	str	r2, [r0, #40]	@ 0x28
 8009aca:	b902      	cbnz	r2, 8009ace <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8009acc:	4770      	bx	lr
 8009ace:	6199      	str	r1, [r3, #24]
 8009ad0:	4770      	bx	lr
 8009ad2:	4613      	mov	r3, r2
 8009ad4:	b13a      	cbz	r2, 8009ae6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009ad6:	699a      	ldr	r2, [r3, #24]
 8009ad8:	428a      	cmp	r2, r1
 8009ada:	d1fa      	bne.n	8009ad2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009adc:	698a      	ldr	r2, [r1, #24]
 8009ade:	619a      	str	r2, [r3, #24]
 8009ae0:	2300      	movs	r3, #0
 8009ae2:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009ae6:	4770      	bx	lr

08009ae8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009ae8:	b410      	push	{r4}
 8009aea:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009aec:	4604      	mov	r4, r0
 8009aee:	b92b      	cbnz	r3, 8009afc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009af0:	6803      	ldr	r3, [r0, #0]
 8009af2:	4611      	mov	r1, r2
 8009af4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009af8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8009afa:	4718      	bx	r3
 8009afc:	b941      	cbnz	r1, 8009b10 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009afe:	6193      	str	r3, [r2, #24]
 8009b00:	6282      	str	r2, [r0, #40]	@ 0x28
 8009b02:	6154      	str	r4, [r2, #20]
 8009b04:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009b08:	4770      	bx	lr
 8009b0a:	4603      	mov	r3, r0
 8009b0c:	2800      	cmp	r0, #0
 8009b0e:	d0f9      	beq.n	8009b04 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009b10:	4299      	cmp	r1, r3
 8009b12:	6998      	ldr	r0, [r3, #24]
 8009b14:	d1f9      	bne.n	8009b0a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009b16:	6190      	str	r0, [r2, #24]
 8009b18:	618a      	str	r2, [r1, #24]
 8009b1a:	e7f2      	b.n	8009b02 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08009b1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009b1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009b20:	461f      	mov	r7, r3
 8009b22:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 8009b26:	460d      	mov	r5, r1
 8009b28:	4616      	mov	r6, r2
 8009b2a:	b103      	cbz	r3, 8009b2e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009b2c:	6038      	str	r0, [r7, #0]
 8009b2e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009b30:	b314      	cbz	r4, 8009b78 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8009b32:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009b36:	b1eb      	cbz	r3, 8009b74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009b38:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009b3c:	428d      	cmp	r5, r1
 8009b3e:	db19      	blt.n	8009b74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009b40:	b289      	uxth	r1, r1
 8009b42:	8923      	ldrh	r3, [r4, #8]
 8009b44:	440b      	add	r3, r1
 8009b46:	b21b      	sxth	r3, r3
 8009b48:	429d      	cmp	r5, r3
 8009b4a:	da13      	bge.n	8009b74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009b4c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009b50:	4296      	cmp	r6, r2
 8009b52:	db0f      	blt.n	8009b74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009b54:	b292      	uxth	r2, r2
 8009b56:	8963      	ldrh	r3, [r4, #10]
 8009b58:	4413      	add	r3, r2
 8009b5a:	b21b      	sxth	r3, r3
 8009b5c:	429e      	cmp	r6, r3
 8009b5e:	da09      	bge.n	8009b74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009b60:	6823      	ldr	r3, [r4, #0]
 8009b62:	1ab2      	subs	r2, r6, r2
 8009b64:	1a69      	subs	r1, r5, r1
 8009b66:	4620      	mov	r0, r4
 8009b68:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 8009b6c:	b212      	sxth	r2, r2
 8009b6e:	463b      	mov	r3, r7
 8009b70:	b209      	sxth	r1, r1
 8009b72:	47c0      	blx	r8
 8009b74:	69a4      	ldr	r4, [r4, #24]
 8009b76:	e7db      	b.n	8009b30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8009b78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009b7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8009b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b80:	4c6d      	ldr	r4, [pc, #436]	@ (8009d38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 8009b82:	b0a1      	sub	sp, #132	@ 0x84
 8009b84:	4606      	mov	r6, r0
 8009b86:	6824      	ldr	r4, [r4, #0]
 8009b88:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8009b8a:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 8009b8e:	2400      	movs	r4, #0
 8009b90:	9303      	str	r3, [sp, #12]
 8009b92:	802c      	strh	r4, [r5, #0]
 8009b94:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 8009b96:	802c      	strh	r4, [r5, #0]
 8009b98:	601c      	str	r4, [r3, #0]
 8009b9a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8009b9e:	f7ff ffbd 	bl	8009b1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009ba2:	f1b9 0f03 	cmp.w	r9, #3
 8009ba6:	f340 80c1 	ble.w	8009d2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 8009baa:	4631      	mov	r1, r6
 8009bac:	a80c      	add	r0, sp, #48	@ 0x30
 8009bae:	f007 fa43 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009bb2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8009bb6:	9306      	str	r3, [sp, #24]
 8009bb8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8009bbc:	9307      	str	r3, [sp, #28]
 8009bbe:	9b03      	ldr	r3, [sp, #12]
 8009bc0:	f8d3 a000 	ldr.w	sl, [r3]
 8009bc4:	f1ba 0f00 	cmp.w	sl, #0
 8009bc8:	f000 80b3 	beq.w	8009d32 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 8009bcc:	4651      	mov	r1, sl
 8009bce:	a810      	add	r0, sp, #64	@ 0x40
 8009bd0:	f007 fa32 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009bd4:	2002      	movs	r0, #2
 8009bd6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8009bda:	9b01      	ldr	r3, [sp, #4]
 8009bdc:	9a06      	ldr	r2, [sp, #24]
 8009bde:	fb91 f1f0 	sdiv	r1, r1, r0
 8009be2:	189d      	adds	r5, r3, r2
 8009be4:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 8009be8:	9a07      	ldr	r2, [sp, #28]
 8009bea:	4419      	add	r1, r3
 8009bec:	9b02      	ldr	r3, [sp, #8]
 8009bee:	4413      	add	r3, r2
 8009bf0:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 8009bf4:	1a6d      	subs	r5, r5, r1
 8009bf6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8009bfa:	fb92 f2f0 	sdiv	r2, r2, r0
 8009bfe:	440a      	add	r2, r1
 8009c00:	1a9b      	subs	r3, r3, r2
 8009c02:	435b      	muls	r3, r3
 8009c04:	fb05 3505 	mla	r5, r5, r5, r3
 8009c08:	4f4c      	ldr	r7, [pc, #304]	@ (8009d3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8009c0a:	ac10      	add	r4, sp, #64	@ 0x40
 8009c0c:	f1b9 0f0c 	cmp.w	r9, #12
 8009c10:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009c12:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009c14:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009c16:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009c18:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009c1a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009c1c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8009c20:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009c24:	f04f 0303 	mov.w	r3, #3
 8009c28:	bfd8      	it	le
 8009c2a:	f109 32ff 	addle.w	r2, r9, #4294967295
 8009c2e:	f04f 0400 	mov.w	r4, #0
 8009c32:	f8cd 9000 	str.w	r9, [sp]
 8009c36:	bfcc      	ite	gt
 8009c38:	4698      	movgt	r8, r3
 8009c3a:	fb92 f8f3 	sdivle	r8, r2, r3
 8009c3e:	1c63      	adds	r3, r4, #1
 8009c40:	aa10      	add	r2, sp, #64	@ 0x40
 8009c42:	f004 0401 	and.w	r4, r4, #1
 8009c46:	f04f 0b00 	mov.w	fp, #0
 8009c4a:	9308      	str	r3, [sp, #32]
 8009c4c:	9b00      	ldr	r3, [sp, #0]
 8009c4e:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8009c52:	fb93 f3f8 	sdiv	r3, r3, r8
 8009c56:	3404      	adds	r4, #4
 8009c58:	b29b      	uxth	r3, r3
 8009c5a:	9304      	str	r3, [sp, #16]
 8009c5c:	9a04      	ldr	r2, [sp, #16]
 8009c5e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009c62:	fb13 f302 	smulbb	r3, r3, r2
 8009c66:	9a01      	ldr	r2, [sp, #4]
 8009c68:	b29b      	uxth	r3, r3
 8009c6a:	1899      	adds	r1, r3, r2
 8009c6c:	9305      	str	r3, [sp, #20]
 8009c6e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009c72:	b209      	sxth	r1, r1
 8009c74:	4299      	cmp	r1, r3
 8009c76:	db4d      	blt.n	8009d14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009c78:	8932      	ldrh	r2, [r6, #8]
 8009c7a:	4413      	add	r3, r2
 8009c7c:	b21b      	sxth	r3, r3
 8009c7e:	4299      	cmp	r1, r3
 8009c80:	da48      	bge.n	8009d14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009c82:	9b04      	ldr	r3, [sp, #16]
 8009c84:	6827      	ldr	r7, [r4, #0]
 8009c86:	fb17 f703 	smulbb	r7, r7, r3
 8009c8a:	9b02      	ldr	r3, [sp, #8]
 8009c8c:	b2bf      	uxth	r7, r7
 8009c8e:	18fa      	adds	r2, r7, r3
 8009c90:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009c94:	b212      	sxth	r2, r2
 8009c96:	429a      	cmp	r2, r3
 8009c98:	db3c      	blt.n	8009d14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009c9a:	8970      	ldrh	r0, [r6, #10]
 8009c9c:	4403      	add	r3, r0
 8009c9e:	b21b      	sxth	r3, r3
 8009ca0:	429a      	cmp	r2, r3
 8009ca2:	da37      	bge.n	8009d14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009ca4:	2300      	movs	r3, #0
 8009ca6:	4630      	mov	r0, r6
 8009ca8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009caa:	ab0b      	add	r3, sp, #44	@ 0x2c
 8009cac:	f7ff ff36 	bl	8009b1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009cb0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8009cb2:	b37a      	cbz	r2, 8009d14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009cb4:	4552      	cmp	r2, sl
 8009cb6:	d02d      	beq.n	8009d14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009cb8:	4611      	mov	r1, r2
 8009cba:	a80e      	add	r0, sp, #56	@ 0x38
 8009cbc:	9209      	str	r2, [sp, #36]	@ 0x24
 8009cbe:	f007 f9bb 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009cc2:	f04f 0e02 	mov.w	lr, #2
 8009cc6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8009cca:	9a06      	ldr	r2, [sp, #24]
 8009ccc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8009cd0:	9b01      	ldr	r3, [sp, #4]
 8009cd2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 8009cd6:	4413      	add	r3, r2
 8009cd8:	9a07      	ldr	r2, [sp, #28]
 8009cda:	fb91 f1fe 	sdiv	r1, r1, lr
 8009cde:	fb9c fcfe 	sdiv	ip, ip, lr
 8009ce2:	4401      	add	r1, r0
 8009ce4:	1a58      	subs	r0, r3, r1
 8009ce6:	9b02      	ldr	r3, [sp, #8]
 8009ce8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8009cec:	4413      	add	r3, r2
 8009cee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009cf0:	448c      	add	ip, r1
 8009cf2:	eba3 030c 	sub.w	r3, r3, ip
 8009cf6:	435b      	muls	r3, r3
 8009cf8:	fb00 3300 	mla	r3, r0, r0, r3
 8009cfc:	42ab      	cmp	r3, r5
 8009cfe:	d208      	bcs.n	8009d12 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8009d00:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8009d02:	461d      	mov	r5, r3
 8009d04:	9803      	ldr	r0, [sp, #12]
 8009d06:	6001      	str	r1, [r0, #0]
 8009d08:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8009d0a:	9805      	ldr	r0, [sp, #20]
 8009d0c:	8008      	strh	r0, [r1, #0]
 8009d0e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8009d10:	800f      	strh	r7, [r1, #0]
 8009d12:	4692      	mov	sl, r2
 8009d14:	f10b 0b01 	add.w	fp, fp, #1
 8009d18:	3408      	adds	r4, #8
 8009d1a:	f1bb 0f04 	cmp.w	fp, #4
 8009d1e:	d19d      	bne.n	8009c5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8009d20:	9b00      	ldr	r3, [sp, #0]
 8009d22:	9c08      	ldr	r4, [sp, #32]
 8009d24:	444b      	add	r3, r9
 8009d26:	4544      	cmp	r4, r8
 8009d28:	9300      	str	r3, [sp, #0]
 8009d2a:	d188      	bne.n	8009c3e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8009d2c:	b021      	add	sp, #132	@ 0x84
 8009d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d32:	f04f 35ff 	mov.w	r5, #4294967295
 8009d36:	e767      	b.n	8009c08 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8009d38:	20016b74 	.word	0x20016b74
 8009d3c:	08022a78 	.word	0x08022a78

08009d40 <_ZN8touchgfx4RectaNERKS0_>:
 8009d40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009d44:	f9b1 7000 	ldrsh.w	r7, [r1]
 8009d48:	888c      	ldrh	r4, [r1, #4]
 8009d4a:	f9b0 9000 	ldrsh.w	r9, [r0]
 8009d4e:	443c      	add	r4, r7
 8009d50:	b2a4      	uxth	r4, r4
 8009d52:	fa0f f884 	sxth.w	r8, r4
 8009d56:	45c1      	cmp	r9, r8
 8009d58:	da2f      	bge.n	8009dba <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009d5a:	8882      	ldrh	r2, [r0, #4]
 8009d5c:	444a      	add	r2, r9
 8009d5e:	b292      	uxth	r2, r2
 8009d60:	fa0f fe82 	sxth.w	lr, r2
 8009d64:	4577      	cmp	r7, lr
 8009d66:	da28      	bge.n	8009dba <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009d68:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009d6c:	88cb      	ldrh	r3, [r1, #6]
 8009d6e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8009d72:	442b      	add	r3, r5
 8009d74:	b21b      	sxth	r3, r3
 8009d76:	429e      	cmp	r6, r3
 8009d78:	da1f      	bge.n	8009dba <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009d7a:	88c3      	ldrh	r3, [r0, #6]
 8009d7c:	4433      	add	r3, r6
 8009d7e:	b29b      	uxth	r3, r3
 8009d80:	fa0f fc83 	sxth.w	ip, r3
 8009d84:	4565      	cmp	r5, ip
 8009d86:	da18      	bge.n	8009dba <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009d88:	454f      	cmp	r7, r9
 8009d8a:	bfb8      	it	lt
 8009d8c:	464f      	movlt	r7, r9
 8009d8e:	42b5      	cmp	r5, r6
 8009d90:	bfb8      	it	lt
 8009d92:	4635      	movlt	r5, r6
 8009d94:	45f0      	cmp	r8, lr
 8009d96:	bfd8      	it	le
 8009d98:	4622      	movle	r2, r4
 8009d9a:	1bd2      	subs	r2, r2, r7
 8009d9c:	8082      	strh	r2, [r0, #4]
 8009d9e:	884a      	ldrh	r2, [r1, #2]
 8009da0:	88c9      	ldrh	r1, [r1, #6]
 8009da2:	8007      	strh	r7, [r0, #0]
 8009da4:	440a      	add	r2, r1
 8009da6:	8045      	strh	r5, [r0, #2]
 8009da8:	b292      	uxth	r2, r2
 8009daa:	b211      	sxth	r1, r2
 8009dac:	458c      	cmp	ip, r1
 8009dae:	bfa8      	it	ge
 8009db0:	4613      	movge	r3, r2
 8009db2:	1b5b      	subs	r3, r3, r5
 8009db4:	80c3      	strh	r3, [r0, #6]
 8009db6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009dba:	2300      	movs	r3, #0
 8009dbc:	8003      	strh	r3, [r0, #0]
 8009dbe:	8043      	strh	r3, [r0, #2]
 8009dc0:	8083      	strh	r3, [r0, #4]
 8009dc2:	80c3      	strh	r3, [r0, #6]
 8009dc4:	e7f7      	b.n	8009db6 <_ZN8touchgfx4RectaNERKS0_+0x76>

08009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009dc6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009dca:	2b00      	cmp	r3, #0
 8009dcc:	dd06      	ble.n	8009ddc <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009dce:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009dd2:	2800      	cmp	r0, #0
 8009dd4:	bfcc      	ite	gt
 8009dd6:	2000      	movgt	r0, #0
 8009dd8:	2001      	movle	r0, #1
 8009dda:	4770      	bx	lr
 8009ddc:	2001      	movs	r0, #1
 8009dde:	4770      	bx	lr

08009de0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009de0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009de4:	2300      	movs	r3, #0
 8009de6:	4604      	mov	r4, r0
 8009de8:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8009dea:	8003      	strh	r3, [r0, #0]
 8009dec:	8043      	strh	r3, [r0, #2]
 8009dee:	8083      	strh	r3, [r0, #4]
 8009df0:	80c3      	strh	r3, [r0, #6]
 8009df2:	2d00      	cmp	r5, #0
 8009df4:	d040      	beq.n	8009e78 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009df6:	1d28      	adds	r0, r5, #4
 8009df8:	f7ff ffe5 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009dfc:	b988      	cbnz	r0, 8009e22 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009dfe:	4620      	mov	r0, r4
 8009e00:	f7ff ffe1 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009e04:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009e08:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009e0c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009e10:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009e14:	b138      	cbz	r0, 8009e26 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8009e16:	8022      	strh	r2, [r4, #0]
 8009e18:	8063      	strh	r3, [r4, #2]
 8009e1a:	f8a4 e004 	strh.w	lr, [r4, #4]
 8009e1e:	f8a4 c006 	strh.w	ip, [r4, #6]
 8009e22:	69ad      	ldr	r5, [r5, #24]
 8009e24:	e7e5      	b.n	8009df2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8009e26:	f9b4 0000 	ldrsh.w	r0, [r4]
 8009e2a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8009e2e:	4290      	cmp	r0, r2
 8009e30:	4607      	mov	r7, r0
 8009e32:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8009e36:	460e      	mov	r6, r1
 8009e38:	bfa8      	it	ge
 8009e3a:	4617      	movge	r7, r2
 8009e3c:	4299      	cmp	r1, r3
 8009e3e:	4472      	add	r2, lr
 8009e40:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009e44:	bfa8      	it	ge
 8009e46:	461e      	movge	r6, r3
 8009e48:	4440      	add	r0, r8
 8009e4a:	4471      	add	r1, lr
 8009e4c:	4463      	add	r3, ip
 8009e4e:	b200      	sxth	r0, r0
 8009e50:	8027      	strh	r7, [r4, #0]
 8009e52:	b212      	sxth	r2, r2
 8009e54:	8066      	strh	r6, [r4, #2]
 8009e56:	b209      	sxth	r1, r1
 8009e58:	b21b      	sxth	r3, r3
 8009e5a:	4290      	cmp	r0, r2
 8009e5c:	bfac      	ite	ge
 8009e5e:	ebc7 0200 	rsbge	r2, r7, r0
 8009e62:	ebc7 0202 	rsblt	r2, r7, r2
 8009e66:	4299      	cmp	r1, r3
 8009e68:	bfac      	ite	ge
 8009e6a:	ebc6 0301 	rsbge	r3, r6, r1
 8009e6e:	ebc6 0303 	rsblt	r3, r6, r3
 8009e72:	80a2      	strh	r2, [r4, #4]
 8009e74:	80e3      	strh	r3, [r4, #6]
 8009e76:	e7d4      	b.n	8009e22 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009e78:	4620      	mov	r0, r4
 8009e7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009e7e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8009e7e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009e82:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8009e86:	b383      	cbz	r3, 8009eea <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009e88:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009e8a:	b374      	cbz	r4, 8009eea <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009e8c:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009e90:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009e94:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009e98:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009e9c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009ea0:	b303      	cbz	r3, 8009ee4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009ea2:	4668      	mov	r0, sp
 8009ea4:	1d21      	adds	r1, r4, #4
 8009ea6:	f8ad 5000 	strh.w	r5, [sp]
 8009eaa:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009eae:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009eb2:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009eb6:	f7ff ff43 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 8009eba:	4668      	mov	r0, sp
 8009ebc:	f7ff ff83 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009ec0:	b980      	cbnz	r0, 8009ee4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009ec2:	f8bd 3000 	ldrh.w	r3, [sp]
 8009ec6:	4669      	mov	r1, sp
 8009ec8:	88a2      	ldrh	r2, [r4, #4]
 8009eca:	4620      	mov	r0, r4
 8009ecc:	1a9b      	subs	r3, r3, r2
 8009ece:	88e2      	ldrh	r2, [r4, #6]
 8009ed0:	f8ad 3000 	strh.w	r3, [sp]
 8009ed4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009ed8:	1a9b      	subs	r3, r3, r2
 8009eda:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009ede:	6823      	ldr	r3, [r4, #0]
 8009ee0:	689b      	ldr	r3, [r3, #8]
 8009ee2:	4798      	blx	r3
 8009ee4:	69a4      	ldr	r4, [r4, #24]
 8009ee6:	2c00      	cmp	r4, #0
 8009ee8:	d1d8      	bne.n	8009e9c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8009eea:	b002      	add	sp, #8
 8009eec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009ef0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009ef0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009ef2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8009ef6:	460d      	mov	r5, r1
 8009ef8:	4616      	mov	r6, r2
 8009efa:	b323      	cbz	r3, 8009f46 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009efc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009efe:	b314      	cbz	r4, 8009f46 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009f00:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009f04:	b1eb      	cbz	r3, 8009f42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009f06:	6828      	ldr	r0, [r5, #0]
 8009f08:	466b      	mov	r3, sp
 8009f0a:	6869      	ldr	r1, [r5, #4]
 8009f0c:	c303      	stmia	r3!, {r0, r1}
 8009f0e:	4668      	mov	r0, sp
 8009f10:	1d21      	adds	r1, r4, #4
 8009f12:	f7ff ff15 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 8009f16:	4668      	mov	r0, sp
 8009f18:	f7ff ff55 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009f1c:	b988      	cbnz	r0, 8009f42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009f1e:	f8bd 3000 	ldrh.w	r3, [sp]
 8009f22:	4669      	mov	r1, sp
 8009f24:	88a2      	ldrh	r2, [r4, #4]
 8009f26:	4620      	mov	r0, r4
 8009f28:	1a9b      	subs	r3, r3, r2
 8009f2a:	88e2      	ldrh	r2, [r4, #6]
 8009f2c:	f8ad 3000 	strh.w	r3, [sp]
 8009f30:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009f34:	1a9b      	subs	r3, r3, r2
 8009f36:	4632      	mov	r2, r6
 8009f38:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009f3c:	6823      	ldr	r3, [r4, #0]
 8009f3e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009f40:	4798      	blx	r3
 8009f42:	69a4      	ldr	r4, [r4, #24]
 8009f44:	e7db      	b.n	8009efe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8009f46:	b002      	add	sp, #8
 8009f48:	bd70      	pop	{r4, r5, r6, pc}

08009f4a <_ZNK8touchgfx6Slider15getIndicatorMinEv>:
 8009f4a:	f9b0 00e4 	ldrsh.w	r0, [r0, #228]	@ 0xe4
 8009f4e:	4770      	bx	lr

08009f50 <_ZNK8touchgfx6Slider15getIndicatorMaxEv>:
 8009f50:	f9b0 00e6 	ldrsh.w	r0, [r0, #230]	@ 0xe6
 8009f54:	4770      	bx	lr

08009f56 <_ZNK8touchgfx6Slider11getMinValueEv>:
 8009f56:	f9b0 0030 	ldrsh.w	r0, [r0, #48]	@ 0x30
 8009f5a:	4770      	bx	lr

08009f5c <_ZNK8touchgfx6Slider11getMaxValueEv>:
 8009f5c:	f9b0 0032 	ldrsh.w	r0, [r0, #50]	@ 0x32
 8009f60:	4770      	bx	lr

08009f62 <_ZN8touchgfx6Slider8setValueEs>:
 8009f62:	b570      	push	{r4, r5, r6, lr}
 8009f64:	6803      	ldr	r3, [r0, #0]
 8009f66:	4604      	mov	r4, r0
 8009f68:	e9d3 532b 	ldrd	r5, r3, [r3, #172]	@ 0xac
 8009f6c:	4798      	blx	r3
 8009f6e:	4601      	mov	r1, r0
 8009f70:	462b      	mov	r3, r5
 8009f72:	4620      	mov	r0, r4
 8009f74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009f78:	4718      	bx	r3

08009f7a <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE>:
 8009f7a:	b570      	push	{r4, r5, r6, lr}
 8009f7c:	6803      	ldr	r3, [r0, #0]
 8009f7e:	4604      	mov	r4, r0
 8009f80:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
 8009f84:	f8d3 60ac 	ldr.w	r6, [r3, #172]	@ 0xac
 8009f88:	b95a      	cbnz	r2, 8009fa2 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x28>
 8009f8a:	894d      	ldrh	r5, [r1, #10]
 8009f8c:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8009f90:	4620      	mov	r0, r4
 8009f92:	4798      	blx	r3
 8009f94:	1a29      	subs	r1, r5, r0
 8009f96:	4633      	mov	r3, r6
 8009f98:	4620      	mov	r0, r4
 8009f9a:	b209      	sxth	r1, r1
 8009f9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009fa0:	4718      	bx	r3
 8009fa2:	898d      	ldrh	r5, [r1, #12]
 8009fa4:	e7f2      	b.n	8009f8c <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x12>

08009fa6 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv>:
 8009fa6:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
 8009faa:	2302      	movs	r3, #2
 8009fac:	b922      	cbnz	r2, 8009fb8 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0x12>
 8009fae:	f9b0 0094 	ldrsh.w	r0, [r0, #148]	@ 0x94
 8009fb2:	fb90 f0f3 	sdiv	r0, r0, r3
 8009fb6:	4770      	bx	lr
 8009fb8:	f9b0 0096 	ldrsh.w	r0, [r0, #150]	@ 0x96
 8009fbc:	e7f9      	b.n	8009fb2 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0xc>

08009fbe <_ZN8touchgfx6Slider13setValueRangeEsss>:
 8009fbe:	8642      	strh	r2, [r0, #50]	@ 0x32
 8009fc0:	6802      	ldr	r2, [r0, #0]
 8009fc2:	8601      	strh	r1, [r0, #48]	@ 0x30
 8009fc4:	4619      	mov	r1, r3
 8009fc6:	b410      	push	{r4}
 8009fc8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009fcc:	f8d2 20a8 	ldr.w	r2, [r2, #168]	@ 0xa8
 8009fd0:	4710      	bx	r2

08009fd2 <_ZN8touchgfx6Slider13setValueRangeEss>:
 8009fd2:	f9b0 302e 	ldrsh.w	r3, [r0, #46]	@ 0x2e
 8009fd6:	428b      	cmp	r3, r1
 8009fd8:	b410      	push	{r4}
 8009fda:	db09      	blt.n	8009ff0 <_ZN8touchgfx6Slider13setValueRangeEss+0x1e>
 8009fdc:	4293      	cmp	r3, r2
 8009fde:	bfa8      	it	ge
 8009fe0:	4613      	movge	r3, r2
 8009fe2:	6804      	ldr	r4, [r0, #0]
 8009fe4:	f8d4 4098 	ldr.w	r4, [r4, #152]	@ 0x98
 8009fe8:	46a4      	mov	ip, r4
 8009fea:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009fee:	4760      	bx	ip
 8009ff0:	460b      	mov	r3, r1
 8009ff2:	e7f6      	b.n	8009fe2 <_ZN8touchgfx6Slider13setValueRangeEss+0x10>

08009ff4 <_ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv>:
 8009ff4:	f9b0 20e6 	ldrsh.w	r2, [r0, #230]	@ 0xe6
 8009ff8:	f9b0 00e4 	ldrsh.w	r0, [r0, #228]	@ 0xe4
 8009ffc:	1a10      	subs	r0, r2, r0
 8009ffe:	4770      	bx	lr

0800a000 <_ZNK8touchgfx6Slider17getValueRangeSizeEv>:
 800a000:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	@ 0x32
 800a004:	f9b0 0030 	ldrsh.w	r0, [r0, #48]	@ 0x30
 800a008:	1a10      	subs	r0, r2, r0
 800a00a:	4770      	bx	lr

0800a00c <_ZN8touchgfx6SliderD1Ev>:
 800a00c:	4770      	bx	lr

0800a00e <_ZN8touchgfx6SliderD0Ev>:
 800a00e:	b510      	push	{r4, lr}
 800a010:	4604      	mov	r4, r0
 800a012:	21f4      	movs	r1, #244	@ 0xf4
 800a014:	f016 ff74 	bl	8020f00 <_ZdlPvj>
 800a018:	4620      	mov	r0, r4
 800a01a:	bd10      	pop	{r4, pc}

0800a01c <_ZNK8touchgfx6Slider15valueToPositionEi>:
 800a01c:	b570      	push	{r4, r5, r6, lr}
 800a01e:	f9b0 5032 	ldrsh.w	r5, [r0, #50]	@ 0x32
 800a022:	4604      	mov	r4, r0
 800a024:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	@ 0x30
 800a028:	428d      	cmp	r5, r1
 800a02a:	bfa8      	it	ge
 800a02c:	460d      	movge	r5, r1
 800a02e:	429d      	cmp	r5, r3
 800a030:	bfac      	ite	ge
 800a032:	ebc3 0505 	rsbge	r5, r3, r5
 800a036:	ebc3 0503 	rsblt	r5, r3, r3
 800a03a:	6803      	ldr	r3, [r0, #0]
 800a03c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800a040:	4798      	blx	r3
 800a042:	6823      	ldr	r3, [r4, #0]
 800a044:	4606      	mov	r6, r0
 800a046:	4620      	mov	r0, r4
 800a048:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800a04c:	4798      	blx	r3
 800a04e:	4631      	mov	r1, r6
 800a050:	4602      	mov	r2, r0
 800a052:	4628      	mov	r0, r5
 800a054:	f007 f91f 	bl	8011296 <_ZN8touchgfx6muldivElll>
 800a058:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800a05c:	2b01      	cmp	r3, #1
 800a05e:	bf0b      	itete	eq
 800a060:	f8b4 30e6 	ldrheq.w	r3, [r4, #230]	@ 0xe6
 800a064:	f8b4 30e4 	ldrhne.w	r3, [r4, #228]	@ 0xe4
 800a068:	1a18      	subeq	r0, r3, r0
 800a06a:	18c0      	addne	r0, r0, r3
 800a06c:	b200      	sxth	r0, r0
 800a06e:	bd70      	pop	{r4, r5, r6, pc}

0800a070 <_ZNK8touchgfx6Slider15positionToValueEs>:
 800a070:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a072:	f9b0 30e6 	ldrsh.w	r3, [r0, #230]	@ 0xe6
 800a076:	4605      	mov	r5, r0
 800a078:	f9b0 40e4 	ldrsh.w	r4, [r0, #228]	@ 0xe4
 800a07c:	4299      	cmp	r1, r3
 800a07e:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
 800a082:	f9b0 6030 	ldrsh.w	r6, [r0, #48]	@ 0x30
 800a086:	bfa8      	it	ge
 800a088:	4619      	movge	r1, r3
 800a08a:	42a1      	cmp	r1, r4
 800a08c:	bfb8      	it	lt
 800a08e:	4621      	movlt	r1, r4
 800a090:	2a01      	cmp	r2, #1
 800a092:	b289      	uxth	r1, r1
 800a094:	bf08      	it	eq
 800a096:	1a5c      	subeq	r4, r3, r1
 800a098:	6803      	ldr	r3, [r0, #0]
 800a09a:	bf18      	it	ne
 800a09c:	1b0c      	subne	r4, r1, r4
 800a09e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800a0a2:	4798      	blx	r3
 800a0a4:	682b      	ldr	r3, [r5, #0]
 800a0a6:	4607      	mov	r7, r0
 800a0a8:	b224      	sxth	r4, r4
 800a0aa:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800a0ae:	4628      	mov	r0, r5
 800a0b0:	4798      	blx	r3
 800a0b2:	4639      	mov	r1, r7
 800a0b4:	4602      	mov	r2, r0
 800a0b6:	4620      	mov	r0, r4
 800a0b8:	f007 f8ed 	bl	8011296 <_ZN8touchgfx6muldivElll>
 800a0bc:	4430      	add	r0, r6
 800a0be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a0c0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE>:
 800a0c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0c4:	790b      	ldrb	r3, [r1, #4]
 800a0c6:	4604      	mov	r4, r0
 800a0c8:	460d      	mov	r5, r1
 800a0ca:	b32b      	cbz	r3, 800a118 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x58>
 800a0cc:	2b01      	cmp	r3, #1
 800a0ce:	d137      	bne.n	800a140 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
 800a0d0:	6823      	ldr	r3, [r4, #0]
 800a0d2:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 800a0d6:	f8d3 70ac 	ldr.w	r7, [r3, #172]	@ 0xac
 800a0da:	2a00      	cmp	r2, #0
 800a0dc:	d12e      	bne.n	800a13c <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800a0de:	88ee      	ldrh	r6, [r5, #6]
 800a0e0:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 800a0e4:	4620      	mov	r0, r4
 800a0e6:	4798      	blx	r3
 800a0e8:	1a31      	subs	r1, r6, r0
 800a0ea:	4620      	mov	r0, r4
 800a0ec:	b209      	sxth	r1, r1
 800a0ee:	47b8      	blx	r7
 800a0f0:	792b      	ldrb	r3, [r5, #4]
 800a0f2:	2b01      	cmp	r3, #1
 800a0f4:	d124      	bne.n	800a140 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
 800a0f6:	f8d4 00ec 	ldr.w	r0, [r4, #236]	@ 0xec
 800a0fa:	b308      	cbz	r0, 800a140 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
 800a0fc:	6803      	ldr	r3, [r0, #0]
 800a0fe:	68db      	ldr	r3, [r3, #12]
 800a100:	4798      	blx	r3
 800a102:	b1e8      	cbz	r0, 800a140 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
 800a104:	f8d4 00ec 	ldr.w	r0, [r4, #236]	@ 0xec
 800a108:	4621      	mov	r1, r4
 800a10a:	f9b4 202e 	ldrsh.w	r2, [r4, #46]	@ 0x2e
 800a10e:	6803      	ldr	r3, [r0, #0]
 800a110:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a114:	689b      	ldr	r3, [r3, #8]
 800a116:	4718      	bx	r3
 800a118:	f8d0 00e8 	ldr.w	r0, [r0, #232]	@ 0xe8
 800a11c:	2800      	cmp	r0, #0
 800a11e:	d0d7      	beq.n	800a0d0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800a120:	6803      	ldr	r3, [r0, #0]
 800a122:	68db      	ldr	r3, [r3, #12]
 800a124:	4798      	blx	r3
 800a126:	2800      	cmp	r0, #0
 800a128:	d0d2      	beq.n	800a0d0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800a12a:	f8d4 00e8 	ldr.w	r0, [r4, #232]	@ 0xe8
 800a12e:	4621      	mov	r1, r4
 800a130:	f9b4 202e 	ldrsh.w	r2, [r4, #46]	@ 0x2e
 800a134:	6803      	ldr	r3, [r0, #0]
 800a136:	689b      	ldr	r3, [r3, #8]
 800a138:	4798      	blx	r3
 800a13a:	e7c9      	b.n	800a0d0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800a13c:	892e      	ldrh	r6, [r5, #8]
 800a13e:	e7cf      	b.n	800a0e0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x20>
 800a140:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a144 <_ZN8touchgfx8DrawableC1Ev>:
 800a144:	4a0a      	ldr	r2, [pc, #40]	@ (800a170 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800a146:	6002      	str	r2, [r0, #0]
 800a148:	2200      	movs	r2, #0
 800a14a:	8082      	strh	r2, [r0, #4]
 800a14c:	80c2      	strh	r2, [r0, #6]
 800a14e:	8102      	strh	r2, [r0, #8]
 800a150:	8142      	strh	r2, [r0, #10]
 800a152:	8182      	strh	r2, [r0, #12]
 800a154:	81c2      	strh	r2, [r0, #14]
 800a156:	8202      	strh	r2, [r0, #16]
 800a158:	8242      	strh	r2, [r0, #18]
 800a15a:	61c2      	str	r2, [r0, #28]
 800a15c:	8402      	strh	r2, [r0, #32]
 800a15e:	8442      	strh	r2, [r0, #34]	@ 0x22
 800a160:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800a164:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a168:	2201      	movs	r2, #1
 800a16a:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 800a16e:	4770      	bx	lr
 800a170:	08024968 	.word	0x08024968

0800a174 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800a174:	b570      	push	{r4, r5, r6, lr}
 800a176:	6803      	ldr	r3, [r0, #0]
 800a178:	4604      	mov	r4, r0
 800a17a:	4615      	mov	r5, r2
 800a17c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a17e:	4798      	blx	r3
 800a180:	6823      	ldr	r3, [r4, #0]
 800a182:	4629      	mov	r1, r5
 800a184:	4620      	mov	r0, r4
 800a186:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a188:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a18c:	4718      	bx	r3

0800a18e <_ZN8touchgfx6Slider23updateIndicatorPositionEs>:
 800a18e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a192:	f9b0 80e4 	ldrsh.w	r8, [r0, #228]	@ 0xe4
 800a196:	4604      	mov	r4, r0
 800a198:	308c      	adds	r0, #140	@ 0x8c
 800a19a:	4588      	cmp	r8, r1
 800a19c:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800a1a0:	f104 06b8 	add.w	r6, r4, #184	@ 0xb8
 800a1a4:	bfb8      	it	lt
 800a1a6:	4688      	movlt	r8, r1
 800a1a8:	f9b0 105a 	ldrsh.w	r1, [r0, #90]	@ 0x5a
 800a1ac:	4588      	cmp	r8, r1
 800a1ae:	bfa8      	it	ge
 800a1b0:	4688      	movge	r8, r1
 800a1b2:	fa1f f788 	uxth.w	r7, r8
 800a1b6:	2b00      	cmp	r3, #0
 800a1b8:	d130      	bne.n	800a21c <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x8e>
 800a1ba:	f9b4 2092 	ldrsh.w	r2, [r4, #146]	@ 0x92
 800a1be:	4641      	mov	r1, r8
 800a1c0:	f7f8 f9c9 	bl	8002556 <_ZN8touchgfx8Drawable6moveToEss>
 800a1c4:	4630      	mov	r0, r6
 800a1c6:	f006 fe9c 	bl	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a1ca:	f8b4 20bc 	ldrh.w	r2, [r4, #188]	@ 0xbc
 800a1ce:	6823      	ldr	r3, [r4, #0]
 800a1d0:	4620      	mov	r0, r4
 800a1d2:	1abf      	subs	r7, r7, r2
 800a1d4:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 800a1d8:	b2bf      	uxth	r7, r7
 800a1da:	4798      	blx	r3
 800a1dc:	4407      	add	r7, r0
 800a1de:	f8a4 70c0 	strh.w	r7, [r4, #192]	@ 0xc0
 800a1e2:	4630      	mov	r0, r6
 800a1e4:	f006 fe8d 	bl	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a1e8:	6823      	ldr	r3, [r4, #0]
 800a1ea:	4641      	mov	r1, r8
 800a1ec:	4620      	mov	r0, r4
 800a1ee:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800a1f2:	4798      	blx	r3
 800a1f4:	85e0      	strh	r0, [r4, #46]	@ 0x2e
 800a1f6:	f8d4 00f0 	ldr.w	r0, [r4, #240]	@ 0xf0
 800a1fa:	2800      	cmp	r0, #0
 800a1fc:	d03c      	beq.n	800a278 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xea>
 800a1fe:	6803      	ldr	r3, [r0, #0]
 800a200:	68db      	ldr	r3, [r3, #12]
 800a202:	4798      	blx	r3
 800a204:	2800      	cmp	r0, #0
 800a206:	d037      	beq.n	800a278 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xea>
 800a208:	f8d4 00f0 	ldr.w	r0, [r4, #240]	@ 0xf0
 800a20c:	4621      	mov	r1, r4
 800a20e:	f9b4 202e 	ldrsh.w	r2, [r4, #46]	@ 0x2e
 800a212:	6803      	ldr	r3, [r0, #0]
 800a214:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a218:	689b      	ldr	r3, [r3, #8]
 800a21a:	4718      	bx	r3
 800a21c:	4642      	mov	r2, r8
 800a21e:	f9b4 1090 	ldrsh.w	r1, [r4, #144]	@ 0x90
 800a222:	f7f8 f998 	bl	8002556 <_ZN8touchgfx8Drawable6moveToEss>
 800a226:	4630      	mov	r0, r6
 800a228:	f006 fe6b 	bl	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a22c:	8f60      	ldrh	r0, [r4, #58]	@ 0x3a
 800a22e:	8fe5      	ldrh	r5, [r4, #62]	@ 0x3e
 800a230:	6823      	ldr	r3, [r4, #0]
 800a232:	4405      	add	r5, r0
 800a234:	4620      	mov	r0, r4
 800a236:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 800a23a:	b2ad      	uxth	r5, r5
 800a23c:	4798      	blx	r3
 800a23e:	6823      	ldr	r3, [r4, #0]
 800a240:	1bed      	subs	r5, r5, r7
 800a242:	f9b4 a0bc 	ldrsh.w	sl, [r4, #188]	@ 0xbc
 800a246:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 800a24a:	1a2d      	subs	r5, r5, r0
 800a24c:	4620      	mov	r0, r4
 800a24e:	4798      	blx	r3
 800a250:	4438      	add	r0, r7
 800a252:	b2ad      	uxth	r5, r5
 800a254:	f9b4 90c0 	ldrsh.w	r9, [r4, #192]	@ 0xc0
 800a258:	b202      	sxth	r2, r0
 800a25a:	4651      	mov	r1, sl
 800a25c:	4630      	mov	r0, r6
 800a25e:	f7f8 fea0 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 800a262:	4630      	mov	r0, r6
 800a264:	b22a      	sxth	r2, r5
 800a266:	4649      	mov	r1, r9
 800a268:	f7ff ff84 	bl	800a174 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a26c:	f8b4 006a 	ldrh.w	r0, [r4, #106]	@ 0x6a
 800a270:	1a2d      	subs	r5, r5, r0
 800a272:	f8a4 5066 	strh.w	r5, [r4, #102]	@ 0x66
 800a276:	e7b4      	b.n	800a1e2 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x54>
 800a278:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800a27c <_ZN8touchgfx8Drawable11setPositionERKS0_>:
 800a27c:	b570      	push	{r4, r5, r6, lr}
 800a27e:	4604      	mov	r4, r0
 800a280:	f9b1 5008 	ldrsh.w	r5, [r1, #8]
 800a284:	f9b1 600a 	ldrsh.w	r6, [r1, #10]
 800a288:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
 800a28c:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 800a290:	f7f8 fe87 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 800a294:	4632      	mov	r2, r6
 800a296:	4629      	mov	r1, r5
 800a298:	4620      	mov	r0, r4
 800a29a:	f7ff ff6b 	bl	800a174 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a29e:	bd70      	pop	{r4, r5, r6, pc}

0800a2a0 <_ZN8touchgfx6Slider21setupHorizontalSliderEsssss>:
 800a2a0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a2a4:	f04f 0a00 	mov.w	sl, #0
 800a2a8:	f100 0b34 	add.w	fp, r0, #52	@ 0x34
 800a2ac:	4604      	mov	r4, r0
 800a2ae:	461d      	mov	r5, r3
 800a2b0:	f880 a02c 	strb.w	sl, [r0, #44]	@ 0x2c
 800a2b4:	4658      	mov	r0, fp
 800a2b6:	4690      	mov	r8, r2
 800a2b8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 800a2bc:	4689      	mov	r9, r1
 800a2be:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	@ 0x28
 800a2c2:	f7f8 fe6e 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 800a2c6:	4659      	mov	r1, fp
 800a2c8:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
 800a2cc:	f7ff ffd6 	bl	800a27c <_ZN8touchgfx8Drawable11setPositionERKS0_>
 800a2d0:	4652      	mov	r2, sl
 800a2d2:	4651      	mov	r1, sl
 800a2d4:	f104 0060 	add.w	r0, r4, #96	@ 0x60
 800a2d8:	f7f8 fe63 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 800a2dc:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800a2de:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800a2e0:	4620      	mov	r0, r4
 800a2e2:	4490      	add	r8, r2
 800a2e4:	f8b4 2096 	ldrh.w	r2, [r4, #150]	@ 0x96
 800a2e8:	f8a4 5092 	strh.w	r5, [r4, #146]	@ 0x92
 800a2ec:	4489      	add	r9, r1
 800a2ee:	4415      	add	r5, r2
 800a2f0:	f8b4 1094 	ldrh.w	r1, [r4, #148]	@ 0x94
 800a2f4:	fa0f f288 	sxth.w	r2, r8
 800a2f8:	f8a4 70e4 	strh.w	r7, [r4, #228]	@ 0xe4
 800a2fc:	1873      	adds	r3, r6, r1
 800a2fe:	b22d      	sxth	r5, r5
 800a300:	fa0f f989 	sxth.w	r9, r9
 800a304:	f8a4 60e6 	strh.w	r6, [r4, #230]	@ 0xe6
 800a308:	b219      	sxth	r1, r3
 800a30a:	42aa      	cmp	r2, r5
 800a30c:	bfb8      	it	lt
 800a30e:	462a      	movlt	r2, r5
 800a310:	4549      	cmp	r1, r9
 800a312:	bfb8      	it	lt
 800a314:	4649      	movlt	r1, r9
 800a316:	f7ff ff2d 	bl	800a174 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a31a:	6823      	ldr	r3, [r4, #0]
 800a31c:	f9b4 102e 	ldrsh.w	r1, [r4, #46]	@ 0x2e
 800a320:	4620      	mov	r0, r4
 800a322:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800a326:	b001      	add	sp, #4
 800a328:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a32c:	4718      	bx	r3

0800a32e <_ZN8touchgfx6Slider19setupVerticalSliderEsssss>:
 800a32e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a332:	461d      	mov	r5, r3
 800a334:	f100 0a34 	add.w	sl, r0, #52	@ 0x34
 800a338:	2301      	movs	r3, #1
 800a33a:	4604      	mov	r4, r0
 800a33c:	4617      	mov	r7, r2
 800a33e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 800a342:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 800a346:	4650      	mov	r0, sl
 800a348:	460e      	mov	r6, r1
 800a34a:	f9bd 9020 	ldrsh.w	r9, [sp, #32]
 800a34e:	f7f8 fe28 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 800a352:	4651      	mov	r1, sl
 800a354:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
 800a358:	f7ff ff90 	bl	800a27c <_ZN8touchgfx8Drawable11setPositionERKS0_>
 800a35c:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800a35e:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800a360:	4620      	mov	r0, r4
 800a362:	f8b4 3096 	ldrh.w	r3, [r4, #150]	@ 0x96
 800a366:	440e      	add	r6, r1
 800a368:	443a      	add	r2, r7
 800a36a:	f8b4 1094 	ldrh.w	r1, [r4, #148]	@ 0x94
 800a36e:	4443      	add	r3, r8
 800a370:	f8a4 5090 	strh.w	r5, [r4, #144]	@ 0x90
 800a374:	b212      	sxth	r2, r2
 800a376:	440d      	add	r5, r1
 800a378:	b21b      	sxth	r3, r3
 800a37a:	f8a4 90e4 	strh.w	r9, [r4, #228]	@ 0xe4
 800a37e:	b231      	sxth	r1, r6
 800a380:	f8a4 80e6 	strh.w	r8, [r4, #230]	@ 0xe6
 800a384:	429a      	cmp	r2, r3
 800a386:	b22d      	sxth	r5, r5
 800a388:	bfb8      	it	lt
 800a38a:	461a      	movlt	r2, r3
 800a38c:	42a9      	cmp	r1, r5
 800a38e:	bfb8      	it	lt
 800a390:	4629      	movlt	r1, r5
 800a392:	f7ff feef 	bl	800a174 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a396:	6823      	ldr	r3, [r4, #0]
 800a398:	f9b4 102e 	ldrsh.w	r1, [r4, #46]	@ 0x2e
 800a39c:	4620      	mov	r0, r4
 800a39e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800a3a2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a3a6:	4718      	bx	r3

0800a3a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 800a3a8:	b538      	push	{r3, r4, r5, lr}
 800a3aa:	4604      	mov	r4, r0
 800a3ac:	460d      	mov	r5, r1
 800a3ae:	2226      	movs	r2, #38	@ 0x26
 800a3b0:	2100      	movs	r1, #0
 800a3b2:	f017 fdab 	bl	8021f0c <memset>
 800a3b6:	4620      	mov	r0, r4
 800a3b8:	f7ff fec4 	bl	800a144 <_ZN8touchgfx8DrawableC1Ev>
 800a3bc:	4b06      	ldr	r3, [pc, #24]	@ (800a3d8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 800a3be:	4620      	mov	r0, r4
 800a3c0:	4629      	mov	r1, r5
 800a3c2:	6023      	str	r3, [r4, #0]
 800a3c4:	882b      	ldrh	r3, [r5, #0]
 800a3c6:	84e3      	strh	r3, [r4, #38]	@ 0x26
 800a3c8:	23ff      	movs	r3, #255	@ 0xff
 800a3ca:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a3ce:	f003 f967 	bl	800d6a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a3d2:	4620      	mov	r0, r4
 800a3d4:	bd38      	pop	{r3, r4, r5, pc}
 800a3d6:	bf00      	nop
 800a3d8:	08024898 	.word	0x08024898

0800a3dc <_ZN8touchgfx6SliderC1Ev>:
 800a3dc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a3e0:	4604      	mov	r4, r0
 800a3e2:	f7ff feaf 	bl	800a144 <_ZN8touchgfx8DrawableC1Ev>
 800a3e6:	4b28      	ldr	r3, [pc, #160]	@ (800a488 <_ZN8touchgfx6SliderC1Ev+0xac>)
 800a3e8:	2500      	movs	r5, #0
 800a3ea:	ae02      	add	r6, sp, #8
 800a3ec:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 800a3f0:	6023      	str	r3, [r4, #0]
 800a3f2:	f104 0934 	add.w	r9, r4, #52	@ 0x34
 800a3f6:	2364      	movs	r3, #100	@ 0x64
 800a3f8:	f104 0a60 	add.w	sl, r4, #96	@ 0x60
 800a3fc:	f826 7d04 	strh.w	r7, [r6, #-4]!
 800a400:	4648      	mov	r0, r9
 800a402:	8663      	strh	r3, [r4, #50]	@ 0x32
 800a404:	4631      	mov	r1, r6
 800a406:	62a5      	str	r5, [r4, #40]	@ 0x28
 800a408:	f104 088c 	add.w	r8, r4, #140	@ 0x8c
 800a40c:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
 800a410:	85e5      	strh	r5, [r4, #46]	@ 0x2e
 800a412:	8625      	strh	r5, [r4, #48]	@ 0x30
 800a414:	f7ff ffc8 	bl	800a3a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800a418:	4631      	mov	r1, r6
 800a41a:	4650      	mov	r0, sl
 800a41c:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a420:	f7ff ffc2 	bl	800a3a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800a424:	4631      	mov	r1, r6
 800a426:	f104 06b8 	add.w	r6, r4, #184	@ 0xb8
 800a42a:	4640      	mov	r0, r8
 800a42c:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a430:	f7ff ffba 	bl	800a3a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800a434:	4630      	mov	r0, r6
 800a436:	f7ff fe85 	bl	800a144 <_ZN8touchgfx8DrawableC1Ev>
 800a43a:	4b14      	ldr	r3, [pc, #80]	@ (800a48c <_ZN8touchgfx6SliderC1Ev+0xb0>)
 800a43c:	4651      	mov	r1, sl
 800a43e:	4630      	mov	r0, r6
 800a440:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 800a444:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800a448:	f8c4 50e0 	str.w	r5, [r4, #224]	@ 0xe0
 800a44c:	e9c4 3539 	strd	r3, r5, [r4, #228]	@ 0xe4
 800a450:	2301      	movs	r3, #1
 800a452:	e9c4 553b 	strd	r5, r5, [r4, #236]	@ 0xec
 800a456:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800a45a:	f7ff faed 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a45e:	4649      	mov	r1, r9
 800a460:	4620      	mov	r0, r4
 800a462:	f7ff fae9 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a466:	4631      	mov	r1, r6
 800a468:	4620      	mov	r0, r4
 800a46a:	f7ff fae5 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a46e:	4641      	mov	r1, r8
 800a470:	4620      	mov	r0, r4
 800a472:	f7ff fae1 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a476:	4620      	mov	r0, r4
 800a478:	f9b4 10e4 	ldrsh.w	r1, [r4, #228]	@ 0xe4
 800a47c:	f7ff fe87 	bl	800a18e <_ZN8touchgfx6Slider23updateIndicatorPositionEs>
 800a480:	4620      	mov	r0, r4
 800a482:	b002      	add	sp, #8
 800a484:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a488:	08024080 	.word	0x08024080
 800a48c:	08023ff0 	.word	0x08023ff0

0800a490 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>:
 800a490:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a494:	4604      	mov	r4, r0
 800a496:	f100 0634 	add.w	r6, r0, #52	@ 0x34
 800a49a:	4689      	mov	r9, r1
 800a49c:	461f      	mov	r7, r3
 800a49e:	f104 058c 	add.w	r5, r4, #140	@ 0x8c
 800a4a2:	4630      	mov	r0, r6
 800a4a4:	4690      	mov	r8, r2
 800a4a6:	f006 fd2c 	bl	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a4aa:	4628      	mov	r0, r5
 800a4ac:	f006 fd29 	bl	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a4b0:	4649      	mov	r1, r9
 800a4b2:	4630      	mov	r0, r6
 800a4b4:	f003 f8f4 	bl	800d6a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a4b8:	4641      	mov	r1, r8
 800a4ba:	f104 0060 	add.w	r0, r4, #96	@ 0x60
 800a4be:	f003 f8ef 	bl	800d6a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a4c2:	4639      	mov	r1, r7
 800a4c4:	4628      	mov	r0, r5
 800a4c6:	f003 f8eb 	bl	800d6a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a4ca:	f9b4 206a 	ldrsh.w	r2, [r4, #106]	@ 0x6a
 800a4ce:	f9b4 1068 	ldrsh.w	r1, [r4, #104]	@ 0x68
 800a4d2:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
 800a4d6:	f7ff fe4d 	bl	800a174 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a4da:	6823      	ldr	r3, [r4, #0]
 800a4dc:	f9b4 102e 	ldrsh.w	r1, [r4, #46]	@ 0x2e
 800a4e0:	4620      	mov	r0, r4
 800a4e2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800a4e6:	4798      	blx	r3
 800a4e8:	4630      	mov	r0, r6
 800a4ea:	f006 fd0a 	bl	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a4ee:	4628      	mov	r0, r5
 800a4f0:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a4f4:	f006 bd05 	b.w	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>

0800a4f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a4f8:	6803      	ldr	r3, [r0, #0]
 800a4fa:	b513      	push	{r0, r1, r4, lr}
 800a4fc:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800a500:	2300      	movs	r3, #0
 800a502:	e9cd 3300 	strd	r3, r3, [sp]
 800a506:	466b      	mov	r3, sp
 800a508:	47a0      	blx	r4
 800a50a:	b002      	add	sp, #8
 800a50c:	bd10      	pop	{r4, pc}

0800a50e <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a50e:	2301      	movs	r3, #1
 800a510:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a514:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a518:	4770      	bx	lr

0800a51a <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a51a:	2301      	movs	r3, #1
 800a51c:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a520:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a524:	4770      	bx	lr

0800a526 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a526:	6843      	ldr	r3, [r0, #4]
 800a528:	2201      	movs	r2, #1
 800a52a:	725a      	strb	r2, [r3, #9]
 800a52c:	6840      	ldr	r0, [r0, #4]
 800a52e:	6803      	ldr	r3, [r0, #0]
 800a530:	691b      	ldr	r3, [r3, #16]
 800a532:	4718      	bx	r3

0800a534 <_ZN8touchgfx3HAL8flushDMAEv>:
 800a534:	6840      	ldr	r0, [r0, #4]
 800a536:	6803      	ldr	r3, [r0, #0]
 800a538:	689b      	ldr	r3, [r3, #8]
 800a53a:	4718      	bx	r3

0800a53c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800a53c:	b530      	push	{r4, r5, lr}
 800a53e:	b08b      	sub	sp, #44	@ 0x2c
 800a540:	6804      	ldr	r4, [r0, #0]
 800a542:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800a546:	9509      	str	r5, [sp, #36]	@ 0x24
 800a548:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800a54c:	9508      	str	r5, [sp, #32]
 800a54e:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800a552:	9507      	str	r5, [sp, #28]
 800a554:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800a558:	9506      	str	r5, [sp, #24]
 800a55a:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800a55e:	9505      	str	r5, [sp, #20]
 800a560:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800a564:	9504      	str	r5, [sp, #16]
 800a566:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800a56a:	9503      	str	r5, [sp, #12]
 800a56c:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800a570:	9502      	str	r5, [sp, #8]
 800a572:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800a576:	e9cd 3500 	strd	r3, r5, [sp]
 800a57a:	4613      	mov	r3, r2
 800a57c:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800a57e:	2200      	movs	r2, #0
 800a580:	47a0      	blx	r4
 800a582:	b00b      	add	sp, #44	@ 0x2c
 800a584:	bd30      	pop	{r4, r5, pc}
	...

0800a588 <_ZN8touchgfx3HAL10beginFrameEv>:
 800a588:	4b04      	ldr	r3, [pc, #16]	@ (800a59c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a58a:	781b      	ldrb	r3, [r3, #0]
 800a58c:	b123      	cbz	r3, 800a598 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a58e:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800a592:	f080 0001 	eor.w	r0, r0, #1
 800a596:	4770      	bx	lr
 800a598:	2001      	movs	r0, #1
 800a59a:	4770      	bx	lr
 800a59c:	20016b72 	.word	0x20016b72

0800a5a0 <_ZN8touchgfx3HAL8endFrameEv>:
 800a5a0:	b510      	push	{r4, lr}
 800a5a2:	4604      	mov	r4, r0
 800a5a4:	6840      	ldr	r0, [r0, #4]
 800a5a6:	6803      	ldr	r3, [r0, #0]
 800a5a8:	689b      	ldr	r3, [r3, #8]
 800a5aa:	4798      	blx	r3
 800a5ac:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800a5b0:	b113      	cbz	r3, 800a5b8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a5b2:	2301      	movs	r3, #1
 800a5b4:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800a5b8:	bd10      	pop	{r4, pc}

0800a5ba <_ZN8touchgfx3HAL10initializeEv>:
 800a5ba:	b510      	push	{r4, lr}
 800a5bc:	4604      	mov	r4, r0
 800a5be:	f7f7 f941 	bl	8001844 <_ZN8touchgfx10OSWrappers10initializeEv>
 800a5c2:	f7f7 f81f 	bl	8001604 <_ZN8touchgfx4GPIO4initEv>
 800a5c6:	6860      	ldr	r0, [r4, #4]
 800a5c8:	6803      	ldr	r3, [r0, #0]
 800a5ca:	68db      	ldr	r3, [r3, #12]
 800a5cc:	4798      	blx	r3
 800a5ce:	68e0      	ldr	r0, [r4, #12]
 800a5d0:	6803      	ldr	r3, [r0, #0]
 800a5d2:	689b      	ldr	r3, [r3, #8]
 800a5d4:	4798      	blx	r3
 800a5d6:	6823      	ldr	r3, [r4, #0]
 800a5d8:	4620      	mov	r0, r4
 800a5da:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800a5dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a5e0:	4718      	bx	r3

0800a5e2 <_ZN8touchgfx3HAL9taskEntryEv>:
 800a5e2:	b508      	push	{r3, lr}
 800a5e4:	6803      	ldr	r3, [r0, #0]
 800a5e6:	4604      	mov	r4, r0
 800a5e8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a5ec:	4798      	blx	r3
 800a5ee:	6823      	ldr	r3, [r4, #0]
 800a5f0:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a5f2:	4620      	mov	r0, r4
 800a5f4:	4798      	blx	r3
 800a5f6:	f7f7 f971 	bl	80018dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800a5fa:	6823      	ldr	r3, [r4, #0]
 800a5fc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800a5fe:	e7f8      	b.n	800a5f2 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800a600 <_ZN8touchgfx3HAL4tickEv>:
 800a600:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a602:	6803      	ldr	r3, [r0, #0]
 800a604:	4604      	mov	r4, r0
 800a606:	4d5b      	ldr	r5, [pc, #364]	@ (800a774 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800a608:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800a60c:	4798      	blx	r3
 800a60e:	2800      	cmp	r0, #0
 800a610:	f000 8095 	beq.w	800a73e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800a614:	2001      	movs	r0, #1
 800a616:	2600      	movs	r6, #0
 800a618:	f7f6 ff5a 	bl	80014d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a61c:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800a620:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800a624:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800a628:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800a62c:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800a630:	b133      	cbz	r3, 800a640 <_ZN8touchgfx3HAL4tickEv+0x40>
 800a632:	6823      	ldr	r3, [r4, #0]
 800a634:	4620      	mov	r0, r4
 800a636:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800a63a:	4798      	blx	r3
 800a63c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800a640:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800a644:	2601      	movs	r6, #1
 800a646:	6862      	ldr	r2, [r4, #4]
 800a648:	f083 0301 	eor.w	r3, r3, #1
 800a64c:	702e      	strb	r6, [r5, #0]
 800a64e:	7253      	strb	r3, [r2, #9]
 800a650:	f005 fbde 	bl	800fe10 <_ZN8touchgfx11Application11getInstanceEv>
 800a654:	6803      	ldr	r3, [r0, #0]
 800a656:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a658:	4798      	blx	r3
 800a65a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800a65e:	b90b      	cbnz	r3, 800a664 <_ZN8touchgfx3HAL4tickEv+0x64>
 800a660:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800a664:	f005 fbd4 	bl	800fe10 <_ZN8touchgfx11Application11getInstanceEv>
 800a668:	6803      	ldr	r3, [r0, #0]
 800a66a:	695b      	ldr	r3, [r3, #20]
 800a66c:	4798      	blx	r3
 800a66e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800a670:	6803      	ldr	r3, [r0, #0]
 800a672:	691b      	ldr	r3, [r3, #16]
 800a674:	4798      	blx	r3
 800a676:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800a67a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800a67e:	3b01      	subs	r3, #1
 800a680:	b2db      	uxtb	r3, r3
 800a682:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800a686:	b10a      	cbz	r2, 800a68c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800a688:	2b00      	cmp	r3, #0
 800a68a:	d1eb      	bne.n	800a664 <_ZN8touchgfx3HAL4tickEv+0x64>
 800a68c:	4a3a      	ldr	r2, [pc, #232]	@ (800a778 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800a68e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800a692:	7813      	ldrb	r3, [r2, #0]
 800a694:	3301      	adds	r3, #1
 800a696:	b25b      	sxtb	r3, r3
 800a698:	4299      	cmp	r1, r3
 800a69a:	7013      	strb	r3, [r2, #0]
 800a69c:	dc10      	bgt.n	800a6c0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800a69e:	2300      	movs	r3, #0
 800a6a0:	68e0      	ldr	r0, [r4, #12]
 800a6a2:	a902      	add	r1, sp, #8
 800a6a4:	7013      	strb	r3, [r2, #0]
 800a6a6:	aa03      	add	r2, sp, #12
 800a6a8:	6803      	ldr	r3, [r0, #0]
 800a6aa:	68db      	ldr	r3, [r3, #12]
 800a6ac:	4798      	blx	r3
 800a6ae:	6823      	ldr	r3, [r4, #0]
 800a6b0:	2800      	cmp	r0, #0
 800a6b2:	d050      	beq.n	800a756 <_ZN8touchgfx3HAL4tickEv+0x156>
 800a6b4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800a6b8:	4620      	mov	r0, r4
 800a6ba:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a6be:	4798      	blx	r3
 800a6c0:	2300      	movs	r3, #0
 800a6c2:	6960      	ldr	r0, [r4, #20]
 800a6c4:	f88d 3007 	strb.w	r3, [sp, #7]
 800a6c8:	b158      	cbz	r0, 800a6e2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800a6ca:	6803      	ldr	r3, [r0, #0]
 800a6cc:	f10d 0107 	add.w	r1, sp, #7
 800a6d0:	68db      	ldr	r3, [r3, #12]
 800a6d2:	4798      	blx	r3
 800a6d4:	b128      	cbz	r0, 800a6e2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800a6d6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800a6d8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a6dc:	6803      	ldr	r3, [r0, #0]
 800a6de:	68db      	ldr	r3, [r3, #12]
 800a6e0:	4798      	blx	r3
 800a6e2:	f104 001c 	add.w	r0, r4, #28
 800a6e6:	f016 f843 	bl	8020770 <_ZN8touchgfx8Gestures4tickEv>
 800a6ea:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800a6ee:	b30b      	cbz	r3, 800a734 <_ZN8touchgfx3HAL4tickEv+0x134>
 800a6f0:	6920      	ldr	r0, [r4, #16]
 800a6f2:	6803      	ldr	r3, [r0, #0]
 800a6f4:	691b      	ldr	r3, [r3, #16]
 800a6f6:	4798      	blx	r3
 800a6f8:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a6fa:	4606      	mov	r6, r0
 800a6fc:	b903      	cbnz	r3, 800a700 <_ZN8touchgfx3HAL4tickEv+0x100>
 800a6fe:	6760      	str	r0, [r4, #116]	@ 0x74
 800a700:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a702:	4a1e      	ldr	r2, [pc, #120]	@ (800a77c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800a704:	1af3      	subs	r3, r6, r3
 800a706:	4293      	cmp	r3, r2
 800a708:	d914      	bls.n	800a734 <_ZN8touchgfx3HAL4tickEv+0x134>
 800a70a:	6920      	ldr	r0, [r4, #16]
 800a70c:	6803      	ldr	r3, [r0, #0]
 800a70e:	699b      	ldr	r3, [r3, #24]
 800a710:	4798      	blx	r3
 800a712:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a714:	2264      	movs	r2, #100	@ 0x64
 800a716:	1af3      	subs	r3, r6, r3
 800a718:	fbb3 f3f2 	udiv	r3, r3, r2
 800a71c:	fbb0 f0f3 	udiv	r0, r0, r3
 800a720:	2800      	cmp	r0, #0
 800a722:	dc1d      	bgt.n	800a760 <_ZN8touchgfx3HAL4tickEv+0x160>
 800a724:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800a728:	6920      	ldr	r0, [r4, #16]
 800a72a:	2100      	movs	r1, #0
 800a72c:	6803      	ldr	r3, [r0, #0]
 800a72e:	69db      	ldr	r3, [r3, #28]
 800a730:	4798      	blx	r3
 800a732:	6766      	str	r6, [r4, #116]	@ 0x74
 800a734:	f005 fb6c 	bl	800fe10 <_ZN8touchgfx11Application11getInstanceEv>
 800a738:	6803      	ldr	r3, [r0, #0]
 800a73a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a73c:	4798      	blx	r3
 800a73e:	6823      	ldr	r3, [r4, #0]
 800a740:	4620      	mov	r0, r4
 800a742:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800a746:	4798      	blx	r3
 800a748:	2001      	movs	r0, #1
 800a74a:	f7f6 fef1 	bl	8001530 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a74e:	2300      	movs	r3, #0
 800a750:	702b      	strb	r3, [r5, #0]
 800a752:	b004      	add	sp, #16
 800a754:	bd70      	pop	{r4, r5, r6, pc}
 800a756:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800a75a:	4620      	mov	r0, r4
 800a75c:	4798      	blx	r3
 800a75e:	e7af      	b.n	800a6c0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800a760:	2863      	cmp	r0, #99	@ 0x63
 800a762:	bfcb      	itete	gt
 800a764:	2300      	movgt	r3, #0
 800a766:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800a76a:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800a76e:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800a772:	e7d9      	b.n	800a728 <_ZN8touchgfx3HAL4tickEv+0x128>
 800a774:	20016b78 	.word	0x20016b78
 800a778:	20016b79 	.word	0x20016b79
 800a77c:	05f5e100 	.word	0x05f5e100

0800a780 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800a780:	b510      	push	{r4, lr}
 800a782:	4604      	mov	r4, r0
 800a784:	f7f7 f88e 	bl	80018a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800a788:	2200      	movs	r2, #0
 800a78a:	6863      	ldr	r3, [r4, #4]
 800a78c:	729a      	strb	r2, [r3, #10]
 800a78e:	bd10      	pop	{r4, pc}

0800a790 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800a790:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800a792:	301c      	adds	r0, #28
 800a794:	f015 bfea 	b.w	802076c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800a798 <_ZN8touchgfx3HAL5touchEll>:
 800a798:	b530      	push	{r4, r5, lr}
 800a79a:	b087      	sub	sp, #28
 800a79c:	4604      	mov	r4, r0
 800a79e:	a804      	add	r0, sp, #16
 800a7a0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a7a4:	f005 f962 	bl	800fa6c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800a7a8:	9b04      	ldr	r3, [sp, #16]
 800a7aa:	a906      	add	r1, sp, #24
 800a7ac:	a803      	add	r0, sp, #12
 800a7ae:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a7b2:	9b05      	ldr	r3, [sp, #20]
 800a7b4:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a7b8:	f005 f9aa 	bl	800fb10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a7bc:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800a7c0:	f104 001c 	add.w	r0, r4, #28
 800a7c4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a7c8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a7cc:	b189      	cbz	r1, 800a7f2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a7ce:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800a7d2:	9300      	str	r3, [sp, #0]
 800a7d4:	4613      	mov	r3, r2
 800a7d6:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800a7da:	462a      	mov	r2, r5
 800a7dc:	f015 ffd6 	bl	802078c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a7e0:	b128      	cbz	r0, 800a7ee <_ZN8touchgfx3HAL5touchEll+0x56>
 800a7e2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a7e6:	6623      	str	r3, [r4, #96]	@ 0x60
 800a7e8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a7ec:	6663      	str	r3, [r4, #100]	@ 0x64
 800a7ee:	b007      	add	sp, #28
 800a7f0:	bd30      	pop	{r4, r5, pc}
 800a7f2:	f016 f80b 	bl	802080c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a7f6:	2301      	movs	r3, #1
 800a7f8:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800a7fc:	e7f1      	b.n	800a7e2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a7fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a7fe:	b510      	push	{r4, lr}
 800a800:	2b00      	cmp	r3, #0
 800a802:	d046      	beq.n	800a892 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a804:	ea81 0002 	eor.w	r0, r1, r2
 800a808:	07c4      	lsls	r4, r0, #31
 800a80a:	d508      	bpl.n	800a81e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a80c:	440b      	add	r3, r1
 800a80e:	3a01      	subs	r2, #1
 800a810:	428b      	cmp	r3, r1
 800a812:	d93e      	bls.n	800a892 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a814:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a818:	f801 0b01 	strb.w	r0, [r1], #1
 800a81c:	e7f8      	b.n	800a810 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a81e:	07d0      	lsls	r0, r2, #31
 800a820:	bf42      	ittt	mi
 800a822:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a826:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a82a:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a82e:	2b01      	cmp	r3, #1
 800a830:	d911      	bls.n	800a856 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a832:	ea81 0402 	eor.w	r4, r1, r2
 800a836:	4610      	mov	r0, r2
 800a838:	07a4      	lsls	r4, r4, #30
 800a83a:	d022      	beq.n	800a882 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800a83c:	f023 0401 	bic.w	r4, r3, #1
 800a840:	440c      	add	r4, r1
 800a842:	428c      	cmp	r4, r1
 800a844:	4602      	mov	r2, r0
 800a846:	d904      	bls.n	800a852 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800a848:	8812      	ldrh	r2, [r2, #0]
 800a84a:	3002      	adds	r0, #2
 800a84c:	f821 2b02 	strh.w	r2, [r1], #2
 800a850:	e7f7      	b.n	800a842 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800a852:	f003 0301 	and.w	r3, r3, #1
 800a856:	f023 0003 	bic.w	r0, r3, #3
 800a85a:	4408      	add	r0, r1
 800a85c:	4288      	cmp	r0, r1
 800a85e:	4614      	mov	r4, r2
 800a860:	d904      	bls.n	800a86c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800a862:	6824      	ldr	r4, [r4, #0]
 800a864:	3204      	adds	r2, #4
 800a866:	f841 4b04 	str.w	r4, [r1], #4
 800a86a:	e7f7      	b.n	800a85c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800a86c:	f003 0303 	and.w	r3, r3, #3
 800a870:	3a01      	subs	r2, #1
 800a872:	440b      	add	r3, r1
 800a874:	428b      	cmp	r3, r1
 800a876:	d90c      	bls.n	800a892 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a878:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a87c:	f801 0b01 	strb.w	r0, [r1], #1
 800a880:	e7f8      	b.n	800a874 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800a882:	0790      	lsls	r0, r2, #30
 800a884:	d0e7      	beq.n	800a856 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a886:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a88a:	3b02      	subs	r3, #2
 800a88c:	f821 0b02 	strh.w	r0, [r1], #2
 800a890:	e7e1      	b.n	800a856 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a892:	2001      	movs	r0, #1
 800a894:	bd10      	pop	{r4, pc}

0800a896 <_ZN8touchgfx3HAL7noTouchEv>:
 800a896:	b510      	push	{r4, lr}
 800a898:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800a89c:	4604      	mov	r4, r0
 800a89e:	b153      	cbz	r3, 800a8b6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a8a0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800a8a4:	2101      	movs	r1, #1
 800a8a6:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800a8aa:	301c      	adds	r0, #28
 800a8ac:	f015 ffae 	bl	802080c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a8b0:	2300      	movs	r3, #0
 800a8b2:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800a8b6:	bd10      	pop	{r4, pc}

0800a8b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a8b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a8bc:	b085      	sub	sp, #20
 800a8be:	4604      	mov	r4, r0
 800a8c0:	2000      	movs	r0, #0
 800a8c2:	4699      	mov	r9, r3
 800a8c4:	ad04      	add	r5, sp, #16
 800a8c6:	460f      	mov	r7, r1
 800a8c8:	4690      	mov	r8, r2
 800a8ca:	f845 0d04 	str.w	r0, [r5, #-4]!
 800a8ce:	69a0      	ldr	r0, [r4, #24]
 800a8d0:	6806      	ldr	r6, [r0, #0]
 800a8d2:	9501      	str	r5, [sp, #4]
 800a8d4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800a8d8:	9500      	str	r5, [sp, #0]
 800a8da:	6835      	ldr	r5, [r6, #0]
 800a8dc:	47a8      	blx	r5
 800a8de:	4d10      	ldr	r5, [pc, #64]	@ (800a920 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800a8e0:	4606      	mov	r6, r0
 800a8e2:	f8a5 9000 	strh.w	r9, [r5]
 800a8e6:	f7f7 fd79 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800a8ea:	6803      	ldr	r3, [r0, #0]
 800a8ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a8ee:	4798      	blx	r3
 800a8f0:	b128      	cbz	r0, 800a8fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800a8f2:	2801      	cmp	r0, #1
 800a8f4:	d00b      	beq.n	800a90e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800a8f6:	4630      	mov	r0, r6
 800a8f8:	b005      	add	sp, #20
 800a8fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a8fe:	882b      	ldrh	r3, [r5, #0]
 800a900:	fb08 7203 	mla	r2, r8, r3, r7
 800a904:	9b03      	ldr	r3, [sp, #12]
 800a906:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a90a:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800a90c:	e7f3      	b.n	800a8f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a90e:	882a      	ldrh	r2, [r5, #0]
 800a910:	9b03      	ldr	r3, [sp, #12]
 800a912:	fb08 7202 	mla	r2, r8, r2, r7
 800a916:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a91a:	1a9a      	subs	r2, r3, r2
 800a91c:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800a91e:	e7ea      	b.n	800a8f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a920:	20016b6e 	.word	0x20016b6e

0800a924 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800a924:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a926:	b08b      	sub	sp, #44	@ 0x2c
 800a928:	4617      	mov	r7, r2
 800a92a:	4604      	mov	r4, r0
 800a92c:	460e      	mov	r6, r1
 800a92e:	461d      	mov	r5, r3
 800a930:	f7f7 fd54 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800a934:	6803      	ldr	r3, [r0, #0]
 800a936:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a938:	4798      	blx	r3
 800a93a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800a93e:	9007      	str	r0, [sp, #28]
 800a940:	4631      	mov	r1, r6
 800a942:	6822      	ldr	r2, [r4, #0]
 800a944:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a948:	4b0c      	ldr	r3, [pc, #48]	@ (800a97c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800a94a:	4620      	mov	r0, r4
 800a94c:	881b      	ldrh	r3, [r3, #0]
 800a94e:	9306      	str	r3, [sp, #24]
 800a950:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800a954:	9305      	str	r3, [sp, #20]
 800a956:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800a95a:	9304      	str	r3, [sp, #16]
 800a95c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a960:	9303      	str	r3, [sp, #12]
 800a962:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a966:	9302      	str	r3, [sp, #8]
 800a968:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a96c:	e9cd 5300 	strd	r5, r3, [sp]
 800a970:	463b      	mov	r3, r7
 800a972:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800a974:	2200      	movs	r2, #0
 800a976:	47a8      	blx	r5
 800a978:	b00b      	add	sp, #44	@ 0x2c
 800a97a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a97c:	20016b6e 	.word	0x20016b6e

0800a980 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800a980:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a984:	4698      	mov	r8, r3
 800a986:	6803      	ldr	r3, [r0, #0]
 800a988:	b08b      	sub	sp, #44	@ 0x2c
 800a98a:	4617      	mov	r7, r2
 800a98c:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800a98e:	460e      	mov	r6, r1
 800a990:	4b13      	ldr	r3, [pc, #76]	@ (800a9e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800a992:	4604      	mov	r4, r0
 800a994:	f8b3 9000 	ldrh.w	r9, [r3]
 800a998:	f7f7 fd20 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800a99c:	6803      	ldr	r3, [r0, #0]
 800a99e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a9a0:	4798      	blx	r3
 800a9a2:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800a9a6:	2200      	movs	r2, #0
 800a9a8:	4631      	mov	r1, r6
 800a9aa:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a9ae:	2302      	movs	r3, #2
 800a9b0:	4620      	mov	r0, r4
 800a9b2:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800a9b6:	2301      	movs	r3, #1
 800a9b8:	9305      	str	r3, [sp, #20]
 800a9ba:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800a9be:	9304      	str	r3, [sp, #16]
 800a9c0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800a9c4:	9303      	str	r3, [sp, #12]
 800a9c6:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a9ca:	9302      	str	r3, [sp, #8]
 800a9cc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a9d0:	e9cd 8300 	strd	r8, r3, [sp]
 800a9d4:	463b      	mov	r3, r7
 800a9d6:	47a8      	blx	r5
 800a9d8:	b00b      	add	sp, #44	@ 0x2c
 800a9da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a9de:	bf00      	nop
 800a9e0:	20016b6e 	.word	0x20016b6e

0800a9e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800a9e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a9e8:	4698      	mov	r8, r3
 800a9ea:	6803      	ldr	r3, [r0, #0]
 800a9ec:	b087      	sub	sp, #28
 800a9ee:	460e      	mov	r6, r1
 800a9f0:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800a9f2:	4617      	mov	r7, r2
 800a9f4:	4b0f      	ldr	r3, [pc, #60]	@ (800aa34 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800a9f6:	4604      	mov	r4, r0
 800a9f8:	f8b3 9000 	ldrh.w	r9, [r3]
 800a9fc:	f7f7 fcee 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800aa00:	6803      	ldr	r3, [r0, #0]
 800aa02:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aa04:	4798      	blx	r3
 800aa06:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800aa0a:	463a      	mov	r2, r7
 800aa0c:	4631      	mov	r1, r6
 800aa0e:	f8cd 900c 	str.w	r9, [sp, #12]
 800aa12:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800aa16:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800aa1a:	4620      	mov	r0, r4
 800aa1c:	9302      	str	r3, [sp, #8]
 800aa1e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800aa22:	9301      	str	r3, [sp, #4]
 800aa24:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800aa28:	9300      	str	r3, [sp, #0]
 800aa2a:	4643      	mov	r3, r8
 800aa2c:	47a8      	blx	r5
 800aa2e:	b007      	add	sp, #28
 800aa30:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aa34:	20016b6e 	.word	0x20016b6e

0800aa38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800aa38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa3c:	4604      	mov	r4, r0
 800aa3e:	b08f      	sub	sp, #60	@ 0x3c
 800aa40:	4610      	mov	r0, r2
 800aa42:	460d      	mov	r5, r1
 800aa44:	4691      	mov	r9, r2
 800aa46:	461e      	mov	r6, r3
 800aa48:	f008 fa62 	bl	8012f10 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800aa4c:	2800      	cmp	r0, #0
 800aa4e:	f000 809d 	beq.w	800ab8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800aa52:	6823      	ldr	r3, [r4, #0]
 800aa54:	4620      	mov	r0, r4
 800aa56:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800abf0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800aa5a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800aa5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800aa60:	4798      	blx	r3
 800aa62:	6823      	ldr	r3, [r4, #0]
 800aa64:	4620      	mov	r0, r4
 800aa66:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800abf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800aa6a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aa6c:	4798      	blx	r3
 800aa6e:	f8bb 3000 	ldrh.w	r3, [fp]
 800aa72:	4f5c      	ldr	r7, [pc, #368]	@ (800abe4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800aa74:	9301      	str	r3, [sp, #4]
 800aa76:	f8ba 3000 	ldrh.w	r3, [sl]
 800aa7a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800aa7e:	4640      	mov	r0, r8
 800aa80:	9302      	str	r3, [sp, #8]
 800aa82:	883b      	ldrh	r3, [r7, #0]
 800aa84:	9303      	str	r3, [sp, #12]
 800aa86:	4b58      	ldr	r3, [pc, #352]	@ (800abe8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800aa88:	881a      	ldrh	r2, [r3, #0]
 800aa8a:	9305      	str	r3, [sp, #20]
 800aa8c:	9204      	str	r2, [sp, #16]
 800aa8e:	f008 fad3 	bl	8013038 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aa92:	8038      	strh	r0, [r7, #0]
 800aa94:	4640      	mov	r0, r8
 800aa96:	f008 fb03 	bl	80130a0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aa9a:	9b05      	ldr	r3, [sp, #20]
 800aa9c:	b280      	uxth	r0, r0
 800aa9e:	8018      	strh	r0, [r3, #0]
 800aaa0:	4b52      	ldr	r3, [pc, #328]	@ (800abec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800aaa2:	781b      	ldrb	r3, [r3, #0]
 800aaa4:	2b00      	cmp	r3, #0
 800aaa6:	d174      	bne.n	800ab92 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800aaa8:	883b      	ldrh	r3, [r7, #0]
 800aaaa:	f8aa 0000 	strh.w	r0, [sl]
 800aaae:	f8ab 3000 	strh.w	r3, [fp]
 800aab2:	4648      	mov	r0, r9
 800aab4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800aab8:	f008 fa2a 	bl	8012f10 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800aabc:	2200      	movs	r2, #0
 800aabe:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800aac2:	4611      	mov	r1, r2
 800aac4:	4628      	mov	r0, r5
 800aac6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800aaca:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800aace:	f7f8 fa68 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 800aad2:	2301      	movs	r3, #1
 800aad4:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800aad8:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800aadc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800aae0:	2b00      	cmp	r3, #0
 800aae2:	dd5c      	ble.n	800ab9e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800aae4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800aae8:	2b00      	cmp	r3, #0
 800aaea:	dd58      	ble.n	800ab9e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800aaec:	462a      	mov	r2, r5
 800aaee:	ab0a      	add	r3, sp, #40	@ 0x28
 800aaf0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800aaf4:	6851      	ldr	r1, [r2, #4]
 800aaf6:	c303      	stmia	r3!, {r0, r1}
 800aaf8:	4631      	mov	r1, r6
 800aafa:	a80a      	add	r0, sp, #40	@ 0x28
 800aafc:	f7ff f920 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 800ab00:	4b38      	ldr	r3, [pc, #224]	@ (800abe4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ab02:	2100      	movs	r1, #0
 800ab04:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ab08:	4b37      	ldr	r3, [pc, #220]	@ (800abe8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ab0a:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800ab0e:	aa0a      	add	r2, sp, #40	@ 0x28
 800ab10:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ab14:	910c      	str	r1, [sp, #48]	@ 0x30
 800ab16:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ab1a:	ab08      	add	r3, sp, #32
 800ab1c:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ab20:	e883 0003 	stmia.w	r3, {r0, r1}
 800ab24:	4618      	mov	r0, r3
 800ab26:	a90c      	add	r1, sp, #48	@ 0x30
 800ab28:	f7ff f90a 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 800ab2c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800ab2e:	2b00      	cmp	r3, #0
 800ab30:	d13c      	bne.n	800abac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800ab32:	2000      	movs	r0, #0
 800ab34:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800ab38:	2600      	movs	r6, #0
 800ab3a:	696b      	ldr	r3, [r5, #20]
 800ab3c:	a908      	add	r1, sp, #32
 800ab3e:	682a      	ldr	r2, [r5, #0]
 800ab40:	4628      	mov	r0, r5
 800ab42:	9305      	str	r3, [sp, #20]
 800ab44:	616e      	str	r6, [r5, #20]
 800ab46:	6892      	ldr	r2, [r2, #8]
 800ab48:	4790      	blx	r2
 800ab4a:	9b05      	ldr	r3, [sp, #20]
 800ab4c:	4652      	mov	r2, sl
 800ab4e:	4649      	mov	r1, r9
 800ab50:	616b      	str	r3, [r5, #20]
 800ab52:	4628      	mov	r0, r5
 800ab54:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800ab58:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800ab5c:	f7f8 fa21 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 800ab60:	9a01      	ldr	r2, [sp, #4]
 800ab62:	4b23      	ldr	r3, [pc, #140]	@ (800abf0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800ab64:	4620      	mov	r0, r4
 800ab66:	801a      	strh	r2, [r3, #0]
 800ab68:	9a02      	ldr	r2, [sp, #8]
 800ab6a:	4b22      	ldr	r3, [pc, #136]	@ (800abf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800ab6c:	801a      	strh	r2, [r3, #0]
 800ab6e:	9a03      	ldr	r2, [sp, #12]
 800ab70:	4b1c      	ldr	r3, [pc, #112]	@ (800abe4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ab72:	801a      	strh	r2, [r3, #0]
 800ab74:	4b1c      	ldr	r3, [pc, #112]	@ (800abe8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ab76:	9a04      	ldr	r2, [sp, #16]
 800ab78:	801a      	strh	r2, [r3, #0]
 800ab7a:	6823      	ldr	r3, [r4, #0]
 800ab7c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800ab80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ab82:	4798      	blx	r3
 800ab84:	6823      	ldr	r3, [r4, #0]
 800ab86:	4620      	mov	r0, r4
 800ab88:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ab8a:	4798      	blx	r3
 800ab8c:	b00f      	add	sp, #60	@ 0x3c
 800ab8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab92:	883b      	ldrh	r3, [r7, #0]
 800ab94:	f8ab 0000 	strh.w	r0, [fp]
 800ab98:	f8aa 3000 	strh.w	r3, [sl]
 800ab9c:	e789      	b.n	800aab2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800ab9e:	462a      	mov	r2, r5
 800aba0:	ab0a      	add	r3, sp, #40	@ 0x28
 800aba2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800aba6:	6851      	ldr	r1, [r2, #4]
 800aba8:	c303      	stmia	r3!, {r0, r1}
 800abaa:	e7a9      	b.n	800ab00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800abac:	a807      	add	r0, sp, #28
 800abae:	f008 fbb3 	bl	8013318 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800abb2:	4606      	mov	r6, r0
 800abb4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800abb6:	6803      	ldr	r3, [r0, #0]
 800abb8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800abba:	4798      	blx	r3
 800abbc:	4286      	cmp	r6, r0
 800abbe:	d1b8      	bne.n	800ab32 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800abc0:	f7f7 fc0c 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800abc4:	6803      	ldr	r3, [r0, #0]
 800abc6:	4606      	mov	r6, r0
 800abc8:	a807      	add	r0, sp, #28
 800abca:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800abcc:	9305      	str	r3, [sp, #20]
 800abce:	f008 fba3 	bl	8013318 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800abd2:	9b05      	ldr	r3, [sp, #20]
 800abd4:	4601      	mov	r1, r0
 800abd6:	4630      	mov	r0, r6
 800abd8:	4798      	blx	r3
 800abda:	f080 0001 	eor.w	r0, r0, #1
 800abde:	b2c0      	uxtb	r0, r0
 800abe0:	e7a8      	b.n	800ab34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800abe2:	bf00      	nop
 800abe4:	20016b68 	.word	0x20016b68
 800abe8:	20016b6a 	.word	0x20016b6a
 800abec:	20016b6c 	.word	0x20016b6c
 800abf0:	20016b6e 	.word	0x20016b6e
 800abf4:	20016b70 	.word	0x20016b70

0800abf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800abf8:	4b07      	ldr	r3, [pc, #28]	@ (800ac18 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800abfa:	b510      	push	{r4, lr}
 800abfc:	781b      	ldrb	r3, [r3, #0]
 800abfe:	4604      	mov	r4, r0
 800ac00:	b13b      	cbz	r3, 800ac12 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ac02:	6803      	ldr	r3, [r0, #0]
 800ac04:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ac06:	4798      	blx	r3
 800ac08:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800ac0a:	4283      	cmp	r3, r0
 800ac0c:	d101      	bne.n	800ac12 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ac0e:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800ac10:	bd10      	pop	{r4, pc}
 800ac12:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800ac14:	e7fc      	b.n	800ac10 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800ac16:	bf00      	nop
 800ac18:	20016b72 	.word	0x20016b72

0800ac1c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800ac1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac20:	461d      	mov	r5, r3
 800ac22:	b08a      	sub	sp, #40	@ 0x28
 800ac24:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800ac28:	4690      	mov	r8, r2
 800ac2a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800ac2e:	2400      	movs	r4, #0
 800ac30:	4607      	mov	r7, r0
 800ac32:	fb06 8505 	mla	r5, r6, r5, r8
 800ac36:	9404      	str	r4, [sp, #16]
 800ac38:	f88d 4020 	strb.w	r4, [sp, #32]
 800ac3c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ac40:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800ac44:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ac48:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ac4c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ac50:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ac54:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ac58:	f7ff ffce 	bl	800abf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ac5c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ac60:	6878      	ldr	r0, [r7, #4]
 800ac62:	f8ad 601e 	strh.w	r6, [sp, #30]
 800ac66:	a901      	add	r1, sp, #4
 800ac68:	9505      	str	r5, [sp, #20]
 800ac6a:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800ac6e:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800ac72:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800ac76:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800ac7a:	6803      	ldr	r3, [r0, #0]
 800ac7c:	685b      	ldr	r3, [r3, #4]
 800ac7e:	4798      	blx	r3
 800ac80:	b00a      	add	sp, #40	@ 0x28
 800ac82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ac86 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800ac86:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ac8a:	b08b      	sub	sp, #44	@ 0x2c
 800ac8c:	2400      	movs	r4, #0
 800ac8e:	4691      	mov	r9, r2
 800ac90:	461d      	mov	r5, r3
 800ac92:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800ac96:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800ac9a:	4688      	mov	r8, r1
 800ac9c:	4607      	mov	r7, r0
 800ac9e:	9404      	str	r4, [sp, #16]
 800aca0:	fb06 9505 	mla	r5, r6, r5, r9
 800aca4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800aca8:	f7ff ffa6 	bl	800abf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800acac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800acb0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800acb4:	6878      	ldr	r0, [r7, #4]
 800acb6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800acba:	a901      	add	r1, sp, #4
 800acbc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800acc0:	9505      	str	r5, [sp, #20]
 800acc2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800acc6:	f8ad 401c 	strh.w	r4, [sp, #28]
 800acca:	f8ad 601e 	strh.w	r6, [sp, #30]
 800acce:	f8cd 8010 	str.w	r8, [sp, #16]
 800acd2:	f8ad 4020 	strh.w	r4, [sp, #32]
 800acd6:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800acda:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800acde:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800ace2:	6803      	ldr	r3, [r0, #0]
 800ace4:	685b      	ldr	r3, [r3, #4]
 800ace6:	4798      	blx	r3
 800ace8:	b00b      	add	sp, #44	@ 0x2c
 800acea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800acf0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800acf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800acf4:	b08a      	sub	sp, #40	@ 0x28
 800acf6:	4698      	mov	r8, r3
 800acf8:	2300      	movs	r3, #0
 800acfa:	4606      	mov	r6, r0
 800acfc:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800ad00:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800ad04:	2d0b      	cmp	r5, #11
 800ad06:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800ad0a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800ad0e:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800ad12:	9304      	str	r3, [sp, #16]
 800ad14:	d137      	bne.n	800ad86 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800ad16:	2380      	movs	r3, #128	@ 0x80
 800ad18:	f88d 0020 	strb.w	r0, [sp, #32]
 800ad1c:	4630      	mov	r0, r6
 800ad1e:	9203      	str	r2, [sp, #12]
 800ad20:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ad24:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ad28:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ad2c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ad30:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ad34:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800ad38:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ad3c:	f7ff ff5c 	bl	800abf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ad40:	2c0b      	cmp	r4, #11
 800ad42:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800ad46:	f8ad 701e 	strh.w	r7, [sp, #30]
 800ad4a:	bf94      	ite	ls
 800ad4c:	4b19      	ldrls	r3, [pc, #100]	@ (800adb4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800ad4e:	2100      	movhi	r1, #0
 800ad50:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800ad54:	bf98      	it	ls
 800ad56:	5d19      	ldrbls	r1, [r3, r4]
 800ad58:	fb02 8307 	mla	r3, r2, r7, r8
 800ad5c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800ad60:	10c9      	asrs	r1, r1, #3
 800ad62:	fb01 0003 	mla	r0, r1, r3, r0
 800ad66:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800ad6a:	a901      	add	r1, sp, #4
 800ad6c:	9005      	str	r0, [sp, #20]
 800ad6e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800ad72:	2300      	movs	r3, #0
 800ad74:	6870      	ldr	r0, [r6, #4]
 800ad76:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800ad7a:	6803      	ldr	r3, [r0, #0]
 800ad7c:	685b      	ldr	r3, [r3, #4]
 800ad7e:	4798      	blx	r3
 800ad80:	b00a      	add	sp, #40	@ 0x28
 800ad82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ad86:	2d02      	cmp	r5, #2
 800ad88:	d109      	bne.n	800ad9e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800ad8a:	28ff      	cmp	r0, #255	@ 0xff
 800ad8c:	d105      	bne.n	800ad9a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800ad8e:	f1bc 0f00 	cmp.w	ip, #0
 800ad92:	bf14      	ite	ne
 800ad94:	2340      	movne	r3, #64	@ 0x40
 800ad96:	2320      	moveq	r3, #32
 800ad98:	e7be      	b.n	800ad18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ad9a:	2340      	movs	r3, #64	@ 0x40
 800ad9c:	e7bc      	b.n	800ad18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ad9e:	28ff      	cmp	r0, #255	@ 0xff
 800ada0:	d105      	bne.n	800adae <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800ada2:	f1bc 0f00 	cmp.w	ip, #0
 800ada6:	bf14      	ite	ne
 800ada8:	2304      	movne	r3, #4
 800adaa:	2301      	moveq	r3, #1
 800adac:	e7b4      	b.n	800ad18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800adae:	2304      	movs	r3, #4
 800adb0:	e7b2      	b.n	800ad18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800adb2:	bf00      	nop
 800adb4:	08024144 	.word	0x08024144

0800adb8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800adb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800adbc:	b08b      	sub	sp, #44	@ 0x2c
 800adbe:	461d      	mov	r5, r3
 800adc0:	2400      	movs	r4, #0
 800adc2:	4688      	mov	r8, r1
 800adc4:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800adc8:	4693      	mov	fp, r2
 800adca:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800adce:	4607      	mov	r7, r0
 800add0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800add4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800add8:	9404      	str	r4, [sp, #16]
 800adda:	bf14      	ite	ne
 800addc:	2308      	movne	r3, #8
 800adde:	2302      	moveq	r3, #2
 800ade0:	fb05 b50a 	mla	r5, r5, sl, fp
 800ade4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800ade8:	f7ff ff06 	bl	800abf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800adec:	2e0b      	cmp	r6, #11
 800adee:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800adf2:	a901      	add	r1, sp, #4
 800adf4:	bf98      	it	ls
 800adf6:	4b13      	ldrls	r3, [pc, #76]	@ (800ae44 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800adf8:	f8ad a01e 	strh.w	sl, [sp, #30]
 800adfc:	bf98      	it	ls
 800adfe:	5d9c      	ldrbls	r4, [r3, r6]
 800ae00:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800ae04:	10e4      	asrs	r4, r4, #3
 800ae06:	f8cd 8010 	str.w	r8, [sp, #16]
 800ae0a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ae0e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800ae12:	fb04 0405 	mla	r4, r4, r5, r0
 800ae16:	6878      	ldr	r0, [r7, #4]
 800ae18:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ae1c:	2300      	movs	r3, #0
 800ae1e:	9405      	str	r4, [sp, #20]
 800ae20:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ae24:	f88d 9020 	strb.w	r9, [sp, #32]
 800ae28:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800ae2c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800ae30:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800ae34:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800ae38:	6803      	ldr	r3, [r0, #0]
 800ae3a:	685b      	ldr	r3, [r3, #4]
 800ae3c:	4798      	blx	r3
 800ae3e:	b00b      	add	sp, #44	@ 0x2c
 800ae40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae44:	08024144 	.word	0x08024144

0800ae48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800ae48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae4c:	461e      	mov	r6, r3
 800ae4e:	4b0a      	ldr	r3, [pc, #40]	@ (800ae78 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800ae50:	460f      	mov	r7, r1
 800ae52:	4690      	mov	r8, r2
 800ae54:	881d      	ldrh	r5, [r3, #0]
 800ae56:	f7f7 fac1 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800ae5a:	6803      	ldr	r3, [r0, #0]
 800ae5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ae5e:	4798      	blx	r3
 800ae60:	280b      	cmp	r0, #11
 800ae62:	bf96      	itet	ls
 800ae64:	4b05      	ldrls	r3, [pc, #20]	@ (800ae7c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800ae66:	2400      	movhi	r4, #0
 800ae68:	5c1c      	ldrbls	r4, [r3, r0]
 800ae6a:	fb08 7005 	mla	r0, r8, r5, r7
 800ae6e:	10e4      	asrs	r4, r4, #3
 800ae70:	fb04 6000 	mla	r0, r4, r0, r6
 800ae74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ae78:	20016b6e 	.word	0x20016b6e
 800ae7c:	08024144 	.word	0x08024144

0800ae80 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800ae80:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ae82:	b08b      	sub	sp, #44	@ 0x2c
 800ae84:	461f      	mov	r7, r3
 800ae86:	4604      	mov	r4, r0
 800ae88:	4616      	mov	r6, r2
 800ae8a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800ae8e:	2500      	movs	r5, #0
 800ae90:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ae94:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800ae98:	9504      	str	r5, [sp, #16]
 800ae9a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ae9e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800aea2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800aea6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800aeaa:	f8ad 301c 	strh.w	r3, [sp, #28]
 800aeae:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800aeb2:	f88d 3020 	strb.w	r3, [sp, #32]
 800aeb6:	f7ff fe9f 	bl	800abf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800aeba:	463a      	mov	r2, r7
 800aebc:	4631      	mov	r1, r6
 800aebe:	4603      	mov	r3, r0
 800aec0:	4620      	mov	r0, r4
 800aec2:	f7ff ffc1 	bl	800ae48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800aec6:	4b0e      	ldr	r3, [pc, #56]	@ (800af00 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800aec8:	9005      	str	r0, [sp, #20]
 800aeca:	881b      	ldrh	r3, [r3, #0]
 800aecc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800aed0:	f7f7 fa84 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800aed4:	6803      	ldr	r3, [r0, #0]
 800aed6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aed8:	4798      	blx	r3
 800aeda:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800aedc:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800aee0:	a901      	add	r1, sp, #4
 800aee2:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800aee6:	9304      	str	r3, [sp, #16]
 800aee8:	6860      	ldr	r0, [r4, #4]
 800aeea:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800aeee:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800aef2:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800aef6:	6803      	ldr	r3, [r0, #0]
 800aef8:	685b      	ldr	r3, [r3, #4]
 800aefa:	4798      	blx	r3
 800aefc:	b00b      	add	sp, #44	@ 0x2c
 800aefe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800af00:	20016b6e 	.word	0x20016b6e

0800af04 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800af04:	b5f0      	push	{r4, r5, r6, r7, lr}
 800af06:	b08d      	sub	sp, #52	@ 0x34
 800af08:	2501      	movs	r5, #1
 800af0a:	4604      	mov	r4, r0
 800af0c:	466b      	mov	r3, sp
 800af0e:	9503      	str	r5, [sp, #12]
 800af10:	e883 0006 	stmia.w	r3, {r1, r2}
 800af14:	2300      	movs	r3, #0
 800af16:	f8bd 6000 	ldrh.w	r6, [sp]
 800af1a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800af1e:	9306      	str	r3, [sp, #24]
 800af20:	6803      	ldr	r3, [r0, #0]
 800af22:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800af24:	4798      	blx	r3
 800af26:	463a      	mov	r2, r7
 800af28:	4631      	mov	r1, r6
 800af2a:	4603      	mov	r3, r0
 800af2c:	4620      	mov	r0, r4
 800af2e:	f7ff ff8b 	bl	800ae48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800af32:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800af34:	9004      	str	r0, [sp, #16]
 800af36:	9307      	str	r3, [sp, #28]
 800af38:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800af3c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800af40:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800af44:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800af48:	4b0e      	ldr	r3, [pc, #56]	@ (800af84 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800af4a:	881b      	ldrh	r3, [r3, #0]
 800af4c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800af50:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800af54:	f7f7 fa42 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800af58:	6803      	ldr	r3, [r0, #0]
 800af5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800af5c:	4798      	blx	r3
 800af5e:	23ff      	movs	r3, #255	@ 0xff
 800af60:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800af64:	a903      	add	r1, sp, #12
 800af66:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800af6a:	6860      	ldr	r0, [r4, #4]
 800af6c:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800af70:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800af74:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800af78:	6803      	ldr	r3, [r0, #0]
 800af7a:	685b      	ldr	r3, [r3, #4]
 800af7c:	4798      	blx	r3
 800af7e:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800af80:	b00d      	add	sp, #52	@ 0x34
 800af82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800af84:	20016b6e 	.word	0x20016b6e

0800af88 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800af88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af8c:	b08c      	sub	sp, #48	@ 0x30
 800af8e:	461e      	mov	r6, r3
 800af90:	2300      	movs	r3, #0
 800af92:	4604      	mov	r4, r0
 800af94:	466d      	mov	r5, sp
 800af96:	9306      	str	r3, [sp, #24]
 800af98:	6803      	ldr	r3, [r0, #0]
 800af9a:	e885 0006 	stmia.w	r5, {r1, r2}
 800af9e:	2501      	movs	r5, #1
 800afa0:	f8bd 7000 	ldrh.w	r7, [sp]
 800afa4:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800afa8:	9503      	str	r5, [sp, #12]
 800afaa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800afac:	4798      	blx	r3
 800afae:	4642      	mov	r2, r8
 800afb0:	4639      	mov	r1, r7
 800afb2:	4603      	mov	r3, r0
 800afb4:	4620      	mov	r0, r4
 800afb6:	f7ff ff47 	bl	800ae48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800afba:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800afbe:	9004      	str	r0, [sp, #16]
 800afc0:	f8ad 3020 	strh.w	r3, [sp, #32]
 800afc4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800afc8:	9607      	str	r6, [sp, #28]
 800afca:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800afce:	4b10      	ldr	r3, [pc, #64]	@ (800b010 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800afd0:	881b      	ldrh	r3, [r3, #0]
 800afd2:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800afd6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800afd8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800afdc:	f7f7 f9fe 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800afe0:	6803      	ldr	r3, [r0, #0]
 800afe2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800afe4:	4798      	blx	r3
 800afe6:	23ff      	movs	r3, #255	@ 0xff
 800afe8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800afec:	a903      	add	r1, sp, #12
 800afee:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800aff2:	6860      	ldr	r0, [r4, #4]
 800aff4:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800aff8:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800affc:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b000:	6803      	ldr	r3, [r0, #0]
 800b002:	685b      	ldr	r3, [r3, #4]
 800b004:	4798      	blx	r3
 800b006:	4630      	mov	r0, r6
 800b008:	b00c      	add	sp, #48	@ 0x30
 800b00a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b00e:	bf00      	nop
 800b010:	20016b6e 	.word	0x20016b6e

0800b014 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b014:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b016:	b085      	sub	sp, #20
 800b018:	4605      	mov	r5, r0
 800b01a:	ac02      	add	r4, sp, #8
 800b01c:	e884 0006 	stmia.w	r4, {r1, r2}
 800b020:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b024:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b028:	f7ff fde6 	bl	800abf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b02c:	4631      	mov	r1, r6
 800b02e:	4603      	mov	r3, r0
 800b030:	463a      	mov	r2, r7
 800b032:	4628      	mov	r0, r5
 800b034:	f7ff ff08 	bl	800ae48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b038:	4a05      	ldr	r2, [pc, #20]	@ (800b050 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b03a:	682b      	ldr	r3, [r5, #0]
 800b03c:	8812      	ldrh	r2, [r2, #0]
 800b03e:	9200      	str	r2, [sp, #0]
 800b040:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800b042:	4603      	mov	r3, r0
 800b044:	4628      	mov	r0, r5
 800b046:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b04a:	47b0      	blx	r6
 800b04c:	b005      	add	sp, #20
 800b04e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b050:	20016b6e 	.word	0x20016b6e

0800b054 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b054:	b570      	push	{r4, r5, r6, lr}
 800b056:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800b05a:	4604      	mov	r4, r0
 800b05c:	b19b      	cbz	r3, 800b086 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b05e:	2002      	movs	r0, #2
 800b060:	f7f6 fa96 	bl	8001590 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b064:	2300      	movs	r3, #0
 800b066:	4620      	mov	r0, r4
 800b068:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b06c:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800b070:	6823      	ldr	r3, [r4, #0]
 800b072:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800b076:	f7ff fdbf 	bl	800abf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b07a:	4601      	mov	r1, r0
 800b07c:	4620      	mov	r0, r4
 800b07e:	462b      	mov	r3, r5
 800b080:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b084:	4718      	bx	r3
 800b086:	bd70      	pop	{r4, r5, r6, pc}

0800b088 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800b088:	b570      	push	{r4, r5, r6, lr}
 800b08a:	4605      	mov	r5, r0
 800b08c:	460c      	mov	r4, r1
 800b08e:	2003      	movs	r0, #3
 800b090:	b149      	cbz	r1, 800b0a6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800b092:	f7f6 fa1d 	bl	80014d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b096:	6928      	ldr	r0, [r5, #16]
 800b098:	b168      	cbz	r0, 800b0b6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b09a:	6803      	ldr	r3, [r0, #0]
 800b09c:	2101      	movs	r1, #1
 800b09e:	695b      	ldr	r3, [r3, #20]
 800b0a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b0a4:	4718      	bx	r3
 800b0a6:	f7f6 fa43 	bl	8001530 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b0aa:	6928      	ldr	r0, [r5, #16]
 800b0ac:	b118      	cbz	r0, 800b0b6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b0ae:	6803      	ldr	r3, [r0, #0]
 800b0b0:	4621      	mov	r1, r4
 800b0b2:	695b      	ldr	r3, [r3, #20]
 800b0b4:	e7f4      	b.n	800b0a0 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800b0b6:	bd70      	pop	{r4, r5, r6, pc}

0800b0b8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b0b8:	b538      	push	{r3, r4, r5, lr}
 800b0ba:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800b0be:	4604      	mov	r4, r0
 800b0c0:	460d      	mov	r5, r1
 800b0c2:	428b      	cmp	r3, r1
 800b0c4:	d006      	beq.n	800b0d4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b0c6:	6803      	ldr	r3, [r0, #0]
 800b0c8:	b929      	cbnz	r1, 800b0d6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b0ca:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800b0ce:	4798      	blx	r3
 800b0d0:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800b0d4:	bd38      	pop	{r3, r4, r5, pc}
 800b0d6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800b0da:	e7f8      	b.n	800b0ce <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b0dc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b0dc:	4b0d      	ldr	r3, [pc, #52]	@ (800b114 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b0de:	b510      	push	{r4, lr}
 800b0e0:	781b      	ldrb	r3, [r3, #0]
 800b0e2:	4604      	mov	r4, r0
 800b0e4:	b95b      	cbnz	r3, 800b0fe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b0e6:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800b0ea:	2b02      	cmp	r3, #2
 800b0ec:	d007      	beq.n	800b0fe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b0ee:	6840      	ldr	r0, [r0, #4]
 800b0f0:	f000 f92c 	bl	800b34c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b0f4:	b118      	cbz	r0, 800b0fe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b0f6:	6862      	ldr	r2, [r4, #4]
 800b0f8:	7a53      	ldrb	r3, [r2, #9]
 800b0fa:	2b00      	cmp	r3, #0
 800b0fc:	d0fc      	beq.n	800b0f8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b0fe:	f7f6 fbc9 	bl	8001894 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b102:	4620      	mov	r0, r4
 800b104:	2100      	movs	r1, #0
 800b106:	f7ff ffd7 	bl	800b0b8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b10a:	4620      	mov	r0, r4
 800b10c:	f7ff fd74 	bl	800abf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b110:	bd10      	pop	{r4, pc}
 800b112:	bf00      	nop
 800b114:	20016b72 	.word	0x20016b72

0800b118 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800b118:	b570      	push	{r4, r5, r6, lr}
 800b11a:	4604      	mov	r4, r0
 800b11c:	6803      	ldr	r3, [r0, #0]
 800b11e:	b919      	cbnz	r1, 800b128 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800b120:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b122:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b126:	4718      	bx	r3
 800b128:	2200      	movs	r2, #0
 800b12a:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800b12e:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800b132:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b134:	4798      	blx	r3
 800b136:	6863      	ldr	r3, [r4, #4]
 800b138:	2101      	movs	r1, #1
 800b13a:	4605      	mov	r5, r0
 800b13c:	4620      	mov	r0, r4
 800b13e:	7299      	strb	r1, [r3, #10]
 800b140:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800b144:	f7ff ffb8 	bl	800b0b8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b148:	4628      	mov	r0, r5
 800b14a:	bd70      	pop	{r4, r5, r6, pc}

0800b14c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b14c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b150:	1a13      	subs	r3, r2, r0
 800b152:	4258      	negs	r0, r3
 800b154:	4158      	adcs	r0, r3
 800b156:	4770      	bx	lr

0800b158 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b158:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b15c:	1a9b      	subs	r3, r3, r2
 800b15e:	2b00      	cmp	r3, #0
 800b160:	bfdc      	itt	le
 800b162:	6882      	ldrle	r2, [r0, #8]
 800b164:	189b      	addle	r3, r3, r2
 800b166:	2b01      	cmp	r3, #1
 800b168:	bfcc      	ite	gt
 800b16a:	2000      	movgt	r0, #0
 800b16c:	2001      	movle	r0, #1
 800b16e:	4770      	bx	lr

0800b170 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b170:	6902      	ldr	r2, [r0, #16]
 800b172:	6843      	ldr	r3, [r0, #4]
 800b174:	2024      	movs	r0, #36	@ 0x24
 800b176:	fb00 3002 	mla	r0, r0, r2, r3
 800b17a:	4770      	bx	lr

0800b17c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b17c:	6803      	ldr	r3, [r0, #0]
 800b17e:	691b      	ldr	r3, [r3, #16]
 800b180:	4718      	bx	r3

0800b182 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b182:	2301      	movs	r3, #1
 800b184:	b570      	push	{r4, r5, r6, lr}
 800b186:	7203      	strb	r3, [r0, #8]
 800b188:	4604      	mov	r4, r0
 800b18a:	6840      	ldr	r0, [r0, #4]
 800b18c:	6803      	ldr	r3, [r0, #0]
 800b18e:	699b      	ldr	r3, [r3, #24]
 800b190:	4798      	blx	r3
 800b192:	6803      	ldr	r3, [r0, #0]
 800b194:	4605      	mov	r5, r0
 800b196:	2b40      	cmp	r3, #64	@ 0x40
 800b198:	d00c      	beq.n	800b1b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b19a:	d810      	bhi.n	800b1be <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b19c:	2b04      	cmp	r3, #4
 800b19e:	d01d      	beq.n	800b1dc <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b1a0:	d804      	bhi.n	800b1ac <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b1a2:	2b01      	cmp	r3, #1
 800b1a4:	d006      	beq.n	800b1b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b1a6:	2b02      	cmp	r3, #2
 800b1a8:	d02c      	beq.n	800b204 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b1aa:	bd70      	pop	{r4, r5, r6, pc}
 800b1ac:	2b08      	cmp	r3, #8
 800b1ae:	d01d      	beq.n	800b1ec <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b1b0:	2b20      	cmp	r3, #32
 800b1b2:	d1fa      	bne.n	800b1aa <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b1b4:	6823      	ldr	r3, [r4, #0]
 800b1b6:	4620      	mov	r0, r4
 800b1b8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b1ba:	4798      	blx	r3
 800b1bc:	e013      	b.n	800b1e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b1be:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b1c2:	d0f7      	beq.n	800b1b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b1c4:	d804      	bhi.n	800b1d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b1c6:	2b80      	cmp	r3, #128	@ 0x80
 800b1c8:	d0f4      	beq.n	800b1b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b1ca:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800b1ce:	e7f0      	b.n	800b1b2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b1d0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800b1d4:	d0ee      	beq.n	800b1b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b1d6:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b1da:	e7e5      	b.n	800b1a8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b1dc:	6823      	ldr	r3, [r4, #0]
 800b1de:	7f01      	ldrb	r1, [r0, #28]
 800b1e0:	4620      	mov	r0, r4
 800b1e2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b1e4:	4798      	blx	r3
 800b1e6:	6823      	ldr	r3, [r4, #0]
 800b1e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b1ea:	e006      	b.n	800b1fa <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b1ec:	6823      	ldr	r3, [r4, #0]
 800b1ee:	7f01      	ldrb	r1, [r0, #28]
 800b1f0:	4620      	mov	r0, r4
 800b1f2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b1f4:	4798      	blx	r3
 800b1f6:	6823      	ldr	r3, [r4, #0]
 800b1f8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b1fa:	4629      	mov	r1, r5
 800b1fc:	4620      	mov	r0, r4
 800b1fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b202:	4718      	bx	r3
 800b204:	6823      	ldr	r3, [r4, #0]
 800b206:	4620      	mov	r0, r4
 800b208:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b20a:	4798      	blx	r3
 800b20c:	e7f3      	b.n	800b1f6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b20e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b20e:	4770      	bx	lr

0800b210 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b210:	4770      	bx	lr

0800b212 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b212:	4770      	bx	lr

0800b214 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b214:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b218:	b510      	push	{r4, lr}
 800b21a:	1ad2      	subs	r2, r2, r3
 800b21c:	2a00      	cmp	r2, #0
 800b21e:	bfdc      	itt	le
 800b220:	6884      	ldrle	r4, [r0, #8]
 800b222:	1912      	addle	r2, r2, r4
 800b224:	2a01      	cmp	r2, #1
 800b226:	dd16      	ble.n	800b256 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b228:	6842      	ldr	r2, [r0, #4]
 800b22a:	2424      	movs	r4, #36	@ 0x24
 800b22c:	fb04 2303 	mla	r3, r4, r3, r2
 800b230:	f101 0220 	add.w	r2, r1, #32
 800b234:	f851 4b04 	ldr.w	r4, [r1], #4
 800b238:	4291      	cmp	r1, r2
 800b23a:	f843 4b04 	str.w	r4, [r3], #4
 800b23e:	d1f9      	bne.n	800b234 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b240:	780a      	ldrb	r2, [r1, #0]
 800b242:	701a      	strb	r2, [r3, #0]
 800b244:	68c3      	ldr	r3, [r0, #12]
 800b246:	6882      	ldr	r2, [r0, #8]
 800b248:	f3bf 8f5b 	dmb	ish
 800b24c:	3301      	adds	r3, #1
 800b24e:	429a      	cmp	r2, r3
 800b250:	bfd8      	it	le
 800b252:	1a9b      	suble	r3, r3, r2
 800b254:	60c3      	str	r3, [r0, #12]
 800b256:	bd10      	pop	{r4, pc}

0800b258 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b258:	6903      	ldr	r3, [r0, #16]
 800b25a:	6882      	ldr	r2, [r0, #8]
 800b25c:	f3bf 8f5b 	dmb	ish
 800b260:	3301      	adds	r3, #1
 800b262:	429a      	cmp	r2, r3
 800b264:	bfd8      	it	le
 800b266:	1a9b      	suble	r3, r3, r2
 800b268:	6103      	str	r3, [r0, #16]
 800b26a:	4770      	bx	lr

0800b26c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b26c:	b570      	push	{r4, r5, r6, lr}
 800b26e:	4604      	mov	r4, r0
 800b270:	460e      	mov	r6, r1
 800b272:	6860      	ldr	r0, [r4, #4]
 800b274:	6803      	ldr	r3, [r0, #0]
 800b276:	685b      	ldr	r3, [r3, #4]
 800b278:	4798      	blx	r3
 800b27a:	2800      	cmp	r0, #0
 800b27c:	d1f9      	bne.n	800b272 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b27e:	4d0d      	ldr	r5, [pc, #52]	@ (800b2b4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b280:	6828      	ldr	r0, [r5, #0]
 800b282:	6803      	ldr	r3, [r0, #0]
 800b284:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b286:	4798      	blx	r3
 800b288:	f7f6 fb12 	bl	80018b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b28c:	6828      	ldr	r0, [r5, #0]
 800b28e:	2101      	movs	r1, #1
 800b290:	f7ff ff12 	bl	800b0b8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b294:	6860      	ldr	r0, [r4, #4]
 800b296:	4631      	mov	r1, r6
 800b298:	6803      	ldr	r3, [r0, #0]
 800b29a:	689b      	ldr	r3, [r3, #8]
 800b29c:	4798      	blx	r3
 800b29e:	6823      	ldr	r3, [r4, #0]
 800b2a0:	4620      	mov	r0, r4
 800b2a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b2a4:	4798      	blx	r3
 800b2a6:	6828      	ldr	r0, [r5, #0]
 800b2a8:	6803      	ldr	r3, [r0, #0]
 800b2aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b2ae:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800b2b0:	4718      	bx	r3
 800b2b2:	bf00      	nop
 800b2b4:	20016b74 	.word	0x20016b74

0800b2b8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b2b8:	b508      	push	{r3, lr}
 800b2ba:	f7f6 faeb 	bl	8001894 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b2be:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b2c2:	f7f6 baef 	b.w	80018a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b2c6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b2c6:	b510      	push	{r4, lr}
 800b2c8:	4604      	mov	r4, r0
 800b2ca:	2114      	movs	r1, #20
 800b2cc:	f015 fe18 	bl	8020f00 <_ZdlPvj>
 800b2d0:	4620      	mov	r0, r4
 800b2d2:	bd10      	pop	{r4, pc}

0800b2d4 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b2d4:	b510      	push	{r4, lr}
 800b2d6:	4604      	mov	r4, r0
 800b2d8:	6840      	ldr	r0, [r0, #4]
 800b2da:	6803      	ldr	r3, [r0, #0]
 800b2dc:	681b      	ldr	r3, [r3, #0]
 800b2de:	4798      	blx	r3
 800b2e0:	b948      	cbnz	r0, 800b2f6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b2e2:	7a63      	ldrb	r3, [r4, #9]
 800b2e4:	b13b      	cbz	r3, 800b2f6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b2e6:	7a23      	ldrb	r3, [r4, #8]
 800b2e8:	b92b      	cbnz	r3, 800b2f6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b2ea:	6823      	ldr	r3, [r4, #0]
 800b2ec:	4620      	mov	r0, r4
 800b2ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b2f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b2f4:	4718      	bx	r3
 800b2f6:	bd10      	pop	{r4, pc}

0800b2f8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b2f8:	b570      	push	{r4, r5, r6, lr}
 800b2fa:	4604      	mov	r4, r0
 800b2fc:	6840      	ldr	r0, [r0, #4]
 800b2fe:	6803      	ldr	r3, [r0, #0]
 800b300:	681b      	ldr	r3, [r3, #0]
 800b302:	4798      	blx	r3
 800b304:	4605      	mov	r5, r0
 800b306:	b930      	cbnz	r0, 800b316 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b308:	7a23      	ldrb	r3, [r4, #8]
 800b30a:	b123      	cbz	r3, 800b316 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b30c:	6860      	ldr	r0, [r4, #4]
 800b30e:	6803      	ldr	r3, [r0, #0]
 800b310:	695b      	ldr	r3, [r3, #20]
 800b312:	4798      	blx	r3
 800b314:	7225      	strb	r5, [r4, #8]
 800b316:	6860      	ldr	r0, [r4, #4]
 800b318:	6803      	ldr	r3, [r0, #0]
 800b31a:	681b      	ldr	r3, [r3, #0]
 800b31c:	4798      	blx	r3
 800b31e:	b928      	cbnz	r0, 800b32c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b320:	6823      	ldr	r3, [r4, #0]
 800b322:	4620      	mov	r0, r4
 800b324:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b326:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b32a:	4718      	bx	r3
 800b32c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b330:	f7f6 bac6 	b.w	80018c0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b334 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b334:	b510      	push	{r4, lr}
 800b336:	6082      	str	r2, [r0, #8]
 800b338:	2200      	movs	r2, #0
 800b33a:	4c03      	ldr	r4, [pc, #12]	@ (800b348 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b33c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b340:	e9c0 4100 	strd	r4, r1, [r0]
 800b344:	bd10      	pop	{r4, pc}
 800b346:	bf00      	nop
 800b348:	08024158 	.word	0x08024158

0800b34c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b34c:	6840      	ldr	r0, [r0, #4]
 800b34e:	6803      	ldr	r3, [r0, #0]
 800b350:	681b      	ldr	r3, [r3, #0]
 800b352:	4718      	bx	r3

0800b354 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b354:	094a      	lsrs	r2, r1, #5
 800b356:	4b06      	ldr	r3, [pc, #24]	@ (800b370 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800b358:	60c1      	str	r1, [r0, #12]
 800b35a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800b35e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800b362:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800b366:	4313      	orrs	r3, r2
 800b368:	4319      	orrs	r1, r3
 800b36a:	8201      	strh	r1, [r0, #16]
 800b36c:	4770      	bx	lr
 800b36e:	bf00      	nop
 800b370:	fffff800 	.word	0xfffff800

0800b374 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b374:	f1a0 0008 	sub.w	r0, r0, #8
 800b378:	e7ec      	b.n	800b354 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800b37a:	bf00      	nop

0800b37c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800b37c:	b508      	push	{r3, lr}
 800b37e:	4b05      	ldr	r3, [pc, #20]	@ (800b394 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800b380:	6818      	ldr	r0, [r3, #0]
 800b382:	6803      	ldr	r3, [r0, #0]
 800b384:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800b388:	4798      	blx	r3
 800b38a:	1e43      	subs	r3, r0, #1
 800b38c:	4258      	negs	r0, r3
 800b38e:	4158      	adcs	r0, r3
 800b390:	bd08      	pop	{r3, pc}
 800b392:	bf00      	nop
 800b394:	20016b74 	.word	0x20016b74

0800b398 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800b398:	4770      	bx	lr

0800b39a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800b39a:	3808      	subs	r0, #8
 800b39c:	4770      	bx	lr

0800b39e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800b39e:	b430      	push	{r4, r5}
 800b3a0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800b3a4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800b3a8:	8a02      	ldrh	r2, [r0, #16]
 800b3aa:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800b3ae:	4629      	mov	r1, r5
 800b3b0:	9202      	str	r2, [sp, #8]
 800b3b2:	68c2      	ldr	r2, [r0, #12]
 800b3b4:	4620      	mov	r0, r4
 800b3b6:	bc30      	pop	{r4, r5}
 800b3b8:	f7f6 bc40 	b.w	8001c3c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800b3bc <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800b3bc:	f7f6 bc34 	b.w	8001c28 <_ZN8touchgfx5paint8tearDownEv>

0800b3c0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800b3c0:	b510      	push	{r4, lr}
 800b3c2:	4604      	mov	r4, r0
 800b3c4:	2114      	movs	r1, #20
 800b3c6:	f015 fd9b 	bl	8020f00 <_ZdlPvj>
 800b3ca:	4620      	mov	r0, r4
 800b3cc:	bd10      	pop	{r4, pc}

0800b3ce <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800b3ce:	f1a0 0008 	sub.w	r0, r0, #8
 800b3d2:	e7f5      	b.n	800b3c0 <_ZN8touchgfx13PainterRGB565D0Ev>

0800b3d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800b3d4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b3d6:	6803      	ldr	r3, [r0, #0]
 800b3d8:	460d      	mov	r5, r1
 800b3da:	4604      	mov	r4, r0
 800b3dc:	4601      	mov	r1, r0
 800b3de:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800b3e0:	a802      	add	r0, sp, #8
 800b3e2:	4798      	blx	r3
 800b3e4:	6828      	ldr	r0, [r5, #0]
 800b3e6:	6869      	ldr	r1, [r5, #4]
 800b3e8:	466b      	mov	r3, sp
 800b3ea:	c303      	stmia	r3!, {r0, r1}
 800b3ec:	4668      	mov	r0, sp
 800b3ee:	4619      	mov	r1, r3
 800b3f0:	f7fe fca6 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 800b3f4:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800b3f6:	b188      	cbz	r0, 800b41c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b3f8:	6803      	ldr	r3, [r0, #0]
 800b3fa:	1d21      	adds	r1, r4, #4
 800b3fc:	68db      	ldr	r3, [r3, #12]
 800b3fe:	4798      	blx	r3
 800b400:	b160      	cbz	r0, 800b41c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b402:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800b406:	2b00      	cmp	r3, #0
 800b408:	dd08      	ble.n	800b41c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b40a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800b40e:	2d00      	cmp	r5, #0
 800b410:	dd04      	ble.n	800b41c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b412:	4a2b      	ldr	r2, [pc, #172]	@ (800b4c0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800b414:	7812      	ldrb	r2, [r2, #0]
 800b416:	b11a      	cbz	r2, 800b420 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800b418:	2a01      	cmp	r2, #1
 800b41a:	d029      	beq.n	800b470 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800b41c:	b004      	add	sp, #16
 800b41e:	bd70      	pop	{r4, r5, r6, pc}
 800b420:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b424:	441d      	add	r5, r3
 800b426:	b2ad      	uxth	r5, r5
 800b428:	b22e      	sxth	r6, r5
 800b42a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800b42e:	42b3      	cmp	r3, r6
 800b430:	daf4      	bge.n	800b41c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b432:	6823      	ldr	r3, [r4, #0]
 800b434:	4669      	mov	r1, sp
 800b436:	4620      	mov	r0, r4
 800b438:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b43a:	4798      	blx	r3
 800b43c:	b940      	cbnz	r0, 800b450 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800b43e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800b442:	2b01      	cmp	r3, #1
 800b444:	d004      	beq.n	800b450 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800b446:	3301      	adds	r3, #1
 800b448:	105b      	asrs	r3, r3, #1
 800b44a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b44e:	e7f0      	b.n	800b432 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800b450:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b454:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b458:	4413      	add	r3, r2
 800b45a:	b29b      	uxth	r3, r3
 800b45c:	441a      	add	r2, r3
 800b45e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b462:	b212      	sxth	r2, r2
 800b464:	4296      	cmp	r6, r2
 800b466:	dae0      	bge.n	800b42a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800b468:	1aeb      	subs	r3, r5, r3
 800b46a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b46e:	e7dc      	b.n	800b42a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800b470:	f8bd 5000 	ldrh.w	r5, [sp]
 800b474:	441d      	add	r5, r3
 800b476:	b2ad      	uxth	r5, r5
 800b478:	b22e      	sxth	r6, r5
 800b47a:	f9bd 3000 	ldrsh.w	r3, [sp]
 800b47e:	42b3      	cmp	r3, r6
 800b480:	dacc      	bge.n	800b41c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b482:	6823      	ldr	r3, [r4, #0]
 800b484:	4669      	mov	r1, sp
 800b486:	4620      	mov	r0, r4
 800b488:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b48a:	4798      	blx	r3
 800b48c:	b940      	cbnz	r0, 800b4a0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800b48e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800b492:	2b01      	cmp	r3, #1
 800b494:	d004      	beq.n	800b4a0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800b496:	3301      	adds	r3, #1
 800b498:	105b      	asrs	r3, r3, #1
 800b49a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b49e:	e7f0      	b.n	800b482 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800b4a0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800b4a4:	f8bd 3000 	ldrh.w	r3, [sp]
 800b4a8:	4413      	add	r3, r2
 800b4aa:	b29b      	uxth	r3, r3
 800b4ac:	441a      	add	r2, r3
 800b4ae:	f8ad 3000 	strh.w	r3, [sp]
 800b4b2:	b212      	sxth	r2, r2
 800b4b4:	4296      	cmp	r6, r2
 800b4b6:	dae0      	bge.n	800b47a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800b4b8:	1aeb      	subs	r3, r5, r3
 800b4ba:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b4be:	e7dc      	b.n	800b47a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800b4c0:	20016b6c 	.word	0x20016b6c

0800b4c4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800b4c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b4c6:	6803      	ldr	r3, [r0, #0]
 800b4c8:	4604      	mov	r4, r0
 800b4ca:	4601      	mov	r1, r0
 800b4cc:	4668      	mov	r0, sp
 800b4ce:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800b4d0:	4798      	blx	r3
 800b4d2:	2100      	movs	r1, #0
 800b4d4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b4d8:	4668      	mov	r0, sp
 800b4da:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b4de:	9102      	str	r1, [sp, #8]
 800b4e0:	a902      	add	r1, sp, #8
 800b4e2:	f8ad 200c 	strh.w	r2, [sp, #12]
 800b4e6:	f8ad 300e 	strh.w	r3, [sp, #14]
 800b4ea:	f7fe fc29 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 800b4ee:	6823      	ldr	r3, [r4, #0]
 800b4f0:	4669      	mov	r1, sp
 800b4f2:	4620      	mov	r0, r4
 800b4f4:	691b      	ldr	r3, [r3, #16]
 800b4f6:	4798      	blx	r3
 800b4f8:	b004      	add	sp, #16
 800b4fa:	bd10      	pop	{r4, pc}

0800b4fc <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800b4fc:	2101      	movs	r1, #1
 800b4fe:	2200      	movs	r2, #0
 800b500:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800b504:	490a      	ldr	r1, [pc, #40]	@ (800b530 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800b506:	8082      	strh	r2, [r0, #4]
 800b508:	6001      	str	r1, [r0, #0]
 800b50a:	21ff      	movs	r1, #255	@ 0xff
 800b50c:	80c2      	strh	r2, [r0, #6]
 800b50e:	8102      	strh	r2, [r0, #8]
 800b510:	8142      	strh	r2, [r0, #10]
 800b512:	8182      	strh	r2, [r0, #12]
 800b514:	81c2      	strh	r2, [r0, #14]
 800b516:	8202      	strh	r2, [r0, #16]
 800b518:	8242      	strh	r2, [r0, #18]
 800b51a:	61c2      	str	r2, [r0, #28]
 800b51c:	8402      	strh	r2, [r0, #32]
 800b51e:	8442      	strh	r2, [r0, #34]	@ 0x22
 800b520:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800b524:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800b528:	6282      	str	r2, [r0, #40]	@ 0x28
 800b52a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b52e:	4770      	bx	lr
 800b530:	080241b4 	.word	0x080241b4

0800b534 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800b534:	6301      	str	r1, [r0, #48]	@ 0x30
 800b536:	4770      	bx	lr

0800b538 <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800b538:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800b53a:	4770      	bx	lr

0800b53c <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800b53c:	6341      	str	r1, [r0, #52]	@ 0x34
 800b53e:	4770      	bx	lr

0800b540 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800b540:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 800b542:	4770      	bx	lr

0800b544 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800b544:	4770      	bx	lr

0800b546 <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800b546:	4608      	mov	r0, r1
 800b548:	4770      	bx	lr

0800b54a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800b54a:	b530      	push	{r4, r5, lr}
 800b54c:	460d      	mov	r5, r1
 800b54e:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 800b550:	8949      	ldrh	r1, [r1, #10]
 800b552:	b085      	sub	sp, #20
 800b554:	4604      	mov	r4, r0
 800b556:	1ac9      	subs	r1, r1, r3
 800b558:	6803      	ldr	r3, [r0, #0]
 800b55a:	f10d 0206 	add.w	r2, sp, #6
 800b55e:	f8d3 3104 	ldr.w	r3, [r3, #260]	@ 0x104
 800b562:	b209      	sxth	r1, r1
 800b564:	4798      	blx	r3
 800b566:	b1a0      	cbz	r0, 800b592 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800b568:	792b      	ldrb	r3, [r5, #4]
 800b56a:	b993      	cbnz	r3, 800b592 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800b56c:	f8d4 0128 	ldr.w	r0, [r4, #296]	@ 0x128
 800b570:	b178      	cbz	r0, 800b592 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800b572:	6803      	ldr	r3, [r0, #0]
 800b574:	68db      	ldr	r3, [r3, #12]
 800b576:	4798      	blx	r3
 800b578:	b158      	cbz	r0, 800b592 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800b57a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800b57e:	aa02      	add	r2, sp, #8
 800b580:	f8d4 0128 	ldr.w	r0, [r4, #296]	@ 0x128
 800b584:	4621      	mov	r1, r4
 800b586:	f8ad 3008 	strh.w	r3, [sp, #8]
 800b58a:	9503      	str	r5, [sp, #12]
 800b58c:	6803      	ldr	r3, [r0, #0]
 800b58e:	689b      	ldr	r3, [r3, #8]
 800b590:	4798      	blx	r3
 800b592:	b005      	add	sp, #20
 800b594:	bd30      	pop	{r4, r5, pc}

0800b596 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800b596:	428a      	cmp	r2, r1
 800b598:	bfbc      	itt	lt
 800b59a:	460b      	movlt	r3, r1
 800b59c:	4611      	movlt	r1, r2
 800b59e:	b510      	push	{r4, lr}
 800b5a0:	bfb8      	it	lt
 800b5a2:	461a      	movlt	r2, r3
 800b5a4:	f8d0 312c 	ldr.w	r3, [r0, #300]	@ 0x12c
 800b5a8:	4604      	mov	r4, r0
 800b5aa:	428b      	cmp	r3, r1
 800b5ac:	d103      	bne.n	800b5b6 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x20>
 800b5ae:	f8d0 3130 	ldr.w	r3, [r0, #304]	@ 0x130
 800b5b2:	4293      	cmp	r3, r2
 800b5b4:	d011      	beq.n	800b5da <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x44>
 800b5b6:	f8c4 112c 	str.w	r1, [r4, #300]	@ 0x12c
 800b5ba:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 800b5be:	f8c4 2130 	str.w	r2, [r4, #304]	@ 0x130
 800b5c2:	f005 fc9e 	bl	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b5c6:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 800b5ca:	f005 fc9a 	bl	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b5ce:	f104 00e8 	add.w	r0, r4, #232	@ 0xe8
 800b5d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b5d6:	f005 bc94 	b.w	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b5da:	bd10      	pop	{r4, pc}

0800b5dc <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800b5dc:	428a      	cmp	r2, r1
 800b5de:	bfbc      	itt	lt
 800b5e0:	460b      	movlt	r3, r1
 800b5e2:	4611      	movlt	r1, r2
 800b5e4:	b510      	push	{r4, lr}
 800b5e6:	bfb8      	it	lt
 800b5e8:	461a      	movlt	r2, r3
 800b5ea:	f8d0 3134 	ldr.w	r3, [r0, #308]	@ 0x134
 800b5ee:	4604      	mov	r4, r0
 800b5f0:	428b      	cmp	r3, r1
 800b5f2:	d103      	bne.n	800b5fc <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x20>
 800b5f4:	f8d0 3138 	ldr.w	r3, [r0, #312]	@ 0x138
 800b5f8:	4293      	cmp	r3, r2
 800b5fa:	d011      	beq.n	800b620 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x44>
 800b5fc:	f8c4 1134 	str.w	r1, [r4, #308]	@ 0x134
 800b600:	f104 0064 	add.w	r0, r4, #100	@ 0x64
 800b604:	f8c4 2138 	str.w	r2, [r4, #312]	@ 0x138
 800b608:	f005 fc7b 	bl	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b60c:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 800b610:	f005 fc77 	bl	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b614:	f104 0090 	add.w	r0, r4, #144	@ 0x90
 800b618:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b61c:	f005 bc71 	b.w	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b620:	bd10      	pop	{r4, pc}

0800b622 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800b622:	2300      	movs	r3, #0
 800b624:	3038      	adds	r0, #56	@ 0x38
 800b626:	f8a0 30e6 	strh.w	r3, [r0, #230]	@ 0xe6
 800b62a:	f005 bc6a 	b.w	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b62e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800b62e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b632:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 800b636:	4605      	mov	r5, r0
 800b638:	460f      	mov	r7, r1
 800b63a:	4616      	mov	r6, r2
 800b63c:	2b00      	cmp	r3, #0
 800b63e:	d03d      	beq.n	800b6bc <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8e>
 800b640:	6803      	ldr	r3, [r0, #0]
 800b642:	f8d3 3130 	ldr.w	r3, [r3, #304]	@ 0x130
 800b646:	4798      	blx	r3
 800b648:	682b      	ldr	r3, [r5, #0]
 800b64a:	b204      	sxth	r4, r0
 800b64c:	4628      	mov	r0, r5
 800b64e:	f8d3 3134 	ldr.w	r3, [r3, #308]	@ 0x134
 800b652:	4798      	blx	r3
 800b654:	b203      	sxth	r3, r0
 800b656:	f9b5 011e 	ldrsh.w	r0, [r5, #286]	@ 0x11e
 800b65a:	429c      	cmp	r4, r3
 800b65c:	bfc4      	itt	gt
 800b65e:	4622      	movgt	r2, r4
 800b660:	461c      	movgt	r4, r3
 800b662:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 800b666:	bfc8      	it	gt
 800b668:	4613      	movgt	r3, r2
 800b66a:	4284      	cmp	r4, r0
 800b66c:	da26      	bge.n	800b6bc <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8e>
 800b66e:	4298      	cmp	r0, r3
 800b670:	bfa8      	it	ge
 800b672:	4618      	movge	r0, r3
 800b674:	2800      	cmp	r0, #0
 800b676:	db21      	blt.n	800b6bc <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8e>
 800b678:	b9ef      	cbnz	r7, 800b6b6 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x88>
 800b67a:	f8d5 3144 	ldr.w	r3, [r5, #324]	@ 0x144
 800b67e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800b682:	4619      	mov	r1, r3
 800b684:	42a0      	cmp	r0, r4
 800b686:	dd0b      	ble.n	800b6a0 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x72>
 800b688:	f8d5 2144 	ldr.w	r2, [r5, #324]	@ 0x144
 800b68c:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
 800b690:	3401      	adds	r4, #1
 800b692:	4291      	cmp	r1, r2
 800b694:	bfa8      	it	ge
 800b696:	4611      	movge	r1, r2
 800b698:	4293      	cmp	r3, r2
 800b69a:	bfb8      	it	lt
 800b69c:	4613      	movlt	r3, r2
 800b69e:	e7f1      	b.n	800b684 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x56>
 800b6a0:	1b89      	subs	r1, r1, r6
 800b6a2:	18f2      	adds	r2, r6, r3
 800b6a4:	4291      	cmp	r1, r2
 800b6a6:	d009      	beq.n	800b6bc <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8e>
 800b6a8:	682b      	ldr	r3, [r5, #0]
 800b6aa:	4628      	mov	r0, r5
 800b6ac:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800b6b0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b6b4:	4718      	bx	r3
 800b6b6:	4273      	negs	r3, r6
 800b6b8:	4631      	mov	r1, r6
 800b6ba:	e7e3      	b.n	800b684 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x56>
 800b6bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b6c0 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800b6c0:	b530      	push	{r4, r5, lr}
 800b6c2:	790b      	ldrb	r3, [r1, #4]
 800b6c4:	b085      	sub	sp, #20
 800b6c6:	4604      	mov	r4, r0
 800b6c8:	460d      	mov	r5, r1
 800b6ca:	2b02      	cmp	r3, #2
 800b6cc:	d020      	beq.n	800b710 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b6ce:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 800b6d0:	f10d 0206 	add.w	r2, sp, #6
 800b6d4:	88c9      	ldrh	r1, [r1, #6]
 800b6d6:	1ac9      	subs	r1, r1, r3
 800b6d8:	6803      	ldr	r3, [r0, #0]
 800b6da:	b209      	sxth	r1, r1
 800b6dc:	f8d3 3104 	ldr.w	r3, [r3, #260]	@ 0x104
 800b6e0:	4798      	blx	r3
 800b6e2:	b1a8      	cbz	r0, 800b710 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b6e4:	792b      	ldrb	r3, [r5, #4]
 800b6e6:	2b01      	cmp	r3, #1
 800b6e8:	d812      	bhi.n	800b710 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b6ea:	f8d4 0124 	ldr.w	r0, [r4, #292]	@ 0x124
 800b6ee:	b178      	cbz	r0, 800b710 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b6f0:	6803      	ldr	r3, [r0, #0]
 800b6f2:	68db      	ldr	r3, [r3, #12]
 800b6f4:	4798      	blx	r3
 800b6f6:	b158      	cbz	r0, 800b710 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b6f8:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800b6fc:	aa02      	add	r2, sp, #8
 800b6fe:	f8d4 0124 	ldr.w	r0, [r4, #292]	@ 0x124
 800b702:	4621      	mov	r1, r4
 800b704:	f8ad 3008 	strh.w	r3, [sp, #8]
 800b708:	9503      	str	r5, [sp, #12]
 800b70a:	6803      	ldr	r3, [r0, #0]
 800b70c:	689b      	ldr	r3, [r3, #8]
 800b70e:	4798      	blx	r3
 800b710:	b005      	add	sp, #20
 800b712:	bd30      	pop	{r4, r5, pc}

0800b714 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800b714:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b718:	4604      	mov	r4, r0
 800b71a:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	@ 0x11e
 800b71e:	4690      	mov	r8, r2
 800b720:	461f      	mov	r7, r3
 800b722:	9e06      	ldr	r6, [sp, #24]
 800b724:	b928      	cbnz	r0, 800b732 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800b726:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800b72a:	8033      	strh	r3, [r6, #0]
 800b72c:	803b      	strh	r3, [r7, #0]
 800b72e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b732:	f8b4 2118 	ldrh.w	r2, [r4, #280]	@ 0x118
 800b736:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	@ 0x116
 800b73a:	1883      	adds	r3, r0, r2
 800b73c:	f8b4 2040 	ldrh.w	r2, [r4, #64]	@ 0x40
 800b740:	1ad2      	subs	r2, r2, r3
 800b742:	b212      	sxth	r2, r2
 800b744:	2a01      	cmp	r2, #1
 800b746:	dc07      	bgt.n	800b758 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800b748:	2300      	movs	r3, #0
 800b74a:	803b      	strh	r3, [r7, #0]
 800b74c:	f8b4 311e 	ldrh.w	r3, [r4, #286]	@ 0x11e
 800b750:	3b01      	subs	r3, #1
 800b752:	8033      	strh	r3, [r6, #0]
 800b754:	2001      	movs	r0, #1
 800b756:	e7ea      	b.n	800b72e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800b758:	1a08      	subs	r0, r1, r0
 800b75a:	f8d4 3130 	ldr.w	r3, [r4, #304]	@ 0x130
 800b75e:	f8d4 112c 	ldr.w	r1, [r4, #300]	@ 0x12c
 800b762:	0140      	lsls	r0, r0, #5
 800b764:	6b25      	ldr	r5, [r4, #48]	@ 0x30
 800b766:	1a5b      	subs	r3, r3, r1
 800b768:	d459      	bmi.n	800b81e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x10a>
 800b76a:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800b76e:	fb93 f1f5 	sdiv	r1, r3, r5
 800b772:	2302      	movs	r3, #2
 800b774:	fb91 f1f3 	sdiv	r1, r1, r3
 800b778:	3a01      	subs	r2, #1
 800b77a:	f005 fd8c 	bl	8011296 <_ZN8touchgfx6muldivElll>
 800b77e:	f8d4 112c 	ldr.w	r1, [r4, #300]	@ 0x12c
 800b782:	f8d4 c030 	ldr.w	ip, [r4, #48]	@ 0x30
 800b786:	2900      	cmp	r1, #0
 800b788:	db55      	blt.n	800b836 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x122>
 800b78a:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800b78e:	2502      	movs	r5, #2
 800b790:	fb93 f3fc 	sdiv	r3, r3, ip
 800b794:	fb93 f3f5 	sdiv	r3, r3, r5
 800b798:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800b79c:	f8d4 2130 	ldr.w	r2, [r4, #304]	@ 0x130
 800b7a0:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	@ 0x116
 800b7a4:	1a52      	subs	r2, r2, r1
 800b7a6:	eba8 0003 	sub.w	r0, r8, r3
 800b7aa:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800b7ae:	d44e      	bmi.n	800b84e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x13a>
 800b7b0:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800b7b4:	fb92 f1fc 	sdiv	r1, r2, ip
 800b7b8:	2202      	movs	r2, #2
 800b7ba:	fb91 f1f2 	sdiv	r1, r1, r2
 800b7be:	f8b4 2118 	ldrh.w	r2, [r4, #280]	@ 0x118
 800b7c2:	4413      	add	r3, r2
 800b7c4:	f8b4 2040 	ldrh.w	r2, [r4, #64]	@ 0x40
 800b7c8:	1ad2      	subs	r2, r2, r3
 800b7ca:	b212      	sxth	r2, r2
 800b7cc:	3a01      	subs	r2, #1
 800b7ce:	f005 fd62 	bl	8011296 <_ZN8touchgfx6muldivElll>
 800b7d2:	f8d4 312c 	ldr.w	r3, [r4, #300]	@ 0x12c
 800b7d6:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800b7d8:	2b00      	cmp	r3, #0
 800b7da:	db44      	blt.n	800b866 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x152>
 800b7dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800b7e0:	fb93 f3f2 	sdiv	r3, r3, r2
 800b7e4:	2202      	movs	r2, #2
 800b7e6:	fb93 f3f2 	sdiv	r3, r3, r2
 800b7ea:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800b7ee:	2020      	movs	r0, #32
 800b7f0:	429d      	cmp	r5, r3
 800b7f2:	bfde      	ittt	le
 800b7f4:	461a      	movle	r2, r3
 800b7f6:	462b      	movle	r3, r5
 800b7f8:	4615      	movle	r5, r2
 800b7fa:	b21b      	sxth	r3, r3
 800b7fc:	2d00      	cmp	r5, #0
 800b7fe:	bfaa      	itet	ge
 800b800:	351f      	addge	r5, #31
 800b802:	fb95 f5f0 	sdivlt	r5, r5, r0
 800b806:	116d      	asrge	r5, r5, #5
 800b808:	fb93 f3f0 	sdiv	r3, r3, r0
 800b80c:	b22d      	sxth	r5, r5
 800b80e:	803b      	strh	r3, [r7, #0]
 800b810:	2d00      	cmp	r5, #0
 800b812:	8035      	strh	r5, [r6, #0]
 800b814:	da33      	bge.n	800b87e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x16a>
 800b816:	2000      	movs	r0, #0
 800b818:	8030      	strh	r0, [r6, #0]
 800b81a:	8038      	strh	r0, [r7, #0]
 800b81c:	e787      	b.n	800b72e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800b81e:	f06f 0101 	mvn.w	r1, #1
 800b822:	fb01 5303 	mla	r3, r1, r3, r5
 800b826:	1e59      	subs	r1, r3, #1
 800b828:	2302      	movs	r3, #2
 800b82a:	fb91 f1f5 	sdiv	r1, r1, r5
 800b82e:	fb91 f1f3 	sdiv	r1, r1, r3
 800b832:	4249      	negs	r1, r1
 800b834:	e7a0      	b.n	800b778 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x64>
 800b836:	f06f 0301 	mvn.w	r3, #1
 800b83a:	2502      	movs	r5, #2
 800b83c:	fb03 c301 	mla	r3, r3, r1, ip
 800b840:	3b01      	subs	r3, #1
 800b842:	fb93 f3fc 	sdiv	r3, r3, ip
 800b846:	fb93 f3f5 	sdiv	r3, r3, r5
 800b84a:	425b      	negs	r3, r3
 800b84c:	e7a4      	b.n	800b798 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x84>
 800b84e:	f06f 0101 	mvn.w	r1, #1
 800b852:	fb01 c202 	mla	r2, r1, r2, ip
 800b856:	1e51      	subs	r1, r2, #1
 800b858:	2202      	movs	r2, #2
 800b85a:	fb91 f1fc 	sdiv	r1, r1, ip
 800b85e:	fb91 f1f2 	sdiv	r1, r1, r2
 800b862:	4249      	negs	r1, r1
 800b864:	e7ab      	b.n	800b7be <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xaa>
 800b866:	f06f 0101 	mvn.w	r1, #1
 800b86a:	fb01 2303 	mla	r3, r1, r3, r2
 800b86e:	3b01      	subs	r3, #1
 800b870:	fb93 f3f2 	sdiv	r3, r3, r2
 800b874:	2202      	movs	r2, #2
 800b876:	fb93 f3f2 	sdiv	r3, r3, r2
 800b87a:	425b      	negs	r3, r3
 800b87c:	e7b5      	b.n	800b7ea <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd6>
 800b87e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800b882:	f9b7 2000 	ldrsh.w	r2, [r7]
 800b886:	4293      	cmp	r3, r2
 800b888:	dc05      	bgt.n	800b896 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x182>
 800b88a:	3b01      	subs	r3, #1
 800b88c:	2000      	movs	r0, #0
 800b88e:	b21b      	sxth	r3, r3
 800b890:	8033      	strh	r3, [r6, #0]
 800b892:	803b      	strh	r3, [r7, #0]
 800b894:	e74b      	b.n	800b72e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800b896:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800b89a:	803a      	strh	r2, [r7, #0]
 800b89c:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800b8a0:	f9b6 2000 	ldrsh.w	r2, [r6]
 800b8a4:	4293      	cmp	r3, r2
 800b8a6:	bfdc      	itt	le
 800b8a8:	f103 33ff 	addle.w	r3, r3, #4294967295
 800b8ac:	b21a      	sxthle	r2, r3
 800b8ae:	8032      	strh	r2, [r6, #0]
 800b8b0:	e750      	b.n	800b754 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>
	...

0800b8b4 <_ZN8touchgfx9ContainerC1Ev>:
 800b8b4:	2101      	movs	r1, #1
 800b8b6:	2200      	movs	r2, #0
 800b8b8:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800b8bc:	4909      	ldr	r1, [pc, #36]	@ (800b8e4 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800b8be:	8082      	strh	r2, [r0, #4]
 800b8c0:	80c2      	strh	r2, [r0, #6]
 800b8c2:	8102      	strh	r2, [r0, #8]
 800b8c4:	8142      	strh	r2, [r0, #10]
 800b8c6:	8182      	strh	r2, [r0, #12]
 800b8c8:	81c2      	strh	r2, [r0, #14]
 800b8ca:	8202      	strh	r2, [r0, #16]
 800b8cc:	8242      	strh	r2, [r0, #18]
 800b8ce:	61c2      	str	r2, [r0, #28]
 800b8d0:	8402      	strh	r2, [r0, #32]
 800b8d2:	8442      	strh	r2, [r0, #34]	@ 0x22
 800b8d4:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800b8d8:	6001      	str	r1, [r0, #0]
 800b8da:	6282      	str	r2, [r0, #40]	@ 0x28
 800b8dc:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b8e0:	4770      	bx	lr
 800b8e2:	bf00      	nop
 800b8e4:	08023ff0 	.word	0x08023ff0

0800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800b8e8:	6800      	ldr	r0, [r0, #0]
 800b8ea:	2800      	cmp	r0, #0
 800b8ec:	bfbd      	ittte	lt
 800b8ee:	380f      	sublt	r0, #15
 800b8f0:	2320      	movlt	r3, #32
 800b8f2:	fb90 f0f3 	sdivlt	r0, r0, r3
 800b8f6:	3010      	addge	r0, #16
 800b8f8:	bfa8      	it	ge
 800b8fa:	1140      	asrge	r0, r0, #5
 800b8fc:	4770      	bx	lr

0800b8fe <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800b8fe:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b902:	4605      	mov	r5, r0
 800b904:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	@ 0x11e
 800b908:	4688      	mov	r8, r1
 800b90a:	4691      	mov	r9, r2
 800b90c:	469a      	mov	sl, r3
 800b90e:	b360      	cbz	r0, 800b96a <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800b910:	2700      	movs	r7, #0
 800b912:	f04f 3bff 	mov.w	fp, #4294967295
 800b916:	b23e      	sxth	r6, r7
 800b918:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	@ 0x11e
 800b91c:	42b3      	cmp	r3, r6
 800b91e:	dd23      	ble.n	800b968 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800b920:	682b      	ldr	r3, [r5, #0]
 800b922:	4631      	mov	r1, r6
 800b924:	4628      	mov	r0, r5
 800b926:	3701      	adds	r7, #1
 800b928:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800b92c:	4798      	blx	r3
 800b92e:	9001      	str	r0, [sp, #4]
 800b930:	a801      	add	r0, sp, #4
 800b932:	f7ff ffd9 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b936:	682b      	ldr	r3, [r5, #0]
 800b938:	eba0 0008 	sub.w	r0, r0, r8
 800b93c:	4631      	mov	r1, r6
 800b93e:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800b942:	b204      	sxth	r4, r0
 800b944:	4628      	mov	r0, r5
 800b946:	4798      	blx	r3
 800b948:	9001      	str	r0, [sp, #4]
 800b94a:	a801      	add	r0, sp, #4
 800b94c:	f7ff ffcc 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b950:	eba0 0009 	sub.w	r0, r0, r9
 800b954:	fb10 f000 	smulbb	r0, r0, r0
 800b958:	fb04 0404 	mla	r4, r4, r4, r0
 800b95c:	455c      	cmp	r4, fp
 800b95e:	bf3c      	itt	cc
 800b960:	f8aa 6000 	strhcc.w	r6, [sl]
 800b964:	46a3      	movcc	fp, r4
 800b966:	e7d6      	b.n	800b916 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800b968:	2001      	movs	r0, #1
 800b96a:	b003      	add	sp, #12
 800b96c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b970 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800b970:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b974:	460e      	mov	r6, r1
 800b976:	2100      	movs	r1, #0
 800b978:	4605      	mov	r5, r0
 800b97a:	4617      	mov	r7, r2
 800b97c:	8011      	strh	r1, [r2, #0]
 800b97e:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 800b982:	b36b      	cbz	r3, 800b9e0 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x70>
 800b984:	6803      	ldr	r3, [r0, #0]
 800b986:	f10d 0808 	add.w	r8, sp, #8
 800b98a:	2401      	movs	r4, #1
 800b98c:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800b990:	4798      	blx	r3
 800b992:	f848 0d04 	str.w	r0, [r8, #-4]!
 800b996:	4640      	mov	r0, r8
 800b998:	f7ff ffa6 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b99c:	b200      	sxth	r0, r0
 800b99e:	1b80      	subs	r0, r0, r6
 800b9a0:	ea80 79e0 	eor.w	r9, r0, r0, asr #31
 800b9a4:	eba9 79e0 	sub.w	r9, r9, r0, asr #31
 800b9a8:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	@ 0x11e
 800b9ac:	42a3      	cmp	r3, r4
 800b9ae:	dd1b      	ble.n	800b9e8 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x78>
 800b9b0:	682b      	ldr	r3, [r5, #0]
 800b9b2:	4621      	mov	r1, r4
 800b9b4:	4628      	mov	r0, r5
 800b9b6:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800b9ba:	4798      	blx	r3
 800b9bc:	9001      	str	r0, [sp, #4]
 800b9be:	4640      	mov	r0, r8
 800b9c0:	f7ff ff92 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b9c4:	b200      	sxth	r0, r0
 800b9c6:	1b80      	subs	r0, r0, r6
 800b9c8:	2800      	cmp	r0, #0
 800b9ca:	bfb8      	it	lt
 800b9cc:	4240      	neglt	r0, r0
 800b9ce:	4548      	cmp	r0, r9
 800b9d0:	bf38      	it	cc
 800b9d2:	803c      	strhcc	r4, [r7, #0]
 800b9d4:	f104 0401 	add.w	r4, r4, #1
 800b9d8:	bf38      	it	cc
 800b9da:	4681      	movcc	r9, r0
 800b9dc:	b224      	sxth	r4, r4
 800b9de:	e7e3      	b.n	800b9a8 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x38>
 800b9e0:	4618      	mov	r0, r3
 800b9e2:	b003      	add	sp, #12
 800b9e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b9e8:	2001      	movs	r0, #1
 800b9ea:	e7fa      	b.n	800b9e2 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x72>

0800b9ec <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800b9ec:	f8a0 3118 	strh.w	r3, [r0, #280]	@ 0x118
 800b9f0:	f9bd 3000 	ldrsh.w	r3, [sp]
 800b9f4:	f8a0 1114 	strh.w	r1, [r0, #276]	@ 0x114
 800b9f8:	f8a0 2116 	strh.w	r2, [r0, #278]	@ 0x116
 800b9fc:	f8a0 311a 	strh.w	r3, [r0, #282]	@ 0x11a
 800ba00:	4770      	bx	lr

0800ba02 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800ba02:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ba04:	4604      	mov	r4, r0
 800ba06:	3038      	adds	r0, #56	@ 0x38
 800ba08:	460d      	mov	r5, r1
 800ba0a:	f7fe f815 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ba0e:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	@ 0x42
 800ba12:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800ba16:	4628      	mov	r0, r5
 800ba18:	9200      	str	r2, [sp, #0]
 800ba1a:	2200      	movs	r2, #0
 800ba1c:	4611      	mov	r1, r2
 800ba1e:	f7f7 facd 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800ba22:	b003      	add	sp, #12
 800ba24:	bd30      	pop	{r4, r5, pc}

0800ba26 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800ba26:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ba28:	4604      	mov	r4, r0
 800ba2a:	3064      	adds	r0, #100	@ 0x64
 800ba2c:	460d      	mov	r5, r1
 800ba2e:	f7fe f803 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ba32:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	@ 0x6e
 800ba36:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	@ 0x6c
 800ba3a:	4628      	mov	r0, r5
 800ba3c:	9200      	str	r2, [sp, #0]
 800ba3e:	2200      	movs	r2, #0
 800ba40:	4611      	mov	r1, r2
 800ba42:	f7f7 fabb 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800ba46:	b003      	add	sp, #12
 800ba48:	bd30      	pop	{r4, r5, pc}

0800ba4a <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800ba4a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ba4c:	4604      	mov	r4, r0
 800ba4e:	30e8      	adds	r0, #232	@ 0xe8
 800ba50:	460d      	mov	r5, r1
 800ba52:	f7fd fff1 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ba56:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	@ 0xf2
 800ba5a:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	@ 0xf0
 800ba5e:	4628      	mov	r0, r5
 800ba60:	9200      	str	r2, [sp, #0]
 800ba62:	2200      	movs	r2, #0
 800ba64:	4611      	mov	r1, r2
 800ba66:	f7f7 faa9 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800ba6a:	b003      	add	sp, #12
 800ba6c:	bd30      	pop	{r4, r5, pc}

0800ba6e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800ba6e:	b538      	push	{r3, r4, r5, lr}
 800ba70:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 800ba74:	460d      	mov	r5, r1
 800ba76:	428b      	cmp	r3, r1
 800ba78:	dd08      	ble.n	800ba8c <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800ba7a:	6e04      	ldr	r4, [r0, #96]	@ 0x60
 800ba7c:	b134      	cbz	r4, 800ba8c <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800ba7e:	6823      	ldr	r3, [r4, #0]
 800ba80:	4620      	mov	r0, r4
 800ba82:	4629      	mov	r1, r5
 800ba84:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800ba86:	4798      	blx	r3
 800ba88:	69a4      	ldr	r4, [r4, #24]
 800ba8a:	e7f7      	b.n	800ba7c <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800ba8c:	bd38      	pop	{r3, r4, r5, pc}

0800ba8e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800ba8e:	b570      	push	{r4, r5, r6, lr}
 800ba90:	4606      	mov	r6, r0
 800ba92:	460d      	mov	r5, r1
 800ba94:	f8d0 40e4 	ldr.w	r4, [r0, #228]	@ 0xe4
 800ba98:	b134      	cbz	r4, 800baa8 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800ba9a:	6823      	ldr	r3, [r4, #0]
 800ba9c:	4620      	mov	r0, r4
 800ba9e:	4629      	mov	r1, r5
 800baa0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800baa2:	4798      	blx	r3
 800baa4:	69a4      	ldr	r4, [r4, #24]
 800baa6:	e7f7      	b.n	800ba98 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800baa8:	f8d6 4110 	ldr.w	r4, [r6, #272]	@ 0x110
 800baac:	b134      	cbz	r4, 800babc <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800baae:	6823      	ldr	r3, [r4, #0]
 800bab0:	4620      	mov	r0, r4
 800bab2:	4629      	mov	r1, r5
 800bab4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800bab6:	4798      	blx	r3
 800bab8:	69a4      	ldr	r4, [r4, #24]
 800baba:	e7f7      	b.n	800baac <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800babc:	bd70      	pop	{r4, r5, r6, pc}

0800babe <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800babe:	b538      	push	{r3, r4, r5, lr}
 800bac0:	4604      	mov	r4, r0
 800bac2:	2500      	movs	r5, #0
 800bac4:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800bac8:	42ab      	cmp	r3, r5
 800baca:	db05      	blt.n	800bad8 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800bacc:	b229      	sxth	r1, r5
 800bace:	4620      	mov	r0, r4
 800bad0:	f7ff ffdd 	bl	800ba8e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800bad4:	3501      	adds	r5, #1
 800bad6:	e7f5      	b.n	800bac4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800bad8:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 800badc:	f005 fa11 	bl	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>
 800bae0:	f104 00e8 	add.w	r0, r4, #232	@ 0xe8
 800bae4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bae8:	f005 ba0b 	b.w	8010f02 <_ZNK8touchgfx8Drawable10invalidateEv>

0800baec <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800baec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800baee:	4604      	mov	r4, r0
 800baf0:	6e05      	ldr	r5, [r0, #96]	@ 0x60
 800baf2:	b15d      	cbz	r5, 800bb0c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800baf4:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	@ 0x42
 800baf8:	4628      	mov	r0, r5
 800bafa:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800bafe:	9200      	str	r2, [sp, #0]
 800bb00:	2200      	movs	r2, #0
 800bb02:	4611      	mov	r1, r2
 800bb04:	f7f7 fa5a 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800bb08:	69ad      	ldr	r5, [r5, #24]
 800bb0a:	e7f2      	b.n	800baf2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800bb0c:	f8d4 50e4 	ldr.w	r5, [r4, #228]	@ 0xe4
 800bb10:	b15d      	cbz	r5, 800bb2a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800bb12:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	@ 0xc6
 800bb16:	4628      	mov	r0, r5
 800bb18:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	@ 0xc4
 800bb1c:	9200      	str	r2, [sp, #0]
 800bb1e:	2200      	movs	r2, #0
 800bb20:	4611      	mov	r1, r2
 800bb22:	f7f7 fa4b 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800bb26:	69ad      	ldr	r5, [r5, #24]
 800bb28:	e7f2      	b.n	800bb10 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800bb2a:	f8d4 508c 	ldr.w	r5, [r4, #140]	@ 0x8c
 800bb2e:	b15d      	cbz	r5, 800bb48 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800bb30:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	@ 0x6e
 800bb34:	4628      	mov	r0, r5
 800bb36:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	@ 0x6c
 800bb3a:	9200      	str	r2, [sp, #0]
 800bb3c:	2200      	movs	r2, #0
 800bb3e:	4611      	mov	r1, r2
 800bb40:	f7f7 fa3c 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800bb44:	69ad      	ldr	r5, [r5, #24]
 800bb46:	e7f2      	b.n	800bb2e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800bb48:	f8d4 50b8 	ldr.w	r5, [r4, #184]	@ 0xb8
 800bb4c:	b15d      	cbz	r5, 800bb66 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800bb4e:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	@ 0x9a
 800bb52:	4628      	mov	r0, r5
 800bb54:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	@ 0x98
 800bb58:	9200      	str	r2, [sp, #0]
 800bb5a:	2200      	movs	r2, #0
 800bb5c:	4611      	mov	r1, r2
 800bb5e:	f7f7 fa2d 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800bb62:	69ad      	ldr	r5, [r5, #24]
 800bb64:	e7f2      	b.n	800bb4c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800bb66:	f8d4 5110 	ldr.w	r5, [r4, #272]	@ 0x110
 800bb6a:	b15d      	cbz	r5, 800bb84 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800bb6c:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	@ 0xf2
 800bb70:	4628      	mov	r0, r5
 800bb72:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	@ 0xf0
 800bb76:	9200      	str	r2, [sp, #0]
 800bb78:	2200      	movs	r2, #0
 800bb7a:	4611      	mov	r1, r2
 800bb7c:	f7f7 fa1e 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800bb80:	69ad      	ldr	r5, [r5, #24]
 800bb82:	e7f2      	b.n	800bb6a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800bb84:	6823      	ldr	r3, [r4, #0]
 800bb86:	4620      	mov	r0, r4
 800bb88:	695b      	ldr	r3, [r3, #20]
 800bb8a:	b003      	add	sp, #12
 800bb8c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bb90:	4718      	bx	r3

0800bb92 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800bb92:	b430      	push	{r4, r5}
 800bb94:	b28a      	uxth	r2, r1
 800bb96:	f8b0 4098 	ldrh.w	r4, [r0, #152]	@ 0x98
 800bb9a:	f8a0 10c4 	strh.w	r1, [r0, #196]	@ 0xc4
 800bb9e:	1b15      	subs	r5, r2, r4
 800bba0:	f8a0 10f0 	strh.w	r1, [r0, #240]	@ 0xf0
 800bba4:	8101      	strh	r1, [r0, #8]
 800bba6:	f8a0 5094 	strh.w	r5, [r0, #148]	@ 0x94
 800bbaa:	f8b0 506c 	ldrh.w	r5, [r0, #108]	@ 0x6c
 800bbae:	442c      	add	r4, r5
 800bbb0:	1b12      	subs	r2, r2, r4
 800bbb2:	bc30      	pop	{r4, r5}
 800bbb4:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800bbb8:	f7ff bf98 	b.w	800baec <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800bbbc <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800bbbc:	b430      	push	{r4, r5}
 800bbbe:	b28a      	uxth	r2, r1
 800bbc0:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	@ 0xf2
 800bbc4:	f8a0 106e 	strh.w	r1, [r0, #110]	@ 0x6e
 800bbc8:	1b15      	subs	r5, r2, r4
 800bbca:	f8a0 109a 	strh.w	r1, [r0, #154]	@ 0x9a
 800bbce:	8141      	strh	r1, [r0, #10]
 800bbd0:	f8a0 50ee 	strh.w	r5, [r0, #238]	@ 0xee
 800bbd4:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	@ 0xc6
 800bbd8:	442c      	add	r4, r5
 800bbda:	1b12      	subs	r2, r2, r4
 800bbdc:	bc30      	pop	{r4, r5}
 800bbde:	f8a0 2042 	strh.w	r2, [r0, #66]	@ 0x42
 800bbe2:	f7ff bf83 	b.w	800baec <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800bbe6 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800bbe6:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800bbea:	fa1f fa83 	uxth.w	sl, r3
 800bbee:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	@ 0x28
 800bbf2:	4615      	mov	r5, r2
 800bbf4:	4699      	mov	r9, r3
 800bbf6:	fa1f f887 	uxth.w	r8, r7
 800bbfa:	8903      	ldrh	r3, [r0, #8]
 800bbfc:	4452      	add	r2, sl
 800bbfe:	4604      	mov	r4, r0
 800bc00:	8940      	ldrh	r0, [r0, #10]
 800bc02:	460e      	mov	r6, r1
 800bc04:	1a9b      	subs	r3, r3, r2
 800bc06:	eb08 0201 	add.w	r2, r8, r1
 800bc0a:	1a80      	subs	r0, r0, r2
 800bc0c:	b21b      	sxth	r3, r3
 800bc0e:	460a      	mov	r2, r1
 800bc10:	4629      	mov	r1, r5
 800bc12:	b200      	sxth	r0, r0
 800bc14:	9000      	str	r0, [sp, #0]
 800bc16:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 800bc1a:	f7f7 f9cf 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800bc1e:	2200      	movs	r2, #0
 800bc20:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800bc24:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 800bc28:	4611      	mov	r1, r2
 800bc2a:	9600      	str	r6, [sp, #0]
 800bc2c:	f7f7 f9c6 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800bc30:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bc34:	2200      	movs	r2, #0
 800bc36:	f104 0064 	add.w	r0, r4, #100	@ 0x64
 800bc3a:	9300      	str	r3, [sp, #0]
 800bc3c:	462b      	mov	r3, r5
 800bc3e:	4611      	mov	r1, r2
 800bc40:	f7f7 f9bc 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800bc44:	8921      	ldrh	r1, [r4, #8]
 800bc46:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bc4a:	f104 0090 	add.w	r0, r4, #144	@ 0x90
 800bc4e:	eba1 010a 	sub.w	r1, r1, sl
 800bc52:	2200      	movs	r2, #0
 800bc54:	9300      	str	r3, [sp, #0]
 800bc56:	464b      	mov	r3, r9
 800bc58:	b209      	sxth	r1, r1
 800bc5a:	f7f7 f9af 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800bc5e:	8962      	ldrh	r2, [r4, #10]
 800bc60:	f104 00e8 	add.w	r0, r4, #232	@ 0xe8
 800bc64:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800bc68:	eba2 0208 	sub.w	r2, r2, r8
 800bc6c:	9700      	str	r7, [sp, #0]
 800bc6e:	2100      	movs	r1, #0
 800bc70:	b212      	sxth	r2, r2
 800bc72:	f7f7 f9a3 	bl	8002fbc <_ZN8touchgfx8Drawable11setPositionEssss>
 800bc76:	4620      	mov	r0, r4
 800bc78:	b002      	add	sp, #8
 800bc7a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bc7e:	f7ff bf35 	b.w	800baec <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>
	...

0800bc84 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800bc84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc88:	b085      	sub	sp, #20
 800bc8a:	4604      	mov	r4, r0
 800bc8c:	2601      	movs	r6, #1
 800bc8e:	2500      	movs	r5, #0
 800bc90:	9103      	str	r1, [sp, #12]
 800bc92:	f7ff fe0f 	bl	800b8b4 <_ZN8touchgfx9ContainerC1Ev>
 800bc96:	4b2c      	ldr	r3, [pc, #176]	@ (800bd48 <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800bc98:	f104 0b38 	add.w	fp, r4, #56	@ 0x38
 800bc9c:	f104 0964 	add.w	r9, r4, #100	@ 0x64
 800bca0:	f104 0890 	add.w	r8, r4, #144	@ 0x90
 800bca4:	6023      	str	r3, [r4, #0]
 800bca6:	23ff      	movs	r3, #255	@ 0xff
 800bca8:	4658      	mov	r0, fp
 800bcaa:	f104 0abc 	add.w	sl, r4, #188	@ 0xbc
 800bcae:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
 800bcb2:	f104 07e8 	add.w	r7, r4, #232	@ 0xe8
 800bcb6:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800bcba:	f7ff fdfb 	bl	800b8b4 <_ZN8touchgfx9ContainerC1Ev>
 800bcbe:	4648      	mov	r0, r9
 800bcc0:	f7ff fdf8 	bl	800b8b4 <_ZN8touchgfx9ContainerC1Ev>
 800bcc4:	4640      	mov	r0, r8
 800bcc6:	f7ff fdf5 	bl	800b8b4 <_ZN8touchgfx9ContainerC1Ev>
 800bcca:	4650      	mov	r0, sl
 800bccc:	f7ff fdf2 	bl	800b8b4 <_ZN8touchgfx9ContainerC1Ev>
 800bcd0:	4638      	mov	r0, r7
 800bcd2:	f7ff fdef 	bl	800b8b4 <_ZN8touchgfx9ContainerC1Ev>
 800bcd6:	9903      	ldr	r1, [sp, #12]
 800bcd8:	4620      	mov	r0, r4
 800bcda:	f8c4 5114 	str.w	r5, [r4, #276]	@ 0x114
 800bcde:	f8a4 111c 	strh.w	r1, [r4, #284]	@ 0x11c
 800bce2:	4659      	mov	r1, fp
 800bce4:	f8c4 5118 	str.w	r5, [r4, #280]	@ 0x118
 800bce8:	f8a4 511e 	strh.w	r5, [r4, #286]	@ 0x11e
 800bcec:	f8a4 5120 	strh.w	r5, [r4, #288]	@ 0x120
 800bcf0:	f8c4 5124 	str.w	r5, [r4, #292]	@ 0x124
 800bcf4:	f8c4 5128 	str.w	r5, [r4, #296]	@ 0x128
 800bcf8:	f8c4 512c 	str.w	r5, [r4, #300]	@ 0x12c
 800bcfc:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800bd00:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800bd04:	f8c4 5138 	str.w	r5, [r4, #312]	@ 0x138
 800bd08:	f7fd fe96 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800bd0c:	4651      	mov	r1, sl
 800bd0e:	4620      	mov	r0, r4
 800bd10:	f7fd fe92 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800bd14:	4649      	mov	r1, r9
 800bd16:	4620      	mov	r0, r4
 800bd18:	f7fd fe8e 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800bd1c:	4641      	mov	r1, r8
 800bd1e:	4620      	mov	r0, r4
 800bd20:	f7fd fe8a 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800bd24:	4639      	mov	r1, r7
 800bd26:	4620      	mov	r0, r4
 800bd28:	f7fd fe86 	bl	8009a38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800bd2c:	4620      	mov	r0, r4
 800bd2e:	9500      	str	r5, [sp, #0]
 800bd30:	462b      	mov	r3, r5
 800bd32:	462a      	mov	r2, r5
 800bd34:	4629      	mov	r1, r5
 800bd36:	f7ff ff56 	bl	800bbe6 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800bd3a:	4620      	mov	r0, r4
 800bd3c:	f884 6024 	strb.w	r6, [r4, #36]	@ 0x24
 800bd40:	b005      	add	sp, #20
 800bd42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd46:	bf00      	nop
 800bd48:	080243c4 	.word	0x080243c4

0800bd4c <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800bd4c:	4291      	cmp	r1, r2
 800bd4e:	4613      	mov	r3, r2
 800bd50:	d003      	beq.n	800bd5a <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800bd52:	460a      	mov	r2, r1
 800bd54:	4619      	mov	r1, r3
 800bd56:	f005 ba9e 	b.w	8011296 <_ZN8touchgfx6muldivElll>
 800bd5a:	4770      	bx	lr

0800bd5c <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800bd5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd60:	6803      	ldr	r3, [r0, #0]
 800bd62:	460d      	mov	r5, r1
 800bd64:	4604      	mov	r4, r0
 800bd66:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800bd6a:	4798      	blx	r3
 800bd6c:	42a8      	cmp	r0, r5
 800bd6e:	4606      	mov	r6, r0
 800bd70:	d024      	beq.n	800bdbc <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800bd72:	6823      	ldr	r3, [r4, #0]
 800bd74:	4601      	mov	r1, r0
 800bd76:	462a      	mov	r2, r5
 800bd78:	f8d4 012c 	ldr.w	r0, [r4, #300]	@ 0x12c
 800bd7c:	f8d3 70a4 	ldr.w	r7, [r3, #164]	@ 0xa4
 800bd80:	f7ff ffe4 	bl	800bd4c <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800bd84:	4680      	mov	r8, r0
 800bd86:	462a      	mov	r2, r5
 800bd88:	4631      	mov	r1, r6
 800bd8a:	f8d4 0130 	ldr.w	r0, [r4, #304]	@ 0x130
 800bd8e:	f7ff ffdd 	bl	800bd4c <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800bd92:	4641      	mov	r1, r8
 800bd94:	4602      	mov	r2, r0
 800bd96:	4620      	mov	r0, r4
 800bd98:	47b8      	blx	r7
 800bd9a:	462a      	mov	r2, r5
 800bd9c:	4631      	mov	r1, r6
 800bd9e:	f8d4 013c 	ldr.w	r0, [r4, #316]	@ 0x13c
 800bda2:	f7ff ffd3 	bl	800bd4c <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800bda6:	462a      	mov	r2, r5
 800bda8:	f8c4 013c 	str.w	r0, [r4, #316]	@ 0x13c
 800bdac:	4631      	mov	r1, r6
 800bdae:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 800bdb2:	f7ff ffcb 	bl	800bd4c <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800bdb6:	6325      	str	r5, [r4, #48]	@ 0x30
 800bdb8:	f8c4 0140 	str.w	r0, [r4, #320]	@ 0x140
 800bdbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bdc0 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800bdc0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800bdc4:	4604      	mov	r4, r0
 800bdc6:	460f      	mov	r7, r1
 800bdc8:	b1b2      	cbz	r2, 800bdf8 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x38>
 800bdca:	6803      	ldr	r3, [r0, #0]
 800bdcc:	2600      	movs	r6, #0
 800bdce:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800bdd2:	4798      	blx	r3
 800bdd4:	4681      	mov	r9, r0
 800bdd6:	b235      	sxth	r5, r6
 800bdd8:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800bddc:	3601      	adds	r6, #1
 800bdde:	42ab      	cmp	r3, r5
 800bde0:	dd0a      	ble.n	800bdf8 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x38>
 800bde2:	f8d4 8144 	ldr.w	r8, [r4, #324]	@ 0x144
 800bde6:	463a      	mov	r2, r7
 800bde8:	4649      	mov	r1, r9
 800bdea:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800bdee:	f7ff ffad 	bl	800bd4c <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800bdf2:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800bdf6:	e7ee      	b.n	800bdd6 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800bdf8:	6367      	str	r7, [r4, #52]	@ 0x34
 800bdfa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800bdfe <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800bdfe:	b570      	push	{r4, r5, r6, lr}
 800be00:	6803      	ldr	r3, [r0, #0]
 800be02:	4604      	mov	r4, r0
 800be04:	460d      	mov	r5, r1
 800be06:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 800be0a:	4798      	blx	r3
 800be0c:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 800be10:	4629      	mov	r1, r5
 800be12:	4620      	mov	r0, r4
 800be14:	3301      	adds	r3, #1
 800be16:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
 800be1a:	6823      	ldr	r3, [r4, #0]
 800be1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be20:	f8d3 317c 	ldr.w	r3, [r3, #380]	@ 0x17c
 800be24:	4718      	bx	r3

0800be26 <_ZN8touchgfx16GraphElementLineD1Ev>:
 800be26:	4770      	bx	lr

0800be28 <_ZN8touchgfx16GraphElementLineD0Ev>:
 800be28:	b510      	push	{r4, lr}
 800be2a:	4604      	mov	r4, r0
 800be2c:	2130      	movs	r1, #48	@ 0x30
 800be2e:	f015 f867 	bl	8020f00 <_ZdlPvj>
 800be32:	4620      	mov	r0, r4
 800be34:	bd10      	pop	{r4, pc}

0800be36 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800be36:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800be38:	4604      	mov	r4, r0
 800be3a:	4608      	mov	r0, r1
 800be3c:	460d      	mov	r5, r1
 800be3e:	f7fd ffc2 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800be42:	b978      	cbnz	r0, 800be64 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800be44:	4620      	mov	r0, r4
 800be46:	f7fd ffbe 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800be4a:	f9b5 6000 	ldrsh.w	r6, [r5]
 800be4e:	b150      	cbz	r0, 800be66 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800be50:	8026      	strh	r6, [r4, #0]
 800be52:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800be56:	8063      	strh	r3, [r4, #2]
 800be58:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800be5c:	80a3      	strh	r3, [r4, #4]
 800be5e:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800be62:	80e3      	strh	r3, [r4, #6]
 800be64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800be66:	f9b4 1000 	ldrsh.w	r1, [r4]
 800be6a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800be6e:	42b1      	cmp	r1, r6
 800be70:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800be74:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800be78:	460f      	mov	r7, r1
 800be7a:	88ed      	ldrh	r5, [r5, #6]
 800be7c:	bfa8      	it	ge
 800be7e:	4637      	movge	r7, r6
 800be80:	4293      	cmp	r3, r2
 800be82:	4618      	mov	r0, r3
 800be84:	4466      	add	r6, ip
 800be86:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800be8a:	bfa8      	it	ge
 800be8c:	4610      	movge	r0, r2
 800be8e:	442a      	add	r2, r5
 800be90:	88e5      	ldrh	r5, [r4, #6]
 800be92:	4461      	add	r1, ip
 800be94:	b236      	sxth	r6, r6
 800be96:	8027      	strh	r7, [r4, #0]
 800be98:	442b      	add	r3, r5
 800be9a:	b209      	sxth	r1, r1
 800be9c:	b212      	sxth	r2, r2
 800be9e:	8060      	strh	r0, [r4, #2]
 800bea0:	b21b      	sxth	r3, r3
 800bea2:	428e      	cmp	r6, r1
 800bea4:	bfac      	ite	ge
 800bea6:	ebc7 0106 	rsbge	r1, r7, r6
 800beaa:	ebc7 0101 	rsblt	r1, r7, r1
 800beae:	429a      	cmp	r2, r3
 800beb0:	bfac      	ite	ge
 800beb2:	ebc0 0202 	rsbge	r2, r0, r2
 800beb6:	ebc0 0203 	rsblt	r2, r0, r3
 800beba:	80a1      	strh	r1, [r4, #4]
 800bebc:	80e2      	strh	r2, [r4, #6]
 800bebe:	e7d1      	b.n	800be64 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800bec0 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800bec0:	6800      	ldr	r0, [r0, #0]
 800bec2:	2800      	cmp	r0, #0
 800bec4:	bfb9      	ittee	lt
 800bec6:	2320      	movlt	r3, #32
 800bec8:	fb90 f0f3 	sdivlt	r0, r0, r3
 800becc:	301f      	addge	r0, #31
 800bece:	1140      	asrge	r0, r0, #5
 800bed0:	4770      	bx	lr

0800bed2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800bed2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bed6:	6803      	ldr	r3, [r0, #0]
 800bed8:	b093      	sub	sp, #76	@ 0x4c
 800beda:	6945      	ldr	r5, [r0, #20]
 800bedc:	4604      	mov	r4, r0
 800bede:	460f      	mov	r7, r1
 800bee0:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800bee2:	2d00      	cmp	r5, #0
 800bee4:	f000 81ad 	beq.w	800c242 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800bee8:	696d      	ldr	r5, [r5, #20]
 800beea:	4798      	blx	r3
 800beec:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800bef0:	2b00      	cmp	r3, #0
 800bef2:	d077      	beq.n	800bfe4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bef4:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 800bef8:	fb13 f000 	smulbb	r0, r3, r0
 800befc:	b283      	uxth	r3, r0
 800befe:	1c58      	adds	r0, r3, #1
 800bf00:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800bf04:	1200      	asrs	r0, r0, #8
 800bf06:	d06d      	beq.n	800bfe4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bf08:	b2c3      	uxtb	r3, r0
 800bf0a:	f10d 0840 	add.w	r8, sp, #64	@ 0x40
 800bf0e:	462a      	mov	r2, r5
 800bf10:	4621      	mov	r1, r4
 800bf12:	9308      	str	r3, [sp, #32]
 800bf14:	4640      	mov	r0, r8
 800bf16:	6823      	ldr	r3, [r4, #0]
 800bf18:	ae0e      	add	r6, sp, #56	@ 0x38
 800bf1a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800bf1e:	4798      	blx	r3
 800bf20:	e898 0003 	ldmia.w	r8, {r0, r1}
 800bf24:	e886 0003 	stmia.w	r6, {r0, r1}
 800bf28:	4639      	mov	r1, r7
 800bf2a:	4630      	mov	r0, r6
 800bf2c:	f7fd ff08 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 800bf30:	6823      	ldr	r3, [r4, #0]
 800bf32:	4629      	mov	r1, r5
 800bf34:	4620      	mov	r0, r4
 800bf36:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800bf3a:	4798      	blx	r3
 800bf3c:	6823      	ldr	r3, [r4, #0]
 800bf3e:	4607      	mov	r7, r0
 800bf40:	4629      	mov	r1, r5
 800bf42:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800bf46:	4620      	mov	r0, r4
 800bf48:	4798      	blx	r3
 800bf4a:	4681      	mov	r9, r0
 800bf4c:	f894 0038 	ldrb.w	r0, [r4, #56]	@ 0x38
 800bf50:	4629      	mov	r1, r5
 800bf52:	0103      	lsls	r3, r0, #4
 800bf54:	4620      	mov	r0, r4
 800bf56:	9309      	str	r3, [sp, #36]	@ 0x24
 800bf58:	6823      	ldr	r3, [r4, #0]
 800bf5a:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800bf5e:	4798      	blx	r3
 800bf60:	4629      	mov	r1, r5
 800bf62:	b203      	sxth	r3, r0
 800bf64:	4620      	mov	r0, r4
 800bf66:	9306      	str	r3, [sp, #24]
 800bf68:	6823      	ldr	r3, [r4, #0]
 800bf6a:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800bf6e:	4798      	blx	r3
 800bf70:	2f00      	cmp	r7, #0
 800bf72:	b203      	sxth	r3, r0
 800bf74:	9307      	str	r3, [sp, #28]
 800bf76:	d138      	bne.n	800bfea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800bf78:	f1b9 0f00 	cmp.w	r9, #0
 800bf7c:	d132      	bne.n	800bfe4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bf7e:	6823      	ldr	r3, [r4, #0]
 800bf80:	464a      	mov	r2, r9
 800bf82:	4629      	mov	r1, r5
 800bf84:	4620      	mov	r0, r4
 800bf86:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800bf8a:	4798      	blx	r3
 800bf8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bf8e:	1ac0      	subs	r0, r0, r3
 800bf90:	9010      	str	r0, [sp, #64]	@ 0x40
 800bf92:	4640      	mov	r0, r8
 800bf94:	f7ff fca8 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bf98:	6823      	ldr	r3, [r4, #0]
 800bf9a:	4607      	mov	r7, r0
 800bf9c:	4629      	mov	r1, r5
 800bf9e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800bfa2:	4620      	mov	r0, r4
 800bfa4:	4798      	blx	r3
 800bfa6:	1a38      	subs	r0, r7, r0
 800bfa8:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800bfac:	fa0f f880 	sxth.w	r8, r0
 800bfb0:	eb13 0f08 	cmn.w	r3, r8
 800bfb4:	d416      	bmi.n	800bfe4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bfb6:	6823      	ldr	r3, [r4, #0]
 800bfb8:	4629      	mov	r1, r5
 800bfba:	4620      	mov	r0, r4
 800bfbc:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800bfc0:	4798      	blx	r3
 800bfc2:	4580      	cmp	r8, r0
 800bfc4:	da0e      	bge.n	800bfe4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bfc6:	9a08      	ldr	r2, [sp, #32]
 800bfc8:	b23f      	sxth	r7, r7
 800bfca:	6823      	ldr	r3, [r4, #0]
 800bfcc:	4631      	mov	r1, r6
 800bfce:	9202      	str	r2, [sp, #8]
 800bfd0:	4620      	mov	r0, r4
 800bfd2:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800bfd6:	9700      	str	r7, [sp, #0]
 800bfd8:	9201      	str	r2, [sp, #4]
 800bfda:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 800bfde:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800bfe2:	47a8      	blx	r5
 800bfe4:	b013      	add	sp, #76	@ 0x4c
 800bfe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bfea:	ddfb      	ble.n	800bfe4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bfec:	6823      	ldr	r3, [r4, #0]
 800bfee:	4629      	mov	r1, r5
 800bff0:	4620      	mov	r0, r4
 800bff2:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800bff6:	4798      	blx	r3
 800bff8:	6823      	ldr	r3, [r4, #0]
 800bffa:	4683      	mov	fp, r0
 800bffc:	4629      	mov	r1, r5
 800bffe:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800c002:	4620      	mov	r0, r4
 800c004:	4798      	blx	r3
 800c006:	eba0 030b 	sub.w	r3, r0, fp
 800c00a:	4680      	mov	r8, r0
 800c00c:	2b00      	cmp	r3, #0
 800c00e:	bfb8      	it	lt
 800c010:	425b      	neglt	r3, r3
 800c012:	fb93 f3f7 	sdiv	r3, r3, r7
 800c016:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800c01a:	dce3      	bgt.n	800bfe4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c01c:	6823      	ldr	r3, [r4, #0]
 800c01e:	465a      	mov	r2, fp
 800c020:	4629      	mov	r1, r5
 800c022:	4620      	mov	r0, r4
 800c024:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c028:	4798      	blx	r3
 800c02a:	6823      	ldr	r3, [r4, #0]
 800c02c:	4606      	mov	r6, r0
 800c02e:	4642      	mov	r2, r8
 800c030:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c034:	4629      	mov	r1, r5
 800c036:	4620      	mov	r0, r4
 800c038:	4798      	blx	r3
 800c03a:	42b0      	cmp	r0, r6
 800c03c:	bfa2      	ittt	ge
 800c03e:	4643      	movge	r3, r8
 800c040:	46d8      	movge	r8, fp
 800c042:	469b      	movge	fp, r3
 800c044:	fb98 f6f7 	sdiv	r6, r8, r7
 800c048:	fb9b f2f7 	sdiv	r2, fp, r7
 800c04c:	45d8      	cmp	r8, fp
 800c04e:	bfac      	ite	ge
 800c050:	f04f 33ff 	movge.w	r3, #4294967295
 800c054:	2301      	movlt	r3, #1
 800c056:	1af6      	subs	r6, r6, r3
 800c058:	441a      	add	r2, r3
 800c05a:	4296      	cmp	r6, r2
 800c05c:	bfac      	ite	ge
 800c05e:	f04f 3aff 	movge.w	sl, #4294967295
 800c062:	f04f 0a01 	movlt.w	sl, #1
 800c066:	f1b9 0f00 	cmp.w	r9, #0
 800c06a:	d13e      	bne.n	800c0ea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800c06c:	fb07 fb0a 	mul.w	fp, r7, sl
 800c070:	eb0a 0802 	add.w	r8, sl, r2
 800c074:	4377      	muls	r7, r6
 800c076:	45b0      	cmp	r8, r6
 800c078:	d0b4      	beq.n	800bfe4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c07a:	6823      	ldr	r3, [r4, #0]
 800c07c:	463a      	mov	r2, r7
 800c07e:	4629      	mov	r1, r5
 800c080:	4620      	mov	r0, r4
 800c082:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c086:	4798      	blx	r3
 800c088:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c08a:	1ac0      	subs	r0, r0, r3
 800c08c:	9010      	str	r0, [sp, #64]	@ 0x40
 800c08e:	a810      	add	r0, sp, #64	@ 0x40
 800c090:	f7ff fc2a 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c094:	6823      	ldr	r3, [r4, #0]
 800c096:	4681      	mov	r9, r0
 800c098:	4629      	mov	r1, r5
 800c09a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800c09e:	4620      	mov	r0, r4
 800c0a0:	4798      	blx	r3
 800c0a2:	eba9 0000 	sub.w	r0, r9, r0
 800c0a6:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800c0aa:	b203      	sxth	r3, r0
 800c0ac:	42da      	cmn	r2, r3
 800c0ae:	9304      	str	r3, [sp, #16]
 800c0b0:	d418      	bmi.n	800c0e4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800c0b2:	6822      	ldr	r2, [r4, #0]
 800c0b4:	4629      	mov	r1, r5
 800c0b6:	4620      	mov	r0, r4
 800c0b8:	f8d2 20a8 	ldr.w	r2, [r2, #168]	@ 0xa8
 800c0bc:	4790      	blx	r2
 800c0be:	9b04      	ldr	r3, [sp, #16]
 800c0c0:	4283      	cmp	r3, r0
 800c0c2:	da0f      	bge.n	800c0e4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800c0c4:	9b08      	ldr	r3, [sp, #32]
 800c0c6:	a90e      	add	r1, sp, #56	@ 0x38
 800c0c8:	6822      	ldr	r2, [r4, #0]
 800c0ca:	4620      	mov	r0, r4
 800c0cc:	9302      	str	r3, [sp, #8]
 800c0ce:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800c0d2:	9301      	str	r3, [sp, #4]
 800c0d4:	fa0f f389 	sxth.w	r3, r9
 800c0d8:	9300      	str	r3, [sp, #0]
 800c0da:	f8d2 9088 	ldr.w	r9, [r2, #136]	@ 0x88
 800c0de:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c0e2:	47c8      	blx	r9
 800c0e4:	4456      	add	r6, sl
 800c0e6:	445f      	add	r7, fp
 800c0e8:	e7c5      	b.n	800c076 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800c0ea:	fb98 f8f9 	sdiv	r8, r8, r9
 800c0ee:	eba8 0203 	sub.w	r2, r8, r3
 800c0f2:	4629      	mov	r1, r5
 800c0f4:	4620      	mov	r0, r4
 800c0f6:	9204      	str	r2, [sp, #16]
 800c0f8:	fb9b f8f9 	sdiv	r8, fp, r9
 800c0fc:	4498      	add	r8, r3
 800c0fe:	f10d 0b48 	add.w	fp, sp, #72	@ 0x48
 800c102:	4542      	cmp	r2, r8
 800c104:	bfac      	ite	ge
 800c106:	f04f 33ff 	movge.w	r3, #4294967295
 800c10a:	2301      	movlt	r3, #1
 800c10c:	fb02 f209 	mul.w	r2, r2, r9
 800c110:	930a      	str	r3, [sp, #40]	@ 0x28
 800c112:	6823      	ldr	r3, [r4, #0]
 800c114:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c118:	4798      	blx	r3
 800c11a:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800c11e:	4658      	mov	r0, fp
 800c120:	f7ff fbe2 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c124:	fb06 f207 	mul.w	r2, r6, r7
 800c128:	b203      	sxth	r3, r0
 800c12a:	4629      	mov	r1, r5
 800c12c:	4620      	mov	r0, r4
 800c12e:	9305      	str	r3, [sp, #20]
 800c130:	6823      	ldr	r3, [r4, #0]
 800c132:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c136:	4798      	blx	r3
 800c138:	9010      	str	r0, [sp, #64]	@ 0x40
 800c13a:	4658      	mov	r0, fp
 800c13c:	f7ff fbd4 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c140:	fb07 f20a 	mul.w	r2, r7, sl
 800c144:	b203      	sxth	r3, r0
 800c146:	920b      	str	r2, [sp, #44]	@ 0x2c
 800c148:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c14a:	4442      	add	r2, r8
 800c14c:	920c      	str	r2, [sp, #48]	@ 0x30
 800c14e:	9a05      	ldr	r2, [sp, #20]
 800c150:	429a      	cmp	r2, r3
 800c152:	dc16      	bgt.n	800c182 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800c154:	eb06 080a 	add.w	r8, r6, sl
 800c158:	fb07 f808 	mul.w	r8, r7, r8
 800c15c:	9a05      	ldr	r2, [sp, #20]
 800c15e:	429a      	cmp	r2, r3
 800c160:	db54      	blt.n	800c20c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800c162:	6823      	ldr	r3, [r4, #0]
 800c164:	4642      	mov	r2, r8
 800c166:	4629      	mov	r1, r5
 800c168:	4620      	mov	r0, r4
 800c16a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c16e:	4456      	add	r6, sl
 800c170:	4798      	blx	r3
 800c172:	9010      	str	r0, [sp, #64]	@ 0x40
 800c174:	4658      	mov	r0, fp
 800c176:	f7ff fbb7 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c17a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c17c:	b203      	sxth	r3, r0
 800c17e:	4490      	add	r8, r2
 800c180:	e7ec      	b.n	800c15c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800c182:	6823      	ldr	r3, [r4, #0]
 800c184:	fb07 f206 	mul.w	r2, r7, r6
 800c188:	4629      	mov	r1, r5
 800c18a:	4620      	mov	r0, r4
 800c18c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c190:	4798      	blx	r3
 800c192:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c194:	1ac0      	subs	r0, r0, r3
 800c196:	9010      	str	r0, [sp, #64]	@ 0x40
 800c198:	4658      	mov	r0, fp
 800c19a:	f7ff fba5 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c19e:	6823      	ldr	r3, [r4, #0]
 800c1a0:	4680      	mov	r8, r0
 800c1a2:	4629      	mov	r1, r5
 800c1a4:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800c1a8:	4620      	mov	r0, r4
 800c1aa:	4798      	blx	r3
 800c1ac:	eba8 0000 	sub.w	r0, r8, r0
 800c1b0:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800c1b4:	b203      	sxth	r3, r0
 800c1b6:	42da      	cmn	r2, r3
 800c1b8:	930d      	str	r3, [sp, #52]	@ 0x34
 800c1ba:	d418      	bmi.n	800c1ee <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800c1bc:	6822      	ldr	r2, [r4, #0]
 800c1be:	4629      	mov	r1, r5
 800c1c0:	4620      	mov	r0, r4
 800c1c2:	f8d2 20a8 	ldr.w	r2, [r2, #168]	@ 0xa8
 800c1c6:	4790      	blx	r2
 800c1c8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c1ca:	4283      	cmp	r3, r0
 800c1cc:	da0f      	bge.n	800c1ee <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800c1ce:	9b08      	ldr	r3, [sp, #32]
 800c1d0:	a90e      	add	r1, sp, #56	@ 0x38
 800c1d2:	6822      	ldr	r2, [r4, #0]
 800c1d4:	4620      	mov	r0, r4
 800c1d6:	9302      	str	r3, [sp, #8]
 800c1d8:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800c1dc:	9301      	str	r3, [sp, #4]
 800c1de:	fa0f f388 	sxth.w	r3, r8
 800c1e2:	9300      	str	r3, [sp, #0]
 800c1e4:	f8d2 8088 	ldr.w	r8, [r2, #136]	@ 0x88
 800c1e8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c1ec:	47c0      	blx	r8
 800c1ee:	6823      	ldr	r3, [r4, #0]
 800c1f0:	4456      	add	r6, sl
 800c1f2:	4629      	mov	r1, r5
 800c1f4:	4620      	mov	r0, r4
 800c1f6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c1fa:	fb06 f207 	mul.w	r2, r6, r7
 800c1fe:	4798      	blx	r3
 800c200:	9010      	str	r0, [sp, #64]	@ 0x40
 800c202:	4658      	mov	r0, fp
 800c204:	f7ff fb70 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c208:	b203      	sxth	r3, r0
 800c20a:	e7a0      	b.n	800c14e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800c20c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c20e:	930d      	str	r3, [sp, #52]	@ 0x34
 800c210:	9b04      	ldr	r3, [sp, #16]
 800c212:	4413      	add	r3, r2
 800c214:	9304      	str	r3, [sp, #16]
 800c216:	9a04      	ldr	r2, [sp, #16]
 800c218:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c21a:	4293      	cmp	r3, r2
 800c21c:	f43f aee2 	beq.w	800bfe4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c220:	9b04      	ldr	r3, [sp, #16]
 800c222:	4629      	mov	r1, r5
 800c224:	6822      	ldr	r2, [r4, #0]
 800c226:	4620      	mov	r0, r4
 800c228:	f8d2 80ac 	ldr.w	r8, [r2, #172]	@ 0xac
 800c22c:	fb03 f209 	mul.w	r2, r3, r9
 800c230:	47c0      	blx	r8
 800c232:	9010      	str	r0, [sp, #64]	@ 0x40
 800c234:	4658      	mov	r0, fp
 800c236:	f7ff fb57 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c23a:	b203      	sxth	r3, r0
 800c23c:	9305      	str	r3, [sp, #20]
 800c23e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c240:	e785      	b.n	800c14e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800c242:	4798      	blx	r3
 800c244:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 800c248:	deff      	udf	#255	@ 0xff

0800c24a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800c24a:	b510      	push	{r4, lr}
 800c24c:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800c250:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800c254:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800c258:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800c25c:	139b      	asrs	r3, r3, #14
 800c25e:	13a4      	asrs	r4, r4, #14
 800c260:	429c      	cmp	r4, r3
 800c262:	bfb8      	it	lt
 800c264:	461c      	movlt	r4, r3
 800c266:	2c01      	cmp	r4, #1
 800c268:	dd07      	ble.n	800c27a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800c26a:	fb91 f1f4 	sdiv	r1, r1, r4
 800c26e:	fb90 f0f4 	sdiv	r0, r0, r4
 800c272:	f7ff ffea 	bl	800c24a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800c276:	4360      	muls	r0, r4
 800c278:	bd10      	pop	{r4, pc}
 800c27a:	4340      	muls	r0, r0
 800c27c:	fb01 0101 	mla	r1, r1, r1, r0
 800c280:	2000      	movs	r0, #0
 800c282:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
 800c286:	bfb4      	ite	lt
 800c288:	f44f 4380 	movlt.w	r3, #16384	@ 0x4000
 800c28c:	f04f 4380 	movge.w	r3, #1073741824	@ 0x40000000
 800c290:	18c2      	adds	r2, r0, r3
 800c292:	428a      	cmp	r2, r1
 800c294:	bf9c      	itt	ls
 800c296:	1898      	addls	r0, r3, r2
 800c298:	1a89      	subls	r1, r1, r2
 800c29a:	089b      	lsrs	r3, r3, #2
 800c29c:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800c2a0:	d1f6      	bne.n	800c290 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800c2a2:	e7e9      	b.n	800c278 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800c2a4 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800c2a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c2a6:	9906      	ldr	r1, [sp, #24]
 800c2a8:	4606      	mov	r6, r0
 800c2aa:	461c      	mov	r4, r3
 800c2ac:	2020      	movs	r0, #32
 800c2ae:	4291      	cmp	r1, r2
 800c2b0:	bfbc      	itt	lt
 800c2b2:	9206      	strlt	r2, [sp, #24]
 800c2b4:	460a      	movlt	r2, r1
 800c2b6:	9907      	ldr	r1, [sp, #28]
 800c2b8:	428b      	cmp	r3, r1
 800c2ba:	bfc4      	itt	gt
 800c2bc:	460c      	movgt	r4, r1
 800c2be:	9307      	strgt	r3, [sp, #28]
 800c2c0:	fb92 f5f0 	sdiv	r5, r2, r0
 800c2c4:	fb94 f4f0 	sdiv	r4, r4, r0
 800c2c8:	a806      	add	r0, sp, #24
 800c2ca:	f7ff fdf9 	bl	800bec0 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800c2ce:	4607      	mov	r7, r0
 800c2d0:	a807      	add	r0, sp, #28
 800c2d2:	f7ff fdf5 	bl	800bec0 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800c2d6:	1b7a      	subs	r2, r7, r5
 800c2d8:	1b00      	subs	r0, r0, r4
 800c2da:	8035      	strh	r5, [r6, #0]
 800c2dc:	8074      	strh	r4, [r6, #2]
 800c2de:	80f0      	strh	r0, [r6, #6]
 800c2e0:	4630      	mov	r0, r6
 800c2e2:	80b2      	strh	r2, [r6, #4]
 800c2e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c2e6 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800c2e6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c2e8:	9c08      	ldr	r4, [sp, #32]
 800c2ea:	2602      	movs	r6, #2
 800c2ec:	4605      	mov	r5, r0
 800c2ee:	3401      	adds	r4, #1
 800c2f0:	fb94 f4f6 	sdiv	r4, r4, r6
 800c2f4:	18a6      	adds	r6, r4, r2
 800c2f6:	191f      	adds	r7, r3, r4
 800c2f8:	1b12      	subs	r2, r2, r4
 800c2fa:	1b1b      	subs	r3, r3, r4
 800c2fc:	e9cd 6700 	strd	r6, r7, [sp]
 800c300:	f7ff ffd0 	bl	800c2a4 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800c304:	4628      	mov	r0, r5
 800c306:	b003      	add	sp, #12
 800c308:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c30a <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800c30a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c30e:	6943      	ldr	r3, [r0, #20]
 800c310:	b087      	sub	sp, #28
 800c312:	4606      	mov	r6, r0
 800c314:	460d      	mov	r5, r1
 800c316:	2b00      	cmp	r3, #0
 800c318:	d072      	beq.n	800c400 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800c31a:	695c      	ldr	r4, [r3, #20]
 800c31c:	f890 702c 	ldrb.w	r7, [r0, #44]	@ 0x2c
 800c320:	6823      	ldr	r3, [r4, #0]
 800c322:	4620      	mov	r0, r4
 800c324:	017f      	lsls	r7, r7, #5
 800c326:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800c32a:	4798      	blx	r3
 800c32c:	6823      	ldr	r3, [r4, #0]
 800c32e:	4680      	mov	r8, r0
 800c330:	4629      	mov	r1, r5
 800c332:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800c336:	4620      	mov	r0, r4
 800c338:	4798      	blx	r3
 800c33a:	9700      	str	r7, [sp, #0]
 800c33c:	4603      	mov	r3, r0
 800c33e:	4642      	mov	r2, r8
 800c340:	4631      	mov	r1, r6
 800c342:	a802      	add	r0, sp, #8
 800c344:	f7ff ffcf 	bl	800c2e6 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800c348:	2d00      	cmp	r5, #0
 800c34a:	dd1b      	ble.n	800c384 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800c34c:	f105 38ff 	add.w	r8, r5, #4294967295
 800c350:	6823      	ldr	r3, [r4, #0]
 800c352:	4620      	mov	r0, r4
 800c354:	fa0f f888 	sxth.w	r8, r8
 800c358:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800c35c:	4641      	mov	r1, r8
 800c35e:	4798      	blx	r3
 800c360:	6823      	ldr	r3, [r4, #0]
 800c362:	4681      	mov	r9, r0
 800c364:	4641      	mov	r1, r8
 800c366:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800c36a:	4620      	mov	r0, r4
 800c36c:	4798      	blx	r3
 800c36e:	4631      	mov	r1, r6
 800c370:	4603      	mov	r3, r0
 800c372:	9700      	str	r7, [sp, #0]
 800c374:	a804      	add	r0, sp, #16
 800c376:	464a      	mov	r2, r9
 800c378:	f7ff ffb5 	bl	800c2e6 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800c37c:	a904      	add	r1, sp, #16
 800c37e:	a802      	add	r0, sp, #8
 800c380:	f7ff fd59 	bl	800be36 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c384:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800c388:	3b01      	subs	r3, #1
 800c38a:	429d      	cmp	r5, r3
 800c38c:	da19      	bge.n	800c3c2 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800c38e:	3501      	adds	r5, #1
 800c390:	6823      	ldr	r3, [r4, #0]
 800c392:	4620      	mov	r0, r4
 800c394:	b22d      	sxth	r5, r5
 800c396:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800c39a:	4629      	mov	r1, r5
 800c39c:	4798      	blx	r3
 800c39e:	6823      	ldr	r3, [r4, #0]
 800c3a0:	4680      	mov	r8, r0
 800c3a2:	4629      	mov	r1, r5
 800c3a4:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800c3a8:	4620      	mov	r0, r4
 800c3aa:	4798      	blx	r3
 800c3ac:	4631      	mov	r1, r6
 800c3ae:	4603      	mov	r3, r0
 800c3b0:	9700      	str	r7, [sp, #0]
 800c3b2:	a804      	add	r0, sp, #16
 800c3b4:	4642      	mov	r2, r8
 800c3b6:	f7ff ff96 	bl	800c2e6 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800c3ba:	a904      	add	r1, sp, #16
 800c3bc:	a802      	add	r0, sp, #8
 800c3be:	f7ff fd3a 	bl	800be36 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c3c2:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	@ 0x114
 800c3c6:	f8b4 311a 	ldrh.w	r3, [r4, #282]	@ 0x11a
 800c3ca:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	@ 0x40
 800c3ce:	18ca      	adds	r2, r1, r3
 800c3d0:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 800c3d4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800c3d8:	a904      	add	r1, sp, #16
 800c3da:	1a9b      	subs	r3, r3, r2
 800c3dc:	2200      	movs	r2, #0
 800c3de:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c3e2:	a802      	add	r0, sp, #8
 800c3e4:	f8ad 2010 	strh.w	r2, [sp, #16]
 800c3e8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c3ec:	f7fd fca8 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 800c3f0:	6833      	ldr	r3, [r6, #0]
 800c3f2:	a902      	add	r1, sp, #8
 800c3f4:	4630      	mov	r0, r6
 800c3f6:	691b      	ldr	r3, [r3, #16]
 800c3f8:	4798      	blx	r3
 800c3fa:	b007      	add	sp, #28
 800c3fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c400:	681b      	ldr	r3, [r3, #0]
 800c402:	deff      	udf	#255	@ 0xff

0800c404 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800c404:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800c408:	2b00      	cmp	r3, #0
 800c40a:	da05      	bge.n	800c418 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800c40c:	b29b      	uxth	r3, r3
 800c40e:	880a      	ldrh	r2, [r1, #0]
 800c410:	441a      	add	r2, r3
 800c412:	425b      	negs	r3, r3
 800c414:	800a      	strh	r2, [r1, #0]
 800c416:	808b      	strh	r3, [r1, #4]
 800c418:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800c41c:	2b00      	cmp	r3, #0
 800c41e:	da05      	bge.n	800c42c <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800c420:	b29b      	uxth	r3, r3
 800c422:	884a      	ldrh	r2, [r1, #2]
 800c424:	441a      	add	r2, r3
 800c426:	425b      	negs	r3, r3
 800c428:	804a      	strh	r2, [r1, #2]
 800c42a:	80cb      	strh	r3, [r1, #6]
 800c42c:	4770      	bx	lr

0800c42e <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800c42e:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c430:	4604      	mov	r4, r0
 800c432:	460d      	mov	r5, r1
 800c434:	6801      	ldr	r1, [r0, #0]
 800c436:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	@ 0x24
 800c43a:	9001      	str	r0, [sp, #4]
 800c43c:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800c440:	9000      	str	r0, [sp, #0]
 800c442:	a802      	add	r0, sp, #8
 800c444:	f8d1 6090 	ldr.w	r6, [r1, #144]	@ 0x90
 800c448:	4621      	mov	r1, r4
 800c44a:	47b0      	blx	r6
 800c44c:	a902      	add	r1, sp, #8
 800c44e:	4620      	mov	r0, r4
 800c450:	f7ff ffd8 	bl	800c404 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800c454:	a802      	add	r0, sp, #8
 800c456:	4629      	mov	r1, r5
 800c458:	f7fd fc72 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 800c45c:	a802      	add	r0, sp, #8
 800c45e:	f7fd fcb2 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c462:	b968      	cbnz	r0, 800c480 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800c464:	6823      	ldr	r3, [r4, #0]
 800c466:	a902      	add	r1, sp, #8
 800c468:	4620      	mov	r0, r4
 800c46a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c46c:	4798      	blx	r3
 800c46e:	f7f5 ffb5 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800c472:	6803      	ldr	r3, [r0, #0]
 800c474:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800c476:	a902      	add	r1, sp, #8
 800c478:	6a1d      	ldr	r5, [r3, #32]
 800c47a:	f89d 3028 	ldrb.w	r3, [sp, #40]	@ 0x28
 800c47e:	47a8      	blx	r5
 800c480:	b004      	add	sp, #16
 800c482:	bd70      	pop	{r4, r5, r6, pc}

0800c484 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800c484:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c488:	b08b      	sub	sp, #44	@ 0x2c
 800c48a:	461e      	mov	r6, r3
 800c48c:	460f      	mov	r7, r1
 800c48e:	4615      	mov	r5, r2
 800c490:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	@ 0x50
 800c494:	429e      	cmp	r6, r3
 800c496:	9304      	str	r3, [sp, #16]
 800c498:	d074      	beq.n	800c584 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x100>
 800c49a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800c49e:	4631      	mov	r1, r6
 800c4a0:	4610      	mov	r0, r2
 800c4a2:	4634      	mov	r4, r6
 800c4a4:	015b      	lsls	r3, r3, #5
 800c4a6:	9303      	str	r3, [sp, #12]
 800c4a8:	6813      	ldr	r3, [r2, #0]
 800c4aa:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800c4ae:	4798      	blx	r3
 800c4b0:	ab0a      	add	r3, sp, #40	@ 0x28
 800c4b2:	f843 0d10 	str.w	r0, [r3, #-16]!
 800c4b6:	4618      	mov	r0, r3
 800c4b8:	f7ff fa16 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c4bc:	682b      	ldr	r3, [r5, #0]
 800c4be:	4631      	mov	r1, r6
 800c4c0:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800c4c4:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800c4c8:	4628      	mov	r0, r5
 800c4ca:	4798      	blx	r3
 800c4cc:	ab0a      	add	r3, sp, #40	@ 0x28
 800c4ce:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800c4d2:	4618      	mov	r0, r3
 800c4d4:	f7ff fa08 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c4d8:	4641      	mov	r1, r8
 800c4da:	ea4f 1940 	mov.w	r9, r0, lsl #5
 800c4de:	4638      	mov	r0, r7
 800c4e0:	464a      	mov	r2, r9
 800c4e2:	f014 fc2d 	bl	8020d40 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800c4e6:	2301      	movs	r3, #1
 800c4e8:	9300      	str	r3, [sp, #0]
 800c4ea:	4628      	mov	r0, r5
 800c4ec:	9b00      	ldr	r3, [sp, #0]
 800c4ee:	441c      	add	r4, r3
 800c4f0:	682b      	ldr	r3, [r5, #0]
 800c4f2:	b224      	sxth	r4, r4
 800c4f4:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800c4f8:	4621      	mov	r1, r4
 800c4fa:	4798      	blx	r3
 800c4fc:	9008      	str	r0, [sp, #32]
 800c4fe:	a808      	add	r0, sp, #32
 800c500:	f7ff f9f2 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c504:	4621      	mov	r1, r4
 800c506:	0143      	lsls	r3, r0, #5
 800c508:	4628      	mov	r0, r5
 800c50a:	9301      	str	r3, [sp, #4]
 800c50c:	682b      	ldr	r3, [r5, #0]
 800c50e:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800c512:	4798      	blx	r3
 800c514:	9009      	str	r0, [sp, #36]	@ 0x24
 800c516:	a809      	add	r0, sp, #36	@ 0x24
 800c518:	f7ff f9e6 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c51c:	0143      	lsls	r3, r0, #5
 800c51e:	9302      	str	r3, [sp, #8]
 800c520:	9b01      	ldr	r3, [sp, #4]
 800c522:	eba3 0b08 	sub.w	fp, r3, r8
 800c526:	9b02      	ldr	r3, [sp, #8]
 800c528:	eba3 0a09 	sub.w	sl, r3, r9
 800c52c:	4658      	mov	r0, fp
 800c52e:	4651      	mov	r1, sl
 800c530:	f7ff fe8b 	bl	800c24a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800c534:	b320      	cbz	r0, 800c580 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800c536:	4602      	mov	r2, r0
 800c538:	4651      	mov	r1, sl
 800c53a:	9005      	str	r0, [sp, #20]
 800c53c:	9803      	ldr	r0, [sp, #12]
 800c53e:	f004 feaa 	bl	8011296 <_ZN8touchgfx6muldivElll>
 800c542:	2302      	movs	r3, #2
 800c544:	4659      	mov	r1, fp
 800c546:	fb90 faf3 	sdiv	sl, r0, r3
 800c54a:	9b05      	ldr	r3, [sp, #20]
 800c54c:	9803      	ldr	r0, [sp, #12]
 800c54e:	461a      	mov	r2, r3
 800c550:	f004 fea1 	bl	8011296 <_ZN8touchgfx6muldivElll>
 800c554:	2302      	movs	r3, #2
 800c556:	eba8 010a 	sub.w	r1, r8, sl
 800c55a:	fb90 fbf3 	sdiv	fp, r0, r3
 800c55e:	683b      	ldr	r3, [r7, #0]
 800c560:	eb0b 0209 	add.w	r2, fp, r9
 800c564:	4638      	mov	r0, r7
 800c566:	689b      	ldr	r3, [r3, #8]
 800c568:	4798      	blx	r3
 800c56a:	683b      	ldr	r3, [r7, #0]
 800c56c:	9a02      	ldr	r2, [sp, #8]
 800c56e:	4638      	mov	r0, r7
 800c570:	9901      	ldr	r1, [sp, #4]
 800c572:	689b      	ldr	r3, [r3, #8]
 800c574:	445a      	add	r2, fp
 800c576:	eba1 010a 	sub.w	r1, r1, sl
 800c57a:	4798      	blx	r3
 800c57c:	e9dd 8901 	ldrd	r8, r9, [sp, #4]
 800c580:	42a6      	cmp	r6, r4
 800c582:	db02      	blt.n	800c58a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x106>
 800c584:	b00b      	add	sp, #44	@ 0x2c
 800c586:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c58a:	9b00      	ldr	r3, [sp, #0]
 800c58c:	9a04      	ldr	r2, [sp, #16]
 800c58e:	42a2      	cmp	r2, r4
 800c590:	bf08      	it	eq
 800c592:	f04f 33ff 	moveq.w	r3, #4294967295
 800c596:	e7a7      	b.n	800c4e8 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x64>

0800c598 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800c598:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c59c:	6943      	ldr	r3, [r0, #20]
 800c59e:	b0a4      	sub	sp, #144	@ 0x90
 800c5a0:	4605      	mov	r5, r0
 800c5a2:	460f      	mov	r7, r1
 800c5a4:	2b00      	cmp	r3, #0
 800c5a6:	d077      	beq.n	800c698 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x100>
 800c5a8:	695c      	ldr	r4, [r3, #20]
 800c5aa:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800c5ae:	2b01      	cmp	r3, #1
 800c5b0:	dc04      	bgt.n	800c5bc <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800c5b2:	2401      	movs	r4, #1
 800c5b4:	4620      	mov	r0, r4
 800c5b6:	b024      	add	sp, #144	@ 0x90
 800c5b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c5bc:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800c5c0:	ae24      	add	r6, sp, #144	@ 0x90
 800c5c2:	011b      	lsls	r3, r3, #4
 800c5c4:	f846 3d74 	str.w	r3, [r6, #-116]!
 800c5c8:	4630      	mov	r0, r6
 800c5ca:	f7ff fc79 	bl	800bec0 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800c5ce:	8839      	ldrh	r1, [r7, #0]
 800c5d0:	88ba      	ldrh	r2, [r7, #4]
 800c5d2:	b280      	uxth	r0, r0
 800c5d4:	6823      	ldr	r3, [r4, #0]
 800c5d6:	440a      	add	r2, r1
 800c5d8:	1a09      	subs	r1, r1, r0
 800c5da:	4402      	add	r2, r0
 800c5dc:	f10d 000a 	add.w	r0, sp, #10
 800c5e0:	b209      	sxth	r1, r1
 800c5e2:	9000      	str	r0, [sp, #0]
 800c5e4:	b212      	sxth	r2, r2
 800c5e6:	f8d3 8124 	ldr.w	r8, [r3, #292]	@ 0x124
 800c5ea:	4620      	mov	r0, r4
 800c5ec:	ab02      	add	r3, sp, #8
 800c5ee:	47c0      	blx	r8
 800c5f0:	2800      	cmp	r0, #0
 800c5f2:	d0de      	beq.n	800c5b2 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800c5f4:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	@ 0x114
 800c5f8:	f8b4 311a 	ldrh.w	r3, [r4, #282]	@ 0x11a
 800c5fc:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	@ 0x40
 800c600:	18ca      	adds	r2, r1, r3
 800c602:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 800c606:	f8ad 100e 	strh.w	r1, [sp, #14]
 800c60a:	4639      	mov	r1, r7
 800c60c:	1a9b      	subs	r3, r3, r2
 800c60e:	2200      	movs	r2, #0
 800c610:	f8ad 0010 	strh.w	r0, [sp, #16]
 800c614:	a803      	add	r0, sp, #12
 800c616:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c61a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800c61e:	f7fd fb8f 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 800c622:	4629      	mov	r1, r5
 800c624:	a805      	add	r0, sp, #20
 800c626:	6aaf      	ldr	r7, [r5, #40]	@ 0x28
 800c628:	f004 fd06 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c62c:	682b      	ldr	r3, [r5, #0]
 800c62e:	4628      	mov	r0, r5
 800c630:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800c632:	4798      	blx	r3
 800c634:	ab03      	add	r3, sp, #12
 800c636:	9000      	str	r0, [sp, #0]
 800c638:	aa05      	add	r2, sp, #20
 800c63a:	4639      	mov	r1, r7
 800c63c:	4630      	mov	r0, r6
 800c63e:	f014 fa33 	bl	8020aa8 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800c642:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	@ 0x120
 800c646:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c64a:	2f00      	cmp	r7, #0
 800c64c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800c650:	dd03      	ble.n	800c65a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xc2>
 800c652:	42bb      	cmp	r3, r7
 800c654:	da01      	bge.n	800c65a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xc2>
 800c656:	42ba      	cmp	r2, r7
 800c658:	da11      	bge.n	800c67e <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800c65a:	9200      	str	r2, [sp, #0]
 800c65c:	4622      	mov	r2, r4
 800c65e:	4631      	mov	r1, r6
 800c660:	4628      	mov	r0, r5
 800c662:	f7ff ff0f 	bl	800c484 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800c666:	f894 102c 	ldrb.w	r1, [r4, #44]	@ 0x2c
 800c66a:	4630      	mov	r0, r6
 800c66c:	f014 fab0 	bl	8020bd0 <_ZN8touchgfx6Canvas6renderEh>
 800c670:	4b0b      	ldr	r3, [pc, #44]	@ (800c6a0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x108>)
 800c672:	4604      	mov	r4, r0
 800c674:	a80c      	add	r0, sp, #48	@ 0x30
 800c676:	9307      	str	r3, [sp, #28]
 800c678:	f001 f890 	bl	800d79c <_ZN8touchgfx7OutlineD1Ev>
 800c67c:	e79a      	b.n	800c5b4 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800c67e:	1e7a      	subs	r2, r7, #1
 800c680:	4631      	mov	r1, r6
 800c682:	4628      	mov	r0, r5
 800c684:	b212      	sxth	r2, r2
 800c686:	9200      	str	r2, [sp, #0]
 800c688:	4622      	mov	r2, r4
 800c68a:	f7ff fefb 	bl	800c484 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800c68e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800c692:	9300      	str	r3, [sp, #0]
 800c694:	463b      	mov	r3, r7
 800c696:	e7e1      	b.n	800c65c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xc4>
 800c698:	f8b3 311e 	ldrh.w	r3, [r3, #286]	@ 0x11e
 800c69c:	deff      	udf	#255	@ 0xff
 800c69e:	bf00      	nop
 800c6a0:	08024d84 	.word	0x08024d84

0800c6a4 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800c6a4:	4770      	bx	lr

0800c6a6 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800c6a6:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 800c6a8:	b118      	cbz	r0, 800c6b2 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800c6aa:	6803      	ldr	r3, [r0, #0]
 800c6ac:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800c6b0:	4718      	bx	r3
 800c6b2:	4770      	bx	lr

0800c6b4 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800c6b4:	680b      	ldr	r3, [r1, #0]
 800c6b6:	4608      	mov	r0, r1
 800c6b8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800c6bc:	4718      	bx	r3

0800c6be <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800c6be:	680b      	ldr	r3, [r1, #0]
 800c6c0:	4608      	mov	r0, r1
 800c6c2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800c6c6:	4718      	bx	r3

0800c6c8 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800c6c8:	680b      	ldr	r3, [r1, #0]
 800c6ca:	4608      	mov	r0, r1
 800c6cc:	f8d3 30ec 	ldr.w	r3, [r3, #236]	@ 0xec
 800c6d0:	4718      	bx	r3

0800c6d2 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800c6d2:	680b      	ldr	r3, [r1, #0]
 800c6d4:	4608      	mov	r0, r1
 800c6d6:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 800c6da:	4718      	bx	r3

0800c6dc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800c6dc:	4a38      	ldr	r2, [pc, #224]	@ (800c7c0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800c6de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6e2:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 800c6e4:	b087      	sub	sp, #28
 800c6e6:	8812      	ldrh	r2, [r2, #0]
 800c6e8:	4604      	mov	r4, r0
 800c6ea:	4689      	mov	r9, r1
 800c6ec:	429a      	cmp	r2, r3
 800c6ee:	d937      	bls.n	800c760 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c6f0:	4a34      	ldr	r2, [pc, #208]	@ (800c7c4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800c6f2:	6812      	ldr	r2, [r2, #0]
 800c6f4:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c6f8:	4b33      	ldr	r3, [pc, #204]	@ (800c7c8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800c6fa:	681b      	ldr	r3, [r3, #0]
 800c6fc:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800c700:	f1b8 0f00 	cmp.w	r8, #0
 800c704:	d02c      	beq.n	800c760 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c706:	6803      	ldr	r3, [r0, #0]
 800c708:	6945      	ldr	r5, [r0, #20]
 800c70a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800c70c:	2d00      	cmp	r5, #0
 800c70e:	d052      	beq.n	800c7b6 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800c710:	696f      	ldr	r7, [r5, #20]
 800c712:	4798      	blx	r3
 800c714:	f897 502c 	ldrb.w	r5, [r7, #44]	@ 0x2c
 800c718:	fb15 f000 	smulbb	r0, r5, r0
 800c71c:	b280      	uxth	r0, r0
 800c71e:	1c45      	adds	r5, r0, #1
 800c720:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800c724:	122d      	asrs	r5, r5, #8
 800c726:	d01b      	beq.n	800c760 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c728:	6823      	ldr	r3, [r4, #0]
 800c72a:	4639      	mov	r1, r7
 800c72c:	4620      	mov	r0, r4
 800c72e:	b2ed      	uxtb	r5, r5
 800c730:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800c734:	4798      	blx	r3
 800c736:	6823      	ldr	r3, [r4, #0]
 800c738:	4606      	mov	r6, r0
 800c73a:	4639      	mov	r1, r7
 800c73c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800c740:	4620      	mov	r0, r4
 800c742:	4798      	blx	r3
 800c744:	4683      	mov	fp, r0
 800c746:	b970      	cbnz	r0, 800c766 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800c748:	b96e      	cbnz	r6, 800c766 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800c74a:	6823      	ldr	r3, [r4, #0]
 800c74c:	4642      	mov	r2, r8
 800c74e:	9600      	str	r6, [sp, #0]
 800c750:	4649      	mov	r1, r9
 800c752:	4620      	mov	r0, r4
 800c754:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800c758:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 800c75c:	463b      	mov	r3, r7
 800c75e:	47a8      	blx	r5
 800c760:	b007      	add	sp, #28
 800c762:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c766:	2e00      	cmp	r6, #0
 800c768:	ddfa      	ble.n	800c760 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c76a:	6823      	ldr	r3, [r4, #0]
 800c76c:	4639      	mov	r1, r7
 800c76e:	4620      	mov	r0, r4
 800c770:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800c774:	4798      	blx	r3
 800c776:	6823      	ldr	r3, [r4, #0]
 800c778:	4682      	mov	sl, r0
 800c77a:	4639      	mov	r1, r7
 800c77c:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800c780:	4620      	mov	r0, r4
 800c782:	4798      	blx	r3
 800c784:	4582      	cmp	sl, r0
 800c786:	bfde      	ittt	le
 800c788:	4603      	movle	r3, r0
 800c78a:	4650      	movle	r0, sl
 800c78c:	469a      	movle	sl, r3
 800c78e:	ebaa 0300 	sub.w	r3, sl, r0
 800c792:	fb93 f3f6 	sdiv	r3, r3, r6
 800c796:	2b64      	cmp	r3, #100	@ 0x64
 800c798:	dce2      	bgt.n	800c760 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c79a:	6823      	ldr	r3, [r4, #0]
 800c79c:	4642      	mov	r2, r8
 800c79e:	9000      	str	r0, [sp, #0]
 800c7a0:	4649      	mov	r1, r9
 800c7a2:	4620      	mov	r0, r4
 800c7a4:	e9cd b503 	strd	fp, r5, [sp, #12]
 800c7a8:	e9cd a601 	strd	sl, r6, [sp, #4]
 800c7ac:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 800c7b0:	463b      	mov	r3, r7
 800c7b2:	47a8      	blx	r5
 800c7b4:	e7d4      	b.n	800c760 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c7b6:	4798      	blx	r3
 800c7b8:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 800c7bc:	deff      	udf	#255	@ 0xff
 800c7be:	bf00      	nop
 800c7c0:	20016bd0 	.word	0x20016bd0
 800c7c4:	20016bcc 	.word	0x20016bcc
 800c7c8:	20016bd4 	.word	0x20016bd4

0800c7cc <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800c7cc:	4770      	bx	lr

0800c7ce <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800c7ce:	4770      	bx	lr

0800c7d0 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800c7d0:	b538      	push	{r3, r4, r5, lr}
 800c7d2:	680a      	ldr	r2, [r1, #0]
 800c7d4:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	@ 0x30
 800c7d8:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
 800c7dc:	4608      	mov	r0, r1
 800c7de:	4790      	blx	r2
 800c7e0:	4629      	mov	r1, r5
 800c7e2:	4602      	mov	r2, r0
 800c7e4:	4620      	mov	r0, r4
 800c7e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c7ea:	f7ff baaf 	b.w	800bd4c <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800c7ee <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800c7ee:	b538      	push	{r3, r4, r5, lr}
 800c7f0:	680a      	ldr	r2, [r1, #0]
 800c7f2:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	@ 0x30
 800c7f6:	f8d2 2094 	ldr.w	r2, [r2, #148]	@ 0x94
 800c7fa:	4608      	mov	r0, r1
 800c7fc:	4790      	blx	r2
 800c7fe:	4629      	mov	r1, r5
 800c800:	4602      	mov	r2, r0
 800c802:	4620      	mov	r0, r4
 800c804:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c808:	f7ff baa0 	b.w	800bd4c <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800c80c <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800c80c:	b510      	push	{r4, lr}
 800c80e:	4604      	mov	r4, r0
 800c810:	214c      	movs	r1, #76	@ 0x4c
 800c812:	f014 fb75 	bl	8020f00 <_ZdlPvj>
 800c816:	4620      	mov	r0, r4
 800c818:	bd10      	pop	{r4, pc}

0800c81a <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800c81a:	b510      	push	{r4, lr}
 800c81c:	4604      	mov	r4, r0
 800c81e:	214c      	movs	r1, #76	@ 0x4c
 800c820:	f014 fb6e 	bl	8020f00 <_ZdlPvj>
 800c824:	4620      	mov	r0, r4
 800c826:	bd10      	pop	{r4, pc}

0800c828 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800c828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c82c:	b08d      	sub	sp, #52	@ 0x34
 800c82e:	4606      	mov	r6, r0
 800c830:	9309      	str	r3, [sp, #36]	@ 0x24
 800c832:	f89d 3068 	ldrb.w	r3, [sp, #104]	@ 0x68
 800c836:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	@ 0x60
 800c83a:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800c83e:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	@ 0x58
 800c842:	930a      	str	r3, [sp, #40]	@ 0x28
 800c844:	f1b9 0f00 	cmp.w	r9, #0
 800c848:	d117      	bne.n	800c87a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800c84a:	2f00      	cmp	r7, #0
 800c84c:	dc7c      	bgt.n	800c948 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800c84e:	f1b8 0f00 	cmp.w	r8, #0
 800c852:	da01      	bge.n	800c858 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800c854:	2f00      	cmp	r7, #0
 800c856:	d17a      	bne.n	800c94e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c858:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c85a:	4630      	mov	r0, r6
 800c85c:	6832      	ldr	r2, [r6, #0]
 800c85e:	9318      	str	r3, [sp, #96]	@ 0x60
 800c860:	2300      	movs	r3, #0
 800c862:	9907      	ldr	r1, [sp, #28]
 800c864:	e9cd 3316 	strd	r3, r3, [sp, #88]	@ 0x58
 800c868:	f8d2 408c 	ldr.w	r4, [r2, #140]	@ 0x8c
 800c86c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c870:	46a4      	mov	ip, r4
 800c872:	b00d      	add	sp, #52	@ 0x34
 800c874:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c878:	4760      	bx	ip
 800c87a:	fb97 f4f9 	sdiv	r4, r7, r9
 800c87e:	1e63      	subs	r3, r4, #1
 800c880:	9305      	str	r3, [sp, #20]
 800c882:	f1ba 0f00 	cmp.w	sl, #0
 800c886:	d122      	bne.n	800c8ce <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800c888:	fb03 f509 	mul.w	r5, r3, r9
 800c88c:	fb98 faf9 	sdiv	sl, r8, r9
 800c890:	f10a 0a02 	add.w	sl, sl, #2
 800c894:	9b05      	ldr	r3, [sp, #20]
 800c896:	459a      	cmp	sl, r3
 800c898:	d059      	beq.n	800c94e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c89a:	42af      	cmp	r7, r5
 800c89c:	dc5a      	bgt.n	800c954 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800c89e:	45a8      	cmp	r8, r5
 800c8a0:	da01      	bge.n	800c8a6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800c8a2:	42af      	cmp	r7, r5
 800c8a4:	db0e      	blt.n	800c8c4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800c8a6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c8a8:	4630      	mov	r0, r6
 800c8aa:	9905      	ldr	r1, [sp, #20]
 800c8ac:	9302      	str	r3, [sp, #8]
 800c8ae:	6b73      	ldr	r3, [r6, #52]	@ 0x34
 800c8b0:	6832      	ldr	r2, [r6, #0]
 800c8b2:	434b      	muls	r3, r1
 800c8b4:	9907      	ldr	r1, [sp, #28]
 800c8b6:	e9cd 5300 	strd	r5, r3, [sp]
 800c8ba:	f8d2 b08c 	ldr.w	fp, [r2, #140]	@ 0x8c
 800c8be:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c8c2:	47d8      	blx	fp
 800c8c4:	9b05      	ldr	r3, [sp, #20]
 800c8c6:	444d      	add	r5, r9
 800c8c8:	3301      	adds	r3, #1
 800c8ca:	9305      	str	r3, [sp, #20]
 800c8cc:	e7e2      	b.n	800c894 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800c8ce:	fb97 f3fa 	sdiv	r3, r7, sl
 800c8d2:	3b01      	subs	r3, #1
 800c8d4:	9306      	str	r3, [sp, #24]
 800c8d6:	9a06      	ldr	r2, [sp, #24]
 800c8d8:	fb98 f3fa 	sdiv	r3, r8, sl
 800c8dc:	fb02 fb0a 	mul.w	fp, r2, sl
 800c8e0:	9a05      	ldr	r2, [sp, #20]
 800c8e2:	3302      	adds	r3, #2
 800c8e4:	fb02 f509 	mul.w	r5, r2, r9
 800c8e8:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c8ea:	45ab      	cmp	fp, r5
 800c8ec:	dd1d      	ble.n	800c92a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800c8ee:	42af      	cmp	r7, r5
 800c8f0:	dc08      	bgt.n	800c904 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800c8f2:	45a8      	cmp	r8, r5
 800c8f4:	da08      	bge.n	800c908 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800c8f6:	42af      	cmp	r7, r5
 800c8f8:	da06      	bge.n	800c908 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800c8fa:	9b05      	ldr	r3, [sp, #20]
 800c8fc:	444d      	add	r5, r9
 800c8fe:	3301      	adds	r3, #1
 800c900:	9305      	str	r3, [sp, #20]
 800c902:	e7f2      	b.n	800c8ea <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800c904:	45a8      	cmp	r8, r5
 800c906:	dcf8      	bgt.n	800c8fa <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800c908:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c90a:	4630      	mov	r0, r6
 800c90c:	9905      	ldr	r1, [sp, #20]
 800c90e:	9302      	str	r3, [sp, #8]
 800c910:	6b73      	ldr	r3, [r6, #52]	@ 0x34
 800c912:	6832      	ldr	r2, [r6, #0]
 800c914:	434b      	muls	r3, r1
 800c916:	9907      	ldr	r1, [sp, #28]
 800c918:	e9cd 5300 	strd	r5, r3, [sp]
 800c91c:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 800c920:	461c      	mov	r4, r3
 800c922:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c926:	47a0      	blx	r4
 800c928:	e7e7      	b.n	800c8fa <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800c92a:	45ab      	cmp	fp, r5
 800c92c:	db04      	blt.n	800c938 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800c92e:	9b05      	ldr	r3, [sp, #20]
 800c930:	444d      	add	r5, r9
 800c932:	3301      	adds	r3, #1
 800c934:	9305      	str	r3, [sp, #20]
 800c936:	e7f8      	b.n	800c92a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800c938:	9b06      	ldr	r3, [sp, #24]
 800c93a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c93c:	3301      	adds	r3, #1
 800c93e:	4293      	cmp	r3, r2
 800c940:	9306      	str	r3, [sp, #24]
 800c942:	d004      	beq.n	800c94e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c944:	44d3      	add	fp, sl
 800c946:	e7d0      	b.n	800c8ea <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800c948:	f1b8 0f00 	cmp.w	r8, #0
 800c94c:	dd84      	ble.n	800c858 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800c94e:	b00d      	add	sp, #52	@ 0x34
 800c950:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c954:	45a8      	cmp	r8, r5
 800c956:	dcb5      	bgt.n	800c8c4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800c958:	e7a5      	b.n	800c8a6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800c95a <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800c95a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c95e:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	@ 0x120
 800c962:	b089      	sub	sp, #36	@ 0x24
 800c964:	468a      	mov	sl, r1
 800c966:	4693      	mov	fp, r2
 800c968:	2c00      	cmp	r4, #0
 800c96a:	9007      	str	r0, [sp, #28]
 800c96c:	461d      	mov	r5, r3
 800c96e:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800c972:	e9dd c612 	ldrd	ip, r6, [sp, #72]	@ 0x48
 800c976:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	@ 0x50
 800c97a:	dd03      	ble.n	800c984 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800c97c:	4564      	cmp	r4, ip
 800c97e:	dd01      	ble.n	800c984 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800c980:	42b4      	cmp	r4, r6
 800c982:	dd0e      	ble.n	800c9a2 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800c984:	f8cd c048 	str.w	ip, [sp, #72]	@ 0x48
 800c988:	e9cd 8915 	strd	r8, r9, [sp, #84]	@ 0x54
 800c98c:	e9cd 6713 	strd	r6, r7, [sp, #76]	@ 0x4c
 800c990:	462b      	mov	r3, r5
 800c992:	465a      	mov	r2, fp
 800c994:	4651      	mov	r1, sl
 800c996:	9807      	ldr	r0, [sp, #28]
 800c998:	b009      	add	sp, #36	@ 0x24
 800c99a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c99e:	f7ff bf43 	b.w	800c828 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800c9a2:	f104 3eff 	add.w	lr, r4, #4294967295
 800c9a6:	9702      	str	r7, [sp, #8]
 800c9a8:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800c9ac:	e9cd ce00 	strd	ip, lr, [sp]
 800c9b0:	f7ff ff3a 	bl	800c828 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800c9b4:	9412      	str	r4, [sp, #72]	@ 0x48
 800c9b6:	e9cd 8915 	strd	r8, r9, [sp, #84]	@ 0x54
 800c9ba:	e9cd 6713 	strd	r6, r7, [sp, #76]	@ 0x4c
 800c9be:	e7e7      	b.n	800c990 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800c9c0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800c9c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c9c4:	f1b3 0900 	subs.w	r9, r3, #0
 800c9c8:	460d      	mov	r5, r1
 800c9ca:	4690      	mov	r8, r2
 800c9cc:	9f08      	ldr	r7, [sp, #32]
 800c9ce:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 800c9d2:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800c9d4:	da18      	bge.n	800ca08 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800c9d6:	2a01      	cmp	r2, #1
 800c9d8:	dd16      	ble.n	800ca08 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800c9da:	232d      	movs	r3, #45	@ 0x2d
 800c9dc:	f1c9 0900 	rsb	r9, r9, #0
 800c9e0:	2001      	movs	r0, #1
 800c9e2:	800b      	strh	r3, [r1, #0]
 800c9e4:	2f00      	cmp	r7, #0
 800c9e6:	d111      	bne.n	800ca0c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800c9e8:	2302      	movs	r3, #2
 800c9ea:	eba8 0100 	sub.w	r1, r8, r0
 800c9ee:	4a26      	ldr	r2, [pc, #152]	@ (800ca88 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800c9f0:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800c9f4:	b289      	uxth	r1, r1
 800c9f6:	fb96 f3f3 	sdiv	r3, r6, r3
 800c9fa:	444b      	add	r3, r9
 800c9fc:	fb93 f3f6 	sdiv	r3, r3, r6
 800ca00:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca04:	f006 ba5e 	b.w	8012ec4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ca08:	2000      	movs	r0, #0
 800ca0a:	e7eb      	b.n	800c9e4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800ca0c:	dd39      	ble.n	800ca82 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800ca0e:	eba8 0100 	sub.w	r1, r8, r0
 800ca12:	4a1d      	ldr	r2, [pc, #116]	@ (800ca88 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800ca14:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800ca18:	f108 38ff 	add.w	r8, r8, #4294967295
 800ca1c:	b289      	uxth	r1, r1
 800ca1e:	fb99 f4f6 	sdiv	r4, r9, r6
 800ca22:	4623      	mov	r3, r4
 800ca24:	f006 fa4e 	bl	8012ec4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ca28:	4628      	mov	r0, r5
 800ca2a:	f005 fedf 	bl	80127ec <_ZN8touchgfx7Unicode6strlenEPKt>
 800ca2e:	4580      	cmp	r8, r0
 800ca30:	dd27      	ble.n	800ca82 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800ca32:	f04f 0e02 	mov.w	lr, #2
 800ca36:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800ca3a:	fb06 9314 	mls	r3, r6, r4, r9
 800ca3e:	3001      	adds	r0, #1
 800ca40:	2200      	movs	r2, #0
 800ca42:	f04f 090a 	mov.w	r9, #10
 800ca46:	f107 3aff 	add.w	sl, r7, #4294967295
 800ca4a:	fb96 fefe 	sdiv	lr, r6, lr
 800ca4e:	4580      	cmp	r8, r0
 800ca50:	4684      	mov	ip, r0
 800ca52:	dd13      	ble.n	800ca7c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800ca54:	fb09 f303 	mul.w	r3, r9, r3
 800ca58:	4592      	cmp	sl, r2
 800ca5a:	f102 0201 	add.w	r2, r2, #1
 800ca5e:	f100 0c01 	add.w	ip, r0, #1
 800ca62:	bf08      	it	eq
 800ca64:	4473      	addeq	r3, lr
 800ca66:	4297      	cmp	r7, r2
 800ca68:	fb93 f4f6 	sdiv	r4, r3, r6
 800ca6c:	f104 0130 	add.w	r1, r4, #48	@ 0x30
 800ca70:	fb06 3314 	mls	r3, r6, r4, r3
 800ca74:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800ca78:	4660      	mov	r0, ip
 800ca7a:	d1e8      	bne.n	800ca4e <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800ca7c:	2300      	movs	r3, #0
 800ca7e:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800ca82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ca86:	bf00      	nop
 800ca88:	08024568 	.word	0x08024568

0800ca8c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800ca8c:	4a69      	ldr	r2, [pc, #420]	@ (800cc34 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a8>)
 800ca8e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ca92:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 800ca94:	b093      	sub	sp, #76	@ 0x4c
 800ca96:	8812      	ldrh	r2, [r2, #0]
 800ca98:	4604      	mov	r4, r0
 800ca9a:	460e      	mov	r6, r1
 800ca9c:	429a      	cmp	r2, r3
 800ca9e:	d93a      	bls.n	800cb16 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800caa0:	4a65      	ldr	r2, [pc, #404]	@ (800cc38 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1ac>)
 800caa2:	6812      	ldr	r2, [r2, #0]
 800caa4:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800caa8:	4b64      	ldr	r3, [pc, #400]	@ (800cc3c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b0>)
 800caaa:	681b      	ldr	r3, [r3, #0]
 800caac:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800cab0:	f1b8 0f00 	cmp.w	r8, #0
 800cab4:	d02f      	beq.n	800cb16 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cab6:	6803      	ldr	r3, [r0, #0]
 800cab8:	6945      	ldr	r5, [r0, #20]
 800caba:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800cabc:	2d00      	cmp	r5, #0
 800cabe:	f000 80b5 	beq.w	800cc2c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a0>
 800cac2:	696f      	ldr	r7, [r5, #20]
 800cac4:	4798      	blx	r3
 800cac6:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 800caca:	fb13 f000 	smulbb	r0, r3, r0
 800cace:	b280      	uxth	r0, r0
 800cad0:	1c43      	adds	r3, r0, #1
 800cad2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800cad6:	0a03      	lsrs	r3, r0, #8
 800cad8:	d01d      	beq.n	800cb16 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cada:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800cadc:	4620      	mov	r0, r4
 800cade:	6823      	ldr	r3, [r4, #0]
 800cae0:	434e      	muls	r6, r1
 800cae2:	4639      	mov	r1, r7
 800cae4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800cae8:	4798      	blx	r3
 800caea:	6823      	ldr	r3, [r4, #0]
 800caec:	4605      	mov	r5, r0
 800caee:	4639      	mov	r1, r7
 800caf0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800caf4:	4620      	mov	r0, r4
 800caf6:	4798      	blx	r3
 800caf8:	2d00      	cmp	r5, #0
 800cafa:	dd0f      	ble.n	800cb1c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800cafc:	fb96 f3f5 	sdiv	r3, r6, r5
 800cb00:	436b      	muls	r3, r5
 800cb02:	1b9a      	subs	r2, r3, r6
 800cb04:	4253      	negs	r3, r2
 800cb06:	4153      	adcs	r3, r2
 800cb08:	2800      	cmp	r0, #0
 800cb0a:	dd09      	ble.n	800cb20 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800cb0c:	fb96 f2f0 	sdiv	r2, r6, r0
 800cb10:	4350      	muls	r0, r2
 800cb12:	42b0      	cmp	r0, r6
 800cb14:	d10d      	bne.n	800cb32 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa6>
 800cb16:	b013      	add	sp, #76	@ 0x4c
 800cb18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cb1c:	2300      	movs	r3, #0
 800cb1e:	e7f3      	b.n	800cb08 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800cb20:	d107      	bne.n	800cb32 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa6>
 800cb22:	2d00      	cmp	r5, #0
 800cb24:	d17f      	bne.n	800cc26 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x19a>
 800cb26:	2e00      	cmp	r6, #0
 800cb28:	d063      	beq.n	800cbf2 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x166>
 800cb2a:	2b00      	cmp	r3, #0
 800cb2c:	d0f3      	beq.n	800cb16 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cb2e:	462a      	mov	r2, r5
 800cb30:	e007      	b.n	800cb42 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb6>
 800cb32:	2b00      	cmp	r3, #0
 800cb34:	d0ef      	beq.n	800cb16 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cb36:	2d00      	cmp	r5, #0
 800cb38:	d0f9      	beq.n	800cb2e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa2>
 800cb3a:	fb96 f2f5 	sdiv	r2, r6, r5
 800cb3e:	6b65      	ldr	r5, [r4, #52]	@ 0x34
 800cb40:	436a      	muls	r2, r5
 800cb42:	683b      	ldr	r3, [r7, #0]
 800cb44:	4631      	mov	r1, r6
 800cb46:	4638      	mov	r0, r7
 800cb48:	f8d3 3110 	ldr.w	r3, [r3, #272]	@ 0x110
 800cb4c:	4798      	blx	r3
 800cb4e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800cb50:	2214      	movs	r2, #20
 800cb52:	a908      	add	r1, sp, #32
 800cb54:	9302      	str	r3, [sp, #8]
 800cb56:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 800cb5a:	9301      	str	r3, [sp, #4]
 800cb5c:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 800cb60:	9300      	str	r3, [sp, #0]
 800cb62:	4603      	mov	r3, r0
 800cb64:	4620      	mov	r0, r4
 800cb66:	f7ff ff2b 	bl	800c9c0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800cb6a:	4b35      	ldr	r3, [pc, #212]	@ (800cc40 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800cb6c:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800cb6e:	6818      	ldr	r0, [r3, #0]
 800cb70:	f7f6 fe6a 	bl	8003848 <_ZNK8touchgfx5Texts7getTextEt>
 800cb74:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800cb78:	4681      	mov	r9, r0
 800cb7a:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800cb7e:	f8d8 3000 	ldr.w	r3, [r8]
 800cb82:	d138      	bne.n	800cbf6 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x16a>
 800cb84:	4601      	mov	r1, r0
 800cb86:	699b      	ldr	r3, [r3, #24]
 800cb88:	aa08      	add	r2, sp, #32
 800cb8a:	4640      	mov	r0, r8
 800cb8c:	4798      	blx	r3
 800cb8e:	b205      	sxth	r5, r0
 800cb90:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800cb94:	2002      	movs	r0, #2
 800cb96:	4631      	mov	r1, r6
 800cb98:	f8b7 906c 	ldrh.w	r9, [r7, #108]	@ 0x6c
 800cb9c:	2b01      	cmp	r3, #1
 800cb9e:	683b      	ldr	r3, [r7, #0]
 800cba0:	bf88      	it	hi
 800cba2:	f105 0801 	addhi.w	r8, r5, #1
 800cba6:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 800cbaa:	bf8c      	ite	hi
 800cbac:	fb98 f8f0 	sdivhi	r8, r8, r0
 800cbb0:	fb95 f8f0 	sdivls	r8, r5, r0
 800cbb4:	4638      	mov	r0, r7
 800cbb6:	bf88      	it	hi
 800cbb8:	fa0f f888 	sxthhi.w	r8, r8
 800cbbc:	4798      	blx	r3
 800cbbe:	ab12      	add	r3, sp, #72	@ 0x48
 800cbc0:	f843 0d34 	str.w	r0, [r3, #-52]!
 800cbc4:	4618      	mov	r0, r3
 800cbc6:	f7fe fe8f 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cbca:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800cbce:	4448      	add	r0, r9
 800cbd0:	2200      	movs	r2, #0
 800cbd2:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cbd6:	a906      	add	r1, sp, #24
 800cbd8:	eba0 0808 	sub.w	r8, r0, r8
 800cbdc:	6823      	ldr	r3, [r4, #0]
 800cbde:	f8ad 201a 	strh.w	r2, [sp, #26]
 800cbe2:	4620      	mov	r0, r4
 800cbe4:	f8ad 8018 	strh.w	r8, [sp, #24]
 800cbe8:	f8ad 501c 	strh.w	r5, [sp, #28]
 800cbec:	691b      	ldr	r3, [r3, #16]
 800cbee:	4798      	blx	r3
 800cbf0:	e791      	b.n	800cb16 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cbf2:	4632      	mov	r2, r6
 800cbf4:	e7a5      	b.n	800cb42 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb6>
 800cbf6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800cbf8:	4640      	mov	r0, r8
 800cbfa:	4798      	blx	r3
 800cbfc:	f8d8 3000 	ldr.w	r3, [r8]
 800cc00:	4605      	mov	r5, r0
 800cc02:	aa08      	add	r2, sp, #32
 800cc04:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800cc06:	4649      	mov	r1, r9
 800cc08:	4640      	mov	r0, r8
 800cc0a:	4798      	blx	r3
 800cc0c:	fb15 f500 	smulbb	r5, r5, r0
 800cc10:	f8d8 3000 	ldr.w	r3, [r8]
 800cc14:	aa08      	add	r2, sp, #32
 800cc16:	b2ad      	uxth	r5, r5
 800cc18:	4649      	mov	r1, r9
 800cc1a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800cc1c:	4640      	mov	r0, r8
 800cc1e:	4798      	blx	r3
 800cc20:	4405      	add	r5, r0
 800cc22:	b22d      	sxth	r5, r5
 800cc24:	e7b4      	b.n	800cb90 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x104>
 800cc26:	2b00      	cmp	r3, #0
 800cc28:	d187      	bne.n	800cb3a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xae>
 800cc2a:	e774      	b.n	800cb16 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cc2c:	4798      	blx	r3
 800cc2e:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 800cc32:	deff      	udf	#255	@ 0xff
 800cc34:	20016bd0 	.word	0x20016bd0
 800cc38:	20016bcc 	.word	0x20016bcc
 800cc3c:	20016bd4 	.word	0x20016bd4
 800cc40:	20016bd8 	.word	0x20016bd8

0800cc44 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800cc44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc48:	b09b      	sub	sp, #108	@ 0x6c
 800cc4a:	461e      	mov	r6, r3
 800cc4c:	681b      	ldr	r3, [r3, #0]
 800cc4e:	4604      	mov	r4, r0
 800cc50:	af1a      	add	r7, sp, #104	@ 0x68
 800cc52:	9104      	str	r1, [sp, #16]
 800cc54:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 800cc58:	4630      	mov	r0, r6
 800cc5a:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800cc5c:	4690      	mov	r8, r2
 800cc5e:	4798      	blx	r3
 800cc60:	f847 0d28 	str.w	r0, [r7, #-40]!
 800cc64:	4638      	mov	r0, r7
 800cc66:	f7fe fe3f 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc6a:	f8b6 3116 	ldrh.w	r3, [r6, #278]	@ 0x116
 800cc6e:	1ac0      	subs	r0, r0, r3
 800cc70:	b200      	sxth	r0, r0
 800cc72:	2800      	cmp	r0, #0
 800cc74:	f2c0 80b8 	blt.w	800cde8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a4>
 800cc78:	f8b6 2118 	ldrh.w	r2, [r6, #280]	@ 0x118
 800cc7c:	441a      	add	r2, r3
 800cc7e:	f8b6 3040 	ldrh.w	r3, [r6, #64]	@ 0x40
 800cc82:	1a9b      	subs	r3, r3, r2
 800cc84:	b21b      	sxth	r3, r3
 800cc86:	4298      	cmp	r0, r3
 800cc88:	f280 80ae 	bge.w	800cde8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a4>
 800cc8c:	6833      	ldr	r3, [r6, #0]
 800cc8e:	4630      	mov	r0, r6
 800cc90:	e9dd 1224 	ldrd	r1, r2, [sp, #144]	@ 0x90
 800cc94:	f8d3 3110 	ldr.w	r3, [r3, #272]	@ 0x110
 800cc98:	4798      	blx	r3
 800cc9a:	6833      	ldr	r3, [r6, #0]
 800cc9c:	f8b4 9042 	ldrh.w	r9, [r4, #66]	@ 0x42
 800cca0:	4605      	mov	r5, r0
 800cca2:	f8b4 b044 	ldrh.w	fp, [r4, #68]	@ 0x44
 800cca6:	4630      	mov	r0, r6
 800cca8:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800ccac:	4798      	blx	r3
 800ccae:	f8cd 9000 	str.w	r9, [sp]
 800ccb2:	462b      	mov	r3, r5
 800ccb4:	2214      	movs	r2, #20
 800ccb6:	4639      	mov	r1, r7
 800ccb8:	e9cd b001 	strd	fp, r0, [sp, #4]
 800ccbc:	4620      	mov	r0, r4
 800ccbe:	f7ff fe7f 	bl	800c9c0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800ccc2:	4b57      	ldr	r3, [pc, #348]	@ (800ce20 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1dc>)
 800ccc4:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800ccc6:	6818      	ldr	r0, [r3, #0]
 800ccc8:	f7f6 fdbe 	bl	8003848 <_ZNK8touchgfx5Texts7getTextEt>
 800cccc:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800ccd0:	4681      	mov	r9, r0
 800ccd2:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800ccd6:	f8d8 3000 	ldr.w	r3, [r8]
 800ccda:	f040 8088 	bne.w	800cdee <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1aa>
 800ccde:	4601      	mov	r1, r0
 800cce0:	699b      	ldr	r3, [r3, #24]
 800cce2:	463a      	mov	r2, r7
 800cce4:	4640      	mov	r0, r8
 800cce6:	4798      	blx	r3
 800cce8:	b205      	sxth	r5, r0
 800ccea:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800ccee:	2002      	movs	r0, #2
 800ccf0:	6832      	ldr	r2, [r6, #0]
 800ccf2:	f10d 0a68 	add.w	sl, sp, #104	@ 0x68
 800ccf6:	2b01      	cmp	r3, #1
 800ccf8:	f8b6 306c 	ldrh.w	r3, [r6, #108]	@ 0x6c
 800ccfc:	f8d2 2114 	ldr.w	r2, [r2, #276]	@ 0x114
 800cd00:	bf88      	it	hi
 800cd02:	f105 0b01 	addhi.w	fp, r5, #1
 800cd06:	9305      	str	r3, [sp, #20]
 800cd08:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800cd0a:	bf8c      	ite	hi
 800cd0c:	fb9b fbf0 	sdivhi	fp, fp, r0
 800cd10:	fb95 fbf0 	sdivls	fp, r5, r0
 800cd14:	4630      	mov	r0, r6
 800cd16:	bf88      	it	hi
 800cd18:	fa0f fb8b 	sxthhi.w	fp, fp
 800cd1c:	4790      	blx	r2
 800cd1e:	f84a 0d3c 	str.w	r0, [sl, #-60]!
 800cd22:	4650      	mov	r0, sl
 800cd24:	2600      	movs	r6, #0
 800cd26:	f7fe fddf 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cd2a:	9b05      	ldr	r3, [sp, #20]
 800cd2c:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800cd30:	4418      	add	r0, r3
 800cd32:	f8ad 5020 	strh.w	r5, [sp, #32]
 800cd36:	ad07      	add	r5, sp, #28
 800cd38:	f8ad 601e 	strh.w	r6, [sp, #30]
 800cd3c:	eba0 0b0b 	sub.w	fp, r0, fp
 800cd40:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 800cd44:	f8ad b01c 	strh.w	fp, [sp, #28]
 800cd48:	f10d 0b24 	add.w	fp, sp, #36	@ 0x24
 800cd4c:	e895 0003 	ldmia.w	r5, {r0, r1}
 800cd50:	e88b 0003 	stmia.w	fp, {r0, r1}
 800cd54:	9904      	ldr	r1, [sp, #16]
 800cd56:	4658      	mov	r0, fp
 800cd58:	f7fc fff2 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 800cd5c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 800cd60:	42b3      	cmp	r3, r6
 800cd62:	dd41      	ble.n	800cde8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a4>
 800cd64:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 800cd68:	42b3      	cmp	r3, r6
 800cd6a:	dd3d      	ble.n	800cde8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a4>
 800cd6c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 800cd70:	4620      	mov	r0, r4
 800cd72:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800cd76:	1a5b      	subs	r3, r3, r1
 800cd78:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 800cd7c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800cd80:	f8bd 3026 	ldrh.w	r3, [sp, #38]	@ 0x26
 800cd84:	1a5b      	subs	r3, r3, r1
 800cd86:	4629      	mov	r1, r5
 800cd88:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800cd8c:	6823      	ldr	r3, [r4, #0]
 800cd8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cd90:	4798      	blx	r3
 800cd92:	4b24      	ldr	r3, [pc, #144]	@ (800ce24 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1e0>)
 800cd94:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800cd96:	681b      	ldr	r3, [r3, #0]
 800cd98:	f894 0040 	ldrb.w	r0, [r4, #64]	@ 0x40
 800cd9c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800cda0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800cda2:	785b      	ldrb	r3, [r3, #1]
 800cda4:	910d      	str	r1, [sp, #52]	@ 0x34
 800cda6:	f3c3 0c01 	ubfx	ip, r3, #0, #2
 800cdaa:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800cdae:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 800cdb2:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 800cdb6:	f89d 3098 	ldrb.w	r3, [sp, #152]	@ 0x98
 800cdba:	f88d c030 	strb.w	ip, [sp, #48]	@ 0x30
 800cdbe:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800cdc2:	f88d 0032 	strb.w	r0, [sp, #50]	@ 0x32
 800cdc6:	f8ad 6038 	strh.w	r6, [sp, #56]	@ 0x38
 800cdca:	f88d 603b 	strb.w	r6, [sp, #59]	@ 0x3b
 800cdce:	f88d 603c 	strb.w	r6, [sp, #60]	@ 0x3c
 800cdd2:	f7f5 fb03 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800cdd6:	465b      	mov	r3, fp
 800cdd8:	e9cd 7602 	strd	r7, r6, [sp, #8]
 800cddc:	e9cd a900 	strd	sl, r9, [sp]
 800cde0:	e895 0006 	ldmia.w	r5, {r1, r2}
 800cde4:	f7f6 fce2 	bl	80037ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800cde8:	b01b      	add	sp, #108	@ 0x6c
 800cdea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cdee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800cdf0:	4640      	mov	r0, r8
 800cdf2:	4798      	blx	r3
 800cdf4:	f8d8 3000 	ldr.w	r3, [r8]
 800cdf8:	4605      	mov	r5, r0
 800cdfa:	463a      	mov	r2, r7
 800cdfc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800cdfe:	4649      	mov	r1, r9
 800ce00:	4640      	mov	r0, r8
 800ce02:	4798      	blx	r3
 800ce04:	fb15 f500 	smulbb	r5, r5, r0
 800ce08:	f8d8 3000 	ldr.w	r3, [r8]
 800ce0c:	463a      	mov	r2, r7
 800ce0e:	b2ad      	uxth	r5, r5
 800ce10:	4649      	mov	r1, r9
 800ce12:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ce14:	4640      	mov	r0, r8
 800ce16:	4798      	blx	r3
 800ce18:	4405      	add	r5, r0
 800ce1a:	b22d      	sxth	r5, r5
 800ce1c:	e765      	b.n	800ccea <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa6>
 800ce1e:	bf00      	nop
 800ce20:	20016bd8 	.word	0x20016bd8
 800ce24:	20016bcc 	.word	0x20016bcc

0800ce28 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800ce28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce2c:	b09b      	sub	sp, #108	@ 0x6c
 800ce2e:	4698      	mov	r8, r3
 800ce30:	681b      	ldr	r3, [r3, #0]
 800ce32:	4604      	mov	r4, r0
 800ce34:	ae1a      	add	r6, sp, #104	@ 0x68
 800ce36:	9104      	str	r1, [sp, #16]
 800ce38:	f8d3 3118 	ldr.w	r3, [r3, #280]	@ 0x118
 800ce3c:	4640      	mov	r0, r8
 800ce3e:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800ce40:	4617      	mov	r7, r2
 800ce42:	4798      	blx	r3
 800ce44:	f846 0d28 	str.w	r0, [r6, #-40]!
 800ce48:	4630      	mov	r0, r6
 800ce4a:	f7fe fd4d 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ce4e:	f8b8 3114 	ldrh.w	r3, [r8, #276]	@ 0x114
 800ce52:	1ac0      	subs	r0, r0, r3
 800ce54:	b200      	sxth	r0, r0
 800ce56:	2800      	cmp	r0, #0
 800ce58:	f2c0 80ba 	blt.w	800cfd0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a8>
 800ce5c:	f8b8 211a 	ldrh.w	r2, [r8, #282]	@ 0x11a
 800ce60:	441a      	add	r2, r3
 800ce62:	f8b8 3042 	ldrh.w	r3, [r8, #66]	@ 0x42
 800ce66:	1a9b      	subs	r3, r3, r2
 800ce68:	b21b      	sxth	r3, r3
 800ce6a:	4298      	cmp	r0, r3
 800ce6c:	f280 80b0 	bge.w	800cfd0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a8>
 800ce70:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800ce72:	2214      	movs	r2, #20
 800ce74:	4631      	mov	r1, r6
 800ce76:	4620      	mov	r0, r4
 800ce78:	9302      	str	r3, [sp, #8]
 800ce7a:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 800ce7e:	9301      	str	r3, [sp, #4]
 800ce80:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 800ce84:	9300      	str	r3, [sp, #0]
 800ce86:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 800ce88:	f7ff fd9a 	bl	800c9c0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800ce8c:	4b55      	ldr	r3, [pc, #340]	@ (800cfe4 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1bc>)
 800ce8e:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800ce90:	6818      	ldr	r0, [r3, #0]
 800ce92:	f7f6 fcd9 	bl	8003848 <_ZNK8touchgfx5Texts7getTextEt>
 800ce96:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800ce9a:	4681      	mov	r9, r0
 800ce9c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800cea0:	683b      	ldr	r3, [r7, #0]
 800cea2:	f040 8098 	bne.w	800cfd6 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ae>
 800cea6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800cea8:	4638      	mov	r0, r7
 800ceaa:	4798      	blx	r3
 800ceac:	683b      	ldr	r3, [r7, #0]
 800ceae:	4605      	mov	r5, r0
 800ceb0:	4632      	mov	r2, r6
 800ceb2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ceb4:	4649      	mov	r1, r9
 800ceb6:	4638      	mov	r0, r7
 800ceb8:	4798      	blx	r3
 800ceba:	fb15 f500 	smulbb	r5, r5, r0
 800cebe:	683b      	ldr	r3, [r7, #0]
 800cec0:	4632      	mov	r2, r6
 800cec2:	b2ad      	uxth	r5, r5
 800cec4:	4649      	mov	r1, r9
 800cec6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800cec8:	4638      	mov	r0, r7
 800ceca:	4798      	blx	r3
 800cecc:	4405      	add	r5, r0
 800cece:	b22d      	sxth	r5, r5
 800ced0:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800ced4:	2002      	movs	r0, #2
 800ced6:	f8d8 2000 	ldr.w	r2, [r8]
 800ceda:	f10d 0a68 	add.w	sl, sp, #104	@ 0x68
 800cede:	2b01      	cmp	r3, #1
 800cee0:	f8b8 30c6 	ldrh.w	r3, [r8, #198]	@ 0xc6
 800cee4:	f8d2 2118 	ldr.w	r2, [r2, #280]	@ 0x118
 800cee8:	bf88      	it	hi
 800ceea:	f105 0b01 	addhi.w	fp, r5, #1
 800ceee:	9305      	str	r3, [sp, #20]
 800cef0:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800cef2:	bf8c      	ite	hi
 800cef4:	fb9b fbf0 	sdivhi	fp, fp, r0
 800cef8:	fb95 fbf0 	sdivls	fp, r5, r0
 800cefc:	4640      	mov	r0, r8
 800cefe:	bf88      	it	hi
 800cf00:	fa0f fb8b 	sxthhi.w	fp, fp
 800cf04:	4790      	blx	r2
 800cf06:	f84a 0d3c 	str.w	r0, [sl, #-60]!
 800cf0a:	4650      	mov	r0, sl
 800cf0c:	f04f 0800 	mov.w	r8, #0
 800cf10:	f7fe fcea 	bl	800b8e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cf14:	9b05      	ldr	r3, [sp, #20]
 800cf16:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800cf1a:	4418      	add	r0, r3
 800cf1c:	f8ad 5022 	strh.w	r5, [sp, #34]	@ 0x22
 800cf20:	ad07      	add	r5, sp, #28
 800cf22:	f8ad 801c 	strh.w	r8, [sp, #28]
 800cf26:	eba0 0b0b 	sub.w	fp, r0, fp
 800cf2a:	f8ad 1020 	strh.w	r1, [sp, #32]
 800cf2e:	f8ad b01e 	strh.w	fp, [sp, #30]
 800cf32:	f10d 0b24 	add.w	fp, sp, #36	@ 0x24
 800cf36:	e895 0003 	ldmia.w	r5, {r0, r1}
 800cf3a:	e88b 0003 	stmia.w	fp, {r0, r1}
 800cf3e:	9904      	ldr	r1, [sp, #16]
 800cf40:	4658      	mov	r0, fp
 800cf42:	f7fc fefd 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 800cf46:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 800cf4a:	4543      	cmp	r3, r8
 800cf4c:	dd40      	ble.n	800cfd0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a8>
 800cf4e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 800cf52:	4543      	cmp	r3, r8
 800cf54:	dd3c      	ble.n	800cfd0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a8>
 800cf56:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 800cf5a:	4620      	mov	r0, r4
 800cf5c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800cf60:	1a5b      	subs	r3, r3, r1
 800cf62:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 800cf66:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800cf6a:	f8bd 3026 	ldrh.w	r3, [sp, #38]	@ 0x26
 800cf6e:	1a5b      	subs	r3, r3, r1
 800cf70:	4629      	mov	r1, r5
 800cf72:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800cf76:	6823      	ldr	r3, [r4, #0]
 800cf78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cf7a:	4798      	blx	r3
 800cf7c:	4b1a      	ldr	r3, [pc, #104]	@ (800cfe8 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1c0>)
 800cf7e:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800cf80:	681b      	ldr	r3, [r3, #0]
 800cf82:	f894 0040 	ldrb.w	r0, [r4, #64]	@ 0x40
 800cf86:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800cf8a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800cf8c:	785b      	ldrb	r3, [r3, #1]
 800cf8e:	910d      	str	r1, [sp, #52]	@ 0x34
 800cf90:	f3c3 0c01 	ubfx	ip, r3, #0, #2
 800cf94:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800cf98:	970b      	str	r7, [sp, #44]	@ 0x2c
 800cf9a:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 800cf9e:	f89d 3098 	ldrb.w	r3, [sp, #152]	@ 0x98
 800cfa2:	f88d c030 	strb.w	ip, [sp, #48]	@ 0x30
 800cfa6:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800cfaa:	f88d 0032 	strb.w	r0, [sp, #50]	@ 0x32
 800cfae:	f8ad 8038 	strh.w	r8, [sp, #56]	@ 0x38
 800cfb2:	f88d 803b 	strb.w	r8, [sp, #59]	@ 0x3b
 800cfb6:	f88d 803c 	strb.w	r8, [sp, #60]	@ 0x3c
 800cfba:	f7f5 fa0f 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800cfbe:	465b      	mov	r3, fp
 800cfc0:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800cfc4:	e9cd a900 	strd	sl, r9, [sp]
 800cfc8:	e895 0006 	ldmia.w	r5, {r1, r2}
 800cfcc:	f7f6 fbee 	bl	80037ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800cfd0:	b01b      	add	sp, #108	@ 0x6c
 800cfd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cfd6:	4601      	mov	r1, r0
 800cfd8:	699b      	ldr	r3, [r3, #24]
 800cfda:	4632      	mov	r2, r6
 800cfdc:	4638      	mov	r0, r7
 800cfde:	4798      	blx	r3
 800cfe0:	b205      	sxth	r5, r0
 800cfe2:	e775      	b.n	800ced0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800cfe4:	20016bd8 	.word	0x20016bd8
 800cfe8:	20016bcc 	.word	0x20016bcc

0800cfec <_ZN8touchgfx21GraphWrapAndClearData5clearEv>:
 800cfec:	b510      	push	{r4, lr}
 800cfee:	4604      	mov	r4, r0
 800cff0:	f7fe fd65 	bl	800babe <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800cff4:	4620      	mov	r0, r4
 800cff6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cffa:	f7fe bb12 	b.w	800b622 <_ZN8touchgfx17AbstractDataGraph5clearEv>

0800cffe <_ZN8touchgfx21GraphWrapAndClearData8addValueEi>:
 800cffe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d000:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	@ 0x11e
 800d004:	460f      	mov	r7, r1
 800d006:	f8d0 6144 	ldr.w	r6, [r0, #324]	@ 0x144
 800d00a:	4604      	mov	r4, r0
 800d00c:	1c6b      	adds	r3, r5, #1
 800d00e:	4629      	mov	r1, r5
 800d010:	f8a0 311e 	strh.w	r3, [r0, #286]	@ 0x11e
 800d014:	6803      	ldr	r3, [r0, #0]
 800d016:	f8d3 3180 	ldr.w	r3, [r3, #384]	@ 0x180
 800d01a:	4798      	blx	r3
 800d01c:	f846 7020 	str.w	r7, [r6, r0, lsl #2]
 800d020:	b915      	cbnz	r5, 800d028 <_ZN8touchgfx21GraphWrapAndClearData8addValueEi+0x2a>
 800d022:	4620      	mov	r0, r4
 800d024:	f7fe fd4b 	bl	800babe <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800d028:	4620      	mov	r0, r4
 800d02a:	4629      	mov	r1, r5
 800d02c:	f7fe fd1f 	bl	800ba6e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800d030:	4628      	mov	r0, r5
 800d032:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d034 <_ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv>:
 800d034:	f9b0 111e 	ldrsh.w	r1, [r0, #286]	@ 0x11e
 800d038:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	@ 0x11c
 800d03c:	4291      	cmp	r1, r2
 800d03e:	db03      	blt.n	800d048 <_ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv+0x14>
 800d040:	6803      	ldr	r3, [r0, #0]
 800d042:	f8d3 30fc 	ldr.w	r3, [r3, #252]	@ 0xfc
 800d046:	4718      	bx	r3
 800d048:	4770      	bx	lr
	...

0800d04c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800d04c:	4b07      	ldr	r3, [pc, #28]	@ (800d06c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800d04e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800d050:	881b      	ldrh	r3, [r3, #0]
 800d052:	4293      	cmp	r3, r2
 800d054:	bf81      	itttt	hi
 800d056:	4b06      	ldrhi	r3, [pc, #24]	@ (800d070 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800d058:	681b      	ldrhi	r3, [r3, #0]
 800d05a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800d05e:	7858      	ldrbhi	r0, [r3, #1]
 800d060:	bf8c      	ite	hi
 800d062:	f000 0003 	andhi.w	r0, r0, #3
 800d066:	2000      	movls	r0, #0
 800d068:	4770      	bx	lr
 800d06a:	bf00      	nop
 800d06c:	20016bd0 	.word	0x20016bd0
 800d070:	20016bcc 	.word	0x20016bcc

0800d074 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800d074:	4b11      	ldr	r3, [pc, #68]	@ (800d0bc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800d076:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d07a:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800d07c:	4604      	mov	r4, r0
 800d07e:	881b      	ldrh	r3, [r3, #0]
 800d080:	428b      	cmp	r3, r1
 800d082:	d918      	bls.n	800d0b6 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800d084:	6803      	ldr	r3, [r0, #0]
 800d086:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800d088:	4b0d      	ldr	r3, [pc, #52]	@ (800d0c0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800d08a:	6818      	ldr	r0, [r3, #0]
 800d08c:	f7f6 fbdc 	bl	8003848 <_ZNK8touchgfx5Texts7getTextEt>
 800d090:	6823      	ldr	r3, [r4, #0]
 800d092:	4606      	mov	r6, r0
 800d094:	4620      	mov	r0, r4
 800d096:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d098:	4798      	blx	r3
 800d09a:	6823      	ldr	r3, [r4, #0]
 800d09c:	4607      	mov	r7, r0
 800d09e:	4620      	mov	r0, r4
 800d0a0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d0a4:	4798      	blx	r3
 800d0a6:	463a      	mov	r2, r7
 800d0a8:	4603      	mov	r3, r0
 800d0aa:	4631      	mov	r1, r6
 800d0ac:	4620      	mov	r0, r4
 800d0ae:	46ac      	mov	ip, r5
 800d0b0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d0b4:	4760      	bx	ip
 800d0b6:	2000      	movs	r0, #0
 800d0b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d0bc:	20016bd0 	.word	0x20016bd0
 800d0c0:	20016bd8 	.word	0x20016bd8

0800d0c4 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800d0c4:	4b18      	ldr	r3, [pc, #96]	@ (800d128 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800d0c6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d0ca:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800d0cc:	4604      	mov	r4, r0
 800d0ce:	881b      	ldrh	r3, [r3, #0]
 800d0d0:	428b      	cmp	r3, r1
 800d0d2:	d926      	bls.n	800d122 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800d0d4:	4b15      	ldr	r3, [pc, #84]	@ (800d12c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800d0d6:	681b      	ldr	r3, [r3, #0]
 800d0d8:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800d0dc:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800d0e0:	4b13      	ldr	r3, [pc, #76]	@ (800d130 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800d0e2:	7855      	ldrb	r5, [r2, #1]
 800d0e4:	681b      	ldr	r3, [r3, #0]
 800d0e6:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800d0ea:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800d0ee:	6833      	ldr	r3, [r6, #0]
 800d0f0:	69df      	ldr	r7, [r3, #28]
 800d0f2:	4b10      	ldr	r3, [pc, #64]	@ (800d134 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800d0f4:	6818      	ldr	r0, [r3, #0]
 800d0f6:	f7f6 fba7 	bl	8003848 <_ZNK8touchgfx5Texts7getTextEt>
 800d0fa:	6823      	ldr	r3, [r4, #0]
 800d0fc:	4680      	mov	r8, r0
 800d0fe:	4620      	mov	r0, r4
 800d100:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d102:	4798      	blx	r3
 800d104:	6823      	ldr	r3, [r4, #0]
 800d106:	4681      	mov	r9, r0
 800d108:	4620      	mov	r0, r4
 800d10a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d10e:	4798      	blx	r3
 800d110:	464b      	mov	r3, r9
 800d112:	9000      	str	r0, [sp, #0]
 800d114:	4642      	mov	r2, r8
 800d116:	4629      	mov	r1, r5
 800d118:	4630      	mov	r0, r6
 800d11a:	47b8      	blx	r7
 800d11c:	b003      	add	sp, #12
 800d11e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d122:	2000      	movs	r0, #0
 800d124:	e7fa      	b.n	800d11c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800d126:	bf00      	nop
 800d128:	20016bd0 	.word	0x20016bd0
 800d12c:	20016bcc 	.word	0x20016bcc
 800d130:	20016bd4 	.word	0x20016bd4
 800d134:	20016bd8 	.word	0x20016bd8

0800d138 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800d138:	b40e      	push	{r1, r2, r3}
 800d13a:	4b30      	ldr	r3, [pc, #192]	@ (800d1fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800d13c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d140:	881a      	ldrh	r2, [r3, #0]
 800d142:	b09d      	sub	sp, #116	@ 0x74
 800d144:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800d146:	4604      	mov	r4, r0
 800d148:	429a      	cmp	r2, r3
 800d14a:	d954      	bls.n	800d1f6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800d14c:	aa26      	add	r2, sp, #152	@ 0x98
 800d14e:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800d200 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800d152:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800d204 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800d156:	9202      	str	r2, [sp, #8]
 800d158:	f8d9 2000 	ldr.w	r2, [r9]
 800d15c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d160:	f8d8 3000 	ldr.w	r3, [r8]
 800d164:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d168:	682b      	ldr	r3, [r5, #0]
 800d16a:	4628      	mov	r0, r5
 800d16c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d16e:	4798      	blx	r3
 800d170:	4606      	mov	r6, r0
 800d172:	b207      	sxth	r7, r0
 800d174:	a803      	add	r0, sp, #12
 800d176:	f004 fbeb 	bl	8011950 <_ZN8touchgfx12TextProviderC1Ev>
 800d17a:	682b      	ldr	r3, [r5, #0]
 800d17c:	4628      	mov	r0, r5
 800d17e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d180:	4798      	blx	r3
 800d182:	682b      	ldr	r3, [r5, #0]
 800d184:	4682      	mov	sl, r0
 800d186:	4628      	mov	r0, r5
 800d188:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d18a:	4798      	blx	r3
 800d18c:	4653      	mov	r3, sl
 800d18e:	9000      	str	r0, [sp, #0]
 800d190:	a803      	add	r0, sp, #12
 800d192:	9a02      	ldr	r2, [sp, #8]
 800d194:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800d196:	f004 fc2e 	bl	80119f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d19a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800d19c:	f8d9 3000 	ldr.w	r3, [r9]
 800d1a0:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800d1a4:	8925      	ldrh	r5, [r4, #8]
 800d1a6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800d1aa:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800d1ae:	eba5 050c 	sub.w	r5, r5, ip
 800d1b2:	784a      	ldrb	r2, [r1, #1]
 800d1b4:	f8d8 3000 	ldr.w	r3, [r8]
 800d1b8:	b22d      	sxth	r5, r5
 800d1ba:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800d1be:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d1c2:	9500      	str	r5, [sp, #0]
 800d1c4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800d1c8:	a803      	add	r0, sp, #12
 800d1ca:	f002 f9d5 	bl	800f578 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800d1ce:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800d1d2:	b203      	sxth	r3, r0
 800d1d4:	18b9      	adds	r1, r7, r2
 800d1d6:	2900      	cmp	r1, #0
 800d1d8:	dd0b      	ble.n	800d1f2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800d1da:	3b01      	subs	r3, #1
 800d1dc:	fb13 f302 	smulbb	r3, r3, r2
 800d1e0:	fb16 3300 	smlabb	r3, r6, r0, r3
 800d1e4:	b21f      	sxth	r7, r3
 800d1e6:	4638      	mov	r0, r7
 800d1e8:	b01d      	add	sp, #116	@ 0x74
 800d1ea:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d1ee:	b003      	add	sp, #12
 800d1f0:	4770      	bx	lr
 800d1f2:	2b00      	cmp	r3, #0
 800d1f4:	dcf7      	bgt.n	800d1e6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d1f6:	2700      	movs	r7, #0
 800d1f8:	e7f5      	b.n	800d1e6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d1fa:	bf00      	nop
 800d1fc:	20016bd0 	.word	0x20016bd0
 800d200:	20016bcc 	.word	0x20016bcc
 800d204:	20016bd4 	.word	0x20016bd4

0800d208 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800d208:	b538      	push	{r3, r4, r5, lr}
 800d20a:	4b0e      	ldr	r3, [pc, #56]	@ (800d244 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800d20c:	4604      	mov	r4, r0
 800d20e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800d210:	881b      	ldrh	r3, [r3, #0]
 800d212:	429a      	cmp	r2, r3
 800d214:	d214      	bcs.n	800d240 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800d216:	6803      	ldr	r3, [r0, #0]
 800d218:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800d21a:	4798      	blx	r3
 800d21c:	6823      	ldr	r3, [r4, #0]
 800d21e:	4605      	mov	r5, r0
 800d220:	4620      	mov	r0, r4
 800d222:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800d224:	4798      	blx	r3
 800d226:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800d22a:	b22d      	sxth	r5, r5
 800d22c:	4601      	mov	r1, r0
 800d22e:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d232:	bf06      	itte	eq
 800d234:	4602      	moveq	r2, r0
 800d236:	4629      	moveq	r1, r5
 800d238:	462a      	movne	r2, r5
 800d23a:	4620      	mov	r0, r4
 800d23c:	f7fc ff9a 	bl	800a174 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800d240:	bd38      	pop	{r3, r4, r5, pc}
 800d242:	bf00      	nop
 800d244:	20016bd0 	.word	0x20016bd0

0800d248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800d248:	b530      	push	{r4, r5, lr}
 800d24a:	888b      	ldrh	r3, [r1, #4]
 800d24c:	b085      	sub	sp, #20
 800d24e:	4604      	mov	r4, r0
 800d250:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800d252:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d256:	b923      	cbnz	r3, 800d262 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d258:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d25c:	b90b      	cbnz	r3, 800d262 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d25e:	f7ff ffd3 	bl	800d208 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800d262:	6823      	ldr	r3, [r4, #0]
 800d264:	466d      	mov	r5, sp
 800d266:	4621      	mov	r1, r4
 800d268:	343c      	adds	r4, #60	@ 0x3c
 800d26a:	4628      	mov	r0, r5
 800d26c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800d270:	4798      	blx	r3
 800d272:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800d276:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800d27a:	b005      	add	sp, #20
 800d27c:	bd30      	pop	{r4, r5, pc}

0800d27e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d27e:	2300      	movs	r3, #0
 800d280:	8083      	strh	r3, [r0, #4]
 800d282:	80c3      	strh	r3, [r0, #6]
 800d284:	8003      	strh	r3, [r0, #0]
 800d286:	8043      	strh	r3, [r0, #2]
 800d288:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800d28c:	2bff      	cmp	r3, #255	@ 0xff
 800d28e:	bf01      	itttt	eq
 800d290:	890b      	ldrheq	r3, [r1, #8]
 800d292:	8083      	strheq	r3, [r0, #4]
 800d294:	894b      	ldrheq	r3, [r1, #10]
 800d296:	80c3      	strheq	r3, [r0, #6]
 800d298:	4770      	bx	lr
	...

0800d29c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d29c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d29e:	4604      	mov	r4, r0
 800d2a0:	466b      	mov	r3, sp
 800d2a2:	6808      	ldr	r0, [r1, #0]
 800d2a4:	6849      	ldr	r1, [r1, #4]
 800d2a6:	c303      	stmia	r3!, {r0, r1}
 800d2a8:	6823      	ldr	r3, [r4, #0]
 800d2aa:	4669      	mov	r1, sp
 800d2ac:	4620      	mov	r0, r4
 800d2ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d2b0:	4798      	blx	r3
 800d2b2:	4b08      	ldr	r3, [pc, #32]	@ (800d2d4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d2b4:	681b      	ldr	r3, [r3, #0]
 800d2b6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800d2ba:	b10a      	cbz	r2, 800d2c0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d2bc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800d2be:	b900      	cbnz	r0, 800d2c2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d2c0:	6898      	ldr	r0, [r3, #8]
 800d2c2:	6803      	ldr	r3, [r0, #0]
 800d2c4:	4669      	mov	r1, sp
 800d2c6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800d2c8:	6a1d      	ldr	r5, [r3, #32]
 800d2ca:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800d2ce:	47a8      	blx	r5
 800d2d0:	b003      	add	sp, #12
 800d2d2:	bd30      	pop	{r4, r5, pc}
 800d2d4:	20016b74 	.word	0x20016b74

0800d2d8 <_ZN8touchgfx3BoxD1Ev>:
 800d2d8:	4770      	bx	lr

0800d2da <_ZN8touchgfx3BoxD0Ev>:
 800d2da:	b510      	push	{r4, lr}
 800d2dc:	4604      	mov	r4, r0
 800d2de:	212c      	movs	r1, #44	@ 0x2c
 800d2e0:	f013 fe0e 	bl	8020f00 <_ZdlPvj>
 800d2e4:	4620      	mov	r0, r4
 800d2e6:	bd10      	pop	{r4, pc}

0800d2e8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800d2e8:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800d2ec:	b12a      	cbz	r2, 800d2fa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d2ee:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800d2f2:	b112      	cbz	r2, 800d2fa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d2f4:	6803      	ldr	r3, [r0, #0]
 800d2f6:	695b      	ldr	r3, [r3, #20]
 800d2f8:	4718      	bx	r3
 800d2fa:	4770      	bx	lr

0800d2fc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800d2fc:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800d300:	4770      	bx	lr

0800d302 <_ZN8touchgfx6ButtonD1Ev>:
 800d302:	4770      	bx	lr

0800d304 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800d304:	b570      	push	{r4, r5, r6, lr}
 800d306:	880b      	ldrh	r3, [r1, #0]
 800d308:	4605      	mov	r5, r0
 800d30a:	4604      	mov	r4, r0
 800d30c:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800d30e:	8813      	ldrh	r3, [r2, #0]
 800d310:	f825 3f30 	strh.w	r3, [r5, #48]!
 800d314:	4628      	mov	r0, r5
 800d316:	f005 fe8f 	bl	8013038 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d31a:	4606      	mov	r6, r0
 800d31c:	4628      	mov	r0, r5
 800d31e:	f005 febf 	bl	80130a0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d322:	6823      	ldr	r3, [r4, #0]
 800d324:	4605      	mov	r5, r0
 800d326:	4631      	mov	r1, r6
 800d328:	4620      	mov	r0, r4
 800d32a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d32c:	4798      	blx	r3
 800d32e:	6823      	ldr	r3, [r4, #0]
 800d330:	4629      	mov	r1, r5
 800d332:	4620      	mov	r0, r4
 800d334:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d336:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d33a:	4718      	bx	r3

0800d33c <_ZN8touchgfx6ButtonD0Ev>:
 800d33c:	b510      	push	{r4, lr}
 800d33e:	4604      	mov	r4, r0
 800d340:	2134      	movs	r1, #52	@ 0x34
 800d342:	f013 fddd 	bl	8020f00 <_ZdlPvj>
 800d346:	4620      	mov	r0, r4
 800d348:	bd10      	pop	{r4, pc}

0800d34a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800d34a:	b510      	push	{r4, lr}
 800d34c:	4604      	mov	r4, r0
 800d34e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800d350:	b150      	cbz	r0, 800d368 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d352:	6803      	ldr	r3, [r0, #0]
 800d354:	68db      	ldr	r3, [r3, #12]
 800d356:	4798      	blx	r3
 800d358:	b130      	cbz	r0, 800d368 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d35a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800d35c:	4621      	mov	r1, r4
 800d35e:	6803      	ldr	r3, [r0, #0]
 800d360:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d364:	689b      	ldr	r3, [r3, #8]
 800d366:	4718      	bx	r3
 800d368:	bd10      	pop	{r4, pc}

0800d36a <_ZNK8touchgfx6Button12getSolidRectEv>:
 800d36a:	b510      	push	{r4, lr}
 800d36c:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 800d370:	4604      	mov	r4, r0
 800d372:	2bff      	cmp	r3, #255	@ 0xff
 800d374:	d006      	beq.n	800d384 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800d376:	2300      	movs	r3, #0
 800d378:	8003      	strh	r3, [r0, #0]
 800d37a:	8043      	strh	r3, [r0, #2]
 800d37c:	8083      	strh	r3, [r0, #4]
 800d37e:	80c3      	strh	r3, [r0, #6]
 800d380:	4620      	mov	r0, r4
 800d382:	bd10      	pop	{r4, pc}
 800d384:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 800d388:	b11b      	cbz	r3, 800d392 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800d38a:	3130      	adds	r1, #48	@ 0x30
 800d38c:	f005 febc 	bl	8013108 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d390:	e7f6      	b.n	800d380 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800d392:	312e      	adds	r1, #46	@ 0x2e
 800d394:	e7fa      	b.n	800d38c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800d398 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800d398:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d39c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800d3a0:	b08a      	sub	sp, #40	@ 0x28
 800d3a2:	4604      	mov	r4, r0
 800d3a4:	4688      	mov	r8, r1
 800d3a6:	2b00      	cmp	r3, #0
 800d3a8:	d066      	beq.n	800d478 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800d3aa:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800d3ac:	a805      	add	r0, sp, #20
 800d3ae:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d3b2:	f005 fe41 	bl	8013038 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d3b6:	4607      	mov	r7, r0
 800d3b8:	a805      	add	r0, sp, #20
 800d3ba:	f005 fe71 	bl	80130a0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d3be:	f9b8 6000 	ldrsh.w	r6, [r8]
 800d3c2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800d3c6:	2300      	movs	r3, #0
 800d3c8:	4432      	add	r2, r6
 800d3ca:	9306      	str	r3, [sp, #24]
 800d3cc:	b292      	uxth	r2, r2
 800d3ce:	fa0f fc82 	sxth.w	ip, r2
 800d3d2:	459c      	cmp	ip, r3
 800d3d4:	dd52      	ble.n	800d47c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d3d6:	42b7      	cmp	r7, r6
 800d3d8:	dd50      	ble.n	800d47c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d3da:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800d3de:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800d3e2:	442b      	add	r3, r5
 800d3e4:	b29b      	uxth	r3, r3
 800d3e6:	b219      	sxth	r1, r3
 800d3e8:	2900      	cmp	r1, #0
 800d3ea:	dd47      	ble.n	800d47c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d3ec:	42a8      	cmp	r0, r5
 800d3ee:	dd45      	ble.n	800d47c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d3f0:	4567      	cmp	r7, ip
 800d3f2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800d3f6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800d3fa:	bfb8      	it	lt
 800d3fc:	b2ba      	uxthlt	r2, r7
 800d3fe:	4288      	cmp	r0, r1
 800d400:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d404:	bfb8      	it	lt
 800d406:	b283      	uxthlt	r3, r0
 800d408:	1b92      	subs	r2, r2, r6
 800d40a:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d40e:	1b5b      	subs	r3, r3, r5
 800d410:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d414:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d418:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d41c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800d420:	429a      	cmp	r2, r3
 800d422:	d026      	beq.n	800d472 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d424:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d428:	2b00      	cmp	r3, #0
 800d42a:	dd22      	ble.n	800d472 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d42c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d430:	2b00      	cmp	r3, #0
 800d432:	dd1e      	ble.n	800d472 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d434:	2300      	movs	r3, #0
 800d436:	a908      	add	r1, sp, #32
 800d438:	4620      	mov	r0, r4
 800d43a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800d43e:	6823      	ldr	r3, [r4, #0]
 800d440:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d442:	4798      	blx	r3
 800d444:	4b0f      	ldr	r3, [pc, #60]	@ (800d484 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800d446:	681b      	ldr	r3, [r3, #0]
 800d448:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800d44c:	b10a      	cbz	r2, 800d452 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800d44e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800d450:	b900      	cbnz	r0, 800d454 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800d452:	6898      	ldr	r0, [r3, #8]
 800d454:	2501      	movs	r5, #1
 800d456:	6801      	ldr	r1, [r0, #0]
 800d458:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 800d45c:	9502      	str	r5, [sp, #8]
 800d45e:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800d462:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800d466:	9401      	str	r4, [sp, #4]
 800d468:	ac06      	add	r4, sp, #24
 800d46a:	9400      	str	r4, [sp, #0]
 800d46c:	688c      	ldr	r4, [r1, #8]
 800d46e:	a905      	add	r1, sp, #20
 800d470:	47a0      	blx	r4
 800d472:	b00a      	add	sp, #40	@ 0x28
 800d474:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d478:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 800d47a:	e797      	b.n	800d3ac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800d47c:	2300      	movs	r3, #0
 800d47e:	9307      	str	r3, [sp, #28]
 800d480:	e7ca      	b.n	800d418 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800d482:	bf00      	nop
 800d484:	20016b74 	.word	0x20016b74

0800d488 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800d488:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800d48c:	b12a      	cbz	r2, 800d49a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d48e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800d492:	b112      	cbz	r2, 800d49a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d494:	6803      	ldr	r3, [r0, #0]
 800d496:	695b      	ldr	r3, [r3, #20]
 800d498:	4718      	bx	r3
 800d49a:	4770      	bx	lr

0800d49c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800d49c:	4b30      	ldr	r3, [pc, #192]	@ (800d560 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800d49e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d4a2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800d4a4:	b08d      	sub	sp, #52	@ 0x34
 800d4a6:	881b      	ldrh	r3, [r3, #0]
 800d4a8:	4604      	mov	r4, r0
 800d4aa:	460f      	mov	r7, r1
 800d4ac:	4293      	cmp	r3, r2
 800d4ae:	d954      	bls.n	800d55a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800d4b0:	4b2c      	ldr	r3, [pc, #176]	@ (800d564 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800d4b2:	6819      	ldr	r1, [r3, #0]
 800d4b4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800d4b8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800d4bc:	4a2a      	ldr	r2, [pc, #168]	@ (800d568 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800d4be:	6812      	ldr	r2, [r2, #0]
 800d4c0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800d4c4:	2900      	cmp	r1, #0
 800d4c6:	d048      	beq.n	800d55a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800d4c8:	785a      	ldrb	r2, [r3, #1]
 800d4ca:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800d4ce:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800d4d2:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d4d6:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800d4da:	4b24      	ldr	r3, [pc, #144]	@ (800d56c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800d4dc:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800d4e0:	681a      	ldr	r2, [r3, #0]
 800d4e2:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800d4e6:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800d4ea:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800d4ee:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800d4f0:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800d4f4:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800d4f8:	9107      	str	r1, [sp, #28]
 800d4fa:	f88d 8020 	strb.w	r8, [sp, #32]
 800d4fe:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800d502:	9609      	str	r6, [sp, #36]	@ 0x24
 800d504:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800d508:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800d50c:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800d510:	b10b      	cbz	r3, 800d516 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800d512:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800d514:	b905      	cbnz	r5, 800d518 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800d516:	6895      	ldr	r5, [r2, #8]
 800d518:	ae05      	add	r6, sp, #20
 800d51a:	4621      	mov	r1, r4
 800d51c:	4630      	mov	r0, r6
 800d51e:	f003 fd8b 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d522:	4b13      	ldr	r3, [pc, #76]	@ (800d570 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800d524:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800d526:	6818      	ldr	r0, [r3, #0]
 800d528:	f7f6 f98e 	bl	8003848 <_ZNK8touchgfx5Texts7getTextEt>
 800d52c:	6823      	ldr	r3, [r4, #0]
 800d52e:	4680      	mov	r8, r0
 800d530:	4620      	mov	r0, r4
 800d532:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d534:	4798      	blx	r3
 800d536:	6823      	ldr	r3, [r4, #0]
 800d538:	4681      	mov	r9, r0
 800d53a:	4620      	mov	r0, r4
 800d53c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d540:	4798      	blx	r3
 800d542:	ab07      	add	r3, sp, #28
 800d544:	f8cd 8004 	str.w	r8, [sp, #4]
 800d548:	9300      	str	r3, [sp, #0]
 800d54a:	463b      	mov	r3, r7
 800d54c:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800d550:	4628      	mov	r0, r5
 800d552:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d556:	f7f6 f929 	bl	80037ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d55a:	b00d      	add	sp, #52	@ 0x34
 800d55c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d560:	20016bd0 	.word	0x20016bd0
 800d564:	20016bcc 	.word	0x20016bcc
 800d568:	20016bd4 	.word	0x20016bd4
 800d56c:	20016b74 	.word	0x20016b74
 800d570:	20016bd8 	.word	0x20016bd8

0800d574 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800d574:	4770      	bx	lr

0800d576 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800d576:	b510      	push	{r4, lr}
 800d578:	4604      	mov	r4, r0
 800d57a:	2134      	movs	r1, #52	@ 0x34
 800d57c:	f013 fcc0 	bl	8020f00 <_ZdlPvj>
 800d580:	4620      	mov	r0, r4
 800d582:	bd10      	pop	{r4, pc}

0800d584 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800d584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d588:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800d58a:	4604      	mov	r4, r0
 800d58c:	460e      	mov	r6, r1
 800d58e:	b08e      	sub	sp, #56	@ 0x38
 800d590:	b218      	sxth	r0, r3
 800d592:	8921      	ldrh	r1, [r4, #8]
 800d594:	005b      	lsls	r3, r3, #1
 800d596:	8962      	ldrh	r2, [r4, #10]
 800d598:	f8ad 0000 	strh.w	r0, [sp]
 800d59c:	b29b      	uxth	r3, r3
 800d59e:	f8ad 0002 	strh.w	r0, [sp, #2]
 800d5a2:	1ac9      	subs	r1, r1, r3
 800d5a4:	1ad3      	subs	r3, r2, r3
 800d5a6:	b209      	sxth	r1, r1
 800d5a8:	b21b      	sxth	r3, r3
 800d5aa:	2900      	cmp	r1, #0
 800d5ac:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d5b0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d5b4:	dd5e      	ble.n	800d674 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d5b6:	2b00      	cmp	r3, #0
 800d5b8:	dd5c      	ble.n	800d674 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d5ba:	6830      	ldr	r0, [r6, #0]
 800d5bc:	ab02      	add	r3, sp, #8
 800d5be:	6871      	ldr	r1, [r6, #4]
 800d5c0:	c303      	stmia	r3!, {r0, r1}
 800d5c2:	4669      	mov	r1, sp
 800d5c4:	a802      	add	r0, sp, #8
 800d5c6:	f7fc fbbb 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 800d5ca:	4620      	mov	r0, r4
 800d5cc:	a902      	add	r1, sp, #8
 800d5ce:	f7ff fe65 	bl	800d29c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800d5d2:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 800d5d4:	2800      	cmp	r0, #0
 800d5d6:	d05f      	beq.n	800d698 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d5d8:	8963      	ldrh	r3, [r4, #10]
 800d5da:	b202      	sxth	r2, r0
 800d5dc:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800d5e0:	2500      	movs	r5, #0
 800d5e2:	1a1f      	subs	r7, r3, r0
 800d5e4:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800d5e8:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d5ec:	b21b      	sxth	r3, r3
 800d5ee:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800d5f2:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 800d5f6:	af04      	add	r7, sp, #16
 800d5f8:	1a09      	subs	r1, r1, r0
 800d5fa:	9506      	str	r5, [sp, #24]
 800d5fc:	f8ad 201e 	strh.w	r2, [sp, #30]
 800d600:	f8ad 5020 	strh.w	r5, [sp, #32]
 800d604:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 800d608:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 800d60c:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800d610:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800d614:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d618:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 800d61c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800d620:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800d624:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d628:	ab06      	add	r3, sp, #24
 800d62a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d62e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d632:	e887 0003 	stmia.w	r7, {r0, r1}
 800d636:	4631      	mov	r1, r6
 800d638:	4638      	mov	r0, r7
 800d63a:	f7fc fb81 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 800d63e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800d642:	2b00      	cmp	r3, #0
 800d644:	dd12      	ble.n	800d66c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d646:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d64a:	2b00      	cmp	r3, #0
 800d64c:	dd0e      	ble.n	800d66c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d64e:	6823      	ldr	r3, [r4, #0]
 800d650:	4639      	mov	r1, r7
 800d652:	4620      	mov	r0, r4
 800d654:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d656:	4798      	blx	r3
 800d658:	f7f4 fec0 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800d65c:	6803      	ldr	r3, [r0, #0]
 800d65e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800d660:	4639      	mov	r1, r7
 800d662:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800d666:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800d66a:	47c0      	blx	r8
 800d66c:	3501      	adds	r5, #1
 800d66e:	2d04      	cmp	r5, #4
 800d670:	d1da      	bne.n	800d628 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800d672:	e011      	b.n	800d698 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d674:	6830      	ldr	r0, [r6, #0]
 800d676:	ab06      	add	r3, sp, #24
 800d678:	6871      	ldr	r1, [r6, #4]
 800d67a:	c303      	stmia	r3!, {r0, r1}
 800d67c:	6823      	ldr	r3, [r4, #0]
 800d67e:	a906      	add	r1, sp, #24
 800d680:	4620      	mov	r0, r4
 800d682:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d684:	4798      	blx	r3
 800d686:	f7f4 fea9 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 800d68a:	6803      	ldr	r3, [r0, #0]
 800d68c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800d68e:	a906      	add	r1, sp, #24
 800d690:	6a1d      	ldr	r5, [r3, #32]
 800d692:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800d696:	47a8      	blx	r5
 800d698:	b00e      	add	sp, #56	@ 0x38
 800d69a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d69e <_ZN8touchgfx5ImageD1Ev>:
 800d69e:	4770      	bx	lr

0800d6a0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800d6a0:	b570      	push	{r4, r5, r6, lr}
 800d6a2:	880b      	ldrh	r3, [r1, #0]
 800d6a4:	460d      	mov	r5, r1
 800d6a6:	4604      	mov	r4, r0
 800d6a8:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800d6aa:	4608      	mov	r0, r1
 800d6ac:	f005 fcc4 	bl	8013038 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d6b0:	4606      	mov	r6, r0
 800d6b2:	4628      	mov	r0, r5
 800d6b4:	f005 fcf4 	bl	80130a0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d6b8:	6823      	ldr	r3, [r4, #0]
 800d6ba:	4605      	mov	r5, r0
 800d6bc:	4631      	mov	r1, r6
 800d6be:	4620      	mov	r0, r4
 800d6c0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d6c2:	4798      	blx	r3
 800d6c4:	6823      	ldr	r3, [r4, #0]
 800d6c6:	4629      	mov	r1, r5
 800d6c8:	4620      	mov	r0, r4
 800d6ca:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d6cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d6d0:	4718      	bx	r3

0800d6d2 <_ZN8touchgfx5ImageD0Ev>:
 800d6d2:	b510      	push	{r4, lr}
 800d6d4:	4604      	mov	r4, r0
 800d6d6:	212c      	movs	r1, #44	@ 0x2c
 800d6d8:	f013 fc12 	bl	8020f00 <_ZdlPvj>
 800d6dc:	4620      	mov	r0, r4
 800d6de:	bd10      	pop	{r4, pc}

0800d6e0 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800d6e0:	b510      	push	{r4, lr}
 800d6e2:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800d6e6:	4604      	mov	r4, r0
 800d6e8:	2bff      	cmp	r3, #255	@ 0xff
 800d6ea:	d006      	beq.n	800d6fa <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800d6ec:	2300      	movs	r3, #0
 800d6ee:	8003      	strh	r3, [r0, #0]
 800d6f0:	8043      	strh	r3, [r0, #2]
 800d6f2:	8083      	strh	r3, [r0, #4]
 800d6f4:	80c3      	strh	r3, [r0, #6]
 800d6f6:	4620      	mov	r0, r4
 800d6f8:	bd10      	pop	{r4, pc}
 800d6fa:	3126      	adds	r1, #38	@ 0x26
 800d6fc:	f005 fd04 	bl	8013108 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d700:	e7f9      	b.n	800d6f6 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800d702 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800d702:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800d706:	b12a      	cbz	r2, 800d714 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800d708:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800d70c:	b112      	cbz	r2, 800d714 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800d70e:	6803      	ldr	r3, [r0, #0]
 800d710:	695b      	ldr	r3, [r3, #20]
 800d712:	4718      	bx	r3
 800d714:	4770      	bx	lr
	...

0800d718 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800d718:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d71c:	4604      	mov	r4, r0
 800d71e:	b088      	sub	sp, #32
 800d720:	2500      	movs	r5, #0
 800d722:	460f      	mov	r7, r1
 800d724:	f854 3b26 	ldr.w	r3, [r4], #38
 800d728:	a904      	add	r1, sp, #16
 800d72a:	4606      	mov	r6, r0
 800d72c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d72e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800d732:	4798      	blx	r3
 800d734:	4620      	mov	r0, r4
 800d736:	f005 fc7f 	bl	8013038 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d73a:	4680      	mov	r8, r0
 800d73c:	4620      	mov	r0, r4
 800d73e:	f005 fcaf 	bl	80130a0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d742:	9506      	str	r5, [sp, #24]
 800d744:	ad06      	add	r5, sp, #24
 800d746:	f8ad 001e 	strh.w	r0, [sp, #30]
 800d74a:	4639      	mov	r1, r7
 800d74c:	f8ad 801c 	strh.w	r8, [sp, #28]
 800d750:	4628      	mov	r0, r5
 800d752:	f7fc faf5 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 800d756:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d75a:	2b00      	cmp	r3, #0
 800d75c:	dd19      	ble.n	800d792 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d75e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d762:	2b00      	cmp	r3, #0
 800d764:	dd15      	ble.n	800d792 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d766:	4b0c      	ldr	r3, [pc, #48]	@ (800d798 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800d768:	681b      	ldr	r3, [r3, #0]
 800d76a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800d76e:	b10a      	cbz	r2, 800d774 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800d770:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800d772:	b900      	cbnz	r0, 800d776 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800d774:	6898      	ldr	r0, [r3, #8]
 800d776:	2701      	movs	r7, #1
 800d778:	6801      	ldr	r1, [r0, #0]
 800d77a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800d77e:	9702      	str	r7, [sp, #8]
 800d780:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800d784:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800d788:	e9cd 5600 	strd	r5, r6, [sp]
 800d78c:	688d      	ldr	r5, [r1, #8]
 800d78e:	4621      	mov	r1, r4
 800d790:	47a8      	blx	r5
 800d792:	b008      	add	sp, #32
 800d794:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d798:	20016b74 	.word	0x20016b74

0800d79c <_ZN8touchgfx7OutlineD1Ev>:
 800d79c:	4770      	bx	lr

0800d79e <_ZN8touchgfx7OutlineD0Ev>:
 800d79e:	b510      	push	{r4, lr}
 800d7a0:	4604      	mov	r4, r0
 800d7a2:	2130      	movs	r1, #48	@ 0x30
 800d7a4:	f013 fbac 	bl	8020f00 <_ZdlPvj>
 800d7a8:	4620      	mov	r0, r4
 800d7aa:	bd10      	pop	{r4, pc}

0800d7ac <_ZN8touchgfx7Outline5resetEv>:
 800d7ac:	b510      	push	{r4, lr}
 800d7ae:	4604      	mov	r4, r0
 800d7b0:	f000 fe86 	bl	800e4c0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800d7b4:	60e0      	str	r0, [r4, #12]
 800d7b6:	f000 fe89 	bl	800e4cc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800d7ba:	68e3      	ldr	r3, [r4, #12]
 800d7bc:	08c0      	lsrs	r0, r0, #3
 800d7be:	2200      	movs	r2, #0
 800d7c0:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800d7c4:	6123      	str	r3, [r4, #16]
 800d7c6:	3801      	subs	r0, #1
 800d7c8:	60a2      	str	r2, [r4, #8]
 800d7ca:	6060      	str	r0, [r4, #4]
 800d7cc:	8019      	strh	r1, [r3, #0]
 800d7ce:	8059      	strh	r1, [r3, #2]
 800d7d0:	809a      	strh	r2, [r3, #4]
 800d7d2:	80da      	strh	r2, [r3, #6]
 800d7d4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800d7d6:	f023 0301 	bic.w	r3, r3, #1
 800d7da:	f043 0302 	orr.w	r3, r3, #2
 800d7de:	6263      	str	r3, [r4, #36]	@ 0x24
 800d7e0:	bd10      	pop	{r4, pc}
	...

0800d7e4 <_ZN8touchgfx7OutlineC1Ev>:
 800d7e4:	4b0a      	ldr	r3, [pc, #40]	@ (800d810 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800d7e6:	b510      	push	{r4, lr}
 800d7e8:	6003      	str	r3, [r0, #0]
 800d7ea:	2300      	movs	r3, #0
 800d7ec:	4604      	mov	r4, r0
 800d7ee:	6243      	str	r3, [r0, #36]	@ 0x24
 800d7f0:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800d7f4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d7f8:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800d7fc:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800d800:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800d804:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800d808:	f7ff ffd0 	bl	800d7ac <_ZN8touchgfx7Outline5resetEv>
 800d80c:	4620      	mov	r0, r4
 800d80e:	bd10      	pop	{r4, pc}
 800d810:	08024904 	.word	0x08024904

0800d814 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800d814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d818:	b093      	sub	sp, #76	@ 0x4c
 800d81a:	1156      	asrs	r6, r2, #5
 800d81c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800d81e:	9305      	str	r3, [sp, #20]
 800d820:	1153      	asrs	r3, r2, #5
 800d822:	f004 051f 	and.w	r5, r4, #31
 800d826:	9303      	str	r3, [sp, #12]
 800d828:	1163      	asrs	r3, r4, #5
 800d82a:	9504      	str	r5, [sp, #16]
 800d82c:	1165      	asrs	r5, r4, #5
 800d82e:	9306      	str	r3, [sp, #24]
 800d830:	f002 031f 	and.w	r3, r2, #31
 800d834:	42ae      	cmp	r6, r5
 800d836:	f040 80f4 	bne.w	800da22 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
 800d83a:	9c04      	ldr	r4, [sp, #16]
 800d83c:	9a05      	ldr	r2, [sp, #20]
 800d83e:	42a3      	cmp	r3, r4
 800d840:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800d844:	6902      	ldr	r2, [r0, #16]
 800d846:	d125      	bne.n	800d894 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
 800d848:	f9b2 3000 	ldrsh.w	r3, [r2]
 800d84c:	459e      	cmp	lr, r3
 800d84e:	d103      	bne.n	800d858 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
 800d850:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d854:	429e      	cmp	r6, r3
 800d856:	d035      	beq.n	800d8c4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800d858:	88d1      	ldrh	r1, [r2, #6]
 800d85a:	8893      	ldrh	r3, [r2, #4]
 800d85c:	430b      	orrs	r3, r1
 800d85e:	d010      	beq.n	800d882 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800d860:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d864:	2b00      	cmp	r3, #0
 800d866:	db0c      	blt.n	800d882 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800d868:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800d86a:	428b      	cmp	r3, r1
 800d86c:	da09      	bge.n	800d882 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800d86e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800d872:	428b      	cmp	r3, r1
 800d874:	f103 0301 	add.w	r3, r3, #1
 800d878:	bf38      	it	cc
 800d87a:	3208      	addcc	r2, #8
 800d87c:	6083      	str	r3, [r0, #8]
 800d87e:	bf38      	it	cc
 800d880:	6102      	strcc	r2, [r0, #16]
 800d882:	6903      	ldr	r3, [r0, #16]
 800d884:	9a03      	ldr	r2, [sp, #12]
 800d886:	f8a3 e000 	strh.w	lr, [r3]
 800d88a:	805a      	strh	r2, [r3, #2]
 800d88c:	2200      	movs	r2, #0
 800d88e:	809a      	strh	r2, [r3, #4]
 800d890:	80da      	strh	r2, [r3, #6]
 800d892:	e017      	b.n	800d8c4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800d894:	9c05      	ldr	r4, [sp, #20]
 800d896:	114e      	asrs	r6, r1, #5
 800d898:	f001 0c1f 	and.w	ip, r1, #31
 800d89c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800d8a0:	f004 041f 	and.w	r4, r4, #31
 800d8a4:	4576      	cmp	r6, lr
 800d8a6:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800d8aa:	9402      	str	r4, [sp, #8]
 800d8ac:	9c04      	ldr	r4, [sp, #16]
 800d8ae:	eba4 0403 	sub.w	r4, r4, r3
 800d8b2:	d10a      	bne.n	800d8ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
 800d8b4:	9b02      	ldr	r3, [sp, #8]
 800d8b6:	44a0      	add	r8, r4
 800d8b8:	449c      	add	ip, r3
 800d8ba:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d8be:	fb04 a40c 	mla	r4, r4, ip, sl
 800d8c2:	80d4      	strh	r4, [r2, #6]
 800d8c4:	b013      	add	sp, #76	@ 0x4c
 800d8c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d8ca:	9d05      	ldr	r5, [sp, #20]
 800d8cc:	1a69      	subs	r1, r5, r1
 800d8ce:	bf51      	iteee	pl
 800d8d0:	f1cc 0520 	rsbpl	r5, ip, #32
 800d8d4:	fb04 f40c 	mulmi.w	r4, r4, ip
 800d8d8:	4249      	negmi	r1, r1
 800d8da:	2500      	movmi	r5, #0
 800d8dc:	bf5d      	ittte	pl
 800d8de:	436c      	mulpl	r4, r5
 800d8e0:	2520      	movpl	r5, #32
 800d8e2:	f04f 0901 	movpl.w	r9, #1
 800d8e6:	f04f 39ff 	movmi.w	r9, #4294967295
 800d8ea:	9501      	str	r5, [sp, #4]
 800d8ec:	9f01      	ldr	r7, [sp, #4]
 800d8ee:	444e      	add	r6, r9
 800d8f0:	fb94 f5f1 	sdiv	r5, r4, r1
 800d8f4:	fb01 4415 	mls	r4, r1, r5, r4
 800d8f8:	44bc      	add	ip, r7
 800d8fa:	2c00      	cmp	r4, #0
 800d8fc:	bfbc      	itt	lt
 800d8fe:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800d902:	1864      	addlt	r4, r4, r1
 800d904:	44a8      	add	r8, r5
 800d906:	fb05 ac0c 	mla	ip, r5, ip, sl
 800d90a:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d90e:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d912:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d916:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800d91a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800d91e:	ea58 0202 	orrs.w	r2, r8, r2
 800d922:	d011      	beq.n	800d948 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800d924:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800d928:	f1b8 0f00 	cmp.w	r8, #0
 800d92c:	db0c      	blt.n	800d948 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800d92e:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800d930:	4590      	cmp	r8, r2
 800d932:	da09      	bge.n	800d948 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800d934:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800d938:	4590      	cmp	r8, r2
 800d93a:	bf3c      	itt	cc
 800d93c:	f10c 0208 	addcc.w	r2, ip, #8
 800d940:	6102      	strcc	r2, [r0, #16]
 800d942:	f108 0201 	add.w	r2, r8, #1
 800d946:	6082      	str	r2, [r0, #8]
 800d948:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d94c:	2700      	movs	r7, #0
 800d94e:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800d952:	45b6      	cmp	lr, r6
 800d954:	f8ac 6000 	strh.w	r6, [ip]
 800d958:	442b      	add	r3, r5
 800d95a:	f8ac 2002 	strh.w	r2, [ip, #2]
 800d95e:	f8ac 7004 	strh.w	r7, [ip, #4]
 800d962:	f8ac 7006 	strh.w	r7, [ip, #6]
 800d966:	d04b      	beq.n	800da00 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
 800d968:	9f04      	ldr	r7, [sp, #16]
 800d96a:	1a64      	subs	r4, r4, r1
 800d96c:	f04f 0a00 	mov.w	sl, #0
 800d970:	1aff      	subs	r7, r7, r3
 800d972:	443d      	add	r5, r7
 800d974:	016d      	lsls	r5, r5, #5
 800d976:	fb95 f8f1 	sdiv	r8, r5, r1
 800d97a:	fb01 5518 	mls	r5, r1, r8, r5
 800d97e:	2d00      	cmp	r5, #0
 800d980:	bfbc      	itt	lt
 800d982:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800d986:	186d      	addlt	r5, r5, r1
 800d988:	f108 0701 	add.w	r7, r8, #1
 800d98c:	9703      	str	r7, [sp, #12]
 800d98e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d992:	1964      	adds	r4, r4, r5
 800d994:	444e      	add	r6, r9
 800d996:	bf54      	ite	pl
 800d998:	9f03      	ldrpl	r7, [sp, #12]
 800d99a:	4647      	movmi	r7, r8
 800d99c:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800d9a0:	bf58      	it	pl
 800d9a2:	1a64      	subpl	r4, r4, r1
 800d9a4:	443b      	add	r3, r7
 800d9a6:	44bb      	add	fp, r7
 800d9a8:	f8ac b004 	strh.w	fp, [ip, #4]
 800d9ac:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d9b0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800d9b4:	f8ac b006 	strh.w	fp, [ip, #6]
 800d9b8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d9bc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d9c0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800d9c4:	ea5b 0707 	orrs.w	r7, fp, r7
 800d9c8:	d011      	beq.n	800d9ee <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800d9ca:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800d9ce:	f1bb 0f00 	cmp.w	fp, #0
 800d9d2:	db0c      	blt.n	800d9ee <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800d9d4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800d9d6:	45bb      	cmp	fp, r7
 800d9d8:	da09      	bge.n	800d9ee <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800d9da:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800d9de:	45bb      	cmp	fp, r7
 800d9e0:	bf3c      	itt	cc
 800d9e2:	f10c 0708 	addcc.w	r7, ip, #8
 800d9e6:	6107      	strcc	r7, [r0, #16]
 800d9e8:	f10b 0701 	add.w	r7, fp, #1
 800d9ec:	6087      	str	r7, [r0, #8]
 800d9ee:	6907      	ldr	r7, [r0, #16]
 800d9f0:	45b6      	cmp	lr, r6
 800d9f2:	803e      	strh	r6, [r7, #0]
 800d9f4:	807a      	strh	r2, [r7, #2]
 800d9f6:	f8a7 a004 	strh.w	sl, [r7, #4]
 800d9fa:	f8a7 a006 	strh.w	sl, [r7, #6]
 800d9fe:	d1c6      	bne.n	800d98e <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
 800da00:	9a04      	ldr	r2, [sp, #16]
 800da02:	1ad3      	subs	r3, r2, r3
 800da04:	6902      	ldr	r2, [r0, #16]
 800da06:	8891      	ldrh	r1, [r2, #4]
 800da08:	88d6      	ldrh	r6, [r2, #6]
 800da0a:	4419      	add	r1, r3
 800da0c:	8091      	strh	r1, [r2, #4]
 800da0e:	9902      	ldr	r1, [sp, #8]
 800da10:	f101 0c20 	add.w	ip, r1, #32
 800da14:	9901      	ldr	r1, [sp, #4]
 800da16:	ebac 0c01 	sub.w	ip, ip, r1
 800da1a:	fb03 630c 	mla	r3, r3, ip, r6
 800da1e:	80d3      	strh	r3, [r2, #6]
 800da20:	e750      	b.n	800d8c4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800da22:	9d05      	ldr	r5, [sp, #20]
 800da24:	1aa2      	subs	r2, r4, r2
 800da26:	eba5 0501 	sub.w	r5, r5, r1
 800da2a:	9202      	str	r2, [sp, #8]
 800da2c:	9508      	str	r5, [sp, #32]
 800da2e:	f140 8128 	bpl.w	800dc82 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
 800da32:	9a03      	ldr	r2, [sp, #12]
 800da34:	2a00      	cmp	r2, #0
 800da36:	f6ff af45 	blt.w	800d8c4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800da3a:	9a02      	ldr	r2, [sp, #8]
 800da3c:	f04f 34ff 	mov.w	r4, #4294967295
 800da40:	4252      	negs	r2, r2
 800da42:	940b      	str	r4, [sp, #44]	@ 0x2c
 800da44:	2400      	movs	r4, #0
 800da46:	9202      	str	r2, [sp, #8]
 800da48:	9a06      	ldr	r2, [sp, #24]
 800da4a:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800da4e:	9206      	str	r2, [sp, #24]
 800da50:	462a      	mov	r2, r5
 800da52:	435a      	muls	r2, r3
 800da54:	9401      	str	r4, [sp, #4]
 800da56:	9c02      	ldr	r4, [sp, #8]
 800da58:	9d02      	ldr	r5, [sp, #8]
 800da5a:	fb92 f4f4 	sdiv	r4, r2, r4
 800da5e:	fb05 2214 	mls	r2, r5, r4, r2
 800da62:	2a00      	cmp	r2, #0
 800da64:	9207      	str	r2, [sp, #28]
 800da66:	bfbc      	itt	lt
 800da68:	1952      	addlt	r2, r2, r5
 800da6a:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800da6e:	6905      	ldr	r5, [r0, #16]
 800da70:	bfb8      	it	lt
 800da72:	9207      	strlt	r2, [sp, #28]
 800da74:	eb04 0901 	add.w	r9, r4, r1
 800da78:	9a01      	ldr	r2, [sp, #4]
 800da7a:	ea4f 1669 	mov.w	r6, r9, asr #5
 800da7e:	429a      	cmp	r2, r3
 800da80:	f040 8111 	bne.w	800dca6 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
 800da84:	f9b5 3000 	ldrsh.w	r3, [r5]
 800da88:	429e      	cmp	r6, r3
 800da8a:	d104      	bne.n	800da96 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
 800da8c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800da90:	9a03      	ldr	r2, [sp, #12]
 800da92:	429a      	cmp	r2, r3
 800da94:	d01b      	beq.n	800dace <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800da96:	88ea      	ldrh	r2, [r5, #6]
 800da98:	88ab      	ldrh	r3, [r5, #4]
 800da9a:	4313      	orrs	r3, r2
 800da9c:	d010      	beq.n	800dac0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800da9e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800daa2:	2a00      	cmp	r2, #0
 800daa4:	db0c      	blt.n	800dac0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800daa6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800daa8:	429a      	cmp	r2, r3
 800daaa:	da09      	bge.n	800dac0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800daac:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800dab0:	429a      	cmp	r2, r3
 800dab2:	f102 0201 	add.w	r2, r2, #1
 800dab6:	bf38      	it	cc
 800dab8:	3508      	addcc	r5, #8
 800daba:	6082      	str	r2, [r0, #8]
 800dabc:	bf38      	it	cc
 800dabe:	6105      	strcc	r5, [r0, #16]
 800dac0:	6903      	ldr	r3, [r0, #16]
 800dac2:	9a03      	ldr	r2, [sp, #12]
 800dac4:	801e      	strh	r6, [r3, #0]
 800dac6:	805a      	strh	r2, [r3, #2]
 800dac8:	2200      	movs	r2, #0
 800daca:	809a      	strh	r2, [r3, #4]
 800dacc:	80da      	strh	r2, [r3, #6]
 800dace:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800dad0:	9a03      	ldr	r2, [sp, #12]
 800dad2:	6901      	ldr	r1, [r0, #16]
 800dad4:	441a      	add	r2, r3
 800dad6:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dada:	42b3      	cmp	r3, r6
 800dadc:	d103      	bne.n	800dae6 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
 800dade:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800dae2:	429a      	cmp	r2, r3
 800dae4:	d01a      	beq.n	800db1c <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
 800dae6:	88cc      	ldrh	r4, [r1, #6]
 800dae8:	888b      	ldrh	r3, [r1, #4]
 800daea:	4323      	orrs	r3, r4
 800daec:	d010      	beq.n	800db10 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800daee:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800daf2:	2c00      	cmp	r4, #0
 800daf4:	db0c      	blt.n	800db10 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800daf6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800daf8:	429c      	cmp	r4, r3
 800dafa:	da09      	bge.n	800db10 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800dafc:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800db00:	429c      	cmp	r4, r3
 800db02:	f104 0401 	add.w	r4, r4, #1
 800db06:	bf38      	it	cc
 800db08:	3108      	addcc	r1, #8
 800db0a:	6084      	str	r4, [r0, #8]
 800db0c:	bf38      	it	cc
 800db0e:	6101      	strcc	r1, [r0, #16]
 800db10:	6903      	ldr	r3, [r0, #16]
 800db12:	2100      	movs	r1, #0
 800db14:	801e      	strh	r6, [r3, #0]
 800db16:	805a      	strh	r2, [r3, #2]
 800db18:	8099      	strh	r1, [r3, #4]
 800db1a:	80d9      	strh	r1, [r3, #6]
 800db1c:	9b06      	ldr	r3, [sp, #24]
 800db1e:	4293      	cmp	r3, r2
 800db20:	f000 8082 	beq.w	800dc28 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
 800db24:	9b08      	ldr	r3, [sp, #32]
 800db26:	9902      	ldr	r1, [sp, #8]
 800db28:	015b      	lsls	r3, r3, #5
 800db2a:	9c02      	ldr	r4, [sp, #8]
 800db2c:	fb93 f1f1 	sdiv	r1, r3, r1
 800db30:	fb04 3311 	mls	r3, r4, r1, r3
 800db34:	9103      	str	r1, [sp, #12]
 800db36:	2b00      	cmp	r3, #0
 800db38:	9308      	str	r3, [sp, #32]
 800db3a:	da04      	bge.n	800db46 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
 800db3c:	1e4b      	subs	r3, r1, #1
 800db3e:	9303      	str	r3, [sp, #12]
 800db40:	9b08      	ldr	r3, [sp, #32]
 800db42:	4423      	add	r3, r4
 800db44:	9308      	str	r3, [sp, #32]
 800db46:	9b07      	ldr	r3, [sp, #28]
 800db48:	464f      	mov	r7, r9
 800db4a:	9902      	ldr	r1, [sp, #8]
 800db4c:	2600      	movs	r6, #0
 800db4e:	1a5b      	subs	r3, r3, r1
 800db50:	9307      	str	r3, [sp, #28]
 800db52:	9b01      	ldr	r3, [sp, #4]
 800db54:	f1c3 0320 	rsb	r3, r3, #32
 800db58:	930e      	str	r3, [sp, #56]	@ 0x38
 800db5a:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800db5c:	9b01      	ldr	r3, [sp, #4]
 800db5e:	1a5b      	subs	r3, r3, r1
 800db60:	930a      	str	r3, [sp, #40]	@ 0x28
 800db62:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800db66:	185b      	adds	r3, r3, r1
 800db68:	bf58      	it	pl
 800db6a:	9902      	ldrpl	r1, [sp, #8]
 800db6c:	9307      	str	r3, [sp, #28]
 800db6e:	bf57      	itett	pl
 800db70:	1a5b      	subpl	r3, r3, r1
 800db72:	9903      	ldrmi	r1, [sp, #12]
 800db74:	9307      	strpl	r3, [sp, #28]
 800db76:	9b03      	ldrpl	r3, [sp, #12]
 800db78:	bf58      	it	pl
 800db7a:	1c59      	addpl	r1, r3, #1
 800db7c:	2a00      	cmp	r2, #0
 800db7e:	4489      	add	r9, r1
 800db80:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800db84:	db2e      	blt.n	800dbe4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800db86:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800db88:	4293      	cmp	r3, r2
 800db8a:	dd2b      	ble.n	800dbe4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800db8c:	9c01      	ldr	r4, [sp, #4]
 800db8e:	6905      	ldr	r5, [r0, #16]
 800db90:	46a0      	mov	r8, r4
 800db92:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800db94:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800db98:	45a0      	cmp	r8, r4
 800db9a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800db9e:	f040 814c 	bne.w	800de3a <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
 800dba2:	f9b5 1000 	ldrsh.w	r1, [r5]
 800dba6:	4551      	cmp	r1, sl
 800dba8:	d103      	bne.n	800dbb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
 800dbaa:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800dbae:	4291      	cmp	r1, r2
 800dbb0:	d018      	beq.n	800dbe4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800dbb2:	ea5c 010e 	orrs.w	r1, ip, lr
 800dbb6:	d00f      	beq.n	800dbd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800dbb8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800dbbc:	2900      	cmp	r1, #0
 800dbbe:	db0b      	blt.n	800dbd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800dbc0:	428b      	cmp	r3, r1
 800dbc2:	dd09      	ble.n	800dbd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800dbc4:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800dbc8:	4299      	cmp	r1, r3
 800dbca:	f101 0101 	add.w	r1, r1, #1
 800dbce:	bf38      	it	cc
 800dbd0:	3508      	addcc	r5, #8
 800dbd2:	6081      	str	r1, [r0, #8]
 800dbd4:	bf38      	it	cc
 800dbd6:	6105      	strcc	r5, [r0, #16]
 800dbd8:	6903      	ldr	r3, [r0, #16]
 800dbda:	f8a3 a000 	strh.w	sl, [r3]
 800dbde:	805a      	strh	r2, [r3, #2]
 800dbe0:	809e      	strh	r6, [r3, #4]
 800dbe2:	80de      	strh	r6, [r3, #6]
 800dbe4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800dbe6:	6901      	ldr	r1, [r0, #16]
 800dbe8:	441a      	add	r2, r3
 800dbea:	88cc      	ldrh	r4, [r1, #6]
 800dbec:	888b      	ldrh	r3, [r1, #4]
 800dbee:	4323      	orrs	r3, r4
 800dbf0:	d010      	beq.n	800dc14 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800dbf2:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800dbf6:	2c00      	cmp	r4, #0
 800dbf8:	db0c      	blt.n	800dc14 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800dbfa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800dbfc:	429c      	cmp	r4, r3
 800dbfe:	da09      	bge.n	800dc14 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800dc00:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800dc04:	429c      	cmp	r4, r3
 800dc06:	f104 0401 	add.w	r4, r4, #1
 800dc0a:	bf38      	it	cc
 800dc0c:	3108      	addcc	r1, #8
 800dc0e:	6084      	str	r4, [r0, #8]
 800dc10:	bf38      	it	cc
 800dc12:	6101      	strcc	r1, [r0, #16]
 800dc14:	6903      	ldr	r3, [r0, #16]
 800dc16:	464f      	mov	r7, r9
 800dc18:	f8a3 a000 	strh.w	sl, [r3]
 800dc1c:	805a      	strh	r2, [r3, #2]
 800dc1e:	809e      	strh	r6, [r3, #4]
 800dc20:	80de      	strh	r6, [r3, #6]
 800dc22:	9b06      	ldr	r3, [sp, #24]
 800dc24:	4293      	cmp	r3, r2
 800dc26:	d19c      	bne.n	800db62 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
 800dc28:	9b01      	ldr	r3, [sp, #4]
 800dc2a:	6907      	ldr	r7, [r0, #16]
 800dc2c:	f1c3 0620 	rsb	r6, r3, #32
 800dc30:	9b05      	ldr	r3, [sp, #20]
 800dc32:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800dc36:	9b04      	ldr	r3, [sp, #16]
 800dc38:	429e      	cmp	r6, r3
 800dc3a:	f040 81c7 	bne.w	800dfcc <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
 800dc3e:	f9b7 3000 	ldrsh.w	r3, [r7]
 800dc42:	459e      	cmp	lr, r3
 800dc44:	d104      	bne.n	800dc50 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
 800dc46:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dc4a:	429a      	cmp	r2, r3
 800dc4c:	f43f ae3a 	beq.w	800d8c4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800dc50:	88f9      	ldrh	r1, [r7, #6]
 800dc52:	88bb      	ldrh	r3, [r7, #4]
 800dc54:	430b      	orrs	r3, r1
 800dc56:	d010      	beq.n	800dc7a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800dc58:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dc5c:	2b00      	cmp	r3, #0
 800dc5e:	db0c      	blt.n	800dc7a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800dc60:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800dc62:	428b      	cmp	r3, r1
 800dc64:	da09      	bge.n	800dc7a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800dc66:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800dc6a:	428b      	cmp	r3, r1
 800dc6c:	f103 0301 	add.w	r3, r3, #1
 800dc70:	bf38      	it	cc
 800dc72:	3708      	addcc	r7, #8
 800dc74:	6083      	str	r3, [r0, #8]
 800dc76:	bf38      	it	cc
 800dc78:	6107      	strcc	r7, [r0, #16]
 800dc7a:	6903      	ldr	r3, [r0, #16]
 800dc7c:	f8a3 e000 	strh.w	lr, [r3]
 800dc80:	e603      	b.n	800d88a <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
 800dc82:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800dc84:	9c03      	ldr	r4, [sp, #12]
 800dc86:	42a2      	cmp	r2, r4
 800dc88:	f6ff ae1c 	blt.w	800d8c4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800dc8c:	9c06      	ldr	r4, [sp, #24]
 800dc8e:	42a2      	cmp	r2, r4
 800dc90:	9c08      	ldr	r4, [sp, #32]
 800dc92:	bfbc      	itt	lt
 800dc94:	3201      	addlt	r2, #1
 800dc96:	9206      	strlt	r2, [sp, #24]
 800dc98:	f1c3 0220 	rsb	r2, r3, #32
 800dc9c:	4362      	muls	r2, r4
 800dc9e:	2401      	movs	r4, #1
 800dca0:	940b      	str	r4, [sp, #44]	@ 0x2c
 800dca2:	2420      	movs	r4, #32
 800dca4:	e6d6      	b.n	800da54 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 800dca6:	ea4f 1861 	mov.w	r8, r1, asr #5
 800dcaa:	f009 021f 	and.w	r2, r9, #31
 800dcae:	f001 011f 	and.w	r1, r1, #31
 800dcb2:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800dcb6:	920c      	str	r2, [sp, #48]	@ 0x30
 800dcb8:	45b0      	cmp	r8, r6
 800dcba:	9a01      	ldr	r2, [sp, #4]
 800dcbc:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800dcc0:	eba2 0203 	sub.w	r2, r2, r3
 800dcc4:	d108      	bne.n	800dcd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
 800dcc6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800dcc8:	4496      	add	lr, r2
 800dcca:	4419      	add	r1, r3
 800dccc:	f8a5 e004 	strh.w	lr, [r5, #4]
 800dcd0:	fb02 a101 	mla	r1, r2, r1, sl
 800dcd4:	80e9      	strh	r1, [r5, #6]
 800dcd6:	e6fa      	b.n	800dace <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800dcd8:	2c00      	cmp	r4, #0
 800dcda:	f2c0 80a7 	blt.w	800de2c <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
 800dcde:	2701      	movs	r7, #1
 800dce0:	f1c1 0c20 	rsb	ip, r1, #32
 800dce4:	970a      	str	r7, [sp, #40]	@ 0x28
 800dce6:	2720      	movs	r7, #32
 800dce8:	fb02 f20c 	mul.w	r2, r2, ip
 800dcec:	9709      	str	r7, [sp, #36]	@ 0x24
 800dcee:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800dcf0:	fb92 fcf4 	sdiv	ip, r2, r4
 800dcf4:	fb04 221c 	mls	r2, r4, ip, r2
 800dcf8:	4439      	add	r1, r7
 800dcfa:	2a00      	cmp	r2, #0
 800dcfc:	bfbc      	itt	lt
 800dcfe:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800dd02:	1912      	addlt	r2, r2, r4
 800dd04:	fb0c a101 	mla	r1, ip, r1, sl
 800dd08:	44e6      	add	lr, ip
 800dd0a:	80e9      	strh	r1, [r5, #6]
 800dd0c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800dd0e:	f8a5 e004 	strh.w	lr, [r5, #4]
 800dd12:	eb08 0501 	add.w	r5, r8, r1
 800dd16:	6901      	ldr	r1, [r0, #16]
 800dd18:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800dd1c:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800dd20:	ea58 070e 	orrs.w	r7, r8, lr
 800dd24:	d010      	beq.n	800dd48 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800dd26:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800dd2a:	f1be 0f00 	cmp.w	lr, #0
 800dd2e:	db0b      	blt.n	800dd48 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800dd30:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800dd32:	45be      	cmp	lr, r7
 800dd34:	da08      	bge.n	800dd48 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800dd36:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800dd3a:	45be      	cmp	lr, r7
 800dd3c:	bf3c      	itt	cc
 800dd3e:	3108      	addcc	r1, #8
 800dd40:	6101      	strcc	r1, [r0, #16]
 800dd42:	f10e 0101 	add.w	r1, lr, #1
 800dd46:	6081      	str	r1, [r0, #8]
 800dd48:	6901      	ldr	r1, [r0, #16]
 800dd4a:	f04f 0e00 	mov.w	lr, #0
 800dd4e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800dd52:	42ae      	cmp	r6, r5
 800dd54:	800d      	strh	r5, [r1, #0]
 800dd56:	4463      	add	r3, ip
 800dd58:	f8a1 8002 	strh.w	r8, [r1, #2]
 800dd5c:	f8a1 e004 	strh.w	lr, [r1, #4]
 800dd60:	f8a1 e006 	strh.w	lr, [r1, #6]
 800dd64:	d053      	beq.n	800de0e <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
 800dd66:	9901      	ldr	r1, [sp, #4]
 800dd68:	1b12      	subs	r2, r2, r4
 800dd6a:	1ac9      	subs	r1, r1, r3
 800dd6c:	4461      	add	r1, ip
 800dd6e:	0149      	lsls	r1, r1, #5
 800dd70:	fb91 fef4 	sdiv	lr, r1, r4
 800dd74:	fb04 111e 	mls	r1, r4, lr, r1
 800dd78:	2900      	cmp	r1, #0
 800dd7a:	bfbc      	itt	lt
 800dd7c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800dd80:	1909      	addlt	r1, r1, r4
 800dd82:	f10e 0701 	add.w	r7, lr, #1
 800dd86:	970d      	str	r7, [sp, #52]	@ 0x34
 800dd88:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800dd8c:	1852      	adds	r2, r2, r1
 800dd8e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800dd90:	bf54      	ite	pl
 800dd92:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800dd96:	46f4      	movmi	ip, lr
 800dd98:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800dd9c:	bf58      	it	pl
 800dd9e:	1b12      	subpl	r2, r2, r4
 800dda0:	4463      	add	r3, ip
 800dda2:	443d      	add	r5, r7
 800dda4:	44e3      	add	fp, ip
 800dda6:	f8aa b004 	strh.w	fp, [sl, #4]
 800ddaa:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800ddae:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800ddb2:	f8aa b006 	strh.w	fp, [sl, #6]
 800ddb6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ddba:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ddbe:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800ddc2:	ea5b 070a 	orrs.w	r7, fp, sl
 800ddc6:	d014      	beq.n	800ddf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800ddc8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800ddcc:	f1ba 0f00 	cmp.w	sl, #0
 800ddd0:	db0f      	blt.n	800ddf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800ddd2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ddd4:	45ba      	cmp	sl, r7
 800ddd6:	da0c      	bge.n	800ddf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800ddd8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800dddc:	45ba      	cmp	sl, r7
 800ddde:	f10a 0a01 	add.w	sl, sl, #1
 800dde2:	bf38      	it	cc
 800dde4:	f10c 0c08 	addcc.w	ip, ip, #8
 800dde8:	f8c0 a008 	str.w	sl, [r0, #8]
 800ddec:	bf38      	it	cc
 800ddee:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800ddf2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ddf6:	f04f 0700 	mov.w	r7, #0
 800ddfa:	42ae      	cmp	r6, r5
 800ddfc:	f8ac 5000 	strh.w	r5, [ip]
 800de00:	f8ac 8002 	strh.w	r8, [ip, #2]
 800de04:	f8ac 7004 	strh.w	r7, [ip, #4]
 800de08:	f8ac 7006 	strh.w	r7, [ip, #6]
 800de0c:	d1bc      	bne.n	800dd88 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
 800de0e:	6904      	ldr	r4, [r0, #16]
 800de10:	9a01      	ldr	r2, [sp, #4]
 800de12:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800de14:	1ad3      	subs	r3, r2, r3
 800de16:	88a2      	ldrh	r2, [r4, #4]
 800de18:	3120      	adds	r1, #32
 800de1a:	441a      	add	r2, r3
 800de1c:	80a2      	strh	r2, [r4, #4]
 800de1e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800de20:	1a89      	subs	r1, r1, r2
 800de22:	88e2      	ldrh	r2, [r4, #6]
 800de24:	fb03 2301 	mla	r3, r3, r1, r2
 800de28:	80e3      	strh	r3, [r4, #6]
 800de2a:	e650      	b.n	800dace <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800de2c:	f04f 37ff 	mov.w	r7, #4294967295
 800de30:	434a      	muls	r2, r1
 800de32:	4264      	negs	r4, r4
 800de34:	970a      	str	r7, [sp, #40]	@ 0x28
 800de36:	2700      	movs	r7, #0
 800de38:	e758      	b.n	800dcec <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
 800de3a:	ea4f 1867 	mov.w	r8, r7, asr #5
 800de3e:	f009 031f 	and.w	r3, r9, #31
 800de42:	f007 071f 	and.w	r7, r7, #31
 800de46:	fa1f fc8c 	uxth.w	ip, ip
 800de4a:	45d0      	cmp	r8, sl
 800de4c:	930f      	str	r3, [sp, #60]	@ 0x3c
 800de4e:	fa1f fe8e 	uxth.w	lr, lr
 800de52:	d10a      	bne.n	800de6a <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
 800de54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800de56:	449c      	add	ip, r3
 800de58:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800de5a:	441f      	add	r7, r3
 800de5c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800de5e:	f8a5 c004 	strh.w	ip, [r5, #4]
 800de62:	fb03 e707 	mla	r7, r3, r7, lr
 800de66:	80ef      	strh	r7, [r5, #6]
 800de68:	e6bc      	b.n	800dbe4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800de6a:	2900      	cmp	r1, #0
 800de6c:	f2c0 80a6 	blt.w	800dfbc <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
 800de70:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800de72:	f1c7 0320 	rsb	r3, r7, #32
 800de76:	4363      	muls	r3, r4
 800de78:	2401      	movs	r4, #1
 800de7a:	940d      	str	r4, [sp, #52]	@ 0x34
 800de7c:	2420      	movs	r4, #32
 800de7e:	940c      	str	r4, [sp, #48]	@ 0x30
 800de80:	fb93 f4f1 	sdiv	r4, r3, r1
 800de84:	fb01 3b14 	mls	fp, r1, r4, r3
 800de88:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800de8a:	f1bb 0f00 	cmp.w	fp, #0
 800de8e:	441f      	add	r7, r3
 800de90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800de92:	bfbc      	itt	lt
 800de94:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800de98:	448b      	addlt	fp, r1
 800de9a:	fb04 e707 	mla	r7, r4, r7, lr
 800de9e:	44a4      	add	ip, r4
 800dea0:	80ef      	strh	r7, [r5, #6]
 800dea2:	f8a5 c004 	strh.w	ip, [r5, #4]
 800dea6:	eb08 0503 	add.w	r5, r8, r3
 800deaa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800deae:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800deb2:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800deb6:	ea5e 0307 	orrs.w	r3, lr, r7
 800deba:	d011      	beq.n	800dee0 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800debc:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800dec0:	f1be 0f00 	cmp.w	lr, #0
 800dec4:	db0c      	blt.n	800dee0 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800dec6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800dec8:	45be      	cmp	lr, r7
 800deca:	da09      	bge.n	800dee0 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800decc:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800ded0:	45be      	cmp	lr, r7
 800ded2:	bf3c      	itt	cc
 800ded4:	f10c 0708 	addcc.w	r7, ip, #8
 800ded8:	6107      	strcc	r7, [r0, #16]
 800deda:	f10e 0701 	add.w	r7, lr, #1
 800dede:	6087      	str	r7, [r0, #8]
 800dee0:	6907      	ldr	r7, [r0, #16]
 800dee2:	b213      	sxth	r3, r2
 800dee4:	4555      	cmp	r5, sl
 800dee6:	9310      	str	r3, [sp, #64]	@ 0x40
 800dee8:	807b      	strh	r3, [r7, #2]
 800deea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800deec:	803d      	strh	r5, [r7, #0]
 800deee:	80be      	strh	r6, [r7, #4]
 800def0:	eb04 0c03 	add.w	ip, r4, r3
 800def4:	80fe      	strh	r6, [r7, #6]
 800def6:	d050      	beq.n	800df9a <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
 800def8:	9b01      	ldr	r3, [sp, #4]
 800defa:	eba3 070c 	sub.w	r7, r3, ip
 800defe:	ebab 0301 	sub.w	r3, fp, r1
 800df02:	443c      	add	r4, r7
 800df04:	9309      	str	r3, [sp, #36]	@ 0x24
 800df06:	0164      	lsls	r4, r4, #5
 800df08:	fb94 f8f1 	sdiv	r8, r4, r1
 800df0c:	fb01 4418 	mls	r4, r1, r8, r4
 800df10:	2c00      	cmp	r4, #0
 800df12:	bfbc      	itt	lt
 800df14:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800df18:	1864      	addlt	r4, r4, r1
 800df1a:	f108 0701 	add.w	r7, r8, #1
 800df1e:	9711      	str	r7, [sp, #68]	@ 0x44
 800df20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800df22:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800df26:	191b      	adds	r3, r3, r4
 800df28:	f8be b004 	ldrh.w	fp, [lr, #4]
 800df2c:	bf54      	ite	pl
 800df2e:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800df30:	4647      	movmi	r7, r8
 800df32:	9309      	str	r3, [sp, #36]	@ 0x24
 800df34:	bf58      	it	pl
 800df36:	1a5b      	subpl	r3, r3, r1
 800df38:	44bb      	add	fp, r7
 800df3a:	44bc      	add	ip, r7
 800df3c:	bf58      	it	pl
 800df3e:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800df40:	f8ae b004 	strh.w	fp, [lr, #4]
 800df44:	f8be b006 	ldrh.w	fp, [lr, #6]
 800df48:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800df4c:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800df4e:	f8ae b006 	strh.w	fp, [lr, #6]
 800df52:	443d      	add	r5, r7
 800df54:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800df58:	f8be b006 	ldrh.w	fp, [lr, #6]
 800df5c:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800df60:	ea5b 0307 	orrs.w	r3, fp, r7
 800df64:	d011      	beq.n	800df8a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800df66:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800df6a:	f1bb 0f00 	cmp.w	fp, #0
 800df6e:	db0c      	blt.n	800df8a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800df70:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800df72:	45bb      	cmp	fp, r7
 800df74:	da09      	bge.n	800df8a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800df76:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800df7a:	45bb      	cmp	fp, r7
 800df7c:	bf3c      	itt	cc
 800df7e:	f10e 0708 	addcc.w	r7, lr, #8
 800df82:	6107      	strcc	r7, [r0, #16]
 800df84:	f10b 0701 	add.w	r7, fp, #1
 800df88:	6087      	str	r7, [r0, #8]
 800df8a:	6907      	ldr	r7, [r0, #16]
 800df8c:	4555      	cmp	r5, sl
 800df8e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800df90:	803d      	strh	r5, [r7, #0]
 800df92:	807b      	strh	r3, [r7, #2]
 800df94:	80be      	strh	r6, [r7, #4]
 800df96:	80fe      	strh	r6, [r7, #6]
 800df98:	d1c2      	bne.n	800df20 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
 800df9a:	9b01      	ldr	r3, [sp, #4]
 800df9c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800df9e:	eba3 0c0c 	sub.w	ip, r3, ip
 800dfa2:	6903      	ldr	r3, [r0, #16]
 800dfa4:	3720      	adds	r7, #32
 800dfa6:	8899      	ldrh	r1, [r3, #4]
 800dfa8:	4461      	add	r1, ip
 800dfaa:	8099      	strh	r1, [r3, #4]
 800dfac:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800dfae:	1a7f      	subs	r7, r7, r1
 800dfb0:	88d9      	ldrh	r1, [r3, #6]
 800dfb2:	fb0c 1c07 	mla	ip, ip, r7, r1
 800dfb6:	f8a3 c006 	strh.w	ip, [r3, #6]
 800dfba:	e613      	b.n	800dbe4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800dfbc:	f04f 34ff 	mov.w	r4, #4294967295
 800dfc0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800dfc2:	4249      	negs	r1, r1
 800dfc4:	940d      	str	r4, [sp, #52]	@ 0x34
 800dfc6:	2400      	movs	r4, #0
 800dfc8:	437b      	muls	r3, r7
 800dfca:	e758      	b.n	800de7e <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
 800dfcc:	9905      	ldr	r1, [sp, #20]
 800dfce:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800dfd2:	f009 0c1f 	and.w	ip, r9, #31
 800dfd6:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800dfda:	f001 011f 	and.w	r1, r1, #31
 800dfde:	45f3      	cmp	fp, lr
 800dfe0:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800dfe4:	9102      	str	r1, [sp, #8]
 800dfe6:	9904      	ldr	r1, [sp, #16]
 800dfe8:	eba1 0406 	sub.w	r4, r1, r6
 800dfec:	d108      	bne.n	800e000 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
 800dfee:	9b02      	ldr	r3, [sp, #8]
 800dff0:	44a0      	add	r8, r4
 800dff2:	449c      	add	ip, r3
 800dff4:	f8a7 8004 	strh.w	r8, [r7, #4]
 800dff8:	fb04 a40c 	mla	r4, r4, ip, sl
 800dffc:	80fc      	strh	r4, [r7, #6]
 800dffe:	e461      	b.n	800d8c4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e000:	9905      	ldr	r1, [sp, #20]
 800e002:	ebb1 0109 	subs.w	r1, r1, r9
 800e006:	bf51      	iteee	pl
 800e008:	f1cc 0520 	rsbpl	r5, ip, #32
 800e00c:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e010:	4249      	negmi	r1, r1
 800e012:	2500      	movmi	r5, #0
 800e014:	bf5d      	ittte	pl
 800e016:	436c      	mulpl	r4, r5
 800e018:	2520      	movpl	r5, #32
 800e01a:	f04f 0901 	movpl.w	r9, #1
 800e01e:	f04f 39ff 	movmi.w	r9, #4294967295
 800e022:	9501      	str	r5, [sp, #4]
 800e024:	9b01      	ldr	r3, [sp, #4]
 800e026:	fb94 f5f1 	sdiv	r5, r4, r1
 800e02a:	fb01 4415 	mls	r4, r1, r5, r4
 800e02e:	449c      	add	ip, r3
 800e030:	eb0b 0309 	add.w	r3, fp, r9
 800e034:	2c00      	cmp	r4, #0
 800e036:	bfbc      	itt	lt
 800e038:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e03c:	1864      	addlt	r4, r4, r1
 800e03e:	44a8      	add	r8, r5
 800e040:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e044:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e048:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e04c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e050:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e054:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e058:	ea58 0707 	orrs.w	r7, r8, r7
 800e05c:	d011      	beq.n	800e082 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800e05e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e062:	f1b8 0f00 	cmp.w	r8, #0
 800e066:	db0c      	blt.n	800e082 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800e068:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e06a:	45b8      	cmp	r8, r7
 800e06c:	da09      	bge.n	800e082 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800e06e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800e072:	45b8      	cmp	r8, r7
 800e074:	bf3c      	itt	cc
 800e076:	f10c 0708 	addcc.w	r7, ip, #8
 800e07a:	6107      	strcc	r7, [r0, #16]
 800e07c:	f108 0701 	add.w	r7, r8, #1
 800e080:	6087      	str	r7, [r0, #8]
 800e082:	6907      	ldr	r7, [r0, #16]
 800e084:	f04f 0c00 	mov.w	ip, #0
 800e088:	b212      	sxth	r2, r2
 800e08a:	459e      	cmp	lr, r3
 800e08c:	803b      	strh	r3, [r7, #0]
 800e08e:	442e      	add	r6, r5
 800e090:	807a      	strh	r2, [r7, #2]
 800e092:	f8a7 c004 	strh.w	ip, [r7, #4]
 800e096:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e09a:	d04b      	beq.n	800e134 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
 800e09c:	9f04      	ldr	r7, [sp, #16]
 800e09e:	1a64      	subs	r4, r4, r1
 800e0a0:	f04f 0a00 	mov.w	sl, #0
 800e0a4:	1bbf      	subs	r7, r7, r6
 800e0a6:	443d      	add	r5, r7
 800e0a8:	016d      	lsls	r5, r5, #5
 800e0aa:	fb95 f8f1 	sdiv	r8, r5, r1
 800e0ae:	fb01 5518 	mls	r5, r1, r8, r5
 800e0b2:	4565      	cmp	r5, ip
 800e0b4:	bfbc      	itt	lt
 800e0b6:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e0ba:	186d      	addlt	r5, r5, r1
 800e0bc:	f108 0701 	add.w	r7, r8, #1
 800e0c0:	9703      	str	r7, [sp, #12]
 800e0c2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e0c6:	1964      	adds	r4, r4, r5
 800e0c8:	444b      	add	r3, r9
 800e0ca:	bf54      	ite	pl
 800e0cc:	9f03      	ldrpl	r7, [sp, #12]
 800e0ce:	4647      	movmi	r7, r8
 800e0d0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e0d4:	bf58      	it	pl
 800e0d6:	1a64      	subpl	r4, r4, r1
 800e0d8:	443e      	add	r6, r7
 800e0da:	44bb      	add	fp, r7
 800e0dc:	f8ac b004 	strh.w	fp, [ip, #4]
 800e0e0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e0e4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e0e8:	f8ac b006 	strh.w	fp, [ip, #6]
 800e0ec:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e0f0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e0f4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e0f8:	ea5b 0707 	orrs.w	r7, fp, r7
 800e0fc:	d011      	beq.n	800e122 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800e0fe:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e102:	f1bb 0f00 	cmp.w	fp, #0
 800e106:	db0c      	blt.n	800e122 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800e108:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e10a:	45bb      	cmp	fp, r7
 800e10c:	da09      	bge.n	800e122 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800e10e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e112:	45bb      	cmp	fp, r7
 800e114:	bf3c      	itt	cc
 800e116:	f10c 0708 	addcc.w	r7, ip, #8
 800e11a:	6107      	strcc	r7, [r0, #16]
 800e11c:	f10b 0701 	add.w	r7, fp, #1
 800e120:	6087      	str	r7, [r0, #8]
 800e122:	6907      	ldr	r7, [r0, #16]
 800e124:	459e      	cmp	lr, r3
 800e126:	803b      	strh	r3, [r7, #0]
 800e128:	807a      	strh	r2, [r7, #2]
 800e12a:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e12e:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e132:	d1c6      	bne.n	800e0c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
 800e134:	9b04      	ldr	r3, [sp, #16]
 800e136:	1b9e      	subs	r6, r3, r6
 800e138:	6903      	ldr	r3, [r0, #16]
 800e13a:	889a      	ldrh	r2, [r3, #4]
 800e13c:	4432      	add	r2, r6
 800e13e:	809a      	strh	r2, [r3, #4]
 800e140:	9a02      	ldr	r2, [sp, #8]
 800e142:	f102 0c20 	add.w	ip, r2, #32
 800e146:	9a01      	ldr	r2, [sp, #4]
 800e148:	ebac 0c02 	sub.w	ip, ip, r2
 800e14c:	88da      	ldrh	r2, [r3, #6]
 800e14e:	fb06 260c 	mla	r6, r6, ip, r2
 800e152:	80de      	strh	r6, [r3, #6]
 800e154:	f7ff bbb6 	b.w	800d8c4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

0800e158 <_ZN8touchgfx7Outline6lineToEii>:
 800e158:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e15a:	079b      	lsls	r3, r3, #30
 800e15c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e15e:	460e      	mov	r6, r1
 800e160:	4615      	mov	r5, r2
 800e162:	d511      	bpl.n	800e188 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e164:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800e168:	ea86 0701 	eor.w	r7, r6, r1
 800e16c:	ea85 0302 	eor.w	r3, r5, r2
 800e170:	433b      	orrs	r3, r7
 800e172:	d009      	beq.n	800e188 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e174:	4633      	mov	r3, r6
 800e176:	9500      	str	r5, [sp, #0]
 800e178:	f7ff fb4c 	bl	800d814 <_ZN8touchgfx7Outline10renderLineEiiii>
 800e17c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e17e:	f043 0301 	orr.w	r3, r3, #1
 800e182:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800e186:	6243      	str	r3, [r0, #36]	@ 0x24
 800e188:	b003      	add	sp, #12
 800e18a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e18c <_ZN8touchgfx7Outline6moveToEii>:
 800e18c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e18e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e190:	4615      	mov	r5, r2
 800e192:	4604      	mov	r4, r0
 800e194:	460e      	mov	r6, r1
 800e196:	079a      	lsls	r2, r3, #30
 800e198:	d401      	bmi.n	800e19e <_ZN8touchgfx7Outline6moveToEii+0x12>
 800e19a:	f7ff fb07 	bl	800d7ac <_ZN8touchgfx7Outline5resetEv>
 800e19e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e1a0:	07db      	lsls	r3, r3, #31
 800e1a2:	d504      	bpl.n	800e1ae <_ZN8touchgfx7Outline6moveToEii+0x22>
 800e1a4:	4620      	mov	r0, r4
 800e1a6:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800e1aa:	f7ff ffd5 	bl	800e158 <_ZN8touchgfx7Outline6lineToEii>
 800e1ae:	6923      	ldr	r3, [r4, #16]
 800e1b0:	1170      	asrs	r0, r6, #5
 800e1b2:	1169      	asrs	r1, r5, #5
 800e1b4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e1b8:	4290      	cmp	r0, r2
 800e1ba:	d103      	bne.n	800e1c4 <_ZN8touchgfx7Outline6moveToEii+0x38>
 800e1bc:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e1c0:	4291      	cmp	r1, r2
 800e1c2:	d01a      	beq.n	800e1fa <_ZN8touchgfx7Outline6moveToEii+0x6e>
 800e1c4:	88df      	ldrh	r7, [r3, #6]
 800e1c6:	889a      	ldrh	r2, [r3, #4]
 800e1c8:	433a      	orrs	r2, r7
 800e1ca:	d010      	beq.n	800e1ee <_ZN8touchgfx7Outline6moveToEii+0x62>
 800e1cc:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e1d0:	2a00      	cmp	r2, #0
 800e1d2:	db0c      	blt.n	800e1ee <_ZN8touchgfx7Outline6moveToEii+0x62>
 800e1d4:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800e1d6:	42ba      	cmp	r2, r7
 800e1d8:	da09      	bge.n	800e1ee <_ZN8touchgfx7Outline6moveToEii+0x62>
 800e1da:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800e1de:	42ba      	cmp	r2, r7
 800e1e0:	f102 0201 	add.w	r2, r2, #1
 800e1e4:	bf38      	it	cc
 800e1e6:	3308      	addcc	r3, #8
 800e1e8:	60a2      	str	r2, [r4, #8]
 800e1ea:	bf38      	it	cc
 800e1ec:	6123      	strcc	r3, [r4, #16]
 800e1ee:	6923      	ldr	r3, [r4, #16]
 800e1f0:	2200      	movs	r2, #0
 800e1f2:	8018      	strh	r0, [r3, #0]
 800e1f4:	8059      	strh	r1, [r3, #2]
 800e1f6:	809a      	strh	r2, [r3, #4]
 800e1f8:	80da      	strh	r2, [r3, #6]
 800e1fa:	6166      	str	r6, [r4, #20]
 800e1fc:	6225      	str	r5, [r4, #32]
 800e1fe:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800e202:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e204 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800e204:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e208:	b0d0      	sub	sp, #320	@ 0x140
 800e20a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800e20e:	466c      	mov	r4, sp
 800e210:	4627      	mov	r7, r4
 800e212:	1a0d      	subs	r5, r1, r0
 800e214:	f100 0308 	add.w	r3, r0, #8
 800e218:	2d48      	cmp	r5, #72	@ 0x48
 800e21a:	f340 80d5 	ble.w	800e3c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e21e:	112d      	asrs	r5, r5, #4
 800e220:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e224:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e228:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800e22c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800e230:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e234:	6816      	ldr	r6, [r2, #0]
 800e236:	6006      	str	r6, [r0, #0]
 800e238:	6856      	ldr	r6, [r2, #4]
 800e23a:	6046      	str	r6, [r0, #4]
 800e23c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e240:	f8a2 8002 	strh.w	r8, [r2, #2]
 800e244:	f8a2 e004 	strh.w	lr, [r2, #4]
 800e248:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e24c:	f1a1 0208 	sub.w	r2, r1, #8
 800e250:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e254:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800e258:	4565      	cmp	r5, ip
 800e25a:	db06      	blt.n	800e26a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800e25c:	d119      	bne.n	800e292 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e25e:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800e262:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800e266:	42ae      	cmp	r6, r5
 800e268:	dd13      	ble.n	800e292 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e26a:	460e      	mov	r6, r1
 800e26c:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800e270:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800e274:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e278:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800e27c:	601d      	str	r5, [r3, #0]
 800e27e:	6875      	ldr	r5, [r6, #4]
 800e280:	605d      	str	r5, [r3, #4]
 800e282:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e286:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e28a:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e28e:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e292:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800e296:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800e29a:	42ae      	cmp	r6, r5
 800e29c:	db06      	blt.n	800e2ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800e29e:	d116      	bne.n	800e2ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e2a0:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e2a4:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800e2a8:	45ac      	cmp	ip, r5
 800e2aa:	da10      	bge.n	800e2ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e2ac:	681d      	ldr	r5, [r3, #0]
 800e2ae:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e2b2:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e2b6:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e2ba:	6005      	str	r5, [r0, #0]
 800e2bc:	685d      	ldr	r5, [r3, #4]
 800e2be:	f8a0 8008 	strh.w	r8, [r0, #8]
 800e2c2:	6045      	str	r5, [r0, #4]
 800e2c4:	8146      	strh	r6, [r0, #10]
 800e2c6:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800e2ca:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800e2ce:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e2d2:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e2d6:	4565      	cmp	r5, ip
 800e2d8:	db06      	blt.n	800e2e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800e2da:	d119      	bne.n	800e310 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e2dc:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800e2e0:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e2e4:	42ae      	cmp	r6, r5
 800e2e6:	da13      	bge.n	800e310 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e2e8:	460e      	mov	r6, r1
 800e2ea:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e2ee:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800e2f2:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e2f6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800e2fa:	6005      	str	r5, [r0, #0]
 800e2fc:	6875      	ldr	r5, [r6, #4]
 800e2fe:	6045      	str	r5, [r0, #4]
 800e300:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e304:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e308:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e30c:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e310:	3308      	adds	r3, #8
 800e312:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e316:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800e31a:	45e6      	cmp	lr, ip
 800e31c:	dbf8      	blt.n	800e310 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e31e:	d105      	bne.n	800e32c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e320:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e324:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e328:	42ae      	cmp	r6, r5
 800e32a:	dbf1      	blt.n	800e310 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e32c:	4615      	mov	r5, r2
 800e32e:	3a08      	subs	r2, #8
 800e330:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800e334:	45b4      	cmp	ip, r6
 800e336:	dbf9      	blt.n	800e32c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e338:	d105      	bne.n	800e346 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800e33a:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e33e:	f9b2 6000 	ldrsh.w	r6, [r2]
 800e342:	45b0      	cmp	r8, r6
 800e344:	dbf2      	blt.n	800e32c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e346:	4293      	cmp	r3, r2
 800e348:	f1a5 0608 	sub.w	r6, r5, #8
 800e34c:	d816      	bhi.n	800e37c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800e34e:	f8d6 c000 	ldr.w	ip, [r6]
 800e352:	f9b3 a000 	ldrsh.w	sl, [r3]
 800e356:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800e35a:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800e35e:	f8c3 c000 	str.w	ip, [r3]
 800e362:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800e366:	f8c3 c004 	str.w	ip, [r3, #4]
 800e36a:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e36e:	f825 ec06 	strh.w	lr, [r5, #-6]
 800e372:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e376:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e37a:	e7c9      	b.n	800e310 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e37c:	f8d6 e000 	ldr.w	lr, [r6]
 800e380:	f9b0 a000 	ldrsh.w	sl, [r0]
 800e384:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800e388:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800e38c:	f8c0 e000 	str.w	lr, [r0]
 800e390:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800e394:	1a16      	subs	r6, r2, r0
 800e396:	f8c0 e004 	str.w	lr, [r0, #4]
 800e39a:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e39e:	f825 cc06 	strh.w	ip, [r5, #-6]
 800e3a2:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e3a6:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e3aa:	1acd      	subs	r5, r1, r3
 800e3ac:	10ed      	asrs	r5, r5, #3
 800e3ae:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800e3b2:	bfb5      	itete	lt
 800e3b4:	e9c4 0200 	strdlt	r0, r2, [r4]
 800e3b8:	e9c4 3100 	strdge	r3, r1, [r4]
 800e3bc:	460a      	movlt	r2, r1
 800e3be:	4603      	movge	r3, r0
 800e3c0:	3408      	adds	r4, #8
 800e3c2:	4618      	mov	r0, r3
 800e3c4:	4611      	mov	r1, r2
 800e3c6:	e724      	b.n	800e212 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e3c8:	4299      	cmp	r1, r3
 800e3ca:	d927      	bls.n	800e41c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
 800e3cc:	f1a3 0210 	sub.w	r2, r3, #16
 800e3d0:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800e3d4:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800e3d8:	45ac      	cmp	ip, r5
 800e3da:	db06      	blt.n	800e3ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800e3dc:	d11c      	bne.n	800e418 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 800e3de:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800e3e2:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800e3e6:	42ae      	cmp	r6, r5
 800e3e8:	da16      	bge.n	800e418 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 800e3ea:	4615      	mov	r5, r2
 800e3ec:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800e3f0:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800e3f4:	3a08      	subs	r2, #8
 800e3f6:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800e3fa:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
 800e3fe:	6196      	str	r6, [r2, #24]
 800e400:	42a8      	cmp	r0, r5
 800e402:	686e      	ldr	r6, [r5, #4]
 800e404:	f8a2 9010 	strh.w	r9, [r2, #16]
 800e408:	61d6      	str	r6, [r2, #28]
 800e40a:	f8a2 c012 	strh.w	ip, [r2, #18]
 800e40e:	f8a2 8014 	strh.w	r8, [r2, #20]
 800e412:	f8a2 e016 	strh.w	lr, [r2, #22]
 800e416:	d1db      	bne.n	800e3d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800e418:	3308      	adds	r3, #8
 800e41a:	e7d5      	b.n	800e3c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e41c:	42bc      	cmp	r4, r7
 800e41e:	d903      	bls.n	800e428 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
 800e420:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800e424:	3c08      	subs	r4, #8
 800e426:	e6f4      	b.n	800e212 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e428:	b050      	add	sp, #320	@ 0x140
 800e42a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800e42e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800e42e:	b510      	push	{r4, lr}
 800e430:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e432:	4604      	mov	r4, r0
 800e434:	07da      	lsls	r2, r3, #31
 800e436:	d507      	bpl.n	800e448 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800e438:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800e43c:	f7ff fe8c 	bl	800e158 <_ZN8touchgfx7Outline6lineToEii>
 800e440:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e442:	f023 0301 	bic.w	r3, r3, #1
 800e446:	6243      	str	r3, [r0, #36]	@ 0x24
 800e448:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e44a:	079b      	lsls	r3, r3, #30
 800e44c:	d521      	bpl.n	800e492 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800e44e:	6923      	ldr	r3, [r4, #16]
 800e450:	88d9      	ldrh	r1, [r3, #6]
 800e452:	889a      	ldrh	r2, [r3, #4]
 800e454:	430a      	orrs	r2, r1
 800e456:	d010      	beq.n	800e47a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e458:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e45c:	2a00      	cmp	r2, #0
 800e45e:	db0c      	blt.n	800e47a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e460:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800e462:	428a      	cmp	r2, r1
 800e464:	da09      	bge.n	800e47a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e466:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e46a:	4291      	cmp	r1, r2
 800e46c:	f102 0201 	add.w	r2, r2, #1
 800e470:	bf88      	it	hi
 800e472:	3308      	addhi	r3, #8
 800e474:	60a2      	str	r2, [r4, #8]
 800e476:	bf88      	it	hi
 800e478:	6123      	strhi	r3, [r4, #16]
 800e47a:	68a1      	ldr	r1, [r4, #8]
 800e47c:	b129      	cbz	r1, 800e48a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e47e:	6863      	ldr	r3, [r4, #4]
 800e480:	4299      	cmp	r1, r3
 800e482:	d802      	bhi.n	800e48a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e484:	68e0      	ldr	r0, [r4, #12]
 800e486:	f7ff febd 	bl	800e204 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800e48a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e48c:	f023 0302 	bic.w	r3, r3, #2
 800e490:	6263      	str	r3, [r4, #36]	@ 0x24
 800e492:	68e0      	ldr	r0, [r4, #12]
 800e494:	bd10      	pop	{r4, pc}
	...

0800e498 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800e498:	4b02      	ldr	r3, [pc, #8]	@ (800e4a4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800e49a:	6018      	str	r0, [r3, #0]
 800e49c:	4b02      	ldr	r3, [pc, #8]	@ (800e4a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800e49e:	6019      	str	r1, [r3, #0]
 800e4a0:	4770      	bx	lr
 800e4a2:	bf00      	nop
 800e4a4:	20016b7c 	.word	0x20016b7c
 800e4a8:	20016b80 	.word	0x20016b80

0800e4ac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 800e4ac:	2300      	movs	r3, #0
 800e4ae:	4a02      	ldr	r2, [pc, #8]	@ (800e4b8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 800e4b0:	6013      	str	r3, [r2, #0]
 800e4b2:	4a02      	ldr	r2, [pc, #8]	@ (800e4bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 800e4b4:	6013      	str	r3, [r2, #0]
 800e4b6:	4770      	bx	lr
 800e4b8:	20016b7c 	.word	0x20016b7c
 800e4bc:	20016b80 	.word	0x20016b80

0800e4c0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800e4c0:	4b01      	ldr	r3, [pc, #4]	@ (800e4c8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800e4c2:	6818      	ldr	r0, [r3, #0]
 800e4c4:	4770      	bx	lr
 800e4c6:	bf00      	nop
 800e4c8:	20016b7c 	.word	0x20016b7c

0800e4cc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800e4cc:	4b01      	ldr	r3, [pc, #4]	@ (800e4d4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800e4ce:	6818      	ldr	r0, [r3, #0]
 800e4d0:	4770      	bx	lr
 800e4d2:	bf00      	nop
 800e4d4:	20016b80 	.word	0x20016b80

0800e4d8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e4d8:	b510      	push	{r4, lr}
 800e4da:	6803      	ldr	r3, [r0, #0]
 800e4dc:	460c      	mov	r4, r1
 800e4de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e4e0:	4798      	blx	r3
 800e4e2:	1b03      	subs	r3, r0, r4
 800e4e4:	4258      	negs	r0, r3
 800e4e6:	4158      	adcs	r0, r3
 800e4e8:	bd10      	pop	{r4, pc}
	...

0800e4ec <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e4ec:	4b01      	ldr	r3, [pc, #4]	@ (800e4f4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e4ee:	6019      	str	r1, [r3, #0]
 800e4f0:	4770      	bx	lr
 800e4f2:	bf00      	nop
 800e4f4:	20016b84 	.word	0x20016b84

0800e4f8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e4f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4fc:	4696      	mov	lr, r2
 800e4fe:	b097      	sub	sp, #92	@ 0x5c
 800e500:	4605      	mov	r5, r0
 800e502:	4614      	mov	r4, r2
 800e504:	460e      	mov	r6, r1
 800e506:	461f      	mov	r7, r3
 800e508:	f10d 0c1c 	add.w	ip, sp, #28
 800e50c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800e510:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800e514:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800e518:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e51c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e520:	f8de 3000 	ldr.w	r3, [lr]
 800e524:	f104 0e14 	add.w	lr, r4, #20
 800e528:	f8cc 3000 	str.w	r3, [ip]
 800e52c:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e530:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e534:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e538:	f8de 3000 	ldr.w	r3, [lr]
 800e53c:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e540:	f8cc 3000 	str.w	r3, [ip]
 800e544:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e548:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e54c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e550:	f8de 3000 	ldr.w	r3, [lr]
 800e554:	4631      	mov	r1, r6
 800e556:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e558:	4628      	mov	r0, r5
 800e55a:	f8cc 3000 	str.w	r3, [ip]
 800e55e:	682b      	ldr	r3, [r5, #0]
 800e560:	9201      	str	r2, [sp, #4]
 800e562:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e564:	f8cd 8008 	str.w	r8, [sp, #8]
 800e568:	9200      	str	r2, [sp, #0]
 800e56a:	aa07      	add	r2, sp, #28
 800e56c:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e570:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800e574:	463b      	mov	r3, r7
 800e576:	47d8      	blx	fp
 800e578:	46a6      	mov	lr, r4
 800e57a:	f10d 0c1c 	add.w	ip, sp, #28
 800e57e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e582:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e586:	f8de 3000 	ldr.w	r3, [lr]
 800e58a:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e58e:	343c      	adds	r4, #60	@ 0x3c
 800e590:	f8cc 3000 	str.w	r3, [ip]
 800e594:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e598:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e59c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e5a0:	f8de 3000 	ldr.w	r3, [lr]
 800e5a4:	f8cc 3000 	str.w	r3, [ip]
 800e5a8:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e5ac:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e5ae:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e5b2:	6823      	ldr	r3, [r4, #0]
 800e5b4:	4631      	mov	r1, r6
 800e5b6:	4628      	mov	r0, r5
 800e5b8:	f8cc 3000 	str.w	r3, [ip]
 800e5bc:	682b      	ldr	r3, [r5, #0]
 800e5be:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e5c2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e5c4:	f8cd 8008 	str.w	r8, [sp, #8]
 800e5c8:	9201      	str	r2, [sp, #4]
 800e5ca:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e5cc:	9200      	str	r2, [sp, #0]
 800e5ce:	aa07      	add	r2, sp, #28
 800e5d0:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800e5d2:	463b      	mov	r3, r7
 800e5d4:	47a0      	blx	r4
 800e5d6:	b017      	add	sp, #92	@ 0x5c
 800e5d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e5dc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800e5dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5e0:	b08d      	sub	sp, #52	@ 0x34
 800e5e2:	4688      	mov	r8, r1
 800e5e4:	f8d3 c000 	ldr.w	ip, [r3]
 800e5e8:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800e5ea:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800e5ee:	680f      	ldr	r7, [r1, #0]
 800e5f0:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800e5f4:	eba7 070c 	sub.w	r7, r7, ip
 800e5f8:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800e5fc:	edd3 6a07 	vldr	s13, [r3, #28]
 800e600:	42bc      	cmp	r4, r7
 800e602:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800e604:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800e608:	bfa8      	it	ge
 800e60a:	463c      	movge	r4, r7
 800e60c:	f9b1 9000 	ldrsh.w	r9, [r1]
 800e610:	f9ba 1000 	ldrsh.w	r1, [sl]
 800e614:	ee07 4a90 	vmov	s15, r4
 800e618:	eb09 0e0c 	add.w	lr, r9, ip
 800e61c:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800e620:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800e624:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800e628:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800e62c:	4571      	cmp	r1, lr
 800e62e:	ee25 4a04 	vmul.f32	s8, s10, s8
 800e632:	ee65 4a24 	vmul.f32	s9, s10, s9
 800e636:	ee25 5a27 	vmul.f32	s10, s10, s15
 800e63a:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800e63e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800e642:	ee32 1a05 	vadd.f32	s2, s4, s10
 800e646:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e64a:	ee36 0a84 	vadd.f32	s0, s13, s8
 800e64e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e652:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e656:	f340 808c 	ble.w	800e772 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800e65a:	eba1 060e 	sub.w	r6, r1, lr
 800e65e:	fb96 f5f4 	sdiv	r5, r6, r4
 800e662:	ee07 5a10 	vmov	s14, r5
 800e666:	2d00      	cmp	r5, #0
 800e668:	fb04 6615 	mls	r6, r4, r5, r6
 800e66c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e670:	eea7 0a04 	vfma.f32	s0, s14, s8
 800e674:	eee7 0a24 	vfma.f32	s1, s14, s9
 800e678:	eea7 1a05 	vfma.f32	s2, s14, s10
 800e67c:	dd12      	ble.n	800e6a4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800e67e:	ee70 6a44 	vsub.f32	s13, s0, s8
 800e682:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800e686:	ee31 2a45 	vsub.f32	s4, s2, s10
 800e68a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800e68e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e692:	bf14      	ite	ne
 800e694:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800e698:	eeb0 7a67 	vmoveq.f32	s14, s15
 800e69c:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e6a0:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e6a4:	fb05 f204 	mul.w	r2, r5, r4
 800e6a8:	1abf      	subs	r7, r7, r2
 800e6aa:	4494      	add	ip, r2
 800e6ac:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800e6b0:	4411      	add	r1, r2
 800e6b2:	eb09 020c 	add.w	r2, r9, ip
 800e6b6:	b209      	sxth	r1, r1
 800e6b8:	443a      	add	r2, r7
 800e6ba:	428a      	cmp	r2, r1
 800e6bc:	bfc4      	itt	gt
 800e6be:	eba1 0209 	subgt.w	r2, r1, r9
 800e6c2:	eba2 070c 	subgt.w	r7, r2, ip
 800e6c6:	2f00      	cmp	r7, #0
 800e6c8:	dd50      	ble.n	800e76c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800e6ca:	fb97 f1f4 	sdiv	r1, r7, r4
 800e6ce:	fb04 7211 	mls	r2, r4, r1, r7
 800e6d2:	b90a      	cbnz	r2, 800e6d8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800e6d4:	3901      	subs	r1, #1
 800e6d6:	4622      	mov	r2, r4
 800e6d8:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800e6dc:	6840      	ldr	r0, [r0, #4]
 800e6de:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800e6e2:	44b6      	add	lr, r6
 800e6e4:	f8d0 a000 	ldr.w	sl, [r0]
 800e6e8:	2900      	cmp	r1, #0
 800e6ea:	bfcc      	ite	gt
 800e6ec:	46a1      	movgt	r9, r4
 800e6ee:	4691      	movle	r9, r2
 800e6f0:	900b      	str	r0, [sp, #44]	@ 0x2c
 800e6f2:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800e6f4:	fb04 e505 	mla	r5, r4, r5, lr
 800e6f8:	eef0 6a42 	vmov.f32	s13, s4
 800e6fc:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800e700:	9008      	str	r0, [sp, #32]
 800e702:	eeb0 7a61 	vmov.f32	s14, s3
 800e706:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800e708:	695b      	ldr	r3, [r3, #20]
 800e70a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e70e:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800e712:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800e716:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800e718:	445b      	add	r3, fp
 800e71a:	9307      	str	r3, [sp, #28]
 800e71c:	ee16 3a90 	vmov	r3, s13
 800e720:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800e724:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800e728:	ee21 3a23 	vmul.f32	s6, s2, s7
 800e72c:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800e730:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e734:	ee17 7a90 	vmov	r7, s15
 800e738:	ee73 7a42 	vsub.f32	s15, s6, s4
 800e73c:	fb97 f7f4 	sdiv	r7, r7, r4
 800e740:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e744:	ee17 ca90 	vmov	ip, s15
 800e748:	fb9c fcf4 	sdiv	ip, ip, r4
 800e74c:	fb0c 3306 	mla	r3, ip, r6, r3
 800e750:	9302      	str	r3, [sp, #8]
 800e752:	ee17 3a10 	vmov	r3, s14
 800e756:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800e75a:	fb07 3706 	mla	r7, r7, r6, r3
 800e75e:	eba9 0306 	sub.w	r3, r9, r6
 800e762:	e9cd 4700 	strd	r4, r7, [sp]
 800e766:	f8da 4008 	ldr.w	r4, [sl, #8]
 800e76a:	47a0      	blx	r4
 800e76c:	b00d      	add	sp, #52	@ 0x34
 800e76e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e772:	2500      	movs	r5, #0
 800e774:	462e      	mov	r6, r5
 800e776:	e799      	b.n	800e6ac <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800e778 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e77c:	b0db      	sub	sp, #364	@ 0x16c
 800e77e:	461d      	mov	r5, r3
 800e780:	4614      	mov	r4, r2
 800e782:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800e786:	910f      	str	r1, [sp, #60]	@ 0x3c
 800e788:	4629      	mov	r1, r5
 800e78a:	930a      	str	r3, [sp, #40]	@ 0x28
 800e78c:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800e790:	9009      	str	r0, [sp, #36]	@ 0x24
 800e792:	930b      	str	r3, [sp, #44]	@ 0x2c
 800e794:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800e798:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800e79c:	9310      	str	r3, [sp, #64]	@ 0x40
 800e79e:	6803      	ldr	r3, [r0, #0]
 800e7a0:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800e7a2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800e7a6:	47b8      	blx	r7
 800e7a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e7aa:	6058      	str	r0, [r3, #4]
 800e7ac:	2800      	cmp	r0, #0
 800e7ae:	f000 83a1 	beq.w	800eef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7b2:	682b      	ldr	r3, [r5, #0]
 800e7b4:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800e7b8:	ed94 7a02 	vldr	s14, [r4, #8]
 800e7bc:	9314      	str	r3, [sp, #80]	@ 0x50
 800e7be:	686b      	ldr	r3, [r5, #4]
 800e7c0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e7c4:	9315      	str	r3, [sp, #84]	@ 0x54
 800e7c6:	4bc1      	ldr	r3, [pc, #772]	@ (800eacc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800e7c8:	7819      	ldrb	r1, [r3, #0]
 800e7ca:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800e7ce:	2900      	cmp	r1, #0
 800e7d0:	bf16      	itet	ne
 800e7d2:	4619      	movne	r1, r3
 800e7d4:	4611      	moveq	r1, r2
 800e7d6:	4613      	movne	r3, r2
 800e7d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e7dc:	9116      	str	r1, [sp, #88]	@ 0x58
 800e7de:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800e7e2:	f240 8387 	bls.w	800eef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7e6:	ed94 7a07 	vldr	s14, [r4, #28]
 800e7ea:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e7ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e7f2:	f240 837f 	bls.w	800eef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7f6:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800e7fa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e7fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e802:	f240 8377 	bls.w	800eef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e806:	6822      	ldr	r2, [r4, #0]
 800e808:	4bb1      	ldr	r3, [pc, #708]	@ (800ead0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800e80a:	429a      	cmp	r2, r3
 800e80c:	f2c0 8372 	blt.w	800eef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e810:	49b0      	ldr	r1, [pc, #704]	@ (800ead4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800e812:	6963      	ldr	r3, [r4, #20]
 800e814:	428a      	cmp	r2, r1
 800e816:	f300 836d 	bgt.w	800eef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e81a:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800e81e:	48ae      	ldr	r0, [pc, #696]	@ (800ead8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800e820:	33ff      	adds	r3, #255	@ 0xff
 800e822:	4283      	cmp	r3, r0
 800e824:	f200 8366 	bhi.w	800eef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e828:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800e82a:	4dac      	ldr	r5, [pc, #688]	@ (800eadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800e82c:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800e830:	33ff      	adds	r3, #255	@ 0xff
 800e832:	42ab      	cmp	r3, r5
 800e834:	f200 835e 	bhi.w	800eef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e838:	6862      	ldr	r2, [r4, #4]
 800e83a:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800e83e:	33ff      	adds	r3, #255	@ 0xff
 800e840:	4283      	cmp	r3, r0
 800e842:	f200 8357 	bhi.w	800eef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e846:	69a1      	ldr	r1, [r4, #24]
 800e848:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800e84c:	33ff      	adds	r3, #255	@ 0xff
 800e84e:	4283      	cmp	r3, r0
 800e850:	f200 8350 	bhi.w	800eef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e854:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800e856:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800e85a:	30ff      	adds	r0, #255	@ 0xff
 800e85c:	42a8      	cmp	r0, r5
 800e85e:	f200 8349 	bhi.w	800eef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e862:	428a      	cmp	r2, r1
 800e864:	f280 8110 	bge.w	800ea88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800e868:	429a      	cmp	r2, r3
 800e86a:	f300 8119 	bgt.w	800eaa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800e86e:	4299      	cmp	r1, r3
 800e870:	f280 811d 	bge.w	800eaae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800e874:	2502      	movs	r5, #2
 800e876:	2701      	movs	r7, #1
 800e878:	46a9      	mov	r9, r5
 800e87a:	46b8      	mov	r8, r7
 800e87c:	f04f 0a00 	mov.w	sl, #0
 800e880:	4621      	mov	r1, r4
 800e882:	a849      	add	r0, sp, #292	@ 0x124
 800e884:	f003 fd96 	bl	80123b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800e888:	4622      	mov	r2, r4
 800e88a:	4653      	mov	r3, sl
 800e88c:	a949      	add	r1, sp, #292	@ 0x124
 800e88e:	f8cd 9000 	str.w	r9, [sp]
 800e892:	a819      	add	r0, sp, #100	@ 0x64
 800e894:	f003 febe 	bl	8012614 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e898:	4622      	mov	r2, r4
 800e89a:	4653      	mov	r3, sl
 800e89c:	a949      	add	r1, sp, #292	@ 0x124
 800e89e:	f8cd 8000 	str.w	r8, [sp]
 800e8a2:	a829      	add	r0, sp, #164	@ 0xa4
 800e8a4:	f003 feb6 	bl	8012614 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e8a8:	4643      	mov	r3, r8
 800e8aa:	4622      	mov	r2, r4
 800e8ac:	a949      	add	r1, sp, #292	@ 0x124
 800e8ae:	f8cd 9000 	str.w	r9, [sp]
 800e8b2:	a839      	add	r0, sp, #228	@ 0xe4
 800e8b4:	f003 feae 	bl	8012614 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e8b8:	42af      	cmp	r7, r5
 800e8ba:	af12      	add	r7, sp, #72	@ 0x48
 800e8bc:	bfb7      	itett	lt
 800e8be:	2300      	movlt	r3, #0
 800e8c0:	2301      	movge	r3, #1
 800e8c2:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800e8c4:	ac19      	addlt	r4, sp, #100	@ 0x64
 800e8c6:	bfb1      	iteee	lt
 800e8c8:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800e8ca:	ad19      	addge	r5, sp, #100	@ 0x64
 800e8cc:	930e      	strge	r3, [sp, #56]	@ 0x38
 800e8ce:	ac29      	addge	r4, sp, #164	@ 0xa4
 800e8d0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e8d2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e8d6:	e887 0003 	stmia.w	r7, {r0, r1}
 800e8da:	b928      	cbnz	r0, 800e8e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800e8dc:	4b80      	ldr	r3, [pc, #512]	@ (800eae0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800e8de:	6818      	ldr	r0, [r3, #0]
 800e8e0:	6803      	ldr	r3, [r0, #0]
 800e8e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e8e4:	4798      	blx	r3
 800e8e6:	6038      	str	r0, [r7, #0]
 800e8e8:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800e8ea:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800e8ee:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800e8f2:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800e8f4:	930c      	str	r3, [sp, #48]	@ 0x30
 800e8f6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e8f8:	6963      	ldr	r3, [r4, #20]
 800e8fa:	440b      	add	r3, r1
 800e8fc:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800e900:	4408      	add	r0, r1
 800e902:	b200      	sxth	r0, r0
 800e904:	4283      	cmp	r3, r0
 800e906:	900d      	str	r0, [sp, #52]	@ 0x34
 800e908:	f280 80dd 	bge.w	800eac6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800e90c:	428b      	cmp	r3, r1
 800e90e:	da08      	bge.n	800e922 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e910:	2a00      	cmp	r2, #0
 800e912:	dd06      	ble.n	800e922 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e914:	1acb      	subs	r3, r1, r3
 800e916:	429a      	cmp	r2, r3
 800e918:	f2c0 80e4 	blt.w	800eae4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800e91c:	2b00      	cmp	r3, #0
 800e91e:	f300 80e2 	bgt.w	800eae6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800e922:	6967      	ldr	r7, [r4, #20]
 800e924:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800e928:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e92a:	443b      	add	r3, r7
 800e92c:	461f      	mov	r7, r3
 800e92e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e930:	1bdf      	subs	r7, r3, r7
 800e932:	4297      	cmp	r7, r2
 800e934:	bfa8      	it	ge
 800e936:	4617      	movge	r7, r2
 800e938:	2f00      	cmp	r7, #0
 800e93a:	f340 8166 	ble.w	800ec0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800e93e:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800e940:	6829      	ldr	r1, [r5, #0]
 800e942:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e946:	f9bb 3000 	ldrsh.w	r3, [fp]
 800e94a:	4411      	add	r1, r2
 800e94c:	6820      	ldr	r0, [r4, #0]
 800e94e:	4299      	cmp	r1, r3
 800e950:	dd1a      	ble.n	800e988 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e952:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800e956:	4402      	add	r2, r0
 800e958:	440b      	add	r3, r1
 800e95a:	b21b      	sxth	r3, r3
 800e95c:	429a      	cmp	r2, r3
 800e95e:	dc13      	bgt.n	800e988 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e960:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800e962:	a912      	add	r1, sp, #72	@ 0x48
 800e964:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e966:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e968:	681b      	ldr	r3, [r3, #0]
 800e96a:	9206      	str	r2, [sp, #24]
 800e96c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800e96e:	9500      	str	r5, [sp, #0]
 800e970:	9205      	str	r2, [sp, #20]
 800e972:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800e974:	e9cd b203 	strd	fp, r2, [sp, #12]
 800e978:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800e97a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800e97e:	aa49      	add	r2, sp, #292	@ 0x124
 800e980:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800e984:	4623      	mov	r3, r4
 800e986:	47c8      	blx	r9
 800e988:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800e98c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800e990:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800e994:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e998:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800e99c:	68a1      	ldr	r1, [r4, #8]
 800e99e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e9a2:	ed94 6a08 	vldr	s12, [r4, #32]
 800e9a6:	edd4 6a07 	vldr	s13, [r4, #28]
 800e9aa:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800e9ae:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e9b2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800e9b6:	e9d4 2300 	ldrd	r2, r3, [r4]
 800e9ba:	edc4 6a07 	vstr	s13, [r4, #28]
 800e9be:	441a      	add	r2, r3
 800e9c0:	6963      	ldr	r3, [r4, #20]
 800e9c2:	3301      	adds	r3, #1
 800e9c4:	6022      	str	r2, [r4, #0]
 800e9c6:	6163      	str	r3, [r4, #20]
 800e9c8:	69a3      	ldr	r3, [r4, #24]
 800e9ca:	3b01      	subs	r3, #1
 800e9cc:	61a3      	str	r3, [r4, #24]
 800e9ce:	6923      	ldr	r3, [r4, #16]
 800e9d0:	440b      	add	r3, r1
 800e9d2:	68e1      	ldr	r1, [r4, #12]
 800e9d4:	428b      	cmp	r3, r1
 800e9d6:	6123      	str	r3, [r4, #16]
 800e9d8:	db15      	blt.n	800ea06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800e9da:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800e9de:	3201      	adds	r2, #1
 800e9e0:	1a5b      	subs	r3, r3, r1
 800e9e2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e9e6:	6022      	str	r2, [r4, #0]
 800e9e8:	6123      	str	r3, [r4, #16]
 800e9ea:	edc4 6a07 	vstr	s13, [r4, #28]
 800e9ee:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800e9f2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e9f6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800e9fa:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800e9fe:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ea02:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ea06:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800ea0a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800ea0e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800ea12:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ea16:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800ea1a:	68a9      	ldr	r1, [r5, #8]
 800ea1c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ea20:	ed95 6a08 	vldr	s12, [r5, #32]
 800ea24:	edd5 6a07 	vldr	s13, [r5, #28]
 800ea28:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ea2c:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ea30:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ea34:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ea38:	edc5 6a07 	vstr	s13, [r5, #28]
 800ea3c:	441a      	add	r2, r3
 800ea3e:	696b      	ldr	r3, [r5, #20]
 800ea40:	3301      	adds	r3, #1
 800ea42:	602a      	str	r2, [r5, #0]
 800ea44:	616b      	str	r3, [r5, #20]
 800ea46:	69ab      	ldr	r3, [r5, #24]
 800ea48:	3b01      	subs	r3, #1
 800ea4a:	61ab      	str	r3, [r5, #24]
 800ea4c:	692b      	ldr	r3, [r5, #16]
 800ea4e:	440b      	add	r3, r1
 800ea50:	68e9      	ldr	r1, [r5, #12]
 800ea52:	428b      	cmp	r3, r1
 800ea54:	612b      	str	r3, [r5, #16]
 800ea56:	db15      	blt.n	800ea84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ea58:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ea5c:	3201      	adds	r2, #1
 800ea5e:	1a5b      	subs	r3, r3, r1
 800ea60:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ea64:	602a      	str	r2, [r5, #0]
 800ea66:	612b      	str	r3, [r5, #16]
 800ea68:	edc5 6a07 	vstr	s13, [r5, #28]
 800ea6c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800ea70:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ea74:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ea78:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800ea7c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ea80:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ea84:	3f01      	subs	r7, #1
 800ea86:	e757      	b.n	800e938 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ea88:	4299      	cmp	r1, r3
 800ea8a:	dc13      	bgt.n	800eab4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ea8c:	429a      	cmp	r2, r3
 800ea8e:	da14      	bge.n	800eaba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ea90:	2502      	movs	r5, #2
 800ea92:	2703      	movs	r7, #3
 800ea94:	f04f 0800 	mov.w	r8, #0
 800ea98:	46a9      	mov	r9, r5
 800ea9a:	f04f 0a01 	mov.w	sl, #1
 800ea9e:	e6ef      	b.n	800e880 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800eaa0:	2501      	movs	r5, #1
 800eaa2:	2700      	movs	r7, #0
 800eaa4:	46a9      	mov	r9, r5
 800eaa6:	46b8      	mov	r8, r7
 800eaa8:	f04f 0a02 	mov.w	sl, #2
 800eaac:	e6e8      	b.n	800e880 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800eaae:	2501      	movs	r5, #1
 800eab0:	2702      	movs	r7, #2
 800eab2:	e6e1      	b.n	800e878 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800eab4:	2500      	movs	r5, #0
 800eab6:	2701      	movs	r7, #1
 800eab8:	e7f4      	b.n	800eaa4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800eaba:	2702      	movs	r7, #2
 800eabc:	2503      	movs	r5, #3
 800eabe:	f04f 0900 	mov.w	r9, #0
 800eac2:	46b8      	mov	r8, r7
 800eac4:	e7e9      	b.n	800ea9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800eac6:	4613      	mov	r3, r2
 800eac8:	e728      	b.n	800e91c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800eaca:	bf00      	nop
 800eacc:	20016b6c 	.word	0x20016b6c
 800ead0:	fffd8f01 	.word	0xfffd8f01
 800ead4:	00027100 	.word	0x00027100
 800ead8:	0004e1ff 	.word	0x0004e1ff
 800eadc:	0004e1fe 	.word	0x0004e1fe
 800eae0:	20016b74 	.word	0x20016b74
 800eae4:	4613      	mov	r3, r2
 800eae6:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800eae8:	469e      	mov	lr, r3
 800eaea:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800eaec:	469c      	mov	ip, r3
 800eaee:	9111      	str	r1, [sp, #68]	@ 0x44
 800eaf0:	f04f 0900 	mov.w	r9, #0
 800eaf4:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800eaf8:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800eafc:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800eb00:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800eb04:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800eb08:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800eb0c:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800eb10:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800eb14:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800eb18:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800eb1c:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800eb20:	f1bc 0f00 	cmp.w	ip, #0
 800eb24:	d147      	bne.n	800ebb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800eb26:	eb03 0c07 	add.w	ip, r3, r7
 800eb2a:	1ad7      	subs	r7, r2, r3
 800eb2c:	f1b9 0f00 	cmp.w	r9, #0
 800eb30:	d009      	beq.n	800eb46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800eb32:	9029      	str	r0, [sp, #164]	@ 0xa4
 800eb34:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800eb38:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800eb3c:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800eb40:	912d      	str	r1, [sp, #180]	@ 0xb4
 800eb42:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800eb46:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800eb48:	f04f 0800 	mov.w	r8, #0
 800eb4c:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800eb50:	9111      	str	r1, [sp, #68]	@ 0x44
 800eb52:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800eb56:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800eb5a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800eb5e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800eb62:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800eb66:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800eb6a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800eb6e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800eb72:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800eb76:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800eb7a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800eb7e:	f1be 0f00 	cmp.w	lr, #0
 800eb82:	d031      	beq.n	800ebe8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800eb84:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800eb86:	4450      	add	r0, sl
 800eb88:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800eb8c:	4431      	add	r1, r6
 800eb8e:	ee37 7a04 	vadd.f32	s14, s14, s8
 800eb92:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800eb96:	4549      	cmp	r1, r9
 800eb98:	db08      	blt.n	800ebac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800eb9a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800eb9e:	3001      	adds	r0, #1
 800eba0:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800eba4:	eba1 0109 	sub.w	r1, r1, r9
 800eba8:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ebac:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ebb0:	f04f 0801 	mov.w	r8, #1
 800ebb4:	e7e3      	b.n	800eb7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ebb6:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ebb8:	4450      	add	r0, sl
 800ebba:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ebbe:	4431      	add	r1, r6
 800ebc0:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ebc4:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ebc8:	4541      	cmp	r1, r8
 800ebca:	db08      	blt.n	800ebde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ebcc:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ebd0:	3001      	adds	r0, #1
 800ebd2:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ebd6:	eba1 0108 	sub.w	r1, r1, r8
 800ebda:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ebde:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ebe2:	f04f 0901 	mov.w	r9, #1
 800ebe6:	e79b      	b.n	800eb20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ebe8:	449c      	add	ip, r3
 800ebea:	1aff      	subs	r7, r7, r3
 800ebec:	f1b8 0f00 	cmp.w	r8, #0
 800ebf0:	d009      	beq.n	800ec06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ebf2:	9019      	str	r0, [sp, #100]	@ 0x64
 800ebf4:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800ebf8:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800ebfc:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800ec00:	911d      	str	r1, [sp, #116]	@ 0x74
 800ec02:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800ec06:	1ad2      	subs	r2, r2, r3
 800ec08:	e68b      	b.n	800e922 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ec0a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ec0c:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800ec0e:	2b00      	cmp	r3, #0
 800ec10:	f000 80d1 	beq.w	800edb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ec14:	ad19      	add	r5, sp, #100	@ 0x64
 800ec16:	ac39      	add	r4, sp, #228	@ 0xe4
 800ec18:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ec1a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ec1e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ec22:	930c      	str	r3, [sp, #48]	@ 0x30
 800ec24:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800ec26:	6963      	ldr	r3, [r4, #20]
 800ec28:	440b      	add	r3, r1
 800ec2a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ec2e:	4408      	add	r0, r1
 800ec30:	b200      	sxth	r0, r0
 800ec32:	4283      	cmp	r3, r0
 800ec34:	900d      	str	r0, [sp, #52]	@ 0x34
 800ec36:	f280 80c1 	bge.w	800edbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ec3a:	428b      	cmp	r3, r1
 800ec3c:	da08      	bge.n	800ec50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ec3e:	2a00      	cmp	r2, #0
 800ec40:	dd06      	ble.n	800ec50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ec42:	1acb      	subs	r3, r1, r3
 800ec44:	429a      	cmp	r2, r3
 800ec46:	f2c0 80bb 	blt.w	800edc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ec4a:	2b00      	cmp	r3, #0
 800ec4c:	f300 80b9 	bgt.w	800edc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ec50:	6967      	ldr	r7, [r4, #20]
 800ec52:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800ec56:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ec58:	443b      	add	r3, r7
 800ec5a:	461f      	mov	r7, r3
 800ec5c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ec5e:	1bdf      	subs	r7, r3, r7
 800ec60:	4297      	cmp	r7, r2
 800ec62:	bfa8      	it	ge
 800ec64:	4617      	movge	r7, r2
 800ec66:	2f00      	cmp	r7, #0
 800ec68:	f340 813c 	ble.w	800eee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ec6c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ec6e:	6829      	ldr	r1, [r5, #0]
 800ec70:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ec74:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ec78:	4411      	add	r1, r2
 800ec7a:	6820      	ldr	r0, [r4, #0]
 800ec7c:	4299      	cmp	r1, r3
 800ec7e:	dd1a      	ble.n	800ecb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ec80:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ec84:	4402      	add	r2, r0
 800ec86:	440b      	add	r3, r1
 800ec88:	b21b      	sxth	r3, r3
 800ec8a:	429a      	cmp	r2, r3
 800ec8c:	dc13      	bgt.n	800ecb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ec8e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ec90:	a912      	add	r1, sp, #72	@ 0x48
 800ec92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ec94:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ec96:	681b      	ldr	r3, [r3, #0]
 800ec98:	9206      	str	r2, [sp, #24]
 800ec9a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ec9c:	9500      	str	r5, [sp, #0]
 800ec9e:	9205      	str	r2, [sp, #20]
 800eca0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800eca2:	e9cd b203 	strd	fp, r2, [sp, #12]
 800eca6:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800eca8:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ecac:	aa49      	add	r2, sp, #292	@ 0x124
 800ecae:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ecb2:	4623      	mov	r3, r4
 800ecb4:	47c8      	blx	r9
 800ecb6:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ecba:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ecbe:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ecc2:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ecc6:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ecca:	68a1      	ldr	r1, [r4, #8]
 800eccc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ecd0:	ed94 6a08 	vldr	s12, [r4, #32]
 800ecd4:	edd4 6a07 	vldr	s13, [r4, #28]
 800ecd8:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ecdc:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ece0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ece4:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ece8:	edc4 6a07 	vstr	s13, [r4, #28]
 800ecec:	441a      	add	r2, r3
 800ecee:	6963      	ldr	r3, [r4, #20]
 800ecf0:	3301      	adds	r3, #1
 800ecf2:	6022      	str	r2, [r4, #0]
 800ecf4:	6163      	str	r3, [r4, #20]
 800ecf6:	69a3      	ldr	r3, [r4, #24]
 800ecf8:	3b01      	subs	r3, #1
 800ecfa:	61a3      	str	r3, [r4, #24]
 800ecfc:	6923      	ldr	r3, [r4, #16]
 800ecfe:	440b      	add	r3, r1
 800ed00:	68e1      	ldr	r1, [r4, #12]
 800ed02:	428b      	cmp	r3, r1
 800ed04:	6123      	str	r3, [r4, #16]
 800ed06:	db15      	blt.n	800ed34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800ed08:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800ed0c:	3201      	adds	r2, #1
 800ed0e:	1a5b      	subs	r3, r3, r1
 800ed10:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ed14:	6022      	str	r2, [r4, #0]
 800ed16:	6123      	str	r3, [r4, #16]
 800ed18:	edc4 6a07 	vstr	s13, [r4, #28]
 800ed1c:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800ed20:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ed24:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ed28:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800ed2c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ed30:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ed34:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800ed38:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800ed3c:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800ed40:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ed44:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800ed48:	68a9      	ldr	r1, [r5, #8]
 800ed4a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed4e:	ed95 6a08 	vldr	s12, [r5, #32]
 800ed52:	edd5 6a07 	vldr	s13, [r5, #28]
 800ed56:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ed5a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ed5e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ed62:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ed66:	edc5 6a07 	vstr	s13, [r5, #28]
 800ed6a:	441a      	add	r2, r3
 800ed6c:	696b      	ldr	r3, [r5, #20]
 800ed6e:	3301      	adds	r3, #1
 800ed70:	602a      	str	r2, [r5, #0]
 800ed72:	616b      	str	r3, [r5, #20]
 800ed74:	69ab      	ldr	r3, [r5, #24]
 800ed76:	3b01      	subs	r3, #1
 800ed78:	61ab      	str	r3, [r5, #24]
 800ed7a:	692b      	ldr	r3, [r5, #16]
 800ed7c:	440b      	add	r3, r1
 800ed7e:	68e9      	ldr	r1, [r5, #12]
 800ed80:	428b      	cmp	r3, r1
 800ed82:	612b      	str	r3, [r5, #16]
 800ed84:	db15      	blt.n	800edb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800ed86:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ed8a:	3201      	adds	r2, #1
 800ed8c:	1a5b      	subs	r3, r3, r1
 800ed8e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ed92:	602a      	str	r2, [r5, #0]
 800ed94:	612b      	str	r3, [r5, #16]
 800ed96:	edc5 6a07 	vstr	s13, [r5, #28]
 800ed9a:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800ed9e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800eda2:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800eda6:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800edaa:	ee77 7a27 	vadd.f32	s15, s14, s15
 800edae:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800edb2:	3f01      	subs	r7, #1
 800edb4:	e757      	b.n	800ec66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800edb6:	ad39      	add	r5, sp, #228	@ 0xe4
 800edb8:	ac19      	add	r4, sp, #100	@ 0x64
 800edba:	e72d      	b.n	800ec18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800edbc:	4613      	mov	r3, r2
 800edbe:	e744      	b.n	800ec4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800edc0:	4613      	mov	r3, r2
 800edc2:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800edc4:	469e      	mov	lr, r3
 800edc6:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800edca:	461f      	mov	r7, r3
 800edcc:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800edd0:	f04f 0900 	mov.w	r9, #0
 800edd4:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800edd8:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800eddc:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800ede0:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800ede4:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800ede8:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800edea:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800edee:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800edf2:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800edf6:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800edfa:	960e      	str	r6, [sp, #56]	@ 0x38
 800edfc:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800ee00:	2f00      	cmp	r7, #0
 800ee02:	d146      	bne.n	800ee92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800ee04:	449c      	add	ip, r3
 800ee06:	1ad7      	subs	r7, r2, r3
 800ee08:	f1b9 0f00 	cmp.w	r9, #0
 800ee0c:	d009      	beq.n	800ee22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800ee0e:	9039      	str	r0, [sp, #228]	@ 0xe4
 800ee10:	913d      	str	r1, [sp, #244]	@ 0xf4
 800ee12:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800ee16:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800ee1a:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800ee1e:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800ee22:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800ee24:	f04f 0800 	mov.w	r8, #0
 800ee28:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800ee2c:	910e      	str	r1, [sp, #56]	@ 0x38
 800ee2e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800ee32:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800ee36:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800ee3a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800ee3e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800ee42:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800ee46:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800ee4a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800ee4e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800ee52:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800ee56:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800ee5a:	f1be 0f00 	cmp.w	lr, #0
 800ee5e:	d030      	beq.n	800eec2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800ee60:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800ee62:	4450      	add	r0, sl
 800ee64:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ee68:	4431      	add	r1, r6
 800ee6a:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ee6e:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ee72:	4549      	cmp	r1, r9
 800ee74:	db08      	blt.n	800ee88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800ee76:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ee7a:	3001      	adds	r0, #1
 800ee7c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ee80:	eba1 0109 	sub.w	r1, r1, r9
 800ee84:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ee88:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ee8c:	f04f 0801 	mov.w	r8, #1
 800ee90:	e7e3      	b.n	800ee5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800ee92:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800ee94:	4450      	add	r0, sl
 800ee96:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ee9a:	4431      	add	r1, r6
 800ee9c:	ee77 7a84 	vadd.f32	s15, s15, s8
 800eea0:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800eea4:	4541      	cmp	r1, r8
 800eea6:	db08      	blt.n	800eeba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800eea8:	ee76 6a85 	vadd.f32	s13, s13, s10
 800eeac:	3001      	adds	r0, #1
 800eeae:	ee37 7a25 	vadd.f32	s14, s14, s11
 800eeb2:	eba1 0108 	sub.w	r1, r1, r8
 800eeb6:	ee77 7a86 	vadd.f32	s15, s15, s12
 800eeba:	3f01      	subs	r7, #1
 800eebc:	f04f 0901 	mov.w	r9, #1
 800eec0:	e79e      	b.n	800ee00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800eec2:	449c      	add	ip, r3
 800eec4:	1aff      	subs	r7, r7, r3
 800eec6:	f1b8 0f00 	cmp.w	r8, #0
 800eeca:	d009      	beq.n	800eee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800eecc:	9019      	str	r0, [sp, #100]	@ 0x64
 800eece:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800eed2:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800eed6:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800eeda:	911d      	str	r1, [sp, #116]	@ 0x74
 800eedc:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800eee0:	1ad2      	subs	r2, r2, r3
 800eee2:	e6b5      	b.n	800ec50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800eee4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800eee6:	681b      	ldr	r3, [r3, #0]
 800eee8:	b923      	cbnz	r3, 800eef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eeea:	4b04      	ldr	r3, [pc, #16]	@ (800eefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800eeec:	6818      	ldr	r0, [r3, #0]
 800eeee:	6803      	ldr	r3, [r0, #0]
 800eef0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eef2:	4798      	blx	r3
 800eef4:	b05b      	add	sp, #364	@ 0x16c
 800eef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eefa:	bf00      	nop
 800eefc:	20016b74 	.word	0x20016b74

0800ef00 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800ef00:	b570      	push	{r4, r5, r6, lr}
 800ef02:	4604      	mov	r4, r0
 800ef04:	2500      	movs	r5, #0
 800ef06:	9805      	ldr	r0, [sp, #20]
 800ef08:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800ef0c:	6061      	str	r1, [r4, #4]
 800ef0e:	8263      	strh	r3, [r4, #18]
 800ef10:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800ef14:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800ef18:	8025      	strh	r5, [r4, #0]
 800ef1a:	7221      	strb	r1, [r4, #8]
 800ef1c:	7266      	strb	r6, [r4, #9]
 800ef1e:	60e0      	str	r0, [r4, #12]
 800ef20:	8222      	strh	r2, [r4, #16]
 800ef22:	82a3      	strh	r3, [r4, #20]
 800ef24:	82e5      	strh	r5, [r4, #22]
 800ef26:	8325      	strh	r5, [r4, #24]
 800ef28:	8365      	strh	r5, [r4, #26]
 800ef2a:	83a5      	strh	r5, [r4, #28]
 800ef2c:	83e5      	strh	r5, [r4, #30]
 800ef2e:	8425      	strh	r5, [r4, #32]
 800ef30:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800ef34:	b32e      	cbz	r6, 800ef82 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800ef36:	6803      	ldr	r3, [r0, #0]
 800ef38:	695b      	ldr	r3, [r3, #20]
 800ef3a:	4798      	blx	r3
 800ef3c:	4606      	mov	r6, r0
 800ef3e:	b300      	cbz	r0, 800ef82 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800ef40:	68e0      	ldr	r0, [r4, #12]
 800ef42:	4631      	mov	r1, r6
 800ef44:	6803      	ldr	r3, [r0, #0]
 800ef46:	68db      	ldr	r3, [r3, #12]
 800ef48:	4798      	blx	r3
 800ef4a:	4605      	mov	r5, r0
 800ef4c:	b1c8      	cbz	r0, 800ef82 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800ef4e:	7b43      	ldrb	r3, [r0, #13]
 800ef50:	7a82      	ldrb	r2, [r0, #10]
 800ef52:	005b      	lsls	r3, r3, #1
 800ef54:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ef58:	4313      	orrs	r3, r2
 800ef5a:	8423      	strh	r3, [r4, #32]
 800ef5c:	7a63      	ldrb	r3, [r4, #9]
 800ef5e:	2b06      	cmp	r3, #6
 800ef60:	d10f      	bne.n	800ef82 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800ef62:	68e0      	ldr	r0, [r4, #12]
 800ef64:	462a      	mov	r2, r5
 800ef66:	4631      	mov	r1, r6
 800ef68:	6803      	ldr	r3, [r0, #0]
 800ef6a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ef6c:	4798      	blx	r3
 800ef6e:	7b6b      	ldrb	r3, [r5, #13]
 800ef70:	005b      	lsls	r3, r3, #1
 800ef72:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800ef76:	7aab      	ldrb	r3, [r5, #10]
 800ef78:	4313      	orrs	r3, r2
 800ef7a:	4418      	add	r0, r3
 800ef7c:	8c23      	ldrh	r3, [r4, #32]
 800ef7e:	4418      	add	r0, r3
 800ef80:	8420      	strh	r0, [r4, #32]
 800ef82:	4620      	mov	r0, r4
 800ef84:	bd70      	pop	{r4, r5, r6, pc}

0800ef86 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800ef86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef8a:	2400      	movs	r4, #0
 800ef8c:	b085      	sub	sp, #20
 800ef8e:	4681      	mov	r9, r0
 800ef90:	4688      	mov	r8, r1
 800ef92:	4692      	mov	sl, r2
 800ef94:	469b      	mov	fp, r3
 800ef96:	4627      	mov	r7, r4
 800ef98:	4625      	mov	r5, r4
 800ef9a:	4626      	mov	r6, r4
 800ef9c:	4554      	cmp	r4, sl
 800ef9e:	da2a      	bge.n	800eff6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800efa0:	2300      	movs	r3, #0
 800efa2:	9303      	str	r3, [sp, #12]
 800efa4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800efa8:	429d      	cmp	r5, r3
 800efaa:	d004      	beq.n	800efb6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800efac:	f242 030b 	movw	r3, #8203	@ 0x200b
 800efb0:	429d      	cmp	r5, r3
 800efb2:	bf18      	it	ne
 800efb4:	462f      	movne	r7, r5
 800efb6:	ab03      	add	r3, sp, #12
 800efb8:	4642      	mov	r2, r8
 800efba:	4659      	mov	r1, fp
 800efbc:	4648      	mov	r0, r9
 800efbe:	f003 f80f 	bl	8011fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800efc2:	4605      	mov	r5, r0
 800efc4:	b1b8      	cbz	r0, 800eff6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800efc6:	280a      	cmp	r0, #10
 800efc8:	d015      	beq.n	800eff6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800efca:	9a03      	ldr	r2, [sp, #12]
 800efcc:	b18a      	cbz	r2, 800eff2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800efce:	7b50      	ldrb	r0, [r2, #13]
 800efd0:	4639      	mov	r1, r7
 800efd2:	7a93      	ldrb	r3, [r2, #10]
 800efd4:	0040      	lsls	r0, r0, #1
 800efd6:	8895      	ldrh	r5, [r2, #4]
 800efd8:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800efdc:	4303      	orrs	r3, r0
 800efde:	4640      	mov	r0, r8
 800efe0:	9301      	str	r3, [sp, #4]
 800efe2:	f8d8 3000 	ldr.w	r3, [r8]
 800efe6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800efe8:	4798      	blx	r3
 800efea:	9b01      	ldr	r3, [sp, #4]
 800efec:	4418      	add	r0, r3
 800efee:	4406      	add	r6, r0
 800eff0:	b2b6      	uxth	r6, r6
 800eff2:	3401      	adds	r4, #1
 800eff4:	e7d2      	b.n	800ef9c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800eff6:	4630      	mov	r0, r6
 800eff8:	b005      	add	sp, #20
 800effa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800effe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800effe:	2a02      	cmp	r2, #2
 800f000:	b530      	push	{r4, r5, lr}
 800f002:	d011      	beq.n	800f028 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800f004:	2a03      	cmp	r2, #3
 800f006:	d01c      	beq.n	800f042 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800f008:	2a01      	cmp	r2, #1
 800f00a:	d10c      	bne.n	800f026 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f00c:	888b      	ldrh	r3, [r1, #4]
 800f00e:	8801      	ldrh	r1, [r0, #0]
 800f010:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800f014:	1a5b      	subs	r3, r3, r1
 800f016:	8844      	ldrh	r4, [r0, #2]
 800f018:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f01c:	1a9b      	subs	r3, r3, r2
 800f01e:	8004      	strh	r4, [r0, #0]
 800f020:	8081      	strh	r1, [r0, #4]
 800f022:	8043      	strh	r3, [r0, #2]
 800f024:	80c2      	strh	r2, [r0, #6]
 800f026:	bd30      	pop	{r4, r5, pc}
 800f028:	88cb      	ldrh	r3, [r1, #6]
 800f02a:	8842      	ldrh	r2, [r0, #2]
 800f02c:	1a9b      	subs	r3, r3, r2
 800f02e:	88c2      	ldrh	r2, [r0, #6]
 800f030:	1a9b      	subs	r3, r3, r2
 800f032:	888a      	ldrh	r2, [r1, #4]
 800f034:	8801      	ldrh	r1, [r0, #0]
 800f036:	8043      	strh	r3, [r0, #2]
 800f038:	1a52      	subs	r2, r2, r1
 800f03a:	8881      	ldrh	r1, [r0, #4]
 800f03c:	1a52      	subs	r2, r2, r1
 800f03e:	8002      	strh	r2, [r0, #0]
 800f040:	e7f1      	b.n	800f026 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f042:	88cb      	ldrh	r3, [r1, #6]
 800f044:	8841      	ldrh	r1, [r0, #2]
 800f046:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800f04a:	1a5b      	subs	r3, r3, r1
 800f04c:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f050:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f054:	1a9b      	subs	r3, r3, r2
 800f056:	8045      	strh	r5, [r0, #2]
 800f058:	8082      	strh	r2, [r0, #4]
 800f05a:	8003      	strh	r3, [r0, #0]
 800f05c:	80c4      	strh	r4, [r0, #6]
 800f05e:	e7e2      	b.n	800f026 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800f060 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800f060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f064:	b09f      	sub	sp, #124	@ 0x7c
 800f066:	920f      	str	r2, [sp, #60]	@ 0x3c
 800f068:	9312      	str	r3, [sp, #72]	@ 0x48
 800f06a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800f06c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800f06e:	8812      	ldrh	r2, [r2, #0]
 800f070:	889b      	ldrh	r3, [r3, #4]
 800f072:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800f074:	4413      	add	r3, r2
 800f076:	900e      	str	r0, [sp, #56]	@ 0x38
 800f078:	6828      	ldr	r0, [r5, #0]
 800f07a:	b21b      	sxth	r3, r3
 800f07c:	9117      	str	r1, [sp, #92]	@ 0x5c
 800f07e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800f082:	9311      	str	r3, [sp, #68]	@ 0x44
 800f084:	6803      	ldr	r3, [r0, #0]
 800f086:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800f08a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800f08c:	4798      	blx	r3
 800f08e:	682b      	ldr	r3, [r5, #0]
 800f090:	9013      	str	r0, [sp, #76]	@ 0x4c
 800f092:	7b1a      	ldrb	r2, [r3, #12]
 800f094:	7adb      	ldrb	r3, [r3, #11]
 800f096:	9215      	str	r2, [sp, #84]	@ 0x54
 800f098:	9316      	str	r3, [sp, #88]	@ 0x58
 800f09a:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800f09e:	2c00      	cmp	r4, #0
 800f0a0:	d067      	beq.n	800f172 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800f0a2:	7c2b      	ldrb	r3, [r5, #16]
 800f0a4:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800f0a6:	2b06      	cmp	r3, #6
 800f0a8:	bf14      	ite	ne
 800f0aa:	2301      	movne	r3, #1
 800f0ac:	2302      	moveq	r3, #2
 800f0ae:	4413      	add	r3, r2
 800f0b0:	f04f 0900 	mov.w	r9, #0
 800f0b4:	9310      	str	r3, [sp, #64]	@ 0x40
 800f0b6:	464c      	mov	r4, r9
 800f0b8:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800f0bc:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800f0c0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f0c2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f0c4:	4293      	cmp	r3, r2
 800f0c6:	f280 808b 	bge.w	800f1e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800f0ca:	2300      	movs	r3, #0
 800f0cc:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800f0d0:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800f0d4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f0d8:	429c      	cmp	r4, r3
 800f0da:	d006      	beq.n	800f0ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800f0dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f0de:	f242 020b 	movw	r2, #8203	@ 0x200b
 800f0e2:	4294      	cmp	r4, r2
 800f0e4:	bf18      	it	ne
 800f0e6:	4623      	movne	r3, r4
 800f0e8:	930c      	str	r3, [sp, #48]	@ 0x30
 800f0ea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f0ec:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800f0ee:	682a      	ldr	r2, [r5, #0]
 800f0f0:	428b      	cmp	r3, r1
 800f0f2:	db40      	blt.n	800f176 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800f0f4:	6813      	ldr	r3, [r2, #0]
 800f0f6:	4610      	mov	r0, r2
 800f0f8:	695b      	ldr	r3, [r3, #20]
 800f0fa:	4798      	blx	r3
 800f0fc:	4604      	mov	r4, r0
 800f0fe:	6828      	ldr	r0, [r5, #0]
 800f100:	aa1d      	add	r2, sp, #116	@ 0x74
 800f102:	4621      	mov	r1, r4
 800f104:	6803      	ldr	r3, [r0, #0]
 800f106:	689f      	ldr	r7, [r3, #8]
 800f108:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800f10c:	47b8      	blx	r7
 800f10e:	901c      	str	r0, [sp, #112]	@ 0x70
 800f110:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f114:	429c      	cmp	r4, r3
 800f116:	f000 80eb 	beq.w	800f2f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800f11a:	f242 030b 	movw	r3, #8203	@ 0x200b
 800f11e:	429c      	cmp	r4, r3
 800f120:	f000 80e6 	beq.w	800f2f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800f124:	2c00      	cmp	r4, #0
 800f126:	f000 810d 	beq.w	800f344 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800f12a:	2c0a      	cmp	r4, #10
 800f12c:	d05e      	beq.n	800f1ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800f12e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800f130:	b36a      	cbz	r2, 800f18e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800f132:	8894      	ldrh	r4, [r2, #4]
 800f134:	f1bb 0f00 	cmp.w	fp, #0
 800f138:	d03a      	beq.n	800f1b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800f13a:	f892 900d 	ldrb.w	r9, [r2, #13]
 800f13e:	f1bb 0f01 	cmp.w	fp, #1
 800f142:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800f146:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800f14a:	f892 900a 	ldrb.w	r9, [r2, #10]
 800f14e:	ea49 0903 	orr.w	r9, r9, r3
 800f152:	d133      	bne.n	800f1bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800f154:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f156:	eba6 0609 	sub.w	r6, r6, r9
 800f15a:	2b00      	cmp	r3, #0
 800f15c:	d14d      	bne.n	800f1fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800f15e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800f160:	eb09 0306 	add.w	r3, r9, r6
 800f164:	4413      	add	r3, r2
 800f166:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800f168:	f9b2 2000 	ldrsh.w	r2, [r2]
 800f16c:	4293      	cmp	r3, r2
 800f16e:	da4e      	bge.n	800f20e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800f170:	e036      	b.n	800f1e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800f172:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800f174:	e79c      	b.n	800f0b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800f176:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800f17a:	4659      	mov	r1, fp
 800f17c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800f17e:	9301      	str	r3, [sp, #4]
 800f180:	ab1d      	add	r3, sp, #116	@ 0x74
 800f182:	9300      	str	r3, [sp, #0]
 800f184:	ab1c      	add	r3, sp, #112	@ 0x70
 800f186:	f002 ff74 	bl	8012072 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800f18a:	4604      	mov	r4, r0
 800f18c:	e7c0      	b.n	800f110 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800f18e:	6828      	ldr	r0, [r5, #0]
 800f190:	6803      	ldr	r3, [r0, #0]
 800f192:	691b      	ldr	r3, [r3, #16]
 800f194:	4798      	blx	r3
 800f196:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f19a:	4298      	cmp	r0, r3
 800f19c:	f000 80a8 	beq.w	800f2f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800f1a0:	f242 030b 	movw	r3, #8203	@ 0x200b
 800f1a4:	4298      	cmp	r0, r3
 800f1a6:	f000 80a3 	beq.w	800f2f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800f1aa:	f1bb 0f00 	cmp.w	fp, #0
 800f1ae:	d100      	bne.n	800f1b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800f1b0:	444e      	add	r6, r9
 800f1b2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800f1b4:	2a00      	cmp	r2, #0
 800f1b6:	d1c0      	bne.n	800f13a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800f1b8:	4691      	mov	r9, r2
 800f1ba:	e099      	b.n	800f2f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800f1bc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f1be:	2b00      	cmp	r3, #0
 800f1c0:	f000 80c2 	beq.w	800f348 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
 800f1c4:	f1bb 0f00 	cmp.w	fp, #0
 800f1c8:	d117      	bne.n	800f1fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800f1ca:	6828      	ldr	r0, [r5, #0]
 800f1cc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f1ce:	6803      	ldr	r3, [r0, #0]
 800f1d0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f1d2:	4798      	blx	r3
 800f1d4:	4406      	add	r6, r0
 800f1d6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800f1d8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800f1da:	1af3      	subs	r3, r6, r3
 800f1dc:	4293      	cmp	r3, r2
 800f1de:	dd16      	ble.n	800f20e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800f1e0:	2c00      	cmp	r4, #0
 800f1e2:	f000 80af 	beq.w	800f344 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800f1e6:	2c0a      	cmp	r4, #10
 800f1e8:	f040 809d 	bne.w	800f326 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800f1ec:	240a      	movs	r4, #10
 800f1ee:	fab4 f084 	clz	r0, r4
 800f1f2:	0940      	lsrs	r0, r0, #5
 800f1f4:	b01f      	add	sp, #124	@ 0x7c
 800f1f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f1fa:	6828      	ldr	r0, [r5, #0]
 800f1fc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f1fe:	6803      	ldr	r3, [r0, #0]
 800f200:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f202:	4798      	blx	r3
 800f204:	f1bb 0f01 	cmp.w	fp, #1
 800f208:	eba6 0600 	sub.w	r6, r6, r0
 800f20c:	d0a7      	beq.n	800f15e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800f20e:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800f210:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800f212:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800f216:	f9b3 8000 	ldrsh.w	r8, [r3]
 800f21a:	7b43      	ldrb	r3, [r0, #13]
 800f21c:	4431      	add	r1, r6
 800f21e:	015b      	lsls	r3, r3, #5
 800f220:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f224:	7983      	ldrb	r3, [r0, #6]
 800f226:	4313      	orrs	r3, r2
 800f228:	440b      	add	r3, r1
 800f22a:	4543      	cmp	r3, r8
 800f22c:	db60      	blt.n	800f2f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800f22e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800f230:	4299      	cmp	r1, r3
 800f232:	da5d      	bge.n	800f2f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800f234:	6828      	ldr	r0, [r5, #0]
 800f236:	45b0      	cmp	r8, r6
 800f238:	6803      	ldr	r3, [r0, #0]
 800f23a:	bfcc      	ite	gt
 800f23c:	eba8 0806 	subgt.w	r8, r8, r6
 800f240:	f04f 0800 	movle.w	r8, #0
 800f244:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f246:	bfc8      	it	gt
 800f248:	fa1f f888 	uxthgt.w	r8, r8
 800f24c:	4798      	blx	r3
 800f24e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800f250:	7b53      	ldrb	r3, [r2, #13]
 800f252:	00d9      	lsls	r1, r3, #3
 800f254:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800f258:	7a11      	ldrb	r1, [r2, #8]
 800f25a:	4339      	orrs	r1, r7
 800f25c:	065f      	lsls	r7, r3, #25
 800f25e:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800f260:	bf48      	it	mi
 800f262:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800f266:	4407      	add	r7, r0
 800f268:	bf48      	it	mi
 800f26a:	b209      	sxthmi	r1, r1
 800f26c:	1a7f      	subs	r7, r7, r1
 800f26e:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800f270:	b2bf      	uxth	r7, r7
 800f272:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800f276:	fa0f fa87 	sxth.w	sl, r7
 800f27a:	4551      	cmp	r1, sl
 800f27c:	dd3c      	ble.n	800f2f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800f27e:	011b      	lsls	r3, r3, #4
 800f280:	79d0      	ldrb	r0, [r2, #7]
 800f282:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f286:	4303      	orrs	r3, r0
 800f288:	449a      	add	sl, r3
 800f28a:	4551      	cmp	r1, sl
 800f28c:	dc30      	bgt.n	800f2f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800f28e:	1bcf      	subs	r7, r1, r7
 800f290:	468a      	mov	sl, r1
 800f292:	b23f      	sxth	r7, r7
 800f294:	9219      	str	r2, [sp, #100]	@ 0x64
 800f296:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800f298:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800f29a:	6828      	ldr	r0, [r5, #0]
 800f29c:	2a00      	cmp	r2, #0
 800f29e:	d12d      	bne.n	800f2fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 800f2a0:	9318      	str	r3, [sp, #96]	@ 0x60
 800f2a2:	b2bf      	uxth	r7, r7
 800f2a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f2a6:	6819      	ldr	r1, [r3, #0]
 800f2a8:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800f2aa:	6801      	ldr	r1, [r0, #0]
 800f2ac:	9314      	str	r3, [sp, #80]	@ 0x50
 800f2ae:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800f2b0:	4788      	blx	r1
 800f2b2:	79a9      	ldrb	r1, [r5, #6]
 800f2b4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800f2b6:	910b      	str	r1, [sp, #44]	@ 0x2c
 800f2b8:	7ba9      	ldrb	r1, [r5, #14]
 800f2ba:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800f2bc:	910a      	str	r1, [sp, #40]	@ 0x28
 800f2be:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800f2c2:	9109      	str	r1, [sp, #36]	@ 0x24
 800f2c4:	68a9      	ldr	r1, [r5, #8]
 800f2c6:	9306      	str	r3, [sp, #24]
 800f2c8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800f2ca:	9205      	str	r2, [sp, #20]
 800f2cc:	9304      	str	r3, [sp, #16]
 800f2ce:	f8cd a004 	str.w	sl, [sp, #4]
 800f2d2:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800f2d6:	44b0      	add	r8, r6
 800f2d8:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800f2da:	fa0f f388 	sxth.w	r3, r8
 800f2de:	9300      	str	r3, [sp, #0]
 800f2e0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f2e2:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800f2e6:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800f2e8:	681a      	ldr	r2, [r3, #0]
 800f2ea:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800f2ec:	685b      	ldr	r3, [r3, #4]
 800f2ee:	47b8      	blx	r7
 800f2f0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f2f2:	3301      	adds	r3, #1
 800f2f4:	930d      	str	r3, [sp, #52]	@ 0x34
 800f2f6:	e6e3      	b.n	800f0c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800f2f8:	2700      	movs	r7, #0
 800f2fa:	e7cb      	b.n	800f294 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800f2fc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800f2fe:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800f302:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800f304:	f8dc 1000 	ldr.w	r1, [ip]
 800f308:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800f30c:	79aa      	ldrb	r2, [r5, #6]
 800f30e:	9203      	str	r2, [sp, #12]
 800f310:	7baa      	ldrb	r2, [r5, #14]
 800f312:	9202      	str	r2, [sp, #8]
 800f314:	68aa      	ldr	r2, [r5, #8]
 800f316:	e9cd 0200 	strd	r0, r2, [sp]
 800f31a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800f31c:	4660      	mov	r0, ip
 800f31e:	688f      	ldr	r7, [r1, #8]
 800f320:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800f322:	47b8      	blx	r7
 800f324:	e7e4      	b.n	800f2f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800f326:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800f328:	3501      	adds	r5, #1
 800f32a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800f32c:	429d      	cmp	r5, r3
 800f32e:	f6bf af5e 	bge.w	800f1ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800f332:	4659      	mov	r1, fp
 800f334:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800f336:	f7f4 f9f5 	bl	8003724 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f33a:	4604      	mov	r4, r0
 800f33c:	b110      	cbz	r0, 800f344 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800f33e:	280a      	cmp	r0, #10
 800f340:	d1f2      	bne.n	800f328 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
 800f342:	e753      	b.n	800f1ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800f344:	2400      	movs	r4, #0
 800f346:	e752      	b.n	800f1ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800f348:	f1bb 0f00 	cmp.w	fp, #0
 800f34c:	f43f af43 	beq.w	800f1d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800f350:	e75d      	b.n	800f20e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800f352 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800f352:	b530      	push	{r4, r5, lr}
 800f354:	8ac4      	ldrh	r4, [r0, #22]
 800f356:	8b45      	ldrh	r5, [r0, #26]
 800f358:	8343      	strh	r3, [r0, #26]
 800f35a:	442c      	add	r4, r5
 800f35c:	1ae4      	subs	r4, r4, r3
 800f35e:	8b83      	ldrh	r3, [r0, #28]
 800f360:	82c4      	strh	r4, [r0, #22]
 800f362:	8b04      	ldrh	r4, [r0, #24]
 800f364:	4422      	add	r2, r4
 800f366:	440c      	add	r4, r1
 800f368:	1a59      	subs	r1, r3, r1
 800f36a:	83c2      	strh	r2, [r0, #30]
 800f36c:	8304      	strh	r4, [r0, #24]
 800f36e:	8381      	strh	r1, [r0, #28]
 800f370:	bd30      	pop	{r4, r5, pc}

0800f372 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800f372:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f376:	4604      	mov	r4, r0
 800f378:	8a47      	ldrh	r7, [r0, #18]
 800f37a:	68c0      	ldr	r0, [r0, #12]
 800f37c:	b085      	sub	sp, #20
 800f37e:	6803      	ldr	r3, [r0, #0]
 800f380:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f382:	4798      	blx	r3
 800f384:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800f388:	7a63      	ldrb	r3, [r4, #9]
 800f38a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800f38e:	3b01      	subs	r3, #1
 800f390:	42b7      	cmp	r7, r6
 800f392:	bfac      	ite	ge
 800f394:	f04f 0900 	movge.w	r9, #0
 800f398:	f04f 0901 	movlt.w	r9, #1
 800f39c:	2b05      	cmp	r3, #5
 800f39e:	d804      	bhi.n	800f3aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 800f3a0:	e8df f003 	tbb	[pc, r3]
 800f3a4:	470f0854 	.word	0x470f0854
 800f3a8:	4c4c      	.short	0x4c4c
 800f3aa:	2500      	movs	r5, #0
 800f3ac:	46a9      	mov	r9, r5
 800f3ae:	462e      	mov	r6, r5
 800f3b0:	462f      	mov	r7, r5
 800f3b2:	e00e      	b.n	800f3d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800f3b4:	42b7      	cmp	r7, r6
 800f3b6:	f04f 0500 	mov.w	r5, #0
 800f3ba:	bfb4      	ite	lt
 800f3bc:	2600      	movlt	r6, #0
 800f3be:	2601      	movge	r6, #1
 800f3c0:	e7f6      	b.n	800f3b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800f3c2:	42b7      	cmp	r7, r6
 800f3c4:	464d      	mov	r5, r9
 800f3c6:	f04f 0900 	mov.w	r9, #0
 800f3ca:	bfb4      	ite	lt
 800f3cc:	2600      	movlt	r6, #0
 800f3ce:	2601      	movge	r6, #1
 800f3d0:	464f      	mov	r7, r9
 800f3d2:	f04f 0800 	mov.w	r8, #0
 800f3d6:	f8a4 8016 	strh.w	r8, [r4, #22]
 800f3da:	f8a4 8018 	strh.w	r8, [r4, #24]
 800f3de:	f8cd 8004 	str.w	r8, [sp, #4]
 800f3e2:	2300      	movs	r3, #0
 800f3e4:	9303      	str	r3, [sp, #12]
 800f3e6:	8823      	ldrh	r3, [r4, #0]
 800f3e8:	2b20      	cmp	r3, #32
 800f3ea:	d033      	beq.n	800f454 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 800f3ec:	f242 010b 	movw	r1, #8203	@ 0x200b
 800f3f0:	1a5a      	subs	r2, r3, r1
 800f3f2:	f1d2 0a00 	rsbs	sl, r2, #0
 800f3f6:	eb4a 0a02 	adc.w	sl, sl, r2
 800f3fa:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800f3fe:	4293      	cmp	r3, r2
 800f400:	d008      	beq.n	800f414 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800f402:	428b      	cmp	r3, r1
 800f404:	9a01      	ldr	r2, [sp, #4]
 800f406:	bf0e      	itee	eq
 800f408:	f04f 0a01 	moveq.w	sl, #1
 800f40c:	461a      	movne	r2, r3
 800f40e:	f04f 0a00 	movne.w	sl, #0
 800f412:	9201      	str	r2, [sp, #4]
 800f414:	ab03      	add	r3, sp, #12
 800f416:	68e2      	ldr	r2, [r4, #12]
 800f418:	7a21      	ldrb	r1, [r4, #8]
 800f41a:	6860      	ldr	r0, [r4, #4]
 800f41c:	f002 fde0 	bl	8011fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f420:	8020      	strh	r0, [r4, #0]
 800f422:	b9d8      	cbnz	r0, 800f45c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 800f424:	8ba2      	ldrh	r2, [r4, #28]
 800f426:	2300      	movs	r3, #0
 800f428:	4611      	mov	r1, r2
 800f42a:	4620      	mov	r0, r4
 800f42c:	f7ff ff91 	bl	800f352 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f430:	e06e      	b.n	800f510 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800f432:	2500      	movs	r5, #0
 800f434:	2701      	movs	r7, #1
 800f436:	46a9      	mov	r9, r5
 800f438:	462e      	mov	r6, r5
 800f43a:	e7ca      	b.n	800f3d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800f43c:	42b7      	cmp	r7, r6
 800f43e:	f04f 0500 	mov.w	r5, #0
 800f442:	bfb4      	ite	lt
 800f444:	2700      	movlt	r7, #0
 800f446:	2701      	movge	r7, #1
 800f448:	462e      	mov	r6, r5
 800f44a:	e7c2      	b.n	800f3d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800f44c:	2500      	movs	r5, #0
 800f44e:	2601      	movs	r6, #1
 800f450:	46a9      	mov	r9, r5
 800f452:	e7ad      	b.n	800f3b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800f454:	9301      	str	r3, [sp, #4]
 800f456:	f04f 0a01 	mov.w	sl, #1
 800f45a:	e7db      	b.n	800f414 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800f45c:	8b63      	ldrh	r3, [r4, #26]
 800f45e:	280a      	cmp	r0, #10
 800f460:	f103 0301 	add.w	r3, r3, #1
 800f464:	8363      	strh	r3, [r4, #26]
 800f466:	d0dd      	beq.n	800f424 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 800f468:	9a03      	ldr	r2, [sp, #12]
 800f46a:	bb62      	cbnz	r2, 800f4c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 800f46c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f470:	4298      	cmp	r0, r3
 800f472:	d003      	beq.n	800f47c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800f474:	f242 030b 	movw	r3, #8203	@ 0x200b
 800f478:	4298      	cmp	r0, r3
 800f47a:	d1b2      	bne.n	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f47c:	8823      	ldrh	r3, [r4, #0]
 800f47e:	8ba1      	ldrh	r1, [r4, #28]
 800f480:	2b20      	cmp	r3, #32
 800f482:	d003      	beq.n	800f48c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 800f484:	f242 000b 	movw	r0, #8203	@ 0x200b
 800f488:	4283      	cmp	r3, r0
 800f48a:	d131      	bne.n	800f4f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 800f48c:	f1ba 0f00 	cmp.w	sl, #0
 800f490:	bf0a      	itet	eq
 800f492:	4688      	moveq	r8, r1
 800f494:	4650      	movne	r0, sl
 800f496:	2001      	moveq	r0, #1
 800f498:	440a      	add	r2, r1
 800f49a:	8b23      	ldrh	r3, [r4, #24]
 800f49c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800f4a0:	b292      	uxth	r2, r2
 800f4a2:	83a2      	strh	r2, [r4, #28]
 800f4a4:	4413      	add	r3, r2
 800f4a6:	f1b9 0f00 	cmp.w	r9, #0
 800f4aa:	d102      	bne.n	800f4b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 800f4ac:	2d00      	cmp	r5, #0
 800f4ae:	d042      	beq.n	800f536 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 800f4b0:	b300      	cbz	r0, 800f4f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 800f4b2:	8c21      	ldrh	r1, [r4, #32]
 800f4b4:	4419      	add	r1, r3
 800f4b6:	458c      	cmp	ip, r1
 800f4b8:	da37      	bge.n	800f52a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800f4ba:	8ae1      	ldrh	r1, [r4, #22]
 800f4bc:	2900      	cmp	r1, #0
 800f4be:	d034      	beq.n	800f52a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800f4c0:	4563      	cmp	r3, ip
 800f4c2:	dd8e      	ble.n	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f4c4:	e01d      	b.n	800f502 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 800f4c6:	8893      	ldrh	r3, [r2, #4]
 800f4c8:	9901      	ldr	r1, [sp, #4]
 800f4ca:	8023      	strh	r3, [r4, #0]
 800f4cc:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800f4d0:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800f4d4:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800f4d8:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800f4dc:	ea4b 0b00 	orr.w	fp, fp, r0
 800f4e0:	68e0      	ldr	r0, [r4, #12]
 800f4e2:	6803      	ldr	r3, [r0, #0]
 800f4e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f4e6:	4798      	blx	r3
 800f4e8:	eb0b 0200 	add.w	r2, fp, r0
 800f4ec:	b292      	uxth	r2, r2
 800f4ee:	e7c5      	b.n	800f47c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800f4f0:	2000      	movs	r0, #0
 800f4f2:	e7d1      	b.n	800f498 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 800f4f4:	4563      	cmp	r3, ip
 800f4f6:	f77f af74 	ble.w	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f4fa:	8ae3      	ldrh	r3, [r4, #22]
 800f4fc:	2b00      	cmp	r3, #0
 800f4fe:	f43f af70 	beq.w	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f502:	2301      	movs	r3, #1
 800f504:	8c22      	ldrh	r2, [r4, #32]
 800f506:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800f50a:	8be3      	ldrh	r3, [r4, #30]
 800f50c:	4413      	add	r3, r2
 800f50e:	83e3      	strh	r3, [r4, #30]
 800f510:	68e0      	ldr	r0, [r4, #12]
 800f512:	6803      	ldr	r3, [r0, #0]
 800f514:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f516:	4798      	blx	r3
 800f518:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800f51c:	4418      	add	r0, r3
 800f51e:	8a63      	ldrh	r3, [r4, #18]
 800f520:	1a18      	subs	r0, r3, r0
 800f522:	8260      	strh	r0, [r4, #18]
 800f524:	b005      	add	sp, #20
 800f526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f52a:	2300      	movs	r3, #0
 800f52c:	4611      	mov	r1, r2
 800f52e:	4620      	mov	r0, r4
 800f530:	f7ff ff0f 	bl	800f352 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f534:	e755      	b.n	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f536:	4563      	cmp	r3, ip
 800f538:	dd14      	ble.n	800f564 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 800f53a:	b117      	cbz	r7, 800f542 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 800f53c:	2301      	movs	r3, #1
 800f53e:	460a      	mov	r2, r1
 800f540:	e772      	b.n	800f428 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 800f542:	2e00      	cmp	r6, #0
 800f544:	f43f af4d 	beq.w	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f548:	2800      	cmp	r0, #0
 800f54a:	f47f af4a 	bne.w	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f54e:	f1ba 0f00 	cmp.w	sl, #0
 800f552:	d002      	beq.n	800f55a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 800f554:	2301      	movs	r3, #1
 800f556:	4642      	mov	r2, r8
 800f558:	e767      	b.n	800f42a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800f55a:	8ae3      	ldrh	r3, [r4, #22]
 800f55c:	2b00      	cmp	r3, #0
 800f55e:	f43f af40 	beq.w	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f562:	e7d5      	b.n	800f510 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800f564:	2800      	cmp	r0, #0
 800f566:	f47f af3c 	bne.w	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f56a:	f1ba 0f00 	cmp.w	sl, #0
 800f56e:	f43f af38 	beq.w	800f3e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f572:	2301      	movs	r3, #1
 800f574:	4642      	mov	r2, r8
 800f576:	e7da      	b.n	800f52e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

0800f578 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800f578:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f57a:	4605      	mov	r5, r0
 800f57c:	b08f      	sub	sp, #60	@ 0x3c
 800f57e:	4617      	mov	r7, r2
 800f580:	461c      	mov	r4, r3
 800f582:	460e      	mov	r6, r1
 800f584:	b1d1      	cbz	r1, 800f5bc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800f586:	681b      	ldr	r3, [r3, #0]
 800f588:	4620      	mov	r0, r4
 800f58a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f58c:	4798      	blx	r3
 800f58e:	4240      	negs	r0, r0
 800f590:	9603      	str	r6, [sp, #12]
 800f592:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800f596:	b200      	sxth	r0, r0
 800f598:	9700      	str	r7, [sp, #0]
 800f59a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800f59e:	4629      	mov	r1, r5
 800f5a0:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800f5a4:	2401      	movs	r4, #1
 800f5a6:	a805      	add	r0, sp, #20
 800f5a8:	f7ff fcaa 	bl	800ef00 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800f5ac:	a805      	add	r0, sp, #20
 800f5ae:	f7ff fee0 	bl	800f372 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800f5b2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800f5b6:	b163      	cbz	r3, 800f5d2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800f5b8:	3401      	adds	r4, #1
 800f5ba:	e7f7      	b.n	800f5ac <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800f5bc:	2401      	movs	r4, #1
 800f5be:	f002 fddb 	bl	8012178 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f5c2:	280a      	cmp	r0, #10
 800f5c4:	4628      	mov	r0, r5
 800f5c6:	bf08      	it	eq
 800f5c8:	3401      	addeq	r4, #1
 800f5ca:	f002 fdd5 	bl	8012178 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f5ce:	2800      	cmp	r0, #0
 800f5d0:	d1f7      	bne.n	800f5c2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800f5d2:	b2a0      	uxth	r0, r4
 800f5d4:	b00f      	add	sp, #60	@ 0x3c
 800f5d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f5d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800f5d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5dc:	b0e3      	sub	sp, #396	@ 0x18c
 800f5de:	461c      	mov	r4, r3
 800f5e0:	4683      	mov	fp, r0
 800f5e2:	4688      	mov	r8, r1
 800f5e4:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800f5e6:	2b00      	cmp	r3, #0
 800f5e8:	f000 8112 	beq.w	800f810 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f5ec:	6823      	ldr	r3, [r4, #0]
 800f5ee:	2b00      	cmp	r3, #0
 800f5f0:	f000 810e 	beq.w	800f810 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f5f4:	7ba3      	ldrb	r3, [r4, #14]
 800f5f6:	2b00      	cmp	r3, #0
 800f5f8:	f000 810a 	beq.w	800f810 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f5fc:	ad0a      	add	r5, sp, #40	@ 0x28
 800f5fe:	6810      	ldr	r0, [r2, #0]
 800f600:	6851      	ldr	r1, [r2, #4]
 800f602:	462b      	mov	r3, r5
 800f604:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800f608:	c303      	stmia	r3!, {r0, r1}
 800f60a:	2100      	movs	r1, #0
 800f60c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800f610:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800f614:	4628      	mov	r0, r5
 800f616:	910c      	str	r1, [sp, #48]	@ 0x30
 800f618:	a90c      	add	r1, sp, #48	@ 0x30
 800f61a:	79a2      	ldrb	r2, [r4, #6]
 800f61c:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800f620:	f7ff fced 	bl	800effe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f624:	a90c      	add	r1, sp, #48	@ 0x30
 800f626:	79a2      	ldrb	r2, [r4, #6]
 800f628:	4608      	mov	r0, r1
 800f62a:	f7ff fce8 	bl	800effe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f62e:	a817      	add	r0, sp, #92	@ 0x5c
 800f630:	f002 f98e 	bl	8011950 <_ZN8touchgfx12TextProviderC1Ev>
 800f634:	6820      	ldr	r0, [r4, #0]
 800f636:	6803      	ldr	r3, [r0, #0]
 800f638:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f63a:	4798      	blx	r3
 800f63c:	4606      	mov	r6, r0
 800f63e:	6820      	ldr	r0, [r4, #0]
 800f640:	6803      	ldr	r3, [r0, #0]
 800f642:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f644:	4798      	blx	r3
 800f646:	4633      	mov	r3, r6
 800f648:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800f64a:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800f64c:	9000      	str	r0, [sp, #0]
 800f64e:	a817      	add	r0, sp, #92	@ 0x5c
 800f650:	f002 f9d1 	bl	80119f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f654:	6820      	ldr	r0, [r4, #0]
 800f656:	f894 a004 	ldrb.w	sl, [r4, #4]
 800f65a:	6803      	ldr	r3, [r0, #0]
 800f65c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f65e:	4798      	blx	r3
 800f660:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800f664:	6823      	ldr	r3, [r4, #0]
 800f666:	4607      	mov	r7, r0
 800f668:	4406      	add	r6, r0
 800f66a:	a830      	add	r0, sp, #192	@ 0xc0
 800f66c:	f893 9009 	ldrb.w	r9, [r3, #9]
 800f670:	f002 f96e 	bl	8011950 <_ZN8touchgfx12TextProviderC1Ev>
 800f674:	7c23      	ldrb	r3, [r4, #16]
 800f676:	b17b      	cbz	r3, 800f698 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800f678:	6820      	ldr	r0, [r4, #0]
 800f67a:	6803      	ldr	r3, [r0, #0]
 800f67c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f67e:	4798      	blx	r3
 800f680:	9009      	str	r0, [sp, #36]	@ 0x24
 800f682:	6820      	ldr	r0, [r4, #0]
 800f684:	6802      	ldr	r2, [r0, #0]
 800f686:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800f688:	4790      	blx	r2
 800f68a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f68c:	9000      	str	r0, [sp, #0]
 800f68e:	a830      	add	r0, sp, #192	@ 0xc0
 800f690:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800f692:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800f694:	f002 f9af 	bl	80119f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f698:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800f69c:	a80e      	add	r0, sp, #56	@ 0x38
 800f69e:	7be2      	ldrb	r2, [r4, #15]
 800f6a0:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800f6a4:	1a8a      	subs	r2, r1, r2
 800f6a6:	7c21      	ldrb	r1, [r4, #16]
 800f6a8:	9103      	str	r1, [sp, #12]
 800f6aa:	b292      	uxth	r2, r2
 800f6ac:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800f6b0:	9102      	str	r1, [sp, #8]
 800f6b2:	6821      	ldr	r1, [r4, #0]
 800f6b4:	9101      	str	r1, [sp, #4]
 800f6b6:	7961      	ldrb	r1, [r4, #5]
 800f6b8:	9100      	str	r1, [sp, #0]
 800f6ba:	a930      	add	r1, sp, #192	@ 0xc0
 800f6bc:	f7ff fc20 	bl	800ef00 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800f6c0:	2e00      	cmp	r6, #0
 800f6c2:	dc5b      	bgt.n	800f77c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800f6c4:	af17      	add	r7, sp, #92	@ 0x5c
 800f6c6:	f04f 0900 	mov.w	r9, #0
 800f6ca:	7c23      	ldrb	r3, [r4, #16]
 800f6cc:	2b00      	cmp	r3, #0
 800f6ce:	f000 80b1 	beq.w	800f834 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800f6d2:	a80e      	add	r0, sp, #56	@ 0x38
 800f6d4:	f7ff fe4d 	bl	800f372 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800f6d8:	f1ba 0f00 	cmp.w	sl, #0
 800f6dc:	f000 80a5 	beq.w	800f82a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800f6e0:	7c23      	ldrb	r3, [r4, #16]
 800f6e2:	2264      	movs	r2, #100	@ 0x64
 800f6e4:	4639      	mov	r1, r7
 800f6e6:	a849      	add	r0, sp, #292	@ 0x124
 800f6e8:	9309      	str	r3, [sp, #36]	@ 0x24
 800f6ea:	f012 fd04 	bl	80220f6 <memcpy>
 800f6ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f6f0:	2b00      	cmp	r3, #0
 800f6f2:	f000 80a7 	beq.w	800f844 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800f6f6:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 800f6fa:	7922      	ldrb	r2, [r4, #4]
 800f6fc:	2a01      	cmp	r2, #1
 800f6fe:	f040 808a 	bne.w	800f816 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800f702:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 800f706:	1ac0      	subs	r0, r0, r3
 800f708:	2302      	movs	r3, #2
 800f70a:	fb90 f0f3 	sdiv	r0, r0, r3
 800f70e:	b200      	sxth	r0, r0
 800f710:	7c23      	ldrb	r3, [r4, #16]
 800f712:	2b00      	cmp	r3, #0
 800f714:	f000 808b 	beq.w	800f82e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800f718:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 800f71c:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 800f720:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800f724:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800f728:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 800f72c:	2100      	movs	r1, #0
 800f72e:	4410      	add	r0, r2
 800f730:	4642      	mov	r2, r8
 800f732:	b200      	sxth	r0, r0
 800f734:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800f738:	9000      	str	r0, [sp, #0]
 800f73a:	4658      	mov	r0, fp
 800f73c:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800f740:	f7ff fc8e 	bl	800f060 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800f744:	2800      	cmp	r0, #0
 800f746:	d163      	bne.n	800f810 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f748:	b2b2      	uxth	r2, r6
 800f74a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800f74e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800f752:	4413      	add	r3, r2
 800f754:	1a8a      	subs	r2, r1, r2
 800f756:	b21b      	sxth	r3, r3
 800f758:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 800f75c:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 800f760:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800f764:	2a00      	cmp	r2, #0
 800f766:	d153      	bne.n	800f810 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f768:	6822      	ldr	r2, [r4, #0]
 800f76a:	8869      	ldrh	r1, [r5, #2]
 800f76c:	7a12      	ldrb	r2, [r2, #8]
 800f76e:	1a9b      	subs	r3, r3, r2
 800f770:	88ea      	ldrh	r2, [r5, #6]
 800f772:	440a      	add	r2, r1
 800f774:	b212      	sxth	r2, r2
 800f776:	4293      	cmp	r3, r2
 800f778:	dda7      	ble.n	800f6ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800f77a:	e049      	b.n	800f810 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f77c:	7c23      	ldrb	r3, [r4, #16]
 800f77e:	444f      	add	r7, r9
 800f780:	b1c3      	cbz	r3, 800f7b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800f782:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 800f786:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800f78a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f78e:	443b      	add	r3, r7
 800f790:	4293      	cmp	r3, r2
 800f792:	da97      	bge.n	800f6c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800f794:	a80e      	add	r0, sp, #56	@ 0x38
 800f796:	f7ff fdec 	bl	800f372 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800f79a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 800f79e:	3b01      	subs	r3, #1
 800f7a0:	b29b      	uxth	r3, r3
 800f7a2:	454b      	cmp	r3, r9
 800f7a4:	9309      	str	r3, [sp, #36]	@ 0x24
 800f7a6:	d021      	beq.n	800f7ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800f7a8:	7961      	ldrb	r1, [r4, #5]
 800f7aa:	a817      	add	r0, sp, #92	@ 0x5c
 800f7ac:	f7f3 ffba 	bl	8003724 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f7b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f7b2:	e7f4      	b.n	800f79e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800f7b4:	fa1f f986 	uxth.w	r9, r6
 800f7b8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800f7bc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f7c0:	443b      	add	r3, r7
 800f7c2:	4293      	cmp	r3, r2
 800f7c4:	f6bf af7e 	bge.w	800f6c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800f7c8:	a817      	add	r0, sp, #92	@ 0x5c
 800f7ca:	f002 fcd5 	bl	8012178 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f7ce:	b1f8      	cbz	r0, 800f810 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f7d0:	280a      	cmp	r0, #10
 800f7d2:	d1f1      	bne.n	800f7b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800f7d4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800f7d8:	444b      	add	r3, r9
 800f7da:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800f7de:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800f7e2:	eba3 0309 	sub.w	r3, r3, r9
 800f7e6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800f7ea:	e7e5      	b.n	800f7b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800f7ec:	b2b3      	uxth	r3, r6
 800f7ee:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 800f7f2:	441a      	add	r2, r3
 800f7f4:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800f7f8:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 800f7fc:	1ad3      	subs	r3, r2, r3
 800f7fe:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800f802:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800f806:	b11b      	cbz	r3, 800f810 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f808:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 800f80c:	2b00      	cmp	r3, #0
 800f80e:	d0ba      	beq.n	800f786 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800f810:	b063      	add	sp, #396	@ 0x18c
 800f812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f816:	2a02      	cmp	r2, #2
 800f818:	d105      	bne.n	800f826 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800f81a:	7be2      	ldrb	r2, [r4, #15]
 800f81c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800f820:	1a80      	subs	r0, r0, r2
 800f822:	1ac0      	subs	r0, r0, r3
 800f824:	e773      	b.n	800f70e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800f826:	2000      	movs	r0, #0
 800f828:	e772      	b.n	800f710 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800f82a:	7be0      	ldrb	r0, [r4, #15]
 800f82c:	e770      	b.n	800f710 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800f82e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800f832:	e773      	b.n	800f71c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800f834:	f1ba 0f00 	cmp.w	sl, #0
 800f838:	d0f7      	beq.n	800f82a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800f83a:	2264      	movs	r2, #100	@ 0x64
 800f83c:	4639      	mov	r1, r7
 800f83e:	a849      	add	r0, sp, #292	@ 0x124
 800f840:	f012 fc59 	bl	80220f6 <memcpy>
 800f844:	2300      	movs	r3, #0
 800f846:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800f84a:	6821      	ldr	r1, [r4, #0]
 800f84c:	a849      	add	r0, sp, #292	@ 0x124
 800f84e:	f7ff fb9a 	bl	800ef86 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800f852:	b203      	sxth	r3, r0
 800f854:	e751      	b.n	800f6fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800f856 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800f856:	2b03      	cmp	r3, #3
 800f858:	d818      	bhi.n	800f88c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800f85a:	e8df f003 	tbb	[pc, r3]
 800f85e:	0602      	.short	0x0602
 800f860:	130d      	.short	0x130d
 800f862:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f866:	1850      	adds	r0, r2, r1
 800f868:	4770      	bx	lr
 800f86a:	8803      	ldrh	r3, [r0, #0]
 800f86c:	8880      	ldrh	r0, [r0, #4]
 800f86e:	4418      	add	r0, r3
 800f870:	b200      	sxth	r0, r0
 800f872:	1a80      	subs	r0, r0, r2
 800f874:	3801      	subs	r0, #1
 800f876:	4770      	bx	lr
 800f878:	8803      	ldrh	r3, [r0, #0]
 800f87a:	8880      	ldrh	r0, [r0, #4]
 800f87c:	4418      	add	r0, r3
 800f87e:	b200      	sxth	r0, r0
 800f880:	1a40      	subs	r0, r0, r1
 800f882:	e7f7      	b.n	800f874 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800f884:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f888:	4410      	add	r0, r2
 800f88a:	4770      	bx	lr
 800f88c:	2000      	movs	r0, #0
 800f88e:	4770      	bx	lr

0800f890 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800f890:	2b03      	cmp	r3, #3
 800f892:	d817      	bhi.n	800f8c4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800f894:	e8df f003 	tbb	[pc, r3]
 800f898:	10090602 	.word	0x10090602
 800f89c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f8a0:	1850      	adds	r0, r2, r1
 800f8a2:	4770      	bx	lr
 800f8a4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f8a8:	e7fa      	b.n	800f8a0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800f8aa:	8843      	ldrh	r3, [r0, #2]
 800f8ac:	88c0      	ldrh	r0, [r0, #6]
 800f8ae:	4418      	add	r0, r3
 800f8b0:	b200      	sxth	r0, r0
 800f8b2:	1a80      	subs	r0, r0, r2
 800f8b4:	3801      	subs	r0, #1
 800f8b6:	4770      	bx	lr
 800f8b8:	8843      	ldrh	r3, [r0, #2]
 800f8ba:	88c0      	ldrh	r0, [r0, #6]
 800f8bc:	4418      	add	r0, r3
 800f8be:	b200      	sxth	r0, r0
 800f8c0:	1a40      	subs	r0, r0, r1
 800f8c2:	e7f7      	b.n	800f8b4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800f8c4:	2000      	movs	r0, #0
 800f8c6:	4770      	bx	lr

0800f8c8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800f8c8:	4b01      	ldr	r3, [pc, #4]	@ (800f8d0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800f8ca:	2200      	movs	r2, #0
 800f8cc:	601a      	str	r2, [r3, #0]
 800f8ce:	4770      	bx	lr
 800f8d0:	20016b84 	.word	0x20016b84

0800f8d4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800f8d4:	4603      	mov	r3, r0
 800f8d6:	b1c8      	cbz	r0, 800f90c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800f8d8:	0c02      	lsrs	r2, r0, #16
 800f8da:	0412      	lsls	r2, r2, #16
 800f8dc:	b9a2      	cbnz	r2, 800f908 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800f8de:	0403      	lsls	r3, r0, #16
 800f8e0:	2010      	movs	r0, #16
 800f8e2:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800f8e6:	bf04      	itt	eq
 800f8e8:	021b      	lsleq	r3, r3, #8
 800f8ea:	3008      	addeq	r0, #8
 800f8ec:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800f8f0:	bf04      	itt	eq
 800f8f2:	011b      	lsleq	r3, r3, #4
 800f8f4:	3004      	addeq	r0, #4
 800f8f6:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800f8fa:	bf04      	itt	eq
 800f8fc:	009b      	lsleq	r3, r3, #2
 800f8fe:	3002      	addeq	r0, #2
 800f900:	2b00      	cmp	r3, #0
 800f902:	db04      	blt.n	800f90e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800f904:	3001      	adds	r0, #1
 800f906:	4770      	bx	lr
 800f908:	2000      	movs	r0, #0
 800f90a:	e7ea      	b.n	800f8e2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800f90c:	2020      	movs	r0, #32
 800f90e:	4770      	bx	lr

0800f910 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800f910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f914:	b087      	sub	sp, #28
 800f916:	460d      	mov	r5, r1
 800f918:	4616      	mov	r6, r2
 800f91a:	4698      	mov	r8, r3
 800f91c:	4601      	mov	r1, r0
 800f91e:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800f922:	b120      	cbz	r0, 800f92e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f924:	b11a      	cbz	r2, 800f92e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f926:	2d1f      	cmp	r5, #31
 800f928:	d801      	bhi.n	800f92e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f92a:	2b1f      	cmp	r3, #31
 800f92c:	d904      	bls.n	800f938 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800f92e:	2000      	movs	r0, #0
 800f930:	6038      	str	r0, [r7, #0]
 800f932:	b007      	add	sp, #28
 800f934:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f938:	b97d      	cbnz	r5, 800f95a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800f93a:	b143      	cbz	r3, 800f94e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800f93c:	4602      	mov	r2, r0
 800f93e:	462b      	mov	r3, r5
 800f940:	4641      	mov	r1, r8
 800f942:	4630      	mov	r0, r6
 800f944:	e9cd 4700 	strd	r4, r7, [sp]
 800f948:	f7ff ffe2 	bl	800f910 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f94c:	e7f1      	b.n	800f932 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f94e:	f04f 33ff 	mov.w	r3, #4294967295
 800f952:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800f956:	603b      	str	r3, [r7, #0]
 800f958:	e7eb      	b.n	800f932 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f95a:	fa32 fa05 	lsrs.w	sl, r2, r5
 800f95e:	d106      	bne.n	800f96e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800f960:	4346      	muls	r6, r0
 800f962:	fbb6 f0f4 	udiv	r0, r6, r4
 800f966:	fb04 6610 	mls	r6, r4, r0, r6
 800f96a:	603e      	str	r6, [r7, #0]
 800f96c:	e7e1      	b.n	800f932 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f96e:	2201      	movs	r2, #1
 800f970:	fa00 fb05 	lsl.w	fp, r0, r5
 800f974:	40aa      	lsls	r2, r5
 800f976:	fbbb f9f4 	udiv	r9, fp, r4
 800f97a:	3a01      	subs	r2, #1
 800f97c:	fb0a f309 	mul.w	r3, sl, r9
 800f980:	fb04 b919 	mls	r9, r4, r9, fp
 800f984:	4016      	ands	r6, r2
 800f986:	9303      	str	r3, [sp, #12]
 800f988:	4630      	mov	r0, r6
 800f98a:	f7ff ffa3 	bl	800f8d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f98e:	462b      	mov	r3, r5
 800f990:	460a      	mov	r2, r1
 800f992:	4601      	mov	r1, r0
 800f994:	4630      	mov	r0, r6
 800f996:	e9cd 4700 	strd	r4, r7, [sp]
 800f99a:	f7ff ffb9 	bl	800f910 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f99e:	4606      	mov	r6, r0
 800f9a0:	4648      	mov	r0, r9
 800f9a2:	eb05 0108 	add.w	r1, r5, r8
 800f9a6:	f7ff ff95 	bl	800f8d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f9aa:	ab05      	add	r3, sp, #20
 800f9ac:	464a      	mov	r2, r9
 800f9ae:	e9cd 4300 	strd	r4, r3, [sp]
 800f9b2:	4603      	mov	r3, r0
 800f9b4:	4650      	mov	r0, sl
 800f9b6:	f7ff ffab 	bl	800f910 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f9ba:	6839      	ldr	r1, [r7, #0]
 800f9bc:	9a05      	ldr	r2, [sp, #20]
 800f9be:	9b03      	ldr	r3, [sp, #12]
 800f9c0:	4411      	add	r1, r2
 800f9c2:	fbb1 f2f4 	udiv	r2, r1, r4
 800f9c6:	18d3      	adds	r3, r2, r3
 800f9c8:	fb04 1412 	mls	r4, r4, r2, r1
 800f9cc:	441e      	add	r6, r3
 800f9ce:	603c      	str	r4, [r7, #0]
 800f9d0:	4430      	add	r0, r6
 800f9d2:	e7ae      	b.n	800f932 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800f9d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800f9d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f9d8:	b085      	sub	sp, #20
 800f9da:	f1b0 0900 	subs.w	r9, r0, #0
 800f9de:	461d      	mov	r5, r3
 800f9e0:	4617      	mov	r7, r2
 800f9e2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800f9e4:	bfbb      	ittet	lt
 800f9e6:	f1c9 0900 	rsblt	r9, r9, #0
 800f9ea:	f04f 36ff 	movlt.w	r6, #4294967295
 800f9ee:	2601      	movge	r6, #1
 800f9f0:	6823      	ldrlt	r3, [r4, #0]
 800f9f2:	bfbc      	itt	lt
 800f9f4:	425b      	neglt	r3, r3
 800f9f6:	6023      	strlt	r3, [r4, #0]
 800f9f8:	2a00      	cmp	r2, #0
 800f9fa:	da04      	bge.n	800fa06 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800f9fc:	6823      	ldr	r3, [r4, #0]
 800f9fe:	4257      	negs	r7, r2
 800fa00:	4276      	negs	r6, r6
 800fa02:	425b      	negs	r3, r3
 800fa04:	6023      	str	r3, [r4, #0]
 800fa06:	2d00      	cmp	r5, #0
 800fa08:	4638      	mov	r0, r7
 800fa0a:	bfba      	itte	lt
 800fa0c:	426d      	neglt	r5, r5
 800fa0e:	f04f 38ff 	movlt.w	r8, #4294967295
 800fa12:	f04f 0801 	movge.w	r8, #1
 800fa16:	f7ff ff5d 	bl	800f8d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fa1a:	ab03      	add	r3, sp, #12
 800fa1c:	463a      	mov	r2, r7
 800fa1e:	e9cd 5300 	strd	r5, r3, [sp]
 800fa22:	4603      	mov	r3, r0
 800fa24:	4648      	mov	r0, r9
 800fa26:	f7ff ff73 	bl	800f910 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fa2a:	6823      	ldr	r3, [r4, #0]
 800fa2c:	9a03      	ldr	r2, [sp, #12]
 800fa2e:	4546      	cmp	r6, r8
 800fa30:	441a      	add	r2, r3
 800fa32:	fb92 f3f5 	sdiv	r3, r2, r5
 800fa36:	4418      	add	r0, r3
 800fa38:	fb05 2313 	mls	r3, r5, r3, r2
 800fa3c:	bf18      	it	ne
 800fa3e:	4240      	negne	r0, r0
 800fa40:	1c72      	adds	r2, r6, #1
 800fa42:	6023      	str	r3, [r4, #0]
 800fa44:	d105      	bne.n	800fa52 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800fa46:	2b00      	cmp	r3, #0
 800fa48:	f1c3 0200 	rsb	r2, r3, #0
 800fa4c:	db0b      	blt.n	800fa66 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800fa4e:	6022      	str	r2, [r4, #0]
 800fa50:	e006      	b.n	800fa60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fa52:	2e01      	cmp	r6, #1
 800fa54:	d104      	bne.n	800fa60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fa56:	2b00      	cmp	r3, #0
 800fa58:	da02      	bge.n	800fa60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fa5a:	442b      	add	r3, r5
 800fa5c:	3801      	subs	r0, #1
 800fa5e:	6023      	str	r3, [r4, #0]
 800fa60:	b005      	add	sp, #20
 800fa62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fa66:	3801      	subs	r0, #1
 800fa68:	1b52      	subs	r2, r2, r5
 800fa6a:	e7f0      	b.n	800fa4e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800fa6c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800fa6c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800fa70:	4c1c      	ldr	r4, [pc, #112]	@ (800fae4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800fa72:	4605      	mov	r5, r0
 800fa74:	6807      	ldr	r7, [r0, #0]
 800fa76:	69a3      	ldr	r3, [r4, #24]
 800fa78:	b92b      	cbnz	r3, 800fa86 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800fa7a:	6840      	ldr	r0, [r0, #4]
 800fa7c:	e9c5 7000 	strd	r7, r0, [r5]
 800fa80:	b004      	add	sp, #16
 800fa82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fa86:	f04f 0802 	mov.w	r8, #2
 800fa8a:	68a2      	ldr	r2, [r4, #8]
 800fa8c:	ae04      	add	r6, sp, #16
 800fa8e:	6820      	ldr	r0, [r4, #0]
 800fa90:	fb93 f1f8 	sdiv	r1, r3, r8
 800fa94:	440a      	add	r2, r1
 800fa96:	69e1      	ldr	r1, [r4, #28]
 800fa98:	f846 2d04 	str.w	r2, [r6, #-4]!
 800fa9c:	463a      	mov	r2, r7
 800fa9e:	9600      	str	r6, [sp, #0]
 800faa0:	f7ff ff98 	bl	800f9d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800faa4:	69a3      	ldr	r3, [r4, #24]
 800faa6:	4607      	mov	r7, r0
 800faa8:	686a      	ldr	r2, [r5, #4]
 800faaa:	6a21      	ldr	r1, [r4, #32]
 800faac:	9600      	str	r6, [sp, #0]
 800faae:	6860      	ldr	r0, [r4, #4]
 800fab0:	f7ff ff90 	bl	800f9d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fab4:	69a3      	ldr	r3, [r4, #24]
 800fab6:	6962      	ldr	r2, [r4, #20]
 800fab8:	4407      	add	r7, r0
 800faba:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800fabc:	9600      	str	r6, [sp, #0]
 800fabe:	68e0      	ldr	r0, [r4, #12]
 800fac0:	fb93 f8f8 	sdiv	r8, r3, r8
 800fac4:	4442      	add	r2, r8
 800fac6:	9203      	str	r2, [sp, #12]
 800fac8:	682a      	ldr	r2, [r5, #0]
 800faca:	f7ff ff83 	bl	800f9d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800face:	4680      	mov	r8, r0
 800fad0:	9600      	str	r6, [sp, #0]
 800fad2:	69a3      	ldr	r3, [r4, #24]
 800fad4:	686a      	ldr	r2, [r5, #4]
 800fad6:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800fad8:	6920      	ldr	r0, [r4, #16]
 800fada:	f7ff ff7b 	bl	800f9d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fade:	4440      	add	r0, r8
 800fae0:	e7cc      	b.n	800fa7c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800fae2:	bf00      	nop
 800fae4:	20016b88 	.word	0x20016b88

0800fae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800fae8:	4b07      	ldr	r3, [pc, #28]	@ (800fb08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800faea:	781b      	ldrb	r3, [r3, #0]
 800faec:	2b01      	cmp	r3, #1
 800faee:	d109      	bne.n	800fb04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800faf0:	f9b1 3000 	ldrsh.w	r3, [r1]
 800faf4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800faf8:	8003      	strh	r3, [r0, #0]
 800fafa:	4b04      	ldr	r3, [pc, #16]	@ (800fb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800fafc:	881b      	ldrh	r3, [r3, #0]
 800fafe:	3b01      	subs	r3, #1
 800fb00:	1a9b      	subs	r3, r3, r2
 800fb02:	800b      	strh	r3, [r1, #0]
 800fb04:	4770      	bx	lr
 800fb06:	bf00      	nop
 800fb08:	20016b6c 	.word	0x20016b6c
 800fb0c:	20016b68 	.word	0x20016b68

0800fb10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800fb10:	4b07      	ldr	r3, [pc, #28]	@ (800fb30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800fb12:	b510      	push	{r4, lr}
 800fb14:	781b      	ldrb	r3, [r3, #0]
 800fb16:	2b01      	cmp	r3, #1
 800fb18:	d108      	bne.n	800fb2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800fb1a:	4b06      	ldr	r3, [pc, #24]	@ (800fb34 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800fb1c:	880c      	ldrh	r4, [r1, #0]
 800fb1e:	881b      	ldrh	r3, [r3, #0]
 800fb20:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fb24:	3b01      	subs	r3, #1
 800fb26:	1b1b      	subs	r3, r3, r4
 800fb28:	8003      	strh	r3, [r0, #0]
 800fb2a:	800a      	strh	r2, [r1, #0]
 800fb2c:	bd10      	pop	{r4, pc}
 800fb2e:	bf00      	nop
 800fb30:	20016b6c 	.word	0x20016b6c
 800fb34:	20016b68 	.word	0x20016b68

0800fb38 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800fb38:	4b0a      	ldr	r3, [pc, #40]	@ (800fb64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800fb3a:	b510      	push	{r4, lr}
 800fb3c:	781b      	ldrb	r3, [r3, #0]
 800fb3e:	2b01      	cmp	r3, #1
 800fb40:	d10e      	bne.n	800fb60 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800fb42:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800fb46:	8843      	ldrh	r3, [r0, #2]
 800fb48:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fb4c:	18ca      	adds	r2, r1, r3
 800fb4e:	4b06      	ldr	r3, [pc, #24]	@ (800fb68 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800fb50:	8044      	strh	r4, [r0, #2]
 800fb52:	881b      	ldrh	r3, [r3, #0]
 800fb54:	1a9b      	subs	r3, r3, r2
 800fb56:	8003      	strh	r3, [r0, #0]
 800fb58:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fb5c:	8081      	strh	r1, [r0, #4]
 800fb5e:	80c3      	strh	r3, [r0, #6]
 800fb60:	bd10      	pop	{r4, pc}
 800fb62:	bf00      	nop
 800fb64:	20016b6c 	.word	0x20016b6c
 800fb68:	20016b68 	.word	0x20016b68

0800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800fb6c:	4b08      	ldr	r3, [pc, #32]	@ (800fb90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800fb6e:	781b      	ldrb	r3, [r3, #0]
 800fb70:	2b01      	cmp	r3, #1
 800fb72:	d10c      	bne.n	800fb8e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800fb74:	8803      	ldrh	r3, [r0, #0]
 800fb76:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800fb7a:	8842      	ldrh	r2, [r0, #2]
 800fb7c:	8002      	strh	r2, [r0, #0]
 800fb7e:	185a      	adds	r2, r3, r1
 800fb80:	4b04      	ldr	r3, [pc, #16]	@ (800fb94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800fb82:	881b      	ldrh	r3, [r3, #0]
 800fb84:	1a9b      	subs	r3, r3, r2
 800fb86:	8043      	strh	r3, [r0, #2]
 800fb88:	88c3      	ldrh	r3, [r0, #6]
 800fb8a:	80c1      	strh	r1, [r0, #6]
 800fb8c:	8083      	strh	r3, [r0, #4]
 800fb8e:	4770      	bx	lr
 800fb90:	20016b6c 	.word	0x20016b6c
 800fb94:	20016b68 	.word	0x20016b68

0800fb98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800fb98:	4b07      	ldr	r3, [pc, #28]	@ (800fbb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800fb9a:	b510      	push	{r4, lr}
 800fb9c:	781b      	ldrb	r3, [r3, #0]
 800fb9e:	2b01      	cmp	r3, #1
 800fba0:	d108      	bne.n	800fbb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800fba2:	f9b1 3000 	ldrsh.w	r3, [r1]
 800fba6:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fbaa:	8003      	strh	r3, [r0, #0]
 800fbac:	8893      	ldrh	r3, [r2, #4]
 800fbae:	3b01      	subs	r3, #1
 800fbb0:	1b1b      	subs	r3, r3, r4
 800fbb2:	800b      	strh	r3, [r1, #0]
 800fbb4:	bd10      	pop	{r4, pc}
 800fbb6:	bf00      	nop
 800fbb8:	20016b6c 	.word	0x20016b6c

0800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800fbbc:	4b0a      	ldr	r3, [pc, #40]	@ (800fbe8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800fbbe:	460a      	mov	r2, r1
 800fbc0:	b510      	push	{r4, lr}
 800fbc2:	781b      	ldrb	r3, [r3, #0]
 800fbc4:	2b01      	cmp	r3, #1
 800fbc6:	d10d      	bne.n	800fbe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800fbc8:	8881      	ldrh	r1, [r0, #4]
 800fbca:	8803      	ldrh	r3, [r0, #0]
 800fbcc:	440b      	add	r3, r1
 800fbce:	4601      	mov	r1, r0
 800fbd0:	3b01      	subs	r3, #1
 800fbd2:	f821 3b02 	strh.w	r3, [r1], #2
 800fbd6:	f7ff ffdf 	bl	800fb98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800fbda:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fbde:	88c2      	ldrh	r2, [r0, #6]
 800fbe0:	80c3      	strh	r3, [r0, #6]
 800fbe2:	8082      	strh	r2, [r0, #4]
 800fbe4:	bd10      	pop	{r4, pc}
 800fbe6:	bf00      	nop
 800fbe8:	20016b6c 	.word	0x20016b6c

0800fbec <_ZN8touchgfx11Application13requestRedrawEv>:
 800fbec:	4b06      	ldr	r3, [pc, #24]	@ (800fc08 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800fbee:	2100      	movs	r1, #0
 800fbf0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fbf4:	4b05      	ldr	r3, [pc, #20]	@ (800fc0c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800fbf6:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800fbfa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fbfe:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800fc02:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800fc06:	4770      	bx	lr
 800fc08:	20016b68 	.word	0x20016b68
 800fc0c:	20016b6a 	.word	0x20016b6a

0800fc10 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800fc10:	4b03      	ldr	r3, [pc, #12]	@ (800fc20 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800fc12:	6818      	ldr	r0, [r3, #0]
 800fc14:	b110      	cbz	r0, 800fc1c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800fc16:	6803      	ldr	r3, [r0, #0]
 800fc18:	699b      	ldr	r3, [r3, #24]
 800fc1a:	4718      	bx	r3
 800fc1c:	4770      	bx	lr
 800fc1e:	bf00      	nop
 800fc20:	20016bb8 	.word	0x20016bb8

0800fc24 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800fc24:	4770      	bx	lr
	...

0800fc28 <_ZN8touchgfx11Application4drawEv>:
 800fc28:	4b09      	ldr	r3, [pc, #36]	@ (800fc50 <_ZN8touchgfx11Application4drawEv+0x28>)
 800fc2a:	b507      	push	{r0, r1, r2, lr}
 800fc2c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fc30:	2100      	movs	r1, #0
 800fc32:	4b08      	ldr	r3, [pc, #32]	@ (800fc54 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800fc34:	9100      	str	r1, [sp, #0]
 800fc36:	4669      	mov	r1, sp
 800fc38:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fc3c:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fc40:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fc44:	6803      	ldr	r3, [r0, #0]
 800fc46:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800fc48:	4798      	blx	r3
 800fc4a:	b003      	add	sp, #12
 800fc4c:	f85d fb04 	ldr.w	pc, [sp], #4
 800fc50:	20016b68 	.word	0x20016b68
 800fc54:	20016b6a 	.word	0x20016b6a

0800fc58 <_ZN8touchgfx11Application10invalidateEv>:
 800fc58:	4b09      	ldr	r3, [pc, #36]	@ (800fc80 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800fc5a:	b082      	sub	sp, #8
 800fc5c:	2100      	movs	r1, #0
 800fc5e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fc62:	4b08      	ldr	r3, [pc, #32]	@ (800fc84 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800fc64:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fc68:	aa02      	add	r2, sp, #8
 800fc6a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fc6e:	9100      	str	r1, [sp, #0]
 800fc70:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fc74:	6803      	ldr	r3, [r0, #0]
 800fc76:	e912 0006 	ldmdb	r2, {r1, r2}
 800fc7a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800fc7c:	b002      	add	sp, #8
 800fc7e:	4718      	bx	r3
 800fc80:	20016b68 	.word	0x20016b68
 800fc84:	20016b6a 	.word	0x20016b6a

0800fc88 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800fc88:	4b03      	ldr	r3, [pc, #12]	@ (800fc98 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800fc8a:	6818      	ldr	r0, [r3, #0]
 800fc8c:	b110      	cbz	r0, 800fc94 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800fc8e:	6803      	ldr	r3, [r0, #0]
 800fc90:	69db      	ldr	r3, [r3, #28]
 800fc92:	4718      	bx	r3
 800fc94:	4770      	bx	lr
 800fc96:	bf00      	nop
 800fc98:	20016bb8 	.word	0x20016bb8

0800fc9c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800fc9c:	4b03      	ldr	r3, [pc, #12]	@ (800fcac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800fc9e:	6818      	ldr	r0, [r3, #0]
 800fca0:	b110      	cbz	r0, 800fca8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800fca2:	6803      	ldr	r3, [r0, #0]
 800fca4:	6a1b      	ldr	r3, [r3, #32]
 800fca6:	4718      	bx	r3
 800fca8:	4770      	bx	lr
 800fcaa:	bf00      	nop
 800fcac:	20016bb8 	.word	0x20016bb8

0800fcb0 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800fcb0:	2300      	movs	r3, #0
 800fcb2:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800fcb6:	4770      	bx	lr

0800fcb8 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800fcb8:	4b03      	ldr	r3, [pc, #12]	@ (800fcc8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800fcba:	6818      	ldr	r0, [r3, #0]
 800fcbc:	b110      	cbz	r0, 800fcc4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800fcbe:	6803      	ldr	r3, [r0, #0]
 800fcc0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fcc2:	4718      	bx	r3
 800fcc4:	4770      	bx	lr
 800fcc6:	bf00      	nop
 800fcc8:	20016bb8 	.word	0x20016bb8

0800fccc <_ZN8touchgfx11ApplicationD1Ev>:
 800fccc:	4770      	bx	lr

0800fcce <_ZN8touchgfx11ApplicationD0Ev>:
 800fcce:	b510      	push	{r4, lr}
 800fcd0:	4604      	mov	r4, r0
 800fcd2:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800fcd6:	f011 f913 	bl	8020f00 <_ZdlPvj>
 800fcda:	4620      	mov	r0, r4
 800fcdc:	bd10      	pop	{r4, pc}

0800fcde <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800fcde:	b510      	push	{r4, lr}
 800fce0:	f9b1 4000 	ldrsh.w	r4, [r1]
 800fce4:	888a      	ldrh	r2, [r1, #4]
 800fce6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800fcea:	4422      	add	r2, r4
 800fcec:	b212      	sxth	r2, r2
 800fcee:	4293      	cmp	r3, r2
 800fcf0:	da15      	bge.n	800fd1e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fcf2:	8882      	ldrh	r2, [r0, #4]
 800fcf4:	4413      	add	r3, r2
 800fcf6:	b21b      	sxth	r3, r3
 800fcf8:	429c      	cmp	r4, r3
 800fcfa:	da10      	bge.n	800fd1e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fcfc:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800fd00:	88c9      	ldrh	r1, [r1, #6]
 800fd02:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800fd06:	4419      	add	r1, r3
 800fd08:	b209      	sxth	r1, r1
 800fd0a:	428a      	cmp	r2, r1
 800fd0c:	da07      	bge.n	800fd1e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fd0e:	88c0      	ldrh	r0, [r0, #6]
 800fd10:	4410      	add	r0, r2
 800fd12:	b200      	sxth	r0, r0
 800fd14:	4283      	cmp	r3, r0
 800fd16:	bfac      	ite	ge
 800fd18:	2000      	movge	r0, #0
 800fd1a:	2001      	movlt	r0, #1
 800fd1c:	bd10      	pop	{r4, pc}
 800fd1e:	2000      	movs	r0, #0
 800fd20:	e7fc      	b.n	800fd1c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800fd22 <_ZN8touchgfx4Rect10restrictToEss>:
 800fd22:	f9b0 3000 	ldrsh.w	r3, [r0]
 800fd26:	2b00      	cmp	r3, #0
 800fd28:	b510      	push	{r4, lr}
 800fd2a:	da04      	bge.n	800fd36 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800fd2c:	8884      	ldrh	r4, [r0, #4]
 800fd2e:	4423      	add	r3, r4
 800fd30:	8083      	strh	r3, [r0, #4]
 800fd32:	2300      	movs	r3, #0
 800fd34:	8003      	strh	r3, [r0, #0]
 800fd36:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fd3a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fd3e:	1b09      	subs	r1, r1, r4
 800fd40:	428b      	cmp	r3, r1
 800fd42:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800fd46:	bfc8      	it	gt
 800fd48:	8081      	strhgt	r1, [r0, #4]
 800fd4a:	2b00      	cmp	r3, #0
 800fd4c:	da04      	bge.n	800fd58 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800fd4e:	88c1      	ldrh	r1, [r0, #6]
 800fd50:	440b      	add	r3, r1
 800fd52:	80c3      	strh	r3, [r0, #6]
 800fd54:	2300      	movs	r3, #0
 800fd56:	8043      	strh	r3, [r0, #2]
 800fd58:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800fd5c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800fd60:	1a52      	subs	r2, r2, r1
 800fd62:	4293      	cmp	r3, r2
 800fd64:	bfc8      	it	gt
 800fd66:	80c2      	strhgt	r2, [r0, #6]
 800fd68:	bd10      	pop	{r4, pc}
	...

0800fd6c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800fd6c:	4b10      	ldr	r3, [pc, #64]	@ (800fdb0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800fd6e:	b510      	push	{r4, lr}
 800fd70:	460c      	mov	r4, r1
 800fd72:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fd76:	4b0f      	ldr	r3, [pc, #60]	@ (800fdb4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800fd78:	4620      	mov	r0, r4
 800fd7a:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fd7e:	f7ff ffd0 	bl	800fd22 <_ZN8touchgfx4Rect10restrictToEss>
 800fd82:	4b0d      	ldr	r3, [pc, #52]	@ (800fdb8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800fd84:	6818      	ldr	r0, [r3, #0]
 800fd86:	b190      	cbz	r0, 800fdae <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800fd88:	6803      	ldr	r3, [r0, #0]
 800fd8a:	4621      	mov	r1, r4
 800fd8c:	689b      	ldr	r3, [r3, #8]
 800fd8e:	4798      	blx	r3
 800fd90:	4b0a      	ldr	r3, [pc, #40]	@ (800fdbc <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800fd92:	6818      	ldr	r0, [r3, #0]
 800fd94:	b118      	cbz	r0, 800fd9e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800fd96:	6803      	ldr	r3, [r0, #0]
 800fd98:	4621      	mov	r1, r4
 800fd9a:	689b      	ldr	r3, [r3, #8]
 800fd9c:	4798      	blx	r3
 800fd9e:	4b08      	ldr	r3, [pc, #32]	@ (800fdc0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800fda0:	4621      	mov	r1, r4
 800fda2:	6818      	ldr	r0, [r3, #0]
 800fda4:	6803      	ldr	r3, [r0, #0]
 800fda6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fdaa:	69db      	ldr	r3, [r3, #28]
 800fdac:	4718      	bx	r3
 800fdae:	bd10      	pop	{r4, pc}
 800fdb0:	20016b6a 	.word	0x20016b6a
 800fdb4:	20016b68 	.word	0x20016b68
 800fdb8:	20016bb8 	.word	0x20016bb8
 800fdbc:	20016bb4 	.word	0x20016bb4
 800fdc0:	20016b74 	.word	0x20016b74

0800fdc4 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800fdc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fdc6:	4606      	mov	r6, r0
 800fdc8:	4608      	mov	r0, r1
 800fdca:	460f      	mov	r7, r1
 800fdcc:	f7f9 fffb 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fdd0:	b9e8      	cbnz	r0, 800fe0e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fdd2:	f9b7 5000 	ldrsh.w	r5, [r7]
 800fdd6:	f9b6 4000 	ldrsh.w	r4, [r6]
 800fdda:	42a5      	cmp	r5, r4
 800fddc:	db17      	blt.n	800fe0e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fdde:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800fde2:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800fde6:	429a      	cmp	r2, r3
 800fde8:	db11      	blt.n	800fe0e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fdea:	88b9      	ldrh	r1, [r7, #4]
 800fdec:	440d      	add	r5, r1
 800fdee:	88b1      	ldrh	r1, [r6, #4]
 800fdf0:	440c      	add	r4, r1
 800fdf2:	b22d      	sxth	r5, r5
 800fdf4:	b224      	sxth	r4, r4
 800fdf6:	42a5      	cmp	r5, r4
 800fdf8:	dc09      	bgt.n	800fe0e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fdfa:	88f8      	ldrh	r0, [r7, #6]
 800fdfc:	4410      	add	r0, r2
 800fdfe:	88f2      	ldrh	r2, [r6, #6]
 800fe00:	4413      	add	r3, r2
 800fe02:	b200      	sxth	r0, r0
 800fe04:	b21b      	sxth	r3, r3
 800fe06:	4298      	cmp	r0, r3
 800fe08:	bfcc      	ite	gt
 800fe0a:	2000      	movgt	r0, #0
 800fe0c:	2001      	movle	r0, #1
 800fe0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800fe10 <_ZN8touchgfx11Application11getInstanceEv>:
 800fe10:	4b01      	ldr	r3, [pc, #4]	@ (800fe18 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800fe12:	6818      	ldr	r0, [r3, #0]
 800fe14:	4770      	bx	lr
 800fe16:	bf00      	nop
 800fe18:	20016bc8 	.word	0x20016bc8

0800fe1c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800fe1c:	2300      	movs	r3, #0
 800fe1e:	b510      	push	{r4, lr}
 800fe20:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800fe24:	4604      	mov	r4, r0
 800fe26:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800fe2a:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800fe2e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800fe32:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800fe36:	429a      	cmp	r2, r3
 800fe38:	d90e      	bls.n	800fe58 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800fe3a:	18e2      	adds	r2, r4, r3
 800fe3c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800fe40:	b122      	cbz	r2, 800fe4c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800fe42:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800fe46:	6803      	ldr	r3, [r0, #0]
 800fe48:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800fe4a:	4798      	blx	r3
 800fe4c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800fe50:	3301      	adds	r3, #1
 800fe52:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800fe56:	e7ea      	b.n	800fe2e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800fe58:	bd10      	pop	{r4, pc}

0800fe5a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800fe5a:	2300      	movs	r3, #0
 800fe5c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800fe60:	30a4      	adds	r0, #164	@ 0xa4
 800fe62:	f820 3c24 	strh.w	r3, [r0, #-36]
 800fe66:	f802 3b01 	strb.w	r3, [r2], #1
 800fe6a:	4282      	cmp	r2, r0
 800fe6c:	d1fb      	bne.n	800fe66 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800fe6e:	4770      	bx	lr

0800fe70 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800fe70:	b570      	push	{r4, r5, r6, lr}
 800fe72:	4c0b      	ldr	r4, [pc, #44]	@ (800fea0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800fe74:	4605      	mov	r5, r0
 800fe76:	460e      	mov	r6, r1
 800fe78:	6820      	ldr	r0, [r4, #0]
 800fe7a:	b110      	cbz	r0, 800fe82 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800fe7c:	6803      	ldr	r3, [r0, #0]
 800fe7e:	695b      	ldr	r3, [r3, #20]
 800fe80:	4798      	blx	r3
 800fe82:	1d28      	adds	r0, r5, #4
 800fe84:	f7ff ffe9 	bl	800fe5a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800fe88:	6026      	str	r6, [r4, #0]
 800fe8a:	6833      	ldr	r3, [r6, #0]
 800fe8c:	4630      	mov	r0, r6
 800fe8e:	68db      	ldr	r3, [r3, #12]
 800fe90:	4798      	blx	r3
 800fe92:	682b      	ldr	r3, [r5, #0]
 800fe94:	4628      	mov	r0, r5
 800fe96:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fe98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fe9c:	4718      	bx	r3
 800fe9e:	bf00      	nop
 800fea0:	20016bb8 	.word	0x20016bb8

0800fea4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800fea4:	2300      	movs	r3, #0
 800fea6:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800feaa:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800feae:	461a      	mov	r2, r3
 800feb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800feb2:	461c      	mov	r4, r3
 800feb4:	461d      	mov	r5, r3
 800feb6:	459c      	cmp	ip, r3
 800feb8:	dd1a      	ble.n	800fef0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800feba:	18c6      	adds	r6, r0, r3
 800febc:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800fec0:	b16e      	cbz	r6, 800fede <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800fec2:	429a      	cmp	r2, r3
 800fec4:	d008      	beq.n	800fed8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800fec6:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800feca:	fa1f fe82 	uxth.w	lr, r2
 800fece:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800fed2:	1887      	adds	r7, r0, r2
 800fed4:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800fed8:	3201      	adds	r2, #1
 800feda:	3301      	adds	r3, #1
 800fedc:	e7eb      	b.n	800feb6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800fede:	4299      	cmp	r1, r3
 800fee0:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800fee4:	bfa8      	it	ge
 800fee6:	3501      	addge	r5, #1
 800fee8:	429e      	cmp	r6, r3
 800feea:	bfc8      	it	gt
 800feec:	3401      	addgt	r4, #1
 800feee:	e7f4      	b.n	800feda <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800fef0:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800fef4:	1b49      	subs	r1, r1, r5
 800fef6:	1b1b      	subs	r3, r3, r4
 800fef8:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800fefc:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800ff00:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800ff04:	4293      	cmp	r3, r2
 800ff06:	dd03      	ble.n	800ff10 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800ff08:	3b01      	subs	r3, #1
 800ff0a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800ff0e:	e7f7      	b.n	800ff00 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800ff10:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800ff14 <_ZN8touchgfx11Application15handleTickEventEv>:
 800ff14:	b570      	push	{r4, r5, r6, lr}
 800ff16:	4d16      	ldr	r5, [pc, #88]	@ (800ff70 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800ff18:	4604      	mov	r4, r0
 800ff1a:	6828      	ldr	r0, [r5, #0]
 800ff1c:	b140      	cbz	r0, 800ff30 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ff1e:	7a03      	ldrb	r3, [r0, #8]
 800ff20:	b933      	cbnz	r3, 800ff30 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ff22:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800ff26:	6803      	ldr	r3, [r0, #0]
 800ff28:	689b      	ldr	r3, [r3, #8]
 800ff2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ff2e:	4718      	bx	r3
 800ff30:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800ff34:	4e0f      	ldr	r6, [pc, #60]	@ (800ff74 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800ff36:	b973      	cbnz	r3, 800ff56 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ff38:	b168      	cbz	r0, 800ff56 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ff3a:	7a03      	ldrb	r3, [r0, #8]
 800ff3c:	b15b      	cbz	r3, 800ff56 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ff3e:	6830      	ldr	r0, [r6, #0]
 800ff40:	b110      	cbz	r0, 800ff48 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800ff42:	6803      	ldr	r3, [r0, #0]
 800ff44:	691b      	ldr	r3, [r3, #16]
 800ff46:	4798      	blx	r3
 800ff48:	6828      	ldr	r0, [r5, #0]
 800ff4a:	6803      	ldr	r3, [r0, #0]
 800ff4c:	68db      	ldr	r3, [r3, #12]
 800ff4e:	4798      	blx	r3
 800ff50:	2301      	movs	r3, #1
 800ff52:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800ff56:	3404      	adds	r4, #4
 800ff58:	4620      	mov	r0, r4
 800ff5a:	f7ff ff5f 	bl	800fe1c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800ff5e:	4620      	mov	r0, r4
 800ff60:	f7ff ffa0 	bl	800fea4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800ff64:	6830      	ldr	r0, [r6, #0]
 800ff66:	b110      	cbz	r0, 800ff6e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800ff68:	6803      	ldr	r3, [r0, #0]
 800ff6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ff6c:	e7dd      	b.n	800ff2a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800ff6e:	bd70      	pop	{r4, r5, r6, pc}
 800ff70:	20016bbc 	.word	0x20016bbc
 800ff74:	20016bb8 	.word	0x20016bb8

0800ff78 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800ff78:	4603      	mov	r3, r0
 800ff7a:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800ff7e:	2200      	movs	r2, #0
 800ff80:	801a      	strh	r2, [r3, #0]
 800ff82:	3308      	adds	r3, #8
 800ff84:	f823 2c06 	strh.w	r2, [r3, #-6]
 800ff88:	f823 2c04 	strh.w	r2, [r3, #-4]
 800ff8c:	f823 2c02 	strh.w	r2, [r3, #-2]
 800ff90:	428b      	cmp	r3, r1
 800ff92:	d1f5      	bne.n	800ff80 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800ff94:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800ff98:	4770      	bx	lr
	...

0800ff9c <_ZN8touchgfx11ApplicationC1Ev>:
 800ff9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ff9e:	4b1d      	ldr	r3, [pc, #116]	@ (8010014 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800ffa0:	4606      	mov	r6, r0
 800ffa2:	4604      	mov	r4, r0
 800ffa4:	2500      	movs	r5, #0
 800ffa6:	f846 3b04 	str.w	r3, [r6], #4
 800ffaa:	22a8      	movs	r2, #168	@ 0xa8
 800ffac:	2100      	movs	r1, #0
 800ffae:	4630      	mov	r0, r6
 800ffb0:	f011 ffac 	bl	8021f0c <memset>
 800ffb4:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800ffb8:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800ffbc:	4f16      	ldr	r7, [pc, #88]	@ (8010018 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800ffbe:	f7ff ffdb 	bl	800ff78 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ffc2:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800ffc6:	f7ff ffd7 	bl	800ff78 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ffca:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800ffce:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800ffd2:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800ffd6:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800ffda:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800ffde:	490f      	ldr	r1, [pc, #60]	@ (801001c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800ffe0:	480f      	ldr	r0, [pc, #60]	@ (8010020 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800ffe2:	f010 fb71 	bl	80206c8 <CRC_Lock>
 800ffe6:	4b0f      	ldr	r3, [pc, #60]	@ (8010024 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800ffe8:	b158      	cbz	r0, 8010002 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800ffea:	801d      	strh	r5, [r3, #0]
 800ffec:	2300      	movs	r3, #0
 800ffee:	4a0e      	ldr	r2, [pc, #56]	@ (8010028 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800fff0:	4630      	mov	r0, r6
 800fff2:	6013      	str	r3, [r2, #0]
 800fff4:	4a0d      	ldr	r2, [pc, #52]	@ (801002c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800fff6:	603b      	str	r3, [r7, #0]
 800fff8:	6013      	str	r3, [r2, #0]
 800fffa:	f7ff ff2e 	bl	800fe5a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800fffe:	4620      	mov	r0, r4
 8010000:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010002:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8010006:	2002      	movs	r0, #2
 8010008:	801a      	strh	r2, [r3, #0]
 801000a:	6038      	str	r0, [r7, #0]
 801000c:	f001 fb26 	bl	801165c <_ZN8touchgfx6Screen4drawEv>
 8010010:	e7ec      	b.n	800ffec <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8010012:	bf00      	nop
 8010014:	08024914 	.word	0x08024914
 8010018:	20016bb8 	.word	0x20016bb8
 801001c:	b5e8b5cd 	.word	0xb5e8b5cd
 8010020:	f407a5c2 	.word	0xf407a5c2
 8010024:	20000044 	.word	0x20000044
 8010028:	20016bc8 	.word	0x20016bc8
 801002c:	20016bbc 	.word	0x20016bbc

08010030 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010030:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 8010034:	3b01      	subs	r3, #1
 8010036:	b29b      	uxth	r3, r3
 8010038:	428b      	cmp	r3, r1
 801003a:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 801003e:	b510      	push	{r4, lr}
 8010040:	d908      	bls.n	8010054 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8010042:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8010046:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801004a:	681a      	ldr	r2, [r3, #0]
 801004c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010050:	685a      	ldr	r2, [r3, #4]
 8010052:	6062      	str	r2, [r4, #4]
 8010054:	bd10      	pop	{r4, pc}
	...

08010058 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801005c:	b08f      	sub	sp, #60	@ 0x3c
 801005e:	4b8f      	ldr	r3, [pc, #572]	@ (801029c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8010060:	4683      	mov	fp, r0
 8010062:	ac0a      	add	r4, sp, #40	@ 0x28
 8010064:	e884 0006 	stmia.w	r4, {r1, r2}
 8010068:	f9b3 2000 	ldrsh.w	r2, [r3]
 801006c:	4620      	mov	r0, r4
 801006e:	4b8c      	ldr	r3, [pc, #560]	@ (80102a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8010070:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010074:	f7ff fe55 	bl	800fd22 <_ZN8touchgfx4Rect10restrictToEss>
 8010078:	4620      	mov	r0, r4
 801007a:	f7f9 fea4 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801007e:	2800      	cmp	r0, #0
 8010080:	d16a      	bne.n	8010158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010082:	9403      	str	r4, [sp, #12]
 8010084:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8010088:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 801008c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8010090:	9301      	str	r3, [sp, #4]
 8010092:	35a4      	adds	r5, #164	@ 0xa4
 8010094:	b15c      	cbz	r4, 80100ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8010096:	4629      	mov	r1, r5
 8010098:	9803      	ldr	r0, [sp, #12]
 801009a:	f7ff fe93 	bl	800fdc4 <_ZNK8touchgfx4Rect8includesERKS0_>
 801009e:	3c01      	subs	r4, #1
 80100a0:	b118      	cbz	r0, 80100aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80100a2:	b2a1      	uxth	r1, r4
 80100a4:	9801      	ldr	r0, [sp, #4]
 80100a6:	f7ff ffc3 	bl	8010030 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80100aa:	3d08      	subs	r5, #8
 80100ac:	e7f2      	b.n	8010094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80100ae:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 80100b2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80100b6:	f8cd a010 	str.w	sl, [sp, #16]
 80100ba:	9302      	str	r3, [sp, #8]
 80100bc:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80100c0:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 80100c4:	9306      	str	r3, [sp, #24]
 80100c6:	445c      	add	r4, fp
 80100c8:	2500      	movs	r5, #0
 80100ca:	4626      	mov	r6, r4
 80100cc:	f8cd a014 	str.w	sl, [sp, #20]
 80100d0:	462f      	mov	r7, r5
 80100d2:	9b05      	ldr	r3, [sp, #20]
 80100d4:	2b00      	cmp	r3, #0
 80100d6:	d073      	beq.n	80101c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80100d8:	9903      	ldr	r1, [sp, #12]
 80100da:	4630      	mov	r0, r6
 80100dc:	f7ff fdff 	bl	800fcde <_ZNK8touchgfx4Rect9intersectERKS0_>
 80100e0:	b350      	cbz	r0, 8010138 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80100e2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 80100e6:	f9b6 c000 	ldrsh.w	ip, [r6]
 80100ea:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 80100ee:	45e6      	cmp	lr, ip
 80100f0:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80100f4:	db33      	blt.n	801015e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80100f6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80100fa:	88b3      	ldrh	r3, [r6, #4]
 80100fc:	4472      	add	r2, lr
 80100fe:	4463      	add	r3, ip
 8010100:	b212      	sxth	r2, r2
 8010102:	b21b      	sxth	r3, r3
 8010104:	429a      	cmp	r2, r3
 8010106:	dc2a      	bgt.n	801015e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010108:	fa1f f289 	uxth.w	r2, r9
 801010c:	88f3      	ldrh	r3, [r6, #6]
 801010e:	45c8      	cmp	r8, r9
 8010110:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8010114:	4413      	add	r3, r2
 8010116:	fa1f fc88 	uxth.w	ip, r8
 801011a:	b29b      	uxth	r3, r3
 801011c:	fa0f fe83 	sxth.w	lr, r3
 8010120:	db0f      	blt.n	8010142 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8010122:	eba3 030c 	sub.w	r3, r3, ip
 8010126:	1ac9      	subs	r1, r1, r3
 8010128:	b209      	sxth	r1, r1
 801012a:	2900      	cmp	r1, #0
 801012c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010130:	dd12      	ble.n	8010158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010132:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8010136:	4605      	mov	r5, r0
 8010138:	9b05      	ldr	r3, [sp, #20]
 801013a:	3e08      	subs	r6, #8
 801013c:	3b01      	subs	r3, #1
 801013e:	9305      	str	r3, [sp, #20]
 8010140:	e7c7      	b.n	80100d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8010142:	4461      	add	r1, ip
 8010144:	b209      	sxth	r1, r1
 8010146:	4571      	cmp	r1, lr
 8010148:	dc38      	bgt.n	80101bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801014a:	eba2 020c 	sub.w	r2, r2, ip
 801014e:	b212      	sxth	r2, r2
 8010150:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010154:	2a00      	cmp	r2, #0
 8010156:	dcee      	bgt.n	8010136 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010158:	b00f      	add	sp, #60	@ 0x3c
 801015a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801015e:	45c8      	cmp	r8, r9
 8010160:	db2c      	blt.n	80101bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010162:	88f3      	ldrh	r3, [r6, #6]
 8010164:	4499      	add	r9, r3
 8010166:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 801016a:	4498      	add	r8, r3
 801016c:	fa0f f989 	sxth.w	r9, r9
 8010170:	fa0f f888 	sxth.w	r8, r8
 8010174:	45c1      	cmp	r9, r8
 8010176:	db21      	blt.n	80101bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010178:	fa1f f28c 	uxth.w	r2, ip
 801017c:	88b3      	ldrh	r3, [r6, #4]
 801017e:	45e6      	cmp	lr, ip
 8010180:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8010184:	4413      	add	r3, r2
 8010186:	fa1f f88e 	uxth.w	r8, lr
 801018a:	b29b      	uxth	r3, r3
 801018c:	fa0f f983 	sxth.w	r9, r3
 8010190:	db0a      	blt.n	80101a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8010192:	eba3 0308 	sub.w	r3, r3, r8
 8010196:	1ac9      	subs	r1, r1, r3
 8010198:	b209      	sxth	r1, r1
 801019a:	2900      	cmp	r1, #0
 801019c:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 80101a0:	ddda      	ble.n	8010158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80101a2:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 80101a6:	e7c6      	b.n	8010136 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80101a8:	4441      	add	r1, r8
 80101aa:	b209      	sxth	r1, r1
 80101ac:	4549      	cmp	r1, r9
 80101ae:	dc05      	bgt.n	80101bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80101b0:	eba2 0208 	sub.w	r2, r2, r8
 80101b4:	b212      	sxth	r2, r2
 80101b6:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80101ba:	e7cb      	b.n	8010154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80101bc:	4607      	mov	r7, r0
 80101be:	e7bb      	b.n	8010138 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80101c0:	2d00      	cmp	r5, #0
 80101c2:	d181      	bne.n	80100c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80101c4:	2f00      	cmp	r7, #0
 80101c6:	f000 81dd 	beq.w	8010584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80101ca:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 80101ce:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 80101d2:	b2b3      	uxth	r3, r6
 80101d4:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 80101d8:	9305      	str	r3, [sp, #20]
 80101da:	9a05      	ldr	r2, [sp, #20]
 80101dc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80101e0:	4413      	add	r3, r2
 80101e2:	b2ba      	uxth	r2, r7
 80101e4:	4492      	add	sl, r2
 80101e6:	b29b      	uxth	r3, r3
 80101e8:	fa1f fa8a 	uxth.w	sl, sl
 80101ec:	fa0f f883 	sxth.w	r8, r3
 80101f0:	fa0f f98a 	sxth.w	r9, sl
 80101f4:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80101f8:	9b04      	ldr	r3, [sp, #16]
 80101fa:	2b00      	cmp	r3, #0
 80101fc:	d052      	beq.n	80102a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80101fe:	9903      	ldr	r1, [sp, #12]
 8010200:	4620      	mov	r0, r4
 8010202:	f7ff fd6c 	bl	800fcde <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010206:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801020a:	b1c0      	cbz	r0, 801023e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801020c:	f9b4 e000 	ldrsh.w	lr, [r4]
 8010210:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010214:	4576      	cmp	r6, lr
 8010216:	dc22      	bgt.n	801025e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010218:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801021c:	44f4      	add	ip, lr
 801021e:	fa0f fc8c 	sxth.w	ip, ip
 8010222:	45e0      	cmp	r8, ip
 8010224:	db1b      	blt.n	801025e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010226:	428f      	cmp	r7, r1
 8010228:	fa1f fc81 	uxth.w	ip, r1
 801022c:	88e1      	ldrh	r1, [r4, #6]
 801022e:	dc0d      	bgt.n	801024c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010230:	ebaa 0c0c 	sub.w	ip, sl, ip
 8010234:	f8a4 9002 	strh.w	r9, [r4, #2]
 8010238:	eba1 010c 	sub.w	r1, r1, ip
 801023c:	80e1      	strh	r1, [r4, #6]
 801023e:	4628      	mov	r0, r5
 8010240:	9904      	ldr	r1, [sp, #16]
 8010242:	3c08      	subs	r4, #8
 8010244:	4605      	mov	r5, r0
 8010246:	3901      	subs	r1, #1
 8010248:	9104      	str	r1, [sp, #16]
 801024a:	e7d3      	b.n	80101f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 801024c:	4461      	add	r1, ip
 801024e:	b209      	sxth	r1, r1
 8010250:	4549      	cmp	r1, r9
 8010252:	dcf5      	bgt.n	8010240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010254:	eba2 0c0c 	sub.w	ip, r2, ip
 8010258:	f8a4 c006 	strh.w	ip, [r4, #6]
 801025c:	e7ef      	b.n	801023e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801025e:	428f      	cmp	r7, r1
 8010260:	dcee      	bgt.n	8010240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010262:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8010266:	4461      	add	r1, ip
 8010268:	b209      	sxth	r1, r1
 801026a:	4589      	cmp	r9, r1
 801026c:	dbe8      	blt.n	8010240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801026e:	4576      	cmp	r6, lr
 8010270:	fa1f fc8e 	uxth.w	ip, lr
 8010274:	88a1      	ldrh	r1, [r4, #4]
 8010276:	dc07      	bgt.n	8010288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8010278:	eba3 0c0c 	sub.w	ip, r3, ip
 801027c:	f8a4 8000 	strh.w	r8, [r4]
 8010280:	eba1 010c 	sub.w	r1, r1, ip
 8010284:	80a1      	strh	r1, [r4, #4]
 8010286:	e7da      	b.n	801023e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010288:	4461      	add	r1, ip
 801028a:	b209      	sxth	r1, r1
 801028c:	4588      	cmp	r8, r1
 801028e:	dbd7      	blt.n	8010240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010290:	9905      	ldr	r1, [sp, #20]
 8010292:	eba1 0c0c 	sub.w	ip, r1, ip
 8010296:	f8a4 c004 	strh.w	ip, [r4, #4]
 801029a:	e7d0      	b.n	801023e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801029c:	20016b6a 	.word	0x20016b6a
 80102a0:	20016b68 	.word	0x20016b68
 80102a4:	2d00      	cmp	r5, #0
 80102a6:	f000 816d 	beq.w	8010584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80102aa:	9b06      	ldr	r3, [sp, #24]
 80102ac:	445b      	add	r3, fp
 80102ae:	461c      	mov	r4, r3
 80102b0:	9b02      	ldr	r3, [sp, #8]
 80102b2:	3301      	adds	r3, #1
 80102b4:	f000 8166 	beq.w	8010584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80102b8:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 80102bc:	9803      	ldr	r0, [sp, #12]
 80102be:	4629      	mov	r1, r5
 80102c0:	f7ff fd80 	bl	800fdc4 <_ZNK8touchgfx4Rect8includesERKS0_>
 80102c4:	b120      	cbz	r0, 80102d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80102c6:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80102ca:	9801      	ldr	r0, [sp, #4]
 80102cc:	f7ff feb0 	bl	8010030 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80102d0:	9903      	ldr	r1, [sp, #12]
 80102d2:	4628      	mov	r0, r5
 80102d4:	f7ff fd03 	bl	800fcde <_ZNK8touchgfx4Rect9intersectERKS0_>
 80102d8:	2800      	cmp	r0, #0
 80102da:	f000 809c 	beq.w	8010416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80102de:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 80102e2:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80102e6:	fa1f f189 	uxth.w	r1, r9
 80102ea:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80102ee:	9309      	str	r3, [sp, #36]	@ 0x24
 80102f0:	eb01 0c03 	add.w	ip, r1, r3
 80102f4:	b283      	uxth	r3, r0
 80102f6:	4548      	cmp	r0, r9
 80102f8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 80102fc:	fa1f fa8c 	uxth.w	sl, ip
 8010300:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8010304:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8010308:	eb03 050c 	add.w	r5, r3, ip
 801030c:	b2ad      	uxth	r5, r5
 801030e:	9505      	str	r5, [sp, #20]
 8010310:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8010314:	9504      	str	r5, [sp, #16]
 8010316:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 801031a:	f340 8099 	ble.w	8010450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801031e:	1a5b      	subs	r3, r3, r1
 8010320:	4596      	cmp	lr, r2
 8010322:	fa0f f08a 	sxth.w	r0, sl
 8010326:	b29b      	uxth	r3, r3
 8010328:	b21e      	sxth	r6, r3
 801032a:	dd2e      	ble.n	801038a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 801032c:	9f02      	ldr	r7, [sp, #8]
 801032e:	fa1f fe8e 	uxth.w	lr, lr
 8010332:	b292      	uxth	r2, r2
 8010334:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 8010338:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801033c:	9f04      	ldr	r7, [sp, #16]
 801033e:	ebae 0102 	sub.w	r1, lr, r2
 8010342:	44a6      	add	lr, r4
 8010344:	1a3f      	subs	r7, r7, r0
 8010346:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 801034a:	b289      	uxth	r1, r1
 801034c:	4402      	add	r2, r0
 801034e:	fa0f fe8e 	sxth.w	lr, lr
 8010352:	b20d      	sxth	r5, r1
 8010354:	b212      	sxth	r2, r2
 8010356:	436f      	muls	r7, r5
 8010358:	ebae 0202 	sub.w	r2, lr, r2
 801035c:	4372      	muls	r2, r6
 801035e:	4297      	cmp	r7, r2
 8010360:	db09      	blt.n	8010376 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8010362:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8010366:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 801036a:	449c      	add	ip, r3
 801036c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8010370:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8010374:	e686      	b.n	8010084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010376:	4421      	add	r1, r4
 8010378:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 801037c:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8010380:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010384:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8010388:	e67c      	b.n	8010084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801038a:	9f04      	ldr	r7, [sp, #16]
 801038c:	42b8      	cmp	r0, r7
 801038e:	da27      	bge.n	80103e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8010390:	9902      	ldr	r1, [sp, #8]
 8010392:	1a3f      	subs	r7, r7, r0
 8010394:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8010398:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801039c:	eb05 010e 	add.w	r1, r5, lr
 80103a0:	fa1f f881 	uxth.w	r8, r1
 80103a4:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 80103a8:	4411      	add	r1, r2
 80103aa:	fa0f f988 	sxth.w	r9, r8
 80103ae:	eba2 020e 	sub.w	r2, r2, lr
 80103b2:	eba1 0108 	sub.w	r1, r1, r8
 80103b6:	4372      	muls	r2, r6
 80103b8:	b289      	uxth	r1, r1
 80103ba:	fa0f f881 	sxth.w	r8, r1
 80103be:	fb08 f707 	mul.w	r7, r8, r7
 80103c2:	42ba      	cmp	r2, r7
 80103c4:	dc06      	bgt.n	80103d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80103c6:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 80103ca:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 80103ce:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 80103d2:	e7ca      	b.n	801036a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80103d4:	4429      	add	r1, r5
 80103d6:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 80103da:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80103de:	e651      	b.n	8010084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80103e0:	9805      	ldr	r0, [sp, #20]
 80103e2:	2d06      	cmp	r5, #6
 80103e4:	ebaa 0000 	sub.w	r0, sl, r0
 80103e8:	b280      	uxth	r0, r0
 80103ea:	fa0f fe80 	sxth.w	lr, r0
 80103ee:	d817      	bhi.n	8010420 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80103f0:	9b04      	ldr	r3, [sp, #16]
 80103f2:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 80103f6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80103fa:	1c6b      	adds	r3, r5, #1
 80103fc:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8010400:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8010404:	9b01      	ldr	r3, [sp, #4]
 8010406:	9801      	ldr	r0, [sp, #4]
 8010408:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801040c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8010410:	805a      	strh	r2, [r3, #2]
 8010412:	809e      	strh	r6, [r3, #4]
 8010414:	80d9      	strh	r1, [r3, #6]
 8010416:	9b02      	ldr	r3, [sp, #8]
 8010418:	3c08      	subs	r4, #8
 801041a:	3b01      	subs	r3, #1
 801041c:	9302      	str	r3, [sp, #8]
 801041e:	e747      	b.n	80102b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8010420:	9a02      	ldr	r2, [sp, #8]
 8010422:	45b6      	cmp	lr, r6
 8010424:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010428:	db0d      	blt.n	8010446 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 801042a:	449c      	add	ip, r3
 801042c:	445a      	add	r2, fp
 801042e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8010432:	fa1f fc8c 	uxth.w	ip, ip
 8010436:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 801043a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801043e:	448c      	add	ip, r1
 8010440:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8010444:	e61e      	b.n	8010084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010446:	445a      	add	r2, fp
 8010448:	4484      	add	ip, r0
 801044a:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 801044e:	e78f      	b.n	8010370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010450:	fa1f f18e 	uxth.w	r1, lr
 8010454:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8010458:	b293      	uxth	r3, r2
 801045a:	4596      	cmp	lr, r2
 801045c:	eb01 0806 	add.w	r8, r1, r6
 8010460:	9306      	str	r3, [sp, #24]
 8010462:	fa1f f888 	uxth.w	r8, r8
 8010466:	9f06      	ldr	r7, [sp, #24]
 8010468:	fa0f f388 	sxth.w	r3, r8
 801046c:	9307      	str	r3, [sp, #28]
 801046e:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8010472:	443b      	add	r3, r7
 8010474:	b29b      	uxth	r3, r3
 8010476:	9308      	str	r3, [sp, #32]
 8010478:	da24      	bge.n	80104c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 801047a:	9905      	ldr	r1, [sp, #20]
 801047c:	eba3 0308 	sub.w	r3, r3, r8
 8010480:	eba2 020e 	sub.w	r2, r2, lr
 8010484:	eba9 0000 	sub.w	r0, r9, r0
 8010488:	ebaa 0401 	sub.w	r4, sl, r1
 801048c:	b29b      	uxth	r3, r3
 801048e:	b2a4      	uxth	r4, r4
 8010490:	b219      	sxth	r1, r3
 8010492:	b225      	sxth	r5, r4
 8010494:	4348      	muls	r0, r1
 8010496:	436a      	muls	r2, r5
 8010498:	4282      	cmp	r2, r0
 801049a:	9a02      	ldr	r2, [sp, #8]
 801049c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80104a0:	445a      	add	r2, fp
 80104a2:	dc06      	bgt.n	80104b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80104a4:	9b07      	ldr	r3, [sp, #28]
 80104a6:	44a4      	add	ip, r4
 80104a8:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 80104ac:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 80104b0:	e75e      	b.n	8010370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80104b2:	9904      	ldr	r1, [sp, #16]
 80104b4:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 80104b8:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 80104bc:	4433      	add	r3, r6
 80104be:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80104c2:	e5df      	b.n	8010084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80104c4:	9f06      	ldr	r7, [sp, #24]
 80104c6:	9b04      	ldr	r3, [sp, #16]
 80104c8:	1bc9      	subs	r1, r1, r7
 80104ca:	fa0f f78a 	sxth.w	r7, sl
 80104ce:	b289      	uxth	r1, r1
 80104d0:	429f      	cmp	r7, r3
 80104d2:	fa0f fe81 	sxth.w	lr, r1
 80104d6:	dd23      	ble.n	8010520 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80104d8:	9a05      	ldr	r2, [sp, #20]
 80104da:	eba9 0000 	sub.w	r0, r9, r0
 80104de:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80104e2:	ebaa 0202 	sub.w	r2, sl, r2
 80104e6:	9d07      	ldr	r5, [sp, #28]
 80104e8:	fb0e f000 	mul.w	r0, lr, r0
 80104ec:	b292      	uxth	r2, r2
 80104ee:	eba5 0a03 	sub.w	sl, r5, r3
 80104f2:	9b02      	ldr	r3, [sp, #8]
 80104f4:	b214      	sxth	r4, r2
 80104f6:	00db      	lsls	r3, r3, #3
 80104f8:	fb04 fa0a 	mul.w	sl, r4, sl
 80104fc:	445b      	add	r3, fp
 80104fe:	4550      	cmp	r0, sl
 8010500:	db03      	blt.n	801050a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8010502:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8010506:	4494      	add	ip, r2
 8010508:	e732      	b.n	8010370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801050a:	9a04      	ldr	r2, [sp, #16]
 801050c:	4431      	add	r1, r6
 801050e:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8010512:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8010516:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 801051a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801051e:	e75c      	b.n	80103da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8010520:	9b08      	ldr	r3, [sp, #32]
 8010522:	2d06      	cmp	r5, #6
 8010524:	eba3 0308 	sub.w	r3, r3, r8
 8010528:	b29b      	uxth	r3, r3
 801052a:	b218      	sxth	r0, r3
 801052c:	d813      	bhi.n	8010556 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801052e:	9b07      	ldr	r3, [sp, #28]
 8010530:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8010534:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8010538:	1c6b      	adds	r3, r5, #1
 801053a:	9901      	ldr	r1, [sp, #4]
 801053c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8010540:	9b01      	ldr	r3, [sp, #4]
 8010542:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8010546:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801054a:	805a      	strh	r2, [r3, #2]
 801054c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801054e:	f8a3 e006 	strh.w	lr, [r3, #6]
 8010552:	809a      	strh	r2, [r3, #4]
 8010554:	e75f      	b.n	8010416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8010556:	9c02      	ldr	r4, [sp, #8]
 8010558:	4570      	cmp	r0, lr
 801055a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801055e:	db0d      	blt.n	801057c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8010560:	4431      	add	r1, r6
 8010562:	9b06      	ldr	r3, [sp, #24]
 8010564:	445c      	add	r4, fp
 8010566:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801056a:	b289      	uxth	r1, r1
 801056c:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8010570:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010574:	4419      	add	r1, r3
 8010576:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 801057a:	e583      	b.n	8010084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801057c:	445c      	add	r4, fp
 801057e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8010582:	e79b      	b.n	80104bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8010584:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8010588:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 801058c:	1e65      	subs	r5, r4, #1
 801058e:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8010592:	b2ad      	uxth	r5, r5
 8010594:	42b5      	cmp	r5, r6
 8010596:	d044      	beq.n	8010622 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8010598:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801059c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 80105a0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80105a4:	4282      	cmp	r2, r0
 80105a6:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 80105aa:	d11f      	bne.n	80105ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80105ac:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 80105b0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80105b4:	459c      	cmp	ip, r3
 80105b6:	d119      	bne.n	80105ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80105b8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 80105bc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80105c0:	19d8      	adds	r0, r3, r7
 80105c2:	b200      	sxth	r0, r0
 80105c4:	4288      	cmp	r0, r1
 80105c6:	d109      	bne.n	80105dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80105c8:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 80105cc:	4413      	add	r3, r2
 80105ce:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80105d2:	4629      	mov	r1, r5
 80105d4:	9801      	ldr	r0, [sp, #4]
 80105d6:	f7ff fd2b 	bl	8010030 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80105da:	e003      	b.n	80105e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80105dc:	4411      	add	r1, r2
 80105de:	b209      	sxth	r1, r1
 80105e0:	42b9      	cmp	r1, r7
 80105e2:	d0f3      	beq.n	80105cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80105e4:	3d01      	subs	r5, #1
 80105e6:	3c08      	subs	r4, #8
 80105e8:	b2ad      	uxth	r5, r5
 80105ea:	e7d3      	b.n	8010594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80105ec:	42b9      	cmp	r1, r7
 80105ee:	d1f9      	bne.n	80105e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80105f0:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 80105f4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80105f8:	4299      	cmp	r1, r3
 80105fa:	d1f3      	bne.n	80105e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80105fc:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8010600:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8010604:	181f      	adds	r7, r3, r0
 8010606:	b23f      	sxth	r7, r7
 8010608:	42ba      	cmp	r2, r7
 801060a:	d105      	bne.n	8010618 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 801060c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8010610:	440b      	add	r3, r1
 8010612:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010616:	e7dc      	b.n	80105d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8010618:	440a      	add	r2, r1
 801061a:	b212      	sxth	r2, r2
 801061c:	4290      	cmp	r0, r2
 801061e:	d1e1      	bne.n	80105e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010620:	e7f6      	b.n	8010610 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8010622:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8010626:	2e07      	cmp	r6, #7
 8010628:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 801062c:	d812      	bhi.n	8010654 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801062e:	1c75      	adds	r5, r6, #1
 8010630:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010634:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8010638:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 801063c:	9d01      	ldr	r5, [sp, #4]
 801063e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8010642:	442c      	add	r4, r5
 8010644:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8010648:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801064c:	8061      	strh	r1, [r4, #2]
 801064e:	80a2      	strh	r2, [r4, #4]
 8010650:	80e3      	strh	r3, [r4, #6]
 8010652:	e581      	b.n	8010158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010654:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8010658:	3e01      	subs	r6, #1
 801065a:	445c      	add	r4, fp
 801065c:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8010660:	f04f 37ff 	mov.w	r7, #4294967295
 8010664:	2500      	movs	r5, #0
 8010666:	9305      	str	r3, [sp, #20]
 8010668:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801066c:	1e72      	subs	r2, r6, #1
 801066e:	9302      	str	r3, [sp, #8]
 8010670:	4691      	mov	r9, r2
 8010672:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8010676:	9304      	str	r3, [sp, #16]
 8010678:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 801067c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8010680:	6818      	ldr	r0, [r3, #0]
 8010682:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8010686:	9207      	str	r2, [sp, #28]
 8010688:	bf16      	itet	ne
 801068a:	9905      	ldrne	r1, [sp, #20]
 801068c:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8010690:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8010694:	9306      	str	r3, [sp, #24]
 8010696:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801069a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801069e:	fb18 f801 	smulbb	r8, r8, r1
 80106a2:	6859      	ldr	r1, [r3, #4]
 80106a4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80106a8:	4671      	mov	r1, lr
 80106aa:	a80c      	add	r0, sp, #48	@ 0x30
 80106ac:	f7fb fbc3 	bl	800be36 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80106b0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 80106b4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 80106b8:	f04f 0c08 	mov.w	ip, #8
 80106bc:	9b04      	ldr	r3, [sp, #16]
 80106be:	9a02      	ldr	r2, [sp, #8]
 80106c0:	fb10 f001 	smulbb	r0, r0, r1
 80106c4:	fb02 8803 	mla	r8, r2, r3, r8
 80106c8:	eba0 0108 	sub.w	r1, r0, r8
 80106cc:	fb90 f0fc 	sdiv	r0, r0, ip
 80106d0:	4288      	cmp	r0, r1
 80106d2:	dc20      	bgt.n	8010716 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 80106d4:	4551      	cmp	r1, sl
 80106d6:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80106da:	da03      	bge.n	80106e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 80106dc:	b1d9      	cbz	r1, 8010716 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 80106de:	468a      	mov	sl, r1
 80106e0:	464f      	mov	r7, r9
 80106e2:	4635      	mov	r5, r6
 80106e4:	f109 39ff 	add.w	r9, r9, #4294967295
 80106e8:	f119 0f02 	cmn.w	r9, #2
 80106ec:	d1c6      	bne.n	801067c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80106ee:	4616      	mov	r6, r2
 80106f0:	3201      	adds	r2, #1
 80106f2:	f1a4 0408 	sub.w	r4, r4, #8
 80106f6:	d1b7      	bne.n	8010668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80106f8:	9b01      	ldr	r3, [sp, #4]
 80106fa:	b2ac      	uxth	r4, r5
 80106fc:	00ed      	lsls	r5, r5, #3
 80106fe:	1958      	adds	r0, r3, r5
 8010700:	1c7b      	adds	r3, r7, #1
 8010702:	d10b      	bne.n	801071c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 8010704:	4601      	mov	r1, r0
 8010706:	9803      	ldr	r0, [sp, #12]
 8010708:	f7fb fb95 	bl	800be36 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801070c:	4621      	mov	r1, r4
 801070e:	9801      	ldr	r0, [sp, #4]
 8010710:	f7ff fc8e 	bl	8010030 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010714:	e4b6      	b.n	8010084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010716:	464f      	mov	r7, r9
 8010718:	4635      	mov	r5, r6
 801071a:	e7ed      	b.n	80106f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 801071c:	9b01      	ldr	r3, [sp, #4]
 801071e:	00ff      	lsls	r7, r7, #3
 8010720:	445d      	add	r5, fp
 8010722:	19d9      	adds	r1, r3, r7
 8010724:	445f      	add	r7, fp
 8010726:	f7fb fb86 	bl	800be36 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801072a:	9b03      	ldr	r3, [sp, #12]
 801072c:	cb03      	ldmia	r3!, {r0, r1}
 801072e:	9b03      	ldr	r3, [sp, #12]
 8010730:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8010734:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8010738:	f855 0fac 	ldr.w	r0, [r5, #172]!
 801073c:	6869      	ldr	r1, [r5, #4]
 801073e:	c303      	stmia	r3!, {r0, r1}
 8010740:	e7e4      	b.n	801070c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 8010742:	bf00      	nop

08010744 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8010744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010748:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 801074c:	b09b      	sub	sp, #108	@ 0x6c
 801074e:	4604      	mov	r4, r0
 8010750:	4630      	mov	r0, r6
 8010752:	f7f9 fb38 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010756:	4605      	mov	r5, r0
 8010758:	b948      	cbnz	r0, 801076e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801075a:	6823      	ldr	r3, [r4, #0]
 801075c:	4620      	mov	r0, r4
 801075e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010760:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010764:	4798      	blx	r3
 8010766:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 801076a:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 801076e:	4bc5      	ldr	r3, [pc, #788]	@ (8010a84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 8010770:	681b      	ldr	r3, [r3, #0]
 8010772:	2b00      	cmp	r3, #0
 8010774:	d03f      	beq.n	80107f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8010776:	4dc4      	ldr	r5, [pc, #784]	@ (8010a88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8010778:	4628      	mov	r0, r5
 801077a:	f7f9 fb24 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801077e:	4606      	mov	r6, r0
 8010780:	2800      	cmp	r0, #0
 8010782:	d138      	bne.n	80107f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8010784:	4628      	mov	r0, r5
 8010786:	f7ff f9d7 	bl	800fb38 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801078a:	6823      	ldr	r3, [r4, #0]
 801078c:	6829      	ldr	r1, [r5, #0]
 801078e:	4620      	mov	r0, r4
 8010790:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010792:	686a      	ldr	r2, [r5, #4]
 8010794:	4798      	blx	r3
 8010796:	802e      	strh	r6, [r5, #0]
 8010798:	806e      	strh	r6, [r5, #2]
 801079a:	80ae      	strh	r6, [r5, #4]
 801079c:	80ee      	strh	r6, [r5, #6]
 801079e:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 80107a2:	4dba      	ldr	r5, [pc, #744]	@ (8010a8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80107a4:	4640      	mov	r0, r8
 80107a6:	f7ff fbe7 	bl	800ff78 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80107aa:	882e      	ldrh	r6, [r5, #0]
 80107ac:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 80107b0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80107b4:	4633      	mov	r3, r6
 80107b6:	42bb      	cmp	r3, r7
 80107b8:	d224      	bcs.n	8010804 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80107ba:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 80107be:	2907      	cmp	r1, #7
 80107c0:	d816      	bhi.n	80107f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80107c2:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80107c6:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80107ca:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80107ce:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80107d2:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80107d6:	1c4a      	adds	r2, r1, #1
 80107d8:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 80107dc:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80107e0:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80107e4:	f8a2 a002 	strh.w	sl, [r2, #2]
 80107e8:	f8a2 e004 	strh.w	lr, [r2, #4]
 80107ec:	f8a2 c006 	strh.w	ip, [r2, #6]
 80107f0:	3301      	adds	r3, #1
 80107f2:	b29b      	uxth	r3, r3
 80107f4:	e7df      	b.n	80107b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80107f6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80107fa:	2b00      	cmp	r3, #0
 80107fc:	d1cf      	bne.n	801079e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80107fe:	b01b      	add	sp, #108	@ 0x6c
 8010800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010804:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8010808:	42b3      	cmp	r3, r6
 801080a:	d90c      	bls.n	8010826 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 801080c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8010810:	6822      	ldr	r2, [r4, #0]
 8010812:	3601      	adds	r6, #1
 8010814:	4620      	mov	r0, r4
 8010816:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8010818:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 801081c:	b2b6      	uxth	r6, r6
 801081e:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8010822:	47b8      	blx	r7
 8010824:	e7ee      	b.n	8010804 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8010826:	4a9a      	ldr	r2, [pc, #616]	@ (8010a90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8010828:	6813      	ldr	r3, [r2, #0]
 801082a:	4691      	mov	r9, r2
 801082c:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8010830:	2b01      	cmp	r3, #1
 8010832:	f040 80e0 	bne.w	80109f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 8010836:	8829      	ldrh	r1, [r5, #0]
 8010838:	2600      	movs	r6, #0
 801083a:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 801083e:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8010842:	33ae      	adds	r3, #174	@ 0xae
 8010844:	428f      	cmp	r7, r1
 8010846:	f103 0308 	add.w	r3, r3, #8
 801084a:	dd0a      	ble.n	8010862 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 801084c:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8010850:	3101      	adds	r1, #1
 8010852:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8010856:	4402      	add	r2, r0
 8010858:	b212      	sxth	r2, r2
 801085a:	4296      	cmp	r6, r2
 801085c:	bfb8      	it	lt
 801085e:	4616      	movlt	r6, r2
 8010860:	e7f0      	b.n	8010844 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8010862:	4b8c      	ldr	r3, [pc, #560]	@ (8010a94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8010864:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 8010a90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 8010868:	881b      	ldrh	r3, [r3, #0]
 801086a:	2b0f      	cmp	r3, #15
 801086c:	bf8c      	ite	hi
 801086e:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8010872:	f04f 0b01 	movls.w	fp, #1
 8010876:	2300      	movs	r3, #0
 8010878:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801087c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8010880:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8010884:	4b82      	ldr	r3, [pc, #520]	@ (8010a90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8010886:	4438      	add	r0, r7
 8010888:	b207      	sxth	r7, r0
 801088a:	6818      	ldr	r0, [r3, #0]
 801088c:	42b7      	cmp	r7, r6
 801088e:	6803      	ldr	r3, [r0, #0]
 8010890:	f280 8083 	bge.w	801099a <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 8010894:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010898:	4798      	blx	r3
 801089a:	eb07 030b 	add.w	r3, r7, fp
 801089e:	4298      	cmp	r0, r3
 80108a0:	da07      	bge.n	80108b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80108a2:	42b0      	cmp	r0, r6
 80108a4:	da05      	bge.n	80108b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80108a6:	4287      	cmp	r7, r0
 80108a8:	dd6c      	ble.n	8010984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80108aa:	2f00      	cmp	r7, #0
 80108ac:	dd6a      	ble.n	8010984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80108ae:	4630      	mov	r0, r6
 80108b0:	e004      	b.n	80108bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 80108b2:	4287      	cmp	r7, r0
 80108b4:	dcfb      	bgt.n	80108ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 80108b6:	42b0      	cmp	r0, r6
 80108b8:	bfa8      	it	ge
 80108ba:	4630      	movge	r0, r6
 80108bc:	4b76      	ldr	r3, [pc, #472]	@ (8010a98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80108be:	1bc0      	subs	r0, r0, r7
 80108c0:	2200      	movs	r2, #0
 80108c2:	f8ad 7016 	strh.w	r7, [sp, #22]
 80108c6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80108ca:	882f      	ldrh	r7, [r5, #0]
 80108cc:	f8ad 2014 	strh.w	r2, [sp, #20]
 80108d0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80108d4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80108d8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80108dc:	42bb      	cmp	r3, r7
 80108de:	d9cd      	bls.n	801087c <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 80108e0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80108e4:	ab07      	add	r3, sp, #28
 80108e6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80108ea:	6851      	ldr	r1, [r2, #4]
 80108ec:	c303      	stmia	r3!, {r0, r1}
 80108ee:	a905      	add	r1, sp, #20
 80108f0:	a807      	add	r0, sp, #28
 80108f2:	f7ff f9f4 	bl	800fcde <_ZNK8touchgfx4Rect9intersectERKS0_>
 80108f6:	2800      	cmp	r0, #0
 80108f8:	d04c      	beq.n	8010994 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 80108fa:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80108fe:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8010902:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8010906:	4686      	mov	lr, r0
 8010908:	4290      	cmp	r0, r2
 801090a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801090e:	4450      	add	r0, sl
 8010910:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8010914:	bfb8      	it	lt
 8010916:	4696      	movlt	lr, r2
 8010918:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801091c:	4452      	add	r2, sl
 801091e:	b280      	uxth	r0, r0
 8010920:	4299      	cmp	r1, r3
 8010922:	468c      	mov	ip, r1
 8010924:	b292      	uxth	r2, r2
 8010926:	9302      	str	r3, [sp, #8]
 8010928:	bfb8      	it	lt
 801092a:	469c      	movlt	ip, r3
 801092c:	b203      	sxth	r3, r0
 801092e:	fa0f fa82 	sxth.w	sl, r2
 8010932:	f8ad e01c 	strh.w	lr, [sp, #28]
 8010936:	f8ad c01e 	strh.w	ip, [sp, #30]
 801093a:	4553      	cmp	r3, sl
 801093c:	bfb8      	it	lt
 801093e:	4602      	movlt	r2, r0
 8010940:	9b02      	ldr	r3, [sp, #8]
 8010942:	eba2 020e 	sub.w	r2, r2, lr
 8010946:	f8ad 2020 	strh.w	r2, [sp, #32]
 801094a:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801094e:	4411      	add	r1, r2
 8010950:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010954:	4413      	add	r3, r2
 8010956:	b289      	uxth	r1, r1
 8010958:	b29b      	uxth	r3, r3
 801095a:	b208      	sxth	r0, r1
 801095c:	b21a      	sxth	r2, r3
 801095e:	4290      	cmp	r0, r2
 8010960:	bfb8      	it	lt
 8010962:	460b      	movlt	r3, r1
 8010964:	eba3 030c 	sub.w	r3, r3, ip
 8010968:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801096c:	a807      	add	r0, sp, #28
 801096e:	f7f9 fa2a 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010972:	b920      	cbnz	r0, 801097e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 8010974:	6823      	ldr	r3, [r4, #0]
 8010976:	a907      	add	r1, sp, #28
 8010978:	4620      	mov	r0, r4
 801097a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801097c:	4798      	blx	r3
 801097e:	3701      	adds	r7, #1
 8010980:	b2bf      	uxth	r7, r7
 8010982:	e7a9      	b.n	80108d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 8010984:	f8d9 0000 	ldr.w	r0, [r9]
 8010988:	2101      	movs	r1, #1
 801098a:	6803      	ldr	r3, [r0, #0]
 801098c:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8010990:	4798      	blx	r3
 8010992:	e773      	b.n	801087c <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8010994:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8010998:	e7e8      	b.n	801096c <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 801099a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801099c:	4798      	blx	r3
 801099e:	4b3f      	ldr	r3, [pc, #252]	@ (8010a9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80109a0:	781b      	ldrb	r3, [r3, #0]
 80109a2:	2b00      	cmp	r3, #0
 80109a4:	f43f af2b 	beq.w	80107fe <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80109a8:	2300      	movs	r3, #0
 80109aa:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 80109ae:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 80109b2:	882b      	ldrh	r3, [r5, #0]
 80109b4:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 80109b8:	42ab      	cmp	r3, r5
 80109ba:	f4bf af20 	bcs.w	80107fe <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80109be:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 80109c2:	2907      	cmp	r1, #7
 80109c4:	d814      	bhi.n	80109f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 80109c6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80109ca:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80109ce:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80109d2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80109d6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80109da:	1c4a      	adds	r2, r1, #1
 80109dc:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 80109e0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80109e4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80109e8:	f8a2 c002 	strh.w	ip, [r2, #2]
 80109ec:	8097      	strh	r7, [r2, #4]
 80109ee:	80d6      	strh	r6, [r2, #6]
 80109f0:	3301      	adds	r3, #1
 80109f2:	b29b      	uxth	r3, r3
 80109f4:	e7e0      	b.n	80109b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 80109f6:	2b02      	cmp	r3, #2
 80109f8:	f040 8133 	bne.w	8010c62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 80109fc:	4b28      	ldr	r3, [pc, #160]	@ (8010aa0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80109fe:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8010a02:	781b      	ldrb	r3, [r3, #0]
 8010a04:	2b01      	cmp	r3, #1
 8010a06:	f000 8098 	beq.w	8010b3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8010a0a:	882a      	ldrh	r2, [r5, #0]
 8010a0c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8010a10:	3201      	adds	r2, #1
 8010a12:	b292      	uxth	r2, r2
 8010a14:	2900      	cmp	r1, #0
 8010a16:	d0c2      	beq.n	801099e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8010a18:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 8010a1c:	4694      	mov	ip, r2
 8010a1e:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8010a22:	f04f 0900 	mov.w	r9, #0
 8010a26:	441e      	add	r6, r3
 8010a28:	b236      	sxth	r6, r6
 8010a2a:	fa1f f38c 	uxth.w	r3, ip
 8010a2e:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8010a32:	4299      	cmp	r1, r3
 8010a34:	f240 80be 	bls.w	8010bb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 8010a38:	4427      	add	r7, r4
 8010a3a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8010a3e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8010a42:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8010a46:	4283      	cmp	r3, r0
 8010a48:	f340 80a0 	ble.w	8010b8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 8010a4c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 8010a50:	46e1      	mov	r9, ip
 8010a52:	4406      	add	r6, r0
 8010a54:	b236      	sxth	r6, r6
 8010a56:	429e      	cmp	r6, r3
 8010a58:	bfa8      	it	ge
 8010a5a:	461e      	movge	r6, r3
 8010a5c:	f10c 0c01 	add.w	ip, ip, #1
 8010a60:	e7e3      	b.n	8010a2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 8010a62:	d10a      	bne.n	8010a7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 8010a64:	4562      	cmp	r2, ip
 8010a66:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8010a6a:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8010a6e:	bfb8      	it	lt
 8010a70:	4662      	movlt	r2, ip
 8010a72:	4288      	cmp	r0, r1
 8010a74:	bfb8      	it	lt
 8010a76:	461f      	movlt	r7, r3
 8010a78:	e086      	b.n	8010b88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8010a7a:	428a      	cmp	r2, r1
 8010a7c:	bfb8      	it	lt
 8010a7e:	460a      	movlt	r2, r1
 8010a80:	e082      	b.n	8010b88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8010a82:	bf00      	nop
 8010a84:	20016bb4 	.word	0x20016bb4
 8010a88:	20016bc0 	.word	0x20016bc0
 8010a8c:	20000044 	.word	0x20000044
 8010a90:	20016b74 	.word	0x20016b74
 8010a94:	20016b6a 	.word	0x20016b6a
 8010a98:	20016b68 	.word	0x20016b68
 8010a9c:	20016b72 	.word	0x20016b72
 8010aa0:	20016b6c 	.word	0x20016b6c
 8010aa4:	19a1      	adds	r1, r4, r6
 8010aa6:	ab07      	add	r3, sp, #28
 8010aa8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8010aac:	6849      	ldr	r1, [r1, #4]
 8010aae:	c303      	stmia	r3!, {r0, r1}
 8010ab0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8010ab4:	a807      	add	r0, sp, #28
 8010ab6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8010aba:	2b13      	cmp	r3, #19
 8010abc:	440b      	add	r3, r1
 8010abe:	bfd8      	it	le
 8010ac0:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8010ac4:	1a9b      	subs	r3, r3, r2
 8010ac6:	f8ad 201c 	strh.w	r2, [sp, #28]
 8010aca:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010ace:	f7ff f84d 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010ad2:	a807      	add	r0, sp, #28
 8010ad4:	f7f9 f977 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ad8:	bb78      	cbnz	r0, 8010b3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8010ada:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 8010ade:	4426      	add	r6, r4
 8010ae0:	f8d9 0000 	ldr.w	r0, [r9]
 8010ae4:	f1bc 0f14 	cmp.w	ip, #20
 8010ae8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8010aec:	f8d0 e000 	ldr.w	lr, [r0]
 8010af0:	bfa8      	it	ge
 8010af2:	f04f 0c14 	movge.w	ip, #20
 8010af6:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8010afa:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8010afe:	fa1f fc8c 	uxth.w	ip, ip
 8010b02:	f8cd c000 	str.w	ip, [sp]
 8010b06:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8010b0a:	47d8      	blx	fp
 8010b0c:	4683      	mov	fp, r0
 8010b0e:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8010b12:	a807      	add	r0, sp, #28
 8010b14:	f7ff f810 	bl	800fb38 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010b18:	6823      	ldr	r3, [r4, #0]
 8010b1a:	4620      	mov	r0, r4
 8010b1c:	a907      	add	r1, sp, #28
 8010b1e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010b20:	4798      	blx	r3
 8010b22:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8010b26:	eba0 000b 	sub.w	r0, r0, fp
 8010b2a:	b200      	sxth	r0, r0
 8010b2c:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8010b30:	b918      	cbnz	r0, 8010b3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8010b32:	b2b9      	uxth	r1, r7
 8010b34:	4650      	mov	r0, sl
 8010b36:	f7ff fa7b 	bl	8010030 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010b3a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8010b3e:	f1bb 0f00 	cmp.w	fp, #0
 8010b42:	f43f af2c 	beq.w	801099e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8010b46:	882b      	ldrh	r3, [r5, #0]
 8010b48:	2700      	movs	r7, #0
 8010b4a:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8010b4e:	3301      	adds	r3, #1
 8010b50:	b29b      	uxth	r3, r3
 8010b52:	b299      	uxth	r1, r3
 8010b54:	00fe      	lsls	r6, r7, #3
 8010b56:	458b      	cmp	fp, r1
 8010b58:	d9a4      	bls.n	8010aa4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 8010b5a:	4426      	add	r6, r4
 8010b5c:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8010b60:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 8010b64:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8010b68:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8010b6c:	4408      	add	r0, r1
 8010b6e:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8010b72:	4461      	add	r1, ip
 8010b74:	b200      	sxth	r0, r0
 8010b76:	b209      	sxth	r1, r1
 8010b78:	4288      	cmp	r0, r1
 8010b7a:	f6bf af72 	bge.w	8010a62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 8010b7e:	4584      	cmp	ip, r0
 8010b80:	4662      	mov	r2, ip
 8010b82:	461f      	mov	r7, r3
 8010b84:	bfb8      	it	lt
 8010b86:	4602      	movlt	r2, r0
 8010b88:	3301      	adds	r3, #1
 8010b8a:	e7e2      	b.n	8010b52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 8010b8c:	d10e      	bne.n	8010bac <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 8010b8e:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8010b92:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8010b96:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8010b9a:	4473      	add	r3, lr
 8010b9c:	b21b      	sxth	r3, r3
 8010b9e:	429e      	cmp	r6, r3
 8010ba0:	bfa8      	it	ge
 8010ba2:	461e      	movge	r6, r3
 8010ba4:	4287      	cmp	r7, r0
 8010ba6:	bfb8      	it	lt
 8010ba8:	46e1      	movlt	r9, ip
 8010baa:	e757      	b.n	8010a5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8010bac:	4286      	cmp	r6, r0
 8010bae:	bfa8      	it	ge
 8010bb0:	4606      	movge	r6, r0
 8010bb2:	e753      	b.n	8010a5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8010bb4:	eb0a 0007 	add.w	r0, sl, r7
 8010bb8:	4427      	add	r7, r4
 8010bba:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8010bbe:	f1bb 0f13 	cmp.w	fp, #19
 8010bc2:	bfdc      	itt	le
 8010bc4:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 8010bc8:	445e      	addle	r6, fp
 8010bca:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8010bce:	bfd8      	it	le
 8010bd0:	b236      	sxthle	r6, r6
 8010bd2:	f7f9 f8f8 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010bd6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8010bda:	2800      	cmp	r0, #0
 8010bdc:	f47f af1a 	bne.w	8010a14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 8010be0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8010be4:	fa1f fb8b 	uxth.w	fp, fp
 8010be8:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8010bec:	1ab6      	subs	r6, r6, r2
 8010bee:	4829      	ldr	r0, [pc, #164]	@ (8010c94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 8010bf0:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8010bf4:	2e14      	cmp	r6, #20
 8010bf6:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8010bfa:	6800      	ldr	r0, [r0, #0]
 8010bfc:	bfa8      	it	ge
 8010bfe:	2614      	movge	r6, #20
 8010c00:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010c04:	f8ad 201e 	strh.w	r2, [sp, #30]
 8010c08:	b289      	uxth	r1, r1
 8010c0a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010c0e:	b2b6      	uxth	r6, r6
 8010c10:	f8d0 c000 	ldr.w	ip, [r0]
 8010c14:	b292      	uxth	r2, r2
 8010c16:	455e      	cmp	r6, fp
 8010c18:	bf94      	ite	ls
 8010c1a:	9600      	strls	r6, [sp, #0]
 8010c1c:	f8cd b000 	strhi.w	fp, [sp]
 8010c20:	b29b      	uxth	r3, r3
 8010c22:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 8010c26:	47b0      	blx	r6
 8010c28:	6823      	ldr	r3, [r4, #0]
 8010c2a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8010c2e:	a907      	add	r1, sp, #28
 8010c30:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010c32:	4620      	mov	r0, r4
 8010c34:	4798      	blx	r3
 8010c36:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 8010c3a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8010c3e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8010c42:	1a5b      	subs	r3, r3, r1
 8010c44:	440a      	add	r2, r1
 8010c46:	b21b      	sxth	r3, r3
 8010c48:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8010c4c:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8010c50:	2b00      	cmp	r3, #0
 8010c52:	f47f aeda 	bne.w	8010a0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 8010c56:	fa1f f189 	uxth.w	r1, r9
 8010c5a:	4650      	mov	r0, sl
 8010c5c:	f7ff f9e8 	bl	8010030 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010c60:	e6d3      	b.n	8010a0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 8010c62:	882e      	ldrh	r6, [r5, #0]
 8010c64:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010c68:	42b3      	cmp	r3, r6
 8010c6a:	f67f ae98 	bls.w	801099e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8010c6e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8010c72:	ab07      	add	r3, sp, #28
 8010c74:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010c78:	6851      	ldr	r1, [r2, #4]
 8010c7a:	c303      	stmia	r3!, {r0, r1}
 8010c7c:	a807      	add	r0, sp, #28
 8010c7e:	f7f9 f8a2 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010c82:	b920      	cbnz	r0, 8010c8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 8010c84:	6823      	ldr	r3, [r4, #0]
 8010c86:	a907      	add	r1, sp, #28
 8010c88:	4620      	mov	r0, r4
 8010c8a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010c8c:	4798      	blx	r3
 8010c8e:	3601      	adds	r6, #1
 8010c90:	b2b6      	uxth	r6, r6
 8010c92:	e7e7      	b.n	8010c64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 8010c94:	20016b74 	.word	0x20016b74

08010c98 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8010c98:	4b03      	ldr	r3, [pc, #12]	@ (8010ca8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8010c9a:	2200      	movs	r2, #0
 8010c9c:	801a      	strh	r2, [r3, #0]
 8010c9e:	805a      	strh	r2, [r3, #2]
 8010ca0:	809a      	strh	r2, [r3, #4]
 8010ca2:	80da      	strh	r2, [r3, #6]
 8010ca4:	4770      	bx	lr
 8010ca6:	bf00      	nop
 8010ca8:	20016bc0 	.word	0x20016bc0

08010cac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8010cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cb0:	b09d      	sub	sp, #116	@ 0x74
 8010cb2:	4606      	mov	r6, r0
 8010cb4:	4614      	mov	r4, r2
 8010cb6:	468a      	mov	sl, r1
 8010cb8:	a803      	add	r0, sp, #12
 8010cba:	461d      	mov	r5, r3
 8010cbc:	f000 fe48 	bl	8011950 <_ZN8touchgfx12TextProviderC1Ev>
 8010cc0:	6833      	ldr	r3, [r6, #0]
 8010cc2:	4630      	mov	r0, r6
 8010cc4:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8010cc8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010cca:	4798      	blx	r3
 8010ccc:	6833      	ldr	r3, [r6, #0]
 8010cce:	4607      	mov	r7, r0
 8010cd0:	4630      	mov	r0, r6
 8010cd2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010cd4:	4798      	blx	r3
 8010cd6:	462a      	mov	r2, r5
 8010cd8:	2500      	movs	r5, #0
 8010cda:	4621      	mov	r1, r4
 8010cdc:	9000      	str	r0, [sp, #0]
 8010cde:	463b      	mov	r3, r7
 8010ce0:	462c      	mov	r4, r5
 8010ce2:	46a9      	mov	r9, r5
 8010ce4:	46a8      	mov	r8, r5
 8010ce6:	a803      	add	r0, sp, #12
 8010ce8:	f000 fe85 	bl	80119f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010cec:	2300      	movs	r3, #0
 8010cee:	9302      	str	r3, [sp, #8]
 8010cf0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010cf4:	429c      	cmp	r4, r3
 8010cf6:	d002      	beq.n	8010cfe <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8010cf8:	455c      	cmp	r4, fp
 8010cfa:	bf18      	it	ne
 8010cfc:	4625      	movne	r5, r4
 8010cfe:	ab02      	add	r3, sp, #8
 8010d00:	4632      	mov	r2, r6
 8010d02:	4651      	mov	r1, sl
 8010d04:	a803      	add	r0, sp, #12
 8010d06:	f001 f96b 	bl	8011fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010d0a:	4604      	mov	r4, r0
 8010d0c:	b108      	cbz	r0, 8010d12 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8010d0e:	280a      	cmp	r0, #10
 8010d10:	d10a      	bne.n	8010d28 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8010d12:	45c1      	cmp	r9, r8
 8010d14:	bf38      	it	cc
 8010d16:	46c1      	movcc	r9, r8
 8010d18:	f04f 0800 	mov.w	r8, #0
 8010d1c:	2c00      	cmp	r4, #0
 8010d1e:	d1e5      	bne.n	8010cec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010d20:	4648      	mov	r0, r9
 8010d22:	b01d      	add	sp, #116	@ 0x74
 8010d24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d28:	9a02      	ldr	r2, [sp, #8]
 8010d2a:	2a00      	cmp	r2, #0
 8010d2c:	d0de      	beq.n	8010cec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010d2e:	7b57      	ldrb	r7, [r2, #13]
 8010d30:	4629      	mov	r1, r5
 8010d32:	6833      	ldr	r3, [r6, #0]
 8010d34:	007f      	lsls	r7, r7, #1
 8010d36:	8894      	ldrh	r4, [r2, #4]
 8010d38:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010d3a:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8010d3e:	7a97      	ldrb	r7, [r2, #10]
 8010d40:	4307      	orrs	r7, r0
 8010d42:	4630      	mov	r0, r6
 8010d44:	4798      	blx	r3
 8010d46:	4438      	add	r0, r7
 8010d48:	4480      	add	r8, r0
 8010d4a:	fa1f f888 	uxth.w	r8, r8
 8010d4e:	e7e5      	b.n	8010d1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08010d50 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8010d50:	b508      	push	{r3, lr}
 8010d52:	6803      	ldr	r3, [r0, #0]
 8010d54:	68db      	ldr	r3, [r3, #12]
 8010d56:	4798      	blx	r3
 8010d58:	b128      	cbz	r0, 8010d66 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8010d5a:	7b43      	ldrb	r3, [r0, #13]
 8010d5c:	7a80      	ldrb	r0, [r0, #10]
 8010d5e:	005b      	lsls	r3, r3, #1
 8010d60:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010d64:	4318      	orrs	r0, r3
 8010d66:	bd08      	pop	{r3, pc}

08010d68 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8010d68:	b40e      	push	{r1, r2, r3}
 8010d6a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d6c:	b09e      	sub	sp, #120	@ 0x78
 8010d6e:	4605      	mov	r5, r0
 8010d70:	ab23      	add	r3, sp, #140	@ 0x8c
 8010d72:	a805      	add	r0, sp, #20
 8010d74:	f853 4b04 	ldr.w	r4, [r3], #4
 8010d78:	9303      	str	r3, [sp, #12]
 8010d7a:	f000 fde9 	bl	8011950 <_ZN8touchgfx12TextProviderC1Ev>
 8010d7e:	682b      	ldr	r3, [r5, #0]
 8010d80:	4628      	mov	r0, r5
 8010d82:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010d84:	4798      	blx	r3
 8010d86:	682b      	ldr	r3, [r5, #0]
 8010d88:	4606      	mov	r6, r0
 8010d8a:	4628      	mov	r0, r5
 8010d8c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010d8e:	4798      	blx	r3
 8010d90:	4633      	mov	r3, r6
 8010d92:	4621      	mov	r1, r4
 8010d94:	ae1e      	add	r6, sp, #120	@ 0x78
 8010d96:	2400      	movs	r4, #0
 8010d98:	9000      	str	r0, [sp, #0]
 8010d9a:	9a03      	ldr	r2, [sp, #12]
 8010d9c:	a805      	add	r0, sp, #20
 8010d9e:	f000 fe2a 	bl	80119f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010da2:	f846 4d68 	str.w	r4, [r6, #-104]!
 8010da6:	462a      	mov	r2, r5
 8010da8:	4633      	mov	r3, r6
 8010daa:	4621      	mov	r1, r4
 8010dac:	a805      	add	r0, sp, #20
 8010dae:	f001 f917 	bl	8011fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010db2:	b300      	cbz	r0, 8010df6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 8010db4:	280a      	cmp	r0, #10
 8010db6:	d01a      	beq.n	8010dee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8010db8:	9f04      	ldr	r7, [sp, #16]
 8010dba:	b1c7      	cbz	r7, 8010dee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8010dbc:	7b78      	ldrb	r0, [r7, #13]
 8010dbe:	7a3b      	ldrb	r3, [r7, #8]
 8010dc0:	00c1      	lsls	r1, r0, #3
 8010dc2:	88ea      	ldrh	r2, [r5, #6]
 8010dc4:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8010dc8:	4319      	orrs	r1, r3
 8010dca:	0643      	lsls	r3, r0, #25
 8010dcc:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8010dd0:	bf48      	it	mi
 8010dd2:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8010dd6:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8010dda:	bf48      	it	mi
 8010ddc:	b219      	sxthmi	r1, r3
 8010dde:	79fb      	ldrb	r3, [r7, #7]
 8010de0:	4303      	orrs	r3, r0
 8010de2:	4413      	add	r3, r2
 8010de4:	1a5b      	subs	r3, r3, r1
 8010de6:	b21b      	sxth	r3, r3
 8010de8:	429c      	cmp	r4, r3
 8010dea:	bfb8      	it	lt
 8010dec:	461c      	movlt	r4, r3
 8010dee:	4633      	mov	r3, r6
 8010df0:	462a      	mov	r2, r5
 8010df2:	2100      	movs	r1, #0
 8010df4:	e7da      	b.n	8010dac <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8010df6:	b2a0      	uxth	r0, r4
 8010df8:	b01e      	add	sp, #120	@ 0x78
 8010dfa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010dfe:	b003      	add	sp, #12
 8010e00:	4770      	bx	lr

08010e02 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8010e02:	7a43      	ldrb	r3, [r0, #9]
 8010e04:	8880      	ldrh	r0, [r0, #4]
 8010e06:	4418      	add	r0, r3
 8010e08:	b280      	uxth	r0, r0
 8010e0a:	4770      	bx	lr

08010e0c <_ZNK8touchgfx4Font13getFontHeightEv>:
 8010e0c:	6803      	ldr	r3, [r0, #0]
 8010e0e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010e10:	4718      	bx	r3

08010e12 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8010e12:	b40e      	push	{r1, r2, r3}
 8010e14:	b570      	push	{r4, r5, r6, lr}
 8010e16:	b09d      	sub	sp, #116	@ 0x74
 8010e18:	4604      	mov	r4, r0
 8010e1a:	ab21      	add	r3, sp, #132	@ 0x84
 8010e1c:	a803      	add	r0, sp, #12
 8010e1e:	f853 5b04 	ldr.w	r5, [r3], #4
 8010e22:	9302      	str	r3, [sp, #8]
 8010e24:	f000 fd94 	bl	8011950 <_ZN8touchgfx12TextProviderC1Ev>
 8010e28:	6823      	ldr	r3, [r4, #0]
 8010e2a:	4620      	mov	r0, r4
 8010e2c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010e2e:	4798      	blx	r3
 8010e30:	6823      	ldr	r3, [r4, #0]
 8010e32:	4606      	mov	r6, r0
 8010e34:	4620      	mov	r0, r4
 8010e36:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010e38:	2401      	movs	r4, #1
 8010e3a:	4798      	blx	r3
 8010e3c:	4633      	mov	r3, r6
 8010e3e:	9000      	str	r0, [sp, #0]
 8010e40:	4629      	mov	r1, r5
 8010e42:	9a02      	ldr	r2, [sp, #8]
 8010e44:	a803      	add	r0, sp, #12
 8010e46:	f000 fdd6 	bl	80119f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010e4a:	a803      	add	r0, sp, #12
 8010e4c:	f001 f994 	bl	8012178 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010e50:	b2a3      	uxth	r3, r4
 8010e52:	b138      	cbz	r0, 8010e64 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 8010e54:	280a      	cmp	r0, #10
 8010e56:	a803      	add	r0, sp, #12
 8010e58:	bf04      	itt	eq
 8010e5a:	3301      	addeq	r3, #1
 8010e5c:	b21c      	sxtheq	r4, r3
 8010e5e:	f001 f98b 	bl	8012178 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010e62:	e7f5      	b.n	8010e50 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8010e64:	4618      	mov	r0, r3
 8010e66:	b01d      	add	sp, #116	@ 0x74
 8010e68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010e6c:	b003      	add	sp, #12
 8010e6e:	4770      	bx	lr

08010e70 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8010e70:	b40e      	push	{r1, r2, r3}
 8010e72:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010e74:	b09e      	sub	sp, #120	@ 0x78
 8010e76:	4604      	mov	r4, r0
 8010e78:	ab23      	add	r3, sp, #140	@ 0x8c
 8010e7a:	a805      	add	r0, sp, #20
 8010e7c:	f853 5b04 	ldr.w	r5, [r3], #4
 8010e80:	9303      	str	r3, [sp, #12]
 8010e82:	f000 fd65 	bl	8011950 <_ZN8touchgfx12TextProviderC1Ev>
 8010e86:	6823      	ldr	r3, [r4, #0]
 8010e88:	4620      	mov	r0, r4
 8010e8a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010e8c:	4798      	blx	r3
 8010e8e:	6823      	ldr	r3, [r4, #0]
 8010e90:	4606      	mov	r6, r0
 8010e92:	4620      	mov	r0, r4
 8010e94:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010e96:	4798      	blx	r3
 8010e98:	4633      	mov	r3, r6
 8010e9a:	4629      	mov	r1, r5
 8010e9c:	9000      	str	r0, [sp, #0]
 8010e9e:	9a03      	ldr	r2, [sp, #12]
 8010ea0:	a805      	add	r0, sp, #20
 8010ea2:	f000 fda8 	bl	80119f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010ea6:	ad1e      	add	r5, sp, #120	@ 0x78
 8010ea8:	2100      	movs	r1, #0
 8010eaa:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8010eae:	4622      	mov	r2, r4
 8010eb0:	a805      	add	r0, sp, #20
 8010eb2:	f845 1d68 	str.w	r1, [r5, #-104]!
 8010eb6:	462b      	mov	r3, r5
 8010eb8:	f001 f892 	bl	8011fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010ebc:	b1d8      	cbz	r0, 8010ef6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8010ebe:	280a      	cmp	r0, #10
 8010ec0:	d012      	beq.n	8010ee8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010ec2:	9804      	ldr	r0, [sp, #16]
 8010ec4:	b180      	cbz	r0, 8010ee8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010ec6:	7b47      	ldrb	r7, [r0, #13]
 8010ec8:	88e2      	ldrh	r2, [r4, #6]
 8010eca:	00fb      	lsls	r3, r7, #3
 8010ecc:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8010ed0:	7a03      	ldrb	r3, [r0, #8]
 8010ed2:	430b      	orrs	r3, r1
 8010ed4:	0679      	lsls	r1, r7, #25
 8010ed6:	bf44      	itt	mi
 8010ed8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010edc:	b21b      	sxthmi	r3, r3
 8010ede:	1ad3      	subs	r3, r2, r3
 8010ee0:	b21b      	sxth	r3, r3
 8010ee2:	429e      	cmp	r6, r3
 8010ee4:	bfa8      	it	ge
 8010ee6:	461e      	movge	r6, r3
 8010ee8:	462b      	mov	r3, r5
 8010eea:	4622      	mov	r2, r4
 8010eec:	2100      	movs	r1, #0
 8010eee:	a805      	add	r0, sp, #20
 8010ef0:	f001 f876 	bl	8011fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010ef4:	e7e2      	b.n	8010ebc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8010ef6:	4630      	mov	r0, r6
 8010ef8:	b01e      	add	sp, #120	@ 0x78
 8010efa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010efe:	b003      	add	sp, #12
 8010f00:	4770      	bx	lr

08010f02 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8010f02:	b513      	push	{r0, r1, r4, lr}
 8010f04:	6803      	ldr	r3, [r0, #0]
 8010f06:	2400      	movs	r4, #0
 8010f08:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010f0c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010f10:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010f14:	4669      	mov	r1, sp
 8010f16:	691b      	ldr	r3, [r3, #16]
 8010f18:	9400      	str	r4, [sp, #0]
 8010f1a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010f1e:	4798      	blx	r3
 8010f20:	b002      	add	sp, #8
 8010f22:	bd10      	pop	{r4, pc}

08010f24 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8010f24:	b538      	push	{r3, r4, r5, lr}
 8010f26:	680b      	ldr	r3, [r1, #0]
 8010f28:	460c      	mov	r4, r1
 8010f2a:	4605      	mov	r5, r0
 8010f2c:	68db      	ldr	r3, [r3, #12]
 8010f2e:	4798      	blx	r3
 8010f30:	6823      	ldr	r3, [r4, #0]
 8010f32:	4620      	mov	r0, r4
 8010f34:	4629      	mov	r1, r5
 8010f36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010f38:	4798      	blx	r3
 8010f3a:	4628      	mov	r0, r5
 8010f3c:	bd38      	pop	{r3, r4, r5, pc}

08010f3e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8010f3e:	b410      	push	{r4}
 8010f40:	880a      	ldrh	r2, [r1, #0]
 8010f42:	8884      	ldrh	r4, [r0, #4]
 8010f44:	4422      	add	r2, r4
 8010f46:	800a      	strh	r2, [r1, #0]
 8010f48:	884a      	ldrh	r2, [r1, #2]
 8010f4a:	88c4      	ldrh	r4, [r0, #6]
 8010f4c:	4422      	add	r2, r4
 8010f4e:	804a      	strh	r2, [r1, #2]
 8010f50:	6940      	ldr	r0, [r0, #20]
 8010f52:	b120      	cbz	r0, 8010f5e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8010f54:	6803      	ldr	r3, [r0, #0]
 8010f56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010f5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010f5c:	4718      	bx	r3
 8010f5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010f62:	4770      	bx	lr

08010f64 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8010f64:	b570      	push	{r4, r5, r6, lr}
 8010f66:	8882      	ldrh	r2, [r0, #4]
 8010f68:	460c      	mov	r4, r1
 8010f6a:	880b      	ldrh	r3, [r1, #0]
 8010f6c:	4605      	mov	r5, r0
 8010f6e:	4413      	add	r3, r2
 8010f70:	800b      	strh	r3, [r1, #0]
 8010f72:	884b      	ldrh	r3, [r1, #2]
 8010f74:	88c2      	ldrh	r2, [r0, #6]
 8010f76:	4413      	add	r3, r2
 8010f78:	804b      	strh	r3, [r1, #2]
 8010f7a:	1d01      	adds	r1, r0, #4
 8010f7c:	4620      	mov	r0, r4
 8010f7e:	f7f8 fedf 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 8010f82:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010f86:	2b00      	cmp	r3, #0
 8010f88:	dd0b      	ble.n	8010fa2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010f8a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010f8e:	2b00      	cmp	r3, #0
 8010f90:	dd07      	ble.n	8010fa2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010f92:	6968      	ldr	r0, [r5, #20]
 8010f94:	b128      	cbz	r0, 8010fa2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010f96:	6803      	ldr	r3, [r0, #0]
 8010f98:	4621      	mov	r1, r4
 8010f9a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010f9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010fa0:	4718      	bx	r3
 8010fa2:	bd70      	pop	{r4, r5, r6, pc}

08010fa4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010fa4:	b570      	push	{r4, r5, r6, lr}
 8010fa6:	8882      	ldrh	r2, [r0, #4]
 8010fa8:	460c      	mov	r4, r1
 8010faa:	880b      	ldrh	r3, [r1, #0]
 8010fac:	4605      	mov	r5, r0
 8010fae:	4413      	add	r3, r2
 8010fb0:	800b      	strh	r3, [r1, #0]
 8010fb2:	884b      	ldrh	r3, [r1, #2]
 8010fb4:	88c2      	ldrh	r2, [r0, #6]
 8010fb6:	4413      	add	r3, r2
 8010fb8:	804b      	strh	r3, [r1, #2]
 8010fba:	1d01      	adds	r1, r0, #4
 8010fbc:	4620      	mov	r0, r4
 8010fbe:	f7f8 febf 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 8010fc2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010fc6:	2b00      	cmp	r3, #0
 8010fc8:	dd19      	ble.n	8010ffe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010fca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010fce:	2b00      	cmp	r3, #0
 8010fd0:	dd15      	ble.n	8010ffe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010fd2:	6968      	ldr	r0, [r5, #20]
 8010fd4:	b128      	cbz	r0, 8010fe2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8010fd6:	6803      	ldr	r3, [r0, #0]
 8010fd8:	4621      	mov	r1, r4
 8010fda:	691b      	ldr	r3, [r3, #16]
 8010fdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010fe0:	4718      	bx	r3
 8010fe2:	4b07      	ldr	r3, [pc, #28]	@ (8011000 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8010fe4:	681b      	ldr	r3, [r3, #0]
 8010fe6:	3304      	adds	r3, #4
 8010fe8:	429d      	cmp	r5, r3
 8010fea:	d108      	bne.n	8010ffe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010fec:	f7fe ff10 	bl	800fe10 <_ZN8touchgfx11Application11getInstanceEv>
 8010ff0:	6803      	ldr	r3, [r0, #0]
 8010ff2:	6821      	ldr	r1, [r4, #0]
 8010ff4:	6862      	ldr	r2, [r4, #4]
 8010ff6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010ff8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ffc:	4718      	bx	r3
 8010ffe:	bd70      	pop	{r4, r5, r6, pc}
 8011000:	20016bb8 	.word	0x20016bb8

08011004 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8011004:	b570      	push	{r4, r5, r6, lr}
 8011006:	4604      	mov	r4, r0
 8011008:	4616      	mov	r6, r2
 801100a:	460d      	mov	r5, r1
 801100c:	b901      	cbnz	r1, 8011010 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801100e:	b192      	cbz	r2, 8011036 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8011010:	6823      	ldr	r3, [r4, #0]
 8011012:	4620      	mov	r0, r4
 8011014:	699b      	ldr	r3, [r3, #24]
 8011016:	4798      	blx	r3
 8011018:	88e2      	ldrh	r2, [r4, #6]
 801101a:	88a1      	ldrh	r1, [r4, #4]
 801101c:	4620      	mov	r0, r4
 801101e:	4432      	add	r2, r6
 8011020:	4429      	add	r1, r5
 8011022:	b212      	sxth	r2, r2
 8011024:	b209      	sxth	r1, r1
 8011026:	f7f1 ffbc 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 801102a:	6823      	ldr	r3, [r4, #0]
 801102c:	4620      	mov	r0, r4
 801102e:	699b      	ldr	r3, [r3, #24]
 8011030:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011034:	4718      	bx	r3
 8011036:	bd70      	pop	{r4, r5, r6, pc}

08011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8011038:	b510      	push	{r4, lr}
 801103a:	2300      	movs	r3, #0
 801103c:	4604      	mov	r4, r0
 801103e:	4608      	mov	r0, r1
 8011040:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8011044:	8023      	strh	r3, [r4, #0]
 8011046:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801104a:	8063      	strh	r3, [r4, #2]
 801104c:	6803      	ldr	r3, [r0, #0]
 801104e:	80a1      	strh	r1, [r4, #4]
 8011050:	4621      	mov	r1, r4
 8011052:	80e2      	strh	r2, [r4, #6]
 8011054:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011056:	4798      	blx	r3
 8011058:	4620      	mov	r0, r4
 801105a:	bd10      	pop	{r4, pc}

0801105c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801105c:	b530      	push	{r4, r5, lr}
 801105e:	8083      	strh	r3, [r0, #4]
 8011060:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011064:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8011068:	80c3      	strh	r3, [r0, #6]
 801106a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801106e:	6141      	str	r1, [r0, #20]
 8011070:	7203      	strb	r3, [r0, #8]
 8011072:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011076:	8302      	strh	r2, [r0, #24]
 8011078:	7243      	strb	r3, [r0, #9]
 801107a:	7a83      	ldrb	r3, [r0, #10]
 801107c:	f365 0306 	bfi	r3, r5, #0, #7
 8011080:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8011084:	f365 13c7 	bfi	r3, r5, #7, #1
 8011088:	7283      	strb	r3, [r0, #10]
 801108a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801108e:	72c3      	strb	r3, [r0, #11]
 8011090:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8011094:	7303      	strb	r3, [r0, #12]
 8011096:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801109a:	81c3      	strh	r3, [r0, #14]
 801109c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80110a0:	8203      	strh	r3, [r0, #16]
 80110a2:	4b01      	ldr	r3, [pc, #4]	@ (80110a8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80110a4:	6003      	str	r3, [r0, #0]
 80110a6:	bd30      	pop	{r4, r5, pc}
 80110a8:	080249d0 	.word	0x080249d0

080110ac <_ZNK8touchgfx9ConstFont4findEt>:
 80110ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80110ae:	6944      	ldr	r4, [r0, #20]
 80110b0:	b3bc      	cbz	r4, 8011122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80110b2:	88a3      	ldrh	r3, [r4, #4]
 80110b4:	8b02      	ldrh	r2, [r0, #24]
 80110b6:	1acb      	subs	r3, r1, r3
 80110b8:	f102 32ff 	add.w	r2, r2, #4294967295
 80110bc:	d431      	bmi.n	8011122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80110be:	4293      	cmp	r3, r2
 80110c0:	dd0c      	ble.n	80110dc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80110c2:	230e      	movs	r3, #14
 80110c4:	fb03 4302 	mla	r3, r3, r2, r4
 80110c8:	889b      	ldrh	r3, [r3, #4]
 80110ca:	1a5b      	subs	r3, r3, r1
 80110cc:	1ad3      	subs	r3, r2, r3
 80110ce:	429a      	cmp	r2, r3
 80110d0:	db27      	blt.n	8011122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80110d2:	2b00      	cmp	r3, #0
 80110d4:	bfbc      	itt	lt
 80110d6:	2302      	movlt	r3, #2
 80110d8:	fb92 f3f3 	sdivlt	r3, r2, r3
 80110dc:	2500      	movs	r5, #0
 80110de:	260e      	movs	r6, #14
 80110e0:	4295      	cmp	r5, r2
 80110e2:	dc1e      	bgt.n	8011122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80110e4:	fb06 4003 	mla	r0, r6, r3, r4
 80110e8:	8887      	ldrh	r7, [r0, #4]
 80110ea:	42b9      	cmp	r1, r7
 80110ec:	d01a      	beq.n	8011124 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80110ee:	d20d      	bcs.n	801110c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80110f0:	1e5a      	subs	r2, r3, #1
 80110f2:	4295      	cmp	r5, r2
 80110f4:	dc15      	bgt.n	8011122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80110f6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80110fa:	1a5b      	subs	r3, r3, r1
 80110fc:	1ad3      	subs	r3, r2, r3
 80110fe:	429a      	cmp	r2, r3
 8011100:	db0f      	blt.n	8011122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011102:	429d      	cmp	r5, r3
 8011104:	ddec      	ble.n	80110e0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011106:	1953      	adds	r3, r2, r5
 8011108:	105b      	asrs	r3, r3, #1
 801110a:	e7e9      	b.n	80110e0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801110c:	1c5d      	adds	r5, r3, #1
 801110e:	42aa      	cmp	r2, r5
 8011110:	db07      	blt.n	8011122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011112:	8a43      	ldrh	r3, [r0, #18]
 8011114:	1acb      	subs	r3, r1, r3
 8011116:	442b      	add	r3, r5
 8011118:	429d      	cmp	r5, r3
 801111a:	dc02      	bgt.n	8011122 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801111c:	429a      	cmp	r2, r3
 801111e:	dadf      	bge.n	80110e0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011120:	e7f1      	b.n	8011106 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011122:	2000      	movs	r0, #0
 8011124:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011126 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8011126:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011128:	4604      	mov	r4, r0
 801112a:	4617      	mov	r7, r2
 801112c:	461e      	mov	r6, r3
 801112e:	b911      	cbnz	r1, 8011136 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011130:	2500      	movs	r5, #0
 8011132:	4628      	mov	r0, r5
 8011134:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011136:	290a      	cmp	r1, #10
 8011138:	d0fa      	beq.n	8011130 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801113a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801113e:	4291      	cmp	r1, r2
 8011140:	d0f6      	beq.n	8011130 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011142:	f242 020b 	movw	r2, #8203	@ 0x200b
 8011146:	4291      	cmp	r1, r2
 8011148:	d0f2      	beq.n	8011130 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801114a:	f7ff ffaf 	bl	80110ac <_ZNK8touchgfx9ConstFont4findEt>
 801114e:	4605      	mov	r5, r0
 8011150:	b950      	cbnz	r0, 8011168 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011152:	6823      	ldr	r3, [r4, #0]
 8011154:	4620      	mov	r0, r4
 8011156:	691b      	ldr	r3, [r3, #16]
 8011158:	4798      	blx	r3
 801115a:	4601      	mov	r1, r0
 801115c:	4620      	mov	r0, r4
 801115e:	f7ff ffa5 	bl	80110ac <_ZNK8touchgfx9ConstFont4findEt>
 8011162:	4605      	mov	r5, r0
 8011164:	2800      	cmp	r0, #0
 8011166:	d0e3      	beq.n	8011130 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011168:	6823      	ldr	r3, [r4, #0]
 801116a:	4629      	mov	r1, r5
 801116c:	4620      	mov	r0, r4
 801116e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8011170:	4798      	blx	r3
 8011172:	6038      	str	r0, [r7, #0]
 8011174:	6823      	ldr	r3, [r4, #0]
 8011176:	4620      	mov	r0, r4
 8011178:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801117a:	4798      	blx	r3
 801117c:	7030      	strb	r0, [r6, #0]
 801117e:	e7d8      	b.n	8011132 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011180 <_ZN8touchgfx4clzuEm>:
 8011180:	4603      	mov	r3, r0
 8011182:	b1c8      	cbz	r0, 80111b8 <_ZN8touchgfx4clzuEm+0x38>
 8011184:	0c02      	lsrs	r2, r0, #16
 8011186:	0412      	lsls	r2, r2, #16
 8011188:	b9a2      	cbnz	r2, 80111b4 <_ZN8touchgfx4clzuEm+0x34>
 801118a:	0403      	lsls	r3, r0, #16
 801118c:	2010      	movs	r0, #16
 801118e:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8011192:	bf04      	itt	eq
 8011194:	021b      	lsleq	r3, r3, #8
 8011196:	3008      	addeq	r0, #8
 8011198:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 801119c:	bf04      	itt	eq
 801119e:	011b      	lsleq	r3, r3, #4
 80111a0:	3004      	addeq	r0, #4
 80111a2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 80111a6:	bf04      	itt	eq
 80111a8:	009b      	lsleq	r3, r3, #2
 80111aa:	3002      	addeq	r0, #2
 80111ac:	2b00      	cmp	r3, #0
 80111ae:	db04      	blt.n	80111ba <_ZN8touchgfx4clzuEm+0x3a>
 80111b0:	3001      	adds	r0, #1
 80111b2:	4770      	bx	lr
 80111b4:	2000      	movs	r0, #0
 80111b6:	e7ea      	b.n	801118e <_ZN8touchgfx4clzuEm+0xe>
 80111b8:	2020      	movs	r0, #32
 80111ba:	4770      	bx	lr

080111bc <_ZN8touchgfx7muldivuEmmmRm>:
 80111bc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80111c0:	460f      	mov	r7, r1
 80111c2:	4615      	mov	r5, r2
 80111c4:	461e      	mov	r6, r3
 80111c6:	4601      	mov	r1, r0
 80111c8:	b100      	cbz	r0, 80111cc <_ZN8touchgfx7muldivuEmmmRm+0x10>
 80111ca:	b927      	cbnz	r7, 80111d6 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 80111cc:	2000      	movs	r0, #0
 80111ce:	6030      	str	r0, [r6, #0]
 80111d0:	b002      	add	sp, #8
 80111d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80111d6:	f7ff ffd3 	bl	8011180 <_ZN8touchgfx4clzuEm>
 80111da:	b980      	cbnz	r0, 80111fe <_ZN8touchgfx7muldivuEmmmRm+0x42>
 80111dc:	4638      	mov	r0, r7
 80111de:	f7ff ffcf 	bl	8011180 <_ZN8touchgfx4clzuEm>
 80111e2:	2800      	cmp	r0, #0
 80111e4:	dd05      	ble.n	80111f2 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 80111e6:	4633      	mov	r3, r6
 80111e8:	462a      	mov	r2, r5
 80111ea:	4638      	mov	r0, r7
 80111ec:	f7ff ffe6 	bl	80111bc <_ZN8touchgfx7muldivuEmmmRm>
 80111f0:	e7ee      	b.n	80111d0 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80111f2:	f04f 33ff 	mov.w	r3, #4294967295
 80111f6:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 80111fa:	6033      	str	r3, [r6, #0]
 80111fc:	e7e8      	b.n	80111d0 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80111fe:	fa37 f800 	lsrs.w	r8, r7, r0
 8011202:	fb07 f301 	mul.w	r3, r7, r1
 8011206:	d105      	bne.n	8011214 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8011208:	fbb3 f0f5 	udiv	r0, r3, r5
 801120c:	fb05 3510 	mls	r5, r5, r0, r3
 8011210:	6035      	str	r5, [r6, #0]
 8011212:	e7dd      	b.n	80111d0 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011214:	2301      	movs	r3, #1
 8011216:	fa01 fa00 	lsl.w	sl, r1, r0
 801121a:	462a      	mov	r2, r5
 801121c:	fa03 f000 	lsl.w	r0, r3, r0
 8011220:	4633      	mov	r3, r6
 8011222:	fbba f9f5 	udiv	r9, sl, r5
 8011226:	3801      	subs	r0, #1
 8011228:	fb08 f409 	mul.w	r4, r8, r9
 801122c:	4038      	ands	r0, r7
 801122e:	f7ff ffc5 	bl	80111bc <_ZN8touchgfx7muldivuEmmmRm>
 8011232:	462a      	mov	r2, r5
 8011234:	4607      	mov	r7, r0
 8011236:	ab01      	add	r3, sp, #4
 8011238:	fb05 a119 	mls	r1, r5, r9, sl
 801123c:	4640      	mov	r0, r8
 801123e:	f7ff ffbd 	bl	80111bc <_ZN8touchgfx7muldivuEmmmRm>
 8011242:	9b01      	ldr	r3, [sp, #4]
 8011244:	6832      	ldr	r2, [r6, #0]
 8011246:	441a      	add	r2, r3
 8011248:	fbb2 f3f5 	udiv	r3, r2, r5
 801124c:	441c      	add	r4, r3
 801124e:	fb05 2513 	mls	r5, r5, r3, r2
 8011252:	443c      	add	r4, r7
 8011254:	4420      	add	r0, r4
 8011256:	e7db      	b.n	8011210 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08011258 <_ZN8touchgfx6muldivElllRl>:
 8011258:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801125a:	2800      	cmp	r0, #0
 801125c:	461e      	mov	r6, r3
 801125e:	bfba      	itte	lt
 8011260:	4240      	neglt	r0, r0
 8011262:	f04f 34ff 	movlt.w	r4, #4294967295
 8011266:	2401      	movge	r4, #1
 8011268:	2900      	cmp	r1, #0
 801126a:	bfbc      	itt	lt
 801126c:	4249      	neglt	r1, r1
 801126e:	4264      	neglt	r4, r4
 8011270:	2a00      	cmp	r2, #0
 8011272:	bfb6      	itet	lt
 8011274:	4265      	neglt	r5, r4
 8011276:	4625      	movge	r5, r4
 8011278:	4252      	neglt	r2, r2
 801127a:	4288      	cmp	r0, r1
 801127c:	bfc2      	ittt	gt
 801127e:	4603      	movgt	r3, r0
 8011280:	4608      	movgt	r0, r1
 8011282:	4619      	movgt	r1, r3
 8011284:	ab01      	add	r3, sp, #4
 8011286:	f7ff ff99 	bl	80111bc <_ZN8touchgfx7muldivuEmmmRm>
 801128a:	9b01      	ldr	r3, [sp, #4]
 801128c:	4368      	muls	r0, r5
 801128e:	435c      	muls	r4, r3
 8011290:	6034      	str	r4, [r6, #0]
 8011292:	b002      	add	sp, #8
 8011294:	bd70      	pop	{r4, r5, r6, pc}

08011296 <_ZN8touchgfx6muldivElll>:
 8011296:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011298:	4606      	mov	r6, r0
 801129a:	ab01      	add	r3, sp, #4
 801129c:	460d      	mov	r5, r1
 801129e:	4614      	mov	r4, r2
 80112a0:	f7ff ffda 	bl	8011258 <_ZN8touchgfx6muldivElllRl>
 80112a4:	2e00      	cmp	r6, #0
 80112a6:	db20      	blt.n	80112ea <_ZN8touchgfx6muldivElll+0x54>
 80112a8:	bf14      	ite	ne
 80112aa:	2301      	movne	r3, #1
 80112ac:	2300      	moveq	r3, #0
 80112ae:	2d00      	cmp	r5, #0
 80112b0:	db1e      	blt.n	80112f0 <_ZN8touchgfx6muldivElll+0x5a>
 80112b2:	bf14      	ite	ne
 80112b4:	2201      	movne	r2, #1
 80112b6:	2200      	moveq	r2, #0
 80112b8:	2c00      	cmp	r4, #0
 80112ba:	fb03 f202 	mul.w	r2, r3, r2
 80112be:	db1a      	blt.n	80112f6 <_ZN8touchgfx6muldivElll+0x60>
 80112c0:	bf14      	ite	ne
 80112c2:	2301      	movne	r3, #1
 80112c4:	2300      	moveq	r3, #0
 80112c6:	4353      	muls	r3, r2
 80112c8:	2b01      	cmp	r3, #1
 80112ca:	d117      	bne.n	80112fc <_ZN8touchgfx6muldivElll+0x66>
 80112cc:	2c00      	cmp	r4, #0
 80112ce:	9b01      	ldr	r3, [sp, #4]
 80112d0:	bfb8      	it	lt
 80112d2:	4264      	neglt	r4, r4
 80112d4:	2b00      	cmp	r3, #0
 80112d6:	f104 0401 	add.w	r4, r4, #1
 80112da:	bfb8      	it	lt
 80112dc:	425b      	neglt	r3, r3
 80112de:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80112e2:	db00      	blt.n	80112e6 <_ZN8touchgfx6muldivElll+0x50>
 80112e4:	3001      	adds	r0, #1
 80112e6:	b002      	add	sp, #8
 80112e8:	bd70      	pop	{r4, r5, r6, pc}
 80112ea:	f04f 33ff 	mov.w	r3, #4294967295
 80112ee:	e7de      	b.n	80112ae <_ZN8touchgfx6muldivElll+0x18>
 80112f0:	f04f 32ff 	mov.w	r2, #4294967295
 80112f4:	e7e0      	b.n	80112b8 <_ZN8touchgfx6muldivElll+0x22>
 80112f6:	f04f 33ff 	mov.w	r3, #4294967295
 80112fa:	e7e4      	b.n	80112c6 <_ZN8touchgfx6muldivElll+0x30>
 80112fc:	3301      	adds	r3, #1
 80112fe:	d1f2      	bne.n	80112e6 <_ZN8touchgfx6muldivElll+0x50>
 8011300:	9b01      	ldr	r3, [sp, #4]
 8011302:	2c00      	cmp	r4, #0
 8011304:	bfb8      	it	lt
 8011306:	4264      	neglt	r4, r4
 8011308:	2b00      	cmp	r3, #0
 801130a:	bfb8      	it	lt
 801130c:	425b      	neglt	r3, r3
 801130e:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8011312:	bfc8      	it	gt
 8011314:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8011318:	e7e5      	b.n	80112e6 <_ZN8touchgfx6muldivElll+0x50>

0801131a <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801131a:	2000      	movs	r0, #0
 801131c:	4770      	bx	lr

0801131e <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801131e:	2001      	movs	r0, #1
 8011320:	4770      	bx	lr

08011322 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8011322:	2002      	movs	r0, #2
 8011324:	4770      	bx	lr

08011326 <_ZN8touchgfx6ScreenD1Ev>:
 8011326:	4770      	bx	lr

08011328 <_ZN8touchgfx12GestureEventD1Ev>:
 8011328:	4770      	bx	lr

0801132a <_ZN8touchgfx9DragEventD1Ev>:
 801132a:	4770      	bx	lr

0801132c <_ZN8touchgfx10ClickEventD1Ev>:
 801132c:	4770      	bx	lr

0801132e <_ZN8touchgfx10ClickEventD0Ev>:
 801132e:	b510      	push	{r4, lr}
 8011330:	4604      	mov	r4, r0
 8011332:	210c      	movs	r1, #12
 8011334:	f00f fde4 	bl	8020f00 <_ZdlPvj>
 8011338:	4620      	mov	r0, r4
 801133a:	bd10      	pop	{r4, pc}

0801133c <_ZN8touchgfx9DragEventD0Ev>:
 801133c:	b510      	push	{r4, lr}
 801133e:	4604      	mov	r4, r0
 8011340:	2110      	movs	r1, #16
 8011342:	f00f fddd 	bl	8020f00 <_ZdlPvj>
 8011346:	4620      	mov	r0, r4
 8011348:	bd10      	pop	{r4, pc}

0801134a <_ZN8touchgfx12GestureEventD0Ev>:
 801134a:	b510      	push	{r4, lr}
 801134c:	4604      	mov	r4, r0
 801134e:	210c      	movs	r1, #12
 8011350:	f00f fdd6 	bl	8020f00 <_ZdlPvj>
 8011354:	4620      	mov	r0, r4
 8011356:	bd10      	pop	{r4, pc}

08011358 <_ZN8touchgfx6ScreenD0Ev>:
 8011358:	b510      	push	{r4, lr}
 801135a:	4604      	mov	r4, r0
 801135c:	213c      	movs	r1, #60	@ 0x3c
 801135e:	f00f fdcf 	bl	8020f00 <_ZdlPvj>
 8011362:	4620      	mov	r0, r4
 8011364:	bd10      	pop	{r4, pc}
	...

08011368 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011368:	b530      	push	{r4, r5, lr}
 801136a:	460d      	mov	r5, r1
 801136c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801136e:	b087      	sub	sp, #28
 8011370:	4604      	mov	r4, r0
 8011372:	b301      	cbz	r1, 80113b6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8011374:	a801      	add	r0, sp, #4
 8011376:	f7ff fe5f 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801137a:	892a      	ldrh	r2, [r5, #8]
 801137c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011380:	7928      	ldrb	r0, [r5, #4]
 8011382:	1ad2      	subs	r2, r2, r3
 8011384:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8011386:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801138a:	441a      	add	r2, r3
 801138c:	896b      	ldrh	r3, [r5, #10]
 801138e:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8011392:	f88d 0010 	strb.w	r0, [sp, #16]
 8011396:	1b5b      	subs	r3, r3, r5
 8011398:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 801139a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 801139c:	442b      	add	r3, r5
 801139e:	4d07      	ldr	r5, [pc, #28]	@ (80113bc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80113a0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80113a4:	a903      	add	r1, sp, #12
 80113a6:	9503      	str	r5, [sp, #12]
 80113a8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80113ac:	f8ad 3016 	strh.w	r3, [sp, #22]
 80113b0:	6803      	ldr	r3, [r0, #0]
 80113b2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80113b4:	4798      	blx	r3
 80113b6:	b007      	add	sp, #28
 80113b8:	bd30      	pop	{r4, r5, pc}
 80113ba:	bf00      	nop
 80113bc:	08024a60 	.word	0x08024a60

080113c0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80113c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80113c4:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80113c6:	b08a      	sub	sp, #40	@ 0x28
 80113c8:	4604      	mov	r4, r0
 80113ca:	460d      	mov	r5, r1
 80113cc:	b113      	cbz	r3, 80113d4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80113ce:	790b      	ldrb	r3, [r1, #4]
 80113d0:	2b00      	cmp	r3, #0
 80113d2:	d044      	beq.n	801145e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80113d4:	f104 0804 	add.w	r8, r4, #4
 80113d8:	a803      	add	r0, sp, #12
 80113da:	4641      	mov	r1, r8
 80113dc:	f7ff fe2c 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80113e0:	792b      	ldrb	r3, [r5, #4]
 80113e2:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80113e6:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80113ea:	b983      	cbnz	r3, 801140e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80113ec:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 80113f0:	892a      	ldrh	r2, [r5, #8]
 80113f2:	88e9      	ldrh	r1, [r5, #6]
 80113f4:	4640      	mov	r0, r8
 80113f6:	1b92      	subs	r2, r2, r6
 80113f8:	9301      	str	r3, [sp, #4]
 80113fa:	1bc9      	subs	r1, r1, r7
 80113fc:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8011400:	b212      	sxth	r2, r2
 8011402:	9300      	str	r3, [sp, #0]
 8011404:	b209      	sxth	r1, r1
 8011406:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 801140a:	f7f8 fbb7 	bl	8009b7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801140e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011410:	b329      	cbz	r1, 801145e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011412:	a805      	add	r0, sp, #20
 8011414:	f7ff fe10 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011418:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801141c:	792b      	ldrb	r3, [r5, #4]
 801141e:	a907      	add	r1, sp, #28
 8011420:	1abf      	subs	r7, r7, r2
 8011422:	88ea      	ldrh	r2, [r5, #6]
 8011424:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011426:	4417      	add	r7, r2
 8011428:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 801142a:	f88d 3020 	strb.w	r3, [sp, #32]
 801142e:	4417      	add	r7, r2
 8011430:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8011434:	1ab6      	subs	r6, r6, r2
 8011436:	892a      	ldrh	r2, [r5, #8]
 8011438:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 801143c:	4416      	add	r6, r2
 801143e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8011440:	4416      	add	r6, r2
 8011442:	4a08      	ldr	r2, [pc, #32]	@ (8011464 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8011444:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8011448:	2600      	movs	r6, #0
 801144a:	9207      	str	r2, [sp, #28]
 801144c:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8011450:	6803      	ldr	r3, [r0, #0]
 8011452:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011454:	4798      	blx	r3
 8011456:	792b      	ldrb	r3, [r5, #4]
 8011458:	b10b      	cbz	r3, 801145e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801145a:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 801145e:	b00a      	add	sp, #40	@ 0x28
 8011460:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011464:	08024a38 	.word	0x08024a38

08011468 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011468:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801146c:	460c      	mov	r4, r1
 801146e:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011470:	b088      	sub	sp, #32
 8011472:	4605      	mov	r5, r0
 8011474:	2900      	cmp	r1, #0
 8011476:	d06d      	beq.n	8011554 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8011478:	4668      	mov	r0, sp
 801147a:	f7ff fddd 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801147e:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8011480:	88e3      	ldrh	r3, [r4, #6]
 8011482:	f9bd 8000 	ldrsh.w	r8, [sp]
 8011486:	440b      	add	r3, r1
 8011488:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801148c:	b21b      	sxth	r3, r3
 801148e:	4543      	cmp	r3, r8
 8011490:	db31      	blt.n	80114f6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011492:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8011496:	44c4      	add	ip, r8
 8011498:	fa0f fc8c 	sxth.w	ip, ip
 801149c:	4563      	cmp	r3, ip
 801149e:	da2a      	bge.n	80114f6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80114a0:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 80114a2:	8926      	ldrh	r6, [r4, #8]
 80114a4:	4416      	add	r6, r2
 80114a6:	b236      	sxth	r6, r6
 80114a8:	42be      	cmp	r6, r7
 80114aa:	db24      	blt.n	80114f6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80114ac:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80114b0:	4438      	add	r0, r7
 80114b2:	b200      	sxth	r0, r0
 80114b4:	4286      	cmp	r6, r0
 80114b6:	da1e      	bge.n	80114f6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80114b8:	8963      	ldrh	r3, [r4, #10]
 80114ba:	4419      	add	r1, r3
 80114bc:	b209      	sxth	r1, r1
 80114be:	4541      	cmp	r1, r8
 80114c0:	db08      	blt.n	80114d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80114c2:	4561      	cmp	r1, ip
 80114c4:	da06      	bge.n	80114d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80114c6:	89a3      	ldrh	r3, [r4, #12]
 80114c8:	441a      	add	r2, r3
 80114ca:	b212      	sxth	r2, r2
 80114cc:	42ba      	cmp	r2, r7
 80114ce:	db01      	blt.n	80114d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80114d0:	4282      	cmp	r2, r0
 80114d2:	db10      	blt.n	80114f6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80114d4:	4b21      	ldr	r3, [pc, #132]	@ (801155c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80114d6:	a904      	add	r1, sp, #16
 80114d8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80114da:	9304      	str	r3, [sp, #16]
 80114dc:	2302      	movs	r3, #2
 80114de:	f88d 3014 	strb.w	r3, [sp, #20]
 80114e2:	2300      	movs	r3, #0
 80114e4:	f8ad 3016 	strh.w	r3, [sp, #22]
 80114e8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80114ec:	f8ad 301a 	strh.w	r3, [sp, #26]
 80114f0:	6803      	ldr	r3, [r0, #0]
 80114f2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80114f4:	4798      	blx	r3
 80114f6:	1d29      	adds	r1, r5, #4
 80114f8:	a802      	add	r0, sp, #8
 80114fa:	f7ff fd9d 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80114fe:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011502:	88e0      	ldrh	r0, [r4, #6]
 8011504:	eba3 0808 	sub.w	r8, r3, r8
 8011508:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801150c:	7921      	ldrb	r1, [r4, #4]
 801150e:	fa1f f888 	uxth.w	r8, r8
 8011512:	1bdf      	subs	r7, r3, r7
 8011514:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8011518:	b2bb      	uxth	r3, r7
 801151a:	4440      	add	r0, r8
 801151c:	8922      	ldrh	r2, [r4, #8]
 801151e:	8967      	ldrh	r7, [r4, #10]
 8011520:	4460      	add	r0, ip
 8011522:	89a4      	ldrh	r4, [r4, #12]
 8011524:	441a      	add	r2, r3
 8011526:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8011528:	44b8      	add	r8, r7
 801152a:	4423      	add	r3, r4
 801152c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011530:	4432      	add	r2, r6
 8011532:	44e0      	add	r8, ip
 8011534:	4433      	add	r3, r6
 8011536:	4c0a      	ldr	r4, [pc, #40]	@ (8011560 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011538:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801153a:	f88d 1014 	strb.w	r1, [sp, #20]
 801153e:	a904      	add	r1, sp, #16
 8011540:	9404      	str	r4, [sp, #16]
 8011542:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011546:	f8ad 801a 	strh.w	r8, [sp, #26]
 801154a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801154e:	6803      	ldr	r3, [r0, #0]
 8011550:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011552:	4798      	blx	r3
 8011554:	b008      	add	sp, #32
 8011556:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801155a:	bf00      	nop
 801155c:	08024a38 	.word	0x08024a38
 8011560:	08024a4c 	.word	0x08024a4c

08011564 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011564:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011566:	4604      	mov	r4, r0
 8011568:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801156c:	3201      	adds	r2, #1
 801156e:	d112      	bne.n	8011596 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011570:	2500      	movs	r5, #0
 8011572:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011576:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801157a:	6803      	ldr	r3, [r0, #0]
 801157c:	9500      	str	r5, [sp, #0]
 801157e:	466d      	mov	r5, sp
 8011580:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011584:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011588:	4629      	mov	r1, r5
 801158a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801158c:	4798      	blx	r3
 801158e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8011592:	e884 0003 	stmia.w	r4, {r0, r1}
 8011596:	4620      	mov	r0, r4
 8011598:	b003      	add	sp, #12
 801159a:	bd30      	pop	{r4, r5, pc}

0801159c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801159c:	b513      	push	{r0, r1, r4, lr}
 801159e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80115a2:	4604      	mov	r4, r0
 80115a4:	3301      	adds	r3, #1
 80115a6:	d109      	bne.n	80115bc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80115a8:	4601      	mov	r1, r0
 80115aa:	4668      	mov	r0, sp
 80115ac:	f7ff fd44 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80115b0:	f8bd 3000 	ldrh.w	r3, [sp]
 80115b4:	8423      	strh	r3, [r4, #32]
 80115b6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80115ba:	8463      	strh	r3, [r4, #34]	@ 0x22
 80115bc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80115c0:	b002      	add	sp, #8
 80115c2:	bd10      	pop	{r4, pc}

080115c4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80115c4:	b513      	push	{r0, r1, r4, lr}
 80115c6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 80115ca:	4604      	mov	r4, r0
 80115cc:	3301      	adds	r3, #1
 80115ce:	d109      	bne.n	80115e4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80115d0:	4601      	mov	r1, r0
 80115d2:	4668      	mov	r0, sp
 80115d4:	f7ff fd30 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80115d8:	f8bd 3000 	ldrh.w	r3, [sp]
 80115dc:	8423      	strh	r3, [r4, #32]
 80115de:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80115e2:	8463      	strh	r3, [r4, #34]	@ 0x22
 80115e4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 80115e8:	b002      	add	sp, #8
 80115ea:	bd10      	pop	{r4, pc}

080115ec <_ZN8touchgfx6ScreenC1Ev>:
 80115ec:	b570      	push	{r4, r5, r6, lr}
 80115ee:	4b17      	ldr	r3, [pc, #92]	@ (801164c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80115f0:	4605      	mov	r5, r0
 80115f2:	4a17      	ldr	r2, [pc, #92]	@ (8011650 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80115f4:	2101      	movs	r1, #1
 80115f6:	f845 3b04 	str.w	r3, [r5], #4
 80115fa:	2300      	movs	r3, #0
 80115fc:	6042      	str	r2, [r0, #4]
 80115fe:	4604      	mov	r4, r0
 8011600:	8103      	strh	r3, [r0, #8]
 8011602:	8143      	strh	r3, [r0, #10]
 8011604:	8183      	strh	r3, [r0, #12]
 8011606:	81c3      	strh	r3, [r0, #14]
 8011608:	8203      	strh	r3, [r0, #16]
 801160a:	8243      	strh	r3, [r0, #18]
 801160c:	8283      	strh	r3, [r0, #20]
 801160e:	82c3      	strh	r3, [r0, #22]
 8011610:	6203      	str	r3, [r0, #32]
 8011612:	8483      	strh	r3, [r0, #36]	@ 0x24
 8011614:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8011616:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 801161a:	6343      	str	r3, [r0, #52]	@ 0x34
 801161c:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8011620:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8011624:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8011628:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 801162c:	4b09      	ldr	r3, [pc, #36]	@ (8011654 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801162e:	4628      	mov	r0, r5
 8011630:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011634:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8011636:	4a08      	ldr	r2, [pc, #32]	@ (8011658 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8011638:	f9b2 1000 	ldrsh.w	r1, [r2]
 801163c:	4798      	blx	r3
 801163e:	6863      	ldr	r3, [r4, #4]
 8011640:	4628      	mov	r0, r5
 8011642:	4631      	mov	r1, r6
 8011644:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011646:	4798      	blx	r3
 8011648:	4620      	mov	r0, r4
 801164a:	bd70      	pop	{r4, r5, r6, pc}
 801164c:	08024a74 	.word	0x08024a74
 8011650:	08023ff0 	.word	0x08023ff0
 8011654:	20016b6a 	.word	0x20016b6a
 8011658:	20016b68 	.word	0x20016b68

0801165c <_ZN8touchgfx6Screen4drawEv>:
 801165c:	4b09      	ldr	r3, [pc, #36]	@ (8011684 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801165e:	b507      	push	{r0, r1, r2, lr}
 8011660:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011664:	2100      	movs	r1, #0
 8011666:	4b08      	ldr	r3, [pc, #32]	@ (8011688 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011668:	9100      	str	r1, [sp, #0]
 801166a:	4669      	mov	r1, sp
 801166c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011670:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011674:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011678:	6803      	ldr	r3, [r0, #0]
 801167a:	689b      	ldr	r3, [r3, #8]
 801167c:	4798      	blx	r3
 801167e:	b003      	add	sp, #12
 8011680:	f85d fb04 	ldr.w	pc, [sp], #4
 8011684:	20016b68 	.word	0x20016b68
 8011688:	20016b6a 	.word	0x20016b6a

0801168c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801168c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011690:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011694:	b089      	sub	sp, #36	@ 0x24
 8011696:	4680      	mov	r8, r0
 8011698:	460c      	mov	r4, r1
 801169a:	2b00      	cmp	r3, #0
 801169c:	4615      	mov	r5, r2
 801169e:	dd0e      	ble.n	80116be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80116a0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80116a4:	2b00      	cmp	r3, #0
 80116a6:	dd0a      	ble.n	80116be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80116a8:	4628      	mov	r0, r5
 80116aa:	f7ff ff5b 	bl	8011564 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80116ae:	4621      	mov	r1, r4
 80116b0:	f7fe fb15 	bl	800fcde <_ZNK8touchgfx4Rect9intersectERKS0_>
 80116b4:	69eb      	ldr	r3, [r5, #28]
 80116b6:	b928      	cbnz	r0, 80116c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80116b8:	461d      	mov	r5, r3
 80116ba:	2b00      	cmp	r3, #0
 80116bc:	d1f4      	bne.n	80116a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80116be:	b009      	add	sp, #36	@ 0x24
 80116c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116c4:	ae04      	add	r6, sp, #16
 80116c6:	2b00      	cmp	r3, #0
 80116c8:	f000 80b5 	beq.w	8011836 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80116cc:	682b      	ldr	r3, [r5, #0]
 80116ce:	4629      	mov	r1, r5
 80116d0:	a802      	add	r0, sp, #8
 80116d2:	68db      	ldr	r3, [r3, #12]
 80116d4:	4798      	blx	r3
 80116d6:	4628      	mov	r0, r5
 80116d8:	f7ff ff60 	bl	801159c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80116dc:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80116e0:	4407      	add	r7, r0
 80116e2:	4628      	mov	r0, r5
 80116e4:	f7ff ff6e 	bl	80115c4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80116e8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80116ec:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80116f0:	b23f      	sxth	r7, r7
 80116f2:	4418      	add	r0, r3
 80116f4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80116f8:	4621      	mov	r1, r4
 80116fa:	f8ad 2014 	strh.w	r2, [sp, #20]
 80116fe:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011702:	4630      	mov	r0, r6
 8011704:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011708:	f8ad 7010 	strh.w	r7, [sp, #16]
 801170c:	f7f8 fb18 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 8011710:	4628      	mov	r0, r5
 8011712:	f7ff ff27 	bl	8011564 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011716:	ab06      	add	r3, sp, #24
 8011718:	4602      	mov	r2, r0
 801171a:	e896 0003 	ldmia.w	r6, {r0, r1}
 801171e:	e883 0003 	stmia.w	r3, {r0, r1}
 8011722:	4611      	mov	r1, r2
 8011724:	4618      	mov	r0, r3
 8011726:	f7f8 fb0b 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 801172a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801172e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011732:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011736:	4299      	cmp	r1, r3
 8011738:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801173c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8011740:	d10b      	bne.n	801175a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011742:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011746:	4552      	cmp	r2, sl
 8011748:	d107      	bne.n	801175a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801174a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801174e:	455a      	cmp	r2, fp
 8011750:	d103      	bne.n	801175a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011752:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011756:	454a      	cmp	r2, r9
 8011758:	d06d      	beq.n	8011836 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801175a:	f1bb 0f00 	cmp.w	fp, #0
 801175e:	dd65      	ble.n	801182c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011760:	f1b9 0f00 	cmp.w	r9, #0
 8011764:	dd62      	ble.n	801182c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011766:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801176a:	fa1f f08a 	uxth.w	r0, sl
 801176e:	4552      	cmp	r2, sl
 8011770:	9000      	str	r0, [sp, #0]
 8011772:	da12      	bge.n	801179a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011774:	9301      	str	r3, [sp, #4]
 8011776:	9b00      	ldr	r3, [sp, #0]
 8011778:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801177c:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011780:	1a9a      	subs	r2, r3, r2
 8011782:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011786:	4631      	mov	r1, r6
 8011788:	f8ad 0014 	strh.w	r0, [sp, #20]
 801178c:	4640      	mov	r0, r8
 801178e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8011792:	69ea      	ldr	r2, [r5, #28]
 8011794:	f7ff ff7a 	bl	801168c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011798:	9b01      	ldr	r3, [sp, #4]
 801179a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801179e:	b29f      	uxth	r7, r3
 80117a0:	429a      	cmp	r2, r3
 80117a2:	da0d      	bge.n	80117c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80117a4:	f8ad 2010 	strh.w	r2, [sp, #16]
 80117a8:	1aba      	subs	r2, r7, r2
 80117aa:	f8ad a012 	strh.w	sl, [sp, #18]
 80117ae:	4631      	mov	r1, r6
 80117b0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80117b4:	4640      	mov	r0, r8
 80117b6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80117ba:	69ea      	ldr	r2, [r5, #28]
 80117bc:	f7ff ff66 	bl	801168c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80117c0:	8822      	ldrh	r2, [r4, #0]
 80117c2:	445f      	add	r7, fp
 80117c4:	88a3      	ldrh	r3, [r4, #4]
 80117c6:	b2bf      	uxth	r7, r7
 80117c8:	4413      	add	r3, r2
 80117ca:	b23a      	sxth	r2, r7
 80117cc:	b29b      	uxth	r3, r3
 80117ce:	b219      	sxth	r1, r3
 80117d0:	4291      	cmp	r1, r2
 80117d2:	dd0d      	ble.n	80117f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80117d4:	1bdb      	subs	r3, r3, r7
 80117d6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80117da:	f8ad a012 	strh.w	sl, [sp, #18]
 80117de:	4631      	mov	r1, r6
 80117e0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80117e4:	4640      	mov	r0, r8
 80117e6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80117ea:	69ea      	ldr	r2, [r5, #28]
 80117ec:	f7ff ff4e 	bl	801168c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80117f0:	88e2      	ldrh	r2, [r4, #6]
 80117f2:	8863      	ldrh	r3, [r4, #2]
 80117f4:	4413      	add	r3, r2
 80117f6:	9a00      	ldr	r2, [sp, #0]
 80117f8:	444a      	add	r2, r9
 80117fa:	b29b      	uxth	r3, r3
 80117fc:	fa1f f982 	uxth.w	r9, r2
 8011800:	b219      	sxth	r1, r3
 8011802:	fa0f f289 	sxth.w	r2, r9
 8011806:	428a      	cmp	r2, r1
 8011808:	da15      	bge.n	8011836 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801180a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801180e:	eba3 0309 	sub.w	r3, r3, r9
 8011812:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011816:	f8ad 1014 	strh.w	r1, [sp, #20]
 801181a:	4631      	mov	r1, r6
 801181c:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011820:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011824:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011828:	69ea      	ldr	r2, [r5, #28]
 801182a:	e001      	b.n	8011830 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801182c:	69ea      	ldr	r2, [r5, #28]
 801182e:	4621      	mov	r1, r4
 8011830:	4640      	mov	r0, r8
 8011832:	f7ff ff2b 	bl	801168c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011836:	4628      	mov	r0, r5
 8011838:	f7ff fe94 	bl	8011564 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801183c:	6861      	ldr	r1, [r4, #4]
 801183e:	4602      	mov	r2, r0
 8011840:	4633      	mov	r3, r6
 8011842:	6820      	ldr	r0, [r4, #0]
 8011844:	c303      	stmia	r3!, {r0, r1}
 8011846:	4611      	mov	r1, r2
 8011848:	4630      	mov	r0, r6
 801184a:	f7f8 fa79 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 801184e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011852:	2b00      	cmp	r3, #0
 8011854:	f77f af33 	ble.w	80116be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011858:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801185c:	2b00      	cmp	r3, #0
 801185e:	f77f af2e 	ble.w	80116be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011862:	4628      	mov	r0, r5
 8011864:	f7ff fe9a 	bl	801159c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011868:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801186c:	1a18      	subs	r0, r3, r0
 801186e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011872:	4628      	mov	r0, r5
 8011874:	f7ff fea6 	bl	80115c4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011878:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801187c:	4631      	mov	r1, r6
 801187e:	1a18      	subs	r0, r3, r0
 8011880:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011884:	4628      	mov	r0, r5
 8011886:	682b      	ldr	r3, [r5, #0]
 8011888:	689b      	ldr	r3, [r3, #8]
 801188a:	4798      	blx	r3
 801188c:	e717      	b.n	80116be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801188e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801188e:	b570      	push	{r4, r5, r6, lr}
 8011890:	1d06      	adds	r6, r0, #4
 8011892:	b086      	sub	sp, #24
 8011894:	460c      	mov	r4, r1
 8011896:	2300      	movs	r3, #0
 8011898:	4631      	mov	r1, r6
 801189a:	4605      	mov	r5, r0
 801189c:	a802      	add	r0, sp, #8
 801189e:	9301      	str	r3, [sp, #4]
 80118a0:	f7ff fbca 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80118a4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80118a8:	8822      	ldrh	r2, [r4, #0]
 80118aa:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80118ae:	1ad2      	subs	r2, r2, r3
 80118b0:	8863      	ldrh	r3, [r4, #2]
 80118b2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80118b6:	1a5b      	subs	r3, r3, r1
 80118b8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80118bc:	f8ad 2010 	strh.w	r2, [sp, #16]
 80118c0:	aa01      	add	r2, sp, #4
 80118c2:	f8ad 0014 	strh.w	r0, [sp, #20]
 80118c6:	4630      	mov	r0, r6
 80118c8:	f8ad 1016 	strh.w	r1, [sp, #22]
 80118cc:	a904      	add	r1, sp, #16
 80118ce:	f8ad 3012 	strh.w	r3, [sp, #18]
 80118d2:	f7f8 fb0d 	bl	8009ef0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80118d6:	9a01      	ldr	r2, [sp, #4]
 80118d8:	b11a      	cbz	r2, 80118e2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80118da:	4621      	mov	r1, r4
 80118dc:	4628      	mov	r0, r5
 80118de:	f7ff fed5 	bl	801168c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80118e2:	b006      	add	sp, #24
 80118e4:	bd70      	pop	{r4, r5, r6, pc}

080118e6 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80118e6:	4602      	mov	r2, r0
 80118e8:	b530      	push	{r4, r5, lr}
 80118ea:	4604      	mov	r4, r0
 80118ec:	b085      	sub	sp, #20
 80118ee:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80118f2:	460d      	mov	r5, r1
 80118f4:	466b      	mov	r3, sp
 80118f6:	6851      	ldr	r1, [r2, #4]
 80118f8:	c303      	stmia	r3!, {r0, r1}
 80118fa:	4629      	mov	r1, r5
 80118fc:	4668      	mov	r0, sp
 80118fe:	f7f8 fa1f 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 8011902:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011906:	b12b      	cbz	r3, 8011914 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8011908:	4669      	mov	r1, sp
 801190a:	4620      	mov	r0, r4
 801190c:	f7ff ffbf 	bl	801188e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8011910:	b005      	add	sp, #20
 8011912:	bd30      	pop	{r4, r5, pc}
 8011914:	3404      	adds	r4, #4
 8011916:	a802      	add	r0, sp, #8
 8011918:	4621      	mov	r1, r4
 801191a:	f7ff fb8d 	bl	8011038 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801191e:	f8bd 3000 	ldrh.w	r3, [sp]
 8011922:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011926:	4669      	mov	r1, sp
 8011928:	4620      	mov	r0, r4
 801192a:	1a9b      	subs	r3, r3, r2
 801192c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011930:	f8ad 3000 	strh.w	r3, [sp]
 8011934:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011938:	1a9b      	subs	r3, r3, r2
 801193a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801193e:	f7f8 fa9e 	bl	8009e7e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8011942:	e7e5      	b.n	8011910 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08011944 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8011944:	460b      	mov	r3, r1
 8011946:	680a      	ldr	r2, [r1, #0]
 8011948:	1d01      	adds	r1, r0, #4
 801194a:	6992      	ldr	r2, [r2, #24]
 801194c:	4618      	mov	r0, r3
 801194e:	4710      	bx	r2

08011950 <_ZN8touchgfx12TextProviderC1Ev>:
 8011950:	b538      	push	{r3, r4, r5, lr}
 8011952:	2500      	movs	r5, #0
 8011954:	2302      	movs	r3, #2
 8011956:	4604      	mov	r4, r0
 8011958:	220e      	movs	r2, #14
 801195a:	7403      	strb	r3, [r0, #16]
 801195c:	4629      	mov	r1, r5
 801195e:	6145      	str	r5, [r0, #20]
 8011960:	7605      	strb	r5, [r0, #24]
 8011962:	83c5      	strh	r5, [r0, #30]
 8011964:	8405      	strh	r5, [r0, #32]
 8011966:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8011968:	8705      	strh	r5, [r0, #56]	@ 0x38
 801196a:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 801196c:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8011970:	e9c0 5500 	strd	r5, r5, [r0]
 8011974:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8011978:	304c      	adds	r0, #76	@ 0x4c
 801197a:	f010 fac7 	bl	8021f0c <memset>
 801197e:	2301      	movs	r3, #1
 8011980:	4620      	mov	r0, r4
 8011982:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8011986:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801198a:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 801198e:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8011992:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8011996:	f7f1 ff07 	bl	80037a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801199a:	4620      	mov	r0, r4
 801199c:	bd38      	pop	{r3, r4, r5, pc}

0801199e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801199e:	b530      	push	{r4, r5, lr}
 80119a0:	2500      	movs	r5, #0
 80119a2:	2401      	movs	r4, #1
 80119a4:	6843      	ldr	r3, [r0, #4]
 80119a6:	b913      	cbnz	r3, 80119ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80119a8:	6803      	ldr	r3, [r0, #0]
 80119aa:	b313      	cbz	r3, 80119f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80119ac:	6043      	str	r3, [r0, #4]
 80119ae:	7e03      	ldrb	r3, [r0, #24]
 80119b0:	b143      	cbz	r3, 80119c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80119b2:	6943      	ldr	r3, [r0, #20]
 80119b4:	b12b      	cbz	r3, 80119c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80119b6:	881a      	ldrh	r2, [r3, #0]
 80119b8:	b11a      	cbz	r2, 80119c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80119ba:	1c9a      	adds	r2, r3, #2
 80119bc:	6142      	str	r2, [r0, #20]
 80119be:	8818      	ldrh	r0, [r3, #0]
 80119c0:	bd30      	pop	{r4, r5, pc}
 80119c2:	7605      	strb	r5, [r0, #24]
 80119c4:	6843      	ldr	r3, [r0, #4]
 80119c6:	8819      	ldrh	r1, [r3, #0]
 80119c8:	b199      	cbz	r1, 80119f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80119ca:	1c9a      	adds	r2, r3, #2
 80119cc:	2902      	cmp	r1, #2
 80119ce:	6042      	str	r2, [r0, #4]
 80119d0:	d1f5      	bne.n	80119be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80119d2:	7c03      	ldrb	r3, [r0, #16]
 80119d4:	2b01      	cmp	r3, #1
 80119d6:	d8e5      	bhi.n	80119a4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80119d8:	1c5a      	adds	r2, r3, #1
 80119da:	3302      	adds	r3, #2
 80119dc:	7402      	strb	r2, [r0, #16]
 80119de:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80119e2:	6143      	str	r3, [r0, #20]
 80119e4:	2b00      	cmp	r3, #0
 80119e6:	d0dd      	beq.n	80119a4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80119e8:	881b      	ldrh	r3, [r3, #0]
 80119ea:	2b00      	cmp	r3, #0
 80119ec:	d0da      	beq.n	80119a4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80119ee:	7604      	strb	r4, [r0, #24]
 80119f0:	e7d8      	b.n	80119a4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80119f2:	2000      	movs	r0, #0
 80119f4:	e7e4      	b.n	80119c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080119f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80119f6:	6001      	str	r1, [r0, #0]
 80119f8:	2100      	movs	r1, #0
 80119fa:	b430      	push	{r4, r5}
 80119fc:	6041      	str	r1, [r0, #4]
 80119fe:	6815      	ldr	r5, [r2, #0]
 8011a00:	6085      	str	r5, [r0, #8]
 8011a02:	6852      	ldr	r2, [r2, #4]
 8011a04:	6443      	str	r3, [r0, #68]	@ 0x44
 8011a06:	9b02      	ldr	r3, [sp, #8]
 8011a08:	60c2      	str	r2, [r0, #12]
 8011a0a:	7401      	strb	r1, [r0, #16]
 8011a0c:	6141      	str	r1, [r0, #20]
 8011a0e:	7601      	strb	r1, [r0, #24]
 8011a10:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011a12:	8401      	strh	r1, [r0, #32]
 8011a14:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8011a18:	6483      	str	r3, [r0, #72]	@ 0x48
 8011a1a:	bc30      	pop	{r4, r5}
 8011a1c:	f7f1 bec4 	b.w	80037a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011a20 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011a20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a22:	4605      	mov	r5, r0
 8011a24:	4608      	mov	r0, r1
 8011a26:	b1f1      	cbz	r1, 8011a66 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8011a28:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8011a2c:	460b      	mov	r3, r1
 8011a2e:	f101 0708 	add.w	r7, r1, #8
 8011a32:	4622      	mov	r2, r4
 8011a34:	6818      	ldr	r0, [r3, #0]
 8011a36:	3308      	adds	r3, #8
 8011a38:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8011a3c:	4626      	mov	r6, r4
 8011a3e:	42bb      	cmp	r3, r7
 8011a40:	c603      	stmia	r6!, {r0, r1}
 8011a42:	4634      	mov	r4, r6
 8011a44:	d1f6      	bne.n	8011a34 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8011a46:	6818      	ldr	r0, [r3, #0]
 8011a48:	6030      	str	r0, [r6, #0]
 8011a4a:	4610      	mov	r0, r2
 8011a4c:	889b      	ldrh	r3, [r3, #4]
 8011a4e:	80b3      	strh	r3, [r6, #4]
 8011a50:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8011a54:	015b      	lsls	r3, r3, #5
 8011a56:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011a5a:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8011a5e:	430b      	orrs	r3, r1
 8011a60:	425b      	negs	r3, r3
 8011a62:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011a66:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011a68 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8011a68:	b538      	push	{r3, r4, r5, lr}
 8011a6a:	460c      	mov	r4, r1
 8011a6c:	6811      	ldr	r1, [r2, #0]
 8011a6e:	4610      	mov	r0, r2
 8011a70:	68cd      	ldr	r5, [r1, #12]
 8011a72:	4619      	mov	r1, r3
 8011a74:	47a8      	blx	r5
 8011a76:	2800      	cmp	r0, #0
 8011a78:	bf08      	it	eq
 8011a7a:	4620      	moveq	r0, r4
 8011a7c:	bd38      	pop	{r3, r4, r5, pc}
	...

08011a80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8011a80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011a82:	4604      	mov	r4, r0
 8011a84:	4615      	mov	r5, r2
 8011a86:	4608      	mov	r0, r1
 8011a88:	b93a      	cbnz	r2, 8011a9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8011a8a:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 8011a8e:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 8011a92:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 8011a96:	4628      	mov	r0, r5
 8011a98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011a9a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8011a9e:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 8011aa2:	8893      	ldrh	r3, [r2, #4]
 8011aa4:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8011aa8:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011aac:	79ee      	ldrb	r6, [r5, #7]
 8011aae:	4316      	orrs	r6, r2
 8011ab0:	19da      	adds	r2, r3, r7
 8011ab2:	b291      	uxth	r1, r2
 8011ab4:	b2b7      	uxth	r7, r6
 8011ab6:	291d      	cmp	r1, #29
 8011ab8:	d87b      	bhi.n	8011bb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8011aba:	2201      	movs	r2, #1
 8011abc:	10f6      	asrs	r6, r6, #3
 8011abe:	408a      	lsls	r2, r1
 8011ac0:	4974      	ldr	r1, [pc, #464]	@ (8011c94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8011ac2:	420a      	tst	r2, r1
 8011ac4:	d12e      	bne.n	8011b24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8011ac6:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8011aca:	d072      	beq.n	8011bb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8011acc:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 8011ad0:	462b      	mov	r3, r5
 8011ad2:	f105 0e08 	add.w	lr, r5, #8
 8011ad6:	4615      	mov	r5, r2
 8011ad8:	6818      	ldr	r0, [r3, #0]
 8011ada:	3308      	adds	r3, #8
 8011adc:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8011ae0:	4694      	mov	ip, r2
 8011ae2:	4573      	cmp	r3, lr
 8011ae4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011ae8:	4662      	mov	r2, ip
 8011aea:	d1f5      	bne.n	8011ad8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 8011aec:	6818      	ldr	r0, [r3, #0]
 8011aee:	f8cc 0000 	str.w	r0, [ip]
 8011af2:	889b      	ldrh	r3, [r3, #4]
 8011af4:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011af8:	b2b3      	uxth	r3, r6
 8011afa:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 8011afe:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 8011b02:	1aca      	subs	r2, r1, r3
 8011b04:	1bcf      	subs	r7, r1, r7
 8011b06:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8011b0a:	b292      	uxth	r2, r2
 8011b0c:	1afb      	subs	r3, r7, r3
 8011b0e:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 8011b12:	10d2      	asrs	r2, r2, #3
 8011b14:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8011b18:	4302      	orrs	r2, r0
 8011b1a:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 8011b1e:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8011b22:	e7b8      	b.n	8011a96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8011b24:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8011b26:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011b2a:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8011b2c:	f640 6333 	movw	r3, #3635	@ 0xe33
 8011b30:	4299      	cmp	r1, r3
 8011b32:	d110      	bne.n	8011b56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8011b34:	6803      	ldr	r3, [r0, #0]
 8011b36:	68db      	ldr	r3, [r3, #12]
 8011b38:	4798      	blx	r3
 8011b3a:	7b41      	ldrb	r1, [r0, #13]
 8011b3c:	00cb      	lsls	r3, r1, #3
 8011b3e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011b42:	7a03      	ldrb	r3, [r0, #8]
 8011b44:	0648      	lsls	r0, r1, #25
 8011b46:	ea43 0302 	orr.w	r3, r3, r2
 8011b4a:	bf44      	itt	mi
 8011b4c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011b50:	b21b      	sxthmi	r3, r3
 8011b52:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011b56:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 8011b5a:	462a      	mov	r2, r5
 8011b5c:	f105 0c08 	add.w	ip, r5, #8
 8011b60:	443b      	add	r3, r7
 8011b62:	4433      	add	r3, r6
 8011b64:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 8011b68:	b29b      	uxth	r3, r3
 8011b6a:	4635      	mov	r5, r6
 8011b6c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011b70:	6810      	ldr	r0, [r2, #0]
 8011b72:	3208      	adds	r2, #8
 8011b74:	f852 1c04 	ldr.w	r1, [r2, #-4]
 8011b78:	4637      	mov	r7, r6
 8011b7a:	4562      	cmp	r2, ip
 8011b7c:	c703      	stmia	r7!, {r0, r1}
 8011b7e:	463e      	mov	r6, r7
 8011b80:	d1f6      	bne.n	8011b70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8011b82:	6810      	ldr	r0, [r2, #0]
 8011b84:	6038      	str	r0, [r7, #0]
 8011b86:	8892      	ldrh	r2, [r2, #4]
 8011b88:	80ba      	strh	r2, [r7, #4]
 8011b8a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8011b8e:	10db      	asrs	r3, r3, #3
 8011b90:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8011b94:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011b98:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011b9c:	4313      	orrs	r3, r2
 8011b9e:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 8011ba2:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8011ba6:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 8011baa:	1a9b      	subs	r3, r3, r2
 8011bac:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 8011bb0:	e771      	b.n	8011a96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8011bb2:	f023 0204 	bic.w	r2, r3, #4
 8011bb6:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8011bba:	428a      	cmp	r2, r1
 8011bbc:	d003      	beq.n	8011bc6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 8011bbe:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8011bc2:	4293      	cmp	r3, r2
 8011bc4:	d120      	bne.n	8011c08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 8011bc6:	3b01      	subs	r3, #1
 8011bc8:	4602      	mov	r2, r0
 8011bca:	4629      	mov	r1, r5
 8011bcc:	4620      	mov	r0, r4
 8011bce:	b29b      	uxth	r3, r3
 8011bd0:	f7ff ff4a 	bl	8011a68 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011bd4:	7b41      	ldrb	r1, [r0, #13]
 8011bd6:	00cb      	lsls	r3, r1, #3
 8011bd8:	0649      	lsls	r1, r1, #25
 8011bda:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011bde:	7a03      	ldrb	r3, [r0, #8]
 8011be0:	ea43 0302 	orr.w	r3, r3, r2
 8011be4:	bf44      	itt	mi
 8011be6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011bea:	b21b      	sxthmi	r3, r3
 8011bec:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011bf0:	7b6b      	ldrb	r3, [r5, #13]
 8011bf2:	7aaa      	ldrb	r2, [r5, #10]
 8011bf4:	005b      	lsls	r3, r3, #1
 8011bf6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011bfa:	4313      	orrs	r3, r2
 8011bfc:	115a      	asrs	r2, r3, #5
 8011bfe:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8011c02:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8011c06:	e035      	b.n	8011c74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8011c08:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8011c0c:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 8011c10:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8011c14:	7a2a      	ldrb	r2, [r5, #8]
 8011c16:	ea42 0201 	orr.w	r2, r2, r1
 8011c1a:	f640 6109 	movw	r1, #3593	@ 0xe09
 8011c1e:	bf1c      	itt	ne
 8011c20:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 8011c24:	b212      	sxthne	r2, r2
 8011c26:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 8011c2a:	f023 0210 	bic.w	r2, r3, #16
 8011c2e:	428a      	cmp	r2, r1
 8011c30:	d003      	beq.n	8011c3a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 8011c32:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011c36:	4293      	cmp	r3, r2
 8011c38:	d129      	bne.n	8011c8e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8011c3a:	7b6e      	ldrb	r6, [r5, #13]
 8011c3c:	4629      	mov	r1, r5
 8011c3e:	0076      	lsls	r6, r6, #1
 8011c40:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011c44:	7aae      	ldrb	r6, [r5, #10]
 8011c46:	4316      	orrs	r6, r2
 8011c48:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011c4c:	4293      	cmp	r3, r2
 8011c4e:	4602      	mov	r2, r0
 8011c50:	4620      	mov	r0, r4
 8011c52:	bf16      	itet	ne
 8011c54:	f103 33ff 	addne.w	r3, r3, #4294967295
 8011c58:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8011c5c:	b29b      	uxthne	r3, r3
 8011c5e:	f7ff ff03 	bl	8011a68 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011c62:	7b43      	ldrb	r3, [r0, #13]
 8011c64:	7a82      	ldrb	r2, [r0, #10]
 8011c66:	005b      	lsls	r3, r3, #1
 8011c68:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011c6c:	4313      	orrs	r3, r2
 8011c6e:	1af6      	subs	r6, r6, r3
 8011c70:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 8011c74:	7b69      	ldrb	r1, [r5, #13]
 8011c76:	00cb      	lsls	r3, r1, #3
 8011c78:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011c7c:	7a2b      	ldrb	r3, [r5, #8]
 8011c7e:	4313      	orrs	r3, r2
 8011c80:	064a      	lsls	r2, r1, #25
 8011c82:	bf44      	itt	mi
 8011c84:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011c88:	b21b      	sxthmi	r3, r3
 8011c8a:	1bdb      	subs	r3, r3, r7
 8011c8c:	e747      	b.n	8011b1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8011c8e:	2300      	movs	r3, #0
 8011c90:	e7b7      	b.n	8011c02 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 8011c92:	bf00      	nop
 8011c94:	3fc00079 	.word	0x3fc00079

08011c98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8011c98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011c9c:	4604      	mov	r4, r0
 8011c9e:	b942      	cbnz	r2, 8011cb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8011ca0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011ca4:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8011ca8:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8011cac:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8011cb0:	e047      	b.n	8011d42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011cb2:	7b51      	ldrb	r1, [r2, #13]
 8011cb4:	8893      	ldrh	r3, [r2, #4]
 8011cb6:	010d      	lsls	r5, r1, #4
 8011cb8:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8011cbc:	79d5      	ldrb	r5, [r2, #7]
 8011cbe:	4305      	orrs	r5, r0
 8011cc0:	2d04      	cmp	r5, #4
 8011cc2:	bfcc      	ite	gt
 8011cc4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8011cc8:	f04f 0e01 	movle.w	lr, #1
 8011ccc:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8011cd0:	f200 80ab 	bhi.w	8011e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8011cd4:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8011cd8:	4283      	cmp	r3, r0
 8011cda:	d216      	bcs.n	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011cdc:	f240 605b 	movw	r0, #1627	@ 0x65b
 8011ce0:	4283      	cmp	r3, r0
 8011ce2:	d859      	bhi.n	8011d98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8011ce4:	f240 6057 	movw	r0, #1623	@ 0x657
 8011ce8:	4283      	cmp	r3, r0
 8011cea:	d20e      	bcs.n	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011cec:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8011cf0:	d24a      	bcs.n	8011d88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8011cf2:	f240 604e 	movw	r0, #1614	@ 0x64e
 8011cf6:	4283      	cmp	r3, r0
 8011cf8:	d207      	bcs.n	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011cfa:	f240 601a 	movw	r0, #1562	@ 0x61a
 8011cfe:	4283      	cmp	r3, r0
 8011d00:	d02a      	beq.n	8011d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d02:	d821      	bhi.n	8011d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8011d04:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8011d08:	d35b      	bcc.n	8011dc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011d0a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8011d0e:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011d12:	f040 80d0 	bne.w	8011eb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011d16:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8011d1a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011d1e:	f040 80ca 	bne.w	8011eb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011d22:	00cb      	lsls	r3, r1, #3
 8011d24:	0649      	lsls	r1, r1, #25
 8011d26:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011d2a:	7a13      	ldrb	r3, [r2, #8]
 8011d2c:	ea43 0300 	orr.w	r3, r3, r0
 8011d30:	bf44      	itt	mi
 8011d32:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011d36:	b21b      	sxthmi	r3, r3
 8011d38:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011d3c:	1b5d      	subs	r5, r3, r5
 8011d3e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011d42:	4610      	mov	r0, r2
 8011d44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011d48:	f240 604b 	movw	r0, #1611	@ 0x64b
 8011d4c:	4283      	cmp	r3, r0
 8011d4e:	d338      	bcc.n	8011dc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011d50:	f240 604c 	movw	r0, #1612	@ 0x64c
 8011d54:	4283      	cmp	r3, r0
 8011d56:	d9d8      	bls.n	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d58:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8011d5c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8011d60:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011d64:	f040 80f3 	bne.w	8011f4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8011d68:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011d6c:	f040 80ef 	bne.w	8011f4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8011d70:	00cb      	lsls	r3, r1, #3
 8011d72:	064e      	lsls	r6, r1, #25
 8011d74:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011d78:	7a13      	ldrb	r3, [r2, #8]
 8011d7a:	ea43 0300 	orr.w	r3, r3, r0
 8011d7e:	bf44      	itt	mi
 8011d80:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011d84:	b21b      	sxthmi	r3, r3
 8011d86:	e7d9      	b.n	8011d3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8011d88:	f240 6054 	movw	r0, #1620	@ 0x654
 8011d8c:	4283      	cmp	r3, r0
 8011d8e:	d8e3      	bhi.n	8011d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d90:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8011d94:	d9e0      	bls.n	8011d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d96:	e7b8      	b.n	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d98:	f240 6074 	movw	r0, #1652	@ 0x674
 8011d9c:	4283      	cmp	r3, r0
 8011d9e:	d0b4      	beq.n	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011da0:	d82d      	bhi.n	8011dfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8011da2:	f240 605e 	movw	r0, #1630	@ 0x65e
 8011da6:	4283      	cmp	r3, r0
 8011da8:	d804      	bhi.n	8011db4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8011daa:	f240 605d 	movw	r0, #1629	@ 0x65d
 8011dae:	4283      	cmp	r3, r0
 8011db0:	d3d2      	bcc.n	8011d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011db2:	e7aa      	b.n	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011db4:	f240 605f 	movw	r0, #1631	@ 0x65f
 8011db8:	4283      	cmp	r3, r0
 8011dba:	d0cd      	beq.n	8011d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011dbc:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8011dc0:	d0a3      	beq.n	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011dc2:	00cb      	lsls	r3, r1, #3
 8011dc4:	0649      	lsls	r1, r1, #25
 8011dc6:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011dca:	7a13      	ldrb	r3, [r2, #8]
 8011dcc:	ea43 0300 	orr.w	r3, r3, r0
 8011dd0:	bf44      	itt	mi
 8011dd2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011dd6:	b21b      	sxthmi	r3, r3
 8011dd8:	1b5d      	subs	r5, r3, r5
 8011dda:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011dde:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011de2:	7b53      	ldrb	r3, [r2, #13]
 8011de4:	015b      	lsls	r3, r3, #5
 8011de6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011dea:	7993      	ldrb	r3, [r2, #6]
 8011dec:	430b      	orrs	r3, r1
 8011dee:	2105      	movs	r1, #5
 8011df0:	005b      	lsls	r3, r3, #1
 8011df2:	fb93 f3f1 	sdiv	r3, r3, r1
 8011df6:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8011dfa:	440b      	add	r3, r1
 8011dfc:	e756      	b.n	8011cac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8011dfe:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8011e02:	4283      	cmp	r3, r0
 8011e04:	d809      	bhi.n	8011e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8011e06:	f240 60df 	movw	r0, #1759	@ 0x6df
 8011e0a:	4283      	cmp	r3, r0
 8011e0c:	f4bf af7d 	bcs.w	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e10:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8011e14:	2b05      	cmp	r3, #5
 8011e16:	d8d4      	bhi.n	8011dc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011e18:	e777      	b.n	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e1a:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8011e1e:	4283      	cmp	r3, r0
 8011e20:	d09a      	beq.n	8011d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e22:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8011e26:	4283      	cmp	r3, r0
 8011e28:	e7ca      	b.n	8011dc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011e2a:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8011e2e:	d22b      	bcs.n	8011e88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8011e30:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8011e34:	4283      	cmp	r3, r0
 8011e36:	d28f      	bcs.n	8011d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e38:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8011e3c:	4283      	cmp	r3, r0
 8011e3e:	d816      	bhi.n	8011e6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8011e40:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8011e44:	4283      	cmp	r3, r0
 8011e46:	f4bf af60 	bcs.w	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e4a:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8011e4e:	4283      	cmp	r3, r0
 8011e50:	d80a      	bhi.n	8011e68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8011e52:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8011e56:	4283      	cmp	r3, r0
 8011e58:	f4bf af57 	bcs.w	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e5c:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8011e60:	4283      	cmp	r3, r0
 8011e62:	f43f af79 	beq.w	8011d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e66:	e7ac      	b.n	8011dc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011e68:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8011e6c:	e7f8      	b.n	8011e60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8011e6e:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8011e72:	4283      	cmp	r3, r0
 8011e74:	d802      	bhi.n	8011e7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8011e76:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8011e7a:	e798      	b.n	8011dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8011e7c:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8011e80:	4283      	cmp	r3, r0
 8011e82:	f47f af42 	bne.w	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e86:	e767      	b.n	8011d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e88:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8011e8c:	4283      	cmp	r3, r0
 8011e8e:	f43f af63 	beq.w	8011d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e92:	d802      	bhi.n	8011e9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8011e94:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8011e98:	e7f2      	b.n	8011e80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8011e9a:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8011e9e:	4283      	cmp	r3, r0
 8011ea0:	d805      	bhi.n	8011eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8011ea2:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8011ea6:	4283      	cmp	r3, r0
 8011ea8:	f4ff af2f 	bcc.w	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011eac:	e754      	b.n	8011d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011eae:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8011eb2:	4283      	cmp	r3, r0
 8011eb4:	e7af      	b.n	8011e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8011eb6:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8011eba:	4617      	mov	r7, r2
 8011ebc:	f102 0808 	add.w	r8, r2, #8
 8011ec0:	4666      	mov	r6, ip
 8011ec2:	6838      	ldr	r0, [r7, #0]
 8011ec4:	3708      	adds	r7, #8
 8011ec6:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8011eca:	46e6      	mov	lr, ip
 8011ecc:	4547      	cmp	r7, r8
 8011ece:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011ed2:	46f4      	mov	ip, lr
 8011ed4:	d1f5      	bne.n	8011ec2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8011ed6:	6838      	ldr	r0, [r7, #0]
 8011ed8:	f8ce 0000 	str.w	r0, [lr]
 8011edc:	88b9      	ldrh	r1, [r7, #4]
 8011ede:	f8ae 1004 	strh.w	r1, [lr, #4]
 8011ee2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8011ee6:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011eea:	d009      	beq.n	8011f00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 8011eec:	7b51      	ldrb	r1, [r2, #13]
 8011eee:	7992      	ldrb	r2, [r2, #6]
 8011ef0:	0149      	lsls	r1, r1, #5
 8011ef2:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8011ef6:	4311      	orrs	r1, r2
 8011ef8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011efc:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8011f00:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011f04:	b2ad      	uxth	r5, r5
 8011f06:	d00d      	beq.n	8011f24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 8011f08:	442b      	add	r3, r5
 8011f0a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8011f0e:	b29b      	uxth	r3, r3
 8011f10:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011f14:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8011f18:	10db      	asrs	r3, r3, #3
 8011f1a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011f1e:	4313      	orrs	r3, r2
 8011f20:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8011f24:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8011f28:	00cb      	lsls	r3, r1, #3
 8011f2a:	064f      	lsls	r7, r1, #25
 8011f2c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011f30:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8011f34:	ea43 0302 	orr.w	r3, r3, r2
 8011f38:	bf44      	itt	mi
 8011f3a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011f3e:	b21b      	sxthmi	r3, r3
 8011f40:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011f44:	1b5b      	subs	r3, r3, r5
 8011f46:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8011f4a:	4632      	mov	r2, r6
 8011f4c:	e6f9      	b.n	8011d42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011f4e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8011f52:	4617      	mov	r7, r2
 8011f54:	f102 0908 	add.w	r9, r2, #8
 8011f58:	4666      	mov	r6, ip
 8011f5a:	6838      	ldr	r0, [r7, #0]
 8011f5c:	3708      	adds	r7, #8
 8011f5e:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8011f62:	46e0      	mov	r8, ip
 8011f64:	454f      	cmp	r7, r9
 8011f66:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8011f6a:	46c4      	mov	ip, r8
 8011f6c:	d1f5      	bne.n	8011f5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 8011f6e:	6838      	ldr	r0, [r7, #0]
 8011f70:	f8c8 0000 	str.w	r0, [r8]
 8011f74:	88b9      	ldrh	r1, [r7, #4]
 8011f76:	f8a8 1004 	strh.w	r1, [r8, #4]
 8011f7a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8011f7e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011f82:	d009      	beq.n	8011f98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8011f84:	7b51      	ldrb	r1, [r2, #13]
 8011f86:	7992      	ldrb	r2, [r2, #6]
 8011f88:	0149      	lsls	r1, r1, #5
 8011f8a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8011f8e:	4311      	orrs	r1, r2
 8011f90:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011f94:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8011f98:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011f9c:	d00e      	beq.n	8011fbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8011f9e:	eba3 030e 	sub.w	r3, r3, lr
 8011fa2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8011fa6:	b29b      	uxth	r3, r3
 8011fa8:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011fac:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8011fb0:	10db      	asrs	r3, r3, #3
 8011fb2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011fb6:	4313      	orrs	r3, r2
 8011fb8:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8011fbc:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8011fc0:	00cb      	lsls	r3, r1, #3
 8011fc2:	0648      	lsls	r0, r1, #25
 8011fc4:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011fc8:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8011fcc:	ea43 0302 	orr.w	r3, r3, r2
 8011fd0:	bf44      	itt	mi
 8011fd2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011fd6:	b21b      	sxthmi	r3, r3
 8011fd8:	1b5d      	subs	r5, r3, r5
 8011fda:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011fde:	e7b4      	b.n	8011f4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

08011fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8011fe0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011fe4:	461e      	mov	r6, r3
 8011fe6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8011fe8:	4604      	mov	r4, r0
 8011fea:	4617      	mov	r7, r2
 8011fec:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011ff0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8011ff4:	f7f1 fb96 	bl	8003724 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011ff8:	4605      	mov	r5, r0
 8011ffa:	b918      	cbnz	r0, 8012004 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8011ffc:	6030      	str	r0, [r6, #0]
 8011ffe:	4628      	mov	r0, r5
 8012000:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012004:	683b      	ldr	r3, [r7, #0]
 8012006:	4601      	mov	r1, r0
 8012008:	4638      	mov	r0, r7
 801200a:	68db      	ldr	r3, [r3, #12]
 801200c:	4798      	blx	r3
 801200e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8012012:	4602      	mov	r2, r0
 8012014:	6030      	str	r0, [r6, #0]
 8012016:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801201a:	d213      	bcs.n	8012044 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801201c:	4643      	mov	r3, r8
 801201e:	4639      	mov	r1, r7
 8012020:	4620      	mov	r0, r4
 8012022:	f7ff fe39 	bl	8011c98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012026:	6030      	str	r0, [r6, #0]
 8012028:	6833      	ldr	r3, [r6, #0]
 801202a:	b143      	cbz	r3, 801203e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801202c:	7b5a      	ldrb	r2, [r3, #13]
 801202e:	7a9b      	ldrb	r3, [r3, #10]
 8012030:	0052      	lsls	r2, r2, #1
 8012032:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8012036:	4313      	orrs	r3, r2
 8012038:	bf0c      	ite	eq
 801203a:	2301      	moveq	r3, #1
 801203c:	2300      	movne	r3, #0
 801203e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8012042:	e7dc      	b.n	8011ffe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8012044:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8012048:	b29b      	uxth	r3, r3
 801204a:	2b7f      	cmp	r3, #127	@ 0x7f
 801204c:	d804      	bhi.n	8012058 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801204e:	4639      	mov	r1, r7
 8012050:	4620      	mov	r0, r4
 8012052:	f7ff fd15 	bl	8011a80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012056:	e7e6      	b.n	8012026 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8012058:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801205c:	2b00      	cmp	r3, #0
 801205e:	d0e3      	beq.n	8012028 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012060:	f640 1302 	movw	r3, #2306	@ 0x902
 8012064:	429d      	cmp	r5, r3
 8012066:	d1df      	bne.n	8012028 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012068:	4601      	mov	r1, r0
 801206a:	4620      	mov	r0, r4
 801206c:	f7ff fcd8 	bl	8011a20 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012070:	e7d9      	b.n	8012026 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08012072 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8012072:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012076:	461e      	mov	r6, r3
 8012078:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801207a:	4604      	mov	r4, r0
 801207c:	4617      	mov	r7, r2
 801207e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012082:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012086:	f7f1 fb4d 	bl	8003724 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801208a:	4605      	mov	r5, r0
 801208c:	b918      	cbnz	r0, 8012096 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801208e:	6030      	str	r0, [r6, #0]
 8012090:	4628      	mov	r0, r5
 8012092:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012096:	683b      	ldr	r3, [r7, #0]
 8012098:	4601      	mov	r1, r0
 801209a:	4638      	mov	r0, r7
 801209c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80120a0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80120a4:	47c8      	blx	r9
 80120a6:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80120aa:	4602      	mov	r2, r0
 80120ac:	6030      	str	r0, [r6, #0]
 80120ae:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80120b2:	d213      	bcs.n	80120dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80120b4:	4643      	mov	r3, r8
 80120b6:	4639      	mov	r1, r7
 80120b8:	4620      	mov	r0, r4
 80120ba:	f7ff fded 	bl	8011c98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80120be:	6030      	str	r0, [r6, #0]
 80120c0:	6833      	ldr	r3, [r6, #0]
 80120c2:	b143      	cbz	r3, 80120d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80120c4:	7b5a      	ldrb	r2, [r3, #13]
 80120c6:	7a9b      	ldrb	r3, [r3, #10]
 80120c8:	0052      	lsls	r2, r2, #1
 80120ca:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80120ce:	4313      	orrs	r3, r2
 80120d0:	bf0c      	ite	eq
 80120d2:	2301      	moveq	r3, #1
 80120d4:	2300      	movne	r3, #0
 80120d6:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80120da:	e7d9      	b.n	8012090 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80120dc:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80120e0:	b29b      	uxth	r3, r3
 80120e2:	2b7f      	cmp	r3, #127	@ 0x7f
 80120e4:	d804      	bhi.n	80120f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80120e6:	4639      	mov	r1, r7
 80120e8:	4620      	mov	r0, r4
 80120ea:	f7ff fcc9 	bl	8011a80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80120ee:	e7e6      	b.n	80120be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80120f0:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80120f4:	2b00      	cmp	r3, #0
 80120f6:	d0e3      	beq.n	80120c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80120f8:	f640 1302 	movw	r3, #2306	@ 0x902
 80120fc:	429d      	cmp	r5, r3
 80120fe:	d1df      	bne.n	80120c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012100:	4601      	mov	r1, r0
 8012102:	4620      	mov	r0, r4
 8012104:	f7ff fc8c 	bl	8011a20 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012108:	e7d9      	b.n	80120be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801210a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801210a:	b510      	push	{r4, lr}
 801210c:	4604      	mov	r4, r0
 801210e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8012112:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012114:	b1e1      	cbz	r1, 8012150 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8012116:	2b0a      	cmp	r3, #10
 8012118:	d02d      	beq.n	8012176 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 801211a:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 801211c:	3901      	subs	r1, #1
 801211e:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012122:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8012124:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8012128:	1c51      	adds	r1, r2, #1
 801212a:	b289      	uxth	r1, r1
 801212c:	2901      	cmp	r1, #1
 801212e:	bf8a      	itet	hi
 8012130:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012134:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8012136:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8012138:	1c5a      	adds	r2, r3, #1
 801213a:	8722      	strh	r2, [r4, #56]	@ 0x38
 801213c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801213e:	4413      	add	r3, r2
 8012140:	b29b      	uxth	r3, r3
 8012142:	2b09      	cmp	r3, #9
 8012144:	bf88      	it	hi
 8012146:	3b0a      	subhi	r3, #10
 8012148:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801214c:	8458      	strh	r0, [r3, #34]	@ 0x22
 801214e:	e7de      	b.n	801210e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012150:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012152:	2b0a      	cmp	r3, #10
 8012154:	d00f      	beq.n	8012176 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8012156:	4620      	mov	r0, r4
 8012158:	f7ff fc21 	bl	801199e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801215c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801215e:	1c5a      	adds	r2, r3, #1
 8012160:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012162:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012164:	4413      	add	r3, r2
 8012166:	b29b      	uxth	r3, r3
 8012168:	2b09      	cmp	r3, #9
 801216a:	bf88      	it	hi
 801216c:	3b0a      	subhi	r3, #10
 801216e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012172:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012174:	e7ec      	b.n	8012150 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8012176:	bd10      	pop	{r4, pc}

08012178 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012178:	b538      	push	{r3, r4, r5, lr}
 801217a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801217c:	4604      	mov	r4, r0
 801217e:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8012182:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8012184:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8012186:	3a01      	subs	r2, #1
 8012188:	8702      	strh	r2, [r0, #56]	@ 0x38
 801218a:	1c5a      	adds	r2, r3, #1
 801218c:	b292      	uxth	r2, r2
 801218e:	2a09      	cmp	r2, #9
 8012190:	bf8a      	itet	hi
 8012192:	3b09      	subhi	r3, #9
 8012194:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8012196:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8012198:	f7ff ffb7 	bl	801210a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801219c:	8c23      	ldrh	r3, [r4, #32]
 801219e:	2b01      	cmp	r3, #1
 80121a0:	bf9c      	itt	ls
 80121a2:	3301      	addls	r3, #1
 80121a4:	8423      	strhls	r3, [r4, #32]
 80121a6:	8be3      	ldrh	r3, [r4, #30]
 80121a8:	b90b      	cbnz	r3, 80121ae <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80121aa:	2302      	movs	r3, #2
 80121ac:	83e3      	strh	r3, [r4, #30]
 80121ae:	8be3      	ldrh	r3, [r4, #30]
 80121b0:	4628      	mov	r0, r5
 80121b2:	3b01      	subs	r3, #1
 80121b4:	b29b      	uxth	r3, r3
 80121b6:	83e3      	strh	r3, [r4, #30]
 80121b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80121bc:	8365      	strh	r5, [r4, #26]
 80121be:	bd38      	pop	{r3, r4, r5, pc}

080121c0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80121c0:	428a      	cmp	r2, r1
 80121c2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80121c6:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 80121c8:	d932      	bls.n	8012230 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 80121ca:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80121cc:	1a54      	subs	r4, r2, r1
 80121ce:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80121d2:	19ee      	adds	r6, r5, r7
 80121d4:	fa1f fe84 	uxth.w	lr, r4
 80121d8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80121dc:	3e01      	subs	r6, #1
 80121de:	b2b4      	uxth	r4, r6
 80121e0:	eba4 090e 	sub.w	r9, r4, lr
 80121e4:	fa1f f989 	uxth.w	r9, r9
 80121e8:	2c09      	cmp	r4, #9
 80121ea:	4626      	mov	r6, r4
 80121ec:	bf88      	it	hi
 80121ee:	f1a4 060a 	subhi.w	r6, r4, #10
 80121f2:	f1bc 0f00 	cmp.w	ip, #0
 80121f6:	f104 34ff 	add.w	r4, r4, #4294967295
 80121fa:	bf08      	it	eq
 80121fc:	f04f 0c02 	moveq.w	ip, #2
 8012200:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012204:	b2a4      	uxth	r4, r4
 8012206:	f10c 3cff 	add.w	ip, ip, #4294967295
 801220a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 801220e:	454c      	cmp	r4, r9
 8012210:	fa1f fc8c 	uxth.w	ip, ip
 8012214:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012218:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 801221c:	d1e4      	bne.n	80121e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801221e:	eba5 050e 	sub.w	r5, r5, lr
 8012222:	eb0e 0408 	add.w	r4, lr, r8
 8012226:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 801222a:	8705      	strh	r5, [r0, #56]	@ 0x38
 801222c:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8012230:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8012232:	250a      	movs	r5, #10
 8012234:	1a64      	subs	r4, r4, r1
 8012236:	4439      	add	r1, r7
 8012238:	b289      	uxth	r1, r1
 801223a:	8704      	strh	r4, [r0, #56]	@ 0x38
 801223c:	2909      	cmp	r1, #9
 801223e:	bf88      	it	hi
 8012240:	390a      	subhi	r1, #10
 8012242:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012244:	b18a      	cbz	r2, 801226a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 8012246:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8012248:	3a01      	subs	r2, #1
 801224a:	3101      	adds	r1, #1
 801224c:	b292      	uxth	r2, r2
 801224e:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8012252:	8701      	strh	r1, [r0, #56]	@ 0x38
 8012254:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012256:	b901      	cbnz	r1, 801225a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 8012258:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801225a:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801225c:	3901      	subs	r1, #1
 801225e:	b289      	uxth	r1, r1
 8012260:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012262:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8012266:	844c      	strh	r4, [r1, #34]	@ 0x22
 8012268:	e7ec      	b.n	8012244 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 801226a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801226e:	f7ff bf4c 	b.w	801210a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08012272 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8012272:	b570      	push	{r4, r5, r6, lr}
 8012274:	2500      	movs	r5, #0
 8012276:	4295      	cmp	r5, r2
 8012278:	d011      	beq.n	801229e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801227a:	8bc4      	ldrh	r4, [r0, #30]
 801227c:	f831 6b02 	ldrh.w	r6, [r1], #2
 8012280:	4414      	add	r4, r2
 8012282:	3c01      	subs	r4, #1
 8012284:	1b64      	subs	r4, r4, r5
 8012286:	b2a4      	uxth	r4, r4
 8012288:	2c01      	cmp	r4, #1
 801228a:	bf88      	it	hi
 801228c:	3c02      	subhi	r4, #2
 801228e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012292:	8b64      	ldrh	r4, [r4, #26]
 8012294:	42b4      	cmp	r4, r6
 8012296:	d117      	bne.n	80122c8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8012298:	3501      	adds	r5, #1
 801229a:	b2ad      	uxth	r5, r5
 801229c:	e7eb      	b.n	8012276 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801229e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80122a2:	2400      	movs	r4, #0
 80122a4:	4413      	add	r3, r2
 80122a6:	b2a2      	uxth	r2, r4
 80122a8:	429a      	cmp	r2, r3
 80122aa:	da0f      	bge.n	80122cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80122ac:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 80122ae:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80122b2:	3401      	adds	r4, #1
 80122b4:	4432      	add	r2, r6
 80122b6:	b292      	uxth	r2, r2
 80122b8:	2a09      	cmp	r2, #9
 80122ba:	bf88      	it	hi
 80122bc:	3a0a      	subhi	r2, #10
 80122be:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80122c2:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 80122c4:	42aa      	cmp	r2, r5
 80122c6:	d0ee      	beq.n	80122a6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80122c8:	2000      	movs	r0, #0
 80122ca:	bd70      	pop	{r4, r5, r6, pc}
 80122cc:	2001      	movs	r0, #1
 80122ce:	e7fc      	b.n	80122ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080122d0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80122d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122d4:	4605      	mov	r5, r0
 80122d6:	4616      	mov	r6, r2
 80122d8:	1c8c      	adds	r4, r1, #2
 80122da:	8809      	ldrh	r1, [r1, #0]
 80122dc:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80122e0:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80122e4:	42b3      	cmp	r3, r6
 80122e6:	d124      	bne.n	8012332 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80122e8:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80122ec:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80122f0:	f001 070f 	and.w	r7, r1, #15
 80122f4:	4652      	mov	r2, sl
 80122f6:	f8cd 8000 	str.w	r8, [sp]
 80122fa:	464b      	mov	r3, r9
 80122fc:	4621      	mov	r1, r4
 80122fe:	4628      	mov	r0, r5
 8012300:	f7ff ffb7 	bl	8012272 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8012304:	4683      	mov	fp, r0
 8012306:	b168      	cbz	r0, 8012324 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8012308:	eb0a 0109 	add.w	r1, sl, r9
 801230c:	463a      	mov	r2, r7
 801230e:	4628      	mov	r0, r5
 8012310:	4441      	add	r1, r8
 8012312:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8012316:	4649      	mov	r1, r9
 8012318:	f7ff ff52 	bl	80121c0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801231c:	4658      	mov	r0, fp
 801231e:	b003      	add	sp, #12
 8012320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012324:	eb07 010a 	add.w	r1, r7, sl
 8012328:	4449      	add	r1, r9
 801232a:	4441      	add	r1, r8
 801232c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012330:	e7d2      	b.n	80122d8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012332:	f04f 0b00 	mov.w	fp, #0
 8012336:	e7f1      	b.n	801231c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08012338 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8012338:	b570      	push	{r4, r5, r6, lr}
 801233a:	8810      	ldrh	r0, [r2, #0]
 801233c:	4298      	cmp	r0, r3
 801233e:	d817      	bhi.n	8012370 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012340:	1e48      	subs	r0, r1, #1
 8012342:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8012346:	4298      	cmp	r0, r3
 8012348:	d312      	bcc.n	8012370 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801234a:	2400      	movs	r4, #0
 801234c:	428c      	cmp	r4, r1
 801234e:	d20f      	bcs.n	8012370 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012350:	1860      	adds	r0, r4, r1
 8012352:	1040      	asrs	r0, r0, #1
 8012354:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012358:	0085      	lsls	r5, r0, #2
 801235a:	42b3      	cmp	r3, r6
 801235c:	d902      	bls.n	8012364 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801235e:	3001      	adds	r0, #1
 8012360:	b284      	uxth	r4, r0
 8012362:	e7f3      	b.n	801234c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012364:	d201      	bcs.n	801236a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8012366:	b281      	uxth	r1, r0
 8012368:	e7f0      	b.n	801234c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801236a:	442a      	add	r2, r5
 801236c:	8850      	ldrh	r0, [r2, #2]
 801236e:	bd70      	pop	{r4, r5, r6, pc}
 8012370:	2000      	movs	r0, #0
 8012372:	e7fc      	b.n	801236e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08012374 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8012374:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012378:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 801237a:	4604      	mov	r4, r0
 801237c:	260b      	movs	r6, #11
 801237e:	886f      	ldrh	r7, [r5, #2]
 8012380:	087f      	lsrs	r7, r7, #1
 8012382:	3e01      	subs	r6, #1
 8012384:	d013      	beq.n	80123ae <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012386:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012388:	462a      	mov	r2, r5
 801238a:	4639      	mov	r1, r7
 801238c:	4620      	mov	r0, r4
 801238e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012392:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012396:	4643      	mov	r3, r8
 8012398:	f7ff ffce 	bl	8012338 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801239c:	b138      	cbz	r0, 80123ae <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801239e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80123a2:	4642      	mov	r2, r8
 80123a4:	4620      	mov	r0, r4
 80123a6:	f7ff ff93 	bl	80122d0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80123aa:	2800      	cmp	r0, #0
 80123ac:	d1e9      	bne.n	8012382 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80123ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080123b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80123b4:	b570      	push	{r4, r5, r6, lr}
 80123b6:	694a      	ldr	r2, [r1, #20]
 80123b8:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80123ba:	684b      	ldr	r3, [r1, #4]
 80123bc:	1b54      	subs	r4, r2, r5
 80123be:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80123c0:	f000 8106 	beq.w	80125d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80123c4:	1b9b      	subs	r3, r3, r6
 80123c6:	d003      	beq.n	80123d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80123c8:	4363      	muls	r3, r4
 80123ca:	2210      	movs	r2, #16
 80123cc:	fb93 f3f2 	sdiv	r3, r3, r2
 80123d0:	680c      	ldr	r4, [r1, #0]
 80123d2:	698a      	ldr	r2, [r1, #24]
 80123d4:	1b65      	subs	r5, r4, r5
 80123d6:	f000 80fd 	beq.w	80125d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80123da:	1b92      	subs	r2, r2, r6
 80123dc:	d003      	beq.n	80123e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80123de:	436a      	muls	r2, r5
 80123e0:	2410      	movs	r4, #16
 80123e2:	fb92 f2f4 	sdiv	r2, r2, r4
 80123e6:	1a9b      	subs	r3, r3, r2
 80123e8:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 8012610 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80123ec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80123f0:	460a      	mov	r2, r1
 80123f2:	ee07 3a90 	vmov	s15, r3
 80123f6:	f100 040c 	add.w	r4, r0, #12
 80123fa:	4603      	mov	r3, r0
 80123fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012400:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012404:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8012408:	eeb1 6a43 	vneg.f32	s12, s6
 801240c:	edd2 7a02 	vldr	s15, [r2, #8]
 8012410:	3214      	adds	r2, #20
 8012412:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012416:	ece3 6a01 	vstmia	r3!, {s13}
 801241a:	429c      	cmp	r4, r3
 801241c:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012420:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012424:	edc3 7a02 	vstr	s15, [r3, #8]
 8012428:	ed52 7a01 	vldr	s15, [r2, #-4]
 801242c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012430:	edc3 7a05 	vstr	s15, [r3, #20]
 8012434:	d1ea      	bne.n	801240c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8012436:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012438:	698b      	ldr	r3, [r1, #24]
 801243a:	edd0 4a02 	vldr	s9, [r0, #8]
 801243e:	1a9b      	subs	r3, r3, r2
 8012440:	edd0 3a00 	vldr	s7, [r0]
 8012444:	edd0 6a01 	vldr	s13, [r0, #4]
 8012448:	ee07 3a90 	vmov	s15, r3
 801244c:	684b      	ldr	r3, [r1, #4]
 801244e:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012452:	ed90 5a05 	vldr	s10, [r0, #20]
 8012456:	1a9b      	subs	r3, r3, r2
 8012458:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801245c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012460:	ed90 2a03 	vldr	s4, [r0, #12]
 8012464:	ee07 3a10 	vmov	s14, r3
 8012468:	edd0 5a04 	vldr	s11, [r0, #16]
 801246c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012470:	ed90 1a07 	vldr	s2, [r0, #28]
 8012474:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012478:	edd0 2a06 	vldr	s5, [r0, #24]
 801247c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8012480:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012484:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012488:	ee32 5a45 	vsub.f32	s10, s4, s10
 801248c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012490:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012494:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8012498:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801249a:	694a      	ldr	r2, [r1, #20]
 801249c:	1b13      	subs	r3, r2, r4
 801249e:	ee07 3a10 	vmov	s14, r3
 80124a2:	680b      	ldr	r3, [r1, #0]
 80124a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80124a8:	1b1b      	subs	r3, r3, r4
 80124aa:	ee27 7a04 	vmul.f32	s14, s14, s8
 80124ae:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80124b2:	ee07 3a10 	vmov	s14, r3
 80124b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80124ba:	ee27 7a04 	vmul.f32	s14, s14, s8
 80124be:	eee6 4a87 	vfma.f32	s9, s13, s14
 80124c2:	ee64 4a86 	vmul.f32	s9, s9, s12
 80124c6:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 80124ca:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80124cc:	698b      	ldr	r3, [r1, #24]
 80124ce:	1a9b      	subs	r3, r3, r2
 80124d0:	ee06 3a90 	vmov	s13, r3
 80124d4:	684b      	ldr	r3, [r1, #4]
 80124d6:	1a9b      	subs	r3, r3, r2
 80124d8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80124dc:	ee07 3a10 	vmov	s14, r3
 80124e0:	ee66 6a84 	vmul.f32	s13, s13, s8
 80124e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80124e8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80124ec:	ee27 7a04 	vmul.f32	s14, s14, s8
 80124f0:	eee5 6a87 	vfma.f32	s13, s11, s14
 80124f4:	ee66 6a83 	vmul.f32	s13, s13, s6
 80124f8:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 80124fc:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80124fe:	694a      	ldr	r2, [r1, #20]
 8012500:	1b13      	subs	r3, r2, r4
 8012502:	ee07 3a10 	vmov	s14, r3
 8012506:	680b      	ldr	r3, [r1, #0]
 8012508:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801250c:	1b1b      	subs	r3, r3, r4
 801250e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012512:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012516:	ee07 3a10 	vmov	s14, r3
 801251a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801251e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012522:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012526:	edd0 5a08 	vldr	s11, [r0, #32]
 801252a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801252e:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012532:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012536:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801253a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801253c:	698b      	ldr	r3, [r1, #24]
 801253e:	1a9b      	subs	r3, r3, r2
 8012540:	ee07 3a10 	vmov	s14, r3
 8012544:	684b      	ldr	r3, [r1, #4]
 8012546:	1a9b      	subs	r3, r3, r2
 8012548:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801254c:	ee01 3a90 	vmov	s3, r3
 8012550:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012554:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012558:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801255c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012560:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012564:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012568:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801256c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801256e:	694a      	ldr	r2, [r1, #20]
 8012570:	1b13      	subs	r3, r2, r4
 8012572:	ee03 3a10 	vmov	s6, r3
 8012576:	680b      	ldr	r3, [r1, #0]
 8012578:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801257c:	1b1b      	subs	r3, r3, r4
 801257e:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012582:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8012586:	ee03 3a10 	vmov	s6, r3
 801258a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801258e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012592:	eee1 5a04 	vfma.f32	s11, s2, s8
 8012596:	ee25 6a86 	vmul.f32	s12, s11, s12
 801259a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801259e:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 80125a2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80125a6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80125aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125ae:	dd13      	ble.n	80125d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80125b0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80125b4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80125b8:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80125ba:	eee3 7a87 	vfma.f32	s15, s7, s14
 80125be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80125c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125c6:	dd15      	ble.n	80125f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80125c8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80125cc:	6403      	str	r3, [r0, #64]	@ 0x40
 80125ce:	bd70      	pop	{r4, r5, r6, pc}
 80125d0:	4623      	mov	r3, r4
 80125d2:	e6fd      	b.n	80123d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80125d4:	462a      	mov	r2, r5
 80125d6:	e706      	b.n	80123e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80125d8:	d502      	bpl.n	80125e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80125da:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80125de:	e7e9      	b.n	80125b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80125e0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80125e4:	eea3 2a85 	vfma.f32	s4, s7, s10
 80125e8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80125ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125f0:	dade      	bge.n	80125b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80125f2:	e7f2      	b.n	80125da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80125f4:	d502      	bpl.n	80125fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80125f6:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80125fa:	e7e7      	b.n	80125cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80125fc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012600:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012604:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012608:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801260c:	dadc      	bge.n	80125c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801260e:	e7f2      	b.n	80125f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012610:	3d800000 	.word	0x3d800000

08012614 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012614:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012618:	2714      	movs	r7, #20
 801261a:	435f      	muls	r7, r3
 801261c:	eb02 0c07 	add.w	ip, r2, r7
 8012620:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012624:	f115 0e0f 	adds.w	lr, r5, #15
 8012628:	f100 80a2 	bmi.w	8012770 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801262c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012630:	9c08      	ldr	r4, [sp, #32]
 8012632:	2614      	movs	r6, #20
 8012634:	f8c0 e014 	str.w	lr, [r0, #20]
 8012638:	4366      	muls	r6, r4
 801263a:	eb02 0806 	add.w	r8, r2, r6
 801263e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8012642:	f115 040f 	adds.w	r4, r5, #15
 8012646:	f100 809f 	bmi.w	8012788 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801264a:	1124      	asrs	r4, r4, #4
 801264c:	eba4 040e 	sub.w	r4, r4, lr
 8012650:	6184      	str	r4, [r0, #24]
 8012652:	2c00      	cmp	r4, #0
 8012654:	f000 808a 	beq.w	801276c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8012658:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801265c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012660:	5995      	ldr	r5, [r2, r6]
 8012662:	eba4 0809 	sub.w	r8, r4, r9
 8012666:	59d4      	ldr	r4, [r2, r7]
 8012668:	eba5 0a04 	sub.w	sl, r5, r4
 801266c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012670:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012674:	fb0e fe05 	mul.w	lr, lr, r5
 8012678:	fb0a ee19 	mls	lr, sl, r9, lr
 801267c:	fb08 e404 	mla	r4, r8, r4, lr
 8012680:	3c01      	subs	r4, #1
 8012682:	19a4      	adds	r4, r4, r6
 8012684:	f100 808c 	bmi.w	80127a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8012688:	fb94 fef6 	sdiv	lr, r4, r6
 801268c:	fb06 441e 	mls	r4, r6, lr, r4
 8012690:	f8c0 e000 	str.w	lr, [r0]
 8012694:	6104      	str	r4, [r0, #16]
 8012696:	2d00      	cmp	r5, #0
 8012698:	f2c0 8095 	blt.w	80127c6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801269c:	fb95 f4f6 	sdiv	r4, r5, r6
 80126a0:	fb06 5514 	mls	r5, r6, r4, r5
 80126a4:	6044      	str	r4, [r0, #4]
 80126a6:	6085      	str	r5, [r0, #8]
 80126a8:	60c6      	str	r6, [r0, #12]
 80126aa:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80126ae:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80126b2:	6945      	ldr	r5, [r0, #20]
 80126b4:	59d2      	ldr	r2, [r2, r7]
 80126b6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80126ba:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 80127e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80126be:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80126c2:	ee07 4a10 	vmov	s14, r4
 80126c6:	6804      	ldr	r4, [r0, #0]
 80126c8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80126cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80126d0:	ee07 2a90 	vmov	s15, r2
 80126d4:	ee27 7a26 	vmul.f32	s14, s14, s13
 80126d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80126dc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80126e0:	edd3 6a00 	vldr	s13, [r3]
 80126e4:	eee6 6a07 	vfma.f32	s13, s12, s14
 80126e8:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 80126ec:	eee6 6a27 	vfma.f32	s13, s12, s15
 80126f0:	edc0 6a07 	vstr	s13, [r0, #28]
 80126f4:	edd0 6a01 	vldr	s13, [r0, #4]
 80126f8:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 80126fc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012700:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8012704:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012708:	ed80 6a08 	vstr	s12, [r0, #32]
 801270c:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 801270e:	6242      	str	r2, [r0, #36]	@ 0x24
 8012710:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8012714:	ed93 6a03 	vldr	s12, [r3, #12]
 8012718:	eea5 6a87 	vfma.f32	s12, s11, s14
 801271c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012720:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012724:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8012728:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801272c:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8012730:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012734:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8012738:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801273a:	6302      	str	r2, [r0, #48]	@ 0x30
 801273c:	ed93 6a06 	vldr	s12, [r3, #24]
 8012740:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8012744:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012748:	eeb0 7a46 	vmov.f32	s14, s12
 801274c:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8012750:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012754:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012758:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 801275c:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8012760:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012764:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8012768:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801276a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801276c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012770:	2410      	movs	r4, #16
 8012772:	f1c5 0501 	rsb	r5, r5, #1
 8012776:	fb9e fef4 	sdiv	lr, lr, r4
 801277a:	f015 050f 	ands.w	r5, r5, #15
 801277e:	bf18      	it	ne
 8012780:	2501      	movne	r5, #1
 8012782:	ebae 0e05 	sub.w	lr, lr, r5
 8012786:	e753      	b.n	8012630 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8012788:	f04f 0910 	mov.w	r9, #16
 801278c:	f1c5 0501 	rsb	r5, r5, #1
 8012790:	fb94 f4f9 	sdiv	r4, r4, r9
 8012794:	f015 050f 	ands.w	r5, r5, #15
 8012798:	bf18      	it	ne
 801279a:	2501      	movne	r5, #1
 801279c:	1b64      	subs	r4, r4, r5
 801279e:	e755      	b.n	801264c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80127a0:	4264      	negs	r4, r4
 80127a2:	fb94 fef6 	sdiv	lr, r4, r6
 80127a6:	f1ce 0800 	rsb	r8, lr, #0
 80127aa:	fb06 441e 	mls	r4, r6, lr, r4
 80127ae:	f8c0 8000 	str.w	r8, [r0]
 80127b2:	6104      	str	r4, [r0, #16]
 80127b4:	2c00      	cmp	r4, #0
 80127b6:	f43f af6e 	beq.w	8012696 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80127ba:	ea6f 0e0e 	mvn.w	lr, lr
 80127be:	1b34      	subs	r4, r6, r4
 80127c0:	f8c0 e000 	str.w	lr, [r0]
 80127c4:	e766      	b.n	8012694 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80127c6:	426d      	negs	r5, r5
 80127c8:	fb95 f4f6 	sdiv	r4, r5, r6
 80127cc:	f1c4 0e00 	rsb	lr, r4, #0
 80127d0:	fb06 5514 	mls	r5, r6, r4, r5
 80127d4:	f8c0 e004 	str.w	lr, [r0, #4]
 80127d8:	6085      	str	r5, [r0, #8]
 80127da:	2d00      	cmp	r5, #0
 80127dc:	f43f af64 	beq.w	80126a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80127e0:	43e4      	mvns	r4, r4
 80127e2:	1b75      	subs	r5, r6, r5
 80127e4:	6044      	str	r4, [r0, #4]
 80127e6:	e75e      	b.n	80126a6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80127e8:	3d800000 	.word	0x3d800000

080127ec <_ZN8touchgfx7Unicode6strlenEPKt>:
 80127ec:	4602      	mov	r2, r0
 80127ee:	b148      	cbz	r0, 8012804 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80127f0:	2300      	movs	r3, #0
 80127f2:	b298      	uxth	r0, r3
 80127f4:	3301      	adds	r3, #1
 80127f6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80127fa:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80127fe:	2900      	cmp	r1, #0
 8012800:	d1f7      	bne.n	80127f2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8012802:	4770      	bx	lr
 8012804:	4770      	bx	lr

08012806 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8012806:	b530      	push	{r4, r5, lr}
 8012808:	4604      	mov	r4, r0
 801280a:	b159      	cbz	r1, 8012824 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801280c:	b148      	cbz	r0, 8012822 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801280e:	2300      	movs	r3, #0
 8012810:	b298      	uxth	r0, r3
 8012812:	4282      	cmp	r2, r0
 8012814:	d905      	bls.n	8012822 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012816:	5ccd      	ldrb	r5, [r1, r3]
 8012818:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801281c:	3301      	adds	r3, #1
 801281e:	2d00      	cmp	r5, #0
 8012820:	d1f6      	bne.n	8012810 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8012822:	bd30      	pop	{r4, r5, pc}
 8012824:	4608      	mov	r0, r1
 8012826:	e7fc      	b.n	8012822 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08012828 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8012828:	b5f0      	push	{r4, r5, r6, r7, lr}
 801282a:	b08b      	sub	sp, #44	@ 0x2c
 801282c:	468c      	mov	ip, r1
 801282e:	4604      	mov	r4, r0
 8012830:	2100      	movs	r1, #0
 8012832:	261f      	movs	r6, #31
 8012834:	af01      	add	r7, sp, #4
 8012836:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 801283a:	1e71      	subs	r1, r6, #1
 801283c:	fb94 fef3 	sdiv	lr, r4, r3
 8012840:	fb03 441e 	mls	r4, r3, lr, r4
 8012844:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8012848:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801284c:	b2ec      	uxtb	r4, r5
 801284e:	2d09      	cmp	r5, #9
 8012850:	bfd4      	ite	le
 8012852:	3430      	addle	r4, #48	@ 0x30
 8012854:	3457      	addgt	r4, #87	@ 0x57
 8012856:	b2e4      	uxtb	r4, r4
 8012858:	55bc      	strb	r4, [r7, r6]
 801285a:	4674      	mov	r4, lr
 801285c:	b974      	cbnz	r4, 801287c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801285e:	2800      	cmp	r0, #0
 8012860:	da05      	bge.n	801286e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8012862:	ab0a      	add	r3, sp, #40	@ 0x28
 8012864:	4419      	add	r1, r3
 8012866:	232d      	movs	r3, #45	@ 0x2d
 8012868:	f801 3c24 	strb.w	r3, [r1, #-36]
 801286c:	1eb1      	subs	r1, r6, #2
 801286e:	3101      	adds	r1, #1
 8012870:	4660      	mov	r0, ip
 8012872:	4439      	add	r1, r7
 8012874:	f7ff ffc7 	bl	8012806 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8012878:	b00b      	add	sp, #44	@ 0x2c
 801287a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801287c:	460e      	mov	r6, r1
 801287e:	e7dc      	b.n	801283a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08012880 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8012880:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012882:	468c      	mov	ip, r1
 8012884:	b08b      	sub	sp, #44	@ 0x2c
 8012886:	2100      	movs	r1, #0
 8012888:	ae01      	add	r6, sp, #4
 801288a:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 801288e:	211f      	movs	r1, #31
 8012890:	fbb0 f7f3 	udiv	r7, r0, r3
 8012894:	fb03 0517 	mls	r5, r3, r7, r0
 8012898:	4638      	mov	r0, r7
 801289a:	b2ec      	uxtb	r4, r5
 801289c:	2d09      	cmp	r5, #9
 801289e:	bfd4      	ite	le
 80128a0:	3430      	addle	r4, #48	@ 0x30
 80128a2:	3457      	addgt	r4, #87	@ 0x57
 80128a4:	b2e4      	uxtb	r4, r4
 80128a6:	558c      	strb	r4, [r1, r6]
 80128a8:	1e4c      	subs	r4, r1, #1
 80128aa:	b92f      	cbnz	r7, 80128b8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80128ac:	4431      	add	r1, r6
 80128ae:	4660      	mov	r0, ip
 80128b0:	f7ff ffa9 	bl	8012806 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80128b4:	b00b      	add	sp, #44	@ 0x2c
 80128b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80128b8:	4621      	mov	r1, r4
 80128ba:	e7e9      	b.n	8012890 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080128bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80128bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128c0:	b085      	sub	sp, #20
 80128c2:	4691      	mov	r9, r2
 80128c4:	6802      	ldr	r2, [r0, #0]
 80128c6:	4688      	mov	r8, r1
 80128c8:	461c      	mov	r4, r3
 80128ca:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 80128ce:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 80128d2:	4683      	mov	fp, r0
 80128d4:	4610      	mov	r0, r2
 80128d6:	9103      	str	r1, [sp, #12]
 80128d8:	9302      	str	r3, [sp, #8]
 80128da:	9201      	str	r2, [sp, #4]
 80128dc:	f7ff ff86 	bl	80127ec <_ZN8touchgfx7Unicode6strlenEPKt>
 80128e0:	f1b8 0f00 	cmp.w	r8, #0
 80128e4:	bf0c      	ite	eq
 80128e6:	4684      	moveq	ip, r0
 80128e8:	f100 0c01 	addne.w	ip, r0, #1
 80128ec:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 80128f0:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 80128f4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80128f6:	fa1f fc8c 	uxth.w	ip, ip
 80128fa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80128fc:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8012900:	9903      	ldr	r1, [sp, #12]
 8012902:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8012906:	d041      	beq.n	801298c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8012908:	d834      	bhi.n	8012974 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801290a:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 801290e:	d059      	beq.n	80129c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8012910:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8012914:	d03a      	beq.n	801298c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8012916:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 801291a:	d034      	beq.n	8012986 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801291c:	2400      	movs	r4, #0
 801291e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8012922:	3a01      	subs	r2, #1
 8012924:	b169      	cbz	r1, 8012942 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012926:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8012928:	458c      	cmp	ip, r1
 801292a:	da09      	bge.n	8012940 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801292c:	eba1 010c 	sub.w	r1, r1, ip
 8012930:	b289      	uxth	r1, r1
 8012932:	b933      	cbnz	r3, 8012942 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012934:	2e00      	cmp	r6, #0
 8012936:	d051      	beq.n	80129dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8012938:	2800      	cmp	r0, #0
 801293a:	d04f      	beq.n	80129dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801293c:	440c      	add	r4, r1
 801293e:	b2a4      	uxth	r4, r4
 8012940:	2100      	movs	r1, #0
 8012942:	682b      	ldr	r3, [r5, #0]
 8012944:	4293      	cmp	r3, r2
 8012946:	da07      	bge.n	8012958 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8012948:	f1b8 0f00 	cmp.w	r8, #0
 801294c:	d004      	beq.n	8012958 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801294e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8012952:	682b      	ldr	r3, [r5, #0]
 8012954:	3301      	adds	r3, #1
 8012956:	602b      	str	r3, [r5, #0]
 8012958:	2730      	movs	r7, #48	@ 0x30
 801295a:	2c00      	cmp	r4, #0
 801295c:	d04e      	beq.n	80129fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801295e:	682e      	ldr	r6, [r5, #0]
 8012960:	3c01      	subs	r4, #1
 8012962:	42b2      	cmp	r2, r6
 8012964:	b2a4      	uxth	r4, r4
 8012966:	dd49      	ble.n	80129fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012968:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801296c:	682b      	ldr	r3, [r5, #0]
 801296e:	3301      	adds	r3, #1
 8012970:	602b      	str	r3, [r5, #0]
 8012972:	e7f2      	b.n	801295a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8012974:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8012978:	d01d      	beq.n	80129b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801297a:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 801297e:	d002      	beq.n	8012986 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8012980:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8012984:	e7c9      	b.n	801291a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8012986:	4684      	mov	ip, r0
 8012988:	f04f 0800 	mov.w	r8, #0
 801298c:	2c00      	cmp	r4, #0
 801298e:	d0c6      	beq.n	801291e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012990:	b947      	cbnz	r7, 80129a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8012992:	2801      	cmp	r0, #1
 8012994:	d106      	bne.n	80129a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8012996:	8814      	ldrh	r4, [r2, #0]
 8012998:	2c30      	cmp	r4, #48	@ 0x30
 801299a:	bf02      	ittt	eq
 801299c:	3202      	addeq	r2, #2
 801299e:	4638      	moveq	r0, r7
 80129a0:	f8cb 2000 	streq.w	r2, [fp]
 80129a4:	45bc      	cmp	ip, r7
 80129a6:	da14      	bge.n	80129d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80129a8:	b2bf      	uxth	r7, r7
 80129aa:	eba7 040c 	sub.w	r4, r7, ip
 80129ae:	46bc      	mov	ip, r7
 80129b0:	b2a4      	uxth	r4, r4
 80129b2:	2600      	movs	r6, #0
 80129b4:	e7b3      	b.n	801291e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80129b6:	4684      	mov	ip, r0
 80129b8:	b16c      	cbz	r4, 80129d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80129ba:	42b8      	cmp	r0, r7
 80129bc:	dd00      	ble.n	80129c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80129be:	b2b8      	uxth	r0, r7
 80129c0:	2400      	movs	r4, #0
 80129c2:	e003      	b.n	80129cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80129c4:	f04f 0c01 	mov.w	ip, #1
 80129c8:	2400      	movs	r4, #0
 80129ca:	4660      	mov	r0, ip
 80129cc:	4626      	mov	r6, r4
 80129ce:	46a0      	mov	r8, r4
 80129d0:	e7a5      	b.n	801291e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80129d2:	2400      	movs	r4, #0
 80129d4:	e7ed      	b.n	80129b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80129d6:	4626      	mov	r6, r4
 80129d8:	46a0      	mov	r8, r4
 80129da:	e7a0      	b.n	801291e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80129dc:	2900      	cmp	r1, #0
 80129de:	d0b0      	beq.n	8012942 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80129e0:	2720      	movs	r7, #32
 80129e2:	682e      	ldr	r6, [r5, #0]
 80129e4:	2900      	cmp	r1, #0
 80129e6:	d0ac      	beq.n	8012942 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80129e8:	3901      	subs	r1, #1
 80129ea:	4296      	cmp	r6, r2
 80129ec:	b289      	uxth	r1, r1
 80129ee:	daa7      	bge.n	8012940 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80129f0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80129f4:	682b      	ldr	r3, [r5, #0]
 80129f6:	3301      	adds	r3, #1
 80129f8:	602b      	str	r3, [r5, #0]
 80129fa:	e7f2      	b.n	80129e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80129fc:	b188      	cbz	r0, 8012a22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80129fe:	682b      	ldr	r3, [r5, #0]
 8012a00:	3801      	subs	r0, #1
 8012a02:	429a      	cmp	r2, r3
 8012a04:	b280      	uxth	r0, r0
 8012a06:	dd0c      	ble.n	8012a22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8012a08:	f8db 3000 	ldr.w	r3, [fp]
 8012a0c:	1c9c      	adds	r4, r3, #2
 8012a0e:	f8cb 4000 	str.w	r4, [fp]
 8012a12:	881c      	ldrh	r4, [r3, #0]
 8012a14:	682b      	ldr	r3, [r5, #0]
 8012a16:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8012a1a:	682b      	ldr	r3, [r5, #0]
 8012a1c:	3301      	adds	r3, #1
 8012a1e:	602b      	str	r3, [r5, #0]
 8012a20:	e7ec      	b.n	80129fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012a22:	2620      	movs	r6, #32
 8012a24:	b151      	cbz	r1, 8012a3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8012a26:	6828      	ldr	r0, [r5, #0]
 8012a28:	3901      	subs	r1, #1
 8012a2a:	4282      	cmp	r2, r0
 8012a2c:	b289      	uxth	r1, r1
 8012a2e:	dd05      	ble.n	8012a3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8012a30:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8012a34:	682b      	ldr	r3, [r5, #0]
 8012a36:	3301      	adds	r3, #1
 8012a38:	602b      	str	r3, [r5, #0]
 8012a3a:	e7f3      	b.n	8012a24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8012a3c:	b005      	add	sp, #20
 8012a3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012a42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8012a42:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012a46:	2400      	movs	r4, #0
 8012a48:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8012a4c:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8012a50:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8012a54:	8014      	strh	r4, [r2, #0]
 8012a56:	701c      	strb	r4, [r3, #0]
 8012a58:	f888 4000 	strb.w	r4, [r8]
 8012a5c:	f88c 4000 	strb.w	r4, [ip]
 8012a60:	f88e 4000 	strb.w	r4, [lr]
 8012a64:	703c      	strb	r4, [r7, #0]
 8012a66:	6804      	ldr	r4, [r0, #0]
 8012a68:	b1a4      	cbz	r4, 8012a94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8012a6a:	8824      	ldrh	r4, [r4, #0]
 8012a6c:	f04f 0901 	mov.w	r9, #1
 8012a70:	b314      	cbz	r4, 8012ab8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8012a72:	2c2b      	cmp	r4, #43	@ 0x2b
 8012a74:	d001      	beq.n	8012a7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8012a76:	2c20      	cmp	r4, #32
 8012a78:	d110      	bne.n	8012a9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8012a7a:	8014      	strh	r4, [r2, #0]
 8012a7c:	6804      	ldr	r4, [r0, #0]
 8012a7e:	b10c      	cbz	r4, 8012a84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8012a80:	3402      	adds	r4, #2
 8012a82:	6004      	str	r4, [r0, #0]
 8012a84:	680c      	ldr	r4, [r1, #0]
 8012a86:	b10c      	cbz	r4, 8012a8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8012a88:	3401      	adds	r4, #1
 8012a8a:	600c      	str	r4, [r1, #0]
 8012a8c:	6804      	ldr	r4, [r0, #0]
 8012a8e:	b17c      	cbz	r4, 8012ab0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8012a90:	8824      	ldrh	r4, [r4, #0]
 8012a92:	e7ed      	b.n	8012a70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8012a94:	680c      	ldr	r4, [r1, #0]
 8012a96:	b17c      	cbz	r4, 8012ab8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8012a98:	7824      	ldrb	r4, [r4, #0]
 8012a9a:	e7e7      	b.n	8012a6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8012a9c:	2c2d      	cmp	r4, #45	@ 0x2d
 8012a9e:	d102      	bne.n	8012aa6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8012aa0:	f883 9000 	strb.w	r9, [r3]
 8012aa4:	e7ea      	b.n	8012a7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8012aa6:	2c23      	cmp	r4, #35	@ 0x23
 8012aa8:	d107      	bne.n	8012aba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8012aaa:	f888 9000 	strb.w	r9, [r8]
 8012aae:	e7e5      	b.n	8012a7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8012ab0:	680c      	ldr	r4, [r1, #0]
 8012ab2:	b10c      	cbz	r4, 8012ab8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8012ab4:	7824      	ldrb	r4, [r4, #0]
 8012ab6:	e7db      	b.n	8012a70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8012ab8:	2400      	movs	r4, #0
 8012aba:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8012abe:	2b09      	cmp	r3, #9
 8012ac0:	d901      	bls.n	8012ac6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8012ac2:	2c2a      	cmp	r4, #42	@ 0x2a
 8012ac4:	d122      	bne.n	8012b0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012ac6:	2301      	movs	r3, #1
 8012ac8:	2c30      	cmp	r4, #48	@ 0x30
 8012aca:	f88e 3000 	strb.w	r3, [lr]
 8012ace:	d10d      	bne.n	8012aec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8012ad0:	f88c 3000 	strb.w	r3, [ip]
 8012ad4:	6803      	ldr	r3, [r0, #0]
 8012ad6:	b10b      	cbz	r3, 8012adc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8012ad8:	3302      	adds	r3, #2
 8012ada:	6003      	str	r3, [r0, #0]
 8012adc:	680b      	ldr	r3, [r1, #0]
 8012ade:	b10b      	cbz	r3, 8012ae4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8012ae0:	3301      	adds	r3, #1
 8012ae2:	600b      	str	r3, [r1, #0]
 8012ae4:	6803      	ldr	r3, [r0, #0]
 8012ae6:	2b00      	cmp	r3, #0
 8012ae8:	d02f      	beq.n	8012b4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8012aea:	881c      	ldrh	r4, [r3, #0]
 8012aec:	2c2a      	cmp	r4, #42	@ 0x2a
 8012aee:	d135      	bne.n	8012b5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8012af0:	f04f 33ff 	mov.w	r3, #4294967295
 8012af4:	6033      	str	r3, [r6, #0]
 8012af6:	6803      	ldr	r3, [r0, #0]
 8012af8:	b10b      	cbz	r3, 8012afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8012afa:	3302      	adds	r3, #2
 8012afc:	6003      	str	r3, [r0, #0]
 8012afe:	680b      	ldr	r3, [r1, #0]
 8012b00:	b10b      	cbz	r3, 8012b06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8012b02:	3301      	adds	r3, #1
 8012b04:	600b      	str	r3, [r1, #0]
 8012b06:	6803      	ldr	r3, [r0, #0]
 8012b08:	b31b      	cbz	r3, 8012b52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8012b0a:	881c      	ldrh	r4, [r3, #0]
 8012b0c:	2c2e      	cmp	r4, #46	@ 0x2e
 8012b0e:	d11a      	bne.n	8012b46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012b10:	2301      	movs	r3, #1
 8012b12:	703b      	strb	r3, [r7, #0]
 8012b14:	6803      	ldr	r3, [r0, #0]
 8012b16:	b10b      	cbz	r3, 8012b1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8012b18:	3302      	adds	r3, #2
 8012b1a:	6003      	str	r3, [r0, #0]
 8012b1c:	680b      	ldr	r3, [r1, #0]
 8012b1e:	b10b      	cbz	r3, 8012b24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8012b20:	3301      	adds	r3, #1
 8012b22:	600b      	str	r3, [r1, #0]
 8012b24:	6803      	ldr	r3, [r0, #0]
 8012b26:	2b00      	cmp	r3, #0
 8012b28:	d036      	beq.n	8012b98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8012b2a:	881b      	ldrh	r3, [r3, #0]
 8012b2c:	2b2a      	cmp	r3, #42	@ 0x2a
 8012b2e:	d137      	bne.n	8012ba0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8012b30:	f04f 33ff 	mov.w	r3, #4294967295
 8012b34:	602b      	str	r3, [r5, #0]
 8012b36:	6803      	ldr	r3, [r0, #0]
 8012b38:	b10b      	cbz	r3, 8012b3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8012b3a:	3302      	adds	r3, #2
 8012b3c:	6003      	str	r3, [r0, #0]
 8012b3e:	680b      	ldr	r3, [r1, #0]
 8012b40:	b10b      	cbz	r3, 8012b46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012b42:	3301      	adds	r3, #1
 8012b44:	600b      	str	r3, [r1, #0]
 8012b46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012b4a:	680c      	ldr	r4, [r1, #0]
 8012b4c:	b134      	cbz	r4, 8012b5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8012b4e:	7824      	ldrb	r4, [r4, #0]
 8012b50:	e7cc      	b.n	8012aec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8012b52:	680b      	ldr	r3, [r1, #0]
 8012b54:	2b00      	cmp	r3, #0
 8012b56:	d0f6      	beq.n	8012b46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012b58:	781c      	ldrb	r4, [r3, #0]
 8012b5a:	e7d7      	b.n	8012b0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012b5c:	2300      	movs	r3, #0
 8012b5e:	220a      	movs	r2, #10
 8012b60:	6033      	str	r3, [r6, #0]
 8012b62:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8012b66:	fa1f f38c 	uxth.w	r3, ip
 8012b6a:	2b09      	cmp	r3, #9
 8012b6c:	d8ce      	bhi.n	8012b0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012b6e:	6833      	ldr	r3, [r6, #0]
 8012b70:	fb02 c303 	mla	r3, r2, r3, ip
 8012b74:	6033      	str	r3, [r6, #0]
 8012b76:	6803      	ldr	r3, [r0, #0]
 8012b78:	b10b      	cbz	r3, 8012b7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8012b7a:	3302      	adds	r3, #2
 8012b7c:	6003      	str	r3, [r0, #0]
 8012b7e:	680b      	ldr	r3, [r1, #0]
 8012b80:	b10b      	cbz	r3, 8012b86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8012b82:	3301      	adds	r3, #1
 8012b84:	600b      	str	r3, [r1, #0]
 8012b86:	6803      	ldr	r3, [r0, #0]
 8012b88:	b10b      	cbz	r3, 8012b8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8012b8a:	881c      	ldrh	r4, [r3, #0]
 8012b8c:	e7e9      	b.n	8012b62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012b8e:	680c      	ldr	r4, [r1, #0]
 8012b90:	2c00      	cmp	r4, #0
 8012b92:	d0e6      	beq.n	8012b62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012b94:	7824      	ldrb	r4, [r4, #0]
 8012b96:	e7e4      	b.n	8012b62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012b98:	680b      	ldr	r3, [r1, #0]
 8012b9a:	b10b      	cbz	r3, 8012ba0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8012b9c:	781b      	ldrb	r3, [r3, #0]
 8012b9e:	e7c5      	b.n	8012b2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8012ba0:	2200      	movs	r2, #0
 8012ba2:	240a      	movs	r4, #10
 8012ba4:	602a      	str	r2, [r5, #0]
 8012ba6:	3b30      	subs	r3, #48	@ 0x30
 8012ba8:	682a      	ldr	r2, [r5, #0]
 8012baa:	b29e      	uxth	r6, r3
 8012bac:	2e09      	cmp	r6, #9
 8012bae:	d813      	bhi.n	8012bd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8012bb0:	fb04 3302 	mla	r3, r4, r2, r3
 8012bb4:	602b      	str	r3, [r5, #0]
 8012bb6:	6803      	ldr	r3, [r0, #0]
 8012bb8:	b10b      	cbz	r3, 8012bbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8012bba:	3302      	adds	r3, #2
 8012bbc:	6003      	str	r3, [r0, #0]
 8012bbe:	680b      	ldr	r3, [r1, #0]
 8012bc0:	b10b      	cbz	r3, 8012bc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8012bc2:	3301      	adds	r3, #1
 8012bc4:	600b      	str	r3, [r1, #0]
 8012bc6:	6803      	ldr	r3, [r0, #0]
 8012bc8:	b10b      	cbz	r3, 8012bce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8012bca:	881b      	ldrh	r3, [r3, #0]
 8012bcc:	e7eb      	b.n	8012ba6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012bce:	680b      	ldr	r3, [r1, #0]
 8012bd0:	2b00      	cmp	r3, #0
 8012bd2:	d0e8      	beq.n	8012ba6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012bd4:	781b      	ldrb	r3, [r3, #0]
 8012bd6:	e7e6      	b.n	8012ba6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012bd8:	2a06      	cmp	r2, #6
 8012bda:	bfa8      	it	ge
 8012bdc:	2206      	movge	r2, #6
 8012bde:	602a      	str	r2, [r5, #0]
 8012be0:	e7b1      	b.n	8012b46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08012be2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8012be2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012be6:	b0a3      	sub	sp, #140	@ 0x8c
 8012be8:	2600      	movs	r6, #0
 8012bea:	4607      	mov	r7, r0
 8012bec:	4688      	mov	r8, r1
 8012bee:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 8012bf2:	4631      	mov	r1, r6
 8012bf4:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8012bf6:	4648      	mov	r0, r9
 8012bf8:	960d      	str	r6, [sp, #52]	@ 0x34
 8012bfa:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8012bfe:	2242      	movs	r2, #66	@ 0x42
 8012c00:	f00f f984 	bl	8021f0c <memset>
 8012c04:	b15f      	cbz	r7, 8012c1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8012c06:	f108 3aff 	add.w	sl, r8, #4294967295
 8012c0a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012c0c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012c0e:	b152      	cbz	r2, 8012c26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8012c10:	8812      	ldrh	r2, [r2, #0]
 8012c12:	b10a      	cbz	r2, 8012c18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8012c14:	459a      	cmp	sl, r3
 8012c16:	dc2e      	bgt.n	8012c76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8012c18:	2200      	movs	r2, #0
 8012c1a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012c1e:	4638      	mov	r0, r7
 8012c20:	b023      	add	sp, #140	@ 0x8c
 8012c22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c26:	9a08      	ldr	r2, [sp, #32]
 8012c28:	2a00      	cmp	r2, #0
 8012c2a:	d0f5      	beq.n	8012c18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8012c2c:	7812      	ldrb	r2, [r2, #0]
 8012c2e:	e7f0      	b.n	8012c12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8012c30:	2d00      	cmp	r5, #0
 8012c32:	d0ea      	beq.n	8012c0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012c34:	782a      	ldrb	r2, [r5, #0]
 8012c36:	b142      	cbz	r2, 8012c4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8012c38:	2a25      	cmp	r2, #37	@ 0x25
 8012c3a:	d001      	beq.n	8012c40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8012c3c:	459a      	cmp	sl, r3
 8012c3e:	dc08      	bgt.n	8012c52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8012c40:	f1bb 0f00 	cmp.w	fp, #0
 8012c44:	d121      	bne.n	8012c8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8012c46:	2d00      	cmp	r5, #0
 8012c48:	d0df      	beq.n	8012c0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012c4a:	782a      	ldrb	r2, [r5, #0]
 8012c4c:	f04f 0b00 	mov.w	fp, #0
 8012c50:	e01d      	b.n	8012c8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8012c52:	f1bb 0f00 	cmp.w	fp, #0
 8012c56:	d077      	beq.n	8012d48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 8012c58:	f8bb 2000 	ldrh.w	r2, [fp]
 8012c5c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012c60:	f1bb 0f00 	cmp.w	fp, #0
 8012c64:	d002      	beq.n	8012c6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8012c66:	f10b 0202 	add.w	r2, fp, #2
 8012c6a:	9209      	str	r2, [sp, #36]	@ 0x24
 8012c6c:	b10d      	cbz	r5, 8012c72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8012c6e:	3501      	adds	r5, #1
 8012c70:	9508      	str	r5, [sp, #32]
 8012c72:	3301      	adds	r3, #1
 8012c74:	930d      	str	r3, [sp, #52]	@ 0x34
 8012c76:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012c78:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8012c7c:	f1bb 0f00 	cmp.w	fp, #0
 8012c80:	d0d6      	beq.n	8012c30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8012c82:	f8bb 2000 	ldrh.w	r2, [fp]
 8012c86:	2a00      	cmp	r2, #0
 8012c88:	d1d6      	bne.n	8012c38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8012c8a:	f8bb 2000 	ldrh.w	r2, [fp]
 8012c8e:	2a00      	cmp	r2, #0
 8012c90:	d0bb      	beq.n	8012c0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012c92:	459a      	cmp	sl, r3
 8012c94:	ddb9      	ble.n	8012c0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012c96:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8012c9a:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8012c9e:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8012ca2:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8012ca6:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8012caa:	960e      	str	r6, [sp, #56]	@ 0x38
 8012cac:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8012cb0:	960f      	str	r6, [sp, #60]	@ 0x3c
 8012cb2:	f1bb 0f00 	cmp.w	fp, #0
 8012cb6:	d002      	beq.n	8012cbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8012cb8:	f10b 0302 	add.w	r3, fp, #2
 8012cbc:	9309      	str	r3, [sp, #36]	@ 0x24
 8012cbe:	b10d      	cbz	r5, 8012cc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8012cc0:	1c6b      	adds	r3, r5, #1
 8012cc2:	9308      	str	r3, [sp, #32]
 8012cc4:	ab0f      	add	r3, sp, #60	@ 0x3c
 8012cc6:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8012cca:	a908      	add	r1, sp, #32
 8012ccc:	a809      	add	r0, sp, #36	@ 0x24
 8012cce:	9305      	str	r3, [sp, #20]
 8012cd0:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8012cd4:	9304      	str	r3, [sp, #16]
 8012cd6:	ab0e      	add	r3, sp, #56	@ 0x38
 8012cd8:	9303      	str	r3, [sp, #12]
 8012cda:	ab0c      	add	r3, sp, #48	@ 0x30
 8012cdc:	9302      	str	r3, [sp, #8]
 8012cde:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8012ce2:	9301      	str	r3, [sp, #4]
 8012ce4:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8012ce8:	9300      	str	r3, [sp, #0]
 8012cea:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8012cee:	f7ff fea8 	bl	8012a42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8012cf2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012cf4:	2b00      	cmp	r3, #0
 8012cf6:	bfbf      	itttt	lt
 8012cf8:	6823      	ldrlt	r3, [r4, #0]
 8012cfa:	3404      	addlt	r4, #4
 8012cfc:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8012d00:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8012d02:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012d04:	2b00      	cmp	r3, #0
 8012d06:	bfbe      	ittt	lt
 8012d08:	6823      	ldrlt	r3, [r4, #0]
 8012d0a:	3404      	addlt	r4, #4
 8012d0c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8012d10:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8012d14:	bfb8      	it	lt
 8012d16:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8012d18:	b1d9      	cbz	r1, 8012d52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 8012d1a:	880b      	ldrh	r3, [r1, #0]
 8012d1c:	2b69      	cmp	r3, #105	@ 0x69
 8012d1e:	d01f      	beq.n	8012d60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8012d20:	d82f      	bhi.n	8012d82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 8012d22:	2b58      	cmp	r3, #88	@ 0x58
 8012d24:	d01c      	beq.n	8012d60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8012d26:	d818      	bhi.n	8012d5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 8012d28:	2b25      	cmp	r3, #37	@ 0x25
 8012d2a:	d034      	beq.n	8012d96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 8012d2c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012d2e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8012d32:	f1bb 0f00 	cmp.w	fp, #0
 8012d36:	f000 80b7 	beq.w	8012ea8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 8012d3a:	f8bb 5000 	ldrh.w	r5, [fp]
 8012d3e:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8012d42:	3301      	adds	r3, #1
 8012d44:	930d      	str	r3, [sp, #52]	@ 0x34
 8012d46:	e029      	b.n	8012d9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8012d48:	b10d      	cbz	r5, 8012d4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 8012d4a:	782a      	ldrb	r2, [r5, #0]
 8012d4c:	e786      	b.n	8012c5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8012d4e:	462a      	mov	r2, r5
 8012d50:	e784      	b.n	8012c5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8012d52:	2a00      	cmp	r2, #0
 8012d54:	d0ea      	beq.n	8012d2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8012d56:	7813      	ldrb	r3, [r2, #0]
 8012d58:	e7e0      	b.n	8012d1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 8012d5a:	3b63      	subs	r3, #99	@ 0x63
 8012d5c:	2b01      	cmp	r3, #1
 8012d5e:	d8e5      	bhi.n	8012d2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8012d60:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8012d64:	b329      	cbz	r1, 8012db2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 8012d66:	880b      	ldrh	r3, [r1, #0]
 8012d68:	2b69      	cmp	r3, #105	@ 0x69
 8012d6a:	d063      	beq.n	8012e34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8012d6c:	d825      	bhi.n	8012dba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 8012d6e:	2b63      	cmp	r3, #99	@ 0x63
 8012d70:	d038      	beq.n	8012de4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 8012d72:	2b64      	cmp	r3, #100	@ 0x64
 8012d74:	d05e      	beq.n	8012e34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8012d76:	2b58      	cmp	r3, #88	@ 0x58
 8012d78:	d07a      	beq.n	8012e70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 8012d7a:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8012d7e:	4625      	mov	r5, r4
 8012d80:	e036      	b.n	8012df0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8012d82:	2b73      	cmp	r3, #115	@ 0x73
 8012d84:	d0ec      	beq.n	8012d60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8012d86:	d802      	bhi.n	8012d8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 8012d88:	2b6f      	cmp	r3, #111	@ 0x6f
 8012d8a:	d1cf      	bne.n	8012d2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8012d8c:	e7e8      	b.n	8012d60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8012d8e:	2b75      	cmp	r3, #117	@ 0x75
 8012d90:	d0e6      	beq.n	8012d60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8012d92:	2b78      	cmp	r3, #120	@ 0x78
 8012d94:	e7f9      	b.n	8012d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 8012d96:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012d98:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8012d9c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012d9e:	b10b      	cbz	r3, 8012da4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 8012da0:	3302      	adds	r3, #2
 8012da2:	9309      	str	r3, [sp, #36]	@ 0x24
 8012da4:	9b08      	ldr	r3, [sp, #32]
 8012da6:	2b00      	cmp	r3, #0
 8012da8:	f43f af2f 	beq.w	8012c0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012dac:	3301      	adds	r3, #1
 8012dae:	9308      	str	r3, [sp, #32]
 8012db0:	e72b      	b.n	8012c0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012db2:	2a00      	cmp	r2, #0
 8012db4:	d0e1      	beq.n	8012d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8012db6:	7813      	ldrb	r3, [r2, #0]
 8012db8:	e7d6      	b.n	8012d68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 8012dba:	2b73      	cmp	r3, #115	@ 0x73
 8012dbc:	d036      	beq.n	8012e2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 8012dbe:	d807      	bhi.n	8012dd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 8012dc0:	2b6f      	cmp	r3, #111	@ 0x6f
 8012dc2:	d1da      	bne.n	8012d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8012dc4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012dc6:	1d25      	adds	r5, r4, #4
 8012dc8:	2308      	movs	r3, #8
 8012dca:	eba8 0202 	sub.w	r2, r8, r2
 8012dce:	e049      	b.n	8012e64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8012dd0:	2b75      	cmp	r3, #117	@ 0x75
 8012dd2:	d042      	beq.n	8012e5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 8012dd4:	2b78      	cmp	r3, #120	@ 0x78
 8012dd6:	d1d0      	bne.n	8012d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8012dd8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012dda:	1d25      	adds	r5, r4, #4
 8012ddc:	2310      	movs	r3, #16
 8012dde:	eba8 0202 	sub.w	r2, r8, r2
 8012de2:	e03f      	b.n	8012e64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8012de4:	6823      	ldr	r3, [r4, #0]
 8012de6:	1d25      	adds	r5, r4, #4
 8012de8:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 8012dec:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8012df0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012df2:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8012df6:	2b00      	cmp	r3, #0
 8012df8:	d051      	beq.n	8012e9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 8012dfa:	881a      	ldrh	r2, [r3, #0]
 8012dfc:	a80d      	add	r0, sp, #52	@ 0x34
 8012dfe:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8012e02:	462c      	mov	r4, r5
 8012e04:	9005      	str	r0, [sp, #20]
 8012e06:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8012e0a:	9004      	str	r0, [sp, #16]
 8012e0c:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8012e0e:	9003      	str	r0, [sp, #12]
 8012e10:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8012e14:	9002      	str	r0, [sp, #8]
 8012e16:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8012e18:	9001      	str	r0, [sp, #4]
 8012e1a:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8012e1e:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8012e22:	9000      	str	r0, [sp, #0]
 8012e24:	a810      	add	r0, sp, #64	@ 0x40
 8012e26:	f7ff fd49 	bl	80128bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8012e2a:	e7b7      	b.n	8012d9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8012e2c:	1d25      	adds	r5, r4, #4
 8012e2e:	6823      	ldr	r3, [r4, #0]
 8012e30:	9310      	str	r3, [sp, #64]	@ 0x40
 8012e32:	e7dd      	b.n	8012df0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8012e34:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012e36:	230a      	movs	r3, #10
 8012e38:	4649      	mov	r1, r9
 8012e3a:	6820      	ldr	r0, [r4, #0]
 8012e3c:	eba8 0202 	sub.w	r2, r8, r2
 8012e40:	1d25      	adds	r5, r4, #4
 8012e42:	b292      	uxth	r2, r2
 8012e44:	f7ff fcf0 	bl	8012828 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8012e48:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8012e4c:	2b2d      	cmp	r3, #45	@ 0x2d
 8012e4e:	d1cf      	bne.n	8012df0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8012e50:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8012e54:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012e56:	3302      	adds	r3, #2
 8012e58:	e7ea      	b.n	8012e30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 8012e5a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012e5c:	1d25      	adds	r5, r4, #4
 8012e5e:	230a      	movs	r3, #10
 8012e60:	eba8 0202 	sub.w	r2, r8, r2
 8012e64:	b292      	uxth	r2, r2
 8012e66:	4649      	mov	r1, r9
 8012e68:	6820      	ldr	r0, [r4, #0]
 8012e6a:	f7ff fd09 	bl	8012880 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8012e6e:	e7bf      	b.n	8012df0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8012e70:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012e72:	2310      	movs	r3, #16
 8012e74:	4649      	mov	r1, r9
 8012e76:	6820      	ldr	r0, [r4, #0]
 8012e78:	eba8 0202 	sub.w	r2, r8, r2
 8012e7c:	1d25      	adds	r5, r4, #4
 8012e7e:	b292      	uxth	r2, r2
 8012e80:	f7ff fcfe 	bl	8012880 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8012e84:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 8012e88:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8012e8c:	2b00      	cmp	r3, #0
 8012e8e:	d0af      	beq.n	8012df0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8012e90:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8012e94:	2919      	cmp	r1, #25
 8012e96:	d8f7      	bhi.n	8012e88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8012e98:	3b20      	subs	r3, #32
 8012e9a:	8013      	strh	r3, [r2, #0]
 8012e9c:	e7f4      	b.n	8012e88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8012e9e:	9a08      	ldr	r2, [sp, #32]
 8012ea0:	2a00      	cmp	r2, #0
 8012ea2:	d0ab      	beq.n	8012dfc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8012ea4:	7812      	ldrb	r2, [r2, #0]
 8012ea6:	e7a9      	b.n	8012dfc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8012ea8:	2d00      	cmp	r5, #0
 8012eaa:	f43f af48 	beq.w	8012d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 8012eae:	782d      	ldrb	r5, [r5, #0]
 8012eb0:	e745      	b.n	8012d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

08012eb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8012eb2:	b507      	push	{r0, r1, r2, lr}
 8012eb4:	9300      	str	r3, [sp, #0]
 8012eb6:	4613      	mov	r3, r2
 8012eb8:	2200      	movs	r2, #0
 8012eba:	f7ff fe92 	bl	8012be2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8012ebe:	b003      	add	sp, #12
 8012ec0:	f85d fb04 	ldr.w	pc, [sp], #4

08012ec4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8012ec4:	b40c      	push	{r2, r3}
 8012ec6:	b507      	push	{r0, r1, r2, lr}
 8012ec8:	ab04      	add	r3, sp, #16
 8012eca:	f853 2b04 	ldr.w	r2, [r3], #4
 8012ece:	9301      	str	r3, [sp, #4]
 8012ed0:	f7ff ffef 	bl	8012eb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8012ed4:	b003      	add	sp, #12
 8012ed6:	f85d eb04 	ldr.w	lr, [sp], #4
 8012eda:	b002      	add	sp, #8
 8012edc:	4770      	bx	lr
	...

08012ee0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8012ee0:	4b01      	ldr	r3, [pc, #4]	@ (8012ee8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8012ee2:	6018      	str	r0, [r3, #0]
 8012ee4:	4770      	bx	lr
 8012ee6:	bf00      	nop
 8012ee8:	20016bdc 	.word	0x20016bdc

08012eec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8012eec:	4b06      	ldr	r3, [pc, #24]	@ (8012f08 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8012eee:	881a      	ldrh	r2, [r3, #0]
 8012ef0:	4282      	cmp	r2, r0
 8012ef2:	d807      	bhi.n	8012f04 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8012ef4:	4b05      	ldr	r3, [pc, #20]	@ (8012f0c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8012ef6:	881b      	ldrh	r3, [r3, #0]
 8012ef8:	4413      	add	r3, r2
 8012efa:	4298      	cmp	r0, r3
 8012efc:	bfac      	ite	ge
 8012efe:	2000      	movge	r0, #0
 8012f00:	2001      	movlt	r0, #1
 8012f02:	4770      	bx	lr
 8012f04:	2000      	movs	r0, #0
 8012f06:	4770      	bx	lr
 8012f08:	20016bfc 	.word	0x20016bfc
 8012f0c:	20016c00 	.word	0x20016c00

08012f10 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8012f10:	b508      	push	{r3, lr}
 8012f12:	4601      	mov	r1, r0
 8012f14:	f7ff ffea 	bl	8012eec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8012f18:	b118      	cbz	r0, 8012f22 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8012f1a:	4b02      	ldr	r3, [pc, #8]	@ (8012f24 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8012f1c:	681b      	ldr	r3, [r3, #0]
 8012f1e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8012f22:	bd08      	pop	{r3, pc}
 8012f24:	20016be0 	.word	0x20016be0

08012f28 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8012f28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f2a:	4c24      	ldr	r4, [pc, #144]	@ (8012fbc <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8012f2c:	6823      	ldr	r3, [r4, #0]
 8012f2e:	2b00      	cmp	r3, #0
 8012f30:	d042      	beq.n	8012fb8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012f32:	4a23      	ldr	r2, [pc, #140]	@ (8012fc0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8012f34:	4d23      	ldr	r5, [pc, #140]	@ (8012fc4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8012f36:	8811      	ldrh	r1, [r2, #0]
 8012f38:	f8b5 c000 	ldrh.w	ip, [r5]
 8012f3c:	4822      	ldr	r0, [pc, #136]	@ (8012fc8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8012f3e:	4461      	add	r1, ip
 8012f40:	1c4a      	adds	r2, r1, #1
 8012f42:	008f      	lsls	r7, r1, #2
 8012f44:	f022 0201 	bic.w	r2, r2, #1
 8012f48:	19de      	adds	r6, r3, r7
 8012f4a:	0412      	lsls	r2, r2, #16
 8012f4c:	6006      	str	r6, [r0, #0]
 8012f4e:	4e1f      	ldr	r6, [pc, #124]	@ (8012fcc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8012f50:	0c12      	lsrs	r2, r2, #16
 8012f52:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8012f56:	19da      	adds	r2, r3, r7
 8012f58:	6032      	str	r2, [r6, #0]
 8012f5a:	220e      	movs	r2, #14
 8012f5c:	fb02 f20c 	mul.w	r2, r2, ip
 8012f60:	3203      	adds	r2, #3
 8012f62:	f022 0203 	bic.w	r2, r2, #3
 8012f66:	443a      	add	r2, r7
 8012f68:	4f19      	ldr	r7, [pc, #100]	@ (8012fd0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8012f6a:	4413      	add	r3, r2
 8012f6c:	603b      	str	r3, [r7, #0]
 8012f6e:	2300      	movs	r3, #0
 8012f70:	4f18      	ldr	r7, [pc, #96]	@ (8012fd4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8012f72:	469c      	mov	ip, r3
 8012f74:	803b      	strh	r3, [r7, #0]
 8012f76:	4f18      	ldr	r7, [pc, #96]	@ (8012fd8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8012f78:	683f      	ldr	r7, [r7, #0]
 8012f7a:	1aba      	subs	r2, r7, r2
 8012f7c:	4f17      	ldr	r7, [pc, #92]	@ (8012fdc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8012f7e:	603a      	str	r2, [r7, #0]
 8012f80:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8012f84:	4a16      	ldr	r2, [pc, #88]	@ (8012fe0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8012f86:	8013      	strh	r3, [r2, #0]
 8012f88:	428b      	cmp	r3, r1
 8012f8a:	d10d      	bne.n	8012fa8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8012f8c:	882d      	ldrh	r5, [r5, #0]
 8012f8e:	2300      	movs	r3, #0
 8012f90:	6830      	ldr	r0, [r6, #0]
 8012f92:	240e      	movs	r4, #14
 8012f94:	429d      	cmp	r5, r3
 8012f96:	d90f      	bls.n	8012fb8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012f98:	fb04 0203 	mla	r2, r4, r3, r0
 8012f9c:	3301      	adds	r3, #1
 8012f9e:	7b11      	ldrb	r1, [r2, #12]
 8012fa0:	f36f 1145 	bfc	r1, #5, #1
 8012fa4:	7311      	strb	r1, [r2, #12]
 8012fa6:	e7f5      	b.n	8012f94 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8012fa8:	6822      	ldr	r2, [r4, #0]
 8012faa:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8012fae:	6802      	ldr	r2, [r0, #0]
 8012fb0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8012fb4:	3301      	adds	r3, #1
 8012fb6:	e7e7      	b.n	8012f88 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8012fb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012fba:	bf00      	nop
 8012fbc:	20016be0 	.word	0x20016be0
 8012fc0:	20016bfc 	.word	0x20016bfc
 8012fc4:	20016c00 	.word	0x20016c00
 8012fc8:	20016bf4 	.word	0x20016bf4
 8012fcc:	20016be4 	.word	0x20016be4
 8012fd0:	20016bec 	.word	0x20016bec
 8012fd4:	20016bfe 	.word	0x20016bfe
 8012fd8:	20016be8 	.word	0x20016be8
 8012fdc:	20016bf8 	.word	0x20016bf8
 8012fe0:	20016bf0 	.word	0x20016bf0

08012fe4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8012fe4:	4b06      	ldr	r3, [pc, #24]	@ (8013000 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8012fe6:	681b      	ldr	r3, [r3, #0]
 8012fe8:	b943      	cbnz	r3, 8012ffc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012fea:	b139      	cbz	r1, 8012ffc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012fec:	4b05      	ldr	r3, [pc, #20]	@ (8013004 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8012fee:	801a      	strh	r2, [r3, #0]
 8012ff0:	4b05      	ldr	r3, [pc, #20]	@ (8013008 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8012ff2:	6019      	str	r1, [r3, #0]
 8012ff4:	4b05      	ldr	r3, [pc, #20]	@ (801300c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8012ff6:	6018      	str	r0, [r3, #0]
 8012ff8:	f7ff bf96 	b.w	8012f28 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8012ffc:	4770      	bx	lr
 8012ffe:	bf00      	nop
 8013000:	20016bec 	.word	0x20016bec
 8013004:	20016c00 	.word	0x20016c00
 8013008:	20016be8 	.word	0x20016be8
 801300c:	20016be0 	.word	0x20016be0

08013010 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8013010:	b470      	push	{r4, r5, r6}
 8013012:	4c07      	ldr	r4, [pc, #28]	@ (8013030 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8013014:	4605      	mov	r5, r0
 8013016:	4610      	mov	r0, r2
 8013018:	9a03      	ldr	r2, [sp, #12]
 801301a:	6826      	ldr	r6, [r4, #0]
 801301c:	b936      	cbnz	r6, 801302c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801301e:	6025      	str	r5, [r4, #0]
 8013020:	4c04      	ldr	r4, [pc, #16]	@ (8013034 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8013022:	8021      	strh	r1, [r4, #0]
 8013024:	4619      	mov	r1, r3
 8013026:	bc70      	pop	{r4, r5, r6}
 8013028:	f7ff bfdc 	b.w	8012fe4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801302c:	bc70      	pop	{r4, r5, r6}
 801302e:	4770      	bx	lr
 8013030:	20016c04 	.word	0x20016c04
 8013034:	20016bfc 	.word	0x20016bfc

08013038 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8013038:	4a12      	ldr	r2, [pc, #72]	@ (8013084 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801303a:	8803      	ldrh	r3, [r0, #0]
 801303c:	8812      	ldrh	r2, [r2, #0]
 801303e:	4293      	cmp	r3, r2
 8013040:	d207      	bcs.n	8013052 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8013042:	4a11      	ldr	r2, [pc, #68]	@ (8013088 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8013044:	2114      	movs	r1, #20
 8013046:	6812      	ldr	r2, [r2, #0]
 8013048:	fb01 2303 	mla	r3, r1, r3, r2
 801304c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8013050:	4770      	bx	lr
 8013052:	490e      	ldr	r1, [pc, #56]	@ (801308c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8013054:	8809      	ldrh	r1, [r1, #0]
 8013056:	4411      	add	r1, r2
 8013058:	428b      	cmp	r3, r1
 801305a:	da04      	bge.n	8013066 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801305c:	1a9b      	subs	r3, r3, r2
 801305e:	4a0c      	ldr	r2, [pc, #48]	@ (8013090 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8013060:	210e      	movs	r1, #14
 8013062:	6812      	ldr	r2, [r2, #0]
 8013064:	e7f0      	b.n	8013048 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8013066:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801306a:	4293      	cmp	r3, r2
 801306c:	d108      	bne.n	8013080 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801306e:	4b09      	ldr	r3, [pc, #36]	@ (8013094 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8013070:	781b      	ldrb	r3, [r3, #0]
 8013072:	b91b      	cbnz	r3, 801307c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8013074:	4b08      	ldr	r3, [pc, #32]	@ (8013098 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8013076:	f9b3 0000 	ldrsh.w	r0, [r3]
 801307a:	4770      	bx	lr
 801307c:	4b07      	ldr	r3, [pc, #28]	@ (801309c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801307e:	e7fa      	b.n	8013076 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8013080:	2000      	movs	r0, #0
 8013082:	4770      	bx	lr
 8013084:	20016bfc 	.word	0x20016bfc
 8013088:	20016c04 	.word	0x20016c04
 801308c:	20016c00 	.word	0x20016c00
 8013090:	20016be4 	.word	0x20016be4
 8013094:	20016b6c 	.word	0x20016b6c
 8013098:	20016b6e 	.word	0x20016b6e
 801309c:	20016b70 	.word	0x20016b70

080130a0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80130a0:	4a12      	ldr	r2, [pc, #72]	@ (80130ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80130a2:	8803      	ldrh	r3, [r0, #0]
 80130a4:	8812      	ldrh	r2, [r2, #0]
 80130a6:	4293      	cmp	r3, r2
 80130a8:	d207      	bcs.n	80130ba <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80130aa:	4a11      	ldr	r2, [pc, #68]	@ (80130f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80130ac:	2114      	movs	r1, #20
 80130ae:	6812      	ldr	r2, [r2, #0]
 80130b0:	fb01 2303 	mla	r3, r1, r3, r2
 80130b4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80130b8:	4770      	bx	lr
 80130ba:	490e      	ldr	r1, [pc, #56]	@ (80130f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80130bc:	8809      	ldrh	r1, [r1, #0]
 80130be:	4411      	add	r1, r2
 80130c0:	428b      	cmp	r3, r1
 80130c2:	da04      	bge.n	80130ce <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80130c4:	1a9b      	subs	r3, r3, r2
 80130c6:	4a0c      	ldr	r2, [pc, #48]	@ (80130f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80130c8:	210e      	movs	r1, #14
 80130ca:	6812      	ldr	r2, [r2, #0]
 80130cc:	e7f0      	b.n	80130b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80130ce:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80130d2:	4293      	cmp	r3, r2
 80130d4:	d108      	bne.n	80130e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80130d6:	4b09      	ldr	r3, [pc, #36]	@ (80130fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80130d8:	781b      	ldrb	r3, [r3, #0]
 80130da:	b91b      	cbnz	r3, 80130e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80130dc:	4b08      	ldr	r3, [pc, #32]	@ (8013100 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80130de:	f9b3 0000 	ldrsh.w	r0, [r3]
 80130e2:	4770      	bx	lr
 80130e4:	4b07      	ldr	r3, [pc, #28]	@ (8013104 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80130e6:	e7fa      	b.n	80130de <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80130e8:	2000      	movs	r0, #0
 80130ea:	4770      	bx	lr
 80130ec:	20016bfc 	.word	0x20016bfc
 80130f0:	20016c04 	.word	0x20016c04
 80130f4:	20016c00 	.word	0x20016c00
 80130f8:	20016be4 	.word	0x20016be4
 80130fc:	20016b6c 	.word	0x20016b6c
 8013100:	20016b70 	.word	0x20016b70
 8013104:	20016b6e 	.word	0x20016b6e

08013108 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8013108:	4a1f      	ldr	r2, [pc, #124]	@ (8013188 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801310a:	b510      	push	{r4, lr}
 801310c:	880b      	ldrh	r3, [r1, #0]
 801310e:	8812      	ldrh	r2, [r2, #0]
 8013110:	4293      	cmp	r3, r2
 8013112:	d213      	bcs.n	801313c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8013114:	4a1d      	ldr	r2, [pc, #116]	@ (801318c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8013116:	2114      	movs	r1, #20
 8013118:	6812      	ldr	r2, [r2, #0]
 801311a:	fb01 2303 	mla	r3, r1, r3, r2
 801311e:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8013122:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8013126:	8a1a      	ldrh	r2, [r3, #16]
 8013128:	8a5b      	ldrh	r3, [r3, #18]
 801312a:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801312e:	8004      	strh	r4, [r0, #0]
 8013130:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8013134:	8041      	strh	r1, [r0, #2]
 8013136:	8082      	strh	r2, [r0, #4]
 8013138:	80c3      	strh	r3, [r0, #6]
 801313a:	e00e      	b.n	801315a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801313c:	4914      	ldr	r1, [pc, #80]	@ (8013190 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801313e:	8809      	ldrh	r1, [r1, #0]
 8013140:	4411      	add	r1, r2
 8013142:	428b      	cmp	r3, r1
 8013144:	da0a      	bge.n	801315c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8013146:	1a9b      	subs	r3, r3, r2
 8013148:	4a12      	ldr	r2, [pc, #72]	@ (8013194 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801314a:	210e      	movs	r1, #14
 801314c:	6812      	ldr	r2, [r2, #0]
 801314e:	fb01 2303 	mla	r3, r1, r3, r2
 8013152:	681a      	ldr	r2, [r3, #0]
 8013154:	6002      	str	r2, [r0, #0]
 8013156:	685a      	ldr	r2, [r3, #4]
 8013158:	6042      	str	r2, [r0, #4]
 801315a:	bd10      	pop	{r4, pc}
 801315c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013160:	4293      	cmp	r3, r2
 8013162:	d10b      	bne.n	801317c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8013164:	4b0c      	ldr	r3, [pc, #48]	@ (8013198 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8013166:	f9b3 1000 	ldrsh.w	r1, [r3]
 801316a:	4b0c      	ldr	r3, [pc, #48]	@ (801319c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801316c:	8081      	strh	r1, [r0, #4]
 801316e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013172:	2300      	movs	r3, #0
 8013174:	80c2      	strh	r2, [r0, #6]
 8013176:	8003      	strh	r3, [r0, #0]
 8013178:	8043      	strh	r3, [r0, #2]
 801317a:	e7ee      	b.n	801315a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801317c:	2300      	movs	r3, #0
 801317e:	8003      	strh	r3, [r0, #0]
 8013180:	8043      	strh	r3, [r0, #2]
 8013182:	8083      	strh	r3, [r0, #4]
 8013184:	e7d8      	b.n	8013138 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8013186:	bf00      	nop
 8013188:	20016bfc 	.word	0x20016bfc
 801318c:	20016c04 	.word	0x20016c04
 8013190:	20016c00 	.word	0x20016c00
 8013194:	20016be4 	.word	0x20016be4
 8013198:	20016b68 	.word	0x20016b68
 801319c:	20016b6a 	.word	0x20016b6a

080131a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80131a0:	4a17      	ldr	r2, [pc, #92]	@ (8013200 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80131a2:	8803      	ldrh	r3, [r0, #0]
 80131a4:	8812      	ldrh	r2, [r2, #0]
 80131a6:	4293      	cmp	r3, r2
 80131a8:	d213      	bcs.n	80131d2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80131aa:	4a16      	ldr	r2, [pc, #88]	@ (8013204 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80131ac:	2114      	movs	r1, #20
 80131ae:	6812      	ldr	r2, [r2, #0]
 80131b0:	fb01 2303 	mla	r3, r1, r3, r2
 80131b4:	8a1a      	ldrh	r2, [r3, #16]
 80131b6:	8919      	ldrh	r1, [r3, #8]
 80131b8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80131bc:	428a      	cmp	r2, r1
 80131be:	db1d      	blt.n	80131fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80131c0:	8a58      	ldrh	r0, [r3, #18]
 80131c2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80131c6:	895b      	ldrh	r3, [r3, #10]
 80131c8:	4298      	cmp	r0, r3
 80131ca:	bfac      	ite	ge
 80131cc:	2000      	movge	r0, #0
 80131ce:	2001      	movlt	r0, #1
 80131d0:	4770      	bx	lr
 80131d2:	490d      	ldr	r1, [pc, #52]	@ (8013208 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80131d4:	8809      	ldrh	r1, [r1, #0]
 80131d6:	4411      	add	r1, r2
 80131d8:	428b      	cmp	r3, r1
 80131da:	da0d      	bge.n	80131f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80131dc:	1a9b      	subs	r3, r3, r2
 80131de:	4a0b      	ldr	r2, [pc, #44]	@ (801320c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80131e0:	210e      	movs	r1, #14
 80131e2:	6812      	ldr	r2, [r2, #0]
 80131e4:	fb01 2303 	mla	r3, r1, r3, r2
 80131e8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80131ec:	891a      	ldrh	r2, [r3, #8]
 80131ee:	4291      	cmp	r1, r2
 80131f0:	db04      	blt.n	80131fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80131f2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80131f6:	e7e6      	b.n	80131c6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80131f8:	2000      	movs	r0, #0
 80131fa:	4770      	bx	lr
 80131fc:	2001      	movs	r0, #1
 80131fe:	4770      	bx	lr
 8013200:	20016bfc 	.word	0x20016bfc
 8013204:	20016c04 	.word	0x20016c04
 8013208:	20016c00 	.word	0x20016c00
 801320c:	20016be4 	.word	0x20016be4

08013210 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013210:	4a12      	ldr	r2, [pc, #72]	@ (801325c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013212:	8803      	ldrh	r3, [r0, #0]
 8013214:	8811      	ldrh	r1, [r2, #0]
 8013216:	428b      	cmp	r3, r1
 8013218:	d20b      	bcs.n	8013232 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801321a:	4a11      	ldr	r2, [pc, #68]	@ (8013260 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801321c:	6812      	ldr	r2, [r2, #0]
 801321e:	b112      	cbz	r2, 8013226 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013220:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013224:	b9c0      	cbnz	r0, 8013258 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8013226:	4a0f      	ldr	r2, [pc, #60]	@ (8013264 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8013228:	6811      	ldr	r1, [r2, #0]
 801322a:	2214      	movs	r2, #20
 801322c:	4353      	muls	r3, r2
 801322e:	58c8      	ldr	r0, [r1, r3]
 8013230:	4770      	bx	lr
 8013232:	4a0d      	ldr	r2, [pc, #52]	@ (8013268 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8013234:	8812      	ldrh	r2, [r2, #0]
 8013236:	440a      	add	r2, r1
 8013238:	4293      	cmp	r3, r2
 801323a:	da04      	bge.n	8013246 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801323c:	4a08      	ldr	r2, [pc, #32]	@ (8013260 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801323e:	6812      	ldr	r2, [r2, #0]
 8013240:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013244:	4770      	bx	lr
 8013246:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801324a:	4293      	cmp	r3, r2
 801324c:	d103      	bne.n	8013256 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801324e:	4b07      	ldr	r3, [pc, #28]	@ (801326c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8013250:	681b      	ldr	r3, [r3, #0]
 8013252:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8013254:	4770      	bx	lr
 8013256:	2000      	movs	r0, #0
 8013258:	4770      	bx	lr
 801325a:	bf00      	nop
 801325c:	20016bfc 	.word	0x20016bfc
 8013260:	20016be0 	.word	0x20016be0
 8013264:	20016c04 	.word	0x20016c04
 8013268:	20016c00 	.word	0x20016c00
 801326c:	20016b74 	.word	0x20016b74

08013270 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8013270:	4b24      	ldr	r3, [pc, #144]	@ (8013304 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8013272:	8802      	ldrh	r2, [r0, #0]
 8013274:	8818      	ldrh	r0, [r3, #0]
 8013276:	4282      	cmp	r2, r0
 8013278:	d221      	bcs.n	80132be <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801327a:	4b23      	ldr	r3, [pc, #140]	@ (8013308 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801327c:	6819      	ldr	r1, [r3, #0]
 801327e:	2314      	movs	r3, #20
 8013280:	fb03 1302 	mla	r3, r3, r2, r1
 8013284:	6858      	ldr	r0, [r3, #4]
 8013286:	2800      	cmp	r0, #0
 8013288:	d03a      	beq.n	8013300 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801328a:	4920      	ldr	r1, [pc, #128]	@ (801330c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801328c:	6809      	ldr	r1, [r1, #0]
 801328e:	2900      	cmp	r1, #0
 8013290:	d036      	beq.n	8013300 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013292:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8013296:	2900      	cmp	r1, #0
 8013298:	d032      	beq.n	8013300 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801329a:	891a      	ldrh	r2, [r3, #8]
 801329c:	8958      	ldrh	r0, [r3, #10]
 801329e:	4350      	muls	r0, r2
 80132a0:	7c5a      	ldrb	r2, [r3, #17]
 80132a2:	7cdb      	ldrb	r3, [r3, #19]
 80132a4:	0952      	lsrs	r2, r2, #5
 80132a6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80132aa:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80132ae:	2b0b      	cmp	r3, #11
 80132b0:	bf18      	it	ne
 80132b2:	0040      	lslne	r0, r0, #1
 80132b4:	3003      	adds	r0, #3
 80132b6:	f020 0003 	bic.w	r0, r0, #3
 80132ba:	4408      	add	r0, r1
 80132bc:	4770      	bx	lr
 80132be:	4b14      	ldr	r3, [pc, #80]	@ (8013310 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80132c0:	881b      	ldrh	r3, [r3, #0]
 80132c2:	4403      	add	r3, r0
 80132c4:	429a      	cmp	r2, r3
 80132c6:	da1a      	bge.n	80132fe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80132c8:	4b12      	ldr	r3, [pc, #72]	@ (8013314 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80132ca:	1a10      	subs	r0, r2, r0
 80132cc:	210e      	movs	r1, #14
 80132ce:	681b      	ldr	r3, [r3, #0]
 80132d0:	fb01 3000 	mla	r0, r1, r0, r3
 80132d4:	7b03      	ldrb	r3, [r0, #12]
 80132d6:	f003 031f 	and.w	r3, r3, #31
 80132da:	2b0b      	cmp	r3, #11
 80132dc:	d10b      	bne.n	80132f6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80132de:	8903      	ldrh	r3, [r0, #8]
 80132e0:	8940      	ldrh	r0, [r0, #10]
 80132e2:	4358      	muls	r0, r3
 80132e4:	4b09      	ldr	r3, [pc, #36]	@ (801330c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80132e6:	3003      	adds	r0, #3
 80132e8:	6819      	ldr	r1, [r3, #0]
 80132ea:	f020 0303 	bic.w	r3, r0, #3
 80132ee:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80132f2:	4418      	add	r0, r3
 80132f4:	4770      	bx	lr
 80132f6:	2b0d      	cmp	r3, #13
 80132f8:	d101      	bne.n	80132fe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80132fa:	300d      	adds	r0, #13
 80132fc:	4770      	bx	lr
 80132fe:	2000      	movs	r0, #0
 8013300:	4770      	bx	lr
 8013302:	bf00      	nop
 8013304:	20016bfc 	.word	0x20016bfc
 8013308:	20016c04 	.word	0x20016c04
 801330c:	20016be0 	.word	0x20016be0
 8013310:	20016c00 	.word	0x20016c00
 8013314:	20016be4 	.word	0x20016be4

08013318 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8013318:	4a17      	ldr	r2, [pc, #92]	@ (8013378 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801331a:	b510      	push	{r4, lr}
 801331c:	8803      	ldrh	r3, [r0, #0]
 801331e:	8812      	ldrh	r2, [r2, #0]
 8013320:	4293      	cmp	r3, r2
 8013322:	d20c      	bcs.n	801333e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8013324:	4a15      	ldr	r2, [pc, #84]	@ (801337c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8013326:	2114      	movs	r1, #20
 8013328:	6812      	ldr	r2, [r2, #0]
 801332a:	fb01 2303 	mla	r3, r1, r3, r2
 801332e:	7c58      	ldrb	r0, [r3, #17]
 8013330:	0942      	lsrs	r2, r0, #5
 8013332:	7cd8      	ldrb	r0, [r3, #19]
 8013334:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8013338:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801333c:	bd10      	pop	{r4, pc}
 801333e:	4910      	ldr	r1, [pc, #64]	@ (8013380 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8013340:	8809      	ldrh	r1, [r1, #0]
 8013342:	4411      	add	r1, r2
 8013344:	428b      	cmp	r3, r1
 8013346:	da09      	bge.n	801335c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8013348:	1a9b      	subs	r3, r3, r2
 801334a:	4a0e      	ldr	r2, [pc, #56]	@ (8013384 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801334c:	210e      	movs	r1, #14
 801334e:	6812      	ldr	r2, [r2, #0]
 8013350:	fb01 2303 	mla	r3, r1, r3, r2
 8013354:	7b18      	ldrb	r0, [r3, #12]
 8013356:	f000 001f 	and.w	r0, r0, #31
 801335a:	e7ef      	b.n	801333c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801335c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013360:	4293      	cmp	r3, r2
 8013362:	d106      	bne.n	8013372 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8013364:	f7ef f83a 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 8013368:	6803      	ldr	r3, [r0, #0]
 801336a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801336e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013370:	4718      	bx	r3
 8013372:	2000      	movs	r0, #0
 8013374:	e7e2      	b.n	801333c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8013376:	bf00      	nop
 8013378:	20016bfc 	.word	0x20016bfc
 801337c:	20016c04 	.word	0x20016c04
 8013380:	20016c00 	.word	0x20016c00
 8013384:	20016be4 	.word	0x20016be4

08013388 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8013388:	2010      	movs	r0, #16
 801338a:	4770      	bx	lr

0801338c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801338c:	2000      	movs	r0, #0
 801338e:	4770      	bx	lr

08013390 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8013390:	4b02      	ldr	r3, [pc, #8]	@ (801339c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8013392:	8818      	ldrh	r0, [r3, #0]
 8013394:	0040      	lsls	r0, r0, #1
 8013396:	b280      	uxth	r0, r0
 8013398:	4770      	bx	lr
 801339a:	bf00      	nop
 801339c:	20016b6e 	.word	0x20016b6e

080133a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80133a0:	2bff      	cmp	r3, #255	@ 0xff
 80133a2:	d050      	beq.n	8013446 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80133a4:	2a0b      	cmp	r2, #11
 80133a6:	d04a      	beq.n	801343e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80133a8:	d80e      	bhi.n	80133c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80133aa:	2a03      	cmp	r2, #3
 80133ac:	d03f      	beq.n	801342e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80133ae:	d804      	bhi.n	80133ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80133b0:	2a01      	cmp	r2, #1
 80133b2:	d03e      	beq.n	8013432 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80133b4:	d93f      	bls.n	8013436 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80133b6:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 80133b8:	4770      	bx	lr
 80133ba:	2a09      	cmp	r2, #9
 80133bc:	d03f      	beq.n	801343e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80133be:	d83c      	bhi.n	801343a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80133c0:	2a08      	cmp	r2, #8
 80133c2:	d03a      	beq.n	801343a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80133c4:	2000      	movs	r0, #0
 80133c6:	4770      	bx	lr
 80133c8:	2a2f      	cmp	r2, #47	@ 0x2f
 80133ca:	d024      	beq.n	8013416 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80133cc:	d80d      	bhi.n	80133ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80133ce:	2a2d      	cmp	r2, #45	@ 0x2d
 80133d0:	d014      	beq.n	80133fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80133d2:	d826      	bhi.n	8013422 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80133d4:	2a2c      	cmp	r2, #44	@ 0x2c
 80133d6:	d1f5      	bne.n	80133c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80133d8:	684b      	ldr	r3, [r1, #4]
 80133da:	781b      	ldrb	r3, [r3, #0]
 80133dc:	2b01      	cmp	r3, #1
 80133de:	d018      	beq.n	8013412 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80133e0:	d323      	bcc.n	801342a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80133e2:	2b02      	cmp	r3, #2
 80133e4:	d1ee      	bne.n	80133c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80133e6:	68c0      	ldr	r0, [r0, #12]
 80133e8:	4770      	bx	lr
 80133ea:	2a31      	cmp	r2, #49	@ 0x31
 80133ec:	d004      	beq.n	80133f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80133ee:	d328      	bcc.n	8013442 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80133f0:	2a32      	cmp	r2, #50	@ 0x32
 80133f2:	d026      	beq.n	8013442 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80133f4:	2a33      	cmp	r2, #51	@ 0x33
 80133f6:	d1e5      	bne.n	80133c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80133f8:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 80133fa:	4770      	bx	lr
 80133fc:	684b      	ldr	r3, [r1, #4]
 80133fe:	781b      	ldrb	r3, [r3, #0]
 8013400:	2b01      	cmp	r3, #1
 8013402:	d004      	beq.n	801340e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8013404:	d30b      	bcc.n	801341e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013406:	2b02      	cmp	r3, #2
 8013408:	d1dc      	bne.n	80133c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801340a:	6940      	ldr	r0, [r0, #20]
 801340c:	4770      	bx	lr
 801340e:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8013410:	4770      	bx	lr
 8013412:	69c0      	ldr	r0, [r0, #28]
 8013414:	4770      	bx	lr
 8013416:	684b      	ldr	r3, [r1, #4]
 8013418:	781b      	ldrb	r3, [r3, #0]
 801341a:	2b00      	cmp	r3, #0
 801341c:	d1d2      	bne.n	80133c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801341e:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8013420:	4770      	bx	lr
 8013422:	684b      	ldr	r3, [r1, #4]
 8013424:	781b      	ldrb	r3, [r3, #0]
 8013426:	2b00      	cmp	r3, #0
 8013428:	d1cc      	bne.n	80133c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801342a:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 801342c:	4770      	bx	lr
 801342e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8013430:	4770      	bx	lr
 8013432:	6d40      	ldr	r0, [r0, #84]	@ 0x54
 8013434:	4770      	bx	lr
 8013436:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 8013438:	4770      	bx	lr
 801343a:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
 801343c:	4770      	bx	lr
 801343e:	6e40      	ldr	r0, [r0, #100]	@ 0x64
 8013440:	4770      	bx	lr
 8013442:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
 8013444:	4770      	bx	lr
 8013446:	2a0b      	cmp	r2, #11
 8013448:	d049      	beq.n	80134de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801344a:	d80e      	bhi.n	801346a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801344c:	2a03      	cmp	r2, #3
 801344e:	d040      	beq.n	80134d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8013450:	d804      	bhi.n	801345c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8013452:	2a01      	cmp	r2, #1
 8013454:	d03f      	beq.n	80134d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8013456:	d940      	bls.n	80134da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8013458:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 801345a:	4770      	bx	lr
 801345c:	2a09      	cmp	r2, #9
 801345e:	d03e      	beq.n	80134de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8013460:	d801      	bhi.n	8013466 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8013462:	2a08      	cmp	r2, #8
 8013464:	d1ae      	bne.n	80133c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013466:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8013468:	4770      	bx	lr
 801346a:	2a2f      	cmp	r2, #47	@ 0x2f
 801346c:	d024      	beq.n	80134b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801346e:	d80d      	bhi.n	801348c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8013470:	2a2d      	cmp	r2, #45	@ 0x2d
 8013472:	d014      	beq.n	801349e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8013474:	d826      	bhi.n	80134c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8013476:	2a2c      	cmp	r2, #44	@ 0x2c
 8013478:	d1a4      	bne.n	80133c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801347a:	684b      	ldr	r3, [r1, #4]
 801347c:	781b      	ldrb	r3, [r3, #0]
 801347e:	2b01      	cmp	r3, #1
 8013480:	d018      	beq.n	80134b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8013482:	d324      	bcc.n	80134ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8013484:	2b02      	cmp	r3, #2
 8013486:	d19d      	bne.n	80133c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013488:	6900      	ldr	r0, [r0, #16]
 801348a:	4770      	bx	lr
 801348c:	2a31      	cmp	r2, #49	@ 0x31
 801348e:	d004      	beq.n	801349a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8013490:	d327      	bcc.n	80134e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013492:	2a32      	cmp	r2, #50	@ 0x32
 8013494:	d025      	beq.n	80134e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013496:	2a33      	cmp	r2, #51	@ 0x33
 8013498:	d194      	bne.n	80133c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801349a:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 801349c:	4770      	bx	lr
 801349e:	684b      	ldr	r3, [r1, #4]
 80134a0:	781b      	ldrb	r3, [r3, #0]
 80134a2:	2b01      	cmp	r3, #1
 80134a4:	d004      	beq.n	80134b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80134a6:	d30b      	bcc.n	80134c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80134a8:	2b02      	cmp	r3, #2
 80134aa:	d18b      	bne.n	80133c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80134ac:	6980      	ldr	r0, [r0, #24]
 80134ae:	4770      	bx	lr
 80134b0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80134b2:	4770      	bx	lr
 80134b4:	6a00      	ldr	r0, [r0, #32]
 80134b6:	4770      	bx	lr
 80134b8:	684b      	ldr	r3, [r1, #4]
 80134ba:	781b      	ldrb	r3, [r3, #0]
 80134bc:	2b00      	cmp	r3, #0
 80134be:	d181      	bne.n	80133c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80134c0:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 80134c2:	4770      	bx	lr
 80134c4:	684b      	ldr	r3, [r1, #4]
 80134c6:	781b      	ldrb	r3, [r3, #0]
 80134c8:	2b00      	cmp	r3, #0
 80134ca:	f47f af7b 	bne.w	80133c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80134ce:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 80134d0:	4770      	bx	lr
 80134d2:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 80134d4:	4770      	bx	lr
 80134d6:	6d80      	ldr	r0, [r0, #88]	@ 0x58
 80134d8:	4770      	bx	lr
 80134da:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 80134dc:	4770      	bx	lr
 80134de:	6e80      	ldr	r0, [r0, #104]	@ 0x68
 80134e0:	4770      	bx	lr
 80134e2:	6f00      	ldr	r0, [r0, #112]	@ 0x70
 80134e4:	4770      	bx	lr

080134e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80134e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134ea:	b087      	sub	sp, #28
 80134ec:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80134ee:	9205      	str	r2, [sp, #20]
 80134f0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80134f4:	9101      	str	r1, [sp, #4]
 80134f6:	9202      	str	r2, [sp, #8]
 80134f8:	6841      	ldr	r1, [r0, #4]
 80134fa:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80134fe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013502:	fb01 2404 	mla	r4, r1, r4, r2
 8013506:	6802      	ldr	r2, [r0, #0]
 8013508:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801350c:	f8de 2000 	ldr.w	r2, [lr]
 8013510:	9203      	str	r2, [sp, #12]
 8013512:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013516:	3204      	adds	r2, #4
 8013518:	9204      	str	r2, [sp, #16]
 801351a:	9a02      	ldr	r2, [sp, #8]
 801351c:	43d6      	mvns	r6, r2
 801351e:	b2f6      	uxtb	r6, r6
 8013520:	9a01      	ldr	r2, [sp, #4]
 8013522:	2a00      	cmp	r2, #0
 8013524:	dc03      	bgt.n	801352e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013526:	9a05      	ldr	r2, [sp, #20]
 8013528:	2a00      	cmp	r2, #0
 801352a:	f340 8129 	ble.w	8013780 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801352e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013530:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013534:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013538:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801353a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801353e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013542:	2b00      	cmp	r3, #0
 8013544:	dd0e      	ble.n	8013564 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013546:	1408      	asrs	r0, r1, #16
 8013548:	d405      	bmi.n	8013556 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801354a:	4560      	cmp	r0, ip
 801354c:	da03      	bge.n	8013556 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801354e:	1410      	asrs	r0, r2, #16
 8013550:	d401      	bmi.n	8013556 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013552:	42b8      	cmp	r0, r7
 8013554:	db07      	blt.n	8013566 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013556:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013558:	3b01      	subs	r3, #1
 801355a:	3402      	adds	r4, #2
 801355c:	4401      	add	r1, r0
 801355e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013560:	4402      	add	r2, r0
 8013562:	e7ee      	b.n	8013542 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013564:	d071      	beq.n	801364a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013566:	1e58      	subs	r0, r3, #1
 8013568:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801356a:	fb05 1500 	mla	r5, r5, r0, r1
 801356e:	142d      	asrs	r5, r5, #16
 8013570:	d45f      	bmi.n	8013632 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013572:	4565      	cmp	r5, ip
 8013574:	da5d      	bge.n	8013632 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013576:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013578:	fb05 2000 	mla	r0, r5, r0, r2
 801357c:	1400      	asrs	r0, r0, #16
 801357e:	d458      	bmi.n	8013632 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013580:	42b8      	cmp	r0, r7
 8013582:	da56      	bge.n	8013632 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013584:	4699      	mov	r9, r3
 8013586:	46a2      	mov	sl, r4
 8013588:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801358c:	f1b9 0f00 	cmp.w	r9, #0
 8013590:	dd57      	ble.n	8013642 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8013592:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8013596:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801359a:	9803      	ldr	r0, [sp, #12]
 801359c:	140d      	asrs	r5, r1, #16
 801359e:	f109 39ff 	add.w	r9, r9, #4294967295
 80135a2:	fb07 000c 	mla	r0, r7, ip, r0
 80135a6:	5d40      	ldrb	r0, [r0, r5]
 80135a8:	9d04      	ldr	r5, [sp, #16]
 80135aa:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80135ae:	f8ba 5000 	ldrh.w	r5, [sl]
 80135b2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80135b6:	122f      	asrs	r7, r5, #8
 80135b8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80135bc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80135c0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80135c4:	00ed      	lsls	r5, r5, #3
 80135c6:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 80135ca:	fb17 f706 	smulbb	r7, r7, r6
 80135ce:	b2ed      	uxtb	r5, r5
 80135d0:	fb18 f806 	smulbb	r8, r8, r6
 80135d4:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80135d8:	10c7      	asrs	r7, r0, #3
 80135da:	fb15 f506 	smulbb	r5, r5, r6
 80135de:	00c0      	lsls	r0, r0, #3
 80135e0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80135e4:	fa1f fc8c 	uxth.w	ip, ip
 80135e8:	b2c0      	uxtb	r0, r0
 80135ea:	fb07 870b 	mla	r7, r7, fp, r8
 80135ee:	fb00 500b 	mla	r0, r0, fp, r5
 80135f2:	f10c 0501 	add.w	r5, ip, #1
 80135f6:	b2bf      	uxth	r7, r7
 80135f8:	b280      	uxth	r0, r0
 80135fa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80135fe:	f107 0801 	add.w	r8, r7, #1
 8013602:	1c45      	adds	r5, r0, #1
 8013604:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8013608:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801360c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013610:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013612:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013616:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801361a:	4401      	add	r1, r0
 801361c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8013620:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013622:	ea45 0c0c 	orr.w	ip, r5, ip
 8013626:	4402      	add	r2, r0
 8013628:	ea4c 0c08 	orr.w	ip, ip, r8
 801362c:	f82a cb02 	strh.w	ip, [sl], #2
 8013630:	e7ac      	b.n	801358c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013632:	f04f 0800 	mov.w	r8, #0
 8013636:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801363a:	eb03 0008 	add.w	r0, r3, r8
 801363e:	2800      	cmp	r0, #0
 8013640:	dc41      	bgt.n	80136c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8013642:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013646:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801364a:	9b01      	ldr	r3, [sp, #4]
 801364c:	2b00      	cmp	r3, #0
 801364e:	f340 8097 	ble.w	8013780 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013652:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8013656:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013658:	ee30 0a04 	vadd.f32	s0, s0, s8
 801365c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013660:	eef0 6a62 	vmov.f32	s13, s5
 8013664:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013668:	ee31 1a05 	vadd.f32	s2, s2, s10
 801366c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013670:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013674:	eef0 6a43 	vmov.f32	s13, s6
 8013678:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801367c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013680:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013684:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013688:	ee77 2a62 	vsub.f32	s5, s14, s5
 801368c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013690:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013694:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013698:	ee12 2a90 	vmov	r2, s5
 801369c:	eef0 2a47 	vmov.f32	s5, s14
 80136a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80136a4:	ee13 2a10 	vmov	r2, s6
 80136a8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80136aa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80136ac:	eeb0 3a67 	vmov.f32	s6, s15
 80136b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80136b4:	9314      	str	r3, [sp, #80]	@ 0x50
 80136b6:	9b01      	ldr	r3, [sp, #4]
 80136b8:	9a05      	ldr	r2, [sp, #20]
 80136ba:	3b01      	subs	r3, #1
 80136bc:	9301      	str	r3, [sp, #4]
 80136be:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80136c0:	bf08      	it	eq
 80136c2:	4613      	moveq	r3, r2
 80136c4:	e72c      	b.n	8013520 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80136c6:	140f      	asrs	r7, r1, #16
 80136c8:	d453      	bmi.n	8013772 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80136ca:	f8de 5008 	ldr.w	r5, [lr, #8]
 80136ce:	42bd      	cmp	r5, r7
 80136d0:	dd4f      	ble.n	8013772 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80136d2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80136d6:	d44c      	bmi.n	8013772 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80136d8:	f8de 000c 	ldr.w	r0, [lr, #12]
 80136dc:	4560      	cmp	r0, ip
 80136de:	dd48      	ble.n	8013772 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80136e0:	9803      	ldr	r0, [sp, #12]
 80136e2:	b22d      	sxth	r5, r5
 80136e4:	fb0c 0505 	mla	r5, ip, r5, r0
 80136e8:	5de8      	ldrb	r0, [r5, r7]
 80136ea:	9d04      	ldr	r5, [sp, #16]
 80136ec:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80136f0:	f06f 0501 	mvn.w	r5, #1
 80136f4:	fb05 fb08 	mul.w	fp, r5, r8
 80136f8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80136fc:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013700:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013704:	122f      	asrs	r7, r5, #8
 8013706:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801370a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801370e:	00ed      	lsls	r5, r5, #3
 8013710:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8013714:	fb17 f706 	smulbb	r7, r7, r6
 8013718:	b2ed      	uxtb	r5, r5
 801371a:	fb19 f906 	smulbb	r9, r9, r6
 801371e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013722:	10c7      	asrs	r7, r0, #3
 8013724:	fb15 f506 	smulbb	r5, r5, r6
 8013728:	00c0      	lsls	r0, r0, #3
 801372a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801372e:	fa1f fc8c 	uxth.w	ip, ip
 8013732:	b2c0      	uxtb	r0, r0
 8013734:	fb07 970a 	mla	r7, r7, sl, r9
 8013738:	fb00 500a 	mla	r0, r0, sl, r5
 801373c:	f10c 0501 	add.w	r5, ip, #1
 8013740:	b2bf      	uxth	r7, r7
 8013742:	b280      	uxth	r0, r0
 8013744:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013748:	f107 0901 	add.w	r9, r7, #1
 801374c:	1c45      	adds	r5, r0, #1
 801374e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013752:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013756:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801375a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801375e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013762:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8013766:	ea45 0c0c 	orr.w	ip, r5, ip
 801376a:	ea4c 0c09 	orr.w	ip, ip, r9
 801376e:	f824 c00b 	strh.w	ip, [r4, fp]
 8013772:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013774:	f108 38ff 	add.w	r8, r8, #4294967295
 8013778:	4401      	add	r1, r0
 801377a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801377c:	4402      	add	r2, r0
 801377e:	e75c      	b.n	801363a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8013780:	b007      	add	sp, #28
 8013782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013786 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013786:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801378a:	b085      	sub	sp, #20
 801378c:	4693      	mov	fp, r2
 801378e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013792:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013794:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8013796:	6870      	ldr	r0, [r6, #4]
 8013798:	9100      	str	r1, [sp, #0]
 801379a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801379e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80137a2:	fb00 2404 	mla	r4, r0, r4, r2
 80137a6:	6832      	ldr	r2, [r6, #0]
 80137a8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80137ac:	682a      	ldr	r2, [r5, #0]
 80137ae:	9201      	str	r2, [sp, #4]
 80137b0:	686a      	ldr	r2, [r5, #4]
 80137b2:	3204      	adds	r2, #4
 80137b4:	9202      	str	r2, [sp, #8]
 80137b6:	9a00      	ldr	r2, [sp, #0]
 80137b8:	2a00      	cmp	r2, #0
 80137ba:	dc03      	bgt.n	80137c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80137bc:	f1bb 0f00 	cmp.w	fp, #0
 80137c0:	f340 80a0 	ble.w	8013904 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80137c4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80137c6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80137ca:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80137ce:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80137d0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80137d4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80137d8:	2b00      	cmp	r3, #0
 80137da:	dd0c      	ble.n	80137f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80137dc:	1406      	asrs	r6, r0, #16
 80137de:	d405      	bmi.n	80137ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80137e0:	454e      	cmp	r6, r9
 80137e2:	da03      	bge.n	80137ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80137e4:	1416      	asrs	r6, r2, #16
 80137e6:	d401      	bmi.n	80137ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80137e8:	4546      	cmp	r6, r8
 80137ea:	db05      	blt.n	80137f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80137ec:	4470      	add	r0, lr
 80137ee:	4462      	add	r2, ip
 80137f0:	3b01      	subs	r3, #1
 80137f2:	3402      	adds	r4, #2
 80137f4:	e7f0      	b.n	80137d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80137f6:	d00f      	beq.n	8013818 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80137f8:	1e5e      	subs	r6, r3, #1
 80137fa:	fb0e 0706 	mla	r7, lr, r6, r0
 80137fe:	143f      	asrs	r7, r7, #16
 8013800:	d541      	bpl.n	8013886 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8013802:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013806:	4698      	mov	r8, r3
 8013808:	9603      	str	r6, [sp, #12]
 801380a:	f1b8 0f00 	cmp.w	r8, #0
 801380e:	dc59      	bgt.n	80138c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013810:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013814:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013818:	9b00      	ldr	r3, [sp, #0]
 801381a:	2b00      	cmp	r3, #0
 801381c:	dd72      	ble.n	8013904 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801381e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013822:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013824:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013828:	eeb0 6a62 	vmov.f32	s12, s5
 801382c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013830:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013834:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013838:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801383c:	eeb0 6a43 	vmov.f32	s12, s6
 8013840:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013844:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013848:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801384c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013850:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013854:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013858:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801385c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013860:	ee12 2a90 	vmov	r2, s5
 8013864:	eef0 2a47 	vmov.f32	s5, s14
 8013868:	fb92 fef3 	sdiv	lr, r2, r3
 801386c:	ee13 2a10 	vmov	r2, s6
 8013870:	eeb0 3a67 	vmov.f32	s6, s15
 8013874:	fb92 fcf3 	sdiv	ip, r2, r3
 8013878:	9b00      	ldr	r3, [sp, #0]
 801387a:	3b01      	subs	r3, #1
 801387c:	9300      	str	r3, [sp, #0]
 801387e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013880:	bf08      	it	eq
 8013882:	465b      	moveq	r3, fp
 8013884:	e797      	b.n	80137b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8013886:	454f      	cmp	r7, r9
 8013888:	dabb      	bge.n	8013802 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801388a:	fb0c 2606 	mla	r6, ip, r6, r2
 801388e:	1436      	asrs	r6, r6, #16
 8013890:	d4b7      	bmi.n	8013802 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013892:	4546      	cmp	r6, r8
 8013894:	dab5      	bge.n	8013802 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013896:	461e      	mov	r6, r3
 8013898:	46a0      	mov	r8, r4
 801389a:	2e00      	cmp	r6, #0
 801389c:	ddb8      	ble.n	8013810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801389e:	1417      	asrs	r7, r2, #16
 80138a0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80138a4:	9901      	ldr	r1, [sp, #4]
 80138a6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80138aa:	4462      	add	r2, ip
 80138ac:	4470      	add	r0, lr
 80138ae:	fb0a 1707 	mla	r7, sl, r7, r1
 80138b2:	9902      	ldr	r1, [sp, #8]
 80138b4:	3e01      	subs	r6, #1
 80138b6:	f817 7009 	ldrb.w	r7, [r7, r9]
 80138ba:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80138be:	f828 7b02 	strh.w	r7, [r8], #2
 80138c2:	e7ea      	b.n	801389a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80138c4:	ea5f 4920 	movs.w	r9, r0, asr #16
 80138c8:	d417      	bmi.n	80138fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80138ca:	68ae      	ldr	r6, [r5, #8]
 80138cc:	454e      	cmp	r6, r9
 80138ce:	dd14      	ble.n	80138fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80138d0:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80138d4:	d411      	bmi.n	80138fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80138d6:	68ef      	ldr	r7, [r5, #12]
 80138d8:	4557      	cmp	r7, sl
 80138da:	dd0e      	ble.n	80138fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80138dc:	9f01      	ldr	r7, [sp, #4]
 80138de:	b236      	sxth	r6, r6
 80138e0:	f06f 0101 	mvn.w	r1, #1
 80138e4:	fb0a 7606 	mla	r6, sl, r6, r7
 80138e8:	9f02      	ldr	r7, [sp, #8]
 80138ea:	f816 6009 	ldrb.w	r6, [r6, r9]
 80138ee:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80138f2:	fb01 f608 	mul.w	r6, r1, r8
 80138f6:	9903      	ldr	r1, [sp, #12]
 80138f8:	538f      	strh	r7, [r1, r6]
 80138fa:	4470      	add	r0, lr
 80138fc:	4462      	add	r2, ip
 80138fe:	f108 38ff 	add.w	r8, r8, #4294967295
 8013902:	e782      	b.n	801380a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013904:	b005      	add	sp, #20
 8013906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801390a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801390a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801390e:	b087      	sub	sp, #28
 8013910:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8013912:	9205      	str	r2, [sp, #20]
 8013914:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013918:	9102      	str	r1, [sp, #8]
 801391a:	9203      	str	r2, [sp, #12]
 801391c:	6861      	ldr	r1, [r4, #4]
 801391e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8013922:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8013926:	fb01 2000 	mla	r0, r1, r0, r2
 801392a:	6822      	ldr	r2, [r4, #0]
 801392c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8013930:	9200      	str	r2, [sp, #0]
 8013932:	f8dc 2000 	ldr.w	r2, [ip]
 8013936:	9204      	str	r2, [sp, #16]
 8013938:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801393c:	3204      	adds	r2, #4
 801393e:	9201      	str	r2, [sp, #4]
 8013940:	9a03      	ldr	r2, [sp, #12]
 8013942:	43d5      	mvns	r5, r2
 8013944:	b2ed      	uxtb	r5, r5
 8013946:	9a02      	ldr	r2, [sp, #8]
 8013948:	2a00      	cmp	r2, #0
 801394a:	dc03      	bgt.n	8013954 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801394c:	9a05      	ldr	r2, [sp, #20]
 801394e:	2a00      	cmp	r2, #0
 8013950:	f340 812c 	ble.w	8013bac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013954:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013956:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801395a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801395e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013960:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8013964:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013968:	2b00      	cmp	r3, #0
 801396a:	dd10      	ble.n	801398e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801396c:	140c      	asrs	r4, r1, #16
 801396e:	d405      	bmi.n	801397c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013970:	4574      	cmp	r4, lr
 8013972:	da03      	bge.n	801397c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013974:	1414      	asrs	r4, r2, #16
 8013976:	d401      	bmi.n	801397c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013978:	42bc      	cmp	r4, r7
 801397a:	db09      	blt.n	8013990 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801397c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801397e:	3b01      	subs	r3, #1
 8013980:	9800      	ldr	r0, [sp, #0]
 8013982:	4421      	add	r1, r4
 8013984:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013986:	3002      	adds	r0, #2
 8013988:	4422      	add	r2, r4
 801398a:	9000      	str	r0, [sp, #0]
 801398c:	e7ec      	b.n	8013968 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801398e:	d071      	beq.n	8013a74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8013990:	1e5c      	subs	r4, r3, #1
 8013992:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013994:	fb06 1604 	mla	r6, r6, r4, r1
 8013998:	1436      	asrs	r6, r6, #16
 801399a:	d45d      	bmi.n	8013a58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801399c:	4576      	cmp	r6, lr
 801399e:	da5b      	bge.n	8013a58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80139a0:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 80139a2:	fb06 2404 	mla	r4, r6, r4, r2
 80139a6:	1424      	asrs	r4, r4, #16
 80139a8:	d456      	bmi.n	8013a58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80139aa:	42bc      	cmp	r4, r7
 80139ac:	da54      	bge.n	8013a58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80139ae:	4698      	mov	r8, r3
 80139b0:	f8dd 9000 	ldr.w	r9, [sp]
 80139b4:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80139b8:	f1b8 0f00 	cmp.w	r8, #0
 80139bc:	dd54      	ble.n	8013a68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80139be:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80139c2:	1414      	asrs	r4, r2, #16
 80139c4:	9804      	ldr	r0, [sp, #16]
 80139c6:	140e      	asrs	r6, r1, #16
 80139c8:	f108 38ff 	add.w	r8, r8, #4294967295
 80139cc:	fb07 0404 	mla	r4, r7, r4, r0
 80139d0:	9801      	ldr	r0, [sp, #4]
 80139d2:	f814 e006 	ldrb.w	lr, [r4, r6]
 80139d6:	f8b9 4000 	ldrh.w	r4, [r9]
 80139da:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80139de:	1227      	asrs	r7, r4, #8
 80139e0:	eb00 0b0e 	add.w	fp, r0, lr
 80139e4:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80139e8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80139ec:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80139ee:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80139f2:	f89b b001 	ldrb.w	fp, [fp, #1]
 80139f6:	4401      	add	r1, r0
 80139f8:	fb16 f60a 	smulbb	r6, r6, sl
 80139fc:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80139fe:	fb1b fb0a 	smulbb	fp, fp, sl
 8013a02:	fb07 6705 	mla	r7, r7, r5, r6
 8013a06:	10e6      	asrs	r6, r4, #3
 8013a08:	00e4      	lsls	r4, r4, #3
 8013a0a:	4402      	add	r2, r0
 8013a0c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013a10:	b2bf      	uxth	r7, r7
 8013a12:	b2e4      	uxtb	r4, r4
 8013a14:	fb06 b605 	mla	r6, r6, r5, fp
 8013a18:	fb14 f405 	smulbb	r4, r4, r5
 8013a1c:	b2b6      	uxth	r6, r6
 8013a1e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013a22:	1c7c      	adds	r4, r7, #1
 8013a24:	f106 0b01 	add.w	fp, r6, #1
 8013a28:	fa1f fe8e 	uxth.w	lr, lr
 8013a2c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013a30:	f10e 0401 	add.w	r4, lr, #1
 8013a34:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013a38:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013a3c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8013a40:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013a44:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013a48:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8013a4c:	4327      	orrs	r7, r4
 8013a4e:	ea47 070b 	orr.w	r7, r7, fp
 8013a52:	f829 7b02 	strh.w	r7, [r9], #2
 8013a56:	e7af      	b.n	80139b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8013a58:	f04f 0e00 	mov.w	lr, #0
 8013a5c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8013a60:	eb03 040e 	add.w	r4, r3, lr
 8013a64:	2c00      	cmp	r4, #0
 8013a66:	dc43      	bgt.n	8013af0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8013a68:	9a00      	ldr	r2, [sp, #0]
 8013a6a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013a6e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013a72:	9300      	str	r3, [sp, #0]
 8013a74:	9b02      	ldr	r3, [sp, #8]
 8013a76:	2b00      	cmp	r3, #0
 8013a78:	f340 8098 	ble.w	8013bac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013a7c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8013a80:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013a82:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013a86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013a8a:	eef0 6a62 	vmov.f32	s13, s5
 8013a8e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013a92:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013a96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013a9a:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013a9e:	eef0 6a43 	vmov.f32	s13, s6
 8013aa2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013aa6:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013aaa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013aae:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013ab2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013ab6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013aba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013abe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013ac2:	ee12 2a90 	vmov	r2, s5
 8013ac6:	eef0 2a47 	vmov.f32	s5, s14
 8013aca:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ace:	ee13 2a10 	vmov	r2, s6
 8013ad2:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013ad4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013ad6:	eeb0 3a67 	vmov.f32	s6, s15
 8013ada:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ade:	9314      	str	r3, [sp, #80]	@ 0x50
 8013ae0:	9b02      	ldr	r3, [sp, #8]
 8013ae2:	9a05      	ldr	r2, [sp, #20]
 8013ae4:	3b01      	subs	r3, #1
 8013ae6:	9302      	str	r3, [sp, #8]
 8013ae8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013aea:	bf08      	it	eq
 8013aec:	4613      	moveq	r3, r2
 8013aee:	e72a      	b.n	8013946 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013af0:	140f      	asrs	r7, r1, #16
 8013af2:	d454      	bmi.n	8013b9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013af4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013af8:	42be      	cmp	r6, r7
 8013afa:	dd50      	ble.n	8013b9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013afc:	ea5f 4822 	movs.w	r8, r2, asr #16
 8013b00:	d44d      	bmi.n	8013b9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013b02:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8013b06:	4544      	cmp	r4, r8
 8013b08:	dd49      	ble.n	8013b9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013b0a:	9c04      	ldr	r4, [sp, #16]
 8013b0c:	b236      	sxth	r6, r6
 8013b0e:	f06f 0001 	mvn.w	r0, #1
 8013b12:	fb08 4606 	mla	r6, r8, r6, r4
 8013b16:	9c01      	ldr	r4, [sp, #4]
 8013b18:	fb00 fa0e 	mul.w	sl, r0, lr
 8013b1c:	9800      	ldr	r0, [sp, #0]
 8013b1e:	f816 8007 	ldrb.w	r8, [r6, r7]
 8013b22:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013b26:	eb04 0b08 	add.w	fp, r4, r8
 8013b2a:	f830 400a 	ldrh.w	r4, [r0, sl]
 8013b2e:	9801      	ldr	r0, [sp, #4]
 8013b30:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013b34:	1227      	asrs	r7, r4, #8
 8013b36:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013b3a:	fb16 f609 	smulbb	r6, r6, r9
 8013b3e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013b42:	f810 8008 	ldrb.w	r8, [r0, r8]
 8013b46:	fb1b fb09 	smulbb	fp, fp, r9
 8013b4a:	fb07 6705 	mla	r7, r7, r5, r6
 8013b4e:	10e6      	asrs	r6, r4, #3
 8013b50:	00e4      	lsls	r4, r4, #3
 8013b52:	9800      	ldr	r0, [sp, #0]
 8013b54:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013b58:	b2bf      	uxth	r7, r7
 8013b5a:	b2e4      	uxtb	r4, r4
 8013b5c:	fb06 b605 	mla	r6, r6, r5, fp
 8013b60:	fb14 f405 	smulbb	r4, r4, r5
 8013b64:	b2b6      	uxth	r6, r6
 8013b66:	fb08 4809 	mla	r8, r8, r9, r4
 8013b6a:	1c7c      	adds	r4, r7, #1
 8013b6c:	f106 0b01 	add.w	fp, r6, #1
 8013b70:	fa1f f888 	uxth.w	r8, r8
 8013b74:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013b78:	f108 0401 	add.w	r4, r8, #1
 8013b7c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013b80:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013b84:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8013b88:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013b8c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013b90:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8013b94:	4327      	orrs	r7, r4
 8013b96:	ea47 070b 	orr.w	r7, r7, fp
 8013b9a:	f820 700a 	strh.w	r7, [r0, sl]
 8013b9e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013ba0:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013ba4:	4401      	add	r1, r0
 8013ba6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013ba8:	4402      	add	r2, r0
 8013baa:	e759      	b.n	8013a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013bac:	b007      	add	sp, #28
 8013bae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013bb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013bb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013bb8:	b085      	sub	sp, #20
 8013bba:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013bbe:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013bc0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8013bc2:	9203      	str	r2, [sp, #12]
 8013bc4:	6870      	ldr	r0, [r6, #4]
 8013bc6:	686f      	ldr	r7, [r5, #4]
 8013bc8:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8013bcc:	3704      	adds	r7, #4
 8013bce:	9101      	str	r1, [sp, #4]
 8013bd0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013bd4:	fb00 2404 	mla	r4, r0, r4, r2
 8013bd8:	6832      	ldr	r2, [r6, #0]
 8013bda:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013bde:	682a      	ldr	r2, [r5, #0]
 8013be0:	9202      	str	r2, [sp, #8]
 8013be2:	9a01      	ldr	r2, [sp, #4]
 8013be4:	2a00      	cmp	r2, #0
 8013be6:	dc03      	bgt.n	8013bf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013be8:	9a03      	ldr	r2, [sp, #12]
 8013bea:	2a00      	cmp	r2, #0
 8013bec:	f340 80cc 	ble.w	8013d88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013bf0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013bf2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013bf6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013bfa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013bfc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013c00:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013c04:	2b00      	cmp	r3, #0
 8013c06:	dd0d      	ble.n	8013c24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013c08:	1406      	asrs	r6, r0, #16
 8013c0a:	d405      	bmi.n	8013c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013c0c:	454e      	cmp	r6, r9
 8013c0e:	da03      	bge.n	8013c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013c10:	1416      	asrs	r6, r2, #16
 8013c12:	d401      	bmi.n	8013c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013c14:	4546      	cmp	r6, r8
 8013c16:	db06      	blt.n	8013c26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013c18:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8013c1a:	4460      	add	r0, ip
 8013c1c:	3b01      	subs	r3, #1
 8013c1e:	3402      	adds	r4, #2
 8013c20:	4432      	add	r2, r6
 8013c22:	e7ef      	b.n	8013c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8013c24:	d00f      	beq.n	8013c46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013c26:	1e5e      	subs	r6, r3, #1
 8013c28:	fb0c 0e06 	mla	lr, ip, r6, r0
 8013c2c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8013c30:	d543      	bpl.n	8013cba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8013c32:	4698      	mov	r8, r3
 8013c34:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8013c38:	f1b8 0f00 	cmp.w	r8, #0
 8013c3c:	dc71      	bgt.n	8013d22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8013c3e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013c42:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013c46:	9b01      	ldr	r3, [sp, #4]
 8013c48:	2b00      	cmp	r3, #0
 8013c4a:	f340 809d 	ble.w	8013d88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013c4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013c52:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013c54:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013c58:	eeb0 6a62 	vmov.f32	s12, s5
 8013c5c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013c60:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013c64:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013c68:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013c6c:	eeb0 6a43 	vmov.f32	s12, s6
 8013c70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013c74:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013c78:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013c7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013c80:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013c84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013c88:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013c8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013c90:	ee12 2a90 	vmov	r2, s5
 8013c94:	eef0 2a47 	vmov.f32	s5, s14
 8013c98:	fb92 fcf3 	sdiv	ip, r2, r3
 8013c9c:	ee13 2a10 	vmov	r2, s6
 8013ca0:	eeb0 3a67 	vmov.f32	s6, s15
 8013ca4:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ca8:	9312      	str	r3, [sp, #72]	@ 0x48
 8013caa:	9b01      	ldr	r3, [sp, #4]
 8013cac:	9a03      	ldr	r2, [sp, #12]
 8013cae:	3b01      	subs	r3, #1
 8013cb0:	9301      	str	r3, [sp, #4]
 8013cb2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013cb4:	bf08      	it	eq
 8013cb6:	4613      	moveq	r3, r2
 8013cb8:	e793      	b.n	8013be2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8013cba:	45ce      	cmp	lr, r9
 8013cbc:	dab9      	bge.n	8013c32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013cbe:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8013cc0:	fb01 2606 	mla	r6, r1, r6, r2
 8013cc4:	1436      	asrs	r6, r6, #16
 8013cc6:	d4b4      	bmi.n	8013c32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013cc8:	4546      	cmp	r6, r8
 8013cca:	dab2      	bge.n	8013c32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013ccc:	4698      	mov	r8, r3
 8013cce:	46a2      	mov	sl, r4
 8013cd0:	f1b8 0f00 	cmp.w	r8, #0
 8013cd4:	ddb3      	ble.n	8013c3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013cd6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013cda:	1416      	asrs	r6, r2, #16
 8013cdc:	9902      	ldr	r1, [sp, #8]
 8013cde:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8013ce2:	f108 38ff 	add.w	r8, r8, #4294967295
 8013ce6:	4460      	add	r0, ip
 8013ce8:	fb09 1606 	mla	r6, r9, r6, r1
 8013cec:	4928      	ldr	r1, [pc, #160]	@ (8013d90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8013cee:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8013cf2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013cf6:	eb07 0b0e 	add.w	fp, r7, lr
 8013cfa:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8013cfe:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8013d02:	00f6      	lsls	r6, r6, #3
 8013d04:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8013d08:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8013d0a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013d0e:	440a      	add	r2, r1
 8013d10:	ea49 0606 	orr.w	r6, r9, r6
 8013d14:	f817 900e 	ldrb.w	r9, [r7, lr]
 8013d18:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8013d1c:	f82a 6b02 	strh.w	r6, [sl], #2
 8013d20:	e7d6      	b.n	8013cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8013d22:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013d26:	d429      	bmi.n	8013d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013d28:	68ae      	ldr	r6, [r5, #8]
 8013d2a:	454e      	cmp	r6, r9
 8013d2c:	dd26      	ble.n	8013d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013d2e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8013d32:	d423      	bmi.n	8013d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013d34:	68e9      	ldr	r1, [r5, #12]
 8013d36:	4559      	cmp	r1, fp
 8013d38:	dd20      	ble.n	8013d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013d3a:	fa0f fe86 	sxth.w	lr, r6
 8013d3e:	9902      	ldr	r1, [sp, #8]
 8013d40:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8013d44:	f06f 0101 	mvn.w	r1, #1
 8013d48:	f81e e009 	ldrb.w	lr, [lr, r9]
 8013d4c:	fb01 f908 	mul.w	r9, r1, r8
 8013d50:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8013d54:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013d58:	eb07 060e 	add.w	r6, r7, lr
 8013d5c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8013d60:	7876      	ldrb	r6, [r6, #1]
 8013d62:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8013d66:	00f6      	lsls	r6, r6, #3
 8013d68:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013d6c:	ea4b 0606 	orr.w	r6, fp, r6
 8013d70:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8013d74:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8013d78:	f82a 6009 	strh.w	r6, [sl, r9]
 8013d7c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8013d7e:	4460      	add	r0, ip
 8013d80:	f108 38ff 	add.w	r8, r8, #4294967295
 8013d84:	440a      	add	r2, r1
 8013d86:	e757      	b.n	8013c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013d88:	b005      	add	sp, #20
 8013d8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d8e:	bf00      	nop
 8013d90:	fffff800 	.word	0xfffff800

08013d94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d98:	b087      	sub	sp, #28
 8013d9a:	468b      	mov	fp, r1
 8013d9c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013da0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8013da2:	9204      	str	r2, [sp, #16]
 8013da4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013da8:	6841      	ldr	r1, [r0, #4]
 8013daa:	9205      	str	r2, [sp, #20]
 8013dac:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8013db0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013db4:	fb01 2404 	mla	r4, r1, r4, r2
 8013db8:	6802      	ldr	r2, [r0, #0]
 8013dba:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013dbe:	f8dc 2000 	ldr.w	r2, [ip]
 8013dc2:	9201      	str	r2, [sp, #4]
 8013dc4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013dc8:	3204      	adds	r2, #4
 8013dca:	9202      	str	r2, [sp, #8]
 8013dcc:	f1bb 0f00 	cmp.w	fp, #0
 8013dd0:	dc03      	bgt.n	8013dda <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8013dd2:	9a04      	ldr	r2, [sp, #16]
 8013dd4:	2a00      	cmp	r2, #0
 8013dd6:	f340 8138 	ble.w	801404a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013dda:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013ddc:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013de0:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013de4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013de6:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8013dea:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013dee:	2b00      	cmp	r3, #0
 8013df0:	dd0e      	ble.n	8013e10 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013df2:	1402      	asrs	r2, r0, #16
 8013df4:	d405      	bmi.n	8013e02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013df6:	42ba      	cmp	r2, r7
 8013df8:	da03      	bge.n	8013e02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013dfa:	140a      	asrs	r2, r1, #16
 8013dfc:	d401      	bmi.n	8013e02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013dfe:	42b2      	cmp	r2, r6
 8013e00:	db07      	blt.n	8013e12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013e02:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013e04:	3b01      	subs	r3, #1
 8013e06:	3402      	adds	r4, #2
 8013e08:	4410      	add	r0, r2
 8013e0a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013e0c:	4411      	add	r1, r2
 8013e0e:	e7ee      	b.n	8013dee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8013e10:	d019      	beq.n	8013e46 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8013e12:	1e5a      	subs	r2, r3, #1
 8013e14:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013e16:	fb05 0502 	mla	r5, r5, r2, r0
 8013e1a:	142d      	asrs	r5, r5, #16
 8013e1c:	d409      	bmi.n	8013e32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013e1e:	42bd      	cmp	r5, r7
 8013e20:	da07      	bge.n	8013e32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013e22:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013e24:	fb05 1202 	mla	r2, r5, r2, r1
 8013e28:	1412      	asrs	r2, r2, #16
 8013e2a:	d402      	bmi.n	8013e32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013e2c:	42b2      	cmp	r2, r6
 8013e2e:	f2c0 80ac 	blt.w	8013f8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8013e32:	f04f 0e00 	mov.w	lr, #0
 8013e36:	eb03 020e 	add.w	r2, r3, lr
 8013e3a:	2a00      	cmp	r2, #0
 8013e3c:	dc3e      	bgt.n	8013ebc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013e3e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013e42:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013e46:	f1bb 0f00 	cmp.w	fp, #0
 8013e4a:	f340 80fe 	ble.w	801404a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013e4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013e52:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013e54:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013e58:	f1bb 0b01 	subs.w	fp, fp, #1
 8013e5c:	eeb0 6a62 	vmov.f32	s12, s5
 8013e60:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013e64:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013e68:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013e6c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013e70:	eeb0 6a43 	vmov.f32	s12, s6
 8013e74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013e78:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013e7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013e80:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013e84:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013e88:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013e8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013e90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013e94:	ee12 2a90 	vmov	r2, s5
 8013e98:	eef0 2a47 	vmov.f32	s5, s14
 8013e9c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ea0:	ee13 2a10 	vmov	r2, s6
 8013ea4:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013ea6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013ea8:	eeb0 3a67 	vmov.f32	s6, s15
 8013eac:	fb92 f3f3 	sdiv	r3, r2, r3
 8013eb0:	9a04      	ldr	r2, [sp, #16]
 8013eb2:	9314      	str	r3, [sp, #80]	@ 0x50
 8013eb4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013eb6:	bf08      	it	eq
 8013eb8:	4613      	moveq	r3, r2
 8013eba:	e787      	b.n	8013dcc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013ebc:	1406      	asrs	r6, r0, #16
 8013ebe:	d45d      	bmi.n	8013f7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013ec0:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8013ec4:	42b5      	cmp	r5, r6
 8013ec6:	dd59      	ble.n	8013f7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013ec8:	140f      	asrs	r7, r1, #16
 8013eca:	d457      	bmi.n	8013f7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013ecc:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8013ed0:	42ba      	cmp	r2, r7
 8013ed2:	dd53      	ble.n	8013f7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013ed4:	9a01      	ldr	r2, [sp, #4]
 8013ed6:	b22d      	sxth	r5, r5
 8013ed8:	fb07 2505 	mla	r5, r7, r5, r2
 8013edc:	5daa      	ldrb	r2, [r5, r6]
 8013ede:	9d02      	ldr	r5, [sp, #8]
 8013ee0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013ee4:	0e2e      	lsrs	r6, r5, #24
 8013ee6:	d049      	beq.n	8013f7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013ee8:	f06f 0201 	mvn.w	r2, #1
 8013eec:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013ef0:	fb02 f20e 	mul.w	r2, r2, lr
 8013ef4:	f834 8002 	ldrh.w	r8, [r4, r2]
 8013ef8:	9203      	str	r2, [sp, #12]
 8013efa:	9a05      	ldr	r2, [sp, #20]
 8013efc:	ea4f 2728 	mov.w	r7, r8, asr #8
 8013f00:	4356      	muls	r6, r2
 8013f02:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013f06:	1c72      	adds	r2, r6, #1
 8013f08:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013f0c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013f10:	b2ed      	uxtb	r5, r5
 8013f12:	1212      	asrs	r2, r2, #8
 8013f14:	fa1f f982 	uxth.w	r9, r2
 8013f18:	43d2      	mvns	r2, r2
 8013f1a:	fb16 f609 	smulbb	r6, r6, r9
 8013f1e:	b2d2      	uxtb	r2, r2
 8013f20:	fb15 f509 	smulbb	r5, r5, r9
 8013f24:	fb07 6702 	mla	r7, r7, r2, r6
 8013f28:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8013f2c:	fb1a fa09 	smulbb	sl, sl, r9
 8013f30:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013f34:	b2bf      	uxth	r7, r7
 8013f36:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013f3a:	fa5f f888 	uxtb.w	r8, r8
 8013f3e:	fb06 a602 	mla	r6, r6, r2, sl
 8013f42:	fb08 5502 	mla	r5, r8, r2, r5
 8013f46:	1c7a      	adds	r2, r7, #1
 8013f48:	b2b6      	uxth	r6, r6
 8013f4a:	b2ad      	uxth	r5, r5
 8013f4c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013f50:	9a03      	ldr	r2, [sp, #12]
 8013f52:	f105 0a01 	add.w	sl, r5, #1
 8013f56:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013f5a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013f5e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013f62:	ea4a 0707 	orr.w	r7, sl, r7
 8013f66:	f106 0a01 	add.w	sl, r6, #1
 8013f6a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013f6e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013f72:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013f76:	ea47 070a 	orr.w	r7, r7, sl
 8013f7a:	52a7      	strh	r7, [r4, r2]
 8013f7c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013f7e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013f82:	4410      	add	r0, r2
 8013f84:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013f86:	4411      	add	r1, r2
 8013f88:	e755      	b.n	8013e36 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013f8a:	f04f 0800 	mov.w	r8, #0
 8013f8e:	eba3 0208 	sub.w	r2, r3, r8
 8013f92:	2a00      	cmp	r2, #0
 8013f94:	f77f af53 	ble.w	8013e3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013f98:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8013f9c:	140a      	asrs	r2, r1, #16
 8013f9e:	9f01      	ldr	r7, [sp, #4]
 8013fa0:	1405      	asrs	r5, r0, #16
 8013fa2:	fb06 7202 	mla	r2, r6, r2, r7
 8013fa6:	5d52      	ldrb	r2, [r2, r5]
 8013fa8:	9d02      	ldr	r5, [sp, #8]
 8013faa:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013fae:	0e2e      	lsrs	r6, r5, #24
 8013fb0:	d044      	beq.n	801403c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8013fb2:	9a05      	ldr	r2, [sp, #20]
 8013fb4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013fb8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013fbc:	4356      	muls	r6, r2
 8013fbe:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013fc2:	1c72      	adds	r2, r6, #1
 8013fc4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013fc8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013fcc:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013fd0:	b2ed      	uxtb	r5, r5
 8013fd2:	1212      	asrs	r2, r2, #8
 8013fd4:	fa1f f982 	uxth.w	r9, r2
 8013fd8:	43d2      	mvns	r2, r2
 8013fda:	fb16 f609 	smulbb	r6, r6, r9
 8013fde:	b2d2      	uxtb	r2, r2
 8013fe0:	fb15 f509 	smulbb	r5, r5, r9
 8013fe4:	fb07 6702 	mla	r7, r7, r2, r6
 8013fe8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013fec:	fb1a fa09 	smulbb	sl, sl, r9
 8013ff0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013ff4:	b2bf      	uxth	r7, r7
 8013ff6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013ffa:	fa5f fe8e 	uxtb.w	lr, lr
 8013ffe:	fb06 a602 	mla	r6, r6, r2, sl
 8014002:	fb0e 5502 	mla	r5, lr, r2, r5
 8014006:	1c7a      	adds	r2, r7, #1
 8014008:	b2b6      	uxth	r6, r6
 801400a:	b2ad      	uxth	r5, r5
 801400c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014010:	f105 0a01 	add.w	sl, r5, #1
 8014014:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014018:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801401c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014020:	ea4a 0707 	orr.w	r7, sl, r7
 8014024:	f106 0a01 	add.w	sl, r6, #1
 8014028:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801402c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014030:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014034:	ea47 070a 	orr.w	r7, r7, sl
 8014038:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801403c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801403e:	f108 0801 	add.w	r8, r8, #1
 8014042:	4410      	add	r0, r2
 8014044:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014046:	4411      	add	r1, r2
 8014048:	e7a1      	b.n	8013f8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801404a:	b007      	add	sp, #28
 801404c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014050 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014054:	b085      	sub	sp, #20
 8014056:	468b      	mov	fp, r1
 8014058:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801405c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801405e:	9203      	str	r2, [sp, #12]
 8014060:	6841      	ldr	r1, [r0, #4]
 8014062:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014066:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801406a:	fb01 2404 	mla	r4, r1, r4, r2
 801406e:	6802      	ldr	r2, [r0, #0]
 8014070:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014074:	f8de 2000 	ldr.w	r2, [lr]
 8014078:	9200      	str	r2, [sp, #0]
 801407a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801407e:	3204      	adds	r2, #4
 8014080:	9201      	str	r2, [sp, #4]
 8014082:	f1bb 0f00 	cmp.w	fp, #0
 8014086:	dc03      	bgt.n	8014090 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014088:	9a03      	ldr	r2, [sp, #12]
 801408a:	2a00      	cmp	r2, #0
 801408c:	f340 8153 	ble.w	8014336 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014090:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014092:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014096:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801409a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801409c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80140a0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80140a4:	2b00      	cmp	r3, #0
 80140a6:	dd0e      	ble.n	80140c6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80140a8:	1408      	asrs	r0, r1, #16
 80140aa:	d405      	bmi.n	80140b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80140ac:	42b8      	cmp	r0, r7
 80140ae:	da03      	bge.n	80140b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80140b0:	1410      	asrs	r0, r2, #16
 80140b2:	d401      	bmi.n	80140b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80140b4:	42b0      	cmp	r0, r6
 80140b6:	db07      	blt.n	80140c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80140b8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80140ba:	3b01      	subs	r3, #1
 80140bc:	3402      	adds	r4, #2
 80140be:	4401      	add	r1, r0
 80140c0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80140c2:	4402      	add	r2, r0
 80140c4:	e7ee      	b.n	80140a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80140c6:	d017      	beq.n	80140f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80140c8:	1e58      	subs	r0, r3, #1
 80140ca:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80140cc:	fb05 1500 	mla	r5, r5, r0, r1
 80140d0:	142d      	asrs	r5, r5, #16
 80140d2:	d409      	bmi.n	80140e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80140d4:	42bd      	cmp	r5, r7
 80140d6:	da07      	bge.n	80140e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80140d8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80140da:	fb05 2000 	mla	r0, r5, r0, r2
 80140de:	1400      	asrs	r0, r0, #16
 80140e0:	d402      	bmi.n	80140e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80140e2:	42b0      	cmp	r0, r6
 80140e4:	f2c0 80bc 	blt.w	8014260 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80140e8:	2600      	movs	r6, #0
 80140ea:	1998      	adds	r0, r3, r6
 80140ec:	2800      	cmp	r0, #0
 80140ee:	dc3e      	bgt.n	801416e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80140f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80140f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80140f8:	f1bb 0f00 	cmp.w	fp, #0
 80140fc:	f340 811b 	ble.w	8014336 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014100:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014104:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014106:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801410a:	f1bb 0b01 	subs.w	fp, fp, #1
 801410e:	eeb0 6a62 	vmov.f32	s12, s5
 8014112:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014116:	ee31 1a05 	vadd.f32	s2, s2, s10
 801411a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801411e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014122:	eeb0 6a43 	vmov.f32	s12, s6
 8014126:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801412a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801412e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014132:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014136:	ee77 2a62 	vsub.f32	s5, s14, s5
 801413a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801413e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014142:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014146:	ee12 2a90 	vmov	r2, s5
 801414a:	eef0 2a47 	vmov.f32	s5, s14
 801414e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014152:	ee13 2a10 	vmov	r2, s6
 8014156:	9311      	str	r3, [sp, #68]	@ 0x44
 8014158:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801415a:	eeb0 3a67 	vmov.f32	s6, s15
 801415e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014162:	9a03      	ldr	r2, [sp, #12]
 8014164:	9312      	str	r3, [sp, #72]	@ 0x48
 8014166:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014168:	bf08      	it	eq
 801416a:	4613      	moveq	r3, r2
 801416c:	e789      	b.n	8014082 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801416e:	140f      	asrs	r7, r1, #16
 8014170:	d426      	bmi.n	80141c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014172:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014176:	42bd      	cmp	r5, r7
 8014178:	dd22      	ble.n	80141c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801417a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801417e:	d41f      	bmi.n	80141c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014180:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014184:	4560      	cmp	r0, ip
 8014186:	dd1b      	ble.n	80141c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014188:	9800      	ldr	r0, [sp, #0]
 801418a:	b22d      	sxth	r5, r5
 801418c:	fb0c 0505 	mla	r5, ip, r5, r0
 8014190:	5de8      	ldrb	r0, [r5, r7]
 8014192:	9d01      	ldr	r5, [sp, #4]
 8014194:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8014198:	0e07      	lsrs	r7, r0, #24
 801419a:	2fff      	cmp	r7, #255	@ 0xff
 801419c:	d116      	bne.n	80141cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801419e:	f06f 0501 	mvn.w	r5, #1
 80141a2:	fb05 f706 	mul.w	r7, r5, r6
 80141a6:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80141aa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80141ae:	0945      	lsrs	r5, r0, #5
 80141b0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80141b4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80141b8:	ea4c 0505 	orr.w	r5, ip, r5
 80141bc:	4305      	orrs	r5, r0
 80141be:	53e5      	strh	r5, [r4, r7]
 80141c0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80141c2:	3e01      	subs	r6, #1
 80141c4:	4401      	add	r1, r0
 80141c6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80141c8:	4402      	add	r2, r0
 80141ca:	e78e      	b.n	80140ea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80141cc:	b2fd      	uxtb	r5, r7
 80141ce:	2f00      	cmp	r7, #0
 80141d0:	d0f6      	beq.n	80141c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80141d2:	f06f 0701 	mvn.w	r7, #1
 80141d6:	fa1f f985 	uxth.w	r9, r5
 80141da:	43ed      	mvns	r5, r5
 80141dc:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80141e0:	4377      	muls	r7, r6
 80141e2:	fb1a fa09 	smulbb	sl, sl, r9
 80141e6:	b2ed      	uxtb	r5, r5
 80141e8:	f834 8007 	ldrh.w	r8, [r4, r7]
 80141ec:	9702      	str	r7, [sp, #8]
 80141ee:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80141f2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80141f6:	fb17 f709 	smulbb	r7, r7, r9
 80141fa:	b2c0      	uxtb	r0, r0
 80141fc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014200:	fb10 f009 	smulbb	r0, r0, r9
 8014204:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014208:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801420c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014210:	fa1f fc8c 	uxth.w	ip, ip
 8014214:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014218:	fa5f f888 	uxtb.w	r8, r8
 801421c:	fb07 a705 	mla	r7, r7, r5, sl
 8014220:	fb08 0005 	mla	r0, r8, r5, r0
 8014224:	f10c 0501 	add.w	r5, ip, #1
 8014228:	b2bf      	uxth	r7, r7
 801422a:	b280      	uxth	r0, r0
 801422c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014230:	f100 0a01 	add.w	sl, r0, #1
 8014234:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014238:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801423c:	9802      	ldr	r0, [sp, #8]
 801423e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014242:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014246:	f107 0a01 	add.w	sl, r7, #1
 801424a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801424e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014252:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014256:	ea4c 0c0a 	orr.w	ip, ip, sl
 801425a:	f824 c000 	strh.w	ip, [r4, r0]
 801425e:	e7af      	b.n	80141c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014260:	f04f 0800 	mov.w	r8, #0
 8014264:	eba3 0008 	sub.w	r0, r3, r8
 8014268:	2800      	cmp	r0, #0
 801426a:	f77f af41 	ble.w	80140f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801426e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014272:	1410      	asrs	r0, r2, #16
 8014274:	9f00      	ldr	r7, [sp, #0]
 8014276:	140d      	asrs	r5, r1, #16
 8014278:	fb06 7000 	mla	r0, r6, r0, r7
 801427c:	5d40      	ldrb	r0, [r0, r5]
 801427e:	9d01      	ldr	r5, [sp, #4]
 8014280:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014284:	0e2e      	lsrs	r6, r5, #24
 8014286:	2eff      	cmp	r6, #255	@ 0xff
 8014288:	d112      	bne.n	80142b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801428a:	482c      	ldr	r0, [pc, #176]	@ (801433c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801428c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014290:	0968      	lsrs	r0, r5, #5
 8014292:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014296:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801429a:	4330      	orrs	r0, r6
 801429c:	4328      	orrs	r0, r5
 801429e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80142a2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80142a4:	f108 0801 	add.w	r8, r8, #1
 80142a8:	4401      	add	r1, r0
 80142aa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80142ac:	4402      	add	r2, r0
 80142ae:	e7d9      	b.n	8014264 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80142b0:	b2f0      	uxtb	r0, r6
 80142b2:	2e00      	cmp	r6, #0
 80142b4:	d0f5      	beq.n	80142a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80142b6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80142ba:	fa1f f980 	uxth.w	r9, r0
 80142be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80142c2:	43c0      	mvns	r0, r0
 80142c4:	ea4f 272c 	mov.w	r7, ip, asr #8
 80142c8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80142cc:	fb16 f609 	smulbb	r6, r6, r9
 80142d0:	b2c0      	uxtb	r0, r0
 80142d2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80142d6:	b2ed      	uxtb	r5, r5
 80142d8:	fb1a fa09 	smulbb	sl, sl, r9
 80142dc:	fb07 6700 	mla	r7, r7, r0, r6
 80142e0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80142e4:	fb15 f509 	smulbb	r5, r5, r9
 80142e8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80142ec:	b2bf      	uxth	r7, r7
 80142ee:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80142f2:	fa5f fc8c 	uxtb.w	ip, ip
 80142f6:	fb06 a600 	mla	r6, r6, r0, sl
 80142fa:	fb0c 5500 	mla	r5, ip, r0, r5
 80142fe:	1c78      	adds	r0, r7, #1
 8014300:	b2b6      	uxth	r6, r6
 8014302:	b2ad      	uxth	r5, r5
 8014304:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014308:	f105 0a01 	add.w	sl, r5, #1
 801430c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014310:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014314:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014318:	ea4a 0707 	orr.w	r7, sl, r7
 801431c:	f106 0a01 	add.w	sl, r6, #1
 8014320:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014324:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014328:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801432c:	ea47 070a 	orr.w	r7, r7, sl
 8014330:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014334:	e7b5      	b.n	80142a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8014336:	b005      	add	sp, #20
 8014338:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801433c:	fffff800 	.word	0xfffff800

08014340 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014344:	b087      	sub	sp, #28
 8014346:	468b      	mov	fp, r1
 8014348:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801434c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801434e:	9204      	str	r2, [sp, #16]
 8014350:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014354:	6861      	ldr	r1, [r4, #4]
 8014356:	9205      	str	r2, [sp, #20]
 8014358:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801435c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8014360:	fb01 2000 	mla	r0, r1, r0, r2
 8014364:	6822      	ldr	r2, [r4, #0]
 8014366:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801436a:	f8de 2000 	ldr.w	r2, [lr]
 801436e:	9201      	str	r2, [sp, #4]
 8014370:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014374:	9202      	str	r2, [sp, #8]
 8014376:	f1bb 0f00 	cmp.w	fp, #0
 801437a:	dc03      	bgt.n	8014384 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801437c:	9a04      	ldr	r2, [sp, #16]
 801437e:	2a00      	cmp	r2, #0
 8014380:	f340 8142 	ble.w	8014608 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014384:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014386:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801438a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801438e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014390:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014394:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014398:	2b00      	cmp	r3, #0
 801439a:	dd0e      	ble.n	80143ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801439c:	140c      	asrs	r4, r1, #16
 801439e:	d405      	bmi.n	80143ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80143a0:	42bc      	cmp	r4, r7
 80143a2:	da03      	bge.n	80143ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80143a4:	1414      	asrs	r4, r2, #16
 80143a6:	d401      	bmi.n	80143ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80143a8:	42b4      	cmp	r4, r6
 80143aa:	db07      	blt.n	80143bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80143ac:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80143ae:	3b01      	subs	r3, #1
 80143b0:	3002      	adds	r0, #2
 80143b2:	4421      	add	r1, r4
 80143b4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80143b6:	4422      	add	r2, r4
 80143b8:	e7ee      	b.n	8014398 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80143ba:	d019      	beq.n	80143f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80143bc:	1e5c      	subs	r4, r3, #1
 80143be:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80143c0:	fb05 1504 	mla	r5, r5, r4, r1
 80143c4:	142d      	asrs	r5, r5, #16
 80143c6:	d409      	bmi.n	80143dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80143c8:	42bd      	cmp	r5, r7
 80143ca:	da07      	bge.n	80143dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80143cc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80143ce:	fb05 2404 	mla	r4, r5, r4, r2
 80143d2:	1424      	asrs	r4, r4, #16
 80143d4:	d402      	bmi.n	80143dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80143d6:	42b4      	cmp	r4, r6
 80143d8:	f2c0 80b1 	blt.w	801453e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80143dc:	f04f 0800 	mov.w	r8, #0
 80143e0:	eb03 0408 	add.w	r4, r3, r8
 80143e4:	2c00      	cmp	r4, #0
 80143e6:	dc3e      	bgt.n	8014466 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80143e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80143ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80143f0:	f1bb 0f00 	cmp.w	fp, #0
 80143f4:	f340 8108 	ble.w	8014608 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80143f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80143fc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80143fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014402:	f1bb 0b01 	subs.w	fp, fp, #1
 8014406:	eeb0 6a62 	vmov.f32	s12, s5
 801440a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801440e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014412:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014416:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801441a:	eeb0 6a43 	vmov.f32	s12, s6
 801441e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014422:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014426:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801442a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801442e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014432:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014436:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801443a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801443e:	ee12 2a90 	vmov	r2, s5
 8014442:	eef0 2a47 	vmov.f32	s5, s14
 8014446:	fb92 f3f3 	sdiv	r3, r2, r3
 801444a:	ee13 2a10 	vmov	r2, s6
 801444e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014450:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014452:	eeb0 3a67 	vmov.f32	s6, s15
 8014456:	fb92 f3f3 	sdiv	r3, r2, r3
 801445a:	9a04      	ldr	r2, [sp, #16]
 801445c:	9314      	str	r3, [sp, #80]	@ 0x50
 801445e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014460:	bf08      	it	eq
 8014462:	4613      	moveq	r3, r2
 8014464:	e787      	b.n	8014376 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8014466:	140e      	asrs	r6, r1, #16
 8014468:	d462      	bmi.n	8014530 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801446a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801446e:	42b5      	cmp	r5, r6
 8014470:	dd5e      	ble.n	8014530 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014472:	1417      	asrs	r7, r2, #16
 8014474:	d45c      	bmi.n	8014530 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014476:	f8de 400c 	ldr.w	r4, [lr, #12]
 801447a:	42bc      	cmp	r4, r7
 801447c:	dd58      	ble.n	8014530 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801447e:	b22d      	sxth	r5, r5
 8014480:	9c02      	ldr	r4, [sp, #8]
 8014482:	fb07 6505 	mla	r5, r7, r5, r6
 8014486:	5d66      	ldrb	r6, [r4, r5]
 8014488:	2e00      	cmp	r6, #0
 801448a:	d051      	beq.n	8014530 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801448c:	9c01      	ldr	r4, [sp, #4]
 801448e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8014492:	f06f 0401 	mvn.w	r4, #1
 8014496:	fb04 f408 	mul.w	r4, r4, r8
 801449a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801449e:	5b05      	ldrh	r5, [r0, r4]
 80144a0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80144a4:	9403      	str	r4, [sp, #12]
 80144a6:	9c05      	ldr	r4, [sp, #20]
 80144a8:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80144ac:	4366      	muls	r6, r4
 80144ae:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80144b2:	1c74      	adds	r4, r6, #1
 80144b4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80144b8:	122e      	asrs	r6, r5, #8
 80144ba:	1224      	asrs	r4, r4, #8
 80144bc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80144c0:	00ed      	lsls	r5, r5, #3
 80144c2:	b2a7      	uxth	r7, r4
 80144c4:	43e4      	mvns	r4, r4
 80144c6:	b2ed      	uxtb	r5, r5
 80144c8:	b2e4      	uxtb	r4, r4
 80144ca:	fb16 f604 	smulbb	r6, r6, r4
 80144ce:	fb15 f504 	smulbb	r5, r5, r4
 80144d2:	fb0c 6c07 	mla	ip, ip, r7, r6
 80144d6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80144da:	fb1a fa04 	smulbb	sl, sl, r4
 80144de:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80144e2:	fa1f fc8c 	uxth.w	ip, ip
 80144e6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80144ea:	fa5f f989 	uxtb.w	r9, r9
 80144ee:	fb06 a607 	mla	r6, r6, r7, sl
 80144f2:	f10c 0401 	add.w	r4, ip, #1
 80144f6:	fb09 5507 	mla	r5, r9, r7, r5
 80144fa:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80144fe:	9c03      	ldr	r4, [sp, #12]
 8014500:	b2ad      	uxth	r5, r5
 8014502:	b2b6      	uxth	r6, r6
 8014504:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014508:	f105 0a01 	add.w	sl, r5, #1
 801450c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014510:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014514:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014518:	f106 0a01 	add.w	sl, r6, #1
 801451c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014520:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014524:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014528:	ea4c 0c0a 	orr.w	ip, ip, sl
 801452c:	f820 c004 	strh.w	ip, [r0, r4]
 8014530:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014532:	f108 38ff 	add.w	r8, r8, #4294967295
 8014536:	4421      	add	r1, r4
 8014538:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801453a:	4422      	add	r2, r4
 801453c:	e750      	b.n	80143e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801453e:	f04f 0900 	mov.w	r9, #0
 8014542:	eba3 0409 	sub.w	r4, r3, r9
 8014546:	2c00      	cmp	r4, #0
 8014548:	f77f af4e 	ble.w	80143e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801454c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014550:	140d      	asrs	r5, r1, #16
 8014552:	1414      	asrs	r4, r2, #16
 8014554:	fb06 5404 	mla	r4, r6, r4, r5
 8014558:	9d02      	ldr	r5, [sp, #8]
 801455a:	5d2e      	ldrb	r6, [r5, r4]
 801455c:	2e00      	cmp	r6, #0
 801455e:	d04c      	beq.n	80145fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8014560:	9d01      	ldr	r5, [sp, #4]
 8014562:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8014566:	9c05      	ldr	r4, [sp, #20]
 8014568:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801456c:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014570:	4366      	muls	r6, r4
 8014572:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014576:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801457a:	1c74      	adds	r4, r6, #1
 801457c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014580:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014584:	122e      	asrs	r6, r5, #8
 8014586:	1224      	asrs	r4, r4, #8
 8014588:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801458c:	00ed      	lsls	r5, r5, #3
 801458e:	b2a7      	uxth	r7, r4
 8014590:	43e4      	mvns	r4, r4
 8014592:	b2ed      	uxtb	r5, r5
 8014594:	b2e4      	uxtb	r4, r4
 8014596:	fb16 f604 	smulbb	r6, r6, r4
 801459a:	fb15 f504 	smulbb	r5, r5, r4
 801459e:	fb0c 6c07 	mla	ip, ip, r7, r6
 80145a2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80145a6:	fb1a fa04 	smulbb	sl, sl, r4
 80145aa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80145ae:	fa1f fc8c 	uxth.w	ip, ip
 80145b2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80145b6:	fa5f f888 	uxtb.w	r8, r8
 80145ba:	fb06 a607 	mla	r6, r6, r7, sl
 80145be:	f10c 0401 	add.w	r4, ip, #1
 80145c2:	fb08 5507 	mla	r5, r8, r7, r5
 80145c6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80145ca:	b2ad      	uxth	r5, r5
 80145cc:	b2b6      	uxth	r6, r6
 80145ce:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80145d2:	f105 0a01 	add.w	sl, r5, #1
 80145d6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80145da:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80145de:	ea4a 0c0c 	orr.w	ip, sl, ip
 80145e2:	f106 0a01 	add.w	sl, r6, #1
 80145e6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80145ea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80145ee:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80145f2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80145f6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80145fa:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80145fc:	f109 0901 	add.w	r9, r9, #1
 8014600:	4421      	add	r1, r4
 8014602:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014604:	4422      	add	r2, r4
 8014606:	e79c      	b.n	8014542 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8014608:	b007      	add	sp, #28
 801460a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801460e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801460e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014612:	b085      	sub	sp, #20
 8014614:	468b      	mov	fp, r1
 8014616:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801461a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801461c:	9203      	str	r2, [sp, #12]
 801461e:	6861      	ldr	r1, [r4, #4]
 8014620:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8014624:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8014628:	fb01 2000 	mla	r0, r1, r0, r2
 801462c:	6822      	ldr	r2, [r4, #0]
 801462e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014632:	f8d8 2000 	ldr.w	r2, [r8]
 8014636:	9200      	str	r2, [sp, #0]
 8014638:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801463c:	9201      	str	r2, [sp, #4]
 801463e:	f1bb 0f00 	cmp.w	fp, #0
 8014642:	dc03      	bgt.n	801464c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014644:	9a03      	ldr	r2, [sp, #12]
 8014646:	2a00      	cmp	r2, #0
 8014648:	f340 8146 	ble.w	80148d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801464c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801464e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014652:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014656:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014658:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801465c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014660:	2b00      	cmp	r3, #0
 8014662:	dd0e      	ble.n	8014682 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014664:	140c      	asrs	r4, r1, #16
 8014666:	d405      	bmi.n	8014674 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014668:	42bc      	cmp	r4, r7
 801466a:	da03      	bge.n	8014674 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801466c:	1414      	asrs	r4, r2, #16
 801466e:	d401      	bmi.n	8014674 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014670:	42b4      	cmp	r4, r6
 8014672:	db07      	blt.n	8014684 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014674:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014676:	3b01      	subs	r3, #1
 8014678:	3002      	adds	r0, #2
 801467a:	4421      	add	r1, r4
 801467c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801467e:	4422      	add	r2, r4
 8014680:	e7ee      	b.n	8014660 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014682:	d017      	beq.n	80146b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014684:	1e5c      	subs	r4, r3, #1
 8014686:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014688:	fb05 1504 	mla	r5, r5, r4, r1
 801468c:	142d      	asrs	r5, r5, #16
 801468e:	d409      	bmi.n	80146a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014690:	42bd      	cmp	r5, r7
 8014692:	da07      	bge.n	80146a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014694:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014696:	fb05 2404 	mla	r4, r5, r4, r2
 801469a:	1424      	asrs	r4, r4, #16
 801469c:	d402      	bmi.n	80146a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801469e:	42b4      	cmp	r4, r6
 80146a0:	f2c0 80b3 	blt.w	801480a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80146a4:	2600      	movs	r6, #0
 80146a6:	199c      	adds	r4, r3, r6
 80146a8:	2c00      	cmp	r4, #0
 80146aa:	dc3e      	bgt.n	801472a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80146ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80146b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80146b4:	f1bb 0f00 	cmp.w	fp, #0
 80146b8:	f340 810e 	ble.w	80148d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80146bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80146c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80146c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80146c6:	f1bb 0b01 	subs.w	fp, fp, #1
 80146ca:	eeb0 6a62 	vmov.f32	s12, s5
 80146ce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80146d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80146d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80146da:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80146de:	eeb0 6a43 	vmov.f32	s12, s6
 80146e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80146e6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80146ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80146ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80146f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80146f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80146fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80146fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014702:	ee12 2a90 	vmov	r2, s5
 8014706:	eef0 2a47 	vmov.f32	s5, s14
 801470a:	fb92 f3f3 	sdiv	r3, r2, r3
 801470e:	ee13 2a10 	vmov	r2, s6
 8014712:	9311      	str	r3, [sp, #68]	@ 0x44
 8014714:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014716:	eeb0 3a67 	vmov.f32	s6, s15
 801471a:	fb92 f3f3 	sdiv	r3, r2, r3
 801471e:	9a03      	ldr	r2, [sp, #12]
 8014720:	9312      	str	r3, [sp, #72]	@ 0x48
 8014722:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014724:	bf08      	it	eq
 8014726:	4613      	moveq	r3, r2
 8014728:	e789      	b.n	801463e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801472a:	140f      	asrs	r7, r1, #16
 801472c:	d418      	bmi.n	8014760 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801472e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014732:	42bd      	cmp	r5, r7
 8014734:	dd14      	ble.n	8014760 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014736:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801473a:	d411      	bmi.n	8014760 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801473c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8014740:	4564      	cmp	r4, ip
 8014742:	dd0d      	ble.n	8014760 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014744:	b22d      	sxth	r5, r5
 8014746:	9c01      	ldr	r4, [sp, #4]
 8014748:	fb0c 7505 	mla	r5, ip, r5, r7
 801474c:	5d64      	ldrb	r4, [r4, r5]
 801474e:	2cff      	cmp	r4, #255	@ 0xff
 8014750:	d10c      	bne.n	801476c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014752:	9c00      	ldr	r4, [sp, #0]
 8014754:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8014758:	f06f 0401 	mvn.w	r4, #1
 801475c:	4374      	muls	r4, r6
 801475e:	5305      	strh	r5, [r0, r4]
 8014760:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014762:	3e01      	subs	r6, #1
 8014764:	4421      	add	r1, r4
 8014766:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014768:	4422      	add	r2, r4
 801476a:	e79c      	b.n	80146a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801476c:	2c00      	cmp	r4, #0
 801476e:	d0f7      	beq.n	8014760 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014770:	9f00      	ldr	r7, [sp, #0]
 8014772:	fa1f fc84 	uxth.w	ip, r4
 8014776:	43e4      	mvns	r4, r4
 8014778:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801477c:	f06f 0501 	mvn.w	r5, #1
 8014780:	b2e4      	uxtb	r4, r4
 8014782:	4375      	muls	r5, r6
 8014784:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8014788:	9502      	str	r5, [sp, #8]
 801478a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801478e:	5b45      	ldrh	r5, [r0, r5]
 8014790:	122f      	asrs	r7, r5, #8
 8014792:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014796:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801479a:	00ed      	lsls	r5, r5, #3
 801479c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80147a0:	fb17 f704 	smulbb	r7, r7, r4
 80147a4:	b2ed      	uxtb	r5, r5
 80147a6:	fb1a fa04 	smulbb	sl, sl, r4
 80147aa:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80147ae:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80147b2:	fb15 f504 	smulbb	r5, r5, r4
 80147b6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80147ba:	fa1f fe8e 	uxth.w	lr, lr
 80147be:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80147c2:	fa5f f989 	uxtb.w	r9, r9
 80147c6:	fb07 a70c 	mla	r7, r7, ip, sl
 80147ca:	f10e 0401 	add.w	r4, lr, #1
 80147ce:	fb09 550c 	mla	r5, r9, ip, r5
 80147d2:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80147d6:	9c02      	ldr	r4, [sp, #8]
 80147d8:	b2ad      	uxth	r5, r5
 80147da:	b2bf      	uxth	r7, r7
 80147dc:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80147e0:	f105 0a01 	add.w	sl, r5, #1
 80147e4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80147e8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80147ec:	ea4a 0e0e 	orr.w	lr, sl, lr
 80147f0:	f107 0a01 	add.w	sl, r7, #1
 80147f4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80147f8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80147fc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014800:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014804:	f820 e004 	strh.w	lr, [r0, r4]
 8014808:	e7aa      	b.n	8014760 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801480a:	f04f 0900 	mov.w	r9, #0
 801480e:	eba3 0409 	sub.w	r4, r3, r9
 8014812:	2c00      	cmp	r4, #0
 8014814:	f77f af4a 	ble.w	80146ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014818:	1414      	asrs	r4, r2, #16
 801481a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801481e:	140d      	asrs	r5, r1, #16
 8014820:	fb06 5504 	mla	r5, r6, r4, r5
 8014824:	9c01      	ldr	r4, [sp, #4]
 8014826:	5d64      	ldrb	r4, [r4, r5]
 8014828:	2cff      	cmp	r4, #255	@ 0xff
 801482a:	d10b      	bne.n	8014844 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801482c:	9c00      	ldr	r4, [sp, #0]
 801482e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8014832:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8014836:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014838:	f109 0901 	add.w	r9, r9, #1
 801483c:	4421      	add	r1, r4
 801483e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014840:	4422      	add	r2, r4
 8014842:	e7e4      	b.n	801480e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8014844:	2c00      	cmp	r4, #0
 8014846:	d0f6      	beq.n	8014836 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014848:	9e00      	ldr	r6, [sp, #0]
 801484a:	b2a7      	uxth	r7, r4
 801484c:	43e4      	mvns	r4, r4
 801484e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8014852:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014856:	b2e4      	uxtb	r4, r4
 8014858:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801485c:	122e      	asrs	r6, r5, #8
 801485e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014862:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014866:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801486a:	00ed      	lsls	r5, r5, #3
 801486c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014870:	fb16 f604 	smulbb	r6, r6, r4
 8014874:	b2ed      	uxtb	r5, r5
 8014876:	fb1a fa04 	smulbb	sl, sl, r4
 801487a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801487e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014882:	fb15 f504 	smulbb	r5, r5, r4
 8014886:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801488a:	fa1f fc8c 	uxth.w	ip, ip
 801488e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014892:	fa5f fe8e 	uxtb.w	lr, lr
 8014896:	fb06 a607 	mla	r6, r6, r7, sl
 801489a:	f10c 0401 	add.w	r4, ip, #1
 801489e:	fb0e 5507 	mla	r5, lr, r7, r5
 80148a2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80148a6:	b2ad      	uxth	r5, r5
 80148a8:	b2b6      	uxth	r6, r6
 80148aa:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80148ae:	f105 0a01 	add.w	sl, r5, #1
 80148b2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80148b6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80148ba:	ea4a 0c0c 	orr.w	ip, sl, ip
 80148be:	f106 0a01 	add.w	sl, r6, #1
 80148c2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80148c6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80148ca:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80148ce:	ea4c 0c0a 	orr.w	ip, ip, sl
 80148d2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80148d6:	e7ae      	b.n	8014836 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80148d8:	b005      	add	sp, #20
 80148da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080148de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80148de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148e2:	b085      	sub	sp, #20
 80148e4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80148e6:	9203      	str	r2, [sp, #12]
 80148e8:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 80148ec:	9100      	str	r1, [sp, #0]
 80148ee:	9201      	str	r2, [sp, #4]
 80148f0:	6841      	ldr	r1, [r0, #4]
 80148f2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80148f6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80148fa:	fb01 2404 	mla	r4, r1, r4, r2
 80148fe:	6802      	ldr	r2, [r0, #0]
 8014900:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014904:	f8de 2000 	ldr.w	r2, [lr]
 8014908:	9202      	str	r2, [sp, #8]
 801490a:	9a01      	ldr	r2, [sp, #4]
 801490c:	43d6      	mvns	r6, r2
 801490e:	b2f6      	uxtb	r6, r6
 8014910:	9a00      	ldr	r2, [sp, #0]
 8014912:	2a00      	cmp	r2, #0
 8014914:	dc03      	bgt.n	801491e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014916:	9a03      	ldr	r2, [sp, #12]
 8014918:	2a00      	cmp	r2, #0
 801491a:	f340 8124 	ble.w	8014b66 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801491e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014920:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014924:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014928:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801492a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801492e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014932:	2b00      	cmp	r3, #0
 8014934:	dd0e      	ble.n	8014954 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014936:	1408      	asrs	r0, r1, #16
 8014938:	d405      	bmi.n	8014946 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801493a:	4560      	cmp	r0, ip
 801493c:	da03      	bge.n	8014946 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801493e:	1410      	asrs	r0, r2, #16
 8014940:	d401      	bmi.n	8014946 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014942:	42b8      	cmp	r0, r7
 8014944:	db07      	blt.n	8014956 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014946:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014948:	3b01      	subs	r3, #1
 801494a:	3402      	adds	r4, #2
 801494c:	4401      	add	r1, r0
 801494e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014950:	4402      	add	r2, r0
 8014952:	e7ee      	b.n	8014932 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014954:	d06e      	beq.n	8014a34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014956:	1e58      	subs	r0, r3, #1
 8014958:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801495a:	fb05 1500 	mla	r5, r5, r0, r1
 801495e:	142d      	asrs	r5, r5, #16
 8014960:	d45c      	bmi.n	8014a1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014962:	4565      	cmp	r5, ip
 8014964:	da5a      	bge.n	8014a1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014966:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014968:	fb05 2000 	mla	r0, r5, r0, r2
 801496c:	1400      	asrs	r0, r0, #16
 801496e:	d455      	bmi.n	8014a1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014970:	42b8      	cmp	r0, r7
 8014972:	da53      	bge.n	8014a1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014974:	4699      	mov	r9, r3
 8014976:	46a2      	mov	sl, r4
 8014978:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801497c:	f1b9 0f00 	cmp.w	r9, #0
 8014980:	dd54      	ble.n	8014a2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014982:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014986:	140d      	asrs	r5, r1, #16
 8014988:	1410      	asrs	r0, r2, #16
 801498a:	f109 39ff 	add.w	r9, r9, #4294967295
 801498e:	fb07 5000 	mla	r0, r7, r0, r5
 8014992:	9d02      	ldr	r5, [sp, #8]
 8014994:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014998:	f8ba 5000 	ldrh.w	r5, [sl]
 801499c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80149a0:	122f      	asrs	r7, r5, #8
 80149a2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80149a6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80149aa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80149ae:	00ed      	lsls	r5, r5, #3
 80149b0:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 80149b4:	fb17 f706 	smulbb	r7, r7, r6
 80149b8:	b2ed      	uxtb	r5, r5
 80149ba:	fb18 f806 	smulbb	r8, r8, r6
 80149be:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80149c2:	10c7      	asrs	r7, r0, #3
 80149c4:	fb15 f506 	smulbb	r5, r5, r6
 80149c8:	00c0      	lsls	r0, r0, #3
 80149ca:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80149ce:	fa1f fc8c 	uxth.w	ip, ip
 80149d2:	b2c0      	uxtb	r0, r0
 80149d4:	fb07 870b 	mla	r7, r7, fp, r8
 80149d8:	fb00 500b 	mla	r0, r0, fp, r5
 80149dc:	f10c 0501 	add.w	r5, ip, #1
 80149e0:	b2bf      	uxth	r7, r7
 80149e2:	b280      	uxth	r0, r0
 80149e4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80149e8:	f107 0801 	add.w	r8, r7, #1
 80149ec:	1c45      	adds	r5, r0, #1
 80149ee:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80149f2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80149f6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80149fa:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80149fc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014a00:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014a04:	4401      	add	r1, r0
 8014a06:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8014a0a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014a0c:	ea45 0c0c 	orr.w	ip, r5, ip
 8014a10:	4402      	add	r2, r0
 8014a12:	ea4c 0c08 	orr.w	ip, ip, r8
 8014a16:	f82a cb02 	strh.w	ip, [sl], #2
 8014a1a:	e7af      	b.n	801497c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014a1c:	f04f 0800 	mov.w	r8, #0
 8014a20:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8014a24:	eb03 0008 	add.w	r0, r3, r8
 8014a28:	2800      	cmp	r0, #0
 8014a2a:	dc41      	bgt.n	8014ab0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014a2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014a30:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014a34:	9b00      	ldr	r3, [sp, #0]
 8014a36:	2b00      	cmp	r3, #0
 8014a38:	f340 8095 	ble.w	8014b66 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014a3c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8014a40:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a42:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014a46:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014a4a:	eef0 6a62 	vmov.f32	s13, s5
 8014a4e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014a52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014a56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014a5a:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8014a5e:	eef0 6a43 	vmov.f32	s13, s6
 8014a62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014a66:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014a6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014a6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014a72:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014a76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014a7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014a7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014a82:	ee12 2a90 	vmov	r2, s5
 8014a86:	eef0 2a47 	vmov.f32	s5, s14
 8014a8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a8e:	ee13 2a10 	vmov	r2, s6
 8014a92:	9311      	str	r3, [sp, #68]	@ 0x44
 8014a94:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a96:	eeb0 3a67 	vmov.f32	s6, s15
 8014a9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a9e:	9312      	str	r3, [sp, #72]	@ 0x48
 8014aa0:	9b00      	ldr	r3, [sp, #0]
 8014aa2:	9a03      	ldr	r2, [sp, #12]
 8014aa4:	3b01      	subs	r3, #1
 8014aa6:	9300      	str	r3, [sp, #0]
 8014aa8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014aaa:	bf08      	it	eq
 8014aac:	4613      	moveq	r3, r2
 8014aae:	e72f      	b.n	8014910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014ab0:	140f      	asrs	r7, r1, #16
 8014ab2:	d451      	bmi.n	8014b58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014ab4:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014ab8:	42bd      	cmp	r5, r7
 8014aba:	dd4d      	ble.n	8014b58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014abc:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014ac0:	d44a      	bmi.n	8014b58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014ac2:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014ac6:	4560      	cmp	r0, ip
 8014ac8:	dd46      	ble.n	8014b58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014aca:	b22d      	sxth	r5, r5
 8014acc:	9802      	ldr	r0, [sp, #8]
 8014ace:	fb0c 7505 	mla	r5, ip, r5, r7
 8014ad2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8014ad6:	f06f 0501 	mvn.w	r5, #1
 8014ada:	fb05 fb08 	mul.w	fp, r5, r8
 8014ade:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014ae2:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014ae6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014aea:	122f      	asrs	r7, r5, #8
 8014aec:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014af0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014af4:	00ed      	lsls	r5, r5, #3
 8014af6:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8014afa:	fb17 f706 	smulbb	r7, r7, r6
 8014afe:	b2ed      	uxtb	r5, r5
 8014b00:	fb19 f906 	smulbb	r9, r9, r6
 8014b04:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014b08:	10c7      	asrs	r7, r0, #3
 8014b0a:	fb15 f506 	smulbb	r5, r5, r6
 8014b0e:	00c0      	lsls	r0, r0, #3
 8014b10:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014b14:	fa1f fc8c 	uxth.w	ip, ip
 8014b18:	b2c0      	uxtb	r0, r0
 8014b1a:	fb07 970a 	mla	r7, r7, sl, r9
 8014b1e:	fb00 500a 	mla	r0, r0, sl, r5
 8014b22:	f10c 0501 	add.w	r5, ip, #1
 8014b26:	b2bf      	uxth	r7, r7
 8014b28:	b280      	uxth	r0, r0
 8014b2a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014b2e:	f107 0901 	add.w	r9, r7, #1
 8014b32:	1c45      	adds	r5, r0, #1
 8014b34:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014b38:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014b3c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014b40:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014b44:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014b48:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8014b4c:	ea45 0c0c 	orr.w	ip, r5, ip
 8014b50:	ea4c 0c09 	orr.w	ip, ip, r9
 8014b54:	f824 c00b 	strh.w	ip, [r4, fp]
 8014b58:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014b5a:	f108 38ff 	add.w	r8, r8, #4294967295
 8014b5e:	4401      	add	r1, r0
 8014b60:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014b62:	4402      	add	r2, r0
 8014b64:	e75e      	b.n	8014a24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8014b66:	b005      	add	sp, #20
 8014b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014b6c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b70:	b085      	sub	sp, #20
 8014b72:	4693      	mov	fp, r2
 8014b74:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014b78:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014b7a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8014b7c:	6870      	ldr	r0, [r6, #4]
 8014b7e:	9101      	str	r1, [sp, #4]
 8014b80:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014b84:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8014b88:	fb00 2404 	mla	r4, r0, r4, r2
 8014b8c:	6832      	ldr	r2, [r6, #0]
 8014b8e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014b92:	682a      	ldr	r2, [r5, #0]
 8014b94:	9202      	str	r2, [sp, #8]
 8014b96:	9a01      	ldr	r2, [sp, #4]
 8014b98:	2a00      	cmp	r2, #0
 8014b9a:	dc03      	bgt.n	8014ba4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014b9c:	f1bb 0f00 	cmp.w	fp, #0
 8014ba0:	f340 809a 	ble.w	8014cd8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014ba4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014ba6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014baa:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014bae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014bb0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014bb4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014bb8:	2b00      	cmp	r3, #0
 8014bba:	dd0c      	ble.n	8014bd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014bbc:	1406      	asrs	r6, r0, #16
 8014bbe:	d405      	bmi.n	8014bcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014bc0:	454e      	cmp	r6, r9
 8014bc2:	da03      	bge.n	8014bcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014bc4:	1416      	asrs	r6, r2, #16
 8014bc6:	d401      	bmi.n	8014bcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014bc8:	4546      	cmp	r6, r8
 8014bca:	db05      	blt.n	8014bd8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014bcc:	4470      	add	r0, lr
 8014bce:	4462      	add	r2, ip
 8014bd0:	3b01      	subs	r3, #1
 8014bd2:	3402      	adds	r4, #2
 8014bd4:	e7f0      	b.n	8014bb8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014bd6:	d00f      	beq.n	8014bf8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014bd8:	1e5e      	subs	r6, r3, #1
 8014bda:	fb0e 0706 	mla	r7, lr, r6, r0
 8014bde:	143f      	asrs	r7, r7, #16
 8014be0:	d541      	bpl.n	8014c66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8014be2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014be6:	4698      	mov	r8, r3
 8014be8:	9603      	str	r6, [sp, #12]
 8014bea:	f1b8 0f00 	cmp.w	r8, #0
 8014bee:	dc56      	bgt.n	8014c9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8014bf0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014bf4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014bf8:	9b01      	ldr	r3, [sp, #4]
 8014bfa:	2b00      	cmp	r3, #0
 8014bfc:	dd6c      	ble.n	8014cd8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014bfe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014c02:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014c04:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014c08:	eeb0 6a62 	vmov.f32	s12, s5
 8014c0c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014c10:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014c14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014c18:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014c1c:	eeb0 6a43 	vmov.f32	s12, s6
 8014c20:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014c24:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014c28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014c2c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014c30:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014c34:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014c38:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014c3c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014c40:	ee12 2a90 	vmov	r2, s5
 8014c44:	eef0 2a47 	vmov.f32	s5, s14
 8014c48:	fb92 fef3 	sdiv	lr, r2, r3
 8014c4c:	ee13 2a10 	vmov	r2, s6
 8014c50:	eeb0 3a67 	vmov.f32	s6, s15
 8014c54:	fb92 fcf3 	sdiv	ip, r2, r3
 8014c58:	9b01      	ldr	r3, [sp, #4]
 8014c5a:	3b01      	subs	r3, #1
 8014c5c:	9301      	str	r3, [sp, #4]
 8014c5e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014c60:	bf08      	it	eq
 8014c62:	465b      	moveq	r3, fp
 8014c64:	e797      	b.n	8014b96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014c66:	454f      	cmp	r7, r9
 8014c68:	dabb      	bge.n	8014be2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014c6a:	fb0c 2606 	mla	r6, ip, r6, r2
 8014c6e:	1436      	asrs	r6, r6, #16
 8014c70:	d4b7      	bmi.n	8014be2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014c72:	4546      	cmp	r6, r8
 8014c74:	dab5      	bge.n	8014be2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014c76:	461e      	mov	r6, r3
 8014c78:	46a0      	mov	r8, r4
 8014c7a:	2e00      	cmp	r6, #0
 8014c7c:	ddb8      	ble.n	8014bf0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014c7e:	1417      	asrs	r7, r2, #16
 8014c80:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014c84:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014c88:	9902      	ldr	r1, [sp, #8]
 8014c8a:	4470      	add	r0, lr
 8014c8c:	4462      	add	r2, ip
 8014c8e:	fb0a 9707 	mla	r7, sl, r7, r9
 8014c92:	3e01      	subs	r6, #1
 8014c94:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014c98:	f828 7b02 	strh.w	r7, [r8], #2
 8014c9c:	e7ed      	b.n	8014c7a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8014c9e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014ca2:	d414      	bmi.n	8014cce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014ca4:	68ae      	ldr	r6, [r5, #8]
 8014ca6:	454e      	cmp	r6, r9
 8014ca8:	dd11      	ble.n	8014cce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014caa:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014cae:	d40e      	bmi.n	8014cce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014cb0:	68ef      	ldr	r7, [r5, #12]
 8014cb2:	4557      	cmp	r7, sl
 8014cb4:	dd0b      	ble.n	8014cce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014cb6:	b236      	sxth	r6, r6
 8014cb8:	f06f 0101 	mvn.w	r1, #1
 8014cbc:	9f02      	ldr	r7, [sp, #8]
 8014cbe:	fb0a 9606 	mla	r6, sl, r6, r9
 8014cc2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014cc6:	fb01 f608 	mul.w	r6, r1, r8
 8014cca:	9903      	ldr	r1, [sp, #12]
 8014ccc:	538f      	strh	r7, [r1, r6]
 8014cce:	4470      	add	r0, lr
 8014cd0:	4462      	add	r2, ip
 8014cd2:	f108 38ff 	add.w	r8, r8, #4294967295
 8014cd6:	e788      	b.n	8014bea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014cd8:	b005      	add	sp, #20
 8014cda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014cde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014cde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ce2:	b087      	sub	sp, #28
 8014ce4:	468b      	mov	fp, r1
 8014ce6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014cea:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014cec:	9203      	str	r2, [sp, #12]
 8014cee:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014cf2:	6841      	ldr	r1, [r0, #4]
 8014cf4:	9204      	str	r2, [sp, #16]
 8014cf6:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8014cfa:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8014cfe:	fb01 2505 	mla	r5, r1, r5, r2
 8014d02:	6802      	ldr	r2, [r0, #0]
 8014d04:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8014d08:	f8d9 2000 	ldr.w	r2, [r9]
 8014d0c:	9201      	str	r2, [sp, #4]
 8014d0e:	f1bb 0f00 	cmp.w	fp, #0
 8014d12:	dc03      	bgt.n	8014d1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014d14:	9a03      	ldr	r2, [sp, #12]
 8014d16:	2a00      	cmp	r2, #0
 8014d18:	f340 8158 	ble.w	8014fcc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8014d1c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014d1e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014d22:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014d26:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014d28:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014d2c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014d30:	2b00      	cmp	r3, #0
 8014d32:	dd0e      	ble.n	8014d52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014d34:	1402      	asrs	r2, r0, #16
 8014d36:	d405      	bmi.n	8014d44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014d38:	42ba      	cmp	r2, r7
 8014d3a:	da03      	bge.n	8014d44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014d3c:	140a      	asrs	r2, r1, #16
 8014d3e:	d401      	bmi.n	8014d44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014d40:	42b2      	cmp	r2, r6
 8014d42:	db07      	blt.n	8014d54 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014d44:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014d46:	3b01      	subs	r3, #1
 8014d48:	3502      	adds	r5, #2
 8014d4a:	4410      	add	r0, r2
 8014d4c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014d4e:	4411      	add	r1, r2
 8014d50:	e7ee      	b.n	8014d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014d52:	d017      	beq.n	8014d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014d54:	1e5a      	subs	r2, r3, #1
 8014d56:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014d58:	fb04 0402 	mla	r4, r4, r2, r0
 8014d5c:	1424      	asrs	r4, r4, #16
 8014d5e:	d409      	bmi.n	8014d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014d60:	42bc      	cmp	r4, r7
 8014d62:	da07      	bge.n	8014d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014d64:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014d66:	fb04 1202 	mla	r2, r4, r2, r1
 8014d6a:	1412      	asrs	r2, r2, #16
 8014d6c:	d402      	bmi.n	8014d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014d6e:	42b2      	cmp	r2, r6
 8014d70:	f2c0 80bf 	blt.w	8014ef2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014d74:	2700      	movs	r7, #0
 8014d76:	19da      	adds	r2, r3, r7
 8014d78:	2a00      	cmp	r2, #0
 8014d7a:	dc3e      	bgt.n	8014dfa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014d7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014d80:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8014d84:	f1bb 0f00 	cmp.w	fp, #0
 8014d88:	f340 8120 	ble.w	8014fcc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8014d8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014d90:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014d96:	f1bb 0b01 	subs.w	fp, fp, #1
 8014d9a:	eeb0 6a62 	vmov.f32	s12, s5
 8014d9e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014da2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014da6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014daa:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014dae:	eeb0 6a43 	vmov.f32	s12, s6
 8014db2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014db6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014dba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014dbe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014dc2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014dc6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014dca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014dce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014dd2:	ee12 2a90 	vmov	r2, s5
 8014dd6:	eef0 2a47 	vmov.f32	s5, s14
 8014dda:	fb92 f3f3 	sdiv	r3, r2, r3
 8014dde:	ee13 2a10 	vmov	r2, s6
 8014de2:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014de4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014de6:	eeb0 3a67 	vmov.f32	s6, s15
 8014dea:	fb92 f3f3 	sdiv	r3, r2, r3
 8014dee:	9a03      	ldr	r2, [sp, #12]
 8014df0:	9314      	str	r3, [sp, #80]	@ 0x50
 8014df2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014df4:	bf08      	it	eq
 8014df6:	4613      	moveq	r3, r2
 8014df8:	e789      	b.n	8014d0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014dfa:	1406      	asrs	r6, r0, #16
 8014dfc:	d42d      	bmi.n	8014e5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014dfe:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8014e02:	42b4      	cmp	r4, r6
 8014e04:	dd29      	ble.n	8014e5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014e06:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8014e0a:	d426      	bmi.n	8014e5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014e0c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014e10:	4562      	cmp	r2, ip
 8014e12:	dd22      	ble.n	8014e5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014e14:	b224      	sxth	r4, r4
 8014e16:	9a01      	ldr	r2, [sp, #4]
 8014e18:	fb0c 6404 	mla	r4, ip, r4, r6
 8014e1c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8014e20:	0e22      	lsrs	r2, r4, #24
 8014e22:	d01a      	beq.n	8014e5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014e24:	9e04      	ldr	r6, [sp, #16]
 8014e26:	4372      	muls	r2, r6
 8014e28:	1c56      	adds	r6, r2, #1
 8014e2a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014e2e:	0a26      	lsrs	r6, r4, #8
 8014e30:	1212      	asrs	r2, r2, #8
 8014e32:	9605      	str	r6, [sp, #20]
 8014e34:	2aff      	cmp	r2, #255	@ 0xff
 8014e36:	d116      	bne.n	8014e66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8014e38:	f06f 0201 	mvn.w	r2, #1
 8014e3c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014e40:	fb02 fc07 	mul.w	ip, r2, r7
 8014e44:	0962      	lsrs	r2, r4, #5
 8014e46:	f026 0607 	bic.w	r6, r6, #7
 8014e4a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014e4e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014e52:	4316      	orrs	r6, r2
 8014e54:	4326      	orrs	r6, r4
 8014e56:	f825 600c 	strh.w	r6, [r5, ip]
 8014e5a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014e5c:	3f01      	subs	r7, #1
 8014e5e:	4410      	add	r0, r2
 8014e60:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014e62:	4411      	add	r1, r2
 8014e64:	e787      	b.n	8014d76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014e66:	f06f 0601 	mvn.w	r6, #1
 8014e6a:	fa1f fa82 	uxth.w	sl, r2
 8014e6e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8014e72:	43d2      	mvns	r2, r2
 8014e74:	437e      	muls	r6, r7
 8014e76:	b2e4      	uxtb	r4, r4
 8014e78:	fb1c fc0a 	smulbb	ip, ip, sl
 8014e7c:	b2d2      	uxtb	r2, r2
 8014e7e:	f835 8006 	ldrh.w	r8, [r5, r6]
 8014e82:	fb14 f40a 	smulbb	r4, r4, sl
 8014e86:	9602      	str	r6, [sp, #8]
 8014e88:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014e8c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014e90:	fb16 f60a 	smulbb	r6, r6, sl
 8014e94:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014e98:	fb0e ce02 	mla	lr, lr, r2, ip
 8014e9c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014ea0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014ea4:	fa1f fe8e 	uxth.w	lr, lr
 8014ea8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8014eac:	fa5f f888 	uxtb.w	r8, r8
 8014eb0:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014eb4:	fb08 4402 	mla	r4, r8, r2, r4
 8014eb8:	f10e 0201 	add.w	r2, lr, #1
 8014ebc:	fa1f fc8c 	uxth.w	ip, ip
 8014ec0:	b2a4      	uxth	r4, r4
 8014ec2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014ec6:	9a02      	ldr	r2, [sp, #8]
 8014ec8:	1c66      	adds	r6, r4, #1
 8014eca:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014ece:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014ed2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014ed6:	ea46 0e0e 	orr.w	lr, r6, lr
 8014eda:	f10c 0601 	add.w	r6, ip, #1
 8014ede:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014ee2:	0976      	lsrs	r6, r6, #5
 8014ee4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014ee8:	ea4e 0e06 	orr.w	lr, lr, r6
 8014eec:	f825 e002 	strh.w	lr, [r5, r2]
 8014ef0:	e7b3      	b.n	8014e5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014ef2:	f04f 0800 	mov.w	r8, #0
 8014ef6:	eba3 0208 	sub.w	r2, r3, r8
 8014efa:	2a00      	cmp	r2, #0
 8014efc:	f77f af3e 	ble.w	8014d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014f00:	1404      	asrs	r4, r0, #16
 8014f02:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8014f06:	140a      	asrs	r2, r1, #16
 8014f08:	fb06 4202 	mla	r2, r6, r2, r4
 8014f0c:	9c01      	ldr	r4, [sp, #4]
 8014f0e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8014f12:	0e22      	lsrs	r2, r4, #24
 8014f14:	d015      	beq.n	8014f42 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8014f16:	9e04      	ldr	r6, [sp, #16]
 8014f18:	4372      	muls	r2, r6
 8014f1a:	1c56      	adds	r6, r2, #1
 8014f1c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014f20:	0a26      	lsrs	r6, r4, #8
 8014f22:	1212      	asrs	r2, r2, #8
 8014f24:	2aff      	cmp	r2, #255	@ 0xff
 8014f26:	d113      	bne.n	8014f50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8014f28:	0962      	lsrs	r2, r4, #5
 8014f2a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014f2e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014f32:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014f36:	f026 0607 	bic.w	r6, r6, #7
 8014f3a:	4316      	orrs	r6, r2
 8014f3c:	4326      	orrs	r6, r4
 8014f3e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8014f42:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014f44:	f108 0801 	add.w	r8, r8, #1
 8014f48:	4410      	add	r0, r2
 8014f4a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014f4c:	4411      	add	r1, r2
 8014f4e:	e7d2      	b.n	8014ef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8014f50:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8014f54:	fa1f fa82 	uxth.w	sl, r2
 8014f58:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8014f5c:	43d2      	mvns	r2, r2
 8014f5e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014f62:	fb17 f70a 	smulbb	r7, r7, sl
 8014f66:	b2d2      	uxtb	r2, r2
 8014f68:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014f6c:	b2e4      	uxtb	r4, r4
 8014f6e:	b2f6      	uxtb	r6, r6
 8014f70:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014f74:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014f78:	fb14 f40a 	smulbb	r4, r4, sl
 8014f7c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014f80:	fa1f fc8c 	uxth.w	ip, ip
 8014f84:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014f88:	fb16 f60a 	smulbb	r6, r6, sl
 8014f8c:	fa5f fe8e 	uxtb.w	lr, lr
 8014f90:	fb0e 4402 	mla	r4, lr, r2, r4
 8014f94:	fb07 6702 	mla	r7, r7, r2, r6
 8014f98:	f10c 0201 	add.w	r2, ip, #1
 8014f9c:	b2a4      	uxth	r4, r4
 8014f9e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014fa2:	1c66      	adds	r6, r4, #1
 8014fa4:	b2bf      	uxth	r7, r7
 8014fa6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014faa:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014fae:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014fb2:	ea46 0c0c 	orr.w	ip, r6, ip
 8014fb6:	1c7e      	adds	r6, r7, #1
 8014fb8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014fbc:	0976      	lsrs	r6, r6, #5
 8014fbe:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014fc2:	ea4c 0c06 	orr.w	ip, ip, r6
 8014fc6:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8014fca:	e7ba      	b.n	8014f42 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8014fcc:	b007      	add	sp, #28
 8014fce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014fd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fd8:	b085      	sub	sp, #20
 8014fda:	468b      	mov	fp, r1
 8014fdc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014fe0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014fe2:	9203      	str	r2, [sp, #12]
 8014fe4:	6841      	ldr	r1, [r0, #4]
 8014fe6:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8014fea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014fee:	fb01 2404 	mla	r4, r1, r4, r2
 8014ff2:	6802      	ldr	r2, [r0, #0]
 8014ff4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014ff8:	f8d8 2000 	ldr.w	r2, [r8]
 8014ffc:	9201      	str	r2, [sp, #4]
 8014ffe:	f1bb 0f00 	cmp.w	fp, #0
 8015002:	dc03      	bgt.n	801500c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015004:	9a03      	ldr	r2, [sp, #12]
 8015006:	2a00      	cmp	r2, #0
 8015008:	f340 814f 	ble.w	80152aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801500c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801500e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015012:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015016:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015018:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801501c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015020:	2b00      	cmp	r3, #0
 8015022:	dd0e      	ble.n	8015042 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015024:	1408      	asrs	r0, r1, #16
 8015026:	d405      	bmi.n	8015034 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015028:	42b8      	cmp	r0, r7
 801502a:	da03      	bge.n	8015034 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801502c:	1410      	asrs	r0, r2, #16
 801502e:	d401      	bmi.n	8015034 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015030:	42b0      	cmp	r0, r6
 8015032:	db07      	blt.n	8015044 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015034:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015036:	3b01      	subs	r3, #1
 8015038:	3402      	adds	r4, #2
 801503a:	4401      	add	r1, r0
 801503c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801503e:	4402      	add	r2, r0
 8015040:	e7ee      	b.n	8015020 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015042:	d017      	beq.n	8015074 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015044:	1e58      	subs	r0, r3, #1
 8015046:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8015048:	fb05 1500 	mla	r5, r5, r0, r1
 801504c:	142d      	asrs	r5, r5, #16
 801504e:	d409      	bmi.n	8015064 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015050:	42bd      	cmp	r5, r7
 8015052:	da07      	bge.n	8015064 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015054:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8015056:	fb05 2000 	mla	r0, r5, r0, r2
 801505a:	1400      	asrs	r0, r0, #16
 801505c:	d402      	bmi.n	8015064 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801505e:	42b0      	cmp	r0, r6
 8015060:	f2c0 80ba 	blt.w	80151d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015064:	2600      	movs	r6, #0
 8015066:	1998      	adds	r0, r3, r6
 8015068:	2800      	cmp	r0, #0
 801506a:	dc3e      	bgt.n	80150ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801506c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015070:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015074:	f1bb 0f00 	cmp.w	fp, #0
 8015078:	f340 8117 	ble.w	80152aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801507c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015080:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015082:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015086:	f1bb 0b01 	subs.w	fp, fp, #1
 801508a:	eeb0 6a62 	vmov.f32	s12, s5
 801508e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015092:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015096:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801509a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801509e:	eeb0 6a43 	vmov.f32	s12, s6
 80150a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80150a6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80150aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80150ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80150b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80150b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80150ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80150be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80150c2:	ee12 2a90 	vmov	r2, s5
 80150c6:	eef0 2a47 	vmov.f32	s5, s14
 80150ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80150ce:	ee13 2a10 	vmov	r2, s6
 80150d2:	9311      	str	r3, [sp, #68]	@ 0x44
 80150d4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80150d6:	eeb0 3a67 	vmov.f32	s6, s15
 80150da:	fb92 f3f3 	sdiv	r3, r2, r3
 80150de:	9a03      	ldr	r2, [sp, #12]
 80150e0:	9312      	str	r3, [sp, #72]	@ 0x48
 80150e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80150e4:	bf08      	it	eq
 80150e6:	4613      	moveq	r3, r2
 80150e8:	e789      	b.n	8014ffe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80150ea:	140f      	asrs	r7, r1, #16
 80150ec:	d424      	bmi.n	8015138 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80150ee:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80150f2:	42bd      	cmp	r5, r7
 80150f4:	dd20      	ble.n	8015138 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80150f6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80150fa:	d41d      	bmi.n	8015138 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80150fc:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8015100:	4560      	cmp	r0, ip
 8015102:	dd19      	ble.n	8015138 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015104:	b22d      	sxth	r5, r5
 8015106:	9801      	ldr	r0, [sp, #4]
 8015108:	fb0c 7505 	mla	r5, ip, r5, r7
 801510c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8015110:	0e07      	lsrs	r7, r0, #24
 8015112:	2fff      	cmp	r7, #255	@ 0xff
 8015114:	d116      	bne.n	8015144 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015116:	f06f 0501 	mvn.w	r5, #1
 801511a:	fb05 f706 	mul.w	r7, r5, r6
 801511e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8015122:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015126:	0945      	lsrs	r5, r0, #5
 8015128:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801512c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015130:	ea4c 0505 	orr.w	r5, ip, r5
 8015134:	4305      	orrs	r5, r0
 8015136:	53e5      	strh	r5, [r4, r7]
 8015138:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801513a:	3e01      	subs	r6, #1
 801513c:	4401      	add	r1, r0
 801513e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015140:	4402      	add	r2, r0
 8015142:	e790      	b.n	8015066 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015144:	b2fd      	uxtb	r5, r7
 8015146:	2f00      	cmp	r7, #0
 8015148:	d0f6      	beq.n	8015138 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801514a:	f06f 0701 	mvn.w	r7, #1
 801514e:	fa1f f985 	uxth.w	r9, r5
 8015152:	43ed      	mvns	r5, r5
 8015154:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015158:	4377      	muls	r7, r6
 801515a:	fb1a fa09 	smulbb	sl, sl, r9
 801515e:	b2ed      	uxtb	r5, r5
 8015160:	f834 e007 	ldrh.w	lr, [r4, r7]
 8015164:	9702      	str	r7, [sp, #8]
 8015166:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801516a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801516e:	fb17 f709 	smulbb	r7, r7, r9
 8015172:	b2c0      	uxtb	r0, r0
 8015174:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015178:	fb10 f009 	smulbb	r0, r0, r9
 801517c:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015180:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015184:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015188:	fa1f fc8c 	uxth.w	ip, ip
 801518c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015190:	fa5f fe8e 	uxtb.w	lr, lr
 8015194:	fb07 a705 	mla	r7, r7, r5, sl
 8015198:	fb0e 0005 	mla	r0, lr, r5, r0
 801519c:	f10c 0501 	add.w	r5, ip, #1
 80151a0:	b2bf      	uxth	r7, r7
 80151a2:	b280      	uxth	r0, r0
 80151a4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80151a8:	f100 0a01 	add.w	sl, r0, #1
 80151ac:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80151b0:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80151b4:	9802      	ldr	r0, [sp, #8]
 80151b6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80151ba:	ea4a 0c0c 	orr.w	ip, sl, ip
 80151be:	f107 0a01 	add.w	sl, r7, #1
 80151c2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80151c6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80151ca:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80151ce:	ea4c 0c0a 	orr.w	ip, ip, sl
 80151d2:	f824 c000 	strh.w	ip, [r4, r0]
 80151d6:	e7af      	b.n	8015138 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80151d8:	f04f 0e00 	mov.w	lr, #0
 80151dc:	eba3 000e 	sub.w	r0, r3, lr
 80151e0:	2800      	cmp	r0, #0
 80151e2:	f77f af43 	ble.w	801506c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80151e6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80151ea:	140d      	asrs	r5, r1, #16
 80151ec:	1410      	asrs	r0, r2, #16
 80151ee:	fb06 5000 	mla	r0, r6, r0, r5
 80151f2:	9d01      	ldr	r5, [sp, #4]
 80151f4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80151f8:	0e2e      	lsrs	r6, r5, #24
 80151fa:	2eff      	cmp	r6, #255	@ 0xff
 80151fc:	d112      	bne.n	8015224 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80151fe:	482c      	ldr	r0, [pc, #176]	@ (80152b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8015200:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015204:	0968      	lsrs	r0, r5, #5
 8015206:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801520a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801520e:	4330      	orrs	r0, r6
 8015210:	4328      	orrs	r0, r5
 8015212:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8015216:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015218:	f10e 0e01 	add.w	lr, lr, #1
 801521c:	4401      	add	r1, r0
 801521e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015220:	4402      	add	r2, r0
 8015222:	e7db      	b.n	80151dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8015224:	b2f0      	uxtb	r0, r6
 8015226:	2e00      	cmp	r6, #0
 8015228:	d0f5      	beq.n	8015216 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801522a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801522e:	fa1f f980 	uxth.w	r9, r0
 8015232:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015236:	43c0      	mvns	r0, r0
 8015238:	ea4f 272c 	mov.w	r7, ip, asr #8
 801523c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015240:	fb16 f609 	smulbb	r6, r6, r9
 8015244:	b2c0      	uxtb	r0, r0
 8015246:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801524a:	b2ed      	uxtb	r5, r5
 801524c:	fb1a fa09 	smulbb	sl, sl, r9
 8015250:	fb07 6700 	mla	r7, r7, r0, r6
 8015254:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015258:	fb15 f509 	smulbb	r5, r5, r9
 801525c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015260:	b2bf      	uxth	r7, r7
 8015262:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015266:	fa5f fc8c 	uxtb.w	ip, ip
 801526a:	fb06 a600 	mla	r6, r6, r0, sl
 801526e:	fb0c 5500 	mla	r5, ip, r0, r5
 8015272:	1c78      	adds	r0, r7, #1
 8015274:	b2b6      	uxth	r6, r6
 8015276:	b2ad      	uxth	r5, r5
 8015278:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801527c:	f105 0a01 	add.w	sl, r5, #1
 8015280:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015284:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015288:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801528c:	ea4a 0707 	orr.w	r7, sl, r7
 8015290:	f106 0a01 	add.w	sl, r6, #1
 8015294:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015298:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801529c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80152a0:	ea47 070a 	orr.w	r7, r7, sl
 80152a4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80152a8:	e7b5      	b.n	8015216 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80152aa:	b005      	add	sp, #20
 80152ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152b0:	fffff800 	.word	0xfffff800

080152b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80152b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152b8:	b087      	sub	sp, #28
 80152ba:	468b      	mov	fp, r1
 80152bc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80152c0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80152c2:	9203      	str	r2, [sp, #12]
 80152c4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80152c8:	6841      	ldr	r1, [r0, #4]
 80152ca:	9204      	str	r2, [sp, #16]
 80152cc:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 80152d0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80152d4:	fb01 2404 	mla	r4, r1, r4, r2
 80152d8:	6802      	ldr	r2, [r0, #0]
 80152da:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80152de:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80152e2:	3201      	adds	r2, #1
 80152e4:	f022 0201 	bic.w	r2, r2, #1
 80152e8:	9200      	str	r2, [sp, #0]
 80152ea:	f8d9 2000 	ldr.w	r2, [r9]
 80152ee:	9201      	str	r2, [sp, #4]
 80152f0:	f1bb 0f00 	cmp.w	fp, #0
 80152f4:	dc03      	bgt.n	80152fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80152f6:	9a03      	ldr	r2, [sp, #12]
 80152f8:	2a00      	cmp	r2, #0
 80152fa:	f340 816a 	ble.w	80155d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80152fe:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015300:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8015304:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015308:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801530a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801530e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015312:	2b00      	cmp	r3, #0
 8015314:	dd0e      	ble.n	8015334 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015316:	1402      	asrs	r2, r0, #16
 8015318:	d405      	bmi.n	8015326 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801531a:	42ba      	cmp	r2, r7
 801531c:	da03      	bge.n	8015326 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801531e:	140a      	asrs	r2, r1, #16
 8015320:	d401      	bmi.n	8015326 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015322:	42b2      	cmp	r2, r6
 8015324:	db07      	blt.n	8015336 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8015326:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015328:	3b01      	subs	r3, #1
 801532a:	3402      	adds	r4, #2
 801532c:	4410      	add	r0, r2
 801532e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015330:	4411      	add	r1, r2
 8015332:	e7ee      	b.n	8015312 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015334:	d017      	beq.n	8015366 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015336:	1e5a      	subs	r2, r3, #1
 8015338:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801533a:	fb05 0502 	mla	r5, r5, r2, r0
 801533e:	142d      	asrs	r5, r5, #16
 8015340:	d409      	bmi.n	8015356 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015342:	42bd      	cmp	r5, r7
 8015344:	da07      	bge.n	8015356 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015346:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8015348:	fb05 1202 	mla	r2, r5, r2, r1
 801534c:	1412      	asrs	r2, r2, #16
 801534e:	d402      	bmi.n	8015356 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015350:	42b2      	cmp	r2, r6
 8015352:	f2c0 80c8 	blt.w	80154e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8015356:	2700      	movs	r7, #0
 8015358:	19da      	adds	r2, r3, r7
 801535a:	2a00      	cmp	r2, #0
 801535c:	dc3e      	bgt.n	80153dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801535e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015362:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015366:	f1bb 0f00 	cmp.w	fp, #0
 801536a:	f340 8132 	ble.w	80155d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801536e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015372:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015374:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015378:	f1bb 0b01 	subs.w	fp, fp, #1
 801537c:	eeb0 6a62 	vmov.f32	s12, s5
 8015380:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015384:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015388:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801538c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015390:	eeb0 6a43 	vmov.f32	s12, s6
 8015394:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015398:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801539c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80153a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80153a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80153a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80153ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80153b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80153b4:	ee12 2a90 	vmov	r2, s5
 80153b8:	eef0 2a47 	vmov.f32	s5, s14
 80153bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80153c0:	ee13 2a10 	vmov	r2, s6
 80153c4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80153c6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80153c8:	eeb0 3a67 	vmov.f32	s6, s15
 80153cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80153d0:	9a03      	ldr	r2, [sp, #12]
 80153d2:	9314      	str	r3, [sp, #80]	@ 0x50
 80153d4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80153d6:	bf08      	it	eq
 80153d8:	4613      	moveq	r3, r2
 80153da:	e789      	b.n	80152f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80153dc:	1405      	asrs	r5, r0, #16
 80153de:	d436      	bmi.n	801544e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80153e0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80153e4:	42aa      	cmp	r2, r5
 80153e6:	dd32      	ble.n	801544e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80153e8:	140e      	asrs	r6, r1, #16
 80153ea:	d430      	bmi.n	801544e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80153ec:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80153f0:	42b2      	cmp	r2, r6
 80153f2:	dd2c      	ble.n	801544e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80153f4:	9a00      	ldr	r2, [sp, #0]
 80153f6:	fb06 5502 	mla	r5, r6, r2, r5
 80153fa:	9e01      	ldr	r6, [sp, #4]
 80153fc:	086a      	lsrs	r2, r5, #1
 80153fe:	5cb2      	ldrb	r2, [r6, r2]
 8015400:	07ee      	lsls	r6, r5, #31
 8015402:	bf54      	ite	pl
 8015404:	f002 020f 	andpl.w	r2, r2, #15
 8015408:	1112      	asrmi	r2, r2, #4
 801540a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801540e:	b2d2      	uxtb	r2, r2
 8015410:	b1ea      	cbz	r2, 801544e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015412:	9d04      	ldr	r5, [sp, #16]
 8015414:	436a      	muls	r2, r5
 8015416:	1c55      	adds	r5, r2, #1
 8015418:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801541c:	4d6e      	ldr	r5, [pc, #440]	@ (80155d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801541e:	1212      	asrs	r2, r2, #8
 8015420:	682d      	ldr	r5, [r5, #0]
 8015422:	2aff      	cmp	r2, #255	@ 0xff
 8015424:	ea4f 2615 	mov.w	r6, r5, lsr #8
 8015428:	9605      	str	r6, [sp, #20]
 801542a:	d116      	bne.n	801545a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 801542c:	f06f 0201 	mvn.w	r2, #1
 8015430:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8015434:	fb02 fc07 	mul.w	ip, r2, r7
 8015438:	096a      	lsrs	r2, r5, #5
 801543a:	f026 0607 	bic.w	r6, r6, #7
 801543e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015442:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015446:	4316      	orrs	r6, r2
 8015448:	432e      	orrs	r6, r5
 801544a:	f824 600c 	strh.w	r6, [r4, ip]
 801544e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015450:	3f01      	subs	r7, #1
 8015452:	4410      	add	r0, r2
 8015454:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015456:	4411      	add	r1, r2
 8015458:	e77e      	b.n	8015358 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801545a:	f06f 0601 	mvn.w	r6, #1
 801545e:	fa1f fa82 	uxth.w	sl, r2
 8015462:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8015466:	43d2      	mvns	r2, r2
 8015468:	437e      	muls	r6, r7
 801546a:	b2ed      	uxtb	r5, r5
 801546c:	fb1c fc0a 	smulbb	ip, ip, sl
 8015470:	b2d2      	uxtb	r2, r2
 8015472:	f834 8006 	ldrh.w	r8, [r4, r6]
 8015476:	fb15 f50a 	smulbb	r5, r5, sl
 801547a:	9602      	str	r6, [sp, #8]
 801547c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015480:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015484:	fb16 f60a 	smulbb	r6, r6, sl
 8015488:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801548c:	fb0e ce02 	mla	lr, lr, r2, ip
 8015490:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015494:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015498:	fa1f fe8e 	uxth.w	lr, lr
 801549c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80154a0:	fa5f f888 	uxtb.w	r8, r8
 80154a4:	fb0c 6c02 	mla	ip, ip, r2, r6
 80154a8:	fb08 5502 	mla	r5, r8, r2, r5
 80154ac:	f10e 0201 	add.w	r2, lr, #1
 80154b0:	fa1f fc8c 	uxth.w	ip, ip
 80154b4:	b2ad      	uxth	r5, r5
 80154b6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80154ba:	9a02      	ldr	r2, [sp, #8]
 80154bc:	1c6e      	adds	r6, r5, #1
 80154be:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80154c2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 80154c6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80154ca:	ea46 0e0e 	orr.w	lr, r6, lr
 80154ce:	f10c 0601 	add.w	r6, ip, #1
 80154d2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80154d6:	0976      	lsrs	r6, r6, #5
 80154d8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80154dc:	ea4e 0e06 	orr.w	lr, lr, r6
 80154e0:	f824 e002 	strh.w	lr, [r4, r2]
 80154e4:	e7b3      	b.n	801544e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80154e6:	f04f 0800 	mov.w	r8, #0
 80154ea:	eba3 0208 	sub.w	r2, r3, r8
 80154ee:	2a00      	cmp	r2, #0
 80154f0:	f77f af35 	ble.w	801535e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80154f4:	1402      	asrs	r2, r0, #16
 80154f6:	9e00      	ldr	r6, [sp, #0]
 80154f8:	140d      	asrs	r5, r1, #16
 80154fa:	fb06 2505 	mla	r5, r6, r5, r2
 80154fe:	9e01      	ldr	r6, [sp, #4]
 8015500:	086a      	lsrs	r2, r5, #1
 8015502:	07ed      	lsls	r5, r5, #31
 8015504:	5cb2      	ldrb	r2, [r6, r2]
 8015506:	bf54      	ite	pl
 8015508:	f002 020f 	andpl.w	r2, r2, #15
 801550c:	1112      	asrmi	r2, r2, #4
 801550e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015512:	b2d2      	uxtb	r2, r2
 8015514:	b1c2      	cbz	r2, 8015548 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015516:	9d04      	ldr	r5, [sp, #16]
 8015518:	436a      	muls	r2, r5
 801551a:	1c55      	adds	r5, r2, #1
 801551c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015520:	4d2d      	ldr	r5, [pc, #180]	@ (80155d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8015522:	1212      	asrs	r2, r2, #8
 8015524:	682e      	ldr	r6, [r5, #0]
 8015526:	2aff      	cmp	r2, #255	@ 0xff
 8015528:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801552c:	d113      	bne.n	8015556 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801552e:	0972      	lsrs	r2, r6, #5
 8015530:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8015534:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8015538:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801553c:	f025 0507 	bic.w	r5, r5, #7
 8015540:	4315      	orrs	r5, r2
 8015542:	4335      	orrs	r5, r6
 8015544:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8015548:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801554a:	f108 0801 	add.w	r8, r8, #1
 801554e:	4410      	add	r0, r2
 8015550:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015552:	4411      	add	r1, r2
 8015554:	e7c9      	b.n	80154ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015556:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801555a:	fa1f fa82 	uxth.w	sl, r2
 801555e:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8015562:	43d2      	mvns	r2, r2
 8015564:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015568:	fb17 f70a 	smulbb	r7, r7, sl
 801556c:	b2d2      	uxtb	r2, r2
 801556e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015572:	b2f6      	uxtb	r6, r6
 8015574:	b2ed      	uxtb	r5, r5
 8015576:	fb0c 7c02 	mla	ip, ip, r2, r7
 801557a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801557e:	fb16 f60a 	smulbb	r6, r6, sl
 8015582:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015586:	fa1f fc8c 	uxth.w	ip, ip
 801558a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801558e:	fb15 f50a 	smulbb	r5, r5, sl
 8015592:	fa5f fe8e 	uxtb.w	lr, lr
 8015596:	fb0e 6602 	mla	r6, lr, r2, r6
 801559a:	fb07 5702 	mla	r7, r7, r2, r5
 801559e:	f10c 0201 	add.w	r2, ip, #1
 80155a2:	b2b6      	uxth	r6, r6
 80155a4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80155a8:	1c75      	adds	r5, r6, #1
 80155aa:	b2bf      	uxth	r7, r7
 80155ac:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80155b0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80155b4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80155b8:	ea45 0c0c 	orr.w	ip, r5, ip
 80155bc:	1c7d      	adds	r5, r7, #1
 80155be:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 80155c2:	096d      	lsrs	r5, r5, #5
 80155c4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80155c8:	ea4c 0c05 	orr.w	ip, ip, r5
 80155cc:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 80155d0:	e7ba      	b.n	8015548 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80155d2:	b007      	add	sp, #28
 80155d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155d8:	20016b84 	.word	0x20016b84

080155dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80155dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155e0:	b087      	sub	sp, #28
 80155e2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80155e6:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 80158f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80155ea:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80155ec:	9101      	str	r1, [sp, #4]
 80155ee:	9205      	str	r2, [sp, #20]
 80155f0:	6841      	ldr	r1, [r0, #4]
 80155f2:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 80155f6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80155fa:	fb01 2404 	mla	r4, r1, r4, r2
 80155fe:	6802      	ldr	r2, [r0, #0]
 8015600:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015604:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015608:	3201      	adds	r2, #1
 801560a:	f022 0201 	bic.w	r2, r2, #1
 801560e:	9202      	str	r2, [sp, #8]
 8015610:	f8db 2000 	ldr.w	r2, [fp]
 8015614:	9203      	str	r2, [sp, #12]
 8015616:	9a01      	ldr	r2, [sp, #4]
 8015618:	2a00      	cmp	r2, #0
 801561a:	dc03      	bgt.n	8015624 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801561c:	9a05      	ldr	r2, [sp, #20]
 801561e:	2a00      	cmp	r2, #0
 8015620:	f340 8162 	ble.w	80158e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015624:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015626:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801562a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801562e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015630:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8015634:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015638:	2b00      	cmp	r3, #0
 801563a:	dd0e      	ble.n	801565a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801563c:	1402      	asrs	r2, r0, #16
 801563e:	d405      	bmi.n	801564c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015640:	42ba      	cmp	r2, r7
 8015642:	da03      	bge.n	801564c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015644:	140a      	asrs	r2, r1, #16
 8015646:	d401      	bmi.n	801564c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015648:	42b2      	cmp	r2, r6
 801564a:	db07      	blt.n	801565c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801564c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801564e:	3b01      	subs	r3, #1
 8015650:	3402      	adds	r4, #2
 8015652:	4410      	add	r0, r2
 8015654:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015656:	4411      	add	r1, r2
 8015658:	e7ee      	b.n	8015638 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801565a:	d017      	beq.n	801568c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801565c:	1e5a      	subs	r2, r3, #1
 801565e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8015660:	fb05 0502 	mla	r5, r5, r2, r0
 8015664:	142d      	asrs	r5, r5, #16
 8015666:	d409      	bmi.n	801567c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015668:	42bd      	cmp	r5, r7
 801566a:	da07      	bge.n	801567c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801566c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801566e:	fb05 1202 	mla	r2, r5, r2, r1
 8015672:	1412      	asrs	r2, r2, #16
 8015674:	d402      	bmi.n	801567c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015676:	42b2      	cmp	r2, r6
 8015678:	f2c0 80c3 	blt.w	8015802 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801567c:	2500      	movs	r5, #0
 801567e:	195a      	adds	r2, r3, r5
 8015680:	2a00      	cmp	r2, #0
 8015682:	dc3f      	bgt.n	8015704 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015684:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015688:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801568c:	9b01      	ldr	r3, [sp, #4]
 801568e:	2b00      	cmp	r3, #0
 8015690:	f340 812a 	ble.w	80158e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015694:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015698:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801569a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801569e:	eeb0 6a62 	vmov.f32	s12, s5
 80156a2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80156a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80156aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156ae:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80156b2:	eeb0 6a43 	vmov.f32	s12, s6
 80156b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156ba:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80156be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80156c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80156c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80156ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80156ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80156d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80156d6:	ee12 2a90 	vmov	r2, s5
 80156da:	eef0 2a47 	vmov.f32	s5, s14
 80156de:	fb92 f3f3 	sdiv	r3, r2, r3
 80156e2:	ee13 2a10 	vmov	r2, s6
 80156e6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80156e8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80156ea:	eeb0 3a67 	vmov.f32	s6, s15
 80156ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80156f2:	9314      	str	r3, [sp, #80]	@ 0x50
 80156f4:	9b01      	ldr	r3, [sp, #4]
 80156f6:	9a05      	ldr	r2, [sp, #20]
 80156f8:	3b01      	subs	r3, #1
 80156fa:	9301      	str	r3, [sp, #4]
 80156fc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80156fe:	bf08      	it	eq
 8015700:	4613      	moveq	r3, r2
 8015702:	e788      	b.n	8015616 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015704:	1406      	asrs	r6, r0, #16
 8015706:	d42c      	bmi.n	8015762 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015708:	f8db 2008 	ldr.w	r2, [fp, #8]
 801570c:	42b2      	cmp	r2, r6
 801570e:	dd28      	ble.n	8015762 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015710:	140f      	asrs	r7, r1, #16
 8015712:	d426      	bmi.n	8015762 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015714:	f8db 200c 	ldr.w	r2, [fp, #12]
 8015718:	42ba      	cmp	r2, r7
 801571a:	dd22      	ble.n	8015762 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801571c:	9a02      	ldr	r2, [sp, #8]
 801571e:	fb07 6602 	mla	r6, r7, r2, r6
 8015722:	9f03      	ldr	r7, [sp, #12]
 8015724:	0872      	lsrs	r2, r6, #1
 8015726:	07f6      	lsls	r6, r6, #31
 8015728:	5cba      	ldrb	r2, [r7, r2]
 801572a:	bf54      	ite	pl
 801572c:	f002 020f 	andpl.w	r2, r2, #15
 8015730:	1112      	asrmi	r2, r2, #4
 8015732:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015736:	b2d2      	uxtb	r2, r2
 8015738:	2aff      	cmp	r2, #255	@ 0xff
 801573a:	d118      	bne.n	801576e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801573c:	f06f 0601 	mvn.w	r6, #1
 8015740:	f8d8 2000 	ldr.w	r2, [r8]
 8015744:	fb06 f705 	mul.w	r7, r6, r5
 8015748:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 801574c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8015750:	0956      	lsrs	r6, r2, #5
 8015752:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015756:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801575a:	ea4c 0606 	orr.w	r6, ip, r6
 801575e:	4316      	orrs	r6, r2
 8015760:	53e6      	strh	r6, [r4, r7]
 8015762:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015764:	3d01      	subs	r5, #1
 8015766:	4410      	add	r0, r2
 8015768:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801576a:	4411      	add	r1, r2
 801576c:	e787      	b.n	801567e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801576e:	2a00      	cmp	r2, #0
 8015770:	d0f7      	beq.n	8015762 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015772:	f06f 0601 	mvn.w	r6, #1
 8015776:	f8d8 c000 	ldr.w	ip, [r8]
 801577a:	fa1f f982 	uxth.w	r9, r2
 801577e:	43d2      	mvns	r2, r2
 8015780:	436e      	muls	r6, r5
 8015782:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8015786:	b2d2      	uxtb	r2, r2
 8015788:	f834 e006 	ldrh.w	lr, [r4, r6]
 801578c:	fb1a fa09 	smulbb	sl, sl, r9
 8015790:	9604      	str	r6, [sp, #16]
 8015792:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8015796:	ea4f 272e 	mov.w	r7, lr, asr #8
 801579a:	fb16 f609 	smulbb	r6, r6, r9
 801579e:	fa5f fc8c 	uxtb.w	ip, ip
 80157a2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80157a6:	fb1c fc09 	smulbb	ip, ip, r9
 80157aa:	fb07 6702 	mla	r7, r7, r2, r6
 80157ae:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80157b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80157b6:	b2bf      	uxth	r7, r7
 80157b8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80157bc:	fa5f fe8e 	uxtb.w	lr, lr
 80157c0:	fb06 a602 	mla	r6, r6, r2, sl
 80157c4:	fb0e cc02 	mla	ip, lr, r2, ip
 80157c8:	1c7a      	adds	r2, r7, #1
 80157ca:	b2b6      	uxth	r6, r6
 80157cc:	fa1f fc8c 	uxth.w	ip, ip
 80157d0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80157d4:	9a04      	ldr	r2, [sp, #16]
 80157d6:	f10c 0a01 	add.w	sl, ip, #1
 80157da:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80157de:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80157e2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80157e6:	ea4a 0707 	orr.w	r7, sl, r7
 80157ea:	f106 0a01 	add.w	sl, r6, #1
 80157ee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80157f2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80157f6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80157fa:	ea47 070a 	orr.w	r7, r7, sl
 80157fe:	52a7      	strh	r7, [r4, r2]
 8015800:	e7af      	b.n	8015762 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015802:	f04f 0e00 	mov.w	lr, #0
 8015806:	eba3 020e 	sub.w	r2, r3, lr
 801580a:	2a00      	cmp	r2, #0
 801580c:	f77f af3a 	ble.w	8015684 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015810:	1402      	asrs	r2, r0, #16
 8015812:	9e02      	ldr	r6, [sp, #8]
 8015814:	140d      	asrs	r5, r1, #16
 8015816:	fb06 2505 	mla	r5, r6, r5, r2
 801581a:	9e03      	ldr	r6, [sp, #12]
 801581c:	086a      	lsrs	r2, r5, #1
 801581e:	07ed      	lsls	r5, r5, #31
 8015820:	5cb2      	ldrb	r2, [r6, r2]
 8015822:	bf54      	ite	pl
 8015824:	f002 020f 	andpl.w	r2, r2, #15
 8015828:	1112      	asrmi	r2, r2, #4
 801582a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801582e:	b2d2      	uxtb	r2, r2
 8015830:	2aff      	cmp	r2, #255	@ 0xff
 8015832:	d115      	bne.n	8015860 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8015834:	f8d8 5000 	ldr.w	r5, [r8]
 8015838:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 801583c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8015840:	096a      	lsrs	r2, r5, #5
 8015842:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015846:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801584a:	4332      	orrs	r2, r6
 801584c:	432a      	orrs	r2, r5
 801584e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8015852:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015854:	f10e 0e01 	add.w	lr, lr, #1
 8015858:	4410      	add	r0, r2
 801585a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801585c:	4411      	add	r1, r2
 801585e:	e7d2      	b.n	8015806 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015860:	2a00      	cmp	r2, #0
 8015862:	d0f6      	beq.n	8015852 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015864:	f8d8 7000 	ldr.w	r7, [r8]
 8015868:	fa1f f982 	uxth.w	r9, r2
 801586c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015870:	43d2      	mvns	r2, r2
 8015872:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8015876:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801587a:	ea4f 262c 	mov.w	r6, ip, asr #8
 801587e:	fb15 f509 	smulbb	r5, r5, r9
 8015882:	b2d2      	uxtb	r2, r2
 8015884:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015888:	b2ff      	uxtb	r7, r7
 801588a:	fb1a fa09 	smulbb	sl, sl, r9
 801588e:	fb06 5602 	mla	r6, r6, r2, r5
 8015892:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8015896:	fb17 f709 	smulbb	r7, r7, r9
 801589a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801589e:	b2b6      	uxth	r6, r6
 80158a0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80158a4:	fa5f fc8c 	uxtb.w	ip, ip
 80158a8:	fb05 a502 	mla	r5, r5, r2, sl
 80158ac:	fb0c 7702 	mla	r7, ip, r2, r7
 80158b0:	1c72      	adds	r2, r6, #1
 80158b2:	b2ad      	uxth	r5, r5
 80158b4:	b2bf      	uxth	r7, r7
 80158b6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80158ba:	f107 0a01 	add.w	sl, r7, #1
 80158be:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80158c2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80158c6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80158ca:	ea4a 0606 	orr.w	r6, sl, r6
 80158ce:	f105 0a01 	add.w	sl, r5, #1
 80158d2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80158d6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80158da:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80158de:	ea46 060a 	orr.w	r6, r6, sl
 80158e2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80158e6:	e7b4      	b.n	8015852 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80158e8:	b007      	add	sp, #28
 80158ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80158ee:	bf00      	nop
 80158f0:	20016b84 	.word	0x20016b84

080158f4 <_ZN8touchgfx8LCD16bppD1Ev>:
 80158f4:	4770      	bx	lr

080158f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 80158f6:	4770      	bx	lr

080158f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 80158f8:	4770      	bx	lr

080158fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 80158fa:	4770      	bx	lr

080158fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80158fc:	4770      	bx	lr

080158fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80158fe:	4770      	bx	lr

08015900 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8015900:	4770      	bx	lr

08015902 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8015902:	4770      	bx	lr

08015904 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015904:	4770      	bx	lr

08015906 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015906:	4770      	bx	lr

08015908 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015908:	4770      	bx	lr

0801590a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801590a:	4770      	bx	lr

0801590c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801590c:	4770      	bx	lr

0801590e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801590e:	4770      	bx	lr

08015910 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015910:	4770      	bx	lr

08015912 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015912:	4770      	bx	lr

08015914 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015914:	4770      	bx	lr

08015916 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015916:	4770      	bx	lr

08015918 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015918:	4770      	bx	lr

0801591a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801591a:	4770      	bx	lr

0801591c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801591c:	4770      	bx	lr

0801591e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801591e:	4770      	bx	lr

08015920 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015920:	4770      	bx	lr

08015922 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015922:	4770      	bx	lr

08015924 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015924:	4770      	bx	lr

08015926 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8015926:	4770      	bx	lr

08015928 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015928:	4770      	bx	lr

0801592a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801592a:	4770      	bx	lr

0801592c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801592c:	4770      	bx	lr

0801592e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801592e:	4770      	bx	lr

08015930 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015930:	4770      	bx	lr

08015932 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015932:	4770      	bx	lr

08015934 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8015934:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015938:	b088      	sub	sp, #32
 801593a:	4606      	mov	r6, r0
 801593c:	4688      	mov	r8, r1
 801593e:	4691      	mov	r9, r2
 8015940:	ac08      	add	r4, sp, #32
 8015942:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8015946:	4620      	mov	r0, r4
 8015948:	f7fd fc62 	bl	8013210 <_ZNK8touchgfx6Bitmap7getDataEv>
 801594c:	6833      	ldr	r3, [r6, #0]
 801594e:	4605      	mov	r5, r0
 8015950:	4620      	mov	r0, r4
 8015952:	699f      	ldr	r7, [r3, #24]
 8015954:	f7fd fb70 	bl	8013038 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015958:	4682      	mov	sl, r0
 801595a:	4620      	mov	r0, r4
 801595c:	f7fd fba0 	bl	80130a0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015960:	9500      	str	r5, [sp, #0]
 8015962:	464b      	mov	r3, r9
 8015964:	4642      	mov	r2, r8
 8015966:	4631      	mov	r1, r6
 8015968:	e9cd a001 	strd	sl, r0, [sp, #4]
 801596c:	a806      	add	r0, sp, #24
 801596e:	47b8      	blx	r7
 8015970:	4628      	mov	r0, r5
 8015972:	b008      	add	sp, #32
 8015974:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08015978 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8015978:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801597c:	2300      	movs	r3, #0
 801597e:	9300      	str	r3, [sp, #0]
 8015980:	4b3d      	ldr	r3, [pc, #244]	@ (8015a78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8015982:	781b      	ldrb	r3, [r3, #0]
 8015984:	2b00      	cmp	r3, #0
 8015986:	d137      	bne.n	80159f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8015988:	4a3c      	ldr	r2, [pc, #240]	@ (8015a7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801598a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801598e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015992:	2b00      	cmp	r3, #0
 8015994:	d132      	bne.n	80159fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8015996:	4b3a      	ldr	r3, [pc, #232]	@ (8015a80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015998:	f9b3 3000 	ldrsh.w	r3, [r3]
 801599c:	ac02      	add	r4, sp, #8
 801599e:	6808      	ldr	r0, [r1, #0]
 80159a0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80159a4:	ab02      	add	r3, sp, #8
 80159a6:	6849      	ldr	r1, [r1, #4]
 80159a8:	4d36      	ldr	r5, [pc, #216]	@ (8015a84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 80159aa:	c303      	stmia	r3!, {r0, r1}
 80159ac:	4669      	mov	r1, sp
 80159ae:	4620      	mov	r0, r4
 80159b0:	f7fa f904 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80159b4:	4668      	mov	r0, sp
 80159b6:	f7fa f8d9 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80159ba:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80159be:	f8bd 2000 	ldrh.w	r2, [sp]
 80159c2:	462f      	mov	r7, r5
 80159c4:	6828      	ldr	r0, [r5, #0]
 80159c6:	4413      	add	r3, r2
 80159c8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80159cc:	f8ad 3008 	strh.w	r3, [sp, #8]
 80159d0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80159d4:	4413      	add	r3, r2
 80159d6:	f8ad 300a 	strh.w	r3, [sp, #10]
 80159da:	6803      	ldr	r3, [r0, #0]
 80159dc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80159de:	4798      	blx	r3
 80159e0:	f010 0f01 	tst.w	r0, #1
 80159e4:	d00c      	beq.n	8015a00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80159e6:	6828      	ldr	r0, [r5, #0]
 80159e8:	6803      	ldr	r3, [r0, #0]
 80159ea:	e894 0006 	ldmia.w	r4, {r1, r2}
 80159ee:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80159f0:	4798      	blx	r3
 80159f2:	b004      	add	sp, #16
 80159f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80159f8:	4a21      	ldr	r2, [pc, #132]	@ (8015a80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80159fa:	e7c6      	b.n	801598a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80159fc:	4b1f      	ldr	r3, [pc, #124]	@ (8015a7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80159fe:	e7cb      	b.n	8015998 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8015a00:	6838      	ldr	r0, [r7, #0]
 8015a02:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015a06:	6803      	ldr	r3, [r0, #0]
 8015a08:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8015a0c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8015a10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015a12:	4798      	blx	r3
 8015a14:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8015a18:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015a1c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8015a20:	fb16 3602 	smlabb	r6, r6, r2, r3
 8015a24:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015a28:	6838      	ldr	r0, [r7, #0]
 8015a2a:	6803      	ldr	r3, [r0, #0]
 8015a2c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015a2e:	4798      	blx	r3
 8015a30:	4a12      	ldr	r2, [pc, #72]	@ (8015a7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015a32:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8015a36:	8813      	ldrh	r3, [r2, #0]
 8015a38:	4691      	mov	r9, r2
 8015a3a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8015a3e:	435d      	muls	r5, r3
 8015a40:	fb03 1404 	mla	r4, r3, r4, r1
 8015a44:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015a48:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015a4c:	6838      	ldr	r0, [r7, #0]
 8015a4e:	42ac      	cmp	r4, r5
 8015a50:	6803      	ldr	r3, [r0, #0]
 8015a52:	d20e      	bcs.n	8015a72 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8015a54:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 8015a58:	4632      	mov	r2, r6
 8015a5a:	4643      	mov	r3, r8
 8015a5c:	4621      	mov	r1, r4
 8015a5e:	47d0      	blx	sl
 8015a60:	f8b9 3000 	ldrh.w	r3, [r9]
 8015a64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015a68:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8015a6c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015a70:	e7ec      	b.n	8015a4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8015a72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015a74:	4798      	blx	r3
 8015a76:	e7bc      	b.n	80159f2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8015a78:	20016b6c 	.word	0x20016b6c
 8015a7c:	20016b6e 	.word	0x20016b6e
 8015a80:	20016b70 	.word	0x20016b70
 8015a84:	20016b74 	.word	0x20016b74

08015a88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8015a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a8c:	b08b      	sub	sp, #44	@ 0x2c
 8015a8e:	460f      	mov	r7, r1
 8015a90:	4616      	mov	r6, r2
 8015a92:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8015a96:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8015a9a:	f1bb 0f00 	cmp.w	fp, #0
 8015a9e:	d04a      	beq.n	8015b36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8015aa0:	6810      	ldr	r0, [r2, #0]
 8015aa2:	ad06      	add	r5, sp, #24
 8015aa4:	6851      	ldr	r1, [r2, #4]
 8015aa6:	c503      	stmia	r5!, {r0, r1}
 8015aa8:	6818      	ldr	r0, [r3, #0]
 8015aaa:	ad08      	add	r5, sp, #32
 8015aac:	6859      	ldr	r1, [r3, #4]
 8015aae:	c503      	stmia	r5!, {r0, r1}
 8015ab0:	a806      	add	r0, sp, #24
 8015ab2:	f7fa f85b 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015ab6:	4631      	mov	r1, r6
 8015ab8:	a808      	add	r0, sp, #32
 8015aba:	f7fa f87f 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015abe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015ac2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8015ac6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8015aca:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8015ace:	fb16 2103 	smlabb	r1, r6, r3, r2
 8015ad2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8015ad6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8015ada:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8015ade:	4f5f      	ldr	r7, [pc, #380]	@ (8015c5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015ae0:	440a      	add	r2, r1
 8015ae2:	6838      	ldr	r0, [r7, #0]
 8015ae4:	46b9      	mov	r9, r7
 8015ae6:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015aea:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015aee:	4413      	add	r3, r2
 8015af0:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8015af4:	6803      	ldr	r3, [r0, #0]
 8015af6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015af8:	4798      	blx	r3
 8015afa:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8015afe:	d11d      	bne.n	8015b3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8015b00:	b9fc      	cbnz	r4, 8015b42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015b02:	f010 0f01 	tst.w	r0, #1
 8015b06:	d01c      	beq.n	8015b42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015b08:	f8d9 0000 	ldr.w	r0, [r9]
 8015b0c:	2700      	movs	r7, #0
 8015b0e:	b2ad      	uxth	r5, r5
 8015b10:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8015b14:	6801      	ldr	r1, [r0, #0]
 8015b16:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8015b1a:	f8cd b00c 	str.w	fp, [sp, #12]
 8015b1e:	9501      	str	r5, [sp, #4]
 8015b20:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8015b24:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8015b28:	9402      	str	r4, [sp, #8]
 8015b2a:	fa1f f488 	uxth.w	r4, r8
 8015b2e:	9400      	str	r4, [sp, #0]
 8015b30:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 8015b32:	4631      	mov	r1, r6
 8015b34:	47a0      	blx	r4
 8015b36:	b00b      	add	sp, #44	@ 0x2c
 8015b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b3c:	f010 0f04 	tst.w	r0, #4
 8015b40:	e7e1      	b.n	8015b06 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8015b42:	f8d9 0000 	ldr.w	r0, [r9]
 8015b46:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8015b4a:	6803      	ldr	r3, [r0, #0]
 8015b4c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015b4e:	4798      	blx	r3
 8015b50:	4b43      	ldr	r3, [pc, #268]	@ (8015c60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8015b52:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8015b56:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8015b5a:	881a      	ldrh	r2, [r3, #0]
 8015b5c:	469a      	mov	sl, r3
 8015b5e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8015b62:	fb05 f502 	mul.w	r5, r5, r2
 8015b66:	fb02 1404 	mla	r4, r2, r4, r1
 8015b6a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015b6e:	d059      	beq.n	8015c24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8015b70:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8015b74:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015b78:	fa1f f28b 	uxth.w	r2, fp
 8015b7c:	469e      	mov	lr, r3
 8015b7e:	fa1f f989 	uxth.w	r9, r9
 8015b82:	42ac      	cmp	r4, r5
 8015b84:	d264      	bcs.n	8015c50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015b86:	eb04 0a07 	add.w	sl, r4, r7
 8015b8a:	4554      	cmp	r4, sl
 8015b8c:	d23d      	bcs.n	8015c0a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8015b8e:	8821      	ldrh	r1, [r4, #0]
 8015b90:	f836 3b02 	ldrh.w	r3, [r6], #2
 8015b94:	1208      	asrs	r0, r1, #8
 8015b96:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015b9a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8015b9e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8015ba2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015ba6:	00c9      	lsls	r1, r1, #3
 8015ba8:	fb10 f009 	smulbb	r0, r0, r9
 8015bac:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015bb0:	b2c9      	uxtb	r1, r1
 8015bb2:	fb0c 0c02 	mla	ip, ip, r2, r0
 8015bb6:	10d8      	asrs	r0, r3, #3
 8015bb8:	fb1b fb09 	smulbb	fp, fp, r9
 8015bbc:	00db      	lsls	r3, r3, #3
 8015bbe:	fa1f fc8c 	uxth.w	ip, ip
 8015bc2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8015bc6:	fb11 f109 	smulbb	r1, r1, r9
 8015bca:	b2db      	uxtb	r3, r3
 8015bcc:	fb00 b002 	mla	r0, r0, r2, fp
 8015bd0:	f10c 0b01 	add.w	fp, ip, #1
 8015bd4:	fb03 1302 	mla	r3, r3, r2, r1
 8015bd8:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8015bdc:	b29b      	uxth	r3, r3
 8015bde:	b280      	uxth	r0, r0
 8015be0:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8015be4:	f103 0c01 	add.w	ip, r3, #1
 8015be8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015bec:	1c43      	adds	r3, r0, #1
 8015bee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015bf2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015bf6:	0940      	lsrs	r0, r0, #5
 8015bf8:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015bfc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015c00:	ea4c 0c00 	orr.w	ip, ip, r0
 8015c04:	f824 cb02 	strh.w	ip, [r4], #2
 8015c08:	e7bf      	b.n	8015b8a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8015c0a:	f8be 3000 	ldrh.w	r3, [lr]
 8015c0e:	eba3 0308 	sub.w	r3, r3, r8
 8015c12:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015c16:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015c1a:	eba3 0308 	sub.w	r3, r3, r8
 8015c1e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015c22:	e7ae      	b.n	8015b82 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8015c24:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015c28:	f8d9 0000 	ldr.w	r0, [r9]
 8015c2c:	42ac      	cmp	r4, r5
 8015c2e:	6803      	ldr	r3, [r0, #0]
 8015c30:	d20e      	bcs.n	8015c50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015c32:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 8015c36:	4632      	mov	r2, r6
 8015c38:	463b      	mov	r3, r7
 8015c3a:	4621      	mov	r1, r4
 8015c3c:	47c0      	blx	r8
 8015c3e:	f8ba 3000 	ldrh.w	r3, [sl]
 8015c42:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015c46:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015c4a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015c4e:	e7eb      	b.n	8015c28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8015c50:	4b02      	ldr	r3, [pc, #8]	@ (8015c5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015c52:	6818      	ldr	r0, [r3, #0]
 8015c54:	6803      	ldr	r3, [r0, #0]
 8015c56:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015c58:	4798      	blx	r3
 8015c5a:	e76c      	b.n	8015b36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8015c5c:	20016b74 	.word	0x20016b74
 8015c60:	20016b6e 	.word	0x20016b6e

08015c64 <_ZN8touchgfx8LCD16bppD0Ev>:
 8015c64:	b510      	push	{r4, lr}
 8015c66:	4604      	mov	r4, r0
 8015c68:	2188      	movs	r1, #136	@ 0x88
 8015c6a:	f00b f949 	bl	8020f00 <_ZdlPvj>
 8015c6e:	4620      	mov	r0, r4
 8015c70:	bd10      	pop	{r4, pc}

08015c72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8015c72:	b510      	push	{r4, lr}
 8015c74:	4604      	mov	r4, r0
 8015c76:	2104      	movs	r1, #4
 8015c78:	f00b f942 	bl	8020f00 <_ZdlPvj>
 8015c7c:	4620      	mov	r0, r4
 8015c7e:	bd10      	pop	{r4, pc}

08015c80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8015c80:	b510      	push	{r4, lr}
 8015c82:	4604      	mov	r4, r0
 8015c84:	2104      	movs	r1, #4
 8015c86:	f00b f93b 	bl	8020f00 <_ZdlPvj>
 8015c8a:	4620      	mov	r0, r4
 8015c8c:	bd10      	pop	{r4, pc}

08015c8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8015c8e:	b510      	push	{r4, lr}
 8015c90:	4604      	mov	r4, r0
 8015c92:	f640 0144 	movw	r1, #2116	@ 0x844
 8015c96:	f00b f933 	bl	8020f00 <_ZdlPvj>
 8015c9a:	4620      	mov	r0, r4
 8015c9c:	bd10      	pop	{r4, pc}

08015c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015c9e:	b510      	push	{r4, lr}
 8015ca0:	4604      	mov	r4, r0
 8015ca2:	2104      	movs	r1, #4
 8015ca4:	f00b f92c 	bl	8020f00 <_ZdlPvj>
 8015ca8:	4620      	mov	r0, r4
 8015caa:	bd10      	pop	{r4, pc}

08015cac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015cac:	b510      	push	{r4, lr}
 8015cae:	4604      	mov	r4, r0
 8015cb0:	2104      	movs	r1, #4
 8015cb2:	f00b f925 	bl	8020f00 <_ZdlPvj>
 8015cb6:	4620      	mov	r0, r4
 8015cb8:	bd10      	pop	{r4, pc}

08015cba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015cba:	b510      	push	{r4, lr}
 8015cbc:	4604      	mov	r4, r0
 8015cbe:	2104      	movs	r1, #4
 8015cc0:	f00b f91e 	bl	8020f00 <_ZdlPvj>
 8015cc4:	4620      	mov	r0, r4
 8015cc6:	bd10      	pop	{r4, pc}

08015cc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015cc8:	b510      	push	{r4, lr}
 8015cca:	4604      	mov	r4, r0
 8015ccc:	2104      	movs	r1, #4
 8015cce:	f00b f917 	bl	8020f00 <_ZdlPvj>
 8015cd2:	4620      	mov	r0, r4
 8015cd4:	bd10      	pop	{r4, pc}

08015cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015cd6:	b510      	push	{r4, lr}
 8015cd8:	4604      	mov	r4, r0
 8015cda:	2104      	movs	r1, #4
 8015cdc:	f00b f910 	bl	8020f00 <_ZdlPvj>
 8015ce0:	4620      	mov	r0, r4
 8015ce2:	bd10      	pop	{r4, pc}

08015ce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8015ce4:	b510      	push	{r4, lr}
 8015ce6:	4604      	mov	r4, r0
 8015ce8:	2104      	movs	r1, #4
 8015cea:	f00b f909 	bl	8020f00 <_ZdlPvj>
 8015cee:	4620      	mov	r0, r4
 8015cf0:	bd10      	pop	{r4, pc}

08015cf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015cf2:	b510      	push	{r4, lr}
 8015cf4:	4604      	mov	r4, r0
 8015cf6:	2104      	movs	r1, #4
 8015cf8:	f00b f902 	bl	8020f00 <_ZdlPvj>
 8015cfc:	4620      	mov	r0, r4
 8015cfe:	bd10      	pop	{r4, pc}

08015d00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8015d00:	b510      	push	{r4, lr}
 8015d02:	4604      	mov	r4, r0
 8015d04:	2104      	movs	r1, #4
 8015d06:	f00b f8fb 	bl	8020f00 <_ZdlPvj>
 8015d0a:	4620      	mov	r0, r4
 8015d0c:	bd10      	pop	{r4, pc}

08015d0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015d0e:	b510      	push	{r4, lr}
 8015d10:	4604      	mov	r4, r0
 8015d12:	2104      	movs	r1, #4
 8015d14:	f00b f8f4 	bl	8020f00 <_ZdlPvj>
 8015d18:	4620      	mov	r0, r4
 8015d1a:	bd10      	pop	{r4, pc}

08015d1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015d1c:	b510      	push	{r4, lr}
 8015d1e:	4604      	mov	r4, r0
 8015d20:	2104      	movs	r1, #4
 8015d22:	f00b f8ed 	bl	8020f00 <_ZdlPvj>
 8015d26:	4620      	mov	r0, r4
 8015d28:	bd10      	pop	{r4, pc}

08015d2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015d2a:	b510      	push	{r4, lr}
 8015d2c:	4604      	mov	r4, r0
 8015d2e:	2104      	movs	r1, #4
 8015d30:	f00b f8e6 	bl	8020f00 <_ZdlPvj>
 8015d34:	4620      	mov	r0, r4
 8015d36:	bd10      	pop	{r4, pc}

08015d38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015d38:	b510      	push	{r4, lr}
 8015d3a:	4604      	mov	r4, r0
 8015d3c:	2104      	movs	r1, #4
 8015d3e:	f00b f8df 	bl	8020f00 <_ZdlPvj>
 8015d42:	4620      	mov	r0, r4
 8015d44:	bd10      	pop	{r4, pc}

08015d46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015d46:	b510      	push	{r4, lr}
 8015d48:	4604      	mov	r4, r0
 8015d4a:	2104      	movs	r1, #4
 8015d4c:	f00b f8d8 	bl	8020f00 <_ZdlPvj>
 8015d50:	4620      	mov	r0, r4
 8015d52:	bd10      	pop	{r4, pc}

08015d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015d54:	b510      	push	{r4, lr}
 8015d56:	4604      	mov	r4, r0
 8015d58:	2104      	movs	r1, #4
 8015d5a:	f00b f8d1 	bl	8020f00 <_ZdlPvj>
 8015d5e:	4620      	mov	r0, r4
 8015d60:	bd10      	pop	{r4, pc}

08015d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015d62:	b510      	push	{r4, lr}
 8015d64:	4604      	mov	r4, r0
 8015d66:	2104      	movs	r1, #4
 8015d68:	f00b f8ca 	bl	8020f00 <_ZdlPvj>
 8015d6c:	4620      	mov	r0, r4
 8015d6e:	bd10      	pop	{r4, pc}

08015d70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015d70:	b510      	push	{r4, lr}
 8015d72:	4604      	mov	r4, r0
 8015d74:	2104      	movs	r1, #4
 8015d76:	f00b f8c3 	bl	8020f00 <_ZdlPvj>
 8015d7a:	4620      	mov	r0, r4
 8015d7c:	bd10      	pop	{r4, pc}

08015d7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015d7e:	b510      	push	{r4, lr}
 8015d80:	4604      	mov	r4, r0
 8015d82:	2104      	movs	r1, #4
 8015d84:	f00b f8bc 	bl	8020f00 <_ZdlPvj>
 8015d88:	4620      	mov	r0, r4
 8015d8a:	bd10      	pop	{r4, pc}

08015d8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015d8c:	b510      	push	{r4, lr}
 8015d8e:	4604      	mov	r4, r0
 8015d90:	2104      	movs	r1, #4
 8015d92:	f00b f8b5 	bl	8020f00 <_ZdlPvj>
 8015d96:	4620      	mov	r0, r4
 8015d98:	bd10      	pop	{r4, pc}

08015d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015d9a:	b510      	push	{r4, lr}
 8015d9c:	4604      	mov	r4, r0
 8015d9e:	2104      	movs	r1, #4
 8015da0:	f00b f8ae 	bl	8020f00 <_ZdlPvj>
 8015da4:	4620      	mov	r0, r4
 8015da6:	bd10      	pop	{r4, pc}

08015da8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015da8:	b510      	push	{r4, lr}
 8015daa:	4604      	mov	r4, r0
 8015dac:	2104      	movs	r1, #4
 8015dae:	f00b f8a7 	bl	8020f00 <_ZdlPvj>
 8015db2:	4620      	mov	r0, r4
 8015db4:	bd10      	pop	{r4, pc}

08015db6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015db6:	b510      	push	{r4, lr}
 8015db8:	4604      	mov	r4, r0
 8015dba:	2104      	movs	r1, #4
 8015dbc:	f00b f8a0 	bl	8020f00 <_ZdlPvj>
 8015dc0:	4620      	mov	r0, r4
 8015dc2:	bd10      	pop	{r4, pc}

08015dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015dc4:	b510      	push	{r4, lr}
 8015dc6:	4604      	mov	r4, r0
 8015dc8:	2104      	movs	r1, #4
 8015dca:	f00b f899 	bl	8020f00 <_ZdlPvj>
 8015dce:	4620      	mov	r0, r4
 8015dd0:	bd10      	pop	{r4, pc}

08015dd2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015dd2:	b510      	push	{r4, lr}
 8015dd4:	4604      	mov	r4, r0
 8015dd6:	2104      	movs	r1, #4
 8015dd8:	f00b f892 	bl	8020f00 <_ZdlPvj>
 8015ddc:	4620      	mov	r0, r4
 8015dde:	bd10      	pop	{r4, pc}

08015de0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015de0:	b510      	push	{r4, lr}
 8015de2:	4604      	mov	r4, r0
 8015de4:	2104      	movs	r1, #4
 8015de6:	f00b f88b 	bl	8020f00 <_ZdlPvj>
 8015dea:	4620      	mov	r0, r4
 8015dec:	bd10      	pop	{r4, pc}

08015dee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8015dee:	b510      	push	{r4, lr}
 8015df0:	4604      	mov	r4, r0
 8015df2:	2104      	movs	r1, #4
 8015df4:	f00b f884 	bl	8020f00 <_ZdlPvj>
 8015df8:	4620      	mov	r0, r4
 8015dfa:	bd10      	pop	{r4, pc}

08015dfc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8015dfc:	b510      	push	{r4, lr}
 8015dfe:	4604      	mov	r4, r0
 8015e00:	2104      	movs	r1, #4
 8015e02:	f00b f87d 	bl	8020f00 <_ZdlPvj>
 8015e06:	4620      	mov	r0, r4
 8015e08:	bd10      	pop	{r4, pc}

08015e0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8015e0a:	b510      	push	{r4, lr}
 8015e0c:	4604      	mov	r4, r0
 8015e0e:	2104      	movs	r1, #4
 8015e10:	f00b f876 	bl	8020f00 <_ZdlPvj>
 8015e14:	4620      	mov	r0, r4
 8015e16:	bd10      	pop	{r4, pc}

08015e18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8015e18:	b510      	push	{r4, lr}
 8015e1a:	4604      	mov	r4, r0
 8015e1c:	2104      	movs	r1, #4
 8015e1e:	f00b f86f 	bl	8020f00 <_ZdlPvj>
 8015e22:	4620      	mov	r0, r4
 8015e24:	bd10      	pop	{r4, pc}
	...

08015e28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015e28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e2c:	b08f      	sub	sp, #60	@ 0x3c
 8015e2e:	461c      	mov	r4, r3
 8015e30:	9205      	str	r2, [sp, #20]
 8015e32:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015e36:	9100      	str	r1, [sp, #0]
 8015e38:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8015e3a:	9201      	str	r2, [sp, #4]
 8015e3c:	2a00      	cmp	r2, #0
 8015e3e:	f000 8116 	beq.w	801606e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 8015e42:	6820      	ldr	r0, [r4, #0]
 8015e44:	aa0a      	add	r2, sp, #40	@ 0x28
 8015e46:	6861      	ldr	r1, [r4, #4]
 8015e48:	c203      	stmia	r2!, {r0, r1}
 8015e4a:	6818      	ldr	r0, [r3, #0]
 8015e4c:	aa0c      	add	r2, sp, #48	@ 0x30
 8015e4e:	6859      	ldr	r1, [r3, #4]
 8015e50:	c203      	stmia	r2!, {r0, r1}
 8015e52:	a80a      	add	r0, sp, #40	@ 0x28
 8015e54:	f7f9 fe8a 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015e58:	4621      	mov	r1, r4
 8015e5a:	a80c      	add	r0, sp, #48	@ 0x30
 8015e5c:	f7f9 feae 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015e60:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8015e64:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8015e68:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8015e6c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8015e70:	bfdb      	ittet	le
 8015e72:	b2b3      	uxthle	r3, r6
 8015e74:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8015e78:	2301      	movgt	r3, #1
 8015e7a:	fb92 f3f3 	sdivle	r3, r2, r3
 8015e7e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015e82:	441d      	add	r5, r3
 8015e84:	fb92 f1f3 	sdiv	r1, r2, r3
 8015e88:	fa1f fc81 	uxth.w	ip, r1
 8015e8c:	3d01      	subs	r5, #1
 8015e8e:	fb0c 2413 	mls	r4, ip, r3, r2
 8015e92:	4661      	mov	r1, ip
 8015e94:	fb14 f406 	smulbb	r4, r4, r6
 8015e98:	4404      	add	r4, r0
 8015e9a:	fb95 f5f3 	sdiv	r5, r5, r3
 8015e9e:	b2a4      	uxth	r4, r4
 8015ea0:	b131      	cbz	r1, 8015eb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 8015ea2:	9b05      	ldr	r3, [sp, #20]
 8015ea4:	9900      	ldr	r1, [sp, #0]
 8015ea6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015eaa:	ba1b      	rev	r3, r3
 8015eac:	4419      	add	r1, r3
 8015eae:	9100      	str	r1, [sp, #0]
 8015eb0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015eb4:	b2ad      	uxth	r5, r5
 8015eb6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8015eba:	4418      	add	r0, r3
 8015ebc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8015ec0:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8015ec4:	00ad      	lsls	r5, r5, #2
 8015ec6:	441a      	add	r2, r3
 8015ec8:	4b6a      	ldr	r3, [pc, #424]	@ (8016074 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015eca:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8015ece:	6818      	ldr	r0, [r3, #0]
 8015ed0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8015ed4:	6803      	ldr	r3, [r0, #0]
 8015ed6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015ed8:	4798      	blx	r3
 8015eda:	4967      	ldr	r1, [pc, #412]	@ (8016078 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8015edc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015ee0:	2c00      	cmp	r4, #0
 8015ee2:	880b      	ldrh	r3, [r1, #0]
 8015ee4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8015ee8:	bf0c      	ite	eq
 8015eea:	46c6      	moveq	lr, r8
 8015eec:	f04f 0e00 	movne.w	lr, #0
 8015ef0:	9109      	str	r1, [sp, #36]	@ 0x24
 8015ef2:	fb03 c202 	mla	r2, r3, r2, ip
 8015ef6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8015efa:	4373      	muls	r3, r6
 8015efc:	fa1f fe8e 	uxth.w	lr, lr
 8015f00:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015f04:	9103      	str	r1, [sp, #12]
 8015f06:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015f0a:	9306      	str	r3, [sp, #24]
 8015f0c:	1d2b      	adds	r3, r5, #4
 8015f0e:	9307      	str	r3, [sp, #28]
 8015f10:	9b01      	ldr	r3, [sp, #4]
 8015f12:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8015f16:	2300      	movs	r3, #0
 8015f18:	b292      	uxth	r2, r2
 8015f1a:	9302      	str	r3, [sp, #8]
 8015f1c:	9204      	str	r2, [sp, #16]
 8015f1e:	9a06      	ldr	r2, [sp, #24]
 8015f20:	4282      	cmp	r2, r0
 8015f22:	f240 809f 	bls.w	8016064 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 8015f26:	b963      	cbnz	r3, 8015f42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8015f28:	9b00      	ldr	r3, [sp, #0]
 8015f2a:	781a      	ldrb	r2, [r3, #0]
 8015f2c:	0993      	lsrs	r3, r2, #6
 8015f2e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8015f32:	9202      	str	r2, [sp, #8]
 8015f34:	1e5a      	subs	r2, r3, #1
 8015f36:	2a02      	cmp	r2, #2
 8015f38:	d815      	bhi.n	8015f66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8015f3a:	9a00      	ldr	r2, [sp, #0]
 8015f3c:	b29b      	uxth	r3, r3
 8015f3e:	3201      	adds	r2, #1
 8015f40:	9200      	str	r2, [sp, #0]
 8015f42:	b1b4      	cbz	r4, 8015f72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 8015f44:	429c      	cmp	r4, r3
 8015f46:	bf91      	iteee	ls
 8015f48:	1b1c      	subls	r4, r3, r4
 8015f4a:	1ae4      	subhi	r4, r4, r3
 8015f4c:	4671      	movhi	r1, lr
 8015f4e:	f04f 0a00 	movhi.w	sl, #0
 8015f52:	bf9b      	ittet	ls
 8015f54:	fa1f fa84 	uxthls.w	sl, r4
 8015f58:	2400      	movls	r4, #0
 8015f5a:	b2a4      	uxthhi	r4, r4
 8015f5c:	fa1f f188 	uxthls.w	r1, r8
 8015f60:	4653      	mov	r3, sl
 8015f62:	468e      	mov	lr, r1
 8015f64:	e7db      	b.n	8015f1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 8015f66:	9a00      	ldr	r2, [sp, #0]
 8015f68:	9b00      	ldr	r3, [sp, #0]
 8015f6a:	3202      	adds	r2, #2
 8015f6c:	785b      	ldrb	r3, [r3, #1]
 8015f6e:	9200      	str	r2, [sp, #0]
 8015f70:	e7e7      	b.n	8015f42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8015f72:	2202      	movs	r2, #2
 8015f74:	9907      	ldr	r1, [sp, #28]
 8015f76:	4573      	cmp	r3, lr
 8015f78:	4615      	mov	r5, r2
 8015f7a:	9a02      	ldr	r2, [sp, #8]
 8015f7c:	bf24      	itt	cs
 8015f7e:	eba3 0a0e 	subcs.w	sl, r3, lr
 8015f82:	46f1      	movcs	r9, lr
 8015f84:	fb15 1202 	smlabb	r2, r5, r2, r1
 8015f88:	9905      	ldr	r1, [sp, #20]
 8015f8a:	bf34      	ite	cc
 8015f8c:	4699      	movcc	r9, r3
 8015f8e:	fa1f fa8a 	uxthcs.w	sl, sl
 8015f92:	f831 c002 	ldrh.w	ip, [r1, r2]
 8015f96:	bf38      	it	cc
 8015f98:	ebae 0103 	subcc.w	r1, lr, r3
 8015f9c:	9a01      	ldr	r2, [sp, #4]
 8015f9e:	bf2e      	itee	cs
 8015fa0:	4621      	movcs	r1, r4
 8015fa2:	b289      	uxthcc	r1, r1
 8015fa4:	46a2      	movcc	sl, r4
 8015fa6:	2aff      	cmp	r2, #255	@ 0xff
 8015fa8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015fac:	d105      	bne.n	8015fba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 8015fae:	4481      	add	r9, r0
 8015fb0:	4581      	cmp	r9, r0
 8015fb2:	d045      	beq.n	8016040 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8015fb4:	f820 cb02 	strh.w	ip, [r0], #2
 8015fb8:	e7fa      	b.n	8015fb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 8015fba:	ea4f 222c 	mov.w	r2, ip, asr #8
 8015fbe:	9d03      	ldr	r5, [sp, #12]
 8015fc0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015fc4:	4481      	add	r9, r0
 8015fc6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015fca:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8015fce:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015fd2:	fa5f fc8c 	uxtb.w	ip, ip
 8015fd6:	436a      	muls	r2, r5
 8015fd8:	fb0b fb05 	mul.w	fp, fp, r5
 8015fdc:	fb0c fc05 	mul.w	ip, ip, r5
 8015fe0:	9208      	str	r2, [sp, #32]
 8015fe2:	4581      	cmp	r9, r0
 8015fe4:	d02c      	beq.n	8016040 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8015fe6:	8802      	ldrh	r2, [r0, #0]
 8015fe8:	9d04      	ldr	r5, [sp, #16]
 8015fea:	1216      	asrs	r6, r2, #8
 8015fec:	9f04      	ldr	r7, [sp, #16]
 8015fee:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015ff2:	fb16 f605 	smulbb	r6, r6, r5
 8015ff6:	9d08      	ldr	r5, [sp, #32]
 8015ff8:	442e      	add	r6, r5
 8015ffa:	10d5      	asrs	r5, r2, #3
 8015ffc:	00d2      	lsls	r2, r2, #3
 8015ffe:	b2b6      	uxth	r6, r6
 8016000:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016004:	b2d2      	uxtb	r2, r2
 8016006:	fb15 f507 	smulbb	r5, r5, r7
 801600a:	fb12 f207 	smulbb	r2, r2, r7
 801600e:	1c77      	adds	r7, r6, #1
 8016010:	445d      	add	r5, fp
 8016012:	4462      	add	r2, ip
 8016014:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016018:	b2ad      	uxth	r5, r5
 801601a:	b292      	uxth	r2, r2
 801601c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016020:	1c57      	adds	r7, r2, #1
 8016022:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8016026:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801602a:	4316      	orrs	r6, r2
 801602c:	1c6a      	adds	r2, r5, #1
 801602e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016032:	096d      	lsrs	r5, r5, #5
 8016034:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016038:	432e      	orrs	r6, r5
 801603a:	f820 6b02 	strh.w	r6, [r0], #2
 801603e:	e7d0      	b.n	8015fe2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 8016040:	4573      	cmp	r3, lr
 8016042:	d38d      	bcc.n	8015f60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8016044:	fa1f f188 	uxth.w	r1, r8
 8016048:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801604c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801604e:	1a64      	subs	r4, r4, r1
 8016050:	881b      	ldrh	r3, [r3, #0]
 8016052:	b2a4      	uxth	r4, r4
 8016054:	eba3 0308 	sub.w	r3, r3, r8
 8016058:	2c00      	cmp	r4, #0
 801605a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801605e:	bf18      	it	ne
 8016060:	2100      	movne	r1, #0
 8016062:	e77d      	b.n	8015f60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8016064:	4b03      	ldr	r3, [pc, #12]	@ (8016074 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8016066:	6818      	ldr	r0, [r3, #0]
 8016068:	6803      	ldr	r3, [r0, #0]
 801606a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801606c:	4798      	blx	r3
 801606e:	b00f      	add	sp, #60	@ 0x3c
 8016070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016074:	20016b74 	.word	0x20016b74
 8016078:	20016b6e 	.word	0x20016b6e

0801607c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801607c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016080:	b09f      	sub	sp, #124	@ 0x7c
 8016082:	461d      	mov	r5, r3
 8016084:	4604      	mov	r4, r0
 8016086:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8016088:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801608c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8016090:	9209      	str	r2, [sp, #36]	@ 0x24
 8016092:	2a00      	cmp	r2, #0
 8016094:	f000 81ed 	beq.w	8016472 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 8016098:	6828      	ldr	r0, [r5, #0]
 801609a:	aa1a      	add	r2, sp, #104	@ 0x68
 801609c:	6869      	ldr	r1, [r5, #4]
 801609e:	c203      	stmia	r2!, {r0, r1}
 80160a0:	6818      	ldr	r0, [r3, #0]
 80160a2:	aa1c      	add	r2, sp, #112	@ 0x70
 80160a4:	6859      	ldr	r1, [r3, #4]
 80160a6:	c203      	stmia	r2!, {r0, r1}
 80160a8:	a81a      	add	r0, sp, #104	@ 0x68
 80160aa:	f7f9 fd5f 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80160ae:	4629      	mov	r1, r5
 80160b0:	a81c      	add	r0, sp, #112	@ 0x70
 80160b2:	f7f9 fd83 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80160b6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80160ba:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 80160be:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80160c2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 80160c6:	bfdb      	ittet	le
 80160c8:	b29a      	uxthle	r2, r3
 80160ca:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80160ce:	2201      	movgt	r2, #1
 80160d0:	fb91 f2f2 	sdivle	r2, r1, r2
 80160d4:	9202      	str	r2, [sp, #8]
 80160d6:	9802      	ldr	r0, [sp, #8]
 80160d8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80160dc:	9902      	ldr	r1, [sp, #8]
 80160de:	fb92 f0f0 	sdiv	r0, r2, r0
 80160e2:	b280      	uxth	r0, r0
 80160e4:	4488      	add	r8, r1
 80160e6:	9010      	str	r0, [sp, #64]	@ 0x40
 80160e8:	f108 38ff 	add.w	r8, r8, #4294967295
 80160ec:	9802      	ldr	r0, [sp, #8]
 80160ee:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80160f0:	fb05 2510 	mls	r5, r5, r0, r2
 80160f4:	fb98 f8f1 	sdiv	r8, r8, r1
 80160f8:	fb15 f503 	smulbb	r5, r5, r3
 80160fc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8016100:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8016104:	f108 0801 	add.w	r8, r8, #1
 8016108:	440d      	add	r5, r1
 801610a:	4419      	add	r1, r3
 801610c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8016110:	fa1f f888 	uxth.w	r8, r8
 8016114:	441a      	add	r2, r3
 8016116:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801611a:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801611e:	b2ad      	uxth	r5, r5
 8016120:	9304      	str	r3, [sp, #16]
 8016122:	4b94      	ldr	r3, [pc, #592]	@ (8016374 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016124:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8016128:	6818      	ldr	r0, [r3, #0]
 801612a:	6803      	ldr	r3, [r0, #0]
 801612c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801612e:	4798      	blx	r3
 8016130:	4b91      	ldr	r3, [pc, #580]	@ (8016378 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8016132:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8016136:	2d00      	cmp	r5, #0
 8016138:	881a      	ldrh	r2, [r3, #0]
 801613a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801613e:	fb02 f606 	mul.w	r6, r2, r6
 8016142:	fb02 7101 	mla	r1, r2, r1, r7
 8016146:	9318      	str	r3, [sp, #96]	@ 0x60
 8016148:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801614c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8016150:	f04f 0100 	mov.w	r1, #0
 8016154:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8016158:	930f      	str	r3, [sp, #60]	@ 0x3c
 801615a:	4b88      	ldr	r3, [pc, #544]	@ (801637c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 801615c:	920a      	str	r2, [sp, #40]	@ 0x28
 801615e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016160:	eba3 0304 	sub.w	r3, r3, r4
 8016164:	910d      	str	r1, [sp, #52]	@ 0x34
 8016166:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801616a:	9319      	str	r3, [sp, #100]	@ 0x64
 801616c:	f108 0204 	add.w	r2, r8, #4
 8016170:	9211      	str	r2, [sp, #68]	@ 0x44
 8016172:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016174:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8016178:	9215      	str	r2, [sp, #84]	@ 0x54
 801617a:	9a04      	ldr	r2, [sp, #16]
 801617c:	bf18      	it	ne
 801617e:	2200      	movne	r2, #0
 8016180:	b292      	uxth	r2, r2
 8016182:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8016184:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016186:	fa11 f383 	uxtah	r3, r1, r3
 801618a:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801618c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016190:	3304      	adds	r3, #4
 8016192:	9306      	str	r3, [sp, #24]
 8016194:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016196:	4283      	cmp	r3, r0
 8016198:	f240 8166 	bls.w	8016468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 801619c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80161a0:	f04f 0a01 	mov.w	sl, #1
 80161a4:	9902      	ldr	r1, [sp, #8]
 80161a6:	9e06      	ldr	r6, [sp, #24]
 80161a8:	46d3      	mov	fp, sl
 80161aa:	4657      	mov	r7, sl
 80161ac:	7836      	ldrb	r6, [r6, #0]
 80161ae:	fbb5 f3f3 	udiv	r3, r5, r3
 80161b2:	1acb      	subs	r3, r1, r3
 80161b4:	9612      	str	r6, [sp, #72]	@ 0x48
 80161b6:	3601      	adds	r6, #1
 80161b8:	b29b      	uxth	r3, r3
 80161ba:	9605      	str	r6, [sp, #20]
 80161bc:	9316      	str	r3, [sp, #88]	@ 0x58
 80161be:	9b06      	ldr	r3, [sp, #24]
 80161c0:	7859      	ldrb	r1, [r3, #1]
 80161c2:	789b      	ldrb	r3, [r3, #2]
 80161c4:	021b      	lsls	r3, r3, #8
 80161c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80161ca:	9906      	ldr	r1, [sp, #24]
 80161cc:	78c9      	ldrb	r1, [r1, #3]
 80161ce:	430b      	orrs	r3, r1
 80161d0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80161d2:	4419      	add	r1, r3
 80161d4:	1c4e      	adds	r6, r1, #1
 80161d6:	7849      	ldrb	r1, [r1, #1]
 80161d8:	9603      	str	r6, [sp, #12]
 80161da:	0209      	lsls	r1, r1, #8
 80161dc:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80161de:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 80161e2:	5cf3      	ldrb	r3, [r6, r3]
 80161e4:	4319      	orrs	r1, r3
 80161e6:	b28b      	uxth	r3, r1
 80161e8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80161ec:	930c      	str	r3, [sp, #48]	@ 0x30
 80161ee:	2300      	movs	r3, #0
 80161f0:	9307      	str	r3, [sp, #28]
 80161f2:	469c      	mov	ip, r3
 80161f4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80161f8:	930e      	str	r3, [sp, #56]	@ 0x38
 80161fa:	2d00      	cmp	r5, #0
 80161fc:	d07e      	beq.n	80162fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 80161fe:	42af      	cmp	r7, r5
 8016200:	d26e      	bcs.n	80162e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 8016202:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016204:	1bed      	subs	r5, r5, r7
 8016206:	9201      	str	r2, [sp, #4]
 8016208:	4283      	cmp	r3, r0
 801620a:	b2ad      	uxth	r5, r5
 801620c:	d802      	bhi.n	8016214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 801620e:	e073      	b.n	80162f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8016210:	2b00      	cmp	r3, #0
 8016212:	d15f      	bne.n	80162d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 8016214:	9b03      	ldr	r3, [sp, #12]
 8016216:	f1cb 0207 	rsb	r2, fp, #7
 801621a:	785b      	ldrb	r3, [r3, #1]
 801621c:	4093      	lsls	r3, r2
 801621e:	005b      	lsls	r3, r3, #1
 8016220:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8016224:	9b03      	ldr	r3, [sp, #12]
 8016226:	781b      	ldrb	r3, [r3, #0]
 8016228:	fa43 f30b 	asr.w	r3, r3, fp
 801622c:	b2db      	uxtb	r3, r3
 801622e:	4313      	orrs	r3, r2
 8016230:	f10b 0201 	add.w	r2, fp, #1
 8016234:	fa5f fb82 	uxtb.w	fp, r2
 8016238:	9a03      	ldr	r2, [sp, #12]
 801623a:	b29f      	uxth	r7, r3
 801623c:	f1bb 0f08 	cmp.w	fp, #8
 8016240:	bf13      	iteet	ne
 8016242:	3201      	addne	r2, #1
 8016244:	3202      	addeq	r2, #2
 8016246:	f04f 0b00 	moveq.w	fp, #0
 801624a:	9203      	strne	r2, [sp, #12]
 801624c:	bf08      	it	eq
 801624e:	9203      	streq	r2, [sp, #12]
 8016250:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016252:	42ba      	cmp	r2, r7
 8016254:	d309      	bcc.n	801626a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 8016256:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801625a:	2301      	movs	r3, #1
 801625c:	9a05      	ldr	r2, [sp, #20]
 801625e:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8016262:	d30e      	bcc.n	8016282 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8016264:	469a      	mov	sl, r3
 8016266:	2600      	movs	r6, #0
 8016268:	e035      	b.n	80162d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 801626a:	9b05      	ldr	r3, [sp, #20]
 801626c:	429f      	cmp	r7, r3
 801626e:	d318      	bcc.n	80162a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 8016270:	eb04 030a 	add.w	r3, r4, sl
 8016274:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8016278:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801627c:	f10a 0301 	add.w	r3, sl, #1
 8016280:	b29b      	uxth	r3, r3
 8016282:	9a05      	ldr	r2, [sp, #20]
 8016284:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8016288:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801628c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801628e:	7116      	strb	r6, [r2, #4]
 8016290:	f10a 0601 	add.w	r6, sl, #1
 8016294:	80d1      	strh	r1, [r2, #6]
 8016296:	7156      	strb	r6, [r2, #5]
 8016298:	9a05      	ldr	r2, [sp, #20]
 801629a:	3201      	adds	r2, #1
 801629c:	b292      	uxth	r2, r2
 801629e:	9205      	str	r2, [sp, #20]
 80162a0:	e7e0      	b.n	8016264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 80162a2:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 80162a6:	463a      	mov	r2, r7
 80162a8:	795b      	ldrb	r3, [r3, #5]
 80162aa:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80162ae:	4426      	add	r6, r4
 80162b0:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80162b2:	eb01 0c06 	add.w	ip, r1, r6
 80162b6:	f1bc 0f00 	cmp.w	ip, #0
 80162ba:	dd07      	ble.n	80162cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 80162bc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80162c0:	f892 c004 	ldrb.w	ip, [r2, #4]
 80162c4:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80162c8:	88d2      	ldrh	r2, [r2, #6]
 80162ca:	e7f1      	b.n	80162b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 80162cc:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80162d0:	b29b      	uxth	r3, r3
 80162d2:	e7c3      	b.n	801625c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 80162d4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80162d6:	970c      	str	r7, [sp, #48]	@ 0x30
 80162d8:	46b4      	mov	ip, r6
 80162da:	9a01      	ldr	r2, [sp, #4]
 80162dc:	461f      	mov	r7, r3
 80162de:	e78c      	b.n	80161fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 80162e0:	1b7b      	subs	r3, r7, r5
 80162e2:	eb0c 0605 	add.w	r6, ip, r5
 80162e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80162ea:	b29b      	uxth	r3, r3
 80162ec:	b2b6      	uxth	r6, r6
 80162ee:	9201      	str	r2, [sp, #4]
 80162f0:	2500      	movs	r5, #0
 80162f2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80162f4:	4282      	cmp	r2, r0
 80162f6:	d88b      	bhi.n	8016210 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 80162f8:	9a01      	ldr	r2, [sp, #4]
 80162fa:	e74b      	b.n	8016194 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 80162fc:	4297      	cmp	r7, r2
 80162fe:	d332      	bcc.n	8016366 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 8016300:	1abb      	subs	r3, r7, r2
 8016302:	9208      	str	r2, [sp, #32]
 8016304:	9501      	str	r5, [sp, #4]
 8016306:	b29b      	uxth	r3, r3
 8016308:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801630a:	29ff      	cmp	r1, #255	@ 0xff
 801630c:	9908      	ldr	r1, [sp, #32]
 801630e:	eb0c 0601 	add.w	r6, ip, r1
 8016312:	d135      	bne.n	8016380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8016314:	f1a0 0e02 	sub.w	lr, r0, #2
 8016318:	b2b6      	uxth	r6, r6
 801631a:	45b4      	cmp	ip, r6
 801631c:	f040 808c 	bne.w	8016438 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 8016320:	9908      	ldr	r1, [sp, #32]
 8016322:	4297      	cmp	r7, r2
 8016324:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016328:	d3e2      	bcc.n	80162f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 801632a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801632c:	9904      	ldr	r1, [sp, #16]
 801632e:	8812      	ldrh	r2, [r2, #0]
 8016330:	1a52      	subs	r2, r2, r1
 8016332:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8016334:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016338:	9a07      	ldr	r2, [sp, #28]
 801633a:	3201      	adds	r2, #1
 801633c:	428a      	cmp	r2, r1
 801633e:	9207      	str	r2, [sp, #28]
 8016340:	f040 8087 	bne.w	8016452 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 8016344:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8016348:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801634c:	9b04      	ldr	r3, [sp, #16]
 801634e:	1bed      	subs	r5, r5, r7
 8016350:	b2ad      	uxth	r5, r5
 8016352:	2d00      	cmp	r5, #0
 8016354:	bf08      	it	eq
 8016356:	461a      	moveq	r2, r3
 8016358:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801635a:	bf18      	it	ne
 801635c:	2200      	movne	r2, #0
 801635e:	3301      	adds	r3, #1
 8016360:	b292      	uxth	r2, r2
 8016362:	930d      	str	r3, [sp, #52]	@ 0x34
 8016364:	e70d      	b.n	8016182 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 8016366:	1bd1      	subs	r1, r2, r7
 8016368:	9708      	str	r7, [sp, #32]
 801636a:	b28b      	uxth	r3, r1
 801636c:	9301      	str	r3, [sp, #4]
 801636e:	462b      	mov	r3, r5
 8016370:	e7ca      	b.n	8016308 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 8016372:	bf00      	nop
 8016374:	20016b74 	.word	0x20016b74
 8016378:	20016b6e 	.word	0x20016b6e
 801637c:	fffff7fb 	.word	0xfffff7fb
 8016380:	b2b6      	uxth	r6, r6
 8016382:	900b      	str	r0, [sp, #44]	@ 0x2c
 8016384:	45b4      	cmp	ip, r6
 8016386:	d0cb      	beq.n	8016320 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 8016388:	f10c 0101 	add.w	r1, ip, #1
 801638c:	44a4      	add	ip, r4
 801638e:	9117      	str	r1, [sp, #92]	@ 0x5c
 8016390:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016394:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016396:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801639a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801639c:	ea4f 2825 	mov.w	r8, r5, asr #8
 80163a0:	f8b1 c000 	ldrh.w	ip, [r1]
 80163a4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80163a6:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80163aa:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 80163ae:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80163b2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80163b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80163ba:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80163be:	fb1e fe01 	smulbb	lr, lr, r1
 80163c2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80163c4:	fa5f fc8c 	uxtb.w	ip, ip
 80163c8:	fb08 e801 	mla	r8, r8, r1, lr
 80163cc:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 80163d0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80163d2:	00ed      	lsls	r5, r5, #3
 80163d4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80163d8:	fa1f f888 	uxth.w	r8, r8
 80163dc:	fb19 f901 	smulbb	r9, r9, r1
 80163e0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80163e2:	b2ed      	uxtb	r5, r5
 80163e4:	fb0e 9e01 	mla	lr, lr, r1, r9
 80163e8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80163ea:	fb1c fc01 	smulbb	ip, ip, r1
 80163ee:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80163f0:	fa1f fe8e 	uxth.w	lr, lr
 80163f4:	fb05 c501 	mla	r5, r5, r1, ip
 80163f8:	f108 0c01 	add.w	ip, r8, #1
 80163fc:	f10e 0901 	add.w	r9, lr, #1
 8016400:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016402:	b2ad      	uxth	r5, r5
 8016404:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016408:	f105 0c01 	add.w	ip, r5, #1
 801640c:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8016410:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8016414:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8016418:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801641c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016420:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016424:	ea4c 0808 	orr.w	r8, ip, r8
 8016428:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801642c:	ea48 0809 	orr.w	r8, r8, r9
 8016430:	f821 8b02 	strh.w	r8, [r1], #2
 8016434:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016436:	e7a5      	b.n	8016384 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 8016438:	f10c 0801 	add.w	r8, ip, #1
 801643c:	44a4      	add	ip, r4
 801643e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016440:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016444:	fa1f fc88 	uxth.w	ip, r8
 8016448:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801644c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8016450:	e763      	b.n	801631a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 8016452:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016456:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801645a:	1aad      	subs	r5, r5, r2
 801645c:	b2ad      	uxth	r5, r5
 801645e:	2d00      	cmp	r5, #0
 8016460:	bf18      	it	ne
 8016462:	2200      	movne	r2, #0
 8016464:	9201      	str	r2, [sp, #4]
 8016466:	e744      	b.n	80162f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 8016468:	4b03      	ldr	r3, [pc, #12]	@ (8016478 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 801646a:	6818      	ldr	r0, [r3, #0]
 801646c:	6803      	ldr	r3, [r0, #0]
 801646e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016470:	4798      	blx	r3
 8016472:	b01f      	add	sp, #124	@ 0x7c
 8016474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016478:	20016b74 	.word	0x20016b74

0801647c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801647c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016480:	b08f      	sub	sp, #60	@ 0x3c
 8016482:	461c      	mov	r4, r3
 8016484:	460f      	mov	r7, r1
 8016486:	9203      	str	r2, [sp, #12]
 8016488:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801648c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801648e:	9202      	str	r2, [sp, #8]
 8016490:	2a00      	cmp	r2, #0
 8016492:	f000 8128 	beq.w	80166e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8016496:	6820      	ldr	r0, [r4, #0]
 8016498:	aa0a      	add	r2, sp, #40	@ 0x28
 801649a:	6861      	ldr	r1, [r4, #4]
 801649c:	c203      	stmia	r2!, {r0, r1}
 801649e:	6818      	ldr	r0, [r3, #0]
 80164a0:	aa0c      	add	r2, sp, #48	@ 0x30
 80164a2:	6859      	ldr	r1, [r3, #4]
 80164a4:	c203      	stmia	r2!, {r0, r1}
 80164a6:	a80a      	add	r0, sp, #40	@ 0x28
 80164a8:	f7f9 fb60 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80164ac:	4621      	mov	r1, r4
 80164ae:	a80c      	add	r0, sp, #48	@ 0x30
 80164b0:	f7f9 fb84 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80164b4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80164b8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80164bc:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80164c0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80164c4:	bfdb      	ittet	le
 80164c6:	b2b3      	uxthle	r3, r6
 80164c8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80164cc:	2301      	movgt	r3, #1
 80164ce:	fb92 f3f3 	sdivle	r3, r2, r3
 80164d2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80164d6:	441d      	add	r5, r3
 80164d8:	fb92 f1f3 	sdiv	r1, r2, r3
 80164dc:	fa1f fc81 	uxth.w	ip, r1
 80164e0:	3d01      	subs	r5, #1
 80164e2:	fb0c 2413 	mls	r4, ip, r3, r2
 80164e6:	4661      	mov	r1, ip
 80164e8:	fb14 f406 	smulbb	r4, r4, r6
 80164ec:	4404      	add	r4, r0
 80164ee:	fb95 f5f3 	sdiv	r5, r5, r3
 80164f2:	b2a4      	uxth	r4, r4
 80164f4:	b121      	cbz	r1, 8016500 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 80164f6:	9b03      	ldr	r3, [sp, #12]
 80164f8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80164fc:	ba1b      	rev	r3, r3
 80164fe:	441f      	add	r7, r3
 8016500:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016504:	b2ad      	uxth	r5, r5
 8016506:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801650a:	4418      	add	r0, r3
 801650c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8016510:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8016514:	00ad      	lsls	r5, r5, #2
 8016516:	441a      	add	r2, r3
 8016518:	4b74      	ldr	r3, [pc, #464]	@ (80166ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801651a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801651e:	6818      	ldr	r0, [r3, #0]
 8016520:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8016524:	6803      	ldr	r3, [r0, #0]
 8016526:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016528:	4798      	blx	r3
 801652a:	4a71      	ldr	r2, [pc, #452]	@ (80166f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801652c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8016530:	2c00      	cmp	r4, #0
 8016532:	8813      	ldrh	r3, [r2, #0]
 8016534:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8016538:	bf0c      	ite	eq
 801653a:	46c8      	moveq	r8, r9
 801653c:	f04f 0800 	movne.w	r8, #0
 8016540:	9209      	str	r2, [sp, #36]	@ 0x24
 8016542:	fb03 c101 	mla	r1, r3, r1, ip
 8016546:	4373      	muls	r3, r6
 8016548:	fa1f f888 	uxth.w	r8, r8
 801654c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016550:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016554:	9304      	str	r3, [sp, #16]
 8016556:	1d2b      	adds	r3, r5, #4
 8016558:	9305      	str	r3, [sp, #20]
 801655a:	2300      	movs	r3, #0
 801655c:	9301      	str	r3, [sp, #4]
 801655e:	9a04      	ldr	r2, [sp, #16]
 8016560:	4282      	cmp	r2, r0
 8016562:	f240 80bb 	bls.w	80166dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8016566:	b95b      	cbnz	r3, 8016580 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 8016568:	783a      	ldrb	r2, [r7, #0]
 801656a:	0993      	lsrs	r3, r2, #6
 801656c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016570:	9201      	str	r2, [sp, #4]
 8016572:	1e5a      	subs	r2, r3, #1
 8016574:	2a02      	cmp	r2, #2
 8016576:	bf8d      	iteet	hi
 8016578:	787b      	ldrbhi	r3, [r7, #1]
 801657a:	3701      	addls	r7, #1
 801657c:	b29b      	uxthls	r3, r3
 801657e:	3702      	addhi	r7, #2
 8016580:	b184      	cbz	r4, 80165a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 8016582:	429c      	cmp	r4, r3
 8016584:	bf91      	iteee	ls
 8016586:	1b1c      	subls	r4, r3, r4
 8016588:	1ae4      	subhi	r4, r4, r3
 801658a:	46c4      	movhi	ip, r8
 801658c:	f04f 0a00 	movhi.w	sl, #0
 8016590:	bf9b      	ittet	ls
 8016592:	fa1f fa84 	uxthls.w	sl, r4
 8016596:	2400      	movls	r4, #0
 8016598:	b2a4      	uxthhi	r4, r4
 801659a:	fa1f fc89 	uxthls.w	ip, r9
 801659e:	4653      	mov	r3, sl
 80165a0:	46e0      	mov	r8, ip
 80165a2:	e7dc      	b.n	801655e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 80165a4:	2204      	movs	r2, #4
 80165a6:	9905      	ldr	r1, [sp, #20]
 80165a8:	4543      	cmp	r3, r8
 80165aa:	4615      	mov	r5, r2
 80165ac:	9a01      	ldr	r2, [sp, #4]
 80165ae:	bf24      	itt	cs
 80165b0:	eba3 0a08 	subcs.w	sl, r3, r8
 80165b4:	46c6      	movcs	lr, r8
 80165b6:	fb15 1202 	smlabb	r2, r5, r2, r1
 80165ba:	9903      	ldr	r1, [sp, #12]
 80165bc:	bf3c      	itt	cc
 80165be:	eba8 0c03 	subcc.w	ip, r8, r3
 80165c2:	469e      	movcc	lr, r3
 80165c4:	588a      	ldr	r2, [r1, r2]
 80165c6:	bf26      	itte	cs
 80165c8:	fa1f fa8a 	uxthcs.w	sl, sl
 80165cc:	46a4      	movcs	ip, r4
 80165ce:	fa1f fc8c 	uxthcc.w	ip, ip
 80165d2:	ea4f 6112 	mov.w	r1, r2, lsr #24
 80165d6:	bf38      	it	cc
 80165d8:	46a2      	movcc	sl, r4
 80165da:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80165de:	2900      	cmp	r1, #0
 80165e0:	d066      	beq.n	80166b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 80165e2:	29ff      	cmp	r1, #255	@ 0xff
 80165e4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80165e8:	d114      	bne.n	8016614 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80165ea:	9d02      	ldr	r5, [sp, #8]
 80165ec:	2dff      	cmp	r5, #255	@ 0xff
 80165ee:	d111      	bne.n	8016614 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80165f0:	0951      	lsrs	r1, r2, #5
 80165f2:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80165f6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80165fa:	4486      	add	lr, r0
 80165fc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016600:	f026 0607 	bic.w	r6, r6, #7
 8016604:	430e      	orrs	r6, r1
 8016606:	4316      	orrs	r6, r2
 8016608:	b2b6      	uxth	r6, r6
 801660a:	4586      	cmp	lr, r0
 801660c:	d051      	beq.n	80166b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801660e:	f820 6b02 	strh.w	r6, [r0], #2
 8016612:	e7fa      	b.n	801660a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8016614:	9d02      	ldr	r5, [sp, #8]
 8016616:	b2f6      	uxtb	r6, r6
 8016618:	4486      	add	lr, r0
 801661a:	4369      	muls	r1, r5
 801661c:	1c4d      	adds	r5, r1, #1
 801661e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8016622:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8016626:	b2d2      	uxtb	r2, r2
 8016628:	122d      	asrs	r5, r5, #8
 801662a:	ea6f 0b05 	mvn.w	fp, r5
 801662e:	b2ad      	uxth	r5, r5
 8016630:	fb11 f105 	smulbb	r1, r1, r5
 8016634:	fa5f fb8b 	uxtb.w	fp, fp
 8016638:	fb16 f605 	smulbb	r6, r6, r5
 801663c:	fb12 f205 	smulbb	r2, r2, r5
 8016640:	b289      	uxth	r1, r1
 8016642:	b2b6      	uxth	r6, r6
 8016644:	b292      	uxth	r2, r2
 8016646:	9106      	str	r1, [sp, #24]
 8016648:	9607      	str	r6, [sp, #28]
 801664a:	9208      	str	r2, [sp, #32]
 801664c:	4586      	cmp	lr, r0
 801664e:	d030      	beq.n	80166b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016650:	8802      	ldrh	r2, [r0, #0]
 8016652:	9906      	ldr	r1, [sp, #24]
 8016654:	1216      	asrs	r6, r2, #8
 8016656:	10d5      	asrs	r5, r2, #3
 8016658:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801665c:	00d2      	lsls	r2, r2, #3
 801665e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016662:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016666:	b2d2      	uxtb	r2, r2
 8016668:	fb06 160b 	mla	r6, r6, fp, r1
 801666c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016670:	9907      	ldr	r1, [sp, #28]
 8016672:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016676:	b2b6      	uxth	r6, r6
 8016678:	fb05 150b 	mla	r5, r5, fp, r1
 801667c:	9908      	ldr	r1, [sp, #32]
 801667e:	fb02 120b 	mla	r2, r2, fp, r1
 8016682:	1c71      	adds	r1, r6, #1
 8016684:	b2ad      	uxth	r5, r5
 8016686:	b292      	uxth	r2, r2
 8016688:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801668c:	1c51      	adds	r1, r2, #1
 801668e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016692:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016696:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801669a:	4316      	orrs	r6, r2
 801669c:	1c6a      	adds	r2, r5, #1
 801669e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80166a2:	096d      	lsrs	r5, r5, #5
 80166a4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80166a8:	432e      	orrs	r6, r5
 80166aa:	f820 6b02 	strh.w	r6, [r0], #2
 80166ae:	e7cd      	b.n	801664c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 80166b0:	4470      	add	r0, lr
 80166b2:	4543      	cmp	r3, r8
 80166b4:	f4ff af73 	bcc.w	801659e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80166b8:	fa1f fc89 	uxth.w	ip, r9
 80166bc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 80166c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80166c2:	eba4 040c 	sub.w	r4, r4, ip
 80166c6:	881b      	ldrh	r3, [r3, #0]
 80166c8:	b2a4      	uxth	r4, r4
 80166ca:	eba3 0309 	sub.w	r3, r3, r9
 80166ce:	2c00      	cmp	r4, #0
 80166d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80166d4:	bf18      	it	ne
 80166d6:	f04f 0c00 	movne.w	ip, #0
 80166da:	e760      	b.n	801659e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80166dc:	4b03      	ldr	r3, [pc, #12]	@ (80166ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80166de:	6818      	ldr	r0, [r3, #0]
 80166e0:	6803      	ldr	r3, [r0, #0]
 80166e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80166e4:	4798      	blx	r3
 80166e6:	b00f      	add	sp, #60	@ 0x3c
 80166e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80166ec:	20016b74 	.word	0x20016b74
 80166f0:	20016b6e 	.word	0x20016b6e

080166f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80166f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166f8:	b093      	sub	sp, #76	@ 0x4c
 80166fa:	461c      	mov	r4, r3
 80166fc:	9205      	str	r2, [sp, #20]
 80166fe:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8016702:	9101      	str	r1, [sp, #4]
 8016704:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016706:	9202      	str	r2, [sp, #8]
 8016708:	2a00      	cmp	r2, #0
 801670a:	f000 812e 	beq.w	801696a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801670e:	6820      	ldr	r0, [r4, #0]
 8016710:	aa0e      	add	r2, sp, #56	@ 0x38
 8016712:	6861      	ldr	r1, [r4, #4]
 8016714:	c203      	stmia	r2!, {r0, r1}
 8016716:	6818      	ldr	r0, [r3, #0]
 8016718:	aa10      	add	r2, sp, #64	@ 0x40
 801671a:	6859      	ldr	r1, [r3, #4]
 801671c:	c203      	stmia	r2!, {r0, r1}
 801671e:	a80e      	add	r0, sp, #56	@ 0x38
 8016720:	f7f9 fa24 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016724:	4621      	mov	r1, r4
 8016726:	a810      	add	r0, sp, #64	@ 0x40
 8016728:	f7f9 fa48 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801672c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8016730:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8016734:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016738:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801673c:	bfdb      	ittet	le
 801673e:	b2b3      	uxthle	r3, r6
 8016740:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016744:	2301      	movgt	r3, #1
 8016746:	fb92 f3f3 	sdivle	r3, r2, r3
 801674a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801674e:	441d      	add	r5, r3
 8016750:	fb92 f1f3 	sdiv	r1, r2, r3
 8016754:	fa1f fc81 	uxth.w	ip, r1
 8016758:	3d01      	subs	r5, #1
 801675a:	fb0c 2413 	mls	r4, ip, r3, r2
 801675e:	4661      	mov	r1, ip
 8016760:	fb14 f406 	smulbb	r4, r4, r6
 8016764:	4404      	add	r4, r0
 8016766:	fb95 f5f3 	sdiv	r5, r5, r3
 801676a:	b2a4      	uxth	r4, r4
 801676c:	b131      	cbz	r1, 801677c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 801676e:	9b05      	ldr	r3, [sp, #20]
 8016770:	9901      	ldr	r1, [sp, #4]
 8016772:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016776:	ba1b      	rev	r3, r3
 8016778:	4419      	add	r1, r3
 801677a:	9101      	str	r1, [sp, #4]
 801677c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8016780:	b2ad      	uxth	r5, r5
 8016782:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8016786:	4418      	add	r0, r3
 8016788:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801678c:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8016790:	00ad      	lsls	r5, r5, #2
 8016792:	441a      	add	r2, r3
 8016794:	4b76      	ldr	r3, [pc, #472]	@ (8016970 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8016796:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801679a:	6818      	ldr	r0, [r3, #0]
 801679c:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 80167a0:	6803      	ldr	r3, [r0, #0]
 80167a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80167a4:	4798      	blx	r3
 80167a6:	4973      	ldr	r1, [pc, #460]	@ (8016974 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 80167a8:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 80167ac:	2c00      	cmp	r4, #0
 80167ae:	880b      	ldrh	r3, [r1, #0]
 80167b0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80167b4:	910d      	str	r1, [sp, #52]	@ 0x34
 80167b6:	fb03 c202 	mla	r2, r3, r2, ip
 80167ba:	bf08      	it	eq
 80167bc:	46dc      	moveq	ip, fp
 80167be:	fb03 f306 	mul.w	r3, r3, r6
 80167c2:	bf18      	it	ne
 80167c4:	f04f 0c00 	movne.w	ip, #0
 80167c8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80167cc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80167d0:	fa1f fc8c 	uxth.w	ip, ip
 80167d4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80167d8:	9106      	str	r1, [sp, #24]
 80167da:	9308      	str	r3, [sp, #32]
 80167dc:	1d2b      	adds	r3, r5, #4
 80167de:	9309      	str	r3, [sp, #36]	@ 0x24
 80167e0:	9b02      	ldr	r3, [sp, #8]
 80167e2:	43da      	mvns	r2, r3
 80167e4:	2300      	movs	r3, #0
 80167e6:	b2d2      	uxtb	r2, r2
 80167e8:	9303      	str	r3, [sp, #12]
 80167ea:	9207      	str	r2, [sp, #28]
 80167ec:	9a08      	ldr	r2, [sp, #32]
 80167ee:	4282      	cmp	r2, r0
 80167f0:	f240 80b6 	bls.w	8016960 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 80167f4:	b963      	cbnz	r3, 8016810 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 80167f6:	9b01      	ldr	r3, [sp, #4]
 80167f8:	781a      	ldrb	r2, [r3, #0]
 80167fa:	0993      	lsrs	r3, r2, #6
 80167fc:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016800:	9203      	str	r2, [sp, #12]
 8016802:	1e5a      	subs	r2, r3, #1
 8016804:	2a02      	cmp	r2, #2
 8016806:	d815      	bhi.n	8016834 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 8016808:	9a01      	ldr	r2, [sp, #4]
 801680a:	b29b      	uxth	r3, r3
 801680c:	3201      	adds	r2, #1
 801680e:	9201      	str	r2, [sp, #4]
 8016810:	b1b4      	cbz	r4, 8016840 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 8016812:	429c      	cmp	r4, r3
 8016814:	bf91      	iteee	ls
 8016816:	1b1c      	subls	r4, r3, r4
 8016818:	1ae4      	subhi	r4, r4, r3
 801681a:	4666      	movhi	r6, ip
 801681c:	f04f 0800 	movhi.w	r8, #0
 8016820:	bf9b      	ittet	ls
 8016822:	fa1f f884 	uxthls.w	r8, r4
 8016826:	2400      	movls	r4, #0
 8016828:	b2a4      	uxthhi	r4, r4
 801682a:	fa1f f68b 	uxthls.w	r6, fp
 801682e:	4643      	mov	r3, r8
 8016830:	46b4      	mov	ip, r6
 8016832:	e7db      	b.n	80167ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 8016834:	9a01      	ldr	r2, [sp, #4]
 8016836:	9b01      	ldr	r3, [sp, #4]
 8016838:	3202      	adds	r2, #2
 801683a:	785b      	ldrb	r3, [r3, #1]
 801683c:	9201      	str	r2, [sp, #4]
 801683e:	e7e7      	b.n	8016810 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 8016840:	2203      	movs	r2, #3
 8016842:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016844:	4563      	cmp	r3, ip
 8016846:	4615      	mov	r5, r2
 8016848:	9a03      	ldr	r2, [sp, #12]
 801684a:	bf2c      	ite	cs
 801684c:	eba3 080c 	subcs.w	r8, r3, ip
 8016850:	ebac 0603 	subcc.w	r6, ip, r3
 8016854:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016858:	9905      	ldr	r1, [sp, #20]
 801685a:	bf24      	itt	cs
 801685c:	fa1f f888 	uxthcs.w	r8, r8
 8016860:	46e1      	movcs	r9, ip
 8016862:	eb01 0502 	add.w	r5, r1, r2
 8016866:	9902      	ldr	r1, [sp, #8]
 8016868:	bf2f      	iteee	cs
 801686a:	4626      	movcs	r6, r4
 801686c:	b2b6      	uxthcc	r6, r6
 801686e:	4699      	movcc	r9, r3
 8016870:	46a0      	movcc	r8, r4
 8016872:	29ff      	cmp	r1, #255	@ 0xff
 8016874:	d04a      	beq.n	801690c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8016876:	9f06      	ldr	r7, [sp, #24]
 8016878:	46ca      	mov	sl, r9
 801687a:	78a9      	ldrb	r1, [r5, #2]
 801687c:	9004      	str	r0, [sp, #16]
 801687e:	4379      	muls	r1, r7
 8016880:	910a      	str	r1, [sp, #40]	@ 0x28
 8016882:	7869      	ldrb	r1, [r5, #1]
 8016884:	4379      	muls	r1, r7
 8016886:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016888:	9905      	ldr	r1, [sp, #20]
 801688a:	5c8a      	ldrb	r2, [r1, r2]
 801688c:	437a      	muls	r2, r7
 801688e:	920c      	str	r2, [sp, #48]	@ 0x30
 8016890:	f1ba 0f00 	cmp.w	sl, #0
 8016894:	d03d      	beq.n	8016912 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8016896:	9a04      	ldr	r2, [sp, #16]
 8016898:	f10a 3aff 	add.w	sl, sl, #4294967295
 801689c:	9f07      	ldr	r7, [sp, #28]
 801689e:	8812      	ldrh	r2, [r2, #0]
 80168a0:	fa1f fa8a 	uxth.w	sl, sl
 80168a4:	46be      	mov	lr, r7
 80168a6:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80168a8:	1215      	asrs	r5, r2, #8
 80168aa:	10d1      	asrs	r1, r2, #3
 80168ac:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80168b0:	00d2      	lsls	r2, r2, #3
 80168b2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80168b6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80168ba:	b2d2      	uxtb	r2, r2
 80168bc:	fb05 750e 	mla	r5, r5, lr, r7
 80168c0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80168c4:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80168c6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80168ca:	b2ad      	uxth	r5, r5
 80168cc:	fb01 710e 	mla	r1, r1, lr, r7
 80168d0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80168d2:	fb02 720e 	mla	r2, r2, lr, r7
 80168d6:	f105 0e01 	add.w	lr, r5, #1
 80168da:	b289      	uxth	r1, r1
 80168dc:	b292      	uxth	r2, r2
 80168de:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80168e2:	f102 0e01 	add.w	lr, r2, #1
 80168e6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80168ea:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80168ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80168f2:	4315      	orrs	r5, r2
 80168f4:	1c4a      	adds	r2, r1, #1
 80168f6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80168fa:	9a04      	ldr	r2, [sp, #16]
 80168fc:	0949      	lsrs	r1, r1, #5
 80168fe:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016902:	430d      	orrs	r5, r1
 8016904:	f822 5b02 	strh.w	r5, [r2], #2
 8016908:	9204      	str	r2, [sp, #16]
 801690a:	e7c1      	b.n	8016890 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 801690c:	4649      	mov	r1, r9
 801690e:	4686      	mov	lr, r0
 8016910:	b999      	cbnz	r1, 801693a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 8016912:	4563      	cmp	r3, ip
 8016914:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8016918:	d389      	bcc.n	801682e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801691a:	fa1f f68b 	uxth.w	r6, fp
 801691e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8016922:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016924:	1ba4      	subs	r4, r4, r6
 8016926:	881b      	ldrh	r3, [r3, #0]
 8016928:	b2a4      	uxth	r4, r4
 801692a:	eba3 030b 	sub.w	r3, r3, fp
 801692e:	2c00      	cmp	r4, #0
 8016930:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016934:	bf18      	it	ne
 8016936:	2600      	movne	r6, #0
 8016938:	e779      	b.n	801682e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801693a:	78aa      	ldrb	r2, [r5, #2]
 801693c:	3901      	subs	r1, #1
 801693e:	4f0e      	ldr	r7, [pc, #56]	@ (8016978 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 8016940:	b289      	uxth	r1, r1
 8016942:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8016946:	786a      	ldrb	r2, [r5, #1]
 8016948:	00d2      	lsls	r2, r2, #3
 801694a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801694e:	ea4a 0202 	orr.w	r2, sl, r2
 8016952:	f895 a000 	ldrb.w	sl, [r5]
 8016956:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801695a:	f82e 2b02 	strh.w	r2, [lr], #2
 801695e:	e7d7      	b.n	8016910 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 8016960:	4b03      	ldr	r3, [pc, #12]	@ (8016970 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8016962:	6818      	ldr	r0, [r3, #0]
 8016964:	6803      	ldr	r3, [r0, #0]
 8016966:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016968:	4798      	blx	r3
 801696a:	b013      	add	sp, #76	@ 0x4c
 801696c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016970:	20016b74 	.word	0x20016b74
 8016974:	20016b6e 	.word	0x20016b6e
 8016978:	fffff800 	.word	0xfffff800

0801697c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801697c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016980:	b09d      	sub	sp, #116	@ 0x74
 8016982:	461c      	mov	r4, r3
 8016984:	4683      	mov	fp, r0
 8016986:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8016988:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 801698c:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8016990:	920e      	str	r2, [sp, #56]	@ 0x38
 8016992:	2a00      	cmp	r2, #0
 8016994:	f000 81e4 	beq.w	8016d60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 8016998:	6820      	ldr	r0, [r4, #0]
 801699a:	aa18      	add	r2, sp, #96	@ 0x60
 801699c:	6861      	ldr	r1, [r4, #4]
 801699e:	c203      	stmia	r2!, {r0, r1}
 80169a0:	6818      	ldr	r0, [r3, #0]
 80169a2:	aa1a      	add	r2, sp, #104	@ 0x68
 80169a4:	6859      	ldr	r1, [r3, #4]
 80169a6:	c203      	stmia	r2!, {r0, r1}
 80169a8:	a818      	add	r0, sp, #96	@ 0x60
 80169aa:	f7f9 f8df 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80169ae:	4621      	mov	r1, r4
 80169b0:	a81a      	add	r0, sp, #104	@ 0x68
 80169b2:	f7f9 f903 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80169b6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 80169ba:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 80169be:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80169c2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 80169c6:	bfdb      	ittet	le
 80169c8:	b29a      	uxthle	r2, r3
 80169ca:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80169ce:	2201      	movgt	r2, #1
 80169d0:	fb91 f2f2 	sdivle	r2, r1, r2
 80169d4:	9202      	str	r2, [sp, #8]
 80169d6:	9802      	ldr	r0, [sp, #8]
 80169d8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 80169dc:	9902      	ldr	r1, [sp, #8]
 80169de:	fb92 f0f0 	sdiv	r0, r2, r0
 80169e2:	b280      	uxth	r0, r0
 80169e4:	440c      	add	r4, r1
 80169e6:	900f      	str	r0, [sp, #60]	@ 0x3c
 80169e8:	3c01      	subs	r4, #1
 80169ea:	9802      	ldr	r0, [sp, #8]
 80169ec:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80169ee:	fb05 2510 	mls	r5, r5, r0, r2
 80169f2:	fb94 f4f1 	sdiv	r4, r4, r1
 80169f6:	fb15 f503 	smulbb	r5, r5, r3
 80169fa:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 80169fe:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8016a02:	3401      	adds	r4, #1
 8016a04:	440d      	add	r5, r1
 8016a06:	4419      	add	r1, r3
 8016a08:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8016a0c:	b2a4      	uxth	r4, r4
 8016a0e:	441a      	add	r2, r3
 8016a10:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016a14:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8016a18:	00a4      	lsls	r4, r4, #2
 8016a1a:	9306      	str	r3, [sp, #24]
 8016a1c:	b2ad      	uxth	r5, r5
 8016a1e:	4bb3      	ldr	r3, [pc, #716]	@ (8016cec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8016a20:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8016a24:	6818      	ldr	r0, [r3, #0]
 8016a26:	6803      	ldr	r3, [r0, #0]
 8016a28:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016a2a:	4798      	blx	r3
 8016a2c:	4bb0      	ldr	r3, [pc, #704]	@ (8016cf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 8016a2e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8016a32:	2d00      	cmp	r5, #0
 8016a34:	881a      	ldrh	r2, [r3, #0]
 8016a36:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8016a3a:	fb02 f606 	mul.w	r6, r2, r6
 8016a3e:	fb02 7101 	mla	r1, r2, r1, r7
 8016a42:	9316      	str	r3, [sp, #88]	@ 0x58
 8016a44:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8016a48:	4baa      	ldr	r3, [pc, #680]	@ (8016cf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 8016a4a:	bf18      	it	ne
 8016a4c:	2100      	movne	r1, #0
 8016a4e:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8016a52:	eba3 030b 	sub.w	r3, r3, fp
 8016a56:	920a      	str	r2, [sp, #40]	@ 0x28
 8016a58:	f104 0204 	add.w	r2, r4, #4
 8016a5c:	9317      	str	r3, [sp, #92]	@ 0x5c
 8016a5e:	9213      	str	r2, [sp, #76]	@ 0x4c
 8016a60:	9a06      	ldr	r2, [sp, #24]
 8016a62:	bf08      	it	eq
 8016a64:	4611      	moveq	r1, r2
 8016a66:	2200      	movs	r2, #0
 8016a68:	b289      	uxth	r1, r1
 8016a6a:	920d      	str	r2, [sp, #52]	@ 0x34
 8016a6c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016a6e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016a70:	fa12 f383 	uxtah	r3, r2, r3
 8016a74:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016a76:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8016a7a:	3304      	adds	r3, #4
 8016a7c:	9308      	str	r3, [sp, #32]
 8016a7e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016a80:	4543      	cmp	r3, r8
 8016a82:	f240 8168 	bls.w	8016d56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 8016a86:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8016a8a:	f04f 0e01 	mov.w	lr, #1
 8016a8e:	9a02      	ldr	r2, [sp, #8]
 8016a90:	9808      	ldr	r0, [sp, #32]
 8016a92:	fbb5 f3f3 	udiv	r3, r5, r3
 8016a96:	1ad3      	subs	r3, r2, r3
 8016a98:	7800      	ldrb	r0, [r0, #0]
 8016a9a:	b29b      	uxth	r3, r3
 8016a9c:	9010      	str	r0, [sp, #64]	@ 0x40
 8016a9e:	3001      	adds	r0, #1
 8016aa0:	9314      	str	r3, [sp, #80]	@ 0x50
 8016aa2:	9b08      	ldr	r3, [sp, #32]
 8016aa4:	9007      	str	r0, [sp, #28]
 8016aa6:	785a      	ldrb	r2, [r3, #1]
 8016aa8:	789b      	ldrb	r3, [r3, #2]
 8016aaa:	021b      	lsls	r3, r3, #8
 8016aac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8016ab0:	9a08      	ldr	r2, [sp, #32]
 8016ab2:	78d2      	ldrb	r2, [r2, #3]
 8016ab4:	4313      	orrs	r3, r2
 8016ab6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8016ab8:	441a      	add	r2, r3
 8016aba:	1c50      	adds	r0, r2, #1
 8016abc:	7852      	ldrb	r2, [r2, #1]
 8016abe:	9005      	str	r0, [sp, #20]
 8016ac0:	0212      	lsls	r2, r2, #8
 8016ac2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8016ac4:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8016ac8:	5cc3      	ldrb	r3, [r0, r3]
 8016aca:	431a      	orrs	r2, r3
 8016acc:	b293      	uxth	r3, r2
 8016ace:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8016ad2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016ad4:	2300      	movs	r3, #0
 8016ad6:	9309      	str	r3, [sp, #36]	@ 0x24
 8016ad8:	2301      	movs	r3, #1
 8016ada:	9301      	str	r3, [sp, #4]
 8016adc:	9304      	str	r3, [sp, #16]
 8016ade:	2300      	movs	r3, #0
 8016ae0:	9303      	str	r3, [sp, #12]
 8016ae2:	2d00      	cmp	r5, #0
 8016ae4:	d07d      	beq.n	8016be2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 8016ae6:	45ae      	cmp	lr, r5
 8016ae8:	d26c      	bcs.n	8016bc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 8016aea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016aec:	eba5 050e 	sub.w	r5, r5, lr
 8016af0:	460c      	mov	r4, r1
 8016af2:	4543      	cmp	r3, r8
 8016af4:	b2ad      	uxth	r5, r5
 8016af6:	d802      	bhi.n	8016afe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 8016af8:	e071      	b.n	8016bde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 8016afa:	2b00      	cmp	r3, #0
 8016afc:	d15d      	bne.n	8016bba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 8016afe:	9b05      	ldr	r3, [sp, #20]
 8016b00:	9a04      	ldr	r2, [sp, #16]
 8016b02:	785b      	ldrb	r3, [r3, #1]
 8016b04:	f1c2 0207 	rsb	r2, r2, #7
 8016b08:	9904      	ldr	r1, [sp, #16]
 8016b0a:	4093      	lsls	r3, r2
 8016b0c:	005b      	lsls	r3, r3, #1
 8016b0e:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8016b12:	9b05      	ldr	r3, [sp, #20]
 8016b14:	781b      	ldrb	r3, [r3, #0]
 8016b16:	410b      	asrs	r3, r1
 8016b18:	3101      	adds	r1, #1
 8016b1a:	b2c9      	uxtb	r1, r1
 8016b1c:	b2db      	uxtb	r3, r3
 8016b1e:	2908      	cmp	r1, #8
 8016b20:	9104      	str	r1, [sp, #16]
 8016b22:	9905      	ldr	r1, [sp, #20]
 8016b24:	ea43 0302 	orr.w	r3, r3, r2
 8016b28:	bf0c      	ite	eq
 8016b2a:	3102      	addeq	r1, #2
 8016b2c:	3101      	addne	r1, #1
 8016b2e:	b29a      	uxth	r2, r3
 8016b30:	bf05      	ittet	eq
 8016b32:	9105      	streq	r1, [sp, #20]
 8016b34:	2100      	moveq	r1, #0
 8016b36:	9105      	strne	r1, [sp, #20]
 8016b38:	9104      	streq	r1, [sp, #16]
 8016b3a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8016b3c:	4291      	cmp	r1, r2
 8016b3e:	d30a      	bcc.n	8016b56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 8016b40:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8016b44:	2301      	movs	r3, #1
 8016b46:	9907      	ldr	r1, [sp, #28]
 8016b48:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8016b4c:	d30f      	bcc.n	8016b6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8016b4e:	2100      	movs	r1, #0
 8016b50:	9301      	str	r3, [sp, #4]
 8016b52:	9103      	str	r1, [sp, #12]
 8016b54:	e032      	b.n	8016bbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8016b56:	9b07      	ldr	r3, [sp, #28]
 8016b58:	429a      	cmp	r2, r3
 8016b5a:	d318      	bcc.n	8016b8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 8016b5c:	9b01      	ldr	r3, [sp, #4]
 8016b5e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8016b62:	445b      	add	r3, fp
 8016b64:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8016b68:	9b01      	ldr	r3, [sp, #4]
 8016b6a:	3301      	adds	r3, #1
 8016b6c:	b29b      	uxth	r3, r3
 8016b6e:	9907      	ldr	r1, [sp, #28]
 8016b70:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8016b74:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8016b78:	7108      	strb	r0, [r1, #4]
 8016b7a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8016b7c:	80c8      	strh	r0, [r1, #6]
 8016b7e:	9801      	ldr	r0, [sp, #4]
 8016b80:	3001      	adds	r0, #1
 8016b82:	7148      	strb	r0, [r1, #5]
 8016b84:	9907      	ldr	r1, [sp, #28]
 8016b86:	3101      	adds	r1, #1
 8016b88:	b289      	uxth	r1, r1
 8016b8a:	9107      	str	r1, [sp, #28]
 8016b8c:	e7df      	b.n	8016b4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8016b8e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8016b92:	4611      	mov	r1, r2
 8016b94:	795b      	ldrb	r3, [r3, #5]
 8016b96:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8016b9a:	4458      	add	r0, fp
 8016b9c:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8016b9e:	4406      	add	r6, r0
 8016ba0:	2e00      	cmp	r6, #0
 8016ba2:	dd06      	ble.n	8016bb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016ba4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8016ba8:	790e      	ldrb	r6, [r1, #4]
 8016baa:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8016bae:	88c9      	ldrh	r1, [r1, #6]
 8016bb0:	e7f4      	b.n	8016b9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 8016bb2:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8016bb6:	b29b      	uxth	r3, r3
 8016bb8:	e7c5      	b.n	8016b46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8016bba:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8016bbc:	4621      	mov	r1, r4
 8016bbe:	920b      	str	r2, [sp, #44]	@ 0x2c
 8016bc0:	469e      	mov	lr, r3
 8016bc2:	e78e      	b.n	8016ae2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 8016bc4:	9a03      	ldr	r2, [sp, #12]
 8016bc6:	ebae 0305 	sub.w	r3, lr, r5
 8016bca:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8016bce:	442a      	add	r2, r5
 8016bd0:	b29b      	uxth	r3, r3
 8016bd2:	b292      	uxth	r2, r2
 8016bd4:	9203      	str	r2, [sp, #12]
 8016bd6:	2500      	movs	r5, #0
 8016bd8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016bda:	4542      	cmp	r2, r8
 8016bdc:	d88d      	bhi.n	8016afa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 8016bde:	4621      	mov	r1, r4
 8016be0:	e74d      	b.n	8016a7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 8016be2:	458e      	cmp	lr, r1
 8016be4:	f04f 0900 	mov.w	r9, #0
 8016be8:	bf2b      	itete	cs
 8016bea:	ebae 0301 	subcs.w	r3, lr, r1
 8016bee:	eba1 040e 	subcc.w	r4, r1, lr
 8016bf2:	462c      	movcs	r4, r5
 8016bf4:	462b      	movcc	r3, r5
 8016bf6:	bf27      	ittee	cs
 8016bf8:	b29b      	uxthcs	r3, r3
 8016bfa:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8016bfc:	b2a4      	uxthcc	r4, r4
 8016bfe:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8016c02:	9a03      	ldr	r2, [sp, #12]
 8016c04:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8016c06:	444a      	add	r2, r9
 8016c08:	4548      	cmp	r0, r9
 8016c0a:	b292      	uxth	r2, r2
 8016c0c:	d074      	beq.n	8016cf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 8016c0e:	2004      	movs	r0, #4
 8016c10:	445a      	add	r2, fp
 8016c12:	4605      	mov	r5, r0
 8016c14:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8016c18:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016c1a:	fb15 0202 	smlabb	r2, r5, r2, r0
 8016c1e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016c20:	5880      	ldr	r0, [r0, r2]
 8016c22:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8016c26:	d014      	beq.n	8016c52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8016c28:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8016c2c:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8016c30:	d112      	bne.n	8016c58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8016c32:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8016c34:	2aff      	cmp	r2, #255	@ 0xff
 8016c36:	d10f      	bne.n	8016c58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8016c38:	0942      	lsrs	r2, r0, #5
 8016c3a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8016c3e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016c42:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016c46:	f025 0507 	bic.w	r5, r5, #7
 8016c4a:	4315      	orrs	r5, r2
 8016c4c:	4305      	orrs	r5, r0
 8016c4e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8016c52:	f109 0901 	add.w	r9, r9, #1
 8016c56:	e7d4      	b.n	8016c02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8016c58:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8016c5c:	b2ed      	uxtb	r5, r5
 8016c5e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016c62:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016c66:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8016c6a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016c6e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8016c72:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016c76:	9215      	str	r2, [sp, #84]	@ 0x54
 8016c78:	fa5f fc8c 	uxtb.w	ip, ip
 8016c7c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8016c7e:	b2c0      	uxtb	r0, r0
 8016c80:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8016c84:	fb02 fa0a 	mul.w	sl, r2, sl
 8016c88:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8016c8c:	f10a 0201 	add.w	r2, sl, #1
 8016c90:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8016c94:	1212      	asrs	r2, r2, #8
 8016c96:	fa1f fa82 	uxth.w	sl, r2
 8016c9a:	43d2      	mvns	r2, r2
 8016c9c:	fb16 f60a 	smulbb	r6, r6, sl
 8016ca0:	b2d2      	uxtb	r2, r2
 8016ca2:	fb10 f00a 	smulbb	r0, r0, sl
 8016ca6:	fb07 6702 	mla	r7, r7, r2, r6
 8016caa:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8016cac:	fb0c 0002 	mla	r0, ip, r2, r0
 8016cb0:	fb15 f50a 	smulbb	r5, r5, sl
 8016cb4:	b2bf      	uxth	r7, r7
 8016cb6:	b280      	uxth	r0, r0
 8016cb8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8016cbc:	fb06 5602 	mla	r6, r6, r2, r5
 8016cc0:	1c7a      	adds	r2, r7, #1
 8016cc2:	1c45      	adds	r5, r0, #1
 8016cc4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016cc8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016ccc:	b2b6      	uxth	r6, r6
 8016cce:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016cd2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016cd6:	432f      	orrs	r7, r5
 8016cd8:	1c75      	adds	r5, r6, #1
 8016cda:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016cde:	096d      	lsrs	r5, r5, #5
 8016ce0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016ce4:	432f      	orrs	r7, r5
 8016ce6:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8016cea:	e7b2      	b.n	8016c52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8016cec:	20016b74 	.word	0x20016b74
 8016cf0:	20016b6e 	.word	0x20016b6e
 8016cf4:	fffff7fb 	.word	0xfffff7fb
 8016cf8:	9203      	str	r2, [sp, #12]
 8016cfa:	458e      	cmp	lr, r1
 8016cfc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8016cfe:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8016d02:	f4ff af68 	bcc.w	8016bd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8016d06:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8016d08:	9906      	ldr	r1, [sp, #24]
 8016d0a:	8812      	ldrh	r2, [r2, #0]
 8016d0c:	1a52      	subs	r2, r2, r1
 8016d0e:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8016d10:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8016d14:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016d16:	3201      	adds	r2, #1
 8016d18:	428a      	cmp	r2, r1
 8016d1a:	9209      	str	r2, [sp, #36]	@ 0x24
 8016d1c:	d111      	bne.n	8016d42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 8016d1e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8016d22:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8016d26:	9b06      	ldr	r3, [sp, #24]
 8016d28:	eba5 0509 	sub.w	r5, r5, r9
 8016d2c:	b2ad      	uxth	r5, r5
 8016d2e:	2d00      	cmp	r5, #0
 8016d30:	bf08      	it	eq
 8016d32:	4619      	moveq	r1, r3
 8016d34:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016d36:	bf18      	it	ne
 8016d38:	2100      	movne	r1, #0
 8016d3a:	3301      	adds	r3, #1
 8016d3c:	b289      	uxth	r1, r1
 8016d3e:	930d      	str	r3, [sp, #52]	@ 0x34
 8016d40:	e694      	b.n	8016a6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 8016d42:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8016d46:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8016d4a:	1b2d      	subs	r5, r5, r4
 8016d4c:	b2ad      	uxth	r5, r5
 8016d4e:	2d00      	cmp	r5, #0
 8016d50:	bf18      	it	ne
 8016d52:	2400      	movne	r4, #0
 8016d54:	e740      	b.n	8016bd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8016d56:	4b04      	ldr	r3, [pc, #16]	@ (8016d68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8016d58:	6818      	ldr	r0, [r3, #0]
 8016d5a:	6803      	ldr	r3, [r0, #0]
 8016d5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016d5e:	4798      	blx	r3
 8016d60:	b01d      	add	sp, #116	@ 0x74
 8016d62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d66:	bf00      	nop
 8016d68:	20016b74 	.word	0x20016b74

08016d6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016d6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d70:	b09f      	sub	sp, #124	@ 0x7c
 8016d72:	461d      	mov	r5, r3
 8016d74:	4604      	mov	r4, r0
 8016d76:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8016d78:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8016d7c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8016d80:	920a      	str	r2, [sp, #40]	@ 0x28
 8016d82:	2a00      	cmp	r2, #0
 8016d84:	f000 81fe 	beq.w	8017184 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8016d88:	6828      	ldr	r0, [r5, #0]
 8016d8a:	aa1a      	add	r2, sp, #104	@ 0x68
 8016d8c:	6869      	ldr	r1, [r5, #4]
 8016d8e:	c203      	stmia	r2!, {r0, r1}
 8016d90:	6818      	ldr	r0, [r3, #0]
 8016d92:	aa1c      	add	r2, sp, #112	@ 0x70
 8016d94:	6859      	ldr	r1, [r3, #4]
 8016d96:	c203      	stmia	r2!, {r0, r1}
 8016d98:	a81a      	add	r0, sp, #104	@ 0x68
 8016d9a:	f7f8 fee7 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016d9e:	4629      	mov	r1, r5
 8016da0:	a81c      	add	r0, sp, #112	@ 0x70
 8016da2:	f7f8 ff0b 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016da6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016daa:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8016dae:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8016db2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8016db6:	bfdb      	ittet	le
 8016db8:	b29a      	uxthle	r2, r3
 8016dba:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016dbe:	2201      	movgt	r2, #1
 8016dc0:	fb91 f2f2 	sdivle	r2, r1, r2
 8016dc4:	9201      	str	r2, [sp, #4]
 8016dc6:	9801      	ldr	r0, [sp, #4]
 8016dc8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8016dcc:	9901      	ldr	r1, [sp, #4]
 8016dce:	fb92 f0f0 	sdiv	r0, r2, r0
 8016dd2:	b280      	uxth	r0, r0
 8016dd4:	440e      	add	r6, r1
 8016dd6:	9010      	str	r0, [sp, #64]	@ 0x40
 8016dd8:	3e01      	subs	r6, #1
 8016dda:	9801      	ldr	r0, [sp, #4]
 8016ddc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8016dde:	fb05 2510 	mls	r5, r5, r0, r2
 8016de2:	fb96 f6f1 	sdiv	r6, r6, r1
 8016de6:	fb15 f503 	smulbb	r5, r5, r3
 8016dea:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8016dee:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8016df2:	3601      	adds	r6, #1
 8016df4:	440d      	add	r5, r1
 8016df6:	4419      	add	r1, r3
 8016df8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8016dfc:	b2b6      	uxth	r6, r6
 8016dfe:	441a      	add	r2, r3
 8016e00:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8016e04:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8016e08:	b2ad      	uxth	r5, r5
 8016e0a:	9304      	str	r3, [sp, #16]
 8016e0c:	4b96      	ldr	r3, [pc, #600]	@ (8017068 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8016e0e:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8016e12:	6818      	ldr	r0, [r3, #0]
 8016e14:	6803      	ldr	r3, [r0, #0]
 8016e16:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016e18:	4798      	blx	r3
 8016e1a:	4b94      	ldr	r3, [pc, #592]	@ (801706c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 8016e1c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8016e20:	2d00      	cmp	r5, #0
 8016e22:	881a      	ldrh	r2, [r3, #0]
 8016e24:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8016e28:	fb02 f707 	mul.w	r7, r2, r7
 8016e2c:	fb02 c101 	mla	r1, r2, r1, ip
 8016e30:	9318      	str	r3, [sp, #96]	@ 0x60
 8016e32:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8016e36:	4b8e      	ldr	r3, [pc, #568]	@ (8017070 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 8016e38:	bf18      	it	ne
 8016e3a:	2100      	movne	r1, #0
 8016e3c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8016e40:	eba3 0304 	sub.w	r3, r3, r4
 8016e44:	920b      	str	r2, [sp, #44]	@ 0x2c
 8016e46:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016e48:	9319      	str	r3, [sp, #100]	@ 0x64
 8016e4a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8016e4e:	f106 0204 	add.w	r2, r6, #4
 8016e52:	9206      	str	r2, [sp, #24]
 8016e54:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016e56:	ea6f 0202 	mvn.w	r2, r2
 8016e5a:	b2d2      	uxtb	r2, r2
 8016e5c:	9215      	str	r2, [sp, #84]	@ 0x54
 8016e5e:	9a04      	ldr	r2, [sp, #16]
 8016e60:	bf08      	it	eq
 8016e62:	4611      	moveq	r1, r2
 8016e64:	2200      	movs	r2, #0
 8016e66:	b289      	uxth	r1, r1
 8016e68:	920d      	str	r2, [sp, #52]	@ 0x34
 8016e6a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016e6c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016e6e:	fa12 f383 	uxtah	r3, r2, r3
 8016e72:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016e74:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8016e78:	3304      	adds	r3, #4
 8016e7a:	9307      	str	r3, [sp, #28]
 8016e7c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016e7e:	455b      	cmp	r3, fp
 8016e80:	f240 817b 	bls.w	801717a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 8016e84:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8016e88:	f04f 0801 	mov.w	r8, #1
 8016e8c:	9a01      	ldr	r2, [sp, #4]
 8016e8e:	9807      	ldr	r0, [sp, #28]
 8016e90:	46c4      	mov	ip, r8
 8016e92:	f8cd 8008 	str.w	r8, [sp, #8]
 8016e96:	7800      	ldrb	r0, [r0, #0]
 8016e98:	fbb5 f3f3 	udiv	r3, r5, r3
 8016e9c:	1ad3      	subs	r3, r2, r3
 8016e9e:	9011      	str	r0, [sp, #68]	@ 0x44
 8016ea0:	3001      	adds	r0, #1
 8016ea2:	b29b      	uxth	r3, r3
 8016ea4:	9005      	str	r0, [sp, #20]
 8016ea6:	9316      	str	r3, [sp, #88]	@ 0x58
 8016ea8:	9b07      	ldr	r3, [sp, #28]
 8016eaa:	785a      	ldrb	r2, [r3, #1]
 8016eac:	789b      	ldrb	r3, [r3, #2]
 8016eae:	021b      	lsls	r3, r3, #8
 8016eb0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8016eb4:	9a07      	ldr	r2, [sp, #28]
 8016eb6:	78d2      	ldrb	r2, [r2, #3]
 8016eb8:	4313      	orrs	r3, r2
 8016eba:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016ebc:	441a      	add	r2, r3
 8016ebe:	1c50      	adds	r0, r2, #1
 8016ec0:	7852      	ldrb	r2, [r2, #1]
 8016ec2:	9003      	str	r0, [sp, #12]
 8016ec4:	0212      	lsls	r2, r2, #8
 8016ec6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016ec8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8016ecc:	5cc3      	ldrb	r3, [r0, r3]
 8016ece:	431a      	orrs	r2, r3
 8016ed0:	b293      	uxth	r3, r2
 8016ed2:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8016ed6:	930c      	str	r3, [sp, #48]	@ 0x30
 8016ed8:	2300      	movs	r3, #0
 8016eda:	9308      	str	r3, [sp, #32]
 8016edc:	461a      	mov	r2, r3
 8016ede:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016ee2:	930e      	str	r3, [sp, #56]	@ 0x38
 8016ee4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8016ee8:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016eea:	2d00      	cmp	r5, #0
 8016eec:	d07d      	beq.n	8016fea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 8016eee:	45ac      	cmp	ip, r5
 8016ef0:	d26d      	bcs.n	8016fce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 8016ef2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016ef4:	eba5 050c 	sub.w	r5, r5, ip
 8016ef8:	4608      	mov	r0, r1
 8016efa:	455b      	cmp	r3, fp
 8016efc:	b2ad      	uxth	r5, r5
 8016efe:	d802      	bhi.n	8016f06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 8016f00:	e071      	b.n	8016fe6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 8016f02:	2b00      	cmp	r3, #0
 8016f04:	d15d      	bne.n	8016fc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8016f06:	9b03      	ldr	r3, [sp, #12]
 8016f08:	9a02      	ldr	r2, [sp, #8]
 8016f0a:	785b      	ldrb	r3, [r3, #1]
 8016f0c:	f1c2 0207 	rsb	r2, r2, #7
 8016f10:	9902      	ldr	r1, [sp, #8]
 8016f12:	4093      	lsls	r3, r2
 8016f14:	005b      	lsls	r3, r3, #1
 8016f16:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8016f1a:	9b03      	ldr	r3, [sp, #12]
 8016f1c:	781b      	ldrb	r3, [r3, #0]
 8016f1e:	410b      	asrs	r3, r1
 8016f20:	3101      	adds	r1, #1
 8016f22:	b2c9      	uxtb	r1, r1
 8016f24:	b2db      	uxtb	r3, r3
 8016f26:	2908      	cmp	r1, #8
 8016f28:	9102      	str	r1, [sp, #8]
 8016f2a:	9903      	ldr	r1, [sp, #12]
 8016f2c:	ea43 0302 	orr.w	r3, r3, r2
 8016f30:	bf0c      	ite	eq
 8016f32:	3102      	addeq	r1, #2
 8016f34:	3101      	addne	r1, #1
 8016f36:	b29a      	uxth	r2, r3
 8016f38:	bf05      	ittet	eq
 8016f3a:	9103      	streq	r1, [sp, #12]
 8016f3c:	2100      	moveq	r1, #0
 8016f3e:	9103      	strne	r1, [sp, #12]
 8016f40:	9102      	streq	r1, [sp, #8]
 8016f42:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016f44:	4291      	cmp	r1, r2
 8016f46:	d30a      	bcc.n	8016f5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8016f48:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8016f4c:	2301      	movs	r3, #1
 8016f4e:	9905      	ldr	r1, [sp, #20]
 8016f50:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8016f54:	d30f      	bcc.n	8016f76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 8016f56:	2100      	movs	r1, #0
 8016f58:	4698      	mov	r8, r3
 8016f5a:	9100      	str	r1, [sp, #0]
 8016f5c:	e032      	b.n	8016fc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 8016f5e:	9b05      	ldr	r3, [sp, #20]
 8016f60:	429a      	cmp	r2, r3
 8016f62:	d318      	bcc.n	8016f96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 8016f64:	eb04 0308 	add.w	r3, r4, r8
 8016f68:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8016f6c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8016f70:	f108 0301 	add.w	r3, r8, #1
 8016f74:	b29b      	uxth	r3, r3
 8016f76:	9905      	ldr	r1, [sp, #20]
 8016f78:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8016f7c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8016f80:	710e      	strb	r6, [r1, #4]
 8016f82:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8016f84:	80ce      	strh	r6, [r1, #6]
 8016f86:	f108 0601 	add.w	r6, r8, #1
 8016f8a:	714e      	strb	r6, [r1, #5]
 8016f8c:	9905      	ldr	r1, [sp, #20]
 8016f8e:	3101      	adds	r1, #1
 8016f90:	b289      	uxth	r1, r1
 8016f92:	9105      	str	r1, [sp, #20]
 8016f94:	e7df      	b.n	8016f56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8016f96:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8016f9a:	4611      	mov	r1, r2
 8016f9c:	795b      	ldrb	r3, [r3, #5]
 8016f9e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8016fa2:	4426      	add	r6, r4
 8016fa4:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8016fa6:	4437      	add	r7, r6
 8016fa8:	2f00      	cmp	r7, #0
 8016faa:	dd06      	ble.n	8016fba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 8016fac:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8016fb0:	790f      	ldrb	r7, [r1, #4]
 8016fb2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8016fb6:	88c9      	ldrh	r1, [r1, #6]
 8016fb8:	e7f4      	b.n	8016fa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 8016fba:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8016fbe:	b29b      	uxth	r3, r3
 8016fc0:	e7c5      	b.n	8016f4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 8016fc2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8016fc4:	920c      	str	r2, [sp, #48]	@ 0x30
 8016fc6:	4601      	mov	r1, r0
 8016fc8:	9a00      	ldr	r2, [sp, #0]
 8016fca:	469c      	mov	ip, r3
 8016fcc:	e78d      	b.n	8016eea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 8016fce:	ebac 0305 	sub.w	r3, ip, r5
 8016fd2:	1957      	adds	r7, r2, r5
 8016fd4:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8016fd8:	b2ba      	uxth	r2, r7
 8016fda:	b29b      	uxth	r3, r3
 8016fdc:	9200      	str	r2, [sp, #0]
 8016fde:	2500      	movs	r5, #0
 8016fe0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8016fe2:	455a      	cmp	r2, fp
 8016fe4:	d88d      	bhi.n	8016f02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8016fe6:	4601      	mov	r1, r0
 8016fe8:	e748      	b.n	8016e7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 8016fea:	458c      	cmp	ip, r1
 8016fec:	bf27      	ittee	cs
 8016fee:	ebac 0301 	subcs.w	r3, ip, r1
 8016ff2:	4628      	movcs	r0, r5
 8016ff4:	eba1 000c 	subcc.w	r0, r1, ip
 8016ff8:	462b      	movcc	r3, r5
 8016ffa:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8016ffc:	bf27      	ittee	cs
 8016ffe:	b29b      	uxthcs	r3, r3
 8017000:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8017002:	b280      	uxthcc	r0, r0
 8017004:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8017008:	2dff      	cmp	r5, #255	@ 0xff
 801700a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801700c:	eb02 0705 	add.w	r7, r2, r5
 8017010:	b2bd      	uxth	r5, r7
 8017012:	9500      	str	r5, [sp, #0]
 8017014:	d12e      	bne.n	8017074 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 8017016:	465e      	mov	r6, fp
 8017018:	9d00      	ldr	r5, [sp, #0]
 801701a:	42aa      	cmp	r2, r5
 801701c:	f040 8083 	bne.w	8017126 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 8017020:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017022:	458c      	cmp	ip, r1
 8017024:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017028:	d3d9      	bcc.n	8016fde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801702a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801702c:	9904      	ldr	r1, [sp, #16]
 801702e:	8812      	ldrh	r2, [r2, #0]
 8017030:	1a52      	subs	r2, r2, r1
 8017032:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8017034:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017038:	9a08      	ldr	r2, [sp, #32]
 801703a:	3201      	adds	r2, #1
 801703c:	428a      	cmp	r2, r1
 801703e:	9208      	str	r2, [sp, #32]
 8017040:	f040 8091 	bne.w	8017166 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 8017044:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8017048:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801704c:	9b04      	ldr	r3, [sp, #16]
 801704e:	eba5 050c 	sub.w	r5, r5, ip
 8017052:	b2ad      	uxth	r5, r5
 8017054:	2d00      	cmp	r5, #0
 8017056:	bf08      	it	eq
 8017058:	4619      	moveq	r1, r3
 801705a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801705c:	bf18      	it	ne
 801705e:	2100      	movne	r1, #0
 8017060:	3301      	adds	r3, #1
 8017062:	b289      	uxth	r1, r1
 8017064:	930d      	str	r3, [sp, #52]	@ 0x34
 8017066:	e700      	b.n	8016e6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 8017068:	20016b74 	.word	0x20016b74
 801706c:	20016b6e 	.word	0x20016b6e
 8017070:	fffff7fb 	.word	0xfffff7fb
 8017074:	46d9      	mov	r9, fp
 8017076:	9d00      	ldr	r5, [sp, #0]
 8017078:	42aa      	cmp	r2, r5
 801707a:	d0d1      	beq.n	8017020 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 801707c:	1c55      	adds	r5, r2, #1
 801707e:	4422      	add	r2, r4
 8017080:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8017084:	9a06      	ldr	r2, [sp, #24]
 8017086:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801708a:	9517      	str	r5, [sp, #92]	@ 0x5c
 801708c:	4472      	add	r2, lr
 801708e:	9212      	str	r2, [sp, #72]	@ 0x48
 8017090:	f8b9 2000 	ldrh.w	r2, [r9]
 8017094:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8017096:	1216      	asrs	r6, r2, #8
 8017098:	f897 a002 	ldrb.w	sl, [r7, #2]
 801709c:	10d5      	asrs	r5, r2, #3
 801709e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80170a0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80170a4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80170a8:	00d2      	lsls	r2, r2, #3
 80170aa:	fb1a fa07 	smulbb	sl, sl, r7
 80170ae:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80170b2:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80170b4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80170b8:	b2d2      	uxtb	r2, r2
 80170ba:	fb06 a607 	mla	r6, r6, r7, sl
 80170be:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80170c0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80170c4:	f897 a001 	ldrb.w	sl, [r7, #1]
 80170c8:	b2b6      	uxth	r6, r6
 80170ca:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80170cc:	fb1a fa07 	smulbb	sl, sl, r7
 80170d0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80170d2:	fb05 a507 	mla	r5, r5, r7, sl
 80170d6:	9f06      	ldr	r7, [sp, #24]
 80170d8:	f106 0a01 	add.w	sl, r6, #1
 80170dc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80170e0:	b2ad      	uxth	r5, r5
 80170e2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80170e4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80170e8:	f105 0a01 	add.w	sl, r5, #1
 80170ec:	fb1e fe07 	smulbb	lr, lr, r7
 80170f0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80170f2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80170f6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80170fa:	fb02 e207 	mla	r2, r2, r7, lr
 80170fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017102:	b292      	uxth	r2, r2
 8017104:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017108:	f102 0e01 	add.w	lr, r2, #1
 801710c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8017110:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8017114:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017118:	ea4e 0606 	orr.w	r6, lr, r6
 801711c:	ea46 060a 	orr.w	r6, r6, sl
 8017120:	f829 6b02 	strh.w	r6, [r9], #2
 8017124:	e7a7      	b.n	8017076 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 8017126:	f102 0e01 	add.w	lr, r2, #1
 801712a:	4422      	add	r2, r4
 801712c:	9f06      	ldr	r7, [sp, #24]
 801712e:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8017132:	9a06      	ldr	r2, [sp, #24]
 8017134:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017138:	eb02 0a05 	add.w	sl, r2, r5
 801713c:	4a13      	ldr	r2, [pc, #76]	@ (801718c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 801713e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8017142:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8017146:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801714a:	00d2      	lsls	r2, r2, #3
 801714c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017150:	ea49 0202 	orr.w	r2, r9, r2
 8017154:	f817 9005 	ldrb.w	r9, [r7, r5]
 8017158:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801715c:	f826 2b02 	strh.w	r2, [r6], #2
 8017160:	fa1f f28e 	uxth.w	r2, lr
 8017164:	e758      	b.n	8017018 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 8017166:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801716a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801716e:	1a2d      	subs	r5, r5, r0
 8017170:	b2ad      	uxth	r5, r5
 8017172:	2d00      	cmp	r5, #0
 8017174:	bf18      	it	ne
 8017176:	2000      	movne	r0, #0
 8017178:	e732      	b.n	8016fe0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 801717a:	4b05      	ldr	r3, [pc, #20]	@ (8017190 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 801717c:	6818      	ldr	r0, [r3, #0]
 801717e:	6803      	ldr	r3, [r0, #0]
 8017180:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017182:	4798      	blx	r3
 8017184:	b01f      	add	sp, #124	@ 0x7c
 8017186:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801718a:	bf00      	nop
 801718c:	fffff800 	.word	0xfffff800
 8017190:	20016b74 	.word	0x20016b74

08017194 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8017194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017198:	b091      	sub	sp, #68	@ 0x44
 801719a:	469b      	mov	fp, r3
 801719c:	4616      	mov	r6, r2
 801719e:	f9b3 2000 	ldrsh.w	r2, [r3]
 80171a2:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 80171a6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80171aa:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 80171ae:	4604      	mov	r4, r0
 80171b0:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 80171b4:	4640      	mov	r0, r8
 80171b6:	460d      	mov	r5, r1
 80171b8:	4659      	mov	r1, fp
 80171ba:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80171be:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80171c2:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 80171c6:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 80171ca:	f7f2 fdb9 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 80171ce:	4631      	mov	r1, r6
 80171d0:	4640      	mov	r0, r8
 80171d2:	f7f2 fdb5 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 80171d6:	4b74      	ldr	r3, [pc, #464]	@ (80173a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80171d8:	8818      	ldrh	r0, [r3, #0]
 80171da:	4b74      	ldr	r3, [pc, #464]	@ (80173ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80171dc:	b202      	sxth	r2, r0
 80171de:	8819      	ldrh	r1, [r3, #0]
 80171e0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80171e4:	b20e      	sxth	r6, r1
 80171e6:	2b00      	cmp	r3, #0
 80171e8:	da07      	bge.n	80171fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80171ea:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 80171ee:	4463      	add	r3, ip
 80171f0:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80171f4:	2300      	movs	r3, #0
 80171f6:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80171fa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80171fe:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8017202:	1ad2      	subs	r2, r2, r3
 8017204:	4594      	cmp	ip, r2
 8017206:	bfc4      	itt	gt
 8017208:	1ac2      	subgt	r2, r0, r3
 801720a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801720e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017212:	2a00      	cmp	r2, #0
 8017214:	da07      	bge.n	8017226 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017216:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801721a:	4462      	add	r2, ip
 801721c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8017220:	2200      	movs	r2, #0
 8017222:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8017226:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801722a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801722e:	eba6 060a 	sub.w	r6, r6, sl
 8017232:	42b2      	cmp	r2, r6
 8017234:	bfc4      	itt	gt
 8017236:	eba1 020a 	subgt.w	r2, r1, sl
 801723a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801723e:	4a5c      	ldr	r2, [pc, #368]	@ (80173b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8017240:	7812      	ldrb	r2, [r2, #0]
 8017242:	b9a2      	cbnz	r2, 801726e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017244:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8017248:	4286      	cmp	r6, r0
 801724a:	4640      	mov	r0, r8
 801724c:	9303      	str	r3, [sp, #12]
 801724e:	bf14      	ite	ne
 8017250:	2600      	movne	r6, #0
 8017252:	2601      	moveq	r6, #1
 8017254:	f7f2 fdb7 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017258:	9b03      	ldr	r3, [sp, #12]
 801725a:	b160      	cbz	r0, 8017276 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801725c:	2300      	movs	r3, #0
 801725e:	8023      	strh	r3, [r4, #0]
 8017260:	8063      	strh	r3, [r4, #2]
 8017262:	80a3      	strh	r3, [r4, #4]
 8017264:	4620      	mov	r0, r4
 8017266:	80e3      	strh	r3, [r4, #6]
 8017268:	b011      	add	sp, #68	@ 0x44
 801726a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801726e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8017272:	428e      	cmp	r6, r1
 8017274:	e7e9      	b.n	801724a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8017276:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801727a:	a90e      	add	r1, sp, #56	@ 0x38
 801727c:	900e      	str	r0, [sp, #56]	@ 0x38
 801727e:	a80c      	add	r0, sp, #48	@ 0x30
 8017280:	9205      	str	r2, [sp, #20]
 8017282:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8017286:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801728a:	9206      	str	r2, [sp, #24]
 801728c:	f8bb 2000 	ldrh.w	r2, [fp]
 8017290:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8017294:	1a9b      	subs	r3, r3, r2
 8017296:	b21b      	sxth	r3, r3
 8017298:	9303      	str	r3, [sp, #12]
 801729a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801729e:	f8df b118 	ldr.w	fp, [pc, #280]	@ 80173b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80172a2:	ebaa 0a03 	sub.w	sl, sl, r3
 80172a6:	fa0f f38a 	sxth.w	r3, sl
 80172aa:	9304      	str	r3, [sp, #16]
 80172ac:	9b03      	ldr	r3, [sp, #12]
 80172ae:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 80172b2:	9b04      	ldr	r3, [sp, #16]
 80172b4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80172b8:	9b05      	ldr	r3, [sp, #20]
 80172ba:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80172be:	9b06      	ldr	r3, [sp, #24]
 80172c0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80172c4:	f7f8 fc7a 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80172c8:	4640      	mov	r0, r8
 80172ca:	f7f8 fc4f 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80172ce:	a80e      	add	r0, sp, #56	@ 0x38
 80172d0:	f7f8 fc4c 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80172d4:	4b37      	ldr	r3, [pc, #220]	@ (80173b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80172d6:	4628      	mov	r0, r5
 80172d8:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 80172dc:	881b      	ldrh	r3, [r3, #0]
 80172de:	9307      	str	r3, [sp, #28]
 80172e0:	682b      	ldr	r3, [r5, #0]
 80172e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80172e4:	4798      	blx	r3
 80172e6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 80172ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 80172ee:	4681      	mov	r9, r0
 80172f0:	f8db 0000 	ldr.w	r0, [fp]
 80172f4:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80172f8:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 80172fa:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80172fe:	6803      	ldr	r3, [r0, #0]
 8017300:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017302:	4798      	blx	r3
 8017304:	4607      	mov	r7, r0
 8017306:	f8db 0000 	ldr.w	r0, [fp]
 801730a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801730e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017312:	6803      	ldr	r3, [r0, #0]
 8017314:	9109      	str	r1, [sp, #36]	@ 0x24
 8017316:	9208      	str	r2, [sp, #32]
 8017318:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801731a:	4798      	blx	r3
 801731c:	f010 0f01 	tst.w	r0, #1
 8017320:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017324:	d012      	beq.n	801734c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017326:	f8db 0000 	ldr.w	r0, [fp]
 801732a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801732e:	6803      	ldr	r3, [r0, #0]
 8017330:	9200      	str	r2, [sp, #0]
 8017332:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8017334:	462b      	mov	r3, r5
 8017336:	e898 0006 	ldmia.w	r8, {r1, r2}
 801733a:	47b0      	blx	r6
 801733c:	9b03      	ldr	r3, [sp, #12]
 801733e:	8023      	strh	r3, [r4, #0]
 8017340:	9b04      	ldr	r3, [sp, #16]
 8017342:	8063      	strh	r3, [r4, #2]
 8017344:	9b05      	ldr	r3, [sp, #20]
 8017346:	80a3      	strh	r3, [r4, #4]
 8017348:	9b06      	ldr	r3, [sp, #24]
 801734a:	e78b      	b.n	8017264 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801734c:	fb09 f202 	mul.w	r2, r9, r2
 8017350:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 8017354:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017358:	440f      	add	r7, r1
 801735a:	b166      	cbz	r6, 8017376 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801735c:	9a07      	ldr	r2, [sp, #28]
 801735e:	4592      	cmp	sl, r2
 8017360:	d109      	bne.n	8017376 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017362:	f8db 0000 	ldr.w	r0, [fp]
 8017366:	fb09 f303 	mul.w	r3, r9, r3
 801736a:	4629      	mov	r1, r5
 801736c:	6802      	ldr	r2, [r0, #0]
 801736e:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 8017370:	463a      	mov	r2, r7
 8017372:	47b0      	blx	r6
 8017374:	e7e2      	b.n	801733c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017376:	fb0a f303 	mul.w	r3, sl, r3
 801737a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801737e:	f8df b038 	ldr.w	fp, [pc, #56]	@ 80173b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017382:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8017386:	4545      	cmp	r5, r8
 8017388:	d2d8      	bcs.n	801733c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801738a:	f8db 0000 	ldr.w	r0, [fp]
 801738e:	4629      	mov	r1, r5
 8017390:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8017394:	4435      	add	r5, r6
 8017396:	6802      	ldr	r2, [r0, #0]
 8017398:	005b      	lsls	r3, r3, #1
 801739a:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801739e:	463a      	mov	r2, r7
 80173a0:	47d0      	blx	sl
 80173a2:	444f      	add	r7, r9
 80173a4:	e7ef      	b.n	8017386 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80173a6:	bf00      	nop
 80173a8:	20016b68 	.word	0x20016b68
 80173ac:	20016b6a 	.word	0x20016b6a
 80173b0:	20016b6c 	.word	0x20016b6c
 80173b4:	20016b6e 	.word	0x20016b6e
 80173b8:	20016b74 	.word	0x20016b74

080173bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80173bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80173be:	4606      	mov	r6, r0
 80173c0:	b087      	sub	sp, #28
 80173c2:	460c      	mov	r4, r1
 80173c4:	4617      	mov	r7, r2
 80173c6:	461d      	mov	r5, r3
 80173c8:	b333      	cbz	r3, 8017418 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80173ca:	4608      	mov	r0, r1
 80173cc:	f7f2 fcfb 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80173d0:	bb10      	cbnz	r0, 8017418 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80173d2:	6820      	ldr	r0, [r4, #0]
 80173d4:	ab04      	add	r3, sp, #16
 80173d6:	6861      	ldr	r1, [r4, #4]
 80173d8:	4c1b      	ldr	r4, [pc, #108]	@ (8017448 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80173da:	c303      	stmia	r3!, {r0, r1}
 80173dc:	a804      	add	r0, sp, #16
 80173de:	f7f8 fbc5 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173e2:	6820      	ldr	r0, [r4, #0]
 80173e4:	6803      	ldr	r3, [r0, #0]
 80173e6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80173e8:	4798      	blx	r3
 80173ea:	2dff      	cmp	r5, #255	@ 0xff
 80173ec:	d016      	beq.n	801741c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80173ee:	f010 0f08 	tst.w	r0, #8
 80173f2:	6820      	ldr	r0, [r4, #0]
 80173f4:	d015      	beq.n	8017422 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80173f6:	2400      	movs	r4, #0
 80173f8:	6801      	ldr	r1, [r0, #0]
 80173fa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80173fe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017402:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017406:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801740a:	9401      	str	r4, [sp, #4]
 801740c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8017410:	9400      	str	r4, [sp, #0]
 8017412:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 8017414:	4639      	mov	r1, r7
 8017416:	47a0      	blx	r4
 8017418:	b007      	add	sp, #28
 801741a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801741c:	f010 0f02 	tst.w	r0, #2
 8017420:	e7e7      	b.n	80173f2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8017422:	6803      	ldr	r3, [r0, #0]
 8017424:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017426:	4798      	blx	r3
 8017428:	4b08      	ldr	r3, [pc, #32]	@ (801744c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801742a:	4601      	mov	r1, r0
 801742c:	4630      	mov	r0, r6
 801742e:	881a      	ldrh	r2, [r3, #0]
 8017430:	6833      	ldr	r3, [r6, #0]
 8017432:	e9cd 7500 	strd	r7, r5, [sp]
 8017436:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8017438:	ab04      	add	r3, sp, #16
 801743a:	47a8      	blx	r5
 801743c:	6820      	ldr	r0, [r4, #0]
 801743e:	6803      	ldr	r3, [r0, #0]
 8017440:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017442:	4798      	blx	r3
 8017444:	e7e8      	b.n	8017418 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017446:	bf00      	nop
 8017448:	20016b74 	.word	0x20016b74
 801744c:	20016b6e 	.word	0x20016b6e

08017450 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017450:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017454:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8017458:	4688      	mov	r8, r1
 801745a:	4614      	mov	r4, r2
 801745c:	461d      	mov	r5, r3
 801745e:	9e08      	ldr	r6, [sp, #32]
 8017460:	2f00      	cmp	r7, #0
 8017462:	f000 80ab 	beq.w	80175bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017466:	4618      	mov	r0, r3
 8017468:	f7f2 fcad 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801746c:	2800      	cmp	r0, #0
 801746e:	f040 80a5 	bne.w	80175bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017472:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017476:	2fff      	cmp	r7, #255	@ 0xff
 8017478:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801747c:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8017480:	fb04 1303 	mla	r3, r4, r3, r1
 8017484:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8017488:	eba4 0200 	sub.w	r2, r4, r0
 801748c:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017490:	fb04 f505 	mul.w	r5, r4, r5
 8017494:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017498:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801749c:	d04a      	beq.n	8017534 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801749e:	b2bc      	uxth	r4, r7
 80174a0:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 80174a4:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80174a8:	fa5f f788 	uxtb.w	r7, r8
 80174ac:	b2f3      	uxtb	r3, r6
 80174ae:	0040      	lsls	r0, r0, #1
 80174b0:	fb0e fe04 	mul.w	lr, lr, r4
 80174b4:	4367      	muls	r7, r4
 80174b6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80174ba:	4363      	muls	r3, r4
 80174bc:	fa1f fc8c 	uxth.w	ip, ip
 80174c0:	42a9      	cmp	r1, r5
 80174c2:	d27b      	bcs.n	80175bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80174c4:	eb01 0900 	add.w	r9, r1, r0
 80174c8:	4549      	cmp	r1, r9
 80174ca:	d231      	bcs.n	8017530 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 80174cc:	880a      	ldrh	r2, [r1, #0]
 80174ce:	1214      	asrs	r4, r2, #8
 80174d0:	10d6      	asrs	r6, r2, #3
 80174d2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80174d6:	00d2      	lsls	r2, r2, #3
 80174d8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80174dc:	b2d2      	uxtb	r2, r2
 80174de:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80174e2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80174e6:	fb14 f40c 	smulbb	r4, r4, ip
 80174ea:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80174ee:	fb12 f20c 	smulbb	r2, r2, ip
 80174f2:	fb16 f60c 	smulbb	r6, r6, ip
 80174f6:	4474      	add	r4, lr
 80174f8:	441a      	add	r2, r3
 80174fa:	b2a4      	uxth	r4, r4
 80174fc:	443e      	add	r6, r7
 80174fe:	b292      	uxth	r2, r2
 8017500:	f104 0a01 	add.w	sl, r4, #1
 8017504:	b2b6      	uxth	r6, r6
 8017506:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801750a:	f102 0a01 	add.w	sl, r2, #1
 801750e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017512:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8017516:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801751a:	4322      	orrs	r2, r4
 801751c:	1c74      	adds	r4, r6, #1
 801751e:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017522:	0976      	lsrs	r6, r6, #5
 8017524:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017528:	4332      	orrs	r2, r6
 801752a:	f821 2b02 	strh.w	r2, [r1], #2
 801752e:	e7cb      	b.n	80174c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8017530:	4441      	add	r1, r8
 8017532:	e7c5      	b.n	80174c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8017534:	0973      	lsrs	r3, r6, #5
 8017536:	4f22      	ldr	r7, [pc, #136]	@ (80175c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 8017538:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801753c:	ea08 0707 	and.w	r7, r8, r7
 8017540:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017544:	433b      	orrs	r3, r7
 8017546:	07e7      	lsls	r7, r4, #31
 8017548:	ea43 0306 	orr.w	r3, r3, r6
 801754c:	b29b      	uxth	r3, r3
 801754e:	d50b      	bpl.n	8017568 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 8017550:	0040      	lsls	r0, r0, #1
 8017552:	0052      	lsls	r2, r2, #1
 8017554:	42a9      	cmp	r1, r5
 8017556:	d231      	bcs.n	80175bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017558:	180c      	adds	r4, r1, r0
 801755a:	42a1      	cmp	r1, r4
 801755c:	d202      	bcs.n	8017564 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801755e:	f821 3b02 	strh.w	r3, [r1], #2
 8017562:	e7fa      	b.n	801755a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 8017564:	4411      	add	r1, r2
 8017566:	e7f5      	b.n	8017554 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 8017568:	078e      	lsls	r6, r1, #30
 801756a:	d008      	beq.n	801757e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 801756c:	0066      	lsls	r6, r4, #1
 801756e:	460a      	mov	r2, r1
 8017570:	42aa      	cmp	r2, r5
 8017572:	d202      	bcs.n	801757a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017574:	8013      	strh	r3, [r2, #0]
 8017576:	4432      	add	r2, r6
 8017578:	e7fa      	b.n	8017570 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 801757a:	3102      	adds	r1, #2
 801757c:	3801      	subs	r0, #1
 801757e:	07c2      	lsls	r2, r0, #31
 8017580:	d50b      	bpl.n	801759a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 8017582:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8017586:	0066      	lsls	r6, r4, #1
 8017588:	3a01      	subs	r2, #1
 801758a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801758e:	42aa      	cmp	r2, r5
 8017590:	d202      	bcs.n	8017598 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8017592:	8013      	strh	r3, [r2, #0]
 8017594:	4432      	add	r2, r6
 8017596:	e7fa      	b.n	801758e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 8017598:	3801      	subs	r0, #1
 801759a:	b178      	cbz	r0, 80175bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801759c:	1040      	asrs	r0, r0, #1
 801759e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80175a2:	0080      	lsls	r0, r0, #2
 80175a4:	0064      	lsls	r4, r4, #1
 80175a6:	42a9      	cmp	r1, r5
 80175a8:	d208      	bcs.n	80175bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80175aa:	180e      	adds	r6, r1, r0
 80175ac:	460a      	mov	r2, r1
 80175ae:	42b2      	cmp	r2, r6
 80175b0:	d202      	bcs.n	80175b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80175b2:	f842 3b04 	str.w	r3, [r2], #4
 80175b6:	e7fa      	b.n	80175ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 80175b8:	4421      	add	r1, r4
 80175ba:	e7f4      	b.n	80175a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 80175bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80175c0:	00fff800 	.word	0x00fff800

080175c4 <_ZN8touchgfx8LCD16bppC1Ev>:
 80175c4:	2200      	movs	r2, #0
 80175c6:	4912      	ldr	r1, [pc, #72]	@ (8017610 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 80175c8:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80175cc:	6001      	str	r1, [r0, #0]
 80175ce:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80175d2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80175d6:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80175da:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 80175de:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 80175e2:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 80175e6:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 80175ea:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 80175ee:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 80175f2:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 80175f6:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 80175fa:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 80175fe:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8017602:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8017606:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801760a:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 801760e:	4770      	bx	lr
 8017610:	08024d2c 	.word	0x08024d2c

08017614 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017618:	b08d      	sub	sp, #52	@ 0x34
 801761a:	460d      	mov	r5, r1
 801761c:	4604      	mov	r4, r0
 801761e:	4699      	mov	r9, r3
 8017620:	6808      	ldr	r0, [r1, #0]
 8017622:	ab08      	add	r3, sp, #32
 8017624:	6849      	ldr	r1, [r1, #4]
 8017626:	c303      	stmia	r3!, {r0, r1}
 8017628:	6810      	ldr	r0, [r2, #0]
 801762a:	ab0a      	add	r3, sp, #40	@ 0x28
 801762c:	6851      	ldr	r1, [r2, #4]
 801762e:	c303      	stmia	r3!, {r0, r1}
 8017630:	a808      	add	r0, sp, #32
 8017632:	f7f8 fa9b 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017636:	4629      	mov	r1, r5
 8017638:	a80a      	add	r0, sp, #40	@ 0x28
 801763a:	4d67      	ldr	r5, [pc, #412]	@ (80177d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801763c:	f7f8 fabe 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017640:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8017644:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8017648:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801764c:	6828      	ldr	r0, [r5, #0]
 801764e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017652:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8017656:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801765a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801765e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017662:	440a      	add	r2, r1
 8017664:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017668:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801766c:	4413      	add	r3, r2
 801766e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017672:	6803      	ldr	r3, [r0, #0]
 8017674:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017676:	4798      	blx	r3
 8017678:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801767c:	d119      	bne.n	80176b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801767e:	f010 0f20 	tst.w	r0, #32
 8017682:	6828      	ldr	r0, [r5, #0]
 8017684:	d018      	beq.n	80176b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017686:	2500      	movs	r5, #0
 8017688:	6801      	ldr	r1, [r0, #0]
 801768a:	b2b6      	uxth	r6, r6
 801768c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8017690:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8017694:	9601      	str	r6, [sp, #4]
 8017696:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801769a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801769e:	9502      	str	r5, [sp, #8]
 80176a0:	fa1f f588 	uxth.w	r5, r8
 80176a4:	9500      	str	r5, [sp, #0]
 80176a6:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 80176a8:	4621      	mov	r1, r4
 80176aa:	47a8      	blx	r5
 80176ac:	b00d      	add	sp, #52	@ 0x34
 80176ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80176b2:	f010 0f40 	tst.w	r0, #64	@ 0x40
 80176b6:	e7e4      	b.n	8017682 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80176b8:	6803      	ldr	r3, [r0, #0]
 80176ba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80176bc:	4798      	blx	r3
 80176be:	4947      	ldr	r1, [pc, #284]	@ (80177dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80176c0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80176c4:	880b      	ldrh	r3, [r1, #0]
 80176c6:	468a      	mov	sl, r1
 80176c8:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 80176cc:	fb03 5202 	mla	r2, r3, r2, r5
 80176d0:	4373      	muls	r3, r6
 80176d2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80176d6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80176da:	9307      	str	r3, [sp, #28]
 80176dc:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80176e0:	9306      	str	r3, [sp, #24]
 80176e2:	9b07      	ldr	r3, [sp, #28]
 80176e4:	4298      	cmp	r0, r3
 80176e6:	d270      	bcs.n	80177ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80176e8:	9b06      	ldr	r3, [sp, #24]
 80176ea:	4621      	mov	r1, r4
 80176ec:	eb00 0b03 	add.w	fp, r0, r3
 80176f0:	4558      	cmp	r0, fp
 80176f2:	d25d      	bcs.n	80177b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80176f4:	f851 4b04 	ldr.w	r4, [r1], #4
 80176f8:	0e23      	lsrs	r3, r4, #24
 80176fa:	d014      	beq.n	8017726 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80176fc:	2bff      	cmp	r3, #255	@ 0xff
 80176fe:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017702:	d112      	bne.n	801772a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017704:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017708:	d10f      	bne.n	801772a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801770a:	0963      	lsrs	r3, r4, #5
 801770c:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8017710:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017714:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017718:	f02c 0c07 	bic.w	ip, ip, #7
 801771c:	ea43 0c0c 	orr.w	ip, r3, ip
 8017720:	ea4c 0404 	orr.w	r4, ip, r4
 8017724:	8004      	strh	r4, [r0, #0]
 8017726:	3002      	adds	r0, #2
 8017728:	e7e2      	b.n	80176f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801772a:	fb09 f303 	mul.w	r3, r9, r3
 801772e:	8807      	ldrh	r7, [r0, #0]
 8017730:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017734:	fa5f fc8c 	uxtb.w	ip, ip
 8017738:	1c5a      	adds	r2, r3, #1
 801773a:	123e      	asrs	r6, r7, #8
 801773c:	10fd      	asrs	r5, r7, #3
 801773e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017742:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017746:	00ff      	lsls	r7, r7, #3
 8017748:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801774c:	1212      	asrs	r2, r2, #8
 801774e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017752:	b293      	uxth	r3, r2
 8017754:	43d2      	mvns	r2, r2
 8017756:	b2ff      	uxtb	r7, r7
 8017758:	fb1e fe03 	smulbb	lr, lr, r3
 801775c:	b2d2      	uxtb	r2, r2
 801775e:	fb1c fc03 	smulbb	ip, ip, r3
 8017762:	b2e4      	uxtb	r4, r4
 8017764:	fb06 e602 	mla	r6, r6, r2, lr
 8017768:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801776c:	fb14 f403 	smulbb	r4, r4, r3
 8017770:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017774:	b2b6      	uxth	r6, r6
 8017776:	fb05 c502 	mla	r5, r5, r2, ip
 801777a:	fb07 4702 	mla	r7, r7, r2, r4
 801777e:	f106 0e01 	add.w	lr, r6, #1
 8017782:	b2ad      	uxth	r5, r5
 8017784:	b2bf      	uxth	r7, r7
 8017786:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801778a:	f105 0c01 	add.w	ip, r5, #1
 801778e:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8017792:	1c7e      	adds	r6, r7, #1
 8017794:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017798:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801779c:	096d      	lsrs	r5, r5, #5
 801779e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80177a2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80177a6:	ea46 060e 	orr.w	r6, r6, lr
 80177aa:	432e      	orrs	r6, r5
 80177ac:	8006      	strh	r6, [r0, #0]
 80177ae:	e7ba      	b.n	8017726 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80177b0:	f8ba 3000 	ldrh.w	r3, [sl]
 80177b4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 80177b8:	eba3 0308 	sub.w	r3, r3, r8
 80177bc:	eba4 0408 	sub.w	r4, r4, r8
 80177c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80177c4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80177c8:	e78b      	b.n	80176e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80177ca:	4b03      	ldr	r3, [pc, #12]	@ (80177d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80177cc:	6818      	ldr	r0, [r3, #0]
 80177ce:	6803      	ldr	r3, [r0, #0]
 80177d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80177d2:	4798      	blx	r3
 80177d4:	e76a      	b.n	80176ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80177d6:	bf00      	nop
 80177d8:	20016b74 	.word	0x20016b74
 80177dc:	20016b6e 	.word	0x20016b6e

080177e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80177e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80177e4:	b085      	sub	sp, #20
 80177e6:	6810      	ldr	r0, [r2, #0]
 80177e8:	460c      	mov	r4, r1
 80177ea:	6851      	ldr	r1, [r2, #4]
 80177ec:	466d      	mov	r5, sp
 80177ee:	4616      	mov	r6, r2
 80177f0:	c503      	stmia	r5!, {r0, r1}
 80177f2:	6818      	ldr	r0, [r3, #0]
 80177f4:	6859      	ldr	r1, [r3, #4]
 80177f6:	c503      	stmia	r5!, {r0, r1}
 80177f8:	4668      	mov	r0, sp
 80177fa:	4d2e      	ldr	r5, [pc, #184]	@ (80178b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80177fc:	f7f8 f9b6 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017800:	4631      	mov	r1, r6
 8017802:	a802      	add	r0, sp, #8
 8017804:	4e2c      	ldr	r6, [pc, #176]	@ (80178b8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017806:	f7f8 f9d9 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801780a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801780e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017812:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017816:	6828      	ldr	r0, [r5, #0]
 8017818:	fb11 2103 	smlabb	r1, r1, r3, r2
 801781c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017820:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017824:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017828:	f8bd 1000 	ldrh.w	r1, [sp]
 801782c:	440a      	add	r2, r1
 801782e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017832:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017836:	4413      	add	r3, r2
 8017838:	f8ad 300a 	strh.w	r3, [sp, #10]
 801783c:	6803      	ldr	r3, [r0, #0]
 801783e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017840:	4798      	blx	r3
 8017842:	8833      	ldrh	r3, [r6, #0]
 8017844:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017848:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801784c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017850:	f8df e068 	ldr.w	lr, [pc, #104]	@ 80178bc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017854:	fb03 1202 	mla	r2, r3, r2, r1
 8017858:	fb08 f303 	mul.w	r3, r8, r3
 801785c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017860:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017864:	4298      	cmp	r0, r3
 8017866:	d21d      	bcs.n	80178a4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017868:	eb00 080c 	add.w	r8, r0, ip
 801786c:	4540      	cmp	r0, r8
 801786e:	d20f      	bcs.n	8017890 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017870:	f854 1b04 	ldr.w	r1, [r4], #4
 8017874:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017878:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801787c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017880:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017884:	ea42 0209 	orr.w	r2, r2, r9
 8017888:	430a      	orrs	r2, r1
 801788a:	f820 2b02 	strh.w	r2, [r0], #2
 801788e:	e7ed      	b.n	801786c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017890:	8832      	ldrh	r2, [r6, #0]
 8017892:	1bd2      	subs	r2, r2, r7
 8017894:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017898:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801789c:	1bd2      	subs	r2, r2, r7
 801789e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80178a2:	e7df      	b.n	8017864 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80178a4:	6828      	ldr	r0, [r5, #0]
 80178a6:	6803      	ldr	r3, [r0, #0]
 80178a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80178aa:	4798      	blx	r3
 80178ac:	b005      	add	sp, #20
 80178ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80178b2:	bf00      	nop
 80178b4:	20016b74 	.word	0x20016b74
 80178b8:	20016b6e 	.word	0x20016b6e
 80178bc:	fffff800 	.word	0xfffff800

080178c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80178c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80178c4:	b08e      	sub	sp, #56	@ 0x38
 80178c6:	460e      	mov	r6, r1
 80178c8:	4604      	mov	r4, r0
 80178ca:	461d      	mov	r5, r3
 80178cc:	6808      	ldr	r0, [r1, #0]
 80178ce:	ab0a      	add	r3, sp, #40	@ 0x28
 80178d0:	6849      	ldr	r1, [r1, #4]
 80178d2:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 8017aa8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80178d6:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 8017aac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80178da:	c303      	stmia	r3!, {r0, r1}
 80178dc:	6810      	ldr	r0, [r2, #0]
 80178de:	ab0c      	add	r3, sp, #48	@ 0x30
 80178e0:	6851      	ldr	r1, [r2, #4]
 80178e2:	c303      	stmia	r3!, {r0, r1}
 80178e4:	a80a      	add	r0, sp, #40	@ 0x28
 80178e6:	f7f8 f941 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80178ea:	4631      	mov	r1, r6
 80178ec:	a80c      	add	r0, sp, #48	@ 0x30
 80178ee:	f7f8 f965 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80178f2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80178f6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80178fa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80178fe:	f8d8 0000 	ldr.w	r0, [r8]
 8017902:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017906:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801790a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801790e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017912:	440c      	add	r4, r1
 8017914:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8017918:	440a      	add	r2, r1
 801791a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801791e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8017922:	4413      	add	r3, r2
 8017924:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017928:	6803      	ldr	r3, [r0, #0]
 801792a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801792c:	4798      	blx	r3
 801792e:	2dff      	cmp	r5, #255	@ 0xff
 8017930:	d124      	bne.n	801797c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017932:	f010 0f01 	tst.w	r0, #1
 8017936:	f8d8 0000 	ldr.w	r0, [r8]
 801793a:	d022      	beq.n	8017982 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801793c:	2100      	movs	r1, #0
 801793e:	f04f 0e01 	mov.w	lr, #1
 8017942:	f8d0 c000 	ldr.w	ip, [r0]
 8017946:	b2b6      	uxth	r6, r6
 8017948:	f8cd e018 	str.w	lr, [sp, #24]
 801794c:	b2bf      	uxth	r7, r7
 801794e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8017952:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8017956:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801795a:	f8b9 e000 	ldrh.w	lr, [r9]
 801795e:	9503      	str	r5, [sp, #12]
 8017960:	9601      	str	r6, [sp, #4]
 8017962:	9700      	str	r7, [sp, #0]
 8017964:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017968:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801796c:	9102      	str	r1, [sp, #8]
 801796e:	4621      	mov	r1, r4
 8017970:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 8017974:	47a8      	blx	r5
 8017976:	b00e      	add	sp, #56	@ 0x38
 8017978:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801797c:	f010 0f04 	tst.w	r0, #4
 8017980:	e7d9      	b.n	8017936 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017982:	6803      	ldr	r3, [r0, #0]
 8017984:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017986:	4798      	blx	r3
 8017988:	f8b9 3000 	ldrh.w	r3, [r9]
 801798c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017990:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017994:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8017998:	435e      	muls	r6, r3
 801799a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801799e:	2dff      	cmp	r5, #255	@ 0xff
 80179a0:	fb03 1202 	mla	r2, r3, r2, r1
 80179a4:	ebac 0c07 	sub.w	ip, ip, r7
 80179a8:	eba3 0707 	sub.w	r7, r3, r7
 80179ac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80179b0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80179b4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80179b8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80179bc:	d049      	beq.n	8017a52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80179be:	43eb      	mvns	r3, r5
 80179c0:	fa1f f985 	uxth.w	r9, r5
 80179c4:	b2db      	uxtb	r3, r3
 80179c6:	42b0      	cmp	r0, r6
 80179c8:	d266      	bcs.n	8017a98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80179ca:	eb00 0a0e 	add.w	sl, r0, lr
 80179ce:	4550      	cmp	r0, sl
 80179d0:	4621      	mov	r1, r4
 80179d2:	f104 0403 	add.w	r4, r4, #3
 80179d6:	d25b      	bcs.n	8017a90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 80179d8:	8802      	ldrh	r2, [r0, #0]
 80179da:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80179de:	ea4f 2822 	mov.w	r8, r2, asr #8
 80179e2:	fb11 f109 	smulbb	r1, r1, r9
 80179e6:	10d5      	asrs	r5, r2, #3
 80179e8:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80179ec:	00d2      	lsls	r2, r2, #3
 80179ee:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80179f2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80179f6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80179fa:	fb08 1803 	mla	r8, r8, r3, r1
 80179fe:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017a02:	b2d2      	uxtb	r2, r2
 8017a04:	fb11 f109 	smulbb	r1, r1, r9
 8017a08:	fa1f f888 	uxth.w	r8, r8
 8017a0c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017a10:	fb05 1503 	mla	r5, r5, r3, r1
 8017a14:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017a18:	fb11 f109 	smulbb	r1, r1, r9
 8017a1c:	b2ad      	uxth	r5, r5
 8017a1e:	fb02 1203 	mla	r2, r2, r3, r1
 8017a22:	f108 0101 	add.w	r1, r8, #1
 8017a26:	b292      	uxth	r2, r2
 8017a28:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017a2c:	1c51      	adds	r1, r2, #1
 8017a2e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8017a32:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017a36:	1c69      	adds	r1, r5, #1
 8017a38:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017a3c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017a40:	096d      	lsrs	r5, r5, #5
 8017a42:	ea42 0208 	orr.w	r2, r2, r8
 8017a46:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017a4a:	432a      	orrs	r2, r5
 8017a4c:	f820 2b02 	strh.w	r2, [r0], #2
 8017a50:	e7bd      	b.n	80179ce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017a52:	4a14      	ldr	r2, [pc, #80]	@ (8017aa4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017a54:	42b0      	cmp	r0, r6
 8017a56:	d21f      	bcs.n	8017a98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017a58:	eb00 050e 	add.w	r5, r0, lr
 8017a5c:	42a8      	cmp	r0, r5
 8017a5e:	4621      	mov	r1, r4
 8017a60:	f104 0403 	add.w	r4, r4, #3
 8017a64:	d210      	bcs.n	8017a88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017a66:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017a6a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017a6e:	00db      	lsls	r3, r3, #3
 8017a70:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017a74:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017a78:	430b      	orrs	r3, r1
 8017a7a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017a7e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8017a82:	f820 3b02 	strh.w	r3, [r0], #2
 8017a86:	e7e9      	b.n	8017a5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017a88:	4438      	add	r0, r7
 8017a8a:	eb01 040c 	add.w	r4, r1, ip
 8017a8e:	e7e1      	b.n	8017a54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8017a90:	4438      	add	r0, r7
 8017a92:	eb01 040c 	add.w	r4, r1, ip
 8017a96:	e796      	b.n	80179c6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017a98:	4b03      	ldr	r3, [pc, #12]	@ (8017aa8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017a9a:	6818      	ldr	r0, [r3, #0]
 8017a9c:	6803      	ldr	r3, [r0, #0]
 8017a9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017aa0:	4798      	blx	r3
 8017aa2:	e768      	b.n	8017976 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017aa4:	fffff800 	.word	0xfffff800
 8017aa8:	20016b74 	.word	0x20016b74
 8017aac:	20016b6e 	.word	0x20016b6e

08017ab0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8017ab0:	b4f0      	push	{r4, r5, r6, r7}
 8017ab2:	4616      	mov	r6, r2
 8017ab4:	461c      	mov	r4, r3
 8017ab6:	460d      	mov	r5, r1
 8017ab8:	9a04      	ldr	r2, [sp, #16]
 8017aba:	2e01      	cmp	r6, #1
 8017abc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017ac0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8017ac4:	d012      	beq.n	8017aec <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8017ac6:	d303      	bcc.n	8017ad0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8017ac8:	2e02      	cmp	r6, #2
 8017aca:	d00a      	beq.n	8017ae2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8017acc:	bcf0      	pop	{r4, r5, r6, r7}
 8017ace:	4770      	bx	lr
 8017ad0:	6805      	ldr	r5, [r0, #0]
 8017ad2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8017ad6:	68ed      	ldr	r5, [r5, #12]
 8017ad8:	4613      	mov	r3, r2
 8017ada:	4622      	mov	r2, r4
 8017adc:	46ac      	mov	ip, r5
 8017ade:	bcf0      	pop	{r4, r5, r6, r7}
 8017ae0:	4760      	bx	ip
 8017ae2:	4621      	mov	r1, r4
 8017ae4:	4628      	mov	r0, r5
 8017ae6:	bcf0      	pop	{r4, r5, r6, r7}
 8017ae8:	f7ff bd94 	b.w	8017614 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017aec:	4621      	mov	r1, r4
 8017aee:	4628      	mov	r0, r5
 8017af0:	bcf0      	pop	{r4, r5, r6, r7}
 8017af2:	f7ff bee5 	b.w	80178c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08017af8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8017af8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017afc:	b093      	sub	sp, #76	@ 0x4c
 8017afe:	4681      	mov	r9, r0
 8017b00:	4688      	mov	r8, r1
 8017b02:	6810      	ldr	r0, [r2, #0]
 8017b04:	6851      	ldr	r1, [r2, #4]
 8017b06:	ac0e      	add	r4, sp, #56	@ 0x38
 8017b08:	4616      	mov	r6, r2
 8017b0a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8017b0e:	4f6b      	ldr	r7, [pc, #428]	@ (8017cbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017b10:	c403      	stmia	r4!, {r0, r1}
 8017b12:	6818      	ldr	r0, [r3, #0]
 8017b14:	ac10      	add	r4, sp, #64	@ 0x40
 8017b16:	6859      	ldr	r1, [r3, #4]
 8017b18:	c403      	stmia	r4!, {r0, r1}
 8017b1a:	a80e      	add	r0, sp, #56	@ 0x38
 8017b1c:	f7f8 f826 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017b20:	4631      	mov	r1, r6
 8017b22:	a810      	add	r0, sp, #64	@ 0x40
 8017b24:	4e66      	ldr	r6, [pc, #408]	@ (8017cc0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017b26:	f7f8 f849 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017b2a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8017b2e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8017b32:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8017b36:	6830      	ldr	r0, [r6, #0]
 8017b38:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017b3c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8017b40:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8017b44:	4489      	add	r9, r1
 8017b46:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8017b4a:	440a      	add	r2, r1
 8017b4c:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8017b50:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8017b54:	4413      	add	r3, r2
 8017b56:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8017b5a:	6803      	ldr	r3, [r0, #0]
 8017b5c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017b5e:	4798      	blx	r3
 8017b60:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8017b64:	6830      	ldr	r0, [r6, #0]
 8017b66:	d01d      	beq.n	8017ba4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017b68:	2200      	movs	r2, #0
 8017b6a:	6801      	ldr	r1, [r0, #0]
 8017b6c:	b2a4      	uxth	r4, r4
 8017b6e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8017b72:	b2ad      	uxth	r5, r5
 8017b74:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017b78:	220b      	movs	r2, #11
 8017b7a:	9207      	str	r2, [sp, #28]
 8017b7c:	883a      	ldrh	r2, [r7, #0]
 8017b7e:	9502      	str	r5, [sp, #8]
 8017b80:	9206      	str	r2, [sp, #24]
 8017b82:	2201      	movs	r2, #1
 8017b84:	9401      	str	r4, [sp, #4]
 8017b86:	e9cd a204 	strd	sl, r2, [sp, #16]
 8017b8a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8017b8e:	9203      	str	r2, [sp, #12]
 8017b90:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8017b94:	9200      	str	r2, [sp, #0]
 8017b96:	4642      	mov	r2, r8
 8017b98:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 8017b9a:	4649      	mov	r1, r9
 8017b9c:	47a0      	blx	r4
 8017b9e:	b013      	add	sp, #76	@ 0x4c
 8017ba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ba4:	6803      	ldr	r3, [r0, #0]
 8017ba6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017ba8:	4798      	blx	r3
 8017baa:	883b      	ldrh	r3, [r7, #0]
 8017bac:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8017bb0:	f04f 0e04 	mov.w	lr, #4
 8017bb4:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8017bb8:	435d      	muls	r5, r3
 8017bba:	fb03 1202 	mla	r2, r3, r2, r1
 8017bbe:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017bc2:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8017bc6:	920c      	str	r2, [sp, #48]	@ 0x30
 8017bc8:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8017bcc:	1b12      	subs	r2, r2, r4
 8017bce:	920d      	str	r2, [sp, #52]	@ 0x34
 8017bd0:	0062      	lsls	r2, r4, #1
 8017bd2:	1b1c      	subs	r4, r3, r4
 8017bd4:	920a      	str	r2, [sp, #40]	@ 0x28
 8017bd6:	0063      	lsls	r3, r4, #1
 8017bd8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017bda:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017bdc:	4298      	cmp	r0, r3
 8017bde:	d266      	bcs.n	8017cae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017be0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017be2:	eb00 0b03 	add.w	fp, r0, r3
 8017be6:	4558      	cmp	r0, fp
 8017be8:	d25c      	bcs.n	8017ca4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017bea:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017bee:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017bf2:	f858 2003 	ldr.w	r2, [r8, r3]
 8017bf6:	0e11      	lsrs	r1, r2, #24
 8017bf8:	d012      	beq.n	8017c20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017bfa:	29ff      	cmp	r1, #255	@ 0xff
 8017bfc:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017c00:	d110      	bne.n	8017c24 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017c02:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8017c06:	d10d      	bne.n	8017c24 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017c08:	0953      	lsrs	r3, r2, #5
 8017c0a:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8017c0e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017c12:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017c16:	f027 0707 	bic.w	r7, r7, #7
 8017c1a:	431f      	orrs	r7, r3
 8017c1c:	433a      	orrs	r2, r7
 8017c1e:	8002      	strh	r2, [r0, #0]
 8017c20:	3002      	adds	r0, #2
 8017c22:	e7e0      	b.n	8017be6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017c24:	fb0a f101 	mul.w	r1, sl, r1
 8017c28:	8806      	ldrh	r6, [r0, #0]
 8017c2a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017c2e:	b2d2      	uxtb	r2, r2
 8017c30:	1c4b      	adds	r3, r1, #1
 8017c32:	1235      	asrs	r5, r6, #8
 8017c34:	10f4      	asrs	r4, r6, #3
 8017c36:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017c3a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8017c3e:	00f6      	lsls	r6, r6, #3
 8017c40:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8017c44:	121b      	asrs	r3, r3, #8
 8017c46:	b2f6      	uxtb	r6, r6
 8017c48:	b299      	uxth	r1, r3
 8017c4a:	43db      	mvns	r3, r3
 8017c4c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017c50:	fb1c fc01 	smulbb	ip, ip, r1
 8017c54:	b2db      	uxtb	r3, r3
 8017c56:	fb12 f201 	smulbb	r2, r2, r1
 8017c5a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017c5e:	fb05 c503 	mla	r5, r5, r3, ip
 8017c62:	b2ff      	uxtb	r7, r7
 8017c64:	fb06 2203 	mla	r2, r6, r3, r2
 8017c68:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017c6c:	fb17 f701 	smulbb	r7, r7, r1
 8017c70:	b2ad      	uxth	r5, r5
 8017c72:	b292      	uxth	r2, r2
 8017c74:	fb04 7403 	mla	r4, r4, r3, r7
 8017c78:	f105 0c01 	add.w	ip, r5, #1
 8017c7c:	1c57      	adds	r7, r2, #1
 8017c7e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017c82:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017c86:	b2a4      	uxth	r4, r4
 8017c88:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8017c8c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017c90:	433d      	orrs	r5, r7
 8017c92:	1c67      	adds	r7, r4, #1
 8017c94:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017c98:	0964      	lsrs	r4, r4, #5
 8017c9a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8017c9e:	4325      	orrs	r5, r4
 8017ca0:	8005      	strh	r5, [r0, #0]
 8017ca2:	e7bd      	b.n	8017c20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017ca4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017ca6:	4418      	add	r0, r3
 8017ca8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017caa:	4499      	add	r9, r3
 8017cac:	e795      	b.n	8017bda <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017cae:	4b04      	ldr	r3, [pc, #16]	@ (8017cc0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017cb0:	6818      	ldr	r0, [r3, #0]
 8017cb2:	6803      	ldr	r3, [r0, #0]
 8017cb4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017cb6:	4798      	blx	r3
 8017cb8:	e771      	b.n	8017b9e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017cba:	bf00      	nop
 8017cbc:	20016b6e 	.word	0x20016b6e
 8017cc0:	20016b74 	.word	0x20016b74

08017cc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017cc8:	b087      	sub	sp, #28
 8017cca:	4680      	mov	r8, r0
 8017ccc:	460d      	mov	r5, r1
 8017cce:	4614      	mov	r4, r2
 8017cd0:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8017cd4:	2e00      	cmp	r6, #0
 8017cd6:	f000 80b9 	beq.w	8017e4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017cda:	6810      	ldr	r0, [r2, #0]
 8017cdc:	af02      	add	r7, sp, #8
 8017cde:	6851      	ldr	r1, [r2, #4]
 8017ce0:	c703      	stmia	r7!, {r0, r1}
 8017ce2:	6818      	ldr	r0, [r3, #0]
 8017ce4:	af04      	add	r7, sp, #16
 8017ce6:	6859      	ldr	r1, [r3, #4]
 8017ce8:	c703      	stmia	r7!, {r0, r1}
 8017cea:	a802      	add	r0, sp, #8
 8017cec:	f7f7 ff3e 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017cf0:	4621      	mov	r1, r4
 8017cf2:	a804      	add	r0, sp, #16
 8017cf4:	f7f7 ff62 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017cf8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017cfc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017d00:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017d04:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017d08:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017d0c:	eb08 0401 	add.w	r4, r8, r1
 8017d10:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017d14:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017d18:	440a      	add	r2, r1
 8017d1a:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017d1e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017d22:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017d26:	4413      	add	r3, r2
 8017d28:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017d2c:	4b49      	ldr	r3, [pc, #292]	@ (8017e54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017d2e:	6818      	ldr	r0, [r3, #0]
 8017d30:	6803      	ldr	r3, [r0, #0]
 8017d32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017d34:	4798      	blx	r3
 8017d36:	4b48      	ldr	r3, [pc, #288]	@ (8017e58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017d38:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017d3c:	2eff      	cmp	r6, #255	@ 0xff
 8017d3e:	881a      	ldrh	r2, [r3, #0]
 8017d40:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017d44:	fb02 c101 	mla	r1, r2, r1, ip
 8017d48:	fb02 f207 	mul.w	r2, r2, r7
 8017d4c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017d50:	f105 0104 	add.w	r1, r5, #4
 8017d54:	461d      	mov	r5, r3
 8017d56:	d05a      	beq.n	8017e0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017d58:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8017d5c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017d60:	b2b6      	uxth	r6, r6
 8017d62:	9301      	str	r3, [sp, #4]
 8017d64:	fa1f fe8e 	uxth.w	lr, lr
 8017d68:	4282      	cmp	r2, r0
 8017d6a:	d96a      	bls.n	8017e42 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017d6c:	eb00 0b0a 	add.w	fp, r0, sl
 8017d70:	4583      	cmp	fp, r0
 8017d72:	d940      	bls.n	8017df6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017d74:	8805      	ldrh	r5, [r0, #0]
 8017d76:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017d7a:	122f      	asrs	r7, r5, #8
 8017d7c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017d80:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017d84:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017d88:	00ed      	lsls	r5, r5, #3
 8017d8a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017d8e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8017d92:	fb17 f70e 	smulbb	r7, r7, lr
 8017d96:	b2ed      	uxtb	r5, r5
 8017d98:	fb19 f90e 	smulbb	r9, r9, lr
 8017d9c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017da0:	fb15 f50e 	smulbb	r5, r5, lr
 8017da4:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017da8:	10df      	asrs	r7, r3, #3
 8017daa:	00db      	lsls	r3, r3, #3
 8017dac:	fa1f fc8c 	uxth.w	ip, ip
 8017db0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017db4:	b2db      	uxtb	r3, r3
 8017db6:	fb07 9706 	mla	r7, r7, r6, r9
 8017dba:	f10c 0901 	add.w	r9, ip, #1
 8017dbe:	fb03 5306 	mla	r3, r3, r6, r5
 8017dc2:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017dc6:	b29b      	uxth	r3, r3
 8017dc8:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8017dcc:	b2bf      	uxth	r7, r7
 8017dce:	f103 0c01 	add.w	ip, r3, #1
 8017dd2:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017dd6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017dda:	ea4c 0c09 	orr.w	ip, ip, r9
 8017dde:	f107 0901 	add.w	r9, r7, #1
 8017de2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017de6:	097f      	lsrs	r7, r7, #5
 8017de8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8017dec:	ea4c 0c07 	orr.w	ip, ip, r7
 8017df0:	f820 cb02 	strh.w	ip, [r0], #2
 8017df4:	e7bc      	b.n	8017d70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017df6:	9b01      	ldr	r3, [sp, #4]
 8017df8:	881b      	ldrh	r3, [r3, #0]
 8017dfa:	eba3 0308 	sub.w	r3, r3, r8
 8017dfe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017e02:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017e06:	eba3 0308 	sub.w	r3, r3, r8
 8017e0a:	441c      	add	r4, r3
 8017e0c:	e7ac      	b.n	8017d68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8017e0e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017e12:	4282      	cmp	r2, r0
 8017e14:	d915      	bls.n	8017e42 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017e16:	eb00 060a 	add.w	r6, r0, sl
 8017e1a:	4286      	cmp	r6, r0
 8017e1c:	d906      	bls.n	8017e2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8017e1e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017e22:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017e26:	f820 3b02 	strh.w	r3, [r0], #2
 8017e2a:	e7f6      	b.n	8017e1a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8017e2c:	882b      	ldrh	r3, [r5, #0]
 8017e2e:	eba3 0308 	sub.w	r3, r3, r8
 8017e32:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017e36:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017e3a:	eba3 0308 	sub.w	r3, r3, r8
 8017e3e:	441c      	add	r4, r3
 8017e40:	e7e7      	b.n	8017e12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8017e42:	4b04      	ldr	r3, [pc, #16]	@ (8017e54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017e44:	6818      	ldr	r0, [r3, #0]
 8017e46:	6803      	ldr	r3, [r0, #0]
 8017e48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017e4a:	4798      	blx	r3
 8017e4c:	b007      	add	sp, #28
 8017e4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e52:	bf00      	nop
 8017e54:	20016b74 	.word	0x20016b74
 8017e58:	20016b6e 	.word	0x20016b6e

08017e5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e60:	b091      	sub	sp, #68	@ 0x44
 8017e62:	4680      	mov	r8, r0
 8017e64:	460f      	mov	r7, r1
 8017e66:	4614      	mov	r4, r2
 8017e68:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8017e6c:	2d00      	cmp	r5, #0
 8017e6e:	d051      	beq.n	8017f14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017e70:	6810      	ldr	r0, [r2, #0]
 8017e72:	ae0c      	add	r6, sp, #48	@ 0x30
 8017e74:	6851      	ldr	r1, [r2, #4]
 8017e76:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8018078 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017e7a:	c603      	stmia	r6!, {r0, r1}
 8017e7c:	6818      	ldr	r0, [r3, #0]
 8017e7e:	ae0e      	add	r6, sp, #56	@ 0x38
 8017e80:	6859      	ldr	r1, [r3, #4]
 8017e82:	c603      	stmia	r6!, {r0, r1}
 8017e84:	a80c      	add	r0, sp, #48	@ 0x30
 8017e86:	f7f7 fe71 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e8a:	4621      	mov	r1, r4
 8017e8c:	a80e      	add	r0, sp, #56	@ 0x38
 8017e8e:	f7f7 fe95 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e92:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8017e96:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8017e9a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8017e9e:	f8d9 0000 	ldr.w	r0, [r9]
 8017ea2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017ea6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8017eaa:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8017eae:	eb08 0401 	add.w	r4, r8, r1
 8017eb2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8017eb6:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801807c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8017eba:	440a      	add	r2, r1
 8017ebc:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8017ec0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8017ec4:	4413      	add	r3, r2
 8017ec6:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8017eca:	6803      	ldr	r3, [r0, #0]
 8017ecc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017ece:	4798      	blx	r3
 8017ed0:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8017ed4:	f8d9 0000 	ldr.w	r0, [r9]
 8017ed8:	d01f      	beq.n	8017f1a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8017eda:	2200      	movs	r2, #0
 8017edc:	6801      	ldr	r1, [r0, #0]
 8017ede:	b2b6      	uxth	r6, r6
 8017ee0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8017ee4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017ee8:	220b      	movs	r2, #11
 8017eea:	9207      	str	r2, [sp, #28]
 8017eec:	f8b8 2000 	ldrh.w	r2, [r8]
 8017ef0:	9601      	str	r6, [sp, #4]
 8017ef2:	9206      	str	r2, [sp, #24]
 8017ef4:	2201      	movs	r2, #1
 8017ef6:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8017efa:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8017efe:	9203      	str	r2, [sp, #12]
 8017f00:	fa1f f28a 	uxth.w	r2, sl
 8017f04:	9202      	str	r2, [sp, #8]
 8017f06:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8017f0a:	9200      	str	r2, [sp, #0]
 8017f0c:	463a      	mov	r2, r7
 8017f0e:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 8017f10:	4621      	mov	r1, r4
 8017f12:	47a8      	blx	r5
 8017f14:	b011      	add	sp, #68	@ 0x44
 8017f16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f1a:	6803      	ldr	r3, [r0, #0]
 8017f1c:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8017f20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017f22:	4798      	blx	r3
 8017f24:	f8b8 2000 	ldrh.w	r2, [r8]
 8017f28:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8017f2c:	2dff      	cmp	r5, #255	@ 0xff
 8017f2e:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8017f32:	fb0a fa02 	mul.w	sl, sl, r2
 8017f36:	fb02 1303 	mla	r3, r2, r3, r1
 8017f3a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017f3e:	d062      	beq.n	8018006 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8017f40:	ea6f 0c05 	mvn.w	ip, r5
 8017f44:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8017f48:	b2ad      	uxth	r5, r5
 8017f4a:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8017f4e:	fa5f fc8c 	uxtb.w	ip, ip
 8017f52:	930a      	str	r3, [sp, #40]	@ 0x28
 8017f54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017f56:	4298      	cmp	r0, r3
 8017f58:	f080 8085 	bcs.w	8018066 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017f5c:	eb00 0b09 	add.w	fp, r0, r9
 8017f60:	4558      	cmp	r0, fp
 8017f62:	d246      	bcs.n	8017ff2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8017f64:	f814 eb01 	ldrb.w	lr, [r4], #1
 8017f68:	2303      	movs	r3, #3
 8017f6a:	2204      	movs	r2, #4
 8017f6c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8017f70:	8803      	ldrh	r3, [r0, #0]
 8017f72:	eb07 0a0e 	add.w	sl, r7, lr
 8017f76:	1219      	asrs	r1, r3, #8
 8017f78:	10da      	asrs	r2, r3, #3
 8017f7a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017f7e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8017f82:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8017f86:	00db      	lsls	r3, r3, #3
 8017f88:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8017f8c:	fb18 f805 	smulbb	r8, r8, r5
 8017f90:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8017f94:	fb1e fe05 	smulbb	lr, lr, r5
 8017f98:	b2db      	uxtb	r3, r3
 8017f9a:	fb01 810c 	mla	r1, r1, ip, r8
 8017f9e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017fa2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8017fa6:	fb18 f805 	smulbb	r8, r8, r5
 8017faa:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8017fae:	b289      	uxth	r1, r1
 8017fb0:	fb02 820c 	mla	r2, r2, ip, r8
 8017fb4:	fb03 e30c 	mla	r3, r3, ip, lr
 8017fb8:	f101 0801 	add.w	r8, r1, #1
 8017fbc:	b292      	uxth	r2, r2
 8017fbe:	b29b      	uxth	r3, r3
 8017fc0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8017fc4:	f102 0801 	add.w	r8, r2, #1
 8017fc8:	f103 0e01 	add.w	lr, r3, #1
 8017fcc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8017fd0:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8017fd4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8017fd8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017fdc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017fe0:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8017fe4:	ea4e 0101 	orr.w	r1, lr, r1
 8017fe8:	ea41 0108 	orr.w	r1, r1, r8
 8017fec:	f820 1b02 	strh.w	r1, [r0], #2
 8017ff0:	e7b6      	b.n	8017f60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8017ff2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017ff4:	881b      	ldrh	r3, [r3, #0]
 8017ff6:	1b9b      	subs	r3, r3, r6
 8017ff8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017ffc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018000:	1b9b      	subs	r3, r3, r6
 8018002:	441c      	add	r4, r3
 8018004:	e7a6      	b.n	8017f54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8018006:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801800a:	2203      	movs	r2, #3
 801800c:	2504      	movs	r5, #4
 801800e:	4919      	ldr	r1, [pc, #100]	@ (8018074 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018010:	4550      	cmp	r0, sl
 8018012:	d228      	bcs.n	8018066 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018014:	eb00 0c09 	add.w	ip, r0, r9
 8018018:	4560      	cmp	r0, ip
 801801a:	4623      	mov	r3, r4
 801801c:	d219      	bcs.n	8018052 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801801e:	f893 e000 	ldrb.w	lr, [r3]
 8018022:	3401      	adds	r4, #1
 8018024:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018028:	eb07 0b0e 	add.w	fp, r7, lr
 801802c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018030:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018034:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018038:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801803c:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8018040:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8018044:	ea43 030b 	orr.w	r3, r3, fp
 8018048:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801804c:	f820 3b02 	strh.w	r3, [r0], #2
 8018050:	e7e2      	b.n	8018018 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018052:	f8b8 3000 	ldrh.w	r3, [r8]
 8018056:	1b9b      	subs	r3, r3, r6
 8018058:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801805c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018060:	1b9b      	subs	r3, r3, r6
 8018062:	441c      	add	r4, r3
 8018064:	e7d4      	b.n	8018010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018066:	4b04      	ldr	r3, [pc, #16]	@ (8018078 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018068:	6818      	ldr	r0, [r3, #0]
 801806a:	6803      	ldr	r3, [r0, #0]
 801806c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801806e:	4798      	blx	r3
 8018070:	e750      	b.n	8017f14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018072:	bf00      	nop
 8018074:	fffff800 	.word	0xfffff800
 8018078:	20016b74 	.word	0x20016b74
 801807c:	20016b6e 	.word	0x20016b6e

08018080 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8018080:	b4f0      	push	{r4, r5, r6, r7}
 8018082:	460c      	mov	r4, r1
 8018084:	4611      	mov	r1, r2
 8018086:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801808a:	461a      	mov	r2, r3
 801808c:	780f      	ldrb	r7, [r1, #0]
 801808e:	9b04      	ldr	r3, [sp, #16]
 8018090:	2f01      	cmp	r7, #1
 8018092:	784e      	ldrb	r6, [r1, #1]
 8018094:	d038      	beq.n	8018108 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8018096:	d31f      	bcc.n	80180d8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8018098:	2f02      	cmp	r7, #2
 801809a:	d14d      	bne.n	8018138 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801809c:	2e03      	cmp	r6, #3
 801809e:	d84b      	bhi.n	8018138 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80180a0:	e8df f006 	tbb	[pc, r6]
 80180a4:	17140702 	.word	0x17140702
 80180a8:	9504      	str	r5, [sp, #16]
 80180aa:	4620      	mov	r0, r4
 80180ac:	bcf0      	pop	{r4, r5, r6, r7}
 80180ae:	f7ff be09 	b.w	8017cc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80180b2:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80180b4:	2800      	cmp	r0, #0
 80180b6:	d03f      	beq.n	8018138 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80180b8:	6806      	ldr	r6, [r0, #0]
 80180ba:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80180be:	68b5      	ldr	r5, [r6, #8]
 80180c0:	4613      	mov	r3, r2
 80180c2:	46ac      	mov	ip, r5
 80180c4:	460a      	mov	r2, r1
 80180c6:	4621      	mov	r1, r4
 80180c8:	bcf0      	pop	{r4, r5, r6, r7}
 80180ca:	4760      	bx	ip
 80180cc:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80180d0:	e7f0      	b.n	80180b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80180d2:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80180d6:	e7ed      	b.n	80180b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80180d8:	2e03      	cmp	r6, #3
 80180da:	d82d      	bhi.n	8018138 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80180dc:	e8df f006 	tbb	[pc, r6]
 80180e0:	110e0702 	.word	0x110e0702
 80180e4:	9504      	str	r5, [sp, #16]
 80180e6:	4620      	mov	r0, r4
 80180e8:	bcf0      	pop	{r4, r5, r6, r7}
 80180ea:	f7ff bd05 	b.w	8017af8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80180ee:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80180f0:	b310      	cbz	r0, 8018138 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80180f2:	6806      	ldr	r6, [r0, #0]
 80180f4:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80180f8:	68f5      	ldr	r5, [r6, #12]
 80180fa:	e7e1      	b.n	80180c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80180fc:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018100:	e7f6      	b.n	80180f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8018102:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8018106:	e7f3      	b.n	80180f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8018108:	2e03      	cmp	r6, #3
 801810a:	d815      	bhi.n	8018138 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801810c:	e8df f006 	tbb	[pc, r6]
 8018110:	110e0702 	.word	0x110e0702
 8018114:	9504      	str	r5, [sp, #16]
 8018116:	4620      	mov	r0, r4
 8018118:	bcf0      	pop	{r4, r5, r6, r7}
 801811a:	f7ff be9f 	b.w	8017e5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801811e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018120:	b150      	cbz	r0, 8018138 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018122:	6806      	ldr	r6, [r0, #0]
 8018124:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018128:	6935      	ldr	r5, [r6, #16]
 801812a:	e7c9      	b.n	80180c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801812c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018130:	e7f6      	b.n	8018120 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8018132:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8018136:	e7f3      	b.n	8018120 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8018138:	bcf0      	pop	{r4, r5, r6, r7}
 801813a:	4770      	bx	lr

0801813c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801813c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018140:	b087      	sub	sp, #28
 8018142:	4604      	mov	r4, r0
 8018144:	460e      	mov	r6, r1
 8018146:	6810      	ldr	r0, [r2, #0]
 8018148:	6851      	ldr	r1, [r2, #4]
 801814a:	ad02      	add	r5, sp, #8
 801814c:	4617      	mov	r7, r2
 801814e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 8018152:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 8018384 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8018156:	c503      	stmia	r5!, {r0, r1}
 8018158:	6818      	ldr	r0, [r3, #0]
 801815a:	ad04      	add	r5, sp, #16
 801815c:	6859      	ldr	r1, [r3, #4]
 801815e:	c503      	stmia	r5!, {r0, r1}
 8018160:	a802      	add	r0, sp, #8
 8018162:	f7f7 fd03 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018166:	4639      	mov	r1, r7
 8018168:	a804      	add	r0, sp, #16
 801816a:	f7f7 fd27 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801816e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018172:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018176:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801817a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801817e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018182:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8018186:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801818a:	440e      	add	r6, r1
 801818c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018190:	440a      	add	r2, r1
 8018192:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018196:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801819a:	4413      	add	r3, r2
 801819c:	f8ad 3012 	strh.w	r3, [sp, #18]
 80181a0:	4b77      	ldr	r3, [pc, #476]	@ (8018380 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80181a2:	6818      	ldr	r0, [r3, #0]
 80181a4:	6803      	ldr	r3, [r0, #0]
 80181a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80181a8:	4798      	blx	r3
 80181aa:	f8b9 b000 	ldrh.w	fp, [r9]
 80181ae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80181b2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80181b6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80181ba:	fb05 f50b 	mul.w	r5, r5, fp
 80181be:	fb0b 2303 	mla	r3, fp, r3, r2
 80181c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80181c6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80181ca:	9300      	str	r3, [sp, #0]
 80181cc:	d069      	beq.n	80182a2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80181ce:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80181d2:	4558      	cmp	r0, fp
 80181d4:	f080 80cc 	bcs.w	8018370 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80181d8:	9b00      	ldr	r3, [sp, #0]
 80181da:	4631      	mov	r1, r6
 80181dc:	18c3      	adds	r3, r0, r3
 80181de:	9301      	str	r3, [sp, #4]
 80181e0:	9b01      	ldr	r3, [sp, #4]
 80181e2:	4298      	cmp	r0, r3
 80181e4:	d24f      	bcs.n	8018286 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80181e6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80181ea:	2a00      	cmp	r2, #0
 80181ec:	d048      	beq.n	8018280 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80181ee:	fb0a f202 	mul.w	r2, sl, r2
 80181f2:	1c53      	adds	r3, r2, #1
 80181f4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80181f8:	121b      	asrs	r3, r3, #8
 80181fa:	d041      	beq.n	8018280 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80181fc:	8802      	ldrh	r2, [r0, #0]
 80181fe:	b29e      	uxth	r6, r3
 8018200:	f8b4 c000 	ldrh.w	ip, [r4]
 8018204:	43db      	mvns	r3, r3
 8018206:	1215      	asrs	r5, r2, #8
 8018208:	b2db      	uxtb	r3, r3
 801820a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801820e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018212:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8018216:	fb15 f503 	smulbb	r5, r5, r3
 801821a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801821e:	00d2      	lsls	r2, r2, #3
 8018220:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8018224:	fb07 5706 	mla	r7, r7, r6, r5
 8018228:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801822c:	b2d2      	uxtb	r2, r2
 801822e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018232:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018236:	fb1e fe03 	smulbb	lr, lr, r3
 801823a:	b2bf      	uxth	r7, r7
 801823c:	fb12 f203 	smulbb	r2, r2, r3
 8018240:	fa5f fc8c 	uxtb.w	ip, ip
 8018244:	fb05 e506 	mla	r5, r5, r6, lr
 8018248:	f107 0e01 	add.w	lr, r7, #1
 801824c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8018250:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8018254:	fa1f fc8c 	uxth.w	ip, ip
 8018258:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801825c:	b2ad      	uxth	r5, r5
 801825e:	f10c 0701 	add.w	r7, ip, #1
 8018262:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018266:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801826a:	ea47 070e 	orr.w	r7, r7, lr
 801826e:	f105 0e01 	add.w	lr, r5, #1
 8018272:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8018276:	096d      	lsrs	r5, r5, #5
 8018278:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801827c:	432f      	orrs	r7, r5
 801827e:	8007      	strh	r7, [r0, #0]
 8018280:	3002      	adds	r0, #2
 8018282:	3402      	adds	r4, #2
 8018284:	e7ac      	b.n	80181e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8018286:	f8b9 3000 	ldrh.w	r3, [r9]
 801828a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801828e:	eba3 0308 	sub.w	r3, r3, r8
 8018292:	eba6 0608 	sub.w	r6, r6, r8
 8018296:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801829a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801829e:	440e      	add	r6, r1
 80182a0:	e797      	b.n	80181d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80182a2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80182a6:	42a8      	cmp	r0, r5
 80182a8:	d262      	bcs.n	8018370 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80182aa:	9b00      	ldr	r3, [sp, #0]
 80182ac:	4631      	mov	r1, r6
 80182ae:	eb00 0b03 	add.w	fp, r0, r3
 80182b2:	4558      	cmp	r0, fp
 80182b4:	d24e      	bcs.n	8018354 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80182b6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80182ba:	b12b      	cbz	r3, 80182c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80182bc:	2bff      	cmp	r3, #255	@ 0xff
 80182be:	f8b4 e000 	ldrh.w	lr, [r4]
 80182c2:	d104      	bne.n	80182ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80182c4:	f8a0 e000 	strh.w	lr, [r0]
 80182c8:	3002      	adds	r0, #2
 80182ca:	3402      	adds	r4, #2
 80182cc:	e7f1      	b.n	80182b2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80182ce:	8802      	ldrh	r2, [r0, #0]
 80182d0:	b29f      	uxth	r7, r3
 80182d2:	43db      	mvns	r3, r3
 80182d4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80182d8:	1216      	asrs	r6, r2, #8
 80182da:	b2db      	uxtb	r3, r3
 80182dc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80182e0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80182e4:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80182e8:	00d2      	lsls	r2, r2, #3
 80182ea:	fb16 f603 	smulbb	r6, r6, r3
 80182ee:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80182f2:	b2d2      	uxtb	r2, r2
 80182f4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80182f8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80182fc:	fb1a fa03 	smulbb	sl, sl, r3
 8018300:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018304:	fa1f fc8c 	uxth.w	ip, ip
 8018308:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801830c:	fb12 f303 	smulbb	r3, r2, r3
 8018310:	fa5f fe8e 	uxtb.w	lr, lr
 8018314:	fb06 a607 	mla	r6, r6, r7, sl
 8018318:	f10c 0201 	add.w	r2, ip, #1
 801831c:	fb0e 3307 	mla	r3, lr, r7, r3
 8018320:	b2b6      	uxth	r6, r6
 8018322:	b29b      	uxth	r3, r3
 8018324:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018328:	f106 0a01 	add.w	sl, r6, #1
 801832c:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8018330:	f103 0c01 	add.w	ip, r3, #1
 8018334:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018338:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801833c:	0976      	lsrs	r6, r6, #5
 801833e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018342:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018346:	ea4c 0c02 	orr.w	ip, ip, r2
 801834a:	ea4c 0c06 	orr.w	ip, ip, r6
 801834e:	f8a0 c000 	strh.w	ip, [r0]
 8018352:	e7b9      	b.n	80182c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018354:	f8b9 3000 	ldrh.w	r3, [r9]
 8018358:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801835c:	eba3 0308 	sub.w	r3, r3, r8
 8018360:	eba6 0608 	sub.w	r6, r6, r8
 8018364:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018368:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801836c:	440e      	add	r6, r1
 801836e:	e79a      	b.n	80182a6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8018370:	4b03      	ldr	r3, [pc, #12]	@ (8018380 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018372:	6818      	ldr	r0, [r3, #0]
 8018374:	6803      	ldr	r3, [r0, #0]
 8018376:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018378:	4798      	blx	r3
 801837a:	b007      	add	sp, #28
 801837c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018380:	20016b74 	.word	0x20016b74
 8018384:	20016b6e 	.word	0x20016b6e

08018388 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8018388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801838c:	b089      	sub	sp, #36	@ 0x24
 801838e:	4682      	mov	sl, r0
 8018390:	460f      	mov	r7, r1
 8018392:	4691      	mov	r9, r2
 8018394:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8018398:	4698      	mov	r8, r3
 801839a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801839c:	2e00      	cmp	r6, #0
 801839e:	d03d      	beq.n	801841c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80183a0:	4608      	mov	r0, r1
 80183a2:	f7fa fe49 	bl	8013038 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80183a6:	4605      	mov	r5, r0
 80183a8:	4638      	mov	r0, r7
 80183aa:	f7fa fe79 	bl	80130a0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80183ae:	f8ad 000e 	strh.w	r0, [sp, #14]
 80183b2:	4638      	mov	r0, r7
 80183b4:	f8ad 9008 	strh.w	r9, [sp, #8]
 80183b8:	f8ad 500c 	strh.w	r5, [sp, #12]
 80183bc:	f8ad 800a 	strh.w	r8, [sp, #10]
 80183c0:	f7fa ff26 	bl	8013210 <_ZNK8touchgfx6Bitmap7getDataEv>
 80183c4:	4605      	mov	r5, r0
 80183c6:	4638      	mov	r0, r7
 80183c8:	f7fa ff52 	bl	8013270 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80183cc:	4681      	mov	r9, r0
 80183ce:	4638      	mov	r0, r7
 80183d0:	f7fa ffa2 	bl	8013318 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80183d4:	280b      	cmp	r0, #11
 80183d6:	d821      	bhi.n	801841c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80183d8:	e8df f000 	tbb	[pc, r0]
 80183dc:	2006aebe 	.word	0x2006aebe
 80183e0:	20202020 	.word	0x20202020
 80183e4:	b5202020 	.word	0xb5202020
 80183e8:	4bb0      	ldr	r3, [pc, #704]	@ (80186ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80183ea:	6818      	ldr	r0, [r3, #0]
 80183ec:	6803      	ldr	r3, [r0, #0]
 80183ee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80183f0:	4798      	blx	r3
 80183f2:	2eff      	cmp	r6, #255	@ 0xff
 80183f4:	d101      	bne.n	80183fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80183f6:	0683      	lsls	r3, r0, #26
 80183f8:	d506      	bpl.n	8018408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 80183fa:	4633      	mov	r3, r6
 80183fc:	4622      	mov	r2, r4
 80183fe:	a902      	add	r1, sp, #8
 8018400:	4628      	mov	r0, r5
 8018402:	f7ff f907 	bl	8017614 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018406:	e009      	b.n	801841c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018408:	4638      	mov	r0, r7
 801840a:	f7fa fec9 	bl	80131a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801840e:	b940      	cbnz	r0, 8018422 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8018410:	4623      	mov	r3, r4
 8018412:	aa02      	add	r2, sp, #8
 8018414:	4629      	mov	r1, r5
 8018416:	4650      	mov	r0, sl
 8018418:	f7ff f9e2 	bl	80177e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801841c:	b009      	add	sp, #36	@ 0x24
 801841e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018422:	f10d 0818 	add.w	r8, sp, #24
 8018426:	4639      	mov	r1, r7
 8018428:	af04      	add	r7, sp, #16
 801842a:	4640      	mov	r0, r8
 801842c:	f7fa fe6c 	bl	8013108 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018430:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018434:	e887 0003 	stmia.w	r7, {r0, r1}
 8018438:	4638      	mov	r0, r7
 801843a:	4621      	mov	r1, r4
 801843c:	f7f1 fc80 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 8018440:	4638      	mov	r0, r7
 8018442:	f7f1 fcc0 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018446:	2800      	cmp	r0, #0
 8018448:	d1d7      	bne.n	80183fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801844a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801844e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018452:	4293      	cmp	r3, r2
 8018454:	dd12      	ble.n	801847c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 8018456:	1a9b      	subs	r3, r3, r2
 8018458:	f9b4 0000 	ldrsh.w	r0, [r4]
 801845c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018460:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018464:	4628      	mov	r0, r5
 8018466:	f8ad 201a 	strh.w	r2, [sp, #26]
 801846a:	4642      	mov	r2, r8
 801846c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018470:	a902      	add	r1, sp, #8
 8018472:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018476:	4633      	mov	r3, r6
 8018478:	f7ff f8cc 	bl	8017614 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801847c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018480:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018484:	4293      	cmp	r3, r2
 8018486:	dd12      	ble.n	80184ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8018488:	1a9b      	subs	r3, r3, r2
 801848a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801848e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018492:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018496:	4642      	mov	r2, r8
 8018498:	f8ad 001a 	strh.w	r0, [sp, #26]
 801849c:	4628      	mov	r0, r5
 801849e:	f8ad 301c 	strh.w	r3, [sp, #28]
 80184a2:	23ff      	movs	r3, #255	@ 0xff
 80184a4:	f8ad 101e 	strh.w	r1, [sp, #30]
 80184a8:	a902      	add	r1, sp, #8
 80184aa:	f7ff f8b3 	bl	8017614 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80184ae:	463b      	mov	r3, r7
 80184b0:	aa02      	add	r2, sp, #8
 80184b2:	4629      	mov	r1, r5
 80184b4:	4650      	mov	r0, sl
 80184b6:	f7ff f993 	bl	80177e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80184ba:	88a2      	ldrh	r2, [r4, #4]
 80184bc:	8823      	ldrh	r3, [r4, #0]
 80184be:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80184c2:	4413      	add	r3, r2
 80184c4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80184c8:	440a      	add	r2, r1
 80184ca:	b29b      	uxth	r3, r3
 80184cc:	b292      	uxth	r2, r2
 80184ce:	b218      	sxth	r0, r3
 80184d0:	b211      	sxth	r1, r2
 80184d2:	4288      	cmp	r0, r1
 80184d4:	dd12      	ble.n	80184fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80184d6:	1a9b      	subs	r3, r3, r2
 80184d8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80184dc:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80184e0:	4642      	mov	r2, r8
 80184e2:	f8ad 1018 	strh.w	r1, [sp, #24]
 80184e6:	a902      	add	r1, sp, #8
 80184e8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80184ec:	23ff      	movs	r3, #255	@ 0xff
 80184ee:	f8ad 001e 	strh.w	r0, [sp, #30]
 80184f2:	4628      	mov	r0, r5
 80184f4:	f8ad 601a 	strh.w	r6, [sp, #26]
 80184f8:	f7ff f88c 	bl	8017614 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80184fc:	88e2      	ldrh	r2, [r4, #6]
 80184fe:	8863      	ldrh	r3, [r4, #2]
 8018500:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018504:	4413      	add	r3, r2
 8018506:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801850a:	440a      	add	r2, r1
 801850c:	b29b      	uxth	r3, r3
 801850e:	b292      	uxth	r2, r2
 8018510:	b218      	sxth	r0, r3
 8018512:	b211      	sxth	r1, r2
 8018514:	4288      	cmp	r0, r1
 8018516:	dd81      	ble.n	801841c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018518:	1a9b      	subs	r3, r3, r2
 801851a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801851e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018522:	4642      	mov	r2, r8
 8018524:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018528:	23ff      	movs	r3, #255	@ 0xff
 801852a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801852e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018532:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018536:	e762      	b.n	80183fe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8018538:	4633      	mov	r3, r6
 801853a:	4622      	mov	r2, r4
 801853c:	a902      	add	r1, sp, #8
 801853e:	4628      	mov	r0, r5
 8018540:	f7ff f9be 	bl	80178c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018544:	e76a      	b.n	801841c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018546:	e9cd 4600 	strd	r4, r6, [sp]
 801854a:	ab02      	add	r3, sp, #8
 801854c:	464a      	mov	r2, r9
 801854e:	4629      	mov	r1, r5
 8018550:	4650      	mov	r0, sl
 8018552:	f7ff fd95 	bl	8018080 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018556:	e761      	b.n	801841c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018558:	4638      	mov	r0, r7
 801855a:	f7fa fe21 	bl	80131a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801855e:	b950      	cbnz	r0, 8018576 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8018560:	f8da 3000 	ldr.w	r3, [sl]
 8018564:	aa02      	add	r2, sp, #8
 8018566:	4629      	mov	r1, r5
 8018568:	e9cd 6000 	strd	r6, r0, [sp]
 801856c:	4650      	mov	r0, sl
 801856e:	68de      	ldr	r6, [r3, #12]
 8018570:	4623      	mov	r3, r4
 8018572:	47b0      	blx	r6
 8018574:	e752      	b.n	801841c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018576:	f10d 0818 	add.w	r8, sp, #24
 801857a:	4639      	mov	r1, r7
 801857c:	af04      	add	r7, sp, #16
 801857e:	4640      	mov	r0, r8
 8018580:	f7fa fdc2 	bl	8013108 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018584:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018588:	e887 0003 	stmia.w	r7, {r0, r1}
 801858c:	4638      	mov	r0, r7
 801858e:	4621      	mov	r1, r4
 8018590:	f7f1 fbd6 	bl	8009d40 <_ZN8touchgfx4RectaNERKS0_>
 8018594:	4638      	mov	r0, r7
 8018596:	f7f1 fc16 	bl	8009dc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801859a:	b138      	cbz	r0, 80185ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801859c:	4623      	mov	r3, r4
 801859e:	9600      	str	r6, [sp, #0]
 80185a0:	aa02      	add	r2, sp, #8
 80185a2:	4649      	mov	r1, r9
 80185a4:	4628      	mov	r0, r5
 80185a6:	f7ff fdc9 	bl	801813c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80185aa:	e737      	b.n	801841c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80185ac:	f8da 3000 	ldr.w	r3, [sl]
 80185b0:	aa02      	add	r2, sp, #8
 80185b2:	4629      	mov	r1, r5
 80185b4:	e9cd 6000 	strd	r6, r0, [sp]
 80185b8:	4650      	mov	r0, sl
 80185ba:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80185be:	463b      	mov	r3, r7
 80185c0:	47d8      	blx	fp
 80185c2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80185c6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80185ca:	4293      	cmp	r3, r2
 80185cc:	dd13      	ble.n	80185f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 80185ce:	f9b4 0000 	ldrsh.w	r0, [r4]
 80185d2:	1a9b      	subs	r3, r3, r2
 80185d4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80185d8:	f8ad 0018 	strh.w	r0, [sp, #24]
 80185dc:	4628      	mov	r0, r5
 80185de:	f8ad 201a 	strh.w	r2, [sp, #26]
 80185e2:	aa02      	add	r2, sp, #8
 80185e4:	f8ad 101c 	strh.w	r1, [sp, #28]
 80185e8:	4649      	mov	r1, r9
 80185ea:	f8ad 301e 	strh.w	r3, [sp, #30]
 80185ee:	4643      	mov	r3, r8
 80185f0:	9600      	str	r6, [sp, #0]
 80185f2:	f7ff fda3 	bl	801813c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80185f6:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80185fa:	f9b4 2000 	ldrsh.w	r2, [r4]
 80185fe:	4293      	cmp	r3, r2
 8018600:	dd13      	ble.n	801862a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 8018602:	1a9b      	subs	r3, r3, r2
 8018604:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018608:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801860c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018610:	aa02      	add	r2, sp, #8
 8018612:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018616:	4628      	mov	r0, r5
 8018618:	f8ad 301c 	strh.w	r3, [sp, #28]
 801861c:	4643      	mov	r3, r8
 801861e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018622:	4649      	mov	r1, r9
 8018624:	9600      	str	r6, [sp, #0]
 8018626:	f7ff fd89 	bl	801813c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801862a:	88a2      	ldrh	r2, [r4, #4]
 801862c:	8823      	ldrh	r3, [r4, #0]
 801862e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018632:	4413      	add	r3, r2
 8018634:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018638:	440a      	add	r2, r1
 801863a:	b29b      	uxth	r3, r3
 801863c:	b292      	uxth	r2, r2
 801863e:	b218      	sxth	r0, r3
 8018640:	b211      	sxth	r1, r2
 8018642:	4288      	cmp	r0, r1
 8018644:	dd13      	ble.n	801866e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 8018646:	1a9b      	subs	r3, r3, r2
 8018648:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801864c:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8018650:	aa02      	add	r2, sp, #8
 8018652:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018656:	4649      	mov	r1, r9
 8018658:	f8ad 301c 	strh.w	r3, [sp, #28]
 801865c:	4643      	mov	r3, r8
 801865e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018662:	4628      	mov	r0, r5
 8018664:	9600      	str	r6, [sp, #0]
 8018666:	f8ad 701a 	strh.w	r7, [sp, #26]
 801866a:	f7ff fd67 	bl	801813c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801866e:	88e2      	ldrh	r2, [r4, #6]
 8018670:	8863      	ldrh	r3, [r4, #2]
 8018672:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018676:	4413      	add	r3, r2
 8018678:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801867c:	440a      	add	r2, r1
 801867e:	b29b      	uxth	r3, r3
 8018680:	b292      	uxth	r2, r2
 8018682:	b218      	sxth	r0, r3
 8018684:	b211      	sxth	r1, r2
 8018686:	4288      	cmp	r0, r1
 8018688:	f77f aec8 	ble.w	801841c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801868c:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018690:	1a9b      	subs	r3, r3, r2
 8018692:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018696:	f8ad 301e 	strh.w	r3, [sp, #30]
 801869a:	4643      	mov	r3, r8
 801869c:	f8ad 7018 	strh.w	r7, [sp, #24]
 80186a0:	f8ad 101a 	strh.w	r1, [sp, #26]
 80186a4:	f8ad 001c 	strh.w	r0, [sp, #28]
 80186a8:	9600      	str	r6, [sp, #0]
 80186aa:	e779      	b.n	80185a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 80186ac:	20016b74 	.word	0x20016b74

080186b0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80186b0:	b180      	cbz	r0, 80186d4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80186b2:	2903      	cmp	r1, #3
 80186b4:	d81c      	bhi.n	80186f0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80186b6:	e8df f001 	tbb	[pc, r1]
 80186ba:	1d02      	.short	0x1d02
 80186bc:	1f08      	.short	0x1f08
 80186be:	4b10      	ldr	r3, [pc, #64]	@ (8018700 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80186c0:	8818      	ldrh	r0, [r3, #0]
 80186c2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80186c6:	4240      	negs	r0, r0
 80186c8:	4770      	bx	lr
 80186ca:	4b0d      	ldr	r3, [pc, #52]	@ (8018700 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80186cc:	8818      	ldrh	r0, [r3, #0]
 80186ce:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80186d2:	4770      	bx	lr
 80186d4:	2903      	cmp	r1, #3
 80186d6:	d80b      	bhi.n	80186f0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80186d8:	a301      	add	r3, pc, #4	@ (adr r3, 80186e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80186da:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80186de:	bf00      	nop
 80186e0:	080186f5 	.word	0x080186f5
 80186e4:	080186cb 	.word	0x080186cb
 80186e8:	080186f9 	.word	0x080186f9
 80186ec:	080186bf 	.word	0x080186bf
 80186f0:	2000      	movs	r0, #0
 80186f2:	4770      	bx	lr
 80186f4:	2001      	movs	r0, #1
 80186f6:	4770      	bx	lr
 80186f8:	f04f 30ff 	mov.w	r0, #4294967295
 80186fc:	4770      	bx	lr
 80186fe:	bf00      	nop
 8018700:	20016b6e 	.word	0x20016b6e

08018704 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018704:	b180      	cbz	r0, 8018728 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018706:	2903      	cmp	r1, #3
 8018708:	d81c      	bhi.n	8018744 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801870a:	e8df f001 	tbb	[pc, r1]
 801870e:	021d      	.short	0x021d
 8018710:	071f      	.short	0x071f
 8018712:	4b10      	ldr	r3, [pc, #64]	@ (8018754 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018714:	8818      	ldrh	r0, [r3, #0]
 8018716:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801871a:	4770      	bx	lr
 801871c:	4b0d      	ldr	r3, [pc, #52]	@ (8018754 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801871e:	8818      	ldrh	r0, [r3, #0]
 8018720:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018724:	4240      	negs	r0, r0
 8018726:	4770      	bx	lr
 8018728:	2903      	cmp	r1, #3
 801872a:	d80b      	bhi.n	8018744 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801872c:	a301      	add	r3, pc, #4	@ (adr r3, 8018734 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801872e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018732:	bf00      	nop
 8018734:	08018713 	.word	0x08018713
 8018738:	0801874d 	.word	0x0801874d
 801873c:	0801871d 	.word	0x0801871d
 8018740:	08018749 	.word	0x08018749
 8018744:	2000      	movs	r0, #0
 8018746:	4770      	bx	lr
 8018748:	2001      	movs	r0, #1
 801874a:	4770      	bx	lr
 801874c:	f04f 30ff 	mov.w	r0, #4294967295
 8018750:	4770      	bx	lr
 8018752:	bf00      	nop
 8018754:	20016b6e 	.word	0x20016b6e

08018758 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801875c:	b099      	sub	sp, #100	@ 0x64
 801875e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018760:	a914      	add	r1, sp, #80	@ 0x50
 8018762:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8018766:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801876a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801876e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 8018772:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8018776:	e881 000c 	stmia.w	r1, {r2, r3}
 801877a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801877e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8018782:	9309      	str	r3, [sp, #36]	@ 0x24
 8018784:	f891 900d 	ldrb.w	r9, [r1, #13]
 8018788:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801878c:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8018790:	9310      	str	r3, [sp, #64]	@ 0x40
 8018792:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8018796:	930c      	str	r3, [sp, #48]	@ 0x30
 8018798:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801879c:	798f      	ldrb	r7, [r1, #6]
 801879e:	431f      	orrs	r7, r3
 80187a0:	f000 8195 	beq.w	8018ace <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80187a4:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80187a8:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 80187ac:	f891 9007 	ldrb.w	r9, [r1, #7]
 80187b0:	ea59 0903 	orrs.w	r9, r9, r3
 80187b4:	f000 818b 	beq.w	8018ace <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80187b8:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80187bc:	b29b      	uxth	r3, r3
 80187be:	2d00      	cmp	r5, #0
 80187c0:	f000 812e 	beq.w	8018a20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80187c4:	1aed      	subs	r5, r5, r3
 80187c6:	b2ad      	uxth	r5, r5
 80187c8:	042b      	lsls	r3, r5, #16
 80187ca:	d502      	bpl.n	80187d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80187cc:	1b64      	subs	r4, r4, r5
 80187ce:	2500      	movs	r5, #0
 80187d0:	b224      	sxth	r4, r4
 80187d2:	f9b2 1000 	ldrsh.w	r1, [r2]
 80187d6:	a814      	add	r0, sp, #80	@ 0x50
 80187d8:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 80187dc:	428c      	cmp	r4, r1
 80187de:	b28b      	uxth	r3, r1
 80187e0:	bfbf      	itttt	lt
 80187e2:	18ed      	addlt	r5, r5, r3
 80187e4:	1b2c      	sublt	r4, r5, r4
 80187e6:	b2a5      	uxthlt	r5, r4
 80187e8:	460c      	movlt	r4, r1
 80187ea:	8891      	ldrh	r1, [r2, #4]
 80187ec:	440b      	add	r3, r1
 80187ee:	4621      	mov	r1, r4
 80187f0:	b21b      	sxth	r3, r3
 80187f2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80187f4:	88d3      	ldrh	r3, [r2, #6]
 80187f6:	8852      	ldrh	r2, [r2, #2]
 80187f8:	4413      	add	r3, r2
 80187fa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80187fc:	b21b      	sxth	r3, r3
 80187fe:	930d      	str	r3, [sp, #52]	@ 0x34
 8018800:	4bbd      	ldr	r3, [pc, #756]	@ (8018af8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018802:	f893 b000 	ldrb.w	fp, [r3]
 8018806:	f10b 3cff 	add.w	ip, fp, #4294967295
 801880a:	f1dc 0300 	rsbs	r3, ip, #0
 801880e:	eb43 030c 	adc.w	r3, r3, ip
 8018812:	930e      	str	r3, [sp, #56]	@ 0x38
 8018814:	4653      	mov	r3, sl
 8018816:	f7f7 f81e 	bl	800f856 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801881a:	4621      	mov	r1, r4
 801881c:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8018820:	4653      	mov	r3, sl
 8018822:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018824:	a814      	add	r0, sp, #80	@ 0x50
 8018826:	f7f7 f833 	bl	800f890 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801882a:	a918      	add	r1, sp, #96	@ 0x60
 801882c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018830:	a817      	add	r0, sp, #92	@ 0x5c
 8018832:	f7f7 f959 	bl	800fae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018836:	f1ba 0f00 	cmp.w	sl, #0
 801883a:	f040 80f4 	bne.w	8018a26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801883e:	f1bb 0f01 	cmp.w	fp, #1
 8018842:	f040 80f8 	bne.w	8018a36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8018846:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018848:	2b00      	cmp	r3, #0
 801884a:	f040 8145 	bne.w	8018ad8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801884e:	b2ba      	uxth	r2, r7
 8018850:	b905      	cbnz	r5, 8018854 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8018852:	b16e      	cbz	r6, 8018870 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8018854:	fb06 5302 	mla	r3, r6, r2, r5
 8018858:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801885a:	4631      	mov	r1, r6
 801885c:	fb08 f303 	mul.w	r3, r8, r3
 8018860:	f003 0607 	and.w	r6, r3, #7
 8018864:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8018868:	9328      	str	r3, [sp, #160]	@ 0xa0
 801886a:	eba9 0301 	sub.w	r3, r9, r1
 801886e:	930a      	str	r3, [sp, #40]	@ 0x28
 8018870:	4651      	mov	r1, sl
 8018872:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8018874:	f7ff ff1c 	bl	80186b0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8018878:	4681      	mov	r9, r0
 801887a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801887c:	f7ff ff42 	bl	8018704 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018880:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018882:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018884:	4683      	mov	fp, r0
 8018886:	eba3 0a01 	sub.w	sl, r3, r1
 801888a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801888c:	459a      	cmp	sl, r3
 801888e:	bfa8      	it	ge
 8018890:	469a      	movge	sl, r3
 8018892:	f1ba 0f00 	cmp.w	sl, #0
 8018896:	f340 811a 	ble.w	8018ace <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801889a:	1b64      	subs	r4, r4, r5
 801889c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801889e:	1b1c      	subs	r4, r3, r4
 80188a0:	42bc      	cmp	r4, r7
 80188a2:	bfd4      	ite	le
 80188a4:	ebc5 0504 	rsble	r5, r5, r4
 80188a8:	ebc5 0507 	rsbgt	r5, r5, r7
 80188ac:	2d00      	cmp	r5, #0
 80188ae:	f340 810e 	ble.w	8018ace <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80188b2:	1b52      	subs	r2, r2, r5
 80188b4:	fb08 f302 	mul.w	r3, r8, r2
 80188b8:	930f      	str	r3, [sp, #60]	@ 0x3c
 80188ba:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80188bc:	2b00      	cmp	r3, #0
 80188be:	f040 8116 	bne.w	8018aee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80188c2:	4b8e      	ldr	r3, [pc, #568]	@ (8018afc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80188c4:	6818      	ldr	r0, [r3, #0]
 80188c6:	6803      	ldr	r3, [r0, #0]
 80188c8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80188ca:	4798      	blx	r3
 80188cc:	2301      	movs	r3, #1
 80188ce:	4a8c      	ldr	r2, [pc, #560]	@ (8018b00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80188d0:	fa03 f308 	lsl.w	r3, r3, r8
 80188d4:	8811      	ldrh	r1, [r2, #0]
 80188d6:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 80188da:	3b01      	subs	r3, #1
 80188dc:	b2db      	uxtb	r3, r3
 80188de:	930e      	str	r3, [sp, #56]	@ 0x38
 80188e0:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 80188e4:	fb01 2303 	mla	r3, r1, r3, r2
 80188e8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80188ec:	930a      	str	r3, [sp, #40]	@ 0x28
 80188ee:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80188f0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80188f4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80188f6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80188f8:	0a19      	lsrs	r1, r3, #8
 80188fa:	b2cb      	uxtb	r3, r1
 80188fc:	9312      	str	r3, [sp, #72]	@ 0x48
 80188fe:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018900:	b2db      	uxtb	r3, r3
 8018902:	9311      	str	r3, [sp, #68]	@ 0x44
 8018904:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018906:	095a      	lsrs	r2, r3, #5
 8018908:	4b7e      	ldr	r3, [pc, #504]	@ (8018b04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 801890a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801890e:	400b      	ands	r3, r1
 8018910:	4313      	orrs	r3, r2
 8018912:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8018914:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018918:	4313      	orrs	r3, r2
 801891a:	b29b      	uxth	r3, r3
 801891c:	9310      	str	r3, [sp, #64]	@ 0x40
 801891e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018920:	781a      	ldrb	r2, [r3, #0]
 8018922:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018926:	fb05 b919 	mls	r9, r5, r9, fp
 801892a:	4132      	asrs	r2, r6
 801892c:	fb03 fb05 	mul.w	fp, r3, r5
 8018930:	930d      	str	r3, [sp, #52]	@ 0x34
 8018932:	b2d2      	uxtb	r2, r2
 8018934:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8018938:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801893c:	f0c0 80f5 	bcc.w	8018b2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018940:	46ae      	mov	lr, r5
 8018942:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 8018946:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801894a:	f0c0 80dd 	bcc.w	8018b08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801894e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018950:	4013      	ands	r3, r2
 8018952:	d055      	beq.n	8018a00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8018954:	20ff      	movs	r0, #255	@ 0xff
 8018956:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018958:	fb90 f1f1 	sdiv	r1, r0, r1
 801895c:	434b      	muls	r3, r1
 801895e:	2bfe      	cmp	r3, #254	@ 0xfe
 8018960:	dd03      	ble.n	801896a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8018962:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018964:	4281      	cmp	r1, r0
 8018966:	f000 80c4 	beq.w	8018af2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 801896a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801896c:	f8bc 4000 	ldrh.w	r4, [ip]
 8018970:	fb11 f303 	smulbb	r3, r1, r3
 8018974:	1220      	asrs	r0, r4, #8
 8018976:	b29b      	uxth	r3, r3
 8018978:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801897c:	1c59      	adds	r1, r3, #1
 801897e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8018982:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018986:	10e1      	asrs	r1, r4, #3
 8018988:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801898c:	00e4      	lsls	r4, r4, #3
 801898e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018992:	b29f      	uxth	r7, r3
 8018994:	43db      	mvns	r3, r3
 8018996:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801899a:	b2db      	uxtb	r3, r3
 801899c:	b2e4      	uxtb	r4, r4
 801899e:	9309      	str	r3, [sp, #36]	@ 0x24
 80189a0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80189a2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80189a6:	fb13 f907 	smulbb	r9, r3, r7
 80189aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80189ac:	fb00 9003 	mla	r0, r0, r3, r9
 80189b0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80189b2:	fb13 f907 	smulbb	r9, r3, r7
 80189b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80189b8:	b280      	uxth	r0, r0
 80189ba:	fb01 9103 	mla	r1, r1, r3, r9
 80189be:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80189c0:	fb13 f707 	smulbb	r7, r3, r7
 80189c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80189c6:	b289      	uxth	r1, r1
 80189c8:	fb04 7403 	mla	r4, r4, r3, r7
 80189cc:	1c43      	adds	r3, r0, #1
 80189ce:	b2a4      	uxth	r4, r4
 80189d0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80189d4:	f104 0901 	add.w	r9, r4, #1
 80189d8:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80189dc:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80189e0:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80189e4:	ea49 0000 	orr.w	r0, r9, r0
 80189e8:	f101 0901 	add.w	r9, r1, #1
 80189ec:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80189f0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80189f4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80189f8:	ea40 0009 	orr.w	r0, r0, r9
 80189fc:	f8ac 0000 	strh.w	r0, [ip]
 8018a00:	4446      	add	r6, r8
 8018a02:	b2b6      	uxth	r6, r6
 8018a04:	2e07      	cmp	r6, #7
 8018a06:	bf89      	itett	hi
 8018a08:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 8018a0a:	fa42 f208 	asrls.w	r2, r2, r8
 8018a0e:	2600      	movhi	r6, #0
 8018a10:	785a      	ldrbhi	r2, [r3, #1]
 8018a12:	bf8a      	itet	hi
 8018a14:	3301      	addhi	r3, #1
 8018a16:	b2d2      	uxtbls	r2, r2
 8018a18:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 8018a1a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018a1c:	449c      	add	ip, r3
 8018a1e:	e792      	b.n	8018946 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018a20:	441c      	add	r4, r3
 8018a22:	b224      	sxth	r4, r4
 8018a24:	e6d5      	b.n	80187d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018a26:	f1ba 0f01 	cmp.w	sl, #1
 8018a2a:	f47f af0c 	bne.w	8018846 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018a2e:	f1bb 0f01 	cmp.w	fp, #1
 8018a32:	f47f af08 	bne.w	8018846 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018a36:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 8018afc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 8018a3a:	f8db 0000 	ldr.w	r0, [fp]
 8018a3e:	6803      	ldr	r3, [r0, #0]
 8018a40:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018a42:	4798      	blx	r3
 8018a44:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8018a48:	465a      	mov	r2, fp
 8018a4a:	d006      	beq.n	8018a5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018a4c:	f1b8 0f04 	cmp.w	r8, #4
 8018a50:	d140      	bne.n	8018ad4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018a52:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018a54:	3300      	adds	r3, #0
 8018a56:	bf18      	it	ne
 8018a58:	2301      	movne	r3, #1
 8018a5a:	0580      	lsls	r0, r0, #22
 8018a5c:	d56e      	bpl.n	8018b3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018a5e:	f1b8 0f08 	cmp.w	r8, #8
 8018a62:	d16b      	bne.n	8018b3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018a64:	2b00      	cmp	r3, #0
 8018a66:	bf0c      	ite	eq
 8018a68:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 8018a6c:	f44f 7180 	movne.w	r1, #256	@ 0x100
 8018a70:	2d00      	cmp	r5, #0
 8018a72:	f47f aee8 	bne.w	8018846 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018a76:	2e00      	cmp	r6, #0
 8018a78:	f47f aee5 	bne.w	8018846 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018a7c:	19e3      	adds	r3, r4, r7
 8018a7e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8018a80:	4283      	cmp	r3, r0
 8018a82:	f73f aee0 	bgt.w	8018846 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018a86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018a88:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8018a8a:	444b      	add	r3, r9
 8018a8c:	4283      	cmp	r3, r0
 8018a8e:	f73f aeda 	bgt.w	8018846 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018a92:	b2bf      	uxth	r7, r7
 8018a94:	f1b8 0f08 	cmp.w	r8, #8
 8018a98:	6810      	ldr	r0, [r2, #0]
 8018a9a:	f04f 0500 	mov.w	r5, #0
 8018a9e:	bf18      	it	ne
 8018aa0:	3701      	addne	r7, #1
 8018aa2:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 8018aa6:	6804      	ldr	r4, [r0, #0]
 8018aa8:	bf18      	it	ne
 8018aaa:	f027 0701 	bicne.w	r7, r7, #1
 8018aae:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8018ab2:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018ab6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018ab8:	bf18      	it	ne
 8018aba:	b2bf      	uxthne	r7, r7
 8018abc:	9104      	str	r1, [sp, #16]
 8018abe:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8018ac0:	e9cd 7900 	strd	r7, r9, [sp]
 8018ac4:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018ac8:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8018aca:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 8018acc:	47a0      	blx	r4
 8018ace:	b019      	add	sp, #100	@ 0x64
 8018ad0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018ad4:	2300      	movs	r3, #0
 8018ad6:	e7c0      	b.n	8018a5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018ad8:	2208      	movs	r2, #8
 8018ada:	fb92 f3f8 	sdiv	r3, r2, r8
 8018ade:	1e5a      	subs	r2, r3, #1
 8018ae0:	443a      	add	r2, r7
 8018ae2:	fb92 f2f3 	sdiv	r2, r2, r3
 8018ae6:	fb12 f203 	smulbb	r2, r2, r3
 8018aea:	b292      	uxth	r2, r2
 8018aec:	e6b0      	b.n	8018850 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8018aee:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8018af0:	e6ec      	b.n	80188cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018af2:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8018af4:	e782      	b.n	80189fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018af6:	bf00      	nop
 8018af8:	20016b6c 	.word	0x20016b6c
 8018afc:	20016b74 	.word	0x20016b74
 8018b00:	20016b6e 	.word	0x20016b6e
 8018b04:	00fff800 	.word	0x00fff800
 8018b08:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018b0a:	b153      	cbz	r3, 8018b22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8018b0c:	441e      	add	r6, r3
 8018b0e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018b10:	b2b6      	uxth	r6, r6
 8018b12:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018b16:	f006 0607 	and.w	r6, r6, #7
 8018b1a:	781a      	ldrb	r2, [r3, #0]
 8018b1c:	9328      	str	r3, [sp, #160]	@ 0xa0
 8018b1e:	4132      	asrs	r2, r6
 8018b20:	b2d2      	uxtb	r2, r2
 8018b22:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018b24:	445b      	add	r3, fp
 8018b26:	930a      	str	r3, [sp, #40]	@ 0x28
 8018b28:	e706      	b.n	8018938 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8018b2a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018b2c:	2b00      	cmp	r3, #0
 8018b2e:	d1ce      	bne.n	8018ace <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018b30:	4b05      	ldr	r3, [pc, #20]	@ (8018b48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018b32:	6818      	ldr	r0, [r3, #0]
 8018b34:	6803      	ldr	r3, [r0, #0]
 8018b36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018b38:	4798      	blx	r3
 8018b3a:	e7c8      	b.n	8018ace <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018b3c:	2b00      	cmp	r3, #0
 8018b3e:	f43f ae82 	beq.w	8018846 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018b42:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8018b46:	e793      	b.n	8018a70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018b48:	20016b74 	.word	0x20016b74

08018b4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8018b4c:	b538      	push	{r3, r4, r5, lr}
 8018b4e:	4c15      	ldr	r4, [pc, #84]	@ (8018ba4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018b50:	4605      	mov	r5, r0
 8018b52:	7823      	ldrb	r3, [r4, #0]
 8018b54:	f3bf 8f5b 	dmb	ish
 8018b58:	07da      	lsls	r2, r3, #31
 8018b5a:	d40b      	bmi.n	8018b74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018b5c:	4620      	mov	r0, r4
 8018b5e:	f008 f9d1 	bl	8020f04 <__cxa_guard_acquire>
 8018b62:	b138      	cbz	r0, 8018b74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018b64:	4620      	mov	r0, r4
 8018b66:	f008 f9d9 	bl	8020f1c <__cxa_guard_release>
 8018b6a:	4a0f      	ldr	r2, [pc, #60]	@ (8018ba8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018b6c:	490f      	ldr	r1, [pc, #60]	@ (8018bac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8018b6e:	4810      	ldr	r0, [pc, #64]	@ (8018bb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018b70:	f008 f9c1 	bl	8020ef6 <__aeabi_atexit>
 8018b74:	4c0f      	ldr	r4, [pc, #60]	@ (8018bb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8018b76:	7823      	ldrb	r3, [r4, #0]
 8018b78:	f3bf 8f5b 	dmb	ish
 8018b7c:	07db      	lsls	r3, r3, #31
 8018b7e:	d40b      	bmi.n	8018b98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018b80:	4620      	mov	r0, r4
 8018b82:	f008 f9bf 	bl	8020f04 <__cxa_guard_acquire>
 8018b86:	b138      	cbz	r0, 8018b98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018b88:	4620      	mov	r0, r4
 8018b8a:	f008 f9c7 	bl	8020f1c <__cxa_guard_release>
 8018b8e:	4a06      	ldr	r2, [pc, #24]	@ (8018ba8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018b90:	4909      	ldr	r1, [pc, #36]	@ (8018bb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018b92:	480a      	ldr	r0, [pc, #40]	@ (8018bbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018b94:	f008 f9af 	bl	8020ef6 <__aeabi_atexit>
 8018b98:	4b05      	ldr	r3, [pc, #20]	@ (8018bb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018b9a:	616b      	str	r3, [r5, #20]
 8018b9c:	4b07      	ldr	r3, [pc, #28]	@ (8018bbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018b9e:	61ab      	str	r3, [r5, #24]
 8018ba0:	bd38      	pop	{r3, r4, r5, pc}
 8018ba2:	bf00      	nop
 8018ba4:	20016c54 	.word	0x20016c54
 8018ba8:	20000000 	.word	0x20000000
 8018bac:	0801592f 	.word	0x0801592f
 8018bb0:	20000090 	.word	0x20000090
 8018bb4:	20016c58 	.word	0x20016c58
 8018bb8:	0801592d 	.word	0x0801592d
 8018bbc:	20000094 	.word	0x20000094

08018bc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018bc0:	b538      	push	{r3, r4, r5, lr}
 8018bc2:	4c15      	ldr	r4, [pc, #84]	@ (8018c18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018bc4:	4605      	mov	r5, r0
 8018bc6:	7823      	ldrb	r3, [r4, #0]
 8018bc8:	f3bf 8f5b 	dmb	ish
 8018bcc:	07da      	lsls	r2, r3, #31
 8018bce:	d40b      	bmi.n	8018be8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018bd0:	4620      	mov	r0, r4
 8018bd2:	f008 f997 	bl	8020f04 <__cxa_guard_acquire>
 8018bd6:	b138      	cbz	r0, 8018be8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018bd8:	4620      	mov	r0, r4
 8018bda:	f008 f99f 	bl	8020f1c <__cxa_guard_release>
 8018bde:	4a0f      	ldr	r2, [pc, #60]	@ (8018c1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018be0:	490f      	ldr	r1, [pc, #60]	@ (8018c20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018be2:	4810      	ldr	r0, [pc, #64]	@ (8018c24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018be4:	f008 f987 	bl	8020ef6 <__aeabi_atexit>
 8018be8:	4c0f      	ldr	r4, [pc, #60]	@ (8018c28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018bea:	7823      	ldrb	r3, [r4, #0]
 8018bec:	f3bf 8f5b 	dmb	ish
 8018bf0:	07db      	lsls	r3, r3, #31
 8018bf2:	d40b      	bmi.n	8018c0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018bf4:	4620      	mov	r0, r4
 8018bf6:	f008 f985 	bl	8020f04 <__cxa_guard_acquire>
 8018bfa:	b138      	cbz	r0, 8018c0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018bfc:	4620      	mov	r0, r4
 8018bfe:	f008 f98d 	bl	8020f1c <__cxa_guard_release>
 8018c02:	4a06      	ldr	r2, [pc, #24]	@ (8018c1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018c04:	4909      	ldr	r1, [pc, #36]	@ (8018c2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018c06:	480a      	ldr	r0, [pc, #40]	@ (8018c30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018c08:	f008 f975 	bl	8020ef6 <__aeabi_atexit>
 8018c0c:	4b05      	ldr	r3, [pc, #20]	@ (8018c24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018c0e:	60eb      	str	r3, [r5, #12]
 8018c10:	4b07      	ldr	r3, [pc, #28]	@ (8018c30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018c12:	612b      	str	r3, [r5, #16]
 8018c14:	bd38      	pop	{r3, r4, r5, pc}
 8018c16:	bf00      	nop
 8018c18:	20016c2c 	.word	0x20016c2c
 8018c1c:	20000000 	.word	0x20000000
 8018c20:	08015933 	.word	0x08015933
 8018c24:	20000068 	.word	0x20000068
 8018c28:	20016c30 	.word	0x20016c30
 8018c2c:	08015931 	.word	0x08015931
 8018c30:	2000006c 	.word	0x2000006c

08018c34 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018c34:	b510      	push	{r4, lr}
 8018c36:	4604      	mov	r4, r0
 8018c38:	f7ff ff88 	bl	8018b4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018c3c:	4620      	mov	r0, r4
 8018c3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018c42:	f7ff bfbd 	b.w	8018bc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018c48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018c48:	b538      	push	{r3, r4, r5, lr}
 8018c4a:	4c15      	ldr	r4, [pc, #84]	@ (8018ca0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018c4c:	4605      	mov	r5, r0
 8018c4e:	7823      	ldrb	r3, [r4, #0]
 8018c50:	f3bf 8f5b 	dmb	ish
 8018c54:	07da      	lsls	r2, r3, #31
 8018c56:	d40b      	bmi.n	8018c70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018c58:	4620      	mov	r0, r4
 8018c5a:	f008 f953 	bl	8020f04 <__cxa_guard_acquire>
 8018c5e:	b138      	cbz	r0, 8018c70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018c60:	4620      	mov	r0, r4
 8018c62:	f008 f95b 	bl	8020f1c <__cxa_guard_release>
 8018c66:	4a0f      	ldr	r2, [pc, #60]	@ (8018ca4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018c68:	490f      	ldr	r1, [pc, #60]	@ (8018ca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018c6a:	4810      	ldr	r0, [pc, #64]	@ (8018cac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018c6c:	f008 f943 	bl	8020ef6 <__aeabi_atexit>
 8018c70:	4c0f      	ldr	r4, [pc, #60]	@ (8018cb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018c72:	7823      	ldrb	r3, [r4, #0]
 8018c74:	f3bf 8f5b 	dmb	ish
 8018c78:	07db      	lsls	r3, r3, #31
 8018c7a:	d40b      	bmi.n	8018c94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018c7c:	4620      	mov	r0, r4
 8018c7e:	f008 f941 	bl	8020f04 <__cxa_guard_acquire>
 8018c82:	b138      	cbz	r0, 8018c94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018c84:	4620      	mov	r0, r4
 8018c86:	f008 f949 	bl	8020f1c <__cxa_guard_release>
 8018c8a:	4a06      	ldr	r2, [pc, #24]	@ (8018ca4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018c8c:	4909      	ldr	r1, [pc, #36]	@ (8018cb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018c8e:	480a      	ldr	r0, [pc, #40]	@ (8018cb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018c90:	f008 f931 	bl	8020ef6 <__aeabi_atexit>
 8018c94:	4b05      	ldr	r3, [pc, #20]	@ (8018cac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018c96:	626b      	str	r3, [r5, #36]	@ 0x24
 8018c98:	4b07      	ldr	r3, [pc, #28]	@ (8018cb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018c9a:	62ab      	str	r3, [r5, #40]	@ 0x28
 8018c9c:	bd38      	pop	{r3, r4, r5, pc}
 8018c9e:	bf00      	nop
 8018ca0:	20016c5c 	.word	0x20016c5c
 8018ca4:	20000000 	.word	0x20000000
 8018ca8:	08015927 	.word	0x08015927
 8018cac:	20000098 	.word	0x20000098
 8018cb0:	20016c60 	.word	0x20016c60
 8018cb4:	08015925 	.word	0x08015925
 8018cb8:	2000009c 	.word	0x2000009c

08018cbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018cbc:	b538      	push	{r3, r4, r5, lr}
 8018cbe:	4c15      	ldr	r4, [pc, #84]	@ (8018d14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018cc0:	4605      	mov	r5, r0
 8018cc2:	7823      	ldrb	r3, [r4, #0]
 8018cc4:	f3bf 8f5b 	dmb	ish
 8018cc8:	07da      	lsls	r2, r3, #31
 8018cca:	d40b      	bmi.n	8018ce4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018ccc:	4620      	mov	r0, r4
 8018cce:	f008 f919 	bl	8020f04 <__cxa_guard_acquire>
 8018cd2:	b138      	cbz	r0, 8018ce4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018cd4:	4620      	mov	r0, r4
 8018cd6:	f008 f921 	bl	8020f1c <__cxa_guard_release>
 8018cda:	4a0f      	ldr	r2, [pc, #60]	@ (8018d18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018cdc:	490f      	ldr	r1, [pc, #60]	@ (8018d1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018cde:	4810      	ldr	r0, [pc, #64]	@ (8018d20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018ce0:	f008 f909 	bl	8020ef6 <__aeabi_atexit>
 8018ce4:	4c0f      	ldr	r4, [pc, #60]	@ (8018d24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018ce6:	7823      	ldrb	r3, [r4, #0]
 8018ce8:	f3bf 8f5b 	dmb	ish
 8018cec:	07db      	lsls	r3, r3, #31
 8018cee:	d40b      	bmi.n	8018d08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018cf0:	4620      	mov	r0, r4
 8018cf2:	f008 f907 	bl	8020f04 <__cxa_guard_acquire>
 8018cf6:	b138      	cbz	r0, 8018d08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018cf8:	4620      	mov	r0, r4
 8018cfa:	f008 f90f 	bl	8020f1c <__cxa_guard_release>
 8018cfe:	4a06      	ldr	r2, [pc, #24]	@ (8018d18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018d00:	4909      	ldr	r1, [pc, #36]	@ (8018d28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018d02:	480a      	ldr	r0, [pc, #40]	@ (8018d2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018d04:	f008 f8f7 	bl	8020ef6 <__aeabi_atexit>
 8018d08:	4b05      	ldr	r3, [pc, #20]	@ (8018d20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018d0a:	61eb      	str	r3, [r5, #28]
 8018d0c:	4b07      	ldr	r3, [pc, #28]	@ (8018d2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018d0e:	622b      	str	r3, [r5, #32]
 8018d10:	bd38      	pop	{r3, r4, r5, pc}
 8018d12:	bf00      	nop
 8018d14:	20016c34 	.word	0x20016c34
 8018d18:	20000000 	.word	0x20000000
 8018d1c:	0801592b 	.word	0x0801592b
 8018d20:	20000070 	.word	0x20000070
 8018d24:	20016c38 	.word	0x20016c38
 8018d28:	08015929 	.word	0x08015929
 8018d2c:	20000074 	.word	0x20000074

08018d30 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018d30:	b510      	push	{r4, lr}
 8018d32:	4604      	mov	r4, r0
 8018d34:	f7ff ff88 	bl	8018c48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018d38:	4620      	mov	r0, r4
 8018d3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018d3e:	f7ff bfbd 	b.w	8018cbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018d44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018d44:	b538      	push	{r3, r4, r5, lr}
 8018d46:	4c15      	ldr	r4, [pc, #84]	@ (8018d9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018d48:	4605      	mov	r5, r0
 8018d4a:	7823      	ldrb	r3, [r4, #0]
 8018d4c:	f3bf 8f5b 	dmb	ish
 8018d50:	07da      	lsls	r2, r3, #31
 8018d52:	d40b      	bmi.n	8018d6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018d54:	4620      	mov	r0, r4
 8018d56:	f008 f8d5 	bl	8020f04 <__cxa_guard_acquire>
 8018d5a:	b138      	cbz	r0, 8018d6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018d5c:	4620      	mov	r0, r4
 8018d5e:	f008 f8dd 	bl	8020f1c <__cxa_guard_release>
 8018d62:	4a0f      	ldr	r2, [pc, #60]	@ (8018da0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018d64:	490f      	ldr	r1, [pc, #60]	@ (8018da4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018d66:	4810      	ldr	r0, [pc, #64]	@ (8018da8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018d68:	f008 f8c5 	bl	8020ef6 <__aeabi_atexit>
 8018d6c:	4c0f      	ldr	r4, [pc, #60]	@ (8018dac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8018d6e:	7823      	ldrb	r3, [r4, #0]
 8018d70:	f3bf 8f5b 	dmb	ish
 8018d74:	07db      	lsls	r3, r3, #31
 8018d76:	d40b      	bmi.n	8018d90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018d78:	4620      	mov	r0, r4
 8018d7a:	f008 f8c3 	bl	8020f04 <__cxa_guard_acquire>
 8018d7e:	b138      	cbz	r0, 8018d90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018d80:	4620      	mov	r0, r4
 8018d82:	f008 f8cb 	bl	8020f1c <__cxa_guard_release>
 8018d86:	4a06      	ldr	r2, [pc, #24]	@ (8018da0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018d88:	4909      	ldr	r1, [pc, #36]	@ (8018db0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018d8a:	480a      	ldr	r0, [pc, #40]	@ (8018db4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018d8c:	f008 f8b3 	bl	8020ef6 <__aeabi_atexit>
 8018d90:	4b05      	ldr	r3, [pc, #20]	@ (8018da8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018d92:	636b      	str	r3, [r5, #52]	@ 0x34
 8018d94:	4b07      	ldr	r3, [pc, #28]	@ (8018db4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018d96:	63ab      	str	r3, [r5, #56]	@ 0x38
 8018d98:	bd38      	pop	{r3, r4, r5, pc}
 8018d9a:	bf00      	nop
 8018d9c:	20016c6c 	.word	0x20016c6c
 8018da0:	20000000 	.word	0x20000000
 8018da4:	0801591f 	.word	0x0801591f
 8018da8:	200000a8 	.word	0x200000a8
 8018dac:	20016c70 	.word	0x20016c70
 8018db0:	0801591d 	.word	0x0801591d
 8018db4:	200000ac 	.word	0x200000ac

08018db8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018db8:	b538      	push	{r3, r4, r5, lr}
 8018dba:	4c15      	ldr	r4, [pc, #84]	@ (8018e10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018dbc:	4605      	mov	r5, r0
 8018dbe:	7823      	ldrb	r3, [r4, #0]
 8018dc0:	f3bf 8f5b 	dmb	ish
 8018dc4:	07da      	lsls	r2, r3, #31
 8018dc6:	d40b      	bmi.n	8018de0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018dc8:	4620      	mov	r0, r4
 8018dca:	f008 f89b 	bl	8020f04 <__cxa_guard_acquire>
 8018dce:	b138      	cbz	r0, 8018de0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018dd0:	4620      	mov	r0, r4
 8018dd2:	f008 f8a3 	bl	8020f1c <__cxa_guard_release>
 8018dd6:	4a0f      	ldr	r2, [pc, #60]	@ (8018e14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018dd8:	490f      	ldr	r1, [pc, #60]	@ (8018e18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018dda:	4810      	ldr	r0, [pc, #64]	@ (8018e1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018ddc:	f008 f88b 	bl	8020ef6 <__aeabi_atexit>
 8018de0:	4c0f      	ldr	r4, [pc, #60]	@ (8018e20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018de2:	7823      	ldrb	r3, [r4, #0]
 8018de4:	f3bf 8f5b 	dmb	ish
 8018de8:	07db      	lsls	r3, r3, #31
 8018dea:	d40b      	bmi.n	8018e04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018dec:	4620      	mov	r0, r4
 8018dee:	f008 f889 	bl	8020f04 <__cxa_guard_acquire>
 8018df2:	b138      	cbz	r0, 8018e04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018df4:	4620      	mov	r0, r4
 8018df6:	f008 f891 	bl	8020f1c <__cxa_guard_release>
 8018dfa:	4a06      	ldr	r2, [pc, #24]	@ (8018e14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018dfc:	4909      	ldr	r1, [pc, #36]	@ (8018e24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8018dfe:	480a      	ldr	r0, [pc, #40]	@ (8018e28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018e00:	f008 f879 	bl	8020ef6 <__aeabi_atexit>
 8018e04:	4b05      	ldr	r3, [pc, #20]	@ (8018e1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018e06:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8018e08:	4b07      	ldr	r3, [pc, #28]	@ (8018e28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018e0a:	632b      	str	r3, [r5, #48]	@ 0x30
 8018e0c:	bd38      	pop	{r3, r4, r5, pc}
 8018e0e:	bf00      	nop
 8018e10:	20016c3c 	.word	0x20016c3c
 8018e14:	20000000 	.word	0x20000000
 8018e18:	08015923 	.word	0x08015923
 8018e1c:	20000078 	.word	0x20000078
 8018e20:	20016c40 	.word	0x20016c40
 8018e24:	08015921 	.word	0x08015921
 8018e28:	2000007c 	.word	0x2000007c

08018e2c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8018e2c:	b510      	push	{r4, lr}
 8018e2e:	4604      	mov	r4, r0
 8018e30:	f7ff ff88 	bl	8018d44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018e34:	4620      	mov	r0, r4
 8018e36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018e3a:	f7ff bfbd 	b.w	8018db8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018e40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018e40:	b538      	push	{r3, r4, r5, lr}
 8018e42:	4c15      	ldr	r4, [pc, #84]	@ (8018e98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018e44:	4605      	mov	r5, r0
 8018e46:	7823      	ldrb	r3, [r4, #0]
 8018e48:	f3bf 8f5b 	dmb	ish
 8018e4c:	07da      	lsls	r2, r3, #31
 8018e4e:	d40b      	bmi.n	8018e68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018e50:	4620      	mov	r0, r4
 8018e52:	f008 f857 	bl	8020f04 <__cxa_guard_acquire>
 8018e56:	b138      	cbz	r0, 8018e68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018e58:	4620      	mov	r0, r4
 8018e5a:	f008 f85f 	bl	8020f1c <__cxa_guard_release>
 8018e5e:	4a0f      	ldr	r2, [pc, #60]	@ (8018e9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018e60:	490f      	ldr	r1, [pc, #60]	@ (8018ea0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018e62:	4810      	ldr	r0, [pc, #64]	@ (8018ea4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018e64:	f008 f847 	bl	8020ef6 <__aeabi_atexit>
 8018e68:	4c0f      	ldr	r4, [pc, #60]	@ (8018ea8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8018e6a:	7823      	ldrb	r3, [r4, #0]
 8018e6c:	f3bf 8f5b 	dmb	ish
 8018e70:	07db      	lsls	r3, r3, #31
 8018e72:	d40b      	bmi.n	8018e8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018e74:	4620      	mov	r0, r4
 8018e76:	f008 f845 	bl	8020f04 <__cxa_guard_acquire>
 8018e7a:	b138      	cbz	r0, 8018e8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018e7c:	4620      	mov	r0, r4
 8018e7e:	f008 f84d 	bl	8020f1c <__cxa_guard_release>
 8018e82:	4a06      	ldr	r2, [pc, #24]	@ (8018e9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018e84:	4909      	ldr	r1, [pc, #36]	@ (8018eac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018e86:	480a      	ldr	r0, [pc, #40]	@ (8018eb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018e88:	f008 f835 	bl	8020ef6 <__aeabi_atexit>
 8018e8c:	4b05      	ldr	r3, [pc, #20]	@ (8018ea4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018e8e:	656b      	str	r3, [r5, #84]	@ 0x54
 8018e90:	4b07      	ldr	r3, [pc, #28]	@ (8018eb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018e92:	65ab      	str	r3, [r5, #88]	@ 0x58
 8018e94:	bd38      	pop	{r3, r4, r5, pc}
 8018e96:	bf00      	nop
 8018e98:	20016c74 	.word	0x20016c74
 8018e9c:	20000000 	.word	0x20000000
 8018ea0:	0801590f 	.word	0x0801590f
 8018ea4:	200000b0 	.word	0x200000b0
 8018ea8:	20016c78 	.word	0x20016c78
 8018eac:	0801590d 	.word	0x0801590d
 8018eb0:	200000b4 	.word	0x200000b4

08018eb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018eb4:	b538      	push	{r3, r4, r5, lr}
 8018eb6:	4c15      	ldr	r4, [pc, #84]	@ (8018f0c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018eb8:	4605      	mov	r5, r0
 8018eba:	7823      	ldrb	r3, [r4, #0]
 8018ebc:	f3bf 8f5b 	dmb	ish
 8018ec0:	07da      	lsls	r2, r3, #31
 8018ec2:	d40b      	bmi.n	8018edc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018ec4:	4620      	mov	r0, r4
 8018ec6:	f008 f81d 	bl	8020f04 <__cxa_guard_acquire>
 8018eca:	b138      	cbz	r0, 8018edc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018ecc:	4620      	mov	r0, r4
 8018ece:	f008 f825 	bl	8020f1c <__cxa_guard_release>
 8018ed2:	4a0f      	ldr	r2, [pc, #60]	@ (8018f10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018ed4:	490f      	ldr	r1, [pc, #60]	@ (8018f14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018ed6:	4810      	ldr	r0, [pc, #64]	@ (8018f18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018ed8:	f008 f80d 	bl	8020ef6 <__aeabi_atexit>
 8018edc:	4c0f      	ldr	r4, [pc, #60]	@ (8018f1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8018ede:	7823      	ldrb	r3, [r4, #0]
 8018ee0:	f3bf 8f5b 	dmb	ish
 8018ee4:	07db      	lsls	r3, r3, #31
 8018ee6:	d40b      	bmi.n	8018f00 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018ee8:	4620      	mov	r0, r4
 8018eea:	f008 f80b 	bl	8020f04 <__cxa_guard_acquire>
 8018eee:	b138      	cbz	r0, 8018f00 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018ef0:	4620      	mov	r0, r4
 8018ef2:	f008 f813 	bl	8020f1c <__cxa_guard_release>
 8018ef6:	4a06      	ldr	r2, [pc, #24]	@ (8018f10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018ef8:	4909      	ldr	r1, [pc, #36]	@ (8018f20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8018efa:	480a      	ldr	r0, [pc, #40]	@ (8018f24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018efc:	f007 fffb 	bl	8020ef6 <__aeabi_atexit>
 8018f00:	4b05      	ldr	r3, [pc, #20]	@ (8018f18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018f02:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8018f04:	4b07      	ldr	r3, [pc, #28]	@ (8018f24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018f06:	652b      	str	r3, [r5, #80]	@ 0x50
 8018f08:	bd38      	pop	{r3, r4, r5, pc}
 8018f0a:	bf00      	nop
 8018f0c:	20016c7c 	.word	0x20016c7c
 8018f10:	20000000 	.word	0x20000000
 8018f14:	08015913 	.word	0x08015913
 8018f18:	200000b8 	.word	0x200000b8
 8018f1c:	20016c80 	.word	0x20016c80
 8018f20:	08015911 	.word	0x08015911
 8018f24:	200000bc 	.word	0x200000bc

08018f28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8018f28:	b538      	push	{r3, r4, r5, lr}
 8018f2a:	4c15      	ldr	r4, [pc, #84]	@ (8018f80 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8018f2c:	4605      	mov	r5, r0
 8018f2e:	7823      	ldrb	r3, [r4, #0]
 8018f30:	f3bf 8f5b 	dmb	ish
 8018f34:	07da      	lsls	r2, r3, #31
 8018f36:	d40b      	bmi.n	8018f50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018f38:	4620      	mov	r0, r4
 8018f3a:	f007 ffe3 	bl	8020f04 <__cxa_guard_acquire>
 8018f3e:	b138      	cbz	r0, 8018f50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018f40:	4620      	mov	r0, r4
 8018f42:	f007 ffeb 	bl	8020f1c <__cxa_guard_release>
 8018f46:	4a0f      	ldr	r2, [pc, #60]	@ (8018f84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018f48:	490f      	ldr	r1, [pc, #60]	@ (8018f88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8018f4a:	4810      	ldr	r0, [pc, #64]	@ (8018f8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018f4c:	f007 ffd3 	bl	8020ef6 <__aeabi_atexit>
 8018f50:	4c0f      	ldr	r4, [pc, #60]	@ (8018f90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8018f52:	7823      	ldrb	r3, [r4, #0]
 8018f54:	f3bf 8f5b 	dmb	ish
 8018f58:	07db      	lsls	r3, r3, #31
 8018f5a:	d40b      	bmi.n	8018f74 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018f5c:	4620      	mov	r0, r4
 8018f5e:	f007 ffd1 	bl	8020f04 <__cxa_guard_acquire>
 8018f62:	b138      	cbz	r0, 8018f74 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018f64:	4620      	mov	r0, r4
 8018f66:	f007 ffd9 	bl	8020f1c <__cxa_guard_release>
 8018f6a:	4a06      	ldr	r2, [pc, #24]	@ (8018f84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018f6c:	4909      	ldr	r1, [pc, #36]	@ (8018f94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8018f6e:	480a      	ldr	r0, [pc, #40]	@ (8018f98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018f70:	f007 ffc1 	bl	8020ef6 <__aeabi_atexit>
 8018f74:	4b05      	ldr	r3, [pc, #20]	@ (8018f8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018f76:	646b      	str	r3, [r5, #68]	@ 0x44
 8018f78:	4b07      	ldr	r3, [pc, #28]	@ (8018f98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018f7a:	64ab      	str	r3, [r5, #72]	@ 0x48
 8018f7c:	bd38      	pop	{r3, r4, r5, pc}
 8018f7e:	bf00      	nop
 8018f80:	20016c44 	.word	0x20016c44
 8018f84:	20000000 	.word	0x20000000
 8018f88:	08015917 	.word	0x08015917
 8018f8c:	20000080 	.word	0x20000080
 8018f90:	20016c48 	.word	0x20016c48
 8018f94:	08015915 	.word	0x08015915
 8018f98:	20000084 	.word	0x20000084

08018f9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8018f9c:	b538      	push	{r3, r4, r5, lr}
 8018f9e:	4c15      	ldr	r4, [pc, #84]	@ (8018ff4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8018fa0:	4605      	mov	r5, r0
 8018fa2:	7823      	ldrb	r3, [r4, #0]
 8018fa4:	f3bf 8f5b 	dmb	ish
 8018fa8:	07da      	lsls	r2, r3, #31
 8018faa:	d40b      	bmi.n	8018fc4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018fac:	4620      	mov	r0, r4
 8018fae:	f007 ffa9 	bl	8020f04 <__cxa_guard_acquire>
 8018fb2:	b138      	cbz	r0, 8018fc4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018fb4:	4620      	mov	r0, r4
 8018fb6:	f007 ffb1 	bl	8020f1c <__cxa_guard_release>
 8018fba:	4a0f      	ldr	r2, [pc, #60]	@ (8018ff8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018fbc:	490f      	ldr	r1, [pc, #60]	@ (8018ffc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8018fbe:	4810      	ldr	r0, [pc, #64]	@ (8019000 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018fc0:	f007 ff99 	bl	8020ef6 <__aeabi_atexit>
 8018fc4:	4c0f      	ldr	r4, [pc, #60]	@ (8019004 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8018fc6:	7823      	ldrb	r3, [r4, #0]
 8018fc8:	f3bf 8f5b 	dmb	ish
 8018fcc:	07db      	lsls	r3, r3, #31
 8018fce:	d40b      	bmi.n	8018fe8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018fd0:	4620      	mov	r0, r4
 8018fd2:	f007 ff97 	bl	8020f04 <__cxa_guard_acquire>
 8018fd6:	b138      	cbz	r0, 8018fe8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018fd8:	4620      	mov	r0, r4
 8018fda:	f007 ff9f 	bl	8020f1c <__cxa_guard_release>
 8018fde:	4a06      	ldr	r2, [pc, #24]	@ (8018ff8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018fe0:	4909      	ldr	r1, [pc, #36]	@ (8019008 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8018fe2:	480a      	ldr	r0, [pc, #40]	@ (801900c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018fe4:	f007 ff87 	bl	8020ef6 <__aeabi_atexit>
 8018fe8:	4b05      	ldr	r3, [pc, #20]	@ (8019000 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018fea:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8018fec:	4b07      	ldr	r3, [pc, #28]	@ (801900c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018fee:	642b      	str	r3, [r5, #64]	@ 0x40
 8018ff0:	bd38      	pop	{r3, r4, r5, pc}
 8018ff2:	bf00      	nop
 8018ff4:	20016c64 	.word	0x20016c64
 8018ff8:	20000000 	.word	0x20000000
 8018ffc:	0801591b 	.word	0x0801591b
 8019000:	200000a0 	.word	0x200000a0
 8019004:	20016c68 	.word	0x20016c68
 8019008:	08015919 	.word	0x08015919
 801900c:	200000a4 	.word	0x200000a4

08019010 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019010:	b510      	push	{r4, lr}
 8019012:	4604      	mov	r4, r0
 8019014:	f7ff ff14 	bl	8018e40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8019018:	4620      	mov	r0, r4
 801901a:	f7ff ff85 	bl	8018f28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801901e:	4620      	mov	r0, r4
 8019020:	f7ff ff48 	bl	8018eb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8019024:	4620      	mov	r0, r4
 8019026:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801902a:	f7ff bfb7 	b.w	8018f9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08019030 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8019030:	b538      	push	{r3, r4, r5, lr}
 8019032:	4c15      	ldr	r4, [pc, #84]	@ (8019088 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8019034:	4605      	mov	r5, r0
 8019036:	7823      	ldrb	r3, [r4, #0]
 8019038:	f3bf 8f5b 	dmb	ish
 801903c:	07da      	lsls	r2, r3, #31
 801903e:	d40b      	bmi.n	8019058 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019040:	4620      	mov	r0, r4
 8019042:	f007 ff5f 	bl	8020f04 <__cxa_guard_acquire>
 8019046:	b138      	cbz	r0, 8019058 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019048:	4620      	mov	r0, r4
 801904a:	f007 ff67 	bl	8020f1c <__cxa_guard_release>
 801904e:	4a0f      	ldr	r2, [pc, #60]	@ (801908c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019050:	490f      	ldr	r1, [pc, #60]	@ (8019090 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8019052:	4810      	ldr	r0, [pc, #64]	@ (8019094 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019054:	f007 ff4f 	bl	8020ef6 <__aeabi_atexit>
 8019058:	4c0f      	ldr	r4, [pc, #60]	@ (8019098 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801905a:	7823      	ldrb	r3, [r4, #0]
 801905c:	f3bf 8f5b 	dmb	ish
 8019060:	07db      	lsls	r3, r3, #31
 8019062:	d40b      	bmi.n	801907c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019064:	4620      	mov	r0, r4
 8019066:	f007 ff4d 	bl	8020f04 <__cxa_guard_acquire>
 801906a:	b138      	cbz	r0, 801907c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801906c:	4620      	mov	r0, r4
 801906e:	f007 ff55 	bl	8020f1c <__cxa_guard_release>
 8019072:	4a06      	ldr	r2, [pc, #24]	@ (801908c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019074:	4909      	ldr	r1, [pc, #36]	@ (801909c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8019076:	480a      	ldr	r0, [pc, #40]	@ (80190a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019078:	f007 ff3d 	bl	8020ef6 <__aeabi_atexit>
 801907c:	4b05      	ldr	r3, [pc, #20]	@ (8019094 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801907e:	666b      	str	r3, [r5, #100]	@ 0x64
 8019080:	4b07      	ldr	r3, [pc, #28]	@ (80190a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019082:	66ab      	str	r3, [r5, #104]	@ 0x68
 8019084:	bd38      	pop	{r3, r4, r5, pc}
 8019086:	bf00      	nop
 8019088:	20016c4c 	.word	0x20016c4c
 801908c:	20000000 	.word	0x20000000
 8019090:	08015907 	.word	0x08015907
 8019094:	20000088 	.word	0x20000088
 8019098:	20016c50 	.word	0x20016c50
 801909c:	08015905 	.word	0x08015905
 80190a0:	2000008c 	.word	0x2000008c

080190a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80190a4:	b538      	push	{r3, r4, r5, lr}
 80190a6:	4c15      	ldr	r4, [pc, #84]	@ (80190fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80190a8:	4605      	mov	r5, r0
 80190aa:	7823      	ldrb	r3, [r4, #0]
 80190ac:	f3bf 8f5b 	dmb	ish
 80190b0:	07da      	lsls	r2, r3, #31
 80190b2:	d40b      	bmi.n	80190cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80190b4:	4620      	mov	r0, r4
 80190b6:	f007 ff25 	bl	8020f04 <__cxa_guard_acquire>
 80190ba:	b138      	cbz	r0, 80190cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80190bc:	4620      	mov	r0, r4
 80190be:	f007 ff2d 	bl	8020f1c <__cxa_guard_release>
 80190c2:	4a0f      	ldr	r2, [pc, #60]	@ (8019100 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80190c4:	490f      	ldr	r1, [pc, #60]	@ (8019104 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80190c6:	4810      	ldr	r0, [pc, #64]	@ (8019108 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80190c8:	f007 ff15 	bl	8020ef6 <__aeabi_atexit>
 80190cc:	4c0f      	ldr	r4, [pc, #60]	@ (801910c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80190ce:	7823      	ldrb	r3, [r4, #0]
 80190d0:	f3bf 8f5b 	dmb	ish
 80190d4:	07db      	lsls	r3, r3, #31
 80190d6:	d40b      	bmi.n	80190f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80190d8:	4620      	mov	r0, r4
 80190da:	f007 ff13 	bl	8020f04 <__cxa_guard_acquire>
 80190de:	b138      	cbz	r0, 80190f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80190e0:	4620      	mov	r0, r4
 80190e2:	f007 ff1b 	bl	8020f1c <__cxa_guard_release>
 80190e6:	4a06      	ldr	r2, [pc, #24]	@ (8019100 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80190e8:	4909      	ldr	r1, [pc, #36]	@ (8019110 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80190ea:	480a      	ldr	r0, [pc, #40]	@ (8019114 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80190ec:	f007 ff03 	bl	8020ef6 <__aeabi_atexit>
 80190f0:	4b05      	ldr	r3, [pc, #20]	@ (8019108 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80190f2:	65eb      	str	r3, [r5, #92]	@ 0x5c
 80190f4:	4b07      	ldr	r3, [pc, #28]	@ (8019114 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80190f6:	662b      	str	r3, [r5, #96]	@ 0x60
 80190f8:	bd38      	pop	{r3, r4, r5, pc}
 80190fa:	bf00      	nop
 80190fc:	20016c24 	.word	0x20016c24
 8019100:	20000000 	.word	0x20000000
 8019104:	0801590b 	.word	0x0801590b
 8019108:	20000060 	.word	0x20000060
 801910c:	20016c28 	.word	0x20016c28
 8019110:	08015909 	.word	0x08015909
 8019114:	20000064 	.word	0x20000064

08019118 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8019118:	b510      	push	{r4, lr}
 801911a:	4604      	mov	r4, r0
 801911c:	f7ff ff88 	bl	8019030 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019120:	4620      	mov	r0, r4
 8019122:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019126:	f7ff bfbd 	b.w	80190a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801912c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801912c:	b538      	push	{r3, r4, r5, lr}
 801912e:	4c15      	ldr	r4, [pc, #84]	@ (8019184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019130:	4605      	mov	r5, r0
 8019132:	7823      	ldrb	r3, [r4, #0]
 8019134:	f3bf 8f5b 	dmb	ish
 8019138:	07da      	lsls	r2, r3, #31
 801913a:	d40b      	bmi.n	8019154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801913c:	4620      	mov	r0, r4
 801913e:	f007 fee1 	bl	8020f04 <__cxa_guard_acquire>
 8019142:	b138      	cbz	r0, 8019154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019144:	4620      	mov	r0, r4
 8019146:	f007 fee9 	bl	8020f1c <__cxa_guard_release>
 801914a:	4a0f      	ldr	r2, [pc, #60]	@ (8019188 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801914c:	490f      	ldr	r1, [pc, #60]	@ (801918c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801914e:	4810      	ldr	r0, [pc, #64]	@ (8019190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019150:	f007 fed1 	bl	8020ef6 <__aeabi_atexit>
 8019154:	4c0f      	ldr	r4, [pc, #60]	@ (8019194 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8019156:	7823      	ldrb	r3, [r4, #0]
 8019158:	f3bf 8f5b 	dmb	ish
 801915c:	07db      	lsls	r3, r3, #31
 801915e:	d40b      	bmi.n	8019178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019160:	4620      	mov	r0, r4
 8019162:	f007 fecf 	bl	8020f04 <__cxa_guard_acquire>
 8019166:	b138      	cbz	r0, 8019178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019168:	4620      	mov	r0, r4
 801916a:	f007 fed7 	bl	8020f1c <__cxa_guard_release>
 801916e:	4a06      	ldr	r2, [pc, #24]	@ (8019188 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019170:	4909      	ldr	r1, [pc, #36]	@ (8019198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8019172:	480a      	ldr	r0, [pc, #40]	@ (801919c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019174:	f007 febf 	bl	8020ef6 <__aeabi_atexit>
 8019178:	4b05      	ldr	r3, [pc, #20]	@ (8019190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801917a:	676b      	str	r3, [r5, #116]	@ 0x74
 801917c:	4b07      	ldr	r3, [pc, #28]	@ (801919c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801917e:	67ab      	str	r3, [r5, #120]	@ 0x78
 8019180:	bd38      	pop	{r3, r4, r5, pc}
 8019182:	bf00      	nop
 8019184:	20016c1c 	.word	0x20016c1c
 8019188:	20000000 	.word	0x20000000
 801918c:	080158ff 	.word	0x080158ff
 8019190:	20000058 	.word	0x20000058
 8019194:	20016c20 	.word	0x20016c20
 8019198:	080158fd 	.word	0x080158fd
 801919c:	2000005c 	.word	0x2000005c

080191a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80191a0:	b538      	push	{r3, r4, r5, lr}
 80191a2:	4c15      	ldr	r4, [pc, #84]	@ (80191f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80191a4:	4605      	mov	r5, r0
 80191a6:	7823      	ldrb	r3, [r4, #0]
 80191a8:	f3bf 8f5b 	dmb	ish
 80191ac:	07da      	lsls	r2, r3, #31
 80191ae:	d40b      	bmi.n	80191c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80191b0:	4620      	mov	r0, r4
 80191b2:	f007 fea7 	bl	8020f04 <__cxa_guard_acquire>
 80191b6:	b138      	cbz	r0, 80191c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80191b8:	4620      	mov	r0, r4
 80191ba:	f007 feaf 	bl	8020f1c <__cxa_guard_release>
 80191be:	4a0f      	ldr	r2, [pc, #60]	@ (80191fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80191c0:	490f      	ldr	r1, [pc, #60]	@ (8019200 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80191c2:	4810      	ldr	r0, [pc, #64]	@ (8019204 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80191c4:	f007 fe97 	bl	8020ef6 <__aeabi_atexit>
 80191c8:	4c0f      	ldr	r4, [pc, #60]	@ (8019208 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80191ca:	7823      	ldrb	r3, [r4, #0]
 80191cc:	f3bf 8f5b 	dmb	ish
 80191d0:	07db      	lsls	r3, r3, #31
 80191d2:	d40b      	bmi.n	80191ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80191d4:	4620      	mov	r0, r4
 80191d6:	f007 fe95 	bl	8020f04 <__cxa_guard_acquire>
 80191da:	b138      	cbz	r0, 80191ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80191dc:	4620      	mov	r0, r4
 80191de:	f007 fe9d 	bl	8020f1c <__cxa_guard_release>
 80191e2:	4a06      	ldr	r2, [pc, #24]	@ (80191fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80191e4:	4909      	ldr	r1, [pc, #36]	@ (801920c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80191e6:	480a      	ldr	r0, [pc, #40]	@ (8019210 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80191e8:	f007 fe85 	bl	8020ef6 <__aeabi_atexit>
 80191ec:	4b05      	ldr	r3, [pc, #20]	@ (8019204 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80191ee:	66eb      	str	r3, [r5, #108]	@ 0x6c
 80191f0:	4b07      	ldr	r3, [pc, #28]	@ (8019210 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80191f2:	672b      	str	r3, [r5, #112]	@ 0x70
 80191f4:	bd38      	pop	{r3, r4, r5, pc}
 80191f6:	bf00      	nop
 80191f8:	20016c14 	.word	0x20016c14
 80191fc:	20000000 	.word	0x20000000
 8019200:	08015903 	.word	0x08015903
 8019204:	20000050 	.word	0x20000050
 8019208:	20016c18 	.word	0x20016c18
 801920c:	08015901 	.word	0x08015901
 8019210:	20000054 	.word	0x20000054

08019214 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019214:	b510      	push	{r4, lr}
 8019216:	4604      	mov	r4, r0
 8019218:	f7ff ff88 	bl	801912c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801921c:	4620      	mov	r0, r4
 801921e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019222:	f7ff bfbd 	b.w	80191a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08019226 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8019226:	b510      	push	{r4, lr}
 8019228:	4604      	mov	r4, r0
 801922a:	f7ff fff3 	bl	8019214 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801922e:	4620      	mov	r0, r4
 8019230:	f7ff ff72 	bl	8019118 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019234:	4620      	mov	r0, r4
 8019236:	f7ff fdf9 	bl	8018e2c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801923a:	4620      	mov	r0, r4
 801923c:	f7ff fcfa 	bl	8018c34 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019240:	4620      	mov	r0, r4
 8019242:	f7ff fd75 	bl	8018d30 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8019246:	4620      	mov	r0, r4
 8019248:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801924c:	f7ff bee0 	b.w	8019010 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08019250 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8019250:	b538      	push	{r3, r4, r5, lr}
 8019252:	4c0b      	ldr	r4, [pc, #44]	@ (8019280 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8019254:	4605      	mov	r5, r0
 8019256:	7823      	ldrb	r3, [r4, #0]
 8019258:	f3bf 8f5b 	dmb	ish
 801925c:	07db      	lsls	r3, r3, #31
 801925e:	d40b      	bmi.n	8019278 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8019260:	4620      	mov	r0, r4
 8019262:	f007 fe4f 	bl	8020f04 <__cxa_guard_acquire>
 8019266:	b138      	cbz	r0, 8019278 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8019268:	4620      	mov	r0, r4
 801926a:	f007 fe57 	bl	8020f1c <__cxa_guard_release>
 801926e:	4a05      	ldr	r2, [pc, #20]	@ (8019284 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8019270:	4905      	ldr	r1, [pc, #20]	@ (8019288 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8019272:	4806      	ldr	r0, [pc, #24]	@ (801928c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8019274:	f007 fe3f 	bl	8020ef6 <__aeabi_atexit>
 8019278:	4b04      	ldr	r3, [pc, #16]	@ (801928c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801927a:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801927c:	bd38      	pop	{r3, r4, r5, pc}
 801927e:	bf00      	nop
 8019280:	20016c08 	.word	0x20016c08
 8019284:	20000000 	.word	0x20000000
 8019288:	080158fb 	.word	0x080158fb
 801928c:	20000048 	.word	0x20000048

08019290 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8019290:	b538      	push	{r3, r4, r5, lr}
 8019292:	4c0b      	ldr	r4, [pc, #44]	@ (80192c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8019294:	4605      	mov	r5, r0
 8019296:	7823      	ldrb	r3, [r4, #0]
 8019298:	f3bf 8f5b 	dmb	ish
 801929c:	07db      	lsls	r3, r3, #31
 801929e:	d40b      	bmi.n	80192b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80192a0:	4620      	mov	r0, r4
 80192a2:	f007 fe2f 	bl	8020f04 <__cxa_guard_acquire>
 80192a6:	b138      	cbz	r0, 80192b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80192a8:	4620      	mov	r0, r4
 80192aa:	f007 fe37 	bl	8020f1c <__cxa_guard_release>
 80192ae:	4a05      	ldr	r2, [pc, #20]	@ (80192c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80192b0:	4905      	ldr	r1, [pc, #20]	@ (80192c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80192b2:	4806      	ldr	r0, [pc, #24]	@ (80192cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80192b4:	f007 fe1f 	bl	8020ef6 <__aeabi_atexit>
 80192b8:	4b04      	ldr	r3, [pc, #16]	@ (80192cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80192ba:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 80192be:	bd38      	pop	{r3, r4, r5, pc}
 80192c0:	20016c0c 	.word	0x20016c0c
 80192c4:	20000000 	.word	0x20000000
 80192c8:	080158f9 	.word	0x080158f9
 80192cc:	2000004c 	.word	0x2000004c

080192d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80192d0:	b570      	push	{r4, r5, r6, lr}
 80192d2:	4d0d      	ldr	r5, [pc, #52]	@ (8019308 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80192d4:	4606      	mov	r6, r0
 80192d6:	4c0d      	ldr	r4, [pc, #52]	@ (801930c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80192d8:	782b      	ldrb	r3, [r5, #0]
 80192da:	f3bf 8f5b 	dmb	ish
 80192de:	f013 0f01 	tst.w	r3, #1
 80192e2:	d10d      	bne.n	8019300 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80192e4:	4628      	mov	r0, r5
 80192e6:	f007 fe0d 	bl	8020f04 <__cxa_guard_acquire>
 80192ea:	b148      	cbz	r0, 8019300 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80192ec:	4b08      	ldr	r3, [pc, #32]	@ (8019310 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80192ee:	4628      	mov	r0, r5
 80192f0:	6023      	str	r3, [r4, #0]
 80192f2:	f007 fe13 	bl	8020f1c <__cxa_guard_release>
 80192f6:	4a07      	ldr	r2, [pc, #28]	@ (8019314 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80192f8:	4620      	mov	r0, r4
 80192fa:	4907      	ldr	r1, [pc, #28]	@ (8019318 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80192fc:	f007 fdfb 	bl	8020ef6 <__aeabi_atexit>
 8019300:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 8019304:	bd70      	pop	{r4, r5, r6, pc}
 8019306:	bf00      	nop
 8019308:	20016c10 	.word	0x20016c10
 801930c:	20016c84 	.word	0x20016c84
 8019310:	08024ae0 	.word	0x08024ae0
 8019314:	20000000 	.word	0x20000000
 8019318:	080158f7 	.word	0x080158f7

0801931c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801931c:	b510      	push	{r4, lr}
 801931e:	4604      	mov	r4, r0
 8019320:	f7ff ff96 	bl	8019250 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8019324:	4620      	mov	r0, r4
 8019326:	f7ff ffb3 	bl	8019290 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801932a:	4620      	mov	r0, r4
 801932c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019330:	f7ff bfce 	b.w	80192d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08019334 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8019334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019338:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801933c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8019340:	2d00      	cmp	r5, #0
 8019342:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8019346:	fb05 4c0e 	mla	ip, r5, lr, r4
 801934a:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801934e:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8019352:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8019356:	eb02 0a0c 	add.w	sl, r2, ip
 801935a:	8808      	ldrh	r0, [r1, #0]
 801935c:	f2c0 80b0 	blt.w	80194c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019360:	45ab      	cmp	fp, r5
 8019362:	f340 80ad 	ble.w	80194c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019366:	2c00      	cmp	r4, #0
 8019368:	f2c0 80a8 	blt.w	80194bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801936c:	45a6      	cmp	lr, r4
 801936e:	f340 80a5 	ble.w	80194bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019372:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019376:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801937a:	1c62      	adds	r2, r4, #1
 801937c:	f100 80a3 	bmi.w	80194c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019380:	4596      	cmp	lr, r2
 8019382:	f340 80a0 	ble.w	80194c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019386:	f1b9 0f00 	cmp.w	r9, #0
 801938a:	f000 809c 	beq.w	80194c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801938e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019392:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019396:	3501      	adds	r5, #1
 8019398:	f100 8099 	bmi.w	80194ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801939c:	45ab      	cmp	fp, r5
 801939e:	f340 8096 	ble.w	80194ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80193a2:	2f00      	cmp	r7, #0
 80193a4:	f000 8093 	beq.w	80194ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80193a8:	2c00      	cmp	r4, #0
 80193aa:	f2c0 808e 	blt.w	80194ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80193ae:	45a6      	cmp	lr, r4
 80193b0:	f340 808b 	ble.w	80194ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80193b4:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80193b8:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80193bc:	3401      	adds	r4, #1
 80193be:	f100 8089 	bmi.w	80194d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80193c2:	45a6      	cmp	lr, r4
 80193c4:	f340 8086 	ble.w	80194d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80193c8:	f1b9 0f00 	cmp.w	r9, #0
 80193cc:	f000 8082 	beq.w	80194d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80193d0:	44d6      	add	lr, sl
 80193d2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80193d6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80193da:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80193de:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 80193e2:	fb19 fe07 	smulbb	lr, r9, r7
 80193e6:	f1c7 0210 	rsb	r2, r7, #16
 80193ea:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80193ee:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80193f2:	eba2 0209 	sub.w	r2, r2, r9
 80193f6:	ea44 0808 	orr.w	r8, r4, r8
 80193fa:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80193fe:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019402:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019406:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801940a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801940e:	ea44 0c0c 	orr.w	ip, r4, ip
 8019412:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019416:	fb04 f40c 	mul.w	r4, r4, ip
 801941a:	fb02 4808 	mla	r8, r2, r8, r4
 801941e:	041a      	lsls	r2, r3, #16
 8019420:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019424:	b2b4      	uxth	r4, r6
 8019426:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801942a:	43f6      	mvns	r6, r6
 801942c:	4313      	orrs	r3, r2
 801942e:	042a      	lsls	r2, r5, #16
 8019430:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019434:	b2f6      	uxtb	r6, r6
 8019436:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801943a:	fb0e 8303 	mla	r3, lr, r3, r8
 801943e:	432a      	orrs	r2, r5
 8019440:	fb07 3202 	mla	r2, r7, r2, r3
 8019444:	10c7      	asrs	r7, r0, #3
 8019446:	0d53      	lsrs	r3, r2, #21
 8019448:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801944c:	0952      	lsrs	r2, r2, #5
 801944e:	fb17 f706 	smulbb	r7, r7, r6
 8019452:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019456:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801945a:	431a      	orrs	r2, r3
 801945c:	b293      	uxth	r3, r2
 801945e:	1202      	asrs	r2, r0, #8
 8019460:	121d      	asrs	r5, r3, #8
 8019462:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019466:	00c0      	lsls	r0, r0, #3
 8019468:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801946c:	fb12 f206 	smulbb	r2, r2, r6
 8019470:	b2c0      	uxtb	r0, r0
 8019472:	fb05 2504 	mla	r5, r5, r4, r2
 8019476:	10da      	asrs	r2, r3, #3
 8019478:	fb10 f006 	smulbb	r0, r0, r6
 801947c:	00db      	lsls	r3, r3, #3
 801947e:	b2ad      	uxth	r5, r5
 8019480:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019484:	b2db      	uxtb	r3, r3
 8019486:	fb02 7204 	mla	r2, r2, r4, r7
 801948a:	fb03 0004 	mla	r0, r3, r4, r0
 801948e:	1c6b      	adds	r3, r5, #1
 8019490:	b292      	uxth	r2, r2
 8019492:	b280      	uxth	r0, r0
 8019494:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019498:	1c43      	adds	r3, r0, #1
 801949a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801949e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80194a2:	1c50      	adds	r0, r2, #1
 80194a4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80194a8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80194ac:	0952      	lsrs	r2, r2, #5
 80194ae:	432b      	orrs	r3, r5
 80194b0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80194b4:	4313      	orrs	r3, r2
 80194b6:	800b      	strh	r3, [r1, #0]
 80194b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80194bc:	4680      	mov	r8, r0
 80194be:	e75c      	b.n	801937a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80194c0:	4684      	mov	ip, r0
 80194c2:	4680      	mov	r8, r0
 80194c4:	e767      	b.n	8019396 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80194c6:	4684      	mov	ip, r0
 80194c8:	e765      	b.n	8019396 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80194ca:	4605      	mov	r5, r0
 80194cc:	e776      	b.n	80193bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80194ce:	4603      	mov	r3, r0
 80194d0:	4605      	mov	r5, r0
 80194d2:	e782      	b.n	80193da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80194d4:	4603      	mov	r3, r0
 80194d6:	e780      	b.n	80193da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080194d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80194d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194dc:	b099      	sub	sp, #100	@ 0x64
 80194de:	9215      	str	r2, [sp, #84]	@ 0x54
 80194e0:	9309      	str	r3, [sp, #36]	@ 0x24
 80194e2:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 80194e4:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 80194e8:	9016      	str	r0, [sp, #88]	@ 0x58
 80194ea:	930d      	str	r3, [sp, #52]	@ 0x34
 80194ec:	6850      	ldr	r0, [r2, #4]
 80194ee:	910c      	str	r1, [sp, #48]	@ 0x30
 80194f0:	6812      	ldr	r2, [r2, #0]
 80194f2:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 80194f6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 80194fa:	fb00 1303 	mla	r3, r0, r3, r1
 80194fe:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019502:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019504:	681b      	ldr	r3, [r3, #0]
 8019506:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019508:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801950a:	685e      	ldr	r6, [r3, #4]
 801950c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801950e:	3604      	adds	r6, #4
 8019510:	43db      	mvns	r3, r3
 8019512:	b2db      	uxtb	r3, r3
 8019514:	930a      	str	r3, [sp, #40]	@ 0x28
 8019516:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019518:	2b00      	cmp	r3, #0
 801951a:	dc03      	bgt.n	8019524 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801951c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801951e:	2b00      	cmp	r3, #0
 8019520:	f340 8225 	ble.w	801996e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019524:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019526:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801952a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801952e:	1e48      	subs	r0, r1, #1
 8019530:	1e57      	subs	r7, r2, #1
 8019532:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019534:	2b00      	cmp	r3, #0
 8019536:	f340 80e3 	ble.w	8019700 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801953a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801953e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019542:	d406      	bmi.n	8019552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019544:	4584      	cmp	ip, r0
 8019546:	da04      	bge.n	8019552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019548:	2b00      	cmp	r3, #0
 801954a:	db02      	blt.n	8019552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801954c:	42bb      	cmp	r3, r7
 801954e:	f2c0 80d8 	blt.w	8019702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019552:	f11c 0c01 	adds.w	ip, ip, #1
 8019556:	f100 80c9 	bmi.w	80196ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801955a:	4561      	cmp	r1, ip
 801955c:	f2c0 80c6 	blt.w	80196ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019560:	3301      	adds	r3, #1
 8019562:	f100 80c3 	bmi.w	80196ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019566:	429a      	cmp	r2, r3
 8019568:	f2c0 80c0 	blt.w	80196ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801956c:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8019570:	4647      	mov	r7, r8
 8019572:	f1bb 0f00 	cmp.w	fp, #0
 8019576:	f340 80e3 	ble.w	8019740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801957a:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801957c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019580:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019582:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019586:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801958a:	ea5f 422a 	movs.w	r2, sl, asr #16
 801958e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019592:	689b      	ldr	r3, [r3, #8]
 8019594:	f100 8121 	bmi.w	80197da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019598:	f103 39ff 	add.w	r9, r3, #4294967295
 801959c:	454a      	cmp	r2, r9
 801959e:	f280 811c 	bge.w	80197da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80195a2:	f1bc 0f00 	cmp.w	ip, #0
 80195a6:	f2c0 8118 	blt.w	80197da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80195aa:	f10e 39ff 	add.w	r9, lr, #4294967295
 80195ae:	45cc      	cmp	ip, r9
 80195b0:	f280 8113 	bge.w	80197da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80195b4:	b21b      	sxth	r3, r3
 80195b6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80195b8:	fb0c 2203 	mla	r2, ip, r3, r2
 80195bc:	eb04 0902 	add.w	r9, r4, r2
 80195c0:	5ca2      	ldrb	r2, [r4, r2]
 80195c2:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80195c6:	2800      	cmp	r0, #0
 80195c8:	f000 80fe 	beq.w	80197c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80195cc:	f899 2001 	ldrb.w	r2, [r9, #1]
 80195d0:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80195d4:	9211      	str	r2, [sp, #68]	@ 0x44
 80195d6:	b151      	cbz	r1, 80195ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80195d8:	eb09 0203 	add.w	r2, r9, r3
 80195dc:	f819 3003 	ldrb.w	r3, [r9, r3]
 80195e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80195e4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80195e6:	7853      	ldrb	r3, [r2, #1]
 80195e8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80195ec:	9312      	str	r3, [sp, #72]	@ 0x48
 80195ee:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80195f0:	fb10 f201 	smulbb	r2, r0, r1
 80195f4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80195f6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80195fa:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80195fe:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8019602:	10d2      	asrs	r2, r2, #3
 8019604:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019608:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801960c:	ea4c 0c03 	orr.w	ip, ip, r3
 8019610:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8019612:	041b      	lsls	r3, r3, #16
 8019614:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019618:	4323      	orrs	r3, r4
 801961a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801961c:	4353      	muls	r3, r2
 801961e:	fb09 330c 	mla	r3, r9, ip, r3
 8019622:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019626:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801962a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801962e:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019632:	f1c1 0c10 	rsb	ip, r1, #16
 8019636:	ebac 0c00 	sub.w	ip, ip, r0
 801963a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801963e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019642:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019646:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019648:	0418      	lsls	r0, r3, #16
 801964a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801964e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8019652:	4318      	orrs	r0, r3
 8019654:	fb02 c200 	mla	r2, r2, r0, ip
 8019658:	8838      	ldrh	r0, [r7, #0]
 801965a:	0d53      	lsrs	r3, r2, #21
 801965c:	0952      	lsrs	r2, r2, #5
 801965e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019662:	1201      	asrs	r1, r0, #8
 8019664:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019668:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801966c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019670:	00c0      	lsls	r0, r0, #3
 8019672:	431a      	orrs	r2, r3
 8019674:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8019678:	fb11 f104 	smulbb	r1, r1, r4
 801967c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8019680:	b292      	uxth	r2, r2
 8019682:	fb1e fe04 	smulbb	lr, lr, r4
 8019686:	b2c0      	uxtb	r0, r0
 8019688:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801968c:	fb10 f004 	smulbb	r0, r0, r4
 8019690:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019694:	fb0c 1c03 	mla	ip, ip, r3, r1
 8019698:	10d1      	asrs	r1, r2, #3
 801969a:	00d2      	lsls	r2, r2, #3
 801969c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80196a0:	fa1f fc8c 	uxth.w	ip, ip
 80196a4:	b2d2      	uxtb	r2, r2
 80196a6:	fb01 e103 	mla	r1, r1, r3, lr
 80196aa:	fb02 0303 	mla	r3, r2, r3, r0
 80196ae:	b289      	uxth	r1, r1
 80196b0:	b29a      	uxth	r2, r3
 80196b2:	f10c 0301 	add.w	r3, ip, #1
 80196b6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80196ba:	1c53      	adds	r3, r2, #1
 80196bc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80196c0:	1c4a      	adds	r2, r1, #1
 80196c2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80196c6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80196ca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80196ce:	0949      	lsrs	r1, r1, #5
 80196d0:	ea43 030c 	orr.w	r3, r3, ip
 80196d4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80196d8:	430b      	orrs	r3, r1
 80196da:	803b      	strh	r3, [r7, #0]
 80196dc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80196de:	3702      	adds	r7, #2
 80196e0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80196e4:	449a      	add	sl, r3
 80196e6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80196e8:	441d      	add	r5, r3
 80196ea:	e742      	b.n	8019572 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80196ec:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80196ee:	f108 0802 	add.w	r8, r8, #2
 80196f2:	449a      	add	sl, r3
 80196f4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80196f6:	441d      	add	r5, r3
 80196f8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80196fa:	3b01      	subs	r3, #1
 80196fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80196fe:	e718      	b.n	8019532 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019700:	d023      	beq.n	801974a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019702:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019704:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8019706:	3b01      	subs	r3, #1
 8019708:	fb00 a003 	mla	r0, r0, r3, sl
 801970c:	1400      	asrs	r0, r0, #16
 801970e:	f53f af2d 	bmi.w	801956c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019712:	3901      	subs	r1, #1
 8019714:	4288      	cmp	r0, r1
 8019716:	f6bf af29 	bge.w	801956c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801971a:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801971c:	fb01 5303 	mla	r3, r1, r3, r5
 8019720:	141b      	asrs	r3, r3, #16
 8019722:	f53f af23 	bmi.w	801956c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019726:	3a01      	subs	r2, #1
 8019728:	4293      	cmp	r3, r2
 801972a:	f6bf af1f 	bge.w	801956c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801972e:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8019732:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 8019736:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801973a:	f1be 0f00 	cmp.w	lr, #0
 801973e:	dc6c      	bgt.n	801981a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019740:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019742:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019746:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801974a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801974c:	2b00      	cmp	r3, #0
 801974e:	f340 810e 	ble.w	801996e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019752:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019756:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019758:	ee30 0a04 	vadd.f32	s0, s0, s8
 801975c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019760:	eef0 6a62 	vmov.f32	s13, s5
 8019764:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019768:	ee31 1a05 	vadd.f32	s2, s2, s10
 801976c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019770:	ee16 aa90 	vmov	sl, s13
 8019774:	eef0 6a43 	vmov.f32	s13, s6
 8019778:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801977c:	ee16 5a90 	vmov	r5, s13
 8019780:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019784:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019788:	ee77 2a62 	vsub.f32	s5, s14, s5
 801978c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019790:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019794:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019798:	ee12 2a90 	vmov	r2, s5
 801979c:	eef0 2a47 	vmov.f32	s5, s14
 80197a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80197a4:	ee13 2a10 	vmov	r2, s6
 80197a8:	9325      	str	r3, [sp, #148]	@ 0x94
 80197aa:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80197ac:	eeb0 3a67 	vmov.f32	s6, s15
 80197b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80197b4:	9326      	str	r3, [sp, #152]	@ 0x98
 80197b6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80197b8:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80197ba:	3b01      	subs	r3, #1
 80197bc:	930c      	str	r3, [sp, #48]	@ 0x30
 80197be:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80197c0:	bf08      	it	eq
 80197c2:	4613      	moveq	r3, r2
 80197c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80197c6:	e6a6      	b.n	8019516 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80197c8:	2900      	cmp	r1, #0
 80197ca:	f43f af10 	beq.w	80195ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80197ce:	f819 3003 	ldrb.w	r3, [r9, r3]
 80197d2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80197d6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80197d8:	e709      	b.n	80195ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80197da:	f112 0901 	adds.w	r9, r2, #1
 80197de:	f53f af7d 	bmi.w	80196dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80197e2:	454b      	cmp	r3, r9
 80197e4:	f6ff af7a 	blt.w	80196dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80197e8:	f11c 0901 	adds.w	r9, ip, #1
 80197ec:	f53f af76 	bmi.w	80196dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80197f0:	45ce      	cmp	lr, r9
 80197f2:	f6ff af73 	blt.w	80196dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80197f6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80197f8:	b21b      	sxth	r3, r3
 80197fa:	9202      	str	r2, [sp, #8]
 80197fc:	fa0f f28e 	sxth.w	r2, lr
 8019800:	9300      	str	r3, [sp, #0]
 8019802:	4633      	mov	r3, r6
 8019804:	9201      	str	r2, [sp, #4]
 8019806:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019808:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801980c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019810:	4639      	mov	r1, r7
 8019812:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8019814:	f7ff fd8e 	bl	8019334 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019818:	e760      	b.n	80196dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801981a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801981c:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019820:	1429      	asrs	r1, r5, #16
 8019822:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019824:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019828:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801982c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019830:	fb03 2101 	mla	r1, r3, r1, r2
 8019834:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019836:	440a      	add	r2, r1
 8019838:	5c61      	ldrb	r1, [r4, r1]
 801983a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801983e:	f1bc 0f00 	cmp.w	ip, #0
 8019842:	f000 808c 	beq.w	801995e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019846:	7857      	ldrb	r7, [r2, #1]
 8019848:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801984c:	9413      	str	r4, [sp, #76]	@ 0x4c
 801984e:	b140      	cbz	r0, 8019862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019850:	18d7      	adds	r7, r2, r3
 8019852:	5cd3      	ldrb	r3, [r2, r3]
 8019854:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019858:	9310      	str	r3, [sp, #64]	@ 0x40
 801985a:	787b      	ldrb	r3, [r7, #1]
 801985c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019860:	9314      	str	r3, [sp, #80]	@ 0x50
 8019862:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019864:	fb1c f200 	smulbb	r2, ip, r0
 8019868:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801986a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801986e:	041f      	lsls	r7, r3, #16
 8019870:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019874:	10d2      	asrs	r2, r2, #3
 8019876:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801987a:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801987e:	431f      	orrs	r7, r3
 8019880:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8019884:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019886:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8019888:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801988a:	041b      	lsls	r3, r3, #16
 801988c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019890:	ea43 030b 	orr.w	r3, r3, fp
 8019894:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019898:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801989c:	4353      	muls	r3, r2
 801989e:	fb04 3707 	mla	r7, r4, r7, r3
 80198a2:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 80198a6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80198a8:	ea43 0b01 	orr.w	fp, r3, r1
 80198ac:	f1c0 0110 	rsb	r1, r0, #16
 80198b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80198b2:	eba1 0c0c 	sub.w	ip, r1, ip
 80198b6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80198ba:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80198be:	fb0c 770b 	mla	r7, ip, fp, r7
 80198c2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80198c6:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 80198ca:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80198ce:	ea4c 0c0b 	orr.w	ip, ip, fp
 80198d2:	fb02 770c 	mla	r7, r2, ip, r7
 80198d6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80198d8:	0d79      	lsrs	r1, r7, #21
 80198da:	8812      	ldrh	r2, [r2, #0]
 80198dc:	097f      	lsrs	r7, r7, #5
 80198de:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80198e2:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80198e6:	430f      	orrs	r7, r1
 80198e8:	1211      	asrs	r1, r2, #8
 80198ea:	b2bb      	uxth	r3, r7
 80198ec:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80198f0:	10d7      	asrs	r7, r2, #3
 80198f2:	fb11 f104 	smulbb	r1, r1, r4
 80198f6:	1218      	asrs	r0, r3, #8
 80198f8:	00d2      	lsls	r2, r2, #3
 80198fa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80198fe:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019902:	fb17 f704 	smulbb	r7, r7, r4
 8019906:	b2d2      	uxtb	r2, r2
 8019908:	fb00 1009 	mla	r0, r0, r9, r1
 801990c:	10d9      	asrs	r1, r3, #3
 801990e:	fb12 f204 	smulbb	r2, r2, r4
 8019912:	00db      	lsls	r3, r3, #3
 8019914:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019918:	b280      	uxth	r0, r0
 801991a:	b2db      	uxtb	r3, r3
 801991c:	fb01 7109 	mla	r1, r1, r9, r7
 8019920:	fb03 2309 	mla	r3, r3, r9, r2
 8019924:	1c42      	adds	r2, r0, #1
 8019926:	b289      	uxth	r1, r1
 8019928:	b29b      	uxth	r3, r3
 801992a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801992e:	1c4f      	adds	r7, r1, #1
 8019930:	1c5a      	adds	r2, r3, #1
 8019932:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8019936:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801993a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801993e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019940:	0949      	lsrs	r1, r1, #5
 8019942:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019946:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801994a:	4310      	orrs	r0, r2
 801994c:	4308      	orrs	r0, r1
 801994e:	f823 0b02 	strh.w	r0, [r3], #2
 8019952:	930e      	str	r3, [sp, #56]	@ 0x38
 8019954:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019956:	449a      	add	sl, r3
 8019958:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801995a:	441d      	add	r5, r3
 801995c:	e6ed      	b.n	801973a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801995e:	2800      	cmp	r0, #0
 8019960:	f43f af7f 	beq.w	8019862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019964:	5cd3      	ldrb	r3, [r2, r3]
 8019966:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801996a:	9310      	str	r3, [sp, #64]	@ 0x40
 801996c:	e779      	b.n	8019862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801996e:	b019      	add	sp, #100	@ 0x64
 8019970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019974 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019974:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019978:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801997c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8019980:	f1b8 0f00 	cmp.w	r8, #0
 8019984:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 8019988:	fb08 470e 	mla	r7, r8, lr, r4
 801998c:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8019990:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8019994:	eb02 0907 	add.w	r9, r2, r7
 8019998:	8808      	ldrh	r0, [r1, #0]
 801999a:	db67      	blt.n	8019a6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801999c:	45c2      	cmp	sl, r8
 801999e:	dd65      	ble.n	8019a6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80199a0:	2c00      	cmp	r4, #0
 80199a2:	db61      	blt.n	8019a68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80199a4:	45a6      	cmp	lr, r4
 80199a6:	dd5f      	ble.n	8019a68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80199a8:	5dd2      	ldrb	r2, [r2, r7]
 80199aa:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80199ae:	1c62      	adds	r2, r4, #1
 80199b0:	d45f      	bmi.n	8019a72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80199b2:	4596      	cmp	lr, r2
 80199b4:	dd5d      	ble.n	8019a72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80199b6:	2d00      	cmp	r5, #0
 80199b8:	d05b      	beq.n	8019a72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80199ba:	f899 2001 	ldrb.w	r2, [r9, #1]
 80199be:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80199c2:	f118 0801 	adds.w	r8, r8, #1
 80199c6:	d458      	bmi.n	8019a7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80199c8:	45c2      	cmp	sl, r8
 80199ca:	dd56      	ble.n	8019a7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80199cc:	2e00      	cmp	r6, #0
 80199ce:	d054      	beq.n	8019a7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80199d0:	2c00      	cmp	r4, #0
 80199d2:	db50      	blt.n	8019a76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80199d4:	45a6      	cmp	lr, r4
 80199d6:	dd4e      	ble.n	8019a76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80199d8:	f819 200e 	ldrb.w	r2, [r9, lr]
 80199dc:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80199e0:	3401      	adds	r4, #1
 80199e2:	d407      	bmi.n	80199f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80199e4:	45a6      	cmp	lr, r4
 80199e6:	dd05      	ble.n	80199f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80199e8:	b125      	cbz	r5, 80199f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80199ea:	44ce      	add	lr, r9
 80199ec:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80199f0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80199f4:	fb15 f406 	smulbb	r4, r5, r6
 80199f8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80199fc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019a00:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019a04:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019a08:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8019a0c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8019a10:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8019a14:	ea43 0c0c 	orr.w	ip, r3, ip
 8019a18:	f1c6 0310 	rsb	r3, r6, #16
 8019a1c:	ea4e 0707 	orr.w	r7, lr, r7
 8019a20:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019a24:	1b5b      	subs	r3, r3, r5
 8019a26:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019a2a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019a2e:	437d      	muls	r5, r7
 8019a30:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019a34:	0403      	lsls	r3, r0, #16
 8019a36:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8019a3a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019a3e:	4318      	orrs	r0, r3
 8019a40:	0413      	lsls	r3, r2, #16
 8019a42:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019a46:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019a4a:	fb04 c000 	mla	r0, r4, r0, ip
 8019a4e:	4313      	orrs	r3, r2
 8019a50:	fb06 0003 	mla	r0, r6, r3, r0
 8019a54:	0d43      	lsrs	r3, r0, #21
 8019a56:	0940      	lsrs	r0, r0, #5
 8019a58:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019a5c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8019a60:	4318      	orrs	r0, r3
 8019a62:	8008      	strh	r0, [r1, #0]
 8019a64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019a68:	4684      	mov	ip, r0
 8019a6a:	e7a0      	b.n	80199ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8019a6c:	4607      	mov	r7, r0
 8019a6e:	4684      	mov	ip, r0
 8019a70:	e7a7      	b.n	80199c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019a72:	4607      	mov	r7, r0
 8019a74:	e7a5      	b.n	80199c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019a76:	4602      	mov	r2, r0
 8019a78:	e7b2      	b.n	80199e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8019a7a:	4602      	mov	r2, r0
 8019a7c:	e7ba      	b.n	80199f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08019a7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a82:	b093      	sub	sp, #76	@ 0x4c
 8019a84:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019a88:	920f      	str	r2, [sp, #60]	@ 0x3c
 8019a8a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8019a8c:	9010      	str	r0, [sp, #64]	@ 0x40
 8019a8e:	9108      	str	r1, [sp, #32]
 8019a90:	6850      	ldr	r0, [r2, #4]
 8019a92:	9306      	str	r3, [sp, #24]
 8019a94:	6812      	ldr	r2, [r2, #0]
 8019a96:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8019a9a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8019a9e:	fb00 1303 	mla	r3, r0, r3, r1
 8019aa2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019aa6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019aa8:	681b      	ldr	r3, [r3, #0]
 8019aaa:	9307      	str	r3, [sp, #28]
 8019aac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019aae:	685f      	ldr	r7, [r3, #4]
 8019ab0:	3704      	adds	r7, #4
 8019ab2:	9b08      	ldr	r3, [sp, #32]
 8019ab4:	2b00      	cmp	r3, #0
 8019ab6:	dc03      	bgt.n	8019ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019ab8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019aba:	2b00      	cmp	r3, #0
 8019abc:	f340 81b2 	ble.w	8019e24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019ac0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019ac2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019ac6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019aca:	1e48      	subs	r0, r1, #1
 8019acc:	f102 3cff 	add.w	ip, r2, #4294967295
 8019ad0:	9b06      	ldr	r3, [sp, #24]
 8019ad2:	2b00      	cmp	r3, #0
 8019ad4:	f340 80a9 	ble.w	8019c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019ad8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019adc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019ae0:	d406      	bmi.n	8019af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019ae2:	4586      	cmp	lr, r0
 8019ae4:	da04      	bge.n	8019af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019ae6:	2b00      	cmp	r3, #0
 8019ae8:	db02      	blt.n	8019af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019aea:	4563      	cmp	r3, ip
 8019aec:	f2c0 809e 	blt.w	8019c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019af0:	f11e 0e01 	adds.w	lr, lr, #1
 8019af4:	f100 808f 	bmi.w	8019c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019af8:	4571      	cmp	r1, lr
 8019afa:	f2c0 808c 	blt.w	8019c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019afe:	3301      	adds	r3, #1
 8019b00:	f100 8089 	bmi.w	8019c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019b04:	429a      	cmp	r2, r3
 8019b06:	f2c0 8086 	blt.w	8019c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019b0a:	f8dd b018 	ldr.w	fp, [sp, #24]
 8019b0e:	46c8      	mov	r8, r9
 8019b10:	f1bb 0f00 	cmp.w	fp, #0
 8019b14:	f340 80a6 	ble.w	8019c64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019b18:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8019b1a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019b1e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019b20:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019b24:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019b28:	1422      	asrs	r2, r4, #16
 8019b2a:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019b2e:	689b      	ldr	r3, [r3, #8]
 8019b30:	f100 80e3 	bmi.w	8019cfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019b34:	f103 3aff 	add.w	sl, r3, #4294967295
 8019b38:	4552      	cmp	r2, sl
 8019b3a:	f280 80de 	bge.w	8019cfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019b3e:	f1bc 0f00 	cmp.w	ip, #0
 8019b42:	f2c0 80da 	blt.w	8019cfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019b46:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019b4a:	45d4      	cmp	ip, sl
 8019b4c:	f280 80d5 	bge.w	8019cfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019b50:	b21b      	sxth	r3, r3
 8019b52:	9d07      	ldr	r5, [sp, #28]
 8019b54:	fb0c 2203 	mla	r2, ip, r3, r2
 8019b58:	eb05 0a02 	add.w	sl, r5, r2
 8019b5c:	5caa      	ldrb	r2, [r5, r2]
 8019b5e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019b62:	2800      	cmp	r0, #0
 8019b64:	f000 80c0 	beq.w	8019ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019b68:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019b6c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019b70:	920b      	str	r2, [sp, #44]	@ 0x2c
 8019b72:	b151      	cbz	r1, 8019b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019b74:	eb0a 0203 	add.w	r2, sl, r3
 8019b78:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019b7c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019b80:	9309      	str	r3, [sp, #36]	@ 0x24
 8019b82:	7853      	ldrb	r3, [r2, #1]
 8019b84:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019b88:	930c      	str	r3, [sp, #48]	@ 0x30
 8019b8a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019b8c:	fb10 f201 	smulbb	r2, r0, r1
 8019b90:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8019b92:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019b96:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019b9a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019b9e:	10d2      	asrs	r2, r2, #3
 8019ba0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019ba4:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019ba8:	ea4c 0c03 	orr.w	ip, ip, r3
 8019bac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019bae:	041b      	lsls	r3, r3, #16
 8019bb0:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019bb4:	432b      	orrs	r3, r5
 8019bb6:	4353      	muls	r3, r2
 8019bb8:	fb0a 330c 	mla	r3, sl, ip, r3
 8019bbc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019bc0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019bc4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019bc8:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019bcc:	f1c1 0c10 	rsb	ip, r1, #16
 8019bd0:	ebac 0c00 	sub.w	ip, ip, r0
 8019bd4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019bd8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019bdc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019be0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019be2:	0418      	lsls	r0, r3, #16
 8019be4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019be8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8019bec:	4318      	orrs	r0, r3
 8019bee:	fb02 c200 	mla	r2, r2, r0, ip
 8019bf2:	0d53      	lsrs	r3, r2, #21
 8019bf4:	0952      	lsrs	r2, r2, #5
 8019bf6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019bfa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019bfe:	431a      	orrs	r2, r3
 8019c00:	f8a8 2000 	strh.w	r2, [r8]
 8019c04:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019c06:	f108 0802 	add.w	r8, r8, #2
 8019c0a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019c0e:	441c      	add	r4, r3
 8019c10:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019c12:	441e      	add	r6, r3
 8019c14:	e77c      	b.n	8019b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019c16:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019c18:	f109 0902 	add.w	r9, r9, #2
 8019c1c:	441c      	add	r4, r3
 8019c1e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019c20:	441e      	add	r6, r3
 8019c22:	9b06      	ldr	r3, [sp, #24]
 8019c24:	3b01      	subs	r3, #1
 8019c26:	9306      	str	r3, [sp, #24]
 8019c28:	e752      	b.n	8019ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019c2a:	d020      	beq.n	8019c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019c2c:	9b06      	ldr	r3, [sp, #24]
 8019c2e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8019c30:	3b01      	subs	r3, #1
 8019c32:	fb00 4003 	mla	r0, r0, r3, r4
 8019c36:	1400      	asrs	r0, r0, #16
 8019c38:	f53f af67 	bmi.w	8019b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019c3c:	3901      	subs	r1, #1
 8019c3e:	4288      	cmp	r0, r1
 8019c40:	f6bf af63 	bge.w	8019b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019c44:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8019c46:	fb01 6303 	mla	r3, r1, r3, r6
 8019c4a:	141b      	asrs	r3, r3, #16
 8019c4c:	f53f af5d 	bmi.w	8019b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019c50:	3a01      	subs	r2, #1
 8019c52:	4293      	cmp	r3, r2
 8019c54:	f6bf af59 	bge.w	8019b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019c58:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019c5c:	46ca      	mov	sl, r9
 8019c5e:	f1b8 0f00 	cmp.w	r8, #0
 8019c62:	dc67      	bgt.n	8019d34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019c64:	9b06      	ldr	r3, [sp, #24]
 8019c66:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019c6a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019c6e:	9b08      	ldr	r3, [sp, #32]
 8019c70:	2b00      	cmp	r3, #0
 8019c72:	f340 80d7 	ble.w	8019e24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019c76:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019c7a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019c7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019c80:	eeb0 6a62 	vmov.f32	s12, s5
 8019c84:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019c88:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019c8c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c90:	ee16 4a10 	vmov	r4, s12
 8019c94:	eeb0 6a43 	vmov.f32	s12, s6
 8019c98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c9c:	ee16 6a10 	vmov	r6, s12
 8019ca0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019ca4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019ca8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019cac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019cb0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019cb4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019cb8:	ee12 2a90 	vmov	r2, s5
 8019cbc:	eef0 2a47 	vmov.f32	s5, s14
 8019cc0:	fb92 f3f3 	sdiv	r3, r2, r3
 8019cc4:	ee13 2a10 	vmov	r2, s6
 8019cc8:	931f      	str	r3, [sp, #124]	@ 0x7c
 8019cca:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019ccc:	eeb0 3a67 	vmov.f32	s6, s15
 8019cd0:	fb92 f3f3 	sdiv	r3, r2, r3
 8019cd4:	9320      	str	r3, [sp, #128]	@ 0x80
 8019cd6:	9b08      	ldr	r3, [sp, #32]
 8019cd8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019cda:	3b01      	subs	r3, #1
 8019cdc:	9308      	str	r3, [sp, #32]
 8019cde:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019ce0:	bf08      	it	eq
 8019ce2:	4613      	moveq	r3, r2
 8019ce4:	9306      	str	r3, [sp, #24]
 8019ce6:	e6e4      	b.n	8019ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019ce8:	2900      	cmp	r1, #0
 8019cea:	f43f af4e 	beq.w	8019b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019cee:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019cf2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019cf6:	9309      	str	r3, [sp, #36]	@ 0x24
 8019cf8:	e747      	b.n	8019b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019cfa:	f112 0a01 	adds.w	sl, r2, #1
 8019cfe:	d481      	bmi.n	8019c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019d00:	4553      	cmp	r3, sl
 8019d02:	f6ff af7f 	blt.w	8019c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019d06:	f11c 0a01 	adds.w	sl, ip, #1
 8019d0a:	f53f af7b 	bmi.w	8019c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019d0e:	45d6      	cmp	lr, sl
 8019d10:	f6ff af78 	blt.w	8019c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019d14:	b21b      	sxth	r3, r3
 8019d16:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019d1a:	fa0f f28e 	sxth.w	r2, lr
 8019d1e:	9300      	str	r3, [sp, #0]
 8019d20:	463b      	mov	r3, r7
 8019d22:	9201      	str	r2, [sp, #4]
 8019d24:	9a07      	ldr	r2, [sp, #28]
 8019d26:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019d2a:	4641      	mov	r1, r8
 8019d2c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8019d2e:	f7ff fe21 	bl	8019974 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019d32:	e767      	b.n	8019c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019d34:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019d36:	1422      	asrs	r2, r4, #16
 8019d38:	1431      	asrs	r1, r6, #16
 8019d3a:	9d07      	ldr	r5, [sp, #28]
 8019d3c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019d40:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8019d44:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019d48:	fb03 2101 	mla	r1, r3, r1, r2
 8019d4c:	9a07      	ldr	r2, [sp, #28]
 8019d4e:	440a      	add	r2, r1
 8019d50:	5c69      	ldrb	r1, [r5, r1]
 8019d52:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019d56:	f1be 0f00 	cmp.w	lr, #0
 8019d5a:	d05c      	beq.n	8019e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019d5c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019d60:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019d64:	950d      	str	r5, [sp, #52]	@ 0x34
 8019d66:	b150      	cbz	r0, 8019d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019d68:	eb02 0c03 	add.w	ip, r2, r3
 8019d6c:	5cd3      	ldrb	r3, [r2, r3]
 8019d6e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019d72:	930a      	str	r3, [sp, #40]	@ 0x28
 8019d74:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019d78:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019d7c:	930e      	str	r3, [sp, #56]	@ 0x38
 8019d7e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019d80:	fb1e f200 	smulbb	r2, lr, r0
 8019d84:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8019d86:	f108 38ff 	add.w	r8, r8, #4294967295
 8019d8a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019d8e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019d92:	10d2      	asrs	r2, r2, #3
 8019d94:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 8019d98:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019d9c:	ea4c 0c03 	orr.w	ip, ip, r3
 8019da0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019da4:	9311      	str	r3, [sp, #68]	@ 0x44
 8019da6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019da8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019daa:	041b      	lsls	r3, r3, #16
 8019dac:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019db0:	ea43 030b 	orr.w	r3, r3, fp
 8019db4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019db8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8019dbc:	4353      	muls	r3, r2
 8019dbe:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019dc2:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8019dc6:	ea43 0b01 	orr.w	fp, r3, r1
 8019dca:	f1c0 0110 	rsb	r1, r0, #16
 8019dce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019dd0:	eba1 0e0e 	sub.w	lr, r1, lr
 8019dd4:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019dd8:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019ddc:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019de0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019de4:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 8019de8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8019dec:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019df0:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019df4:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019df8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019dfc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019e00:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019e04:	ea43 0c0c 	orr.w	ip, r3, ip
 8019e08:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019e0a:	441c      	add	r4, r3
 8019e0c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019e0e:	f82a cb02 	strh.w	ip, [sl], #2
 8019e12:	441e      	add	r6, r3
 8019e14:	e723      	b.n	8019c5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019e16:	2800      	cmp	r0, #0
 8019e18:	d0b1      	beq.n	8019d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019e1a:	5cd3      	ldrb	r3, [r2, r3]
 8019e1c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019e20:	930a      	str	r3, [sp, #40]	@ 0x28
 8019e22:	e7ac      	b.n	8019d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019e24:	b013      	add	sp, #76	@ 0x4c
 8019e26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019e2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e2e:	880d      	ldrh	r5, [r1, #0]
 8019e30:	b087      	sub	sp, #28
 8019e32:	10ef      	asrs	r7, r5, #3
 8019e34:	9103      	str	r1, [sp, #12]
 8019e36:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019e3a:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 8019e3e:	00ed      	lsls	r5, r5, #3
 8019e40:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019e44:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8019e48:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8019e4c:	b2ed      	uxtb	r5, r5
 8019e4e:	9701      	str	r7, [sp, #4]
 8019e50:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 8019e54:	9502      	str	r5, [sp, #8]
 8019e56:	9d01      	ldr	r5, [sp, #4]
 8019e58:	9902      	ldr	r1, [sp, #8]
 8019e5a:	022d      	lsls	r5, r5, #8
 8019e5c:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 8019e60:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 8019e64:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019e68:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8019e6c:	430d      	orrs	r5, r1
 8019e6e:	fb06 0709 	mla	r7, r6, r9, r0
 8019e72:	2e00      	cmp	r6, #0
 8019e74:	9505      	str	r5, [sp, #20]
 8019e76:	eb02 0c07 	add.w	ip, r2, r7
 8019e7a:	f2c0 80b6 	blt.w	8019fea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019e7e:	45b3      	cmp	fp, r6
 8019e80:	f340 80b3 	ble.w	8019fea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019e84:	2800      	cmp	r0, #0
 8019e86:	f2c0 80ae 	blt.w	8019fe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019e8a:	4581      	cmp	r9, r0
 8019e8c:	f340 80ab 	ble.w	8019fe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019e90:	5dd7      	ldrb	r7, [r2, r7]
 8019e92:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019e96:	441f      	add	r7, r3
 8019e98:	1c42      	adds	r2, r0, #1
 8019e9a:	f100 80a9 	bmi.w	8019ff0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019e9e:	4591      	cmp	r9, r2
 8019ea0:	f340 80a6 	ble.w	8019ff0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019ea4:	2c00      	cmp	r4, #0
 8019ea6:	f000 80a3 	beq.w	8019ff0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019eaa:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019eae:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019eb2:	441d      	add	r5, r3
 8019eb4:	3601      	adds	r6, #1
 8019eb6:	f100 809f 	bmi.w	8019ff8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019eba:	45b3      	cmp	fp, r6
 8019ebc:	f340 809c 	ble.w	8019ff8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019ec0:	f1be 0f00 	cmp.w	lr, #0
 8019ec4:	f000 8098 	beq.w	8019ff8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019ec8:	2800      	cmp	r0, #0
 8019eca:	f2c0 8093 	blt.w	8019ff4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019ece:	4581      	cmp	r9, r0
 8019ed0:	f340 8090 	ble.w	8019ff4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019ed4:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019ed8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019edc:	441e      	add	r6, r3
 8019ede:	3001      	adds	r0, #1
 8019ee0:	f100 808d 	bmi.w	8019ffe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019ee4:	4581      	cmp	r9, r0
 8019ee6:	f340 808a 	ble.w	8019ffe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019eea:	2c00      	cmp	r4, #0
 8019eec:	f000 8087 	beq.w	8019ffe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019ef0:	44e1      	add	r9, ip
 8019ef2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019ef6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019efa:	4413      	add	r3, r2
 8019efc:	b2a4      	uxth	r4, r4
 8019efe:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019f02:	fa1f fe8e 	uxth.w	lr, lr
 8019f06:	9901      	ldr	r1, [sp, #4]
 8019f08:	fb04 fb0e 	mul.w	fp, r4, lr
 8019f0c:	0124      	lsls	r4, r4, #4
 8019f0e:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019f12:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 8019f16:	eba4 040b 	sub.w	r4, r4, fp
 8019f1a:	fa1f f08e 	uxth.w	r0, lr
 8019f1e:	b2a2      	uxth	r2, r4
 8019f20:	78ac      	ldrb	r4, [r5, #2]
 8019f22:	eba9 0900 	sub.w	r9, r9, r0
 8019f26:	fa1f fe88 	uxth.w	lr, r8
 8019f2a:	4354      	muls	r4, r2
 8019f2c:	ea6f 0808 	mvn.w	r8, r8
 8019f30:	fa1f f989 	uxth.w	r9, r9
 8019f34:	fa5f f888 	uxtb.w	r8, r8
 8019f38:	fb09 440c 	mla	r4, r9, ip, r4
 8019f3c:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019f40:	fb1a fa08 	smulbb	sl, sl, r8
 8019f44:	fb00 440c 	mla	r4, r0, ip, r4
 8019f48:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019f4c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019f50:	787c      	ldrb	r4, [r7, #1]
 8019f52:	783f      	ldrb	r7, [r7, #0]
 8019f54:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019f58:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019f5c:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019f60:	782d      	ldrb	r5, [r5, #0]
 8019f62:	fb02 fa0a 	mul.w	sl, r2, sl
 8019f66:	fa1f fc8c 	uxth.w	ip, ip
 8019f6a:	436a      	muls	r2, r5
 8019f6c:	7835      	ldrb	r5, [r6, #0]
 8019f6e:	fb09 aa04 	mla	sl, r9, r4, sl
 8019f72:	7874      	ldrb	r4, [r6, #1]
 8019f74:	fb09 2207 	mla	r2, r9, r7, r2
 8019f78:	fb00 aa04 	mla	sl, r0, r4, sl
 8019f7c:	785c      	ldrb	r4, [r3, #1]
 8019f7e:	fb00 2005 	mla	r0, r0, r5, r2
 8019f82:	781b      	ldrb	r3, [r3, #0]
 8019f84:	fb0b a404 	mla	r4, fp, r4, sl
 8019f88:	fb11 fa08 	smulbb	sl, r1, r8
 8019f8c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8019f90:	9b02      	ldr	r3, [sp, #8]
 8019f92:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019f96:	fb13 f808 	smulbb	r8, r3, r8
 8019f9a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8019f9e:	fb04 a40e 	mla	r4, r4, lr, sl
 8019fa2:	f10c 0301 	add.w	r3, ip, #1
 8019fa6:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019faa:	b2a4      	uxth	r4, r4
 8019fac:	fa1f fe8e 	uxth.w	lr, lr
 8019fb0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019fb4:	f104 0a01 	add.w	sl, r4, #1
 8019fb8:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 8019fbc:	f10e 0c01 	add.w	ip, lr, #1
 8019fc0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019fc4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019fc8:	0964      	lsrs	r4, r4, #5
 8019fca:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019fce:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8019fd2:	ea4c 0c03 	orr.w	ip, ip, r3
 8019fd6:	9b03      	ldr	r3, [sp, #12]
 8019fd8:	ea4c 0c04 	orr.w	ip, ip, r4
 8019fdc:	f8a3 c000 	strh.w	ip, [r3]
 8019fe0:	b007      	add	sp, #28
 8019fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019fe6:	af05      	add	r7, sp, #20
 8019fe8:	e756      	b.n	8019e98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019fea:	ad05      	add	r5, sp, #20
 8019fec:	462f      	mov	r7, r5
 8019fee:	e761      	b.n	8019eb4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019ff0:	ad05      	add	r5, sp, #20
 8019ff2:	e75f      	b.n	8019eb4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019ff4:	ae05      	add	r6, sp, #20
 8019ff6:	e772      	b.n	8019ede <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019ff8:	ab05      	add	r3, sp, #20
 8019ffa:	461e      	mov	r6, r3
 8019ffc:	e77e      	b.n	8019efc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8019ffe:	ab05      	add	r3, sp, #20
 801a000:	e77c      	b.n	8019efc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a002 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a002:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a006:	b095      	sub	sp, #84	@ 0x54
 801a008:	9212      	str	r2, [sp, #72]	@ 0x48
 801a00a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a00c:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a00e:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801a012:	9013      	str	r0, [sp, #76]	@ 0x4c
 801a014:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a016:	6850      	ldr	r0, [r2, #4]
 801a018:	910e      	str	r1, [sp, #56]	@ 0x38
 801a01a:	6812      	ldr	r2, [r2, #0]
 801a01c:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801a020:	fb00 1303 	mla	r3, r0, r3, r1
 801a024:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a028:	930a      	str	r3, [sp, #40]	@ 0x28
 801a02a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a02c:	681b      	ldr	r3, [r3, #0]
 801a02e:	930d      	str	r3, [sp, #52]	@ 0x34
 801a030:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a032:	685c      	ldr	r4, [r3, #4]
 801a034:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a036:	3404      	adds	r4, #4
 801a038:	43db      	mvns	r3, r3
 801a03a:	b2db      	uxtb	r3, r3
 801a03c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a03e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a040:	2b00      	cmp	r3, #0
 801a042:	dc03      	bgt.n	801a04c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a044:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a046:	2b00      	cmp	r3, #0
 801a048:	f340 8255 	ble.w	801a4f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a04c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a04e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a052:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a056:	1e48      	subs	r0, r1, #1
 801a058:	1e55      	subs	r5, r2, #1
 801a05a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a05c:	2b00      	cmp	r3, #0
 801a05e:	f340 80f9 	ble.w	801a254 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a062:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801a064:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a066:	1436      	asrs	r6, r6, #16
 801a068:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a06c:	d406      	bmi.n	801a07c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a06e:	4286      	cmp	r6, r0
 801a070:	da04      	bge.n	801a07c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a072:	2b00      	cmp	r3, #0
 801a074:	db02      	blt.n	801a07c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a076:	42ab      	cmp	r3, r5
 801a078:	f2c0 80ed 	blt.w	801a256 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a07c:	3601      	adds	r6, #1
 801a07e:	f100 80da 	bmi.w	801a236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a082:	42b1      	cmp	r1, r6
 801a084:	f2c0 80d7 	blt.w	801a236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a088:	3301      	adds	r3, #1
 801a08a:	f100 80d4 	bmi.w	801a236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a08e:	429a      	cmp	r2, r3
 801a090:	f2c0 80d1 	blt.w	801a236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a094:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a096:	9311      	str	r3, [sp, #68]	@ 0x44
 801a098:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a09a:	930c      	str	r3, [sp, #48]	@ 0x30
 801a09c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a09e:	2b00      	cmp	r3, #0
 801a0a0:	f340 80fa 	ble.w	801a298 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a0a4:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801a0a6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a0a8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801a0aa:	68c6      	ldr	r6, [r0, #12]
 801a0ac:	141d      	asrs	r5, r3, #16
 801a0ae:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a0b0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a0b4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a0b6:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801a0b8:	1400      	asrs	r0, r0, #16
 801a0ba:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a0be:	6892      	ldr	r2, [r2, #8]
 801a0c0:	f100 813e 	bmi.w	801a340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a0c4:	1e57      	subs	r7, r2, #1
 801a0c6:	42b8      	cmp	r0, r7
 801a0c8:	f280 813a 	bge.w	801a340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a0cc:	2d00      	cmp	r5, #0
 801a0ce:	f2c0 8137 	blt.w	801a340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a0d2:	1e77      	subs	r7, r6, #1
 801a0d4:	42bd      	cmp	r5, r7
 801a0d6:	f280 8133 	bge.w	801a340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a0da:	b212      	sxth	r2, r2
 801a0dc:	fb05 0002 	mla	r0, r5, r2, r0
 801a0e0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a0e2:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a0e6:	182e      	adds	r6, r5, r0
 801a0e8:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a0ec:	eb04 050a 	add.w	r5, r4, sl
 801a0f0:	2b00      	cmp	r3, #0
 801a0f2:	f000 8117 	beq.w	801a324 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a0f6:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a0fa:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a0fe:	44a4      	add	ip, r4
 801a100:	2900      	cmp	r1, #0
 801a102:	f000 8117 	beq.w	801a334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a106:	18b0      	adds	r0, r6, r2
 801a108:	5cb2      	ldrb	r2, [r6, r2]
 801a10a:	7840      	ldrb	r0, [r0, #1]
 801a10c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a110:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a114:	4422      	add	r2, r4
 801a116:	4420      	add	r0, r4
 801a118:	b29b      	uxth	r3, r3
 801a11a:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a11e:	b289      	uxth	r1, r1
 801a120:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a124:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801a126:	fb03 f901 	mul.w	r9, r3, r1
 801a12a:	011b      	lsls	r3, r3, #4
 801a12c:	f8b6 e000 	ldrh.w	lr, [r6]
 801a130:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a134:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801a138:	eba3 0309 	sub.w	r3, r3, r9
 801a13c:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801a140:	b289      	uxth	r1, r1
 801a142:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a146:	b29b      	uxth	r3, r3
 801a148:	eba8 0801 	sub.w	r8, r8, r1
 801a14c:	435f      	muls	r7, r3
 801a14e:	fa1f f888 	uxth.w	r8, r8
 801a152:	9310      	str	r3, [sp, #64]	@ 0x40
 801a154:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a156:	fb08 770b 	mla	r7, r8, fp, r7
 801a15a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a15e:	fb01 770b 	mla	r7, r1, fp, r7
 801a162:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a166:	fb09 770b 	mla	r7, r9, fp, r7
 801a16a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a16e:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801a172:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a176:	fb1b fb03 	smulbb	fp, fp, r3
 801a17a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a17c:	fb07 b706 	mla	r7, r7, r6, fp
 801a180:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a184:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a188:	f89c c000 	ldrb.w	ip, [ip]
 801a18c:	b2bf      	uxth	r7, r7
 801a18e:	435d      	muls	r5, r3
 801a190:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a192:	fb08 550b 	mla	r5, r8, fp, r5
 801a196:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a19a:	fb01 550b 	mla	r5, r1, fp, r5
 801a19e:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a1a2:	fb09 550b 	mla	r5, r9, fp, r5
 801a1a6:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a1aa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a1ae:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a1b2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a1b6:	fa5f fe8e 	uxtb.w	lr, lr
 801a1ba:	fb1b fb03 	smulbb	fp, fp, r3
 801a1be:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a1c0:	fb03 f30c 	mul.w	r3, r3, ip
 801a1c4:	f892 c000 	ldrb.w	ip, [r2]
 801a1c8:	fb05 b506 	mla	r5, r5, r6, fp
 801a1cc:	fb08 330a 	mla	r3, r8, sl, r3
 801a1d0:	b2ad      	uxth	r5, r5
 801a1d2:	fb01 330c 	mla	r3, r1, ip, r3
 801a1d6:	f890 c000 	ldrb.w	ip, [r0]
 801a1da:	f105 0b01 	add.w	fp, r5, #1
 801a1de:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a1e2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a1e4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a1e8:	fb1e fe03 	smulbb	lr, lr, r3
 801a1ec:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a1f0:	1c7b      	adds	r3, r7, #1
 801a1f2:	096d      	lsrs	r5, r5, #5
 801a1f4:	fb0c e606 	mla	r6, ip, r6, lr
 801a1f8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a1fc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a200:	b2b6      	uxth	r6, r6
 801a202:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801a206:	1c77      	adds	r7, r6, #1
 801a208:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a20c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a210:	431f      	orrs	r7, r3
 801a212:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a214:	433d      	orrs	r5, r7
 801a216:	801d      	strh	r5, [r3, #0]
 801a218:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a21a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a21c:	3302      	adds	r3, #2
 801a21e:	930c      	str	r3, [sp, #48]	@ 0x30
 801a220:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a222:	4413      	add	r3, r2
 801a224:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a226:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a228:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a22a:	4413      	add	r3, r2
 801a22c:	9320      	str	r3, [sp, #128]	@ 0x80
 801a22e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a230:	3b01      	subs	r3, #1
 801a232:	9311      	str	r3, [sp, #68]	@ 0x44
 801a234:	e732      	b.n	801a09c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a236:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a238:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801a23a:	4433      	add	r3, r6
 801a23c:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801a23e:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a240:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a242:	4433      	add	r3, r6
 801a244:	9320      	str	r3, [sp, #128]	@ 0x80
 801a246:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a248:	3b01      	subs	r3, #1
 801a24a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a24c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a24e:	3302      	adds	r3, #2
 801a250:	930a      	str	r3, [sp, #40]	@ 0x28
 801a252:	e702      	b.n	801a05a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a254:	d027      	beq.n	801a2a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a256:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a258:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801a25a:	3b01      	subs	r3, #1
 801a25c:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801a25e:	fb00 5003 	mla	r0, r0, r3, r5
 801a262:	1400      	asrs	r0, r0, #16
 801a264:	f53f af16 	bmi.w	801a094 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a268:	3901      	subs	r1, #1
 801a26a:	4288      	cmp	r0, r1
 801a26c:	f6bf af12 	bge.w	801a094 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a270:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801a272:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801a274:	fb01 0303 	mla	r3, r1, r3, r0
 801a278:	141b      	asrs	r3, r3, #16
 801a27a:	f53f af0b 	bmi.w	801a094 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a27e:	3a01      	subs	r2, #1
 801a280:	4293      	cmp	r3, r2
 801a282:	f6bf af07 	bge.w	801a094 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a286:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a288:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801a28c:	9311      	str	r3, [sp, #68]	@ 0x44
 801a28e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a290:	930c      	str	r3, [sp, #48]	@ 0x30
 801a292:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a294:	2b00      	cmp	r3, #0
 801a296:	dc70      	bgt.n	801a37a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a298:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a29a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a29c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a2a0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a2a4:	930a      	str	r3, [sp, #40]	@ 0x28
 801a2a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a2a8:	2b00      	cmp	r3, #0
 801a2aa:	f340 8124 	ble.w	801a4f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a2ae:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a2b2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a2b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a2b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a2bc:	eef0 6a62 	vmov.f32	s13, s5
 801a2c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a2c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a2c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a2cc:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801a2d0:	eef0 6a43 	vmov.f32	s13, s6
 801a2d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a2d8:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801a2dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a2e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a2e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a2e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a2ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a2f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a2f4:	ee12 2a90 	vmov	r2, s5
 801a2f8:	eef0 2a47 	vmov.f32	s5, s14
 801a2fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a300:	ee13 2a10 	vmov	r2, s6
 801a304:	9321      	str	r3, [sp, #132]	@ 0x84
 801a306:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a308:	eeb0 3a67 	vmov.f32	s6, s15
 801a30c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a310:	9322      	str	r3, [sp, #136]	@ 0x88
 801a312:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a314:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a316:	3b01      	subs	r3, #1
 801a318:	930e      	str	r3, [sp, #56]	@ 0x38
 801a31a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a31c:	bf08      	it	eq
 801a31e:	4613      	moveq	r3, r2
 801a320:	9309      	str	r3, [sp, #36]	@ 0x24
 801a322:	e68c      	b.n	801a03e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a324:	b149      	cbz	r1, 801a33a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a326:	5cb2      	ldrb	r2, [r6, r2]
 801a328:	4628      	mov	r0, r5
 801a32a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a32e:	4422      	add	r2, r4
 801a330:	46ac      	mov	ip, r5
 801a332:	e6f1      	b.n	801a118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a334:	4628      	mov	r0, r5
 801a336:	462a      	mov	r2, r5
 801a338:	e6ee      	b.n	801a118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a33a:	4628      	mov	r0, r5
 801a33c:	462a      	mov	r2, r5
 801a33e:	e7f7      	b.n	801a330 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a340:	1c47      	adds	r7, r0, #1
 801a342:	f53f af69 	bmi.w	801a218 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a346:	42ba      	cmp	r2, r7
 801a348:	f6ff af66 	blt.w	801a218 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a34c:	1c6f      	adds	r7, r5, #1
 801a34e:	f53f af63 	bmi.w	801a218 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a352:	42be      	cmp	r6, r7
 801a354:	f6ff af60 	blt.w	801a218 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a358:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a35a:	b236      	sxth	r6, r6
 801a35c:	b212      	sxth	r2, r2
 801a35e:	9002      	str	r0, [sp, #8]
 801a360:	9601      	str	r6, [sp, #4]
 801a362:	9200      	str	r2, [sp, #0]
 801a364:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a366:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a36a:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a36e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801a372:	4623      	mov	r3, r4
 801a374:	f7ff fd59 	bl	8019e2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a378:	e74e      	b.n	801a218 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a37a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801a37c:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801a37e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a382:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801a384:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801a386:	1400      	asrs	r0, r0, #16
 801a388:	142d      	asrs	r5, r5, #16
 801a38a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a38c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a390:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a394:	fb02 5000 	mla	r0, r2, r0, r5
 801a398:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a39a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a39e:	182e      	adds	r6, r5, r0
 801a3a0:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a3a4:	eb04 0509 	add.w	r5, r4, r9
 801a3a8:	2b00      	cmp	r3, #0
 801a3aa:	f000 8096 	beq.w	801a4da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a3ae:	7877      	ldrb	r7, [r6, #1]
 801a3b0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a3b4:	4427      	add	r7, r4
 801a3b6:	2900      	cmp	r1, #0
 801a3b8:	f000 8097 	beq.w	801a4ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a3bc:	18b0      	adds	r0, r6, r2
 801a3be:	5cb2      	ldrb	r2, [r6, r2]
 801a3c0:	7840      	ldrb	r0, [r0, #1]
 801a3c2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a3c6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a3ca:	4422      	add	r2, r4
 801a3cc:	4420      	add	r0, r4
 801a3ce:	b29b      	uxth	r3, r3
 801a3d0:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801a3d2:	b289      	uxth	r1, r1
 801a3d4:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a3d8:	f8b6 c000 	ldrh.w	ip, [r6]
 801a3dc:	fb03 f801 	mul.w	r8, r3, r1
 801a3e0:	011b      	lsls	r3, r3, #4
 801a3e2:	78be      	ldrb	r6, [r7, #2]
 801a3e4:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a3e8:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801a3ec:	eba3 0308 	sub.w	r3, r3, r8
 801a3f0:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a3f4:	b289      	uxth	r1, r1
 801a3f6:	b29b      	uxth	r3, r3
 801a3f8:	ebae 0e01 	sub.w	lr, lr, r1
 801a3fc:	435e      	muls	r6, r3
 801a3fe:	fa1f fe8e 	uxth.w	lr, lr
 801a402:	9310      	str	r3, [sp, #64]	@ 0x40
 801a404:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a406:	fb0e 660b 	mla	r6, lr, fp, r6
 801a40a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a40e:	fb01 660b 	mla	r6, r1, fp, r6
 801a412:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a416:	fb08 660b 	mla	r6, r8, fp, r6
 801a41a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a41e:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801a422:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a426:	fb1b fb03 	smulbb	fp, fp, r3
 801a42a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a42c:	fb06 b60a 	mla	r6, r6, sl, fp
 801a430:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a434:	787d      	ldrb	r5, [r7, #1]
 801a436:	783f      	ldrb	r7, [r7, #0]
 801a438:	b2b6      	uxth	r6, r6
 801a43a:	435d      	muls	r5, r3
 801a43c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a43e:	fb0e 550b 	mla	r5, lr, fp, r5
 801a442:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a446:	fb01 550b 	mla	r5, r1, fp, r5
 801a44a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a44e:	fb08 550b 	mla	r5, r8, fp, r5
 801a452:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a456:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a45a:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a45e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a462:	fa5f fc8c 	uxtb.w	ip, ip
 801a466:	fb1b fb03 	smulbb	fp, fp, r3
 801a46a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a46c:	437b      	muls	r3, r7
 801a46e:	7817      	ldrb	r7, [r2, #0]
 801a470:	fb05 b50a 	mla	r5, r5, sl, fp
 801a474:	fb0e 3309 	mla	r3, lr, r9, r3
 801a478:	b2ad      	uxth	r5, r5
 801a47a:	fb01 3307 	mla	r3, r1, r7, r3
 801a47e:	7807      	ldrb	r7, [r0, #0]
 801a480:	f105 0b01 	add.w	fp, r5, #1
 801a484:	fb08 3707 	mla	r7, r8, r7, r3
 801a488:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a48a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a48e:	fb1c fc03 	smulbb	ip, ip, r3
 801a492:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a496:	1c73      	adds	r3, r6, #1
 801a498:	096d      	lsrs	r5, r5, #5
 801a49a:	fb07 c70a 	mla	r7, r7, sl, ip
 801a49e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a4a2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a4a6:	b2bf      	uxth	r7, r7
 801a4a8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a4aa:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801a4ae:	1c7a      	adds	r2, r7, #1
 801a4b0:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a4b4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a4b8:	4316      	orrs	r6, r2
 801a4ba:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a4bc:	432e      	orrs	r6, r5
 801a4be:	f823 6b02 	strh.w	r6, [r3], #2
 801a4c2:	930c      	str	r3, [sp, #48]	@ 0x30
 801a4c4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a4c6:	4413      	add	r3, r2
 801a4c8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a4ca:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a4cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a4ce:	4413      	add	r3, r2
 801a4d0:	9320      	str	r3, [sp, #128]	@ 0x80
 801a4d2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a4d4:	3b01      	subs	r3, #1
 801a4d6:	9311      	str	r3, [sp, #68]	@ 0x44
 801a4d8:	e6db      	b.n	801a292 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a4da:	b149      	cbz	r1, 801a4f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a4dc:	5cb2      	ldrb	r2, [r6, r2]
 801a4de:	4628      	mov	r0, r5
 801a4e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a4e4:	4422      	add	r2, r4
 801a4e6:	462f      	mov	r7, r5
 801a4e8:	e771      	b.n	801a3ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a4ea:	4628      	mov	r0, r5
 801a4ec:	462a      	mov	r2, r5
 801a4ee:	e76e      	b.n	801a3ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a4f0:	4628      	mov	r0, r5
 801a4f2:	462a      	mov	r2, r5
 801a4f4:	e7f7      	b.n	801a4e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a4f6:	b015      	add	sp, #84	@ 0x54
 801a4f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a4fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a4fc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a500:	880f      	ldrh	r7, [r1, #0]
 801a502:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801a506:	023c      	lsls	r4, r7, #8
 801a508:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801a50c:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801a510:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801a514:	017c      	lsls	r4, r7, #5
 801a516:	00ff      	lsls	r7, r7, #3
 801a518:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801a51c:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801a520:	b2ff      	uxtb	r7, r7
 801a522:	ea4b 0404 	orr.w	r4, fp, r4
 801a526:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801a52a:	4327      	orrs	r7, r4
 801a52c:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a530:	2d00      	cmp	r5, #0
 801a532:	9701      	str	r7, [sp, #4]
 801a534:	eb02 080a 	add.w	r8, r2, sl
 801a538:	db7e      	blt.n	801a638 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a53a:	45a9      	cmp	r9, r5
 801a53c:	dd7c      	ble.n	801a638 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a53e:	f1bc 0f00 	cmp.w	ip, #0
 801a542:	db77      	blt.n	801a634 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a544:	45e6      	cmp	lr, ip
 801a546:	dd75      	ble.n	801a634 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a548:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a54c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a550:	441f      	add	r7, r3
 801a552:	f11c 0201 	adds.w	r2, ip, #1
 801a556:	d472      	bmi.n	801a63e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a558:	4596      	cmp	lr, r2
 801a55a:	dd70      	ble.n	801a63e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a55c:	2800      	cmp	r0, #0
 801a55e:	d06e      	beq.n	801a63e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a560:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a564:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a568:	441c      	add	r4, r3
 801a56a:	3501      	adds	r5, #1
 801a56c:	d46b      	bmi.n	801a646 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a56e:	45a9      	cmp	r9, r5
 801a570:	dd69      	ble.n	801a646 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a572:	2e00      	cmp	r6, #0
 801a574:	d067      	beq.n	801a646 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a576:	f1bc 0f00 	cmp.w	ip, #0
 801a57a:	db62      	blt.n	801a642 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a57c:	45e6      	cmp	lr, ip
 801a57e:	dd60      	ble.n	801a642 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a580:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a584:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a588:	441d      	add	r5, r3
 801a58a:	f11c 0201 	adds.w	r2, ip, #1
 801a58e:	d45d      	bmi.n	801a64c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a590:	4596      	cmp	lr, r2
 801a592:	dd5b      	ble.n	801a64c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a594:	2800      	cmp	r0, #0
 801a596:	d059      	beq.n	801a64c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a598:	44c6      	add	lr, r8
 801a59a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a59e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a5a2:	4413      	add	r3, r2
 801a5a4:	b280      	uxth	r0, r0
 801a5a6:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a5aa:	b2b2      	uxth	r2, r6
 801a5ac:	f897 9000 	ldrb.w	r9, [r7]
 801a5b0:	787f      	ldrb	r7, [r7, #1]
 801a5b2:	fb00 f602 	mul.w	r6, r0, r2
 801a5b6:	0100      	lsls	r0, r0, #4
 801a5b8:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a5bc:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801a5c0:	1b80      	subs	r0, r0, r6
 801a5c2:	fa1f fc82 	uxth.w	ip, r2
 801a5c6:	b282      	uxth	r2, r0
 801a5c8:	78a0      	ldrb	r0, [r4, #2]
 801a5ca:	eba8 080c 	sub.w	r8, r8, ip
 801a5ce:	4350      	muls	r0, r2
 801a5d0:	fa1f f888 	uxth.w	r8, r8
 801a5d4:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a5d8:	78a8      	ldrb	r0, [r5, #2]
 801a5da:	fb0c e000 	mla	r0, ip, r0, lr
 801a5de:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a5e2:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a5e6:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801a5ea:	f894 e000 	ldrb.w	lr, [r4]
 801a5ee:	fb02 fe0e 	mul.w	lr, r2, lr
 801a5f2:	fb08 e909 	mla	r9, r8, r9, lr
 801a5f6:	f895 e000 	ldrb.w	lr, [r5]
 801a5fa:	fb0c 990e 	mla	r9, ip, lr, r9
 801a5fe:	f893 e000 	ldrb.w	lr, [r3]
 801a602:	785b      	ldrb	r3, [r3, #1]
 801a604:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a608:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a60c:	ea4e 0e00 	orr.w	lr, lr, r0
 801a610:	7860      	ldrb	r0, [r4, #1]
 801a612:	4350      	muls	r0, r2
 801a614:	786a      	ldrb	r2, [r5, #1]
 801a616:	fb08 0007 	mla	r0, r8, r7, r0
 801a61a:	fb0c 0202 	mla	r2, ip, r2, r0
 801a61e:	fb06 2303 	mla	r3, r6, r3, r2
 801a622:	095b      	lsrs	r3, r3, #5
 801a624:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a628:	ea4e 0303 	orr.w	r3, lr, r3
 801a62c:	800b      	strh	r3, [r1, #0]
 801a62e:	b003      	add	sp, #12
 801a630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a634:	af01      	add	r7, sp, #4
 801a636:	e78c      	b.n	801a552 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a638:	ac01      	add	r4, sp, #4
 801a63a:	4627      	mov	r7, r4
 801a63c:	e795      	b.n	801a56a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a63e:	ac01      	add	r4, sp, #4
 801a640:	e793      	b.n	801a56a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a642:	ad01      	add	r5, sp, #4
 801a644:	e7a1      	b.n	801a58a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a646:	ab01      	add	r3, sp, #4
 801a648:	461d      	mov	r5, r3
 801a64a:	e7ab      	b.n	801a5a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a64c:	ab01      	add	r3, sp, #4
 801a64e:	e7a9      	b.n	801a5a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a650 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a654:	b08f      	sub	sp, #60	@ 0x3c
 801a656:	920c      	str	r2, [sp, #48]	@ 0x30
 801a658:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801a65a:	900d      	str	r0, [sp, #52]	@ 0x34
 801a65c:	910a      	str	r1, [sp, #40]	@ 0x28
 801a65e:	6850      	ldr	r0, [r2, #4]
 801a660:	9306      	str	r3, [sp, #24]
 801a662:	6812      	ldr	r2, [r2, #0]
 801a664:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801a668:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801a66c:	fb00 1303 	mla	r3, r0, r3, r1
 801a670:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a674:	9307      	str	r3, [sp, #28]
 801a676:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a678:	681b      	ldr	r3, [r3, #0]
 801a67a:	9308      	str	r3, [sp, #32]
 801a67c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a67e:	685c      	ldr	r4, [r3, #4]
 801a680:	3404      	adds	r4, #4
 801a682:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a684:	2b00      	cmp	r3, #0
 801a686:	dc03      	bgt.n	801a690 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a688:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a68a:	2b00      	cmp	r3, #0
 801a68c:	f340 81d5 	ble.w	801aa3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801a690:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a692:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a696:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a69a:	1e48      	subs	r0, r1, #1
 801a69c:	1e56      	subs	r6, r2, #1
 801a69e:	9b06      	ldr	r3, [sp, #24]
 801a6a0:	2b00      	cmp	r3, #0
 801a6a2:	f340 80b6 	ble.w	801a812 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801a6a6:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a6aa:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a6ae:	d406      	bmi.n	801a6be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a6b0:	4287      	cmp	r7, r0
 801a6b2:	da04      	bge.n	801a6be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a6b4:	2b00      	cmp	r3, #0
 801a6b6:	db02      	blt.n	801a6be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a6b8:	42b3      	cmp	r3, r6
 801a6ba:	f2c0 80ab 	blt.w	801a814 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a6be:	3701      	adds	r7, #1
 801a6c0:	f100 809c 	bmi.w	801a7fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a6c4:	42b9      	cmp	r1, r7
 801a6c6:	f2c0 8099 	blt.w	801a7fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a6ca:	3301      	adds	r3, #1
 801a6cc:	f100 8096 	bmi.w	801a7fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a6d0:	429a      	cmp	r2, r3
 801a6d2:	f2c0 8093 	blt.w	801a7fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a6d6:	9b06      	ldr	r3, [sp, #24]
 801a6d8:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a6da:	9b07      	ldr	r3, [sp, #28]
 801a6dc:	9309      	str	r3, [sp, #36]	@ 0x24
 801a6de:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a6e0:	2b00      	cmp	r3, #0
 801a6e2:	f340 80b4 	ble.w	801a84e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801a6e6:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801a6e8:	142e      	asrs	r6, r5, #16
 801a6ea:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801a6ec:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a6f0:	68c7      	ldr	r7, [r0, #12]
 801a6f2:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a6f6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a6fa:	6892      	ldr	r2, [r2, #8]
 801a6fc:	f100 80fb 	bmi.w	801a8f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a700:	f102 3cff 	add.w	ip, r2, #4294967295
 801a704:	4560      	cmp	r0, ip
 801a706:	f280 80f6 	bge.w	801a8f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a70a:	2e00      	cmp	r6, #0
 801a70c:	f2c0 80f3 	blt.w	801a8f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a710:	f107 3cff 	add.w	ip, r7, #4294967295
 801a714:	4566      	cmp	r6, ip
 801a716:	f280 80ee 	bge.w	801a8f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a71a:	b212      	sxth	r2, r2
 801a71c:	fb06 0002 	mla	r0, r6, r2, r0
 801a720:	9e08      	ldr	r6, [sp, #32]
 801a722:	1837      	adds	r7, r6, r0
 801a724:	5c30      	ldrb	r0, [r6, r0]
 801a726:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a72a:	eb04 0c08 	add.w	ip, r4, r8
 801a72e:	2b00      	cmp	r3, #0
 801a730:	f000 80d3 	beq.w	801a8da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801a734:	787e      	ldrb	r6, [r7, #1]
 801a736:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a73a:	4426      	add	r6, r4
 801a73c:	2900      	cmp	r1, #0
 801a73e:	f000 80d4 	beq.w	801a8ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a742:	18b8      	adds	r0, r7, r2
 801a744:	5cba      	ldrb	r2, [r7, r2]
 801a746:	7840      	ldrb	r0, [r0, #1]
 801a748:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a74c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a750:	4422      	add	r2, r4
 801a752:	4420      	add	r0, r4
 801a754:	b29b      	uxth	r3, r3
 801a756:	78b7      	ldrb	r7, [r6, #2]
 801a758:	b289      	uxth	r1, r1
 801a75a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a75e:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a762:	fb03 f901 	mul.w	r9, r3, r1
 801a766:	011b      	lsls	r3, r3, #4
 801a768:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a76c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801a770:	eba3 0309 	sub.w	r3, r3, r9
 801a774:	b289      	uxth	r1, r1
 801a776:	b29b      	uxth	r3, r3
 801a778:	ebae 0e01 	sub.w	lr, lr, r1
 801a77c:	435f      	muls	r7, r3
 801a77e:	fa1f fe8e 	uxth.w	lr, lr
 801a782:	fb0e 770a 	mla	r7, lr, sl, r7
 801a786:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a78a:	fb01 770a 	mla	r7, r1, sl, r7
 801a78e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a792:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a796:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a79a:	f896 8000 	ldrb.w	r8, [r6]
 801a79e:	7876      	ldrb	r6, [r6, #1]
 801a7a0:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801a7a4:	fb03 f808 	mul.w	r8, r3, r8
 801a7a8:	4373      	muls	r3, r6
 801a7aa:	fb0e 8807 	mla	r8, lr, r7, r8
 801a7ae:	7817      	ldrb	r7, [r2, #0]
 801a7b0:	fb0e 330c 	mla	r3, lr, ip, r3
 801a7b4:	fb01 8807 	mla	r8, r1, r7, r8
 801a7b8:	7807      	ldrb	r7, [r0, #0]
 801a7ba:	fb09 8707 	mla	r7, r9, r7, r8
 801a7be:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a7c2:	ea47 070a 	orr.w	r7, r7, sl
 801a7c6:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a7ca:	fb01 310a 	mla	r1, r1, sl, r3
 801a7ce:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a7d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a7d4:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a7d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a7dc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a7e0:	ea47 070a 	orr.w	r7, r7, sl
 801a7e4:	801f      	strh	r7, [r3, #0]
 801a7e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a7e8:	3302      	adds	r3, #2
 801a7ea:	9309      	str	r3, [sp, #36]	@ 0x24
 801a7ec:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801a7ee:	449b      	add	fp, r3
 801a7f0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a7f2:	441d      	add	r5, r3
 801a7f4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a7f6:	3b01      	subs	r3, #1
 801a7f8:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a7fa:	e770      	b.n	801a6de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a7fc:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801a7fe:	449b      	add	fp, r3
 801a800:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a802:	441d      	add	r5, r3
 801a804:	9b06      	ldr	r3, [sp, #24]
 801a806:	3b01      	subs	r3, #1
 801a808:	9306      	str	r3, [sp, #24]
 801a80a:	9b07      	ldr	r3, [sp, #28]
 801a80c:	3302      	adds	r3, #2
 801a80e:	9307      	str	r3, [sp, #28]
 801a810:	e745      	b.n	801a69e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a812:	d023      	beq.n	801a85c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801a814:	9b06      	ldr	r3, [sp, #24]
 801a816:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801a818:	3b01      	subs	r3, #1
 801a81a:	fb00 b003 	mla	r0, r0, r3, fp
 801a81e:	1400      	asrs	r0, r0, #16
 801a820:	f53f af59 	bmi.w	801a6d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a824:	3901      	subs	r1, #1
 801a826:	4288      	cmp	r0, r1
 801a828:	f6bf af55 	bge.w	801a6d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a82c:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801a82e:	fb01 5303 	mla	r3, r1, r3, r5
 801a832:	141b      	asrs	r3, r3, #16
 801a834:	f53f af4f 	bmi.w	801a6d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a838:	3a01      	subs	r2, #1
 801a83a:	4293      	cmp	r3, r2
 801a83c:	f6bf af4b 	bge.w	801a6d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a840:	9b06      	ldr	r3, [sp, #24]
 801a842:	9309      	str	r3, [sp, #36]	@ 0x24
 801a844:	9b07      	ldr	r3, [sp, #28]
 801a846:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a848:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a84a:	2b00      	cmp	r3, #0
 801a84c:	dc70      	bgt.n	801a930 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801a84e:	9b06      	ldr	r3, [sp, #24]
 801a850:	9a07      	ldr	r2, [sp, #28]
 801a852:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a856:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a85a:	9307      	str	r3, [sp, #28]
 801a85c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a85e:	2b00      	cmp	r3, #0
 801a860:	f340 80eb 	ble.w	801aa3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801a864:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a868:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a86a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a86e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a872:	eef0 6a62 	vmov.f32	s13, s5
 801a876:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a87a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a87e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a882:	ee16 ba90 	vmov	fp, s13
 801a886:	eef0 6a43 	vmov.f32	s13, s6
 801a88a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a88e:	ee16 5a90 	vmov	r5, s13
 801a892:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a896:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a89a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a89e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a8a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a8a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a8aa:	ee12 2a90 	vmov	r2, s5
 801a8ae:	eef0 2a47 	vmov.f32	s5, s14
 801a8b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8b6:	ee13 2a10 	vmov	r2, s6
 801a8ba:	931b      	str	r3, [sp, #108]	@ 0x6c
 801a8bc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a8be:	eeb0 3a67 	vmov.f32	s6, s15
 801a8c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8c6:	931c      	str	r3, [sp, #112]	@ 0x70
 801a8c8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a8ca:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801a8cc:	3b01      	subs	r3, #1
 801a8ce:	930a      	str	r3, [sp, #40]	@ 0x28
 801a8d0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a8d2:	bf08      	it	eq
 801a8d4:	4613      	moveq	r3, r2
 801a8d6:	9306      	str	r3, [sp, #24]
 801a8d8:	e6d3      	b.n	801a682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a8da:	b149      	cbz	r1, 801a8f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801a8dc:	5cba      	ldrb	r2, [r7, r2]
 801a8de:	4660      	mov	r0, ip
 801a8e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a8e4:	4422      	add	r2, r4
 801a8e6:	4666      	mov	r6, ip
 801a8e8:	e734      	b.n	801a754 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801a8ea:	4660      	mov	r0, ip
 801a8ec:	4662      	mov	r2, ip
 801a8ee:	e731      	b.n	801a754 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801a8f0:	4660      	mov	r0, ip
 801a8f2:	4662      	mov	r2, ip
 801a8f4:	e7f7      	b.n	801a8e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a8f6:	f110 0c01 	adds.w	ip, r0, #1
 801a8fa:	f53f af74 	bmi.w	801a7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a8fe:	4562      	cmp	r2, ip
 801a900:	f6ff af71 	blt.w	801a7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a904:	f116 0c01 	adds.w	ip, r6, #1
 801a908:	f53f af6d 	bmi.w	801a7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a90c:	4567      	cmp	r7, ip
 801a90e:	f6ff af6a 	blt.w	801a7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a912:	b23f      	sxth	r7, r7
 801a914:	b212      	sxth	r2, r2
 801a916:	9701      	str	r7, [sp, #4]
 801a918:	9200      	str	r2, [sp, #0]
 801a91a:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a91e:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a922:	4623      	mov	r3, r4
 801a924:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801a926:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a92a:	f7ff fde7 	bl	801a4fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a92e:	e75a      	b.n	801a7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a930:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801a932:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a936:	1428      	asrs	r0, r5, #16
 801a938:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a93c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a940:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a944:	fb02 6000 	mla	r0, r2, r0, r6
 801a948:	9e08      	ldr	r6, [sp, #32]
 801a94a:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a94e:	1837      	adds	r7, r6, r0
 801a950:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a954:	eb04 0c08 	add.w	ip, r4, r8
 801a958:	2b00      	cmp	r3, #0
 801a95a:	d060      	beq.n	801aa1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801a95c:	787e      	ldrb	r6, [r7, #1]
 801a95e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a962:	4426      	add	r6, r4
 801a964:	2900      	cmp	r1, #0
 801a966:	d062      	beq.n	801aa2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801a968:	18b8      	adds	r0, r7, r2
 801a96a:	5cba      	ldrb	r2, [r7, r2]
 801a96c:	7840      	ldrb	r0, [r0, #1]
 801a96e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a972:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a976:	4422      	add	r2, r4
 801a978:	4420      	add	r0, r4
 801a97a:	b29b      	uxth	r3, r3
 801a97c:	78b7      	ldrb	r7, [r6, #2]
 801a97e:	b289      	uxth	r1, r1
 801a980:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a984:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a988:	fb03 f901 	mul.w	r9, r3, r1
 801a98c:	011b      	lsls	r3, r3, #4
 801a98e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a992:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801a996:	eba3 0309 	sub.w	r3, r3, r9
 801a99a:	b289      	uxth	r1, r1
 801a99c:	b29b      	uxth	r3, r3
 801a99e:	ebae 0e01 	sub.w	lr, lr, r1
 801a9a2:	435f      	muls	r7, r3
 801a9a4:	fa1f fe8e 	uxth.w	lr, lr
 801a9a8:	fb0e 770a 	mla	r7, lr, sl, r7
 801a9ac:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a9b0:	fb01 770a 	mla	r7, r1, sl, r7
 801a9b4:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a9b8:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a9bc:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a9c0:	f896 8000 	ldrb.w	r8, [r6]
 801a9c4:	7876      	ldrb	r6, [r6, #1]
 801a9c6:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801a9ca:	fb03 f808 	mul.w	r8, r3, r8
 801a9ce:	4373      	muls	r3, r6
 801a9d0:	7856      	ldrb	r6, [r2, #1]
 801a9d2:	fb0e 8807 	mla	r8, lr, r7, r8
 801a9d6:	7817      	ldrb	r7, [r2, #0]
 801a9d8:	fb0e 330c 	mla	r3, lr, ip, r3
 801a9dc:	fb01 8807 	mla	r8, r1, r7, r8
 801a9e0:	7807      	ldrb	r7, [r0, #0]
 801a9e2:	fb01 3306 	mla	r3, r1, r6, r3
 801a9e6:	fb09 8707 	mla	r7, r9, r7, r8
 801a9ea:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a9ee:	ea47 070a 	orr.w	r7, r7, sl
 801a9f2:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a9f6:	fb09 3a0a 	mla	sl, r9, sl, r3
 801a9fa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a9fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aa00:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801aa04:	ea47 070a 	orr.w	r7, r7, sl
 801aa08:	f823 7b02 	strh.w	r7, [r3], #2
 801aa0c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801aa0e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801aa10:	449b      	add	fp, r3
 801aa12:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801aa14:	441d      	add	r5, r3
 801aa16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aa18:	3b01      	subs	r3, #1
 801aa1a:	9309      	str	r3, [sp, #36]	@ 0x24
 801aa1c:	e714      	b.n	801a848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801aa1e:	b149      	cbz	r1, 801aa34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801aa20:	5cba      	ldrb	r2, [r7, r2]
 801aa22:	4660      	mov	r0, ip
 801aa24:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa28:	4422      	add	r2, r4
 801aa2a:	4666      	mov	r6, ip
 801aa2c:	e7a5      	b.n	801a97a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801aa2e:	4660      	mov	r0, ip
 801aa30:	4662      	mov	r2, ip
 801aa32:	e7a2      	b.n	801a97a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801aa34:	4660      	mov	r0, ip
 801aa36:	4662      	mov	r2, ip
 801aa38:	e7f7      	b.n	801aa2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801aa3a:	b00f      	add	sp, #60	@ 0x3c
 801aa3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aa40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801aa40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa44:	b085      	sub	sp, #20
 801aa46:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801aa4a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801aa4e:	9102      	str	r1, [sp, #8]
 801aa50:	2c00      	cmp	r4, #0
 801aa52:	fb04 710c 	mla	r1, r4, ip, r7
 801aa56:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801aa5a:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801aa5e:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801aa62:	eb02 0e01 	add.w	lr, r2, r1
 801aa66:	f2c0 8122 	blt.w	801acae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801aa6a:	45a0      	cmp	r8, r4
 801aa6c:	f340 811f 	ble.w	801acae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801aa70:	2f00      	cmp	r7, #0
 801aa72:	f2c0 811a 	blt.w	801acaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801aa76:	45bc      	cmp	ip, r7
 801aa78:	f340 8117 	ble.w	801acaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801aa7c:	5c52      	ldrb	r2, [r2, r1]
 801aa7e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801aa82:	1c7a      	adds	r2, r7, #1
 801aa84:	f100 8116 	bmi.w	801acb4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801aa88:	4594      	cmp	ip, r2
 801aa8a:	f340 8113 	ble.w	801acb4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801aa8e:	2e00      	cmp	r6, #0
 801aa90:	f000 8112 	beq.w	801acb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801aa94:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801aa98:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801aa9c:	3401      	adds	r4, #1
 801aa9e:	f100 810f 	bmi.w	801acc0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801aaa2:	45a0      	cmp	r8, r4
 801aaa4:	f340 810c 	ble.w	801acc0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801aaa8:	2800      	cmp	r0, #0
 801aaaa:	f000 810c 	beq.w	801acc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801aaae:	2f00      	cmp	r7, #0
 801aab0:	f2c0 8104 	blt.w	801acbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801aab4:	45bc      	cmp	ip, r7
 801aab6:	f340 8101 	ble.w	801acbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801aaba:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801aabe:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801aac2:	3701      	adds	r7, #1
 801aac4:	f100 8102 	bmi.w	801accc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801aac8:	45bc      	cmp	ip, r7
 801aaca:	f340 80ff 	ble.w	801accc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801aace:	2e00      	cmp	r6, #0
 801aad0:	f000 80fe 	beq.w	801acd0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801aad4:	44f4      	add	ip, lr
 801aad6:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801aada:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801aade:	b2b6      	uxth	r6, r6
 801aae0:	b280      	uxth	r0, r0
 801aae2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801aae6:	fb00 fe06 	mul.w	lr, r0, r6
 801aaea:	0136      	lsls	r6, r6, #4
 801aaec:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801aaf0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801aaf4:	eba6 070e 	sub.w	r7, r6, lr
 801aaf8:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801aafc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ab00:	b280      	uxth	r0, r0
 801ab02:	b2bf      	uxth	r7, r7
 801ab04:	1a1b      	subs	r3, r3, r0
 801ab06:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ab0a:	fb0a f607 	mul.w	r6, sl, r7
 801ab0e:	b29b      	uxth	r3, r3
 801ab10:	fb0b 6603 	mla	r6, fp, r3, r6
 801ab14:	fb00 6609 	mla	r6, r0, r9, r6
 801ab18:	fb0e 6608 	mla	r6, lr, r8, r6
 801ab1c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ab20:	9600      	str	r6, [sp, #0]
 801ab22:	2e00      	cmp	r6, #0
 801ab24:	f000 80be 	beq.w	801aca4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801ab28:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ab2c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801ab30:	9e02      	ldr	r6, [sp, #8]
 801ab32:	fb0b fc0c 	mul.w	ip, fp, ip
 801ab36:	fb0b f505 	mul.w	r5, fp, r5
 801ab3a:	8836      	ldrh	r6, [r6, #0]
 801ab3c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ab40:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ab44:	9501      	str	r5, [sp, #4]
 801ab46:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801ab4a:	44dc      	add	ip, fp
 801ab4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ab50:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801ab54:	9503      	str	r5, [sp, #12]
 801ab56:	9d01      	ldr	r5, [sp, #4]
 801ab58:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801ab5c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ab60:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801ab64:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ab68:	fb0a fc0c 	mul.w	ip, sl, ip
 801ab6c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ab70:	fb0a fa01 	mul.w	sl, sl, r1
 801ab74:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ab78:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ab7c:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801ab80:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ab84:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ab88:	4465      	add	r5, ip
 801ab8a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ab8e:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801ab92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ab96:	fb09 fc0c 	mul.w	ip, r9, ip
 801ab9a:	0a2d      	lsrs	r5, r5, #8
 801ab9c:	fb09 f904 	mul.w	r9, r9, r4
 801aba0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801aba4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801aba8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801abac:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801abb0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801abb4:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801abb8:	437d      	muls	r5, r7
 801abba:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801abbe:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801abc2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801abc6:	4461      	add	r1, ip
 801abc8:	fb08 f404 	mul.w	r4, r8, r4
 801abcc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801abd0:	fb08 f802 	mul.w	r8, r8, r2
 801abd4:	0a09      	lsrs	r1, r1, #8
 801abd6:	0a22      	lsrs	r2, r4, #8
 801abd8:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801abdc:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801abe0:	fb07 f70a 	mul.w	r7, r7, sl
 801abe4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801abe8:	4414      	add	r4, r2
 801abea:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801abee:	0a24      	lsrs	r4, r4, #8
 801abf0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801abf4:	9a03      	ldr	r2, [sp, #12]
 801abf6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801abfa:	fb02 5503 	mla	r5, r2, r3, r5
 801abfe:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ac02:	9a00      	ldr	r2, [sp, #0]
 801ac04:	fb04 540e 	mla	r4, r4, lr, r5
 801ac08:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801ac0c:	1235      	asrs	r5, r6, #8
 801ac0e:	fb01 4100 	mla	r1, r1, r0, r4
 801ac12:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ac16:	0a09      	lsrs	r1, r1, #8
 801ac18:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801ac1c:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801ac20:	fb03 7101 	mla	r1, r3, r1, r7
 801ac24:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ac28:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801ac2c:	fb00 e101 	mla	r1, r0, r1, lr
 801ac30:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801ac34:	b287      	uxth	r7, r0
 801ac36:	0a09      	lsrs	r1, r1, #8
 801ac38:	437a      	muls	r2, r7
 801ac3a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ac3e:	1c53      	adds	r3, r2, #1
 801ac40:	4321      	orrs	r1, r4
 801ac42:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ac46:	0c0a      	lsrs	r2, r1, #16
 801ac48:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ac4c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ac50:	b2c8      	uxtb	r0, r1
 801ac52:	fb12 f207 	smulbb	r2, r2, r7
 801ac56:	fb14 f407 	smulbb	r4, r4, r7
 801ac5a:	b2db      	uxtb	r3, r3
 801ac5c:	fb10 f007 	smulbb	r0, r0, r7
 801ac60:	fb05 2503 	mla	r5, r5, r3, r2
 801ac64:	10f2      	asrs	r2, r6, #3
 801ac66:	00f6      	lsls	r6, r6, #3
 801ac68:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ac6c:	b2ad      	uxth	r5, r5
 801ac6e:	b2f6      	uxtb	r6, r6
 801ac70:	fb02 4203 	mla	r2, r2, r3, r4
 801ac74:	fb06 0303 	mla	r3, r6, r3, r0
 801ac78:	b294      	uxth	r4, r2
 801ac7a:	b299      	uxth	r1, r3
 801ac7c:	1c6b      	adds	r3, r5, #1
 801ac7e:	1c62      	adds	r2, r4, #1
 801ac80:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ac84:	1c4b      	adds	r3, r1, #1
 801ac86:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ac8a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ac8e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801ac92:	0952      	lsrs	r2, r2, #5
 801ac94:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ac98:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ac9c:	432b      	orrs	r3, r5
 801ac9e:	4313      	orrs	r3, r2
 801aca0:	9a02      	ldr	r2, [sp, #8]
 801aca2:	8013      	strh	r3, [r2, #0]
 801aca4:	b005      	add	sp, #20
 801aca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801acaa:	2500      	movs	r5, #0
 801acac:	e6e9      	b.n	801aa82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801acae:	2100      	movs	r1, #0
 801acb0:	460d      	mov	r5, r1
 801acb2:	e6f3      	b.n	801aa9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801acb4:	2100      	movs	r1, #0
 801acb6:	e6f1      	b.n	801aa9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801acb8:	4631      	mov	r1, r6
 801acba:	e6ef      	b.n	801aa9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801acbc:	2400      	movs	r4, #0
 801acbe:	e700      	b.n	801aac2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801acc0:	2200      	movs	r2, #0
 801acc2:	4614      	mov	r4, r2
 801acc4:	e70b      	b.n	801aade <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801acc6:	4602      	mov	r2, r0
 801acc8:	4604      	mov	r4, r0
 801acca:	e708      	b.n	801aade <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801accc:	2200      	movs	r2, #0
 801acce:	e706      	b.n	801aade <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801acd0:	4632      	mov	r2, r6
 801acd2:	e704      	b.n	801aade <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801acd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801acd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acd8:	b09f      	sub	sp, #124	@ 0x7c
 801acda:	921b      	str	r2, [sp, #108]	@ 0x6c
 801acdc:	9309      	str	r3, [sp, #36]	@ 0x24
 801acde:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801ace0:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801ace4:	901d      	str	r0, [sp, #116]	@ 0x74
 801ace6:	931c      	str	r3, [sp, #112]	@ 0x70
 801ace8:	6850      	ldr	r0, [r2, #4]
 801acea:	9119      	str	r1, [sp, #100]	@ 0x64
 801acec:	6812      	ldr	r2, [r2, #0]
 801acee:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801acf0:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801acf4:	fb00 1303 	mla	r3, r0, r3, r1
 801acf8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801acfc:	930c      	str	r3, [sp, #48]	@ 0x30
 801acfe:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801ad00:	681b      	ldr	r3, [r3, #0]
 801ad02:	9312      	str	r3, [sp, #72]	@ 0x48
 801ad04:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801ad06:	685e      	ldr	r6, [r3, #4]
 801ad08:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801ad0c:	3604      	adds	r6, #4
 801ad0e:	930d      	str	r3, [sp, #52]	@ 0x34
 801ad10:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801ad12:	2b00      	cmp	r3, #0
 801ad14:	dc03      	bgt.n	801ad1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ad16:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ad18:	2b00      	cmp	r3, #0
 801ad1a:	f340 8387 	ble.w	801b42c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801ad1e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801ad20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ad24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ad28:	1e48      	subs	r0, r1, #1
 801ad2a:	1e57      	subs	r7, r2, #1
 801ad2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ad2e:	2b00      	cmp	r3, #0
 801ad30:	f340 8194 	ble.w	801b05c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801ad34:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801ad36:	142b      	asrs	r3, r5, #16
 801ad38:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ad3c:	d406      	bmi.n	801ad4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ad3e:	4584      	cmp	ip, r0
 801ad40:	da04      	bge.n	801ad4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ad42:	2b00      	cmp	r3, #0
 801ad44:	db02      	blt.n	801ad4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ad46:	42bb      	cmp	r3, r7
 801ad48:	f2c0 8189 	blt.w	801b05e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ad4c:	f11c 0c01 	adds.w	ip, ip, #1
 801ad50:	f100 8177 	bmi.w	801b042 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801ad54:	4561      	cmp	r1, ip
 801ad56:	f2c0 8174 	blt.w	801b042 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801ad5a:	3301      	adds	r3, #1
 801ad5c:	f100 8171 	bmi.w	801b042 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801ad60:	429a      	cmp	r2, r3
 801ad62:	f2c0 816e 	blt.w	801b042 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801ad66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ad68:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801ad6a:	931a      	str	r3, [sp, #104]	@ 0x68
 801ad6c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801ad6e:	2b00      	cmp	r3, #0
 801ad70:	f340 8193 	ble.w	801b09a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801ad74:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ad76:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ad7a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ad7e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ad82:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801ad84:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ad88:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ad8a:	141b      	asrs	r3, r3, #16
 801ad8c:	f100 81d6 	bmi.w	801b13c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ad90:	f100 38ff 	add.w	r8, r0, #4294967295
 801ad94:	4543      	cmp	r3, r8
 801ad96:	f280 81d1 	bge.w	801b13c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ad9a:	f1bc 0f00 	cmp.w	ip, #0
 801ad9e:	f2c0 81cd 	blt.w	801b13c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ada2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ada6:	45c4      	cmp	ip, r8
 801ada8:	f280 81c8 	bge.w	801b13c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801adac:	b200      	sxth	r0, r0
 801adae:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801adb0:	fb0c 3300 	mla	r3, ip, r0, r3
 801adb4:	eb04 0803 	add.w	r8, r4, r3
 801adb8:	5ce3      	ldrb	r3, [r4, r3]
 801adba:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801adbe:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801adc2:	2a00      	cmp	r2, #0
 801adc4:	f000 81af 	beq.w	801b126 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801adc8:	f898 c001 	ldrb.w	ip, [r8, #1]
 801adcc:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801add0:	940e      	str	r4, [sp, #56]	@ 0x38
 801add2:	0e24      	lsrs	r4, r4, #24
 801add4:	9415      	str	r4, [sp, #84]	@ 0x54
 801add6:	b179      	cbz	r1, 801adf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801add8:	eb08 0c00 	add.w	ip, r8, r0
 801addc:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ade0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ade4:	900a      	str	r0, [sp, #40]	@ 0x28
 801ade6:	0e00      	lsrs	r0, r0, #24
 801ade8:	9013      	str	r0, [sp, #76]	@ 0x4c
 801adea:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801adee:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801adf2:	900f      	str	r0, [sp, #60]	@ 0x3c
 801adf4:	0e00      	lsrs	r0, r0, #24
 801adf6:	9016      	str	r0, [sp, #88]	@ 0x58
 801adf8:	b292      	uxth	r2, r2
 801adfa:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801adfc:	b289      	uxth	r1, r1
 801adfe:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ae00:	fb02 f901 	mul.w	r9, r2, r1
 801ae04:	0112      	lsls	r2, r2, #4
 801ae06:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ae0a:	eba2 0809 	sub.w	r8, r2, r9
 801ae0e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ae12:	b289      	uxth	r1, r1
 801ae14:	fa1f f888 	uxth.w	r8, r8
 801ae18:	1a52      	subs	r2, r2, r1
 801ae1a:	fb08 f000 	mul.w	r0, r8, r0
 801ae1e:	b292      	uxth	r2, r2
 801ae20:	fb02 000e 	mla	r0, r2, lr, r0
 801ae24:	fb01 0004 	mla	r0, r1, r4, r0
 801ae28:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801ae2a:	fb09 0004 	mla	r0, r9, r4, r0
 801ae2e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ae32:	2800      	cmp	r0, #0
 801ae34:	f000 80fa 	beq.w	801b02c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801ae38:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801ae3c:	d01b      	beq.n	801ae76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801ae3e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ae42:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ae46:	fb0e fa0a 	mul.w	sl, lr, sl
 801ae4a:	fb0e fe03 	mul.w	lr, lr, r3
 801ae4e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ae52:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ae56:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801ae5a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ae5e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ae62:	4453      	add	r3, sl
 801ae64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ae68:	0a1b      	lsrs	r3, r3, #8
 801ae6a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ae6e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ae72:	ea43 030c 	orr.w	r3, r3, ip
 801ae76:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ae78:	2cff      	cmp	r4, #255	@ 0xff
 801ae7a:	d021      	beq.n	801aec0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801ae7c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ae7e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ae82:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ae84:	fb04 fb0b 	mul.w	fp, r4, fp
 801ae88:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ae8a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ae8e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ae90:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae94:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ae98:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae9c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801aea0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801aea4:	44de      	add	lr, fp
 801aea6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aeaa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aeae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aeb2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801aeb6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801aeba:	ea4e 040a 	orr.w	r4, lr, sl
 801aebe:	940e      	str	r4, [sp, #56]	@ 0x38
 801aec0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801aec2:	2cff      	cmp	r4, #255	@ 0xff
 801aec4:	d021      	beq.n	801af0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801aec6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801aec8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801aecc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801aece:	fb04 fb0b 	mul.w	fp, r4, fp
 801aed2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801aed4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801aed8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801aeda:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801aede:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801aee2:	fb04 fa0a 	mul.w	sl, r4, sl
 801aee6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801aeea:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801aeee:	44de      	add	lr, fp
 801aef0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aef4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aef8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aefc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801af00:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801af04:	ea4e 040a 	orr.w	r4, lr, sl
 801af08:	940a      	str	r4, [sp, #40]	@ 0x28
 801af0a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801af0c:	2cff      	cmp	r4, #255	@ 0xff
 801af0e:	d021      	beq.n	801af54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801af10:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801af12:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801af16:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801af18:	fb04 fb0b 	mul.w	fp, r4, fp
 801af1c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801af1e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801af22:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801af24:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801af28:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801af2c:	fb04 fa0a 	mul.w	sl, r4, sl
 801af30:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801af34:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801af38:	44de      	add	lr, fp
 801af3a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801af3e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801af42:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801af46:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801af4a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801af4e:	ea4e 040a 	orr.w	r4, lr, sl
 801af52:	940f      	str	r4, [sp, #60]	@ 0x3c
 801af54:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801af56:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801af5a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801af5e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801af62:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801af64:	fb08 fc0c 	mul.w	ip, r8, ip
 801af68:	fb02 cc0e 	mla	ip, r2, lr, ip
 801af6c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801af70:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801af72:	fb01 cc0e 	mla	ip, r1, lr, ip
 801af76:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801af7a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801af7c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801af80:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801af84:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801af86:	fb08 f80e 	mul.w	r8, r8, lr
 801af8a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af8e:	fb02 8303 	mla	r3, r2, r3, r8
 801af92:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801af94:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801af98:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801af9c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801af9e:	fb01 330a 	mla	r3, r1, sl, r3
 801afa2:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801afa6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801afa8:	fb09 3901 	mla	r9, r9, r1, r3
 801afac:	883b      	ldrh	r3, [r7, #0]
 801afae:	4342      	muls	r2, r0
 801afb0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801afb4:	1c50      	adds	r0, r2, #1
 801afb6:	1219      	asrs	r1, r3, #8
 801afb8:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801afbc:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801afc0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801afc4:	ea4c 0c09 	orr.w	ip, ip, r9
 801afc8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801afcc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801afd0:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801afd4:	b2c0      	uxtb	r0, r0
 801afd6:	fb12 f204 	smulbb	r2, r2, r4
 801afda:	fa5f fc8c 	uxtb.w	ip, ip
 801afde:	fb1e fe04 	smulbb	lr, lr, r4
 801afe2:	fb01 2100 	mla	r1, r1, r0, r2
 801afe6:	10da      	asrs	r2, r3, #3
 801afe8:	fb1c fc04 	smulbb	ip, ip, r4
 801afec:	00db      	lsls	r3, r3, #3
 801afee:	b289      	uxth	r1, r1
 801aff0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801aff4:	b2db      	uxtb	r3, r3
 801aff6:	fb02 e200 	mla	r2, r2, r0, lr
 801affa:	fb03 c300 	mla	r3, r3, r0, ip
 801affe:	b292      	uxth	r2, r2
 801b000:	fa1f fc83 	uxth.w	ip, r3
 801b004:	1c4b      	adds	r3, r1, #1
 801b006:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b00a:	f10c 0301 	add.w	r3, ip, #1
 801b00e:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b012:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b016:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b01a:	430b      	orrs	r3, r1
 801b01c:	1c51      	adds	r1, r2, #1
 801b01e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b022:	0952      	lsrs	r2, r2, #5
 801b024:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b028:	4313      	orrs	r3, r2
 801b02a:	803b      	strh	r3, [r7, #0]
 801b02c:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b02e:	3702      	adds	r7, #2
 801b030:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b032:	441a      	add	r2, r3
 801b034:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b036:	441d      	add	r5, r3
 801b038:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b03a:	9229      	str	r2, [sp, #164]	@ 0xa4
 801b03c:	3b01      	subs	r3, #1
 801b03e:	931a      	str	r3, [sp, #104]	@ 0x68
 801b040:	e694      	b.n	801ad6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b042:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b044:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b046:	441c      	add	r4, r3
 801b048:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b04a:	441d      	add	r5, r3
 801b04c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b04e:	9429      	str	r4, [sp, #164]	@ 0xa4
 801b050:	3b01      	subs	r3, #1
 801b052:	9309      	str	r3, [sp, #36]	@ 0x24
 801b054:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b056:	3302      	adds	r3, #2
 801b058:	930c      	str	r3, [sp, #48]	@ 0x30
 801b05a:	e667      	b.n	801ad2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b05c:	d024      	beq.n	801b0a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801b05e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b060:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801b062:	3b01      	subs	r3, #1
 801b064:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b066:	fb00 4003 	mla	r0, r0, r3, r4
 801b06a:	1400      	asrs	r0, r0, #16
 801b06c:	f53f ae7b 	bmi.w	801ad66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b070:	3901      	subs	r1, #1
 801b072:	4288      	cmp	r0, r1
 801b074:	f6bf ae77 	bge.w	801ad66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b078:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801b07a:	fb01 5303 	mla	r3, r1, r3, r5
 801b07e:	141b      	asrs	r3, r3, #16
 801b080:	f53f ae71 	bmi.w	801ad66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b084:	3a01      	subs	r2, #1
 801b086:	4293      	cmp	r3, r2
 801b088:	f6bf ae6d 	bge.w	801ad66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b08c:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801b090:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801b094:	f1bb 0f00 	cmp.w	fp, #0
 801b098:	dc70      	bgt.n	801b17c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801b09a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b09c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b0a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b0a2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b0a6:	930c      	str	r3, [sp, #48]	@ 0x30
 801b0a8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b0aa:	2b00      	cmp	r3, #0
 801b0ac:	f340 81be 	ble.w	801b42c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801b0b0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b0b4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b0b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b0ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b0be:	eef0 6a62 	vmov.f32	s13, s5
 801b0c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b0c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b0ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b0ce:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801b0d2:	eef0 6a43 	vmov.f32	s13, s6
 801b0d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b0da:	ee16 5a90 	vmov	r5, s13
 801b0de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b0e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b0e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b0ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b0ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b0f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b0f6:	ee12 2a90 	vmov	r2, s5
 801b0fa:	eef0 2a47 	vmov.f32	s5, s14
 801b0fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801b102:	ee13 2a10 	vmov	r2, s6
 801b106:	932b      	str	r3, [sp, #172]	@ 0xac
 801b108:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b10a:	eeb0 3a67 	vmov.f32	s6, s15
 801b10e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b112:	932c      	str	r3, [sp, #176]	@ 0xb0
 801b114:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b116:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801b118:	3b01      	subs	r3, #1
 801b11a:	9319      	str	r3, [sp, #100]	@ 0x64
 801b11c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b11e:	bf08      	it	eq
 801b120:	4613      	moveq	r3, r2
 801b122:	9309      	str	r3, [sp, #36]	@ 0x24
 801b124:	e5f4      	b.n	801ad10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b126:	2900      	cmp	r1, #0
 801b128:	f43f ae66 	beq.w	801adf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801b12c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b130:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b134:	900a      	str	r0, [sp, #40]	@ 0x28
 801b136:	0e00      	lsrs	r0, r0, #24
 801b138:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b13a:	e65d      	b.n	801adf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801b13c:	f113 0801 	adds.w	r8, r3, #1
 801b140:	f53f af74 	bmi.w	801b02c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b144:	4540      	cmp	r0, r8
 801b146:	f6ff af71 	blt.w	801b02c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b14a:	f11c 0801 	adds.w	r8, ip, #1
 801b14e:	f53f af6d 	bmi.w	801b02c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b152:	45c6      	cmp	lr, r8
 801b154:	f6ff af6a 	blt.w	801b02c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b158:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801b15a:	b200      	sxth	r0, r0
 801b15c:	9302      	str	r3, [sp, #8]
 801b15e:	fa0f f38e 	sxth.w	r3, lr
 801b162:	9000      	str	r0, [sp, #0]
 801b164:	9301      	str	r3, [sp, #4]
 801b166:	4633      	mov	r3, r6
 801b168:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801b16a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b16e:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b172:	4639      	mov	r1, r7
 801b174:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b176:	f7ff fc63 	bl	801aa40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b17a:	e757      	b.n	801b02c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b17c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b17e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b182:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b184:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b188:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b18a:	1427      	asrs	r7, r4, #16
 801b18c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b18e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b192:	142b      	asrs	r3, r5, #16
 801b194:	fb01 7303 	mla	r3, r1, r3, r7
 801b198:	18e7      	adds	r7, r4, r3
 801b19a:	5ce3      	ldrb	r3, [r4, r3]
 801b19c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b1a0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b1a4:	2a00      	cmp	r2, #0
 801b1a6:	f000 8137 	beq.w	801b418 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801b1aa:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b1ae:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b1b2:	9410      	str	r4, [sp, #64]	@ 0x40
 801b1b4:	0e24      	lsrs	r4, r4, #24
 801b1b6:	9417      	str	r4, [sp, #92]	@ 0x5c
 801b1b8:	b170      	cbz	r0, 801b1d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801b1ba:	eb07 0e01 	add.w	lr, r7, r1
 801b1be:	5c79      	ldrb	r1, [r7, r1]
 801b1c0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b1c4:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b1c6:	0e09      	lsrs	r1, r1, #24
 801b1c8:	9114      	str	r1, [sp, #80]	@ 0x50
 801b1ca:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b1ce:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b1d2:	9111      	str	r1, [sp, #68]	@ 0x44
 801b1d4:	0e09      	lsrs	r1, r1, #24
 801b1d6:	9118      	str	r1, [sp, #96]	@ 0x60
 801b1d8:	b292      	uxth	r2, r2
 801b1da:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801b1dc:	b280      	uxth	r0, r0
 801b1de:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b1e0:	fb02 f800 	mul.w	r8, r2, r0
 801b1e4:	0112      	lsls	r2, r2, #4
 801b1e6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b1ea:	eba2 0e08 	sub.w	lr, r2, r8
 801b1ee:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b1f2:	b280      	uxth	r0, r0
 801b1f4:	fa1f fe8e 	uxth.w	lr, lr
 801b1f8:	1a12      	subs	r2, r2, r0
 801b1fa:	fb0e f101 	mul.w	r1, lr, r1
 801b1fe:	b292      	uxth	r2, r2
 801b200:	fb02 110c 	mla	r1, r2, ip, r1
 801b204:	fb00 1104 	mla	r1, r0, r4, r1
 801b208:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b20a:	fb08 1104 	mla	r1, r8, r4, r1
 801b20e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b212:	2900      	cmp	r1, #0
 801b214:	f000 80f5 	beq.w	801b402 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801b218:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801b21c:	d019      	beq.n	801b252 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801b21e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b222:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b226:	fb0c fa0a 	mul.w	sl, ip, sl
 801b22a:	fb0c fc03 	mul.w	ip, ip, r3
 801b22e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b232:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b236:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801b23a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b23e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b242:	4453      	add	r3, sl
 801b244:	0a3f      	lsrs	r7, r7, #8
 801b246:	0a1b      	lsrs	r3, r3, #8
 801b248:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b24c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b250:	433b      	orrs	r3, r7
 801b252:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b254:	2cff      	cmp	r4, #255	@ 0xff
 801b256:	d020      	beq.n	801b29a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801b258:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b25a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b25e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b260:	4367      	muls	r7, r4
 801b262:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b264:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b268:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b26c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b26e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b272:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b276:	fb04 fa0a 	mul.w	sl, r4, sl
 801b27a:	44bc      	add	ip, r7
 801b27c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b280:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b284:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b288:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b28c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b290:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b294:	ea4c 040a 	orr.w	r4, ip, sl
 801b298:	9410      	str	r4, [sp, #64]	@ 0x40
 801b29a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b29c:	2cff      	cmp	r4, #255	@ 0xff
 801b29e:	d020      	beq.n	801b2e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801b2a0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b2a2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b2a6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b2a8:	4367      	muls	r7, r4
 801b2aa:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b2ac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b2b0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b2b4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b2b6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b2ba:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b2be:	fb04 fa0a 	mul.w	sl, r4, sl
 801b2c2:	44bc      	add	ip, r7
 801b2c4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b2c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b2cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b2d0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b2d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b2d8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b2dc:	ea4c 040a 	orr.w	r4, ip, sl
 801b2e0:	940b      	str	r4, [sp, #44]	@ 0x2c
 801b2e2:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b2e4:	2cff      	cmp	r4, #255	@ 0xff
 801b2e6:	d020      	beq.n	801b32a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801b2e8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b2ea:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b2ee:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b2f0:	4367      	muls	r7, r4
 801b2f2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b2f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b2f8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b2fc:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b2fe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b302:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b306:	fb04 fa0a 	mul.w	sl, r4, sl
 801b30a:	44bc      	add	ip, r7
 801b30c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b310:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b314:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b318:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b31c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b320:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b324:	ea4c 040a 	orr.w	r4, ip, sl
 801b328:	9411      	str	r4, [sp, #68]	@ 0x44
 801b32a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b32c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801b330:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b334:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b338:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b33a:	fb0e f707 	mul.w	r7, lr, r7
 801b33e:	fb02 770c 	mla	r7, r2, ip, r7
 801b342:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b346:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b348:	fb00 770c 	mla	r7, r0, ip, r7
 801b34c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b350:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b352:	fb08 770c 	mla	r7, r8, ip, r7
 801b356:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801b35a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b35c:	fb0e fe0c 	mul.w	lr, lr, ip
 801b360:	0a3f      	lsrs	r7, r7, #8
 801b362:	fb02 e303 	mla	r3, r2, r3, lr
 801b366:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b368:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801b36c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b370:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801b372:	fb00 330a 	mla	r3, r0, sl, r3
 801b376:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801b37a:	f8b9 0000 	ldrh.w	r0, [r9]
 801b37e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b382:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b384:	1202      	asrs	r2, r0, #8
 801b386:	434b      	muls	r3, r1
 801b388:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b38c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b390:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b394:	1c59      	adds	r1, r3, #1
 801b396:	ea47 070c 	orr.w	r7, r7, ip
 801b39a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b39e:	0c3b      	lsrs	r3, r7, #16
 801b3a0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b3a4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b3a8:	b2ff      	uxtb	r7, r7
 801b3aa:	fb13 f304 	smulbb	r3, r3, r4
 801b3ae:	b2c9      	uxtb	r1, r1
 801b3b0:	fb1c fc04 	smulbb	ip, ip, r4
 801b3b4:	fb02 3201 	mla	r2, r2, r1, r3
 801b3b8:	10c3      	asrs	r3, r0, #3
 801b3ba:	fb17 f704 	smulbb	r7, r7, r4
 801b3be:	00c0      	lsls	r0, r0, #3
 801b3c0:	b292      	uxth	r2, r2
 801b3c2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801b3c6:	b2c0      	uxtb	r0, r0
 801b3c8:	fb03 c301 	mla	r3, r3, r1, ip
 801b3cc:	f102 0c01 	add.w	ip, r2, #1
 801b3d0:	fb00 7001 	mla	r0, r0, r1, r7
 801b3d4:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b3d8:	b280      	uxth	r0, r0
 801b3da:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801b3de:	b29b      	uxth	r3, r3
 801b3e0:	1c42      	adds	r2, r0, #1
 801b3e2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b3e6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b3ea:	ea42 020c 	orr.w	r2, r2, ip
 801b3ee:	f103 0c01 	add.w	ip, r3, #1
 801b3f2:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b3f6:	095b      	lsrs	r3, r3, #5
 801b3f8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b3fc:	431a      	orrs	r2, r3
 801b3fe:	f8a9 2000 	strh.w	r2, [r9]
 801b402:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b404:	f109 0902 	add.w	r9, r9, #2
 801b408:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b40a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b40e:	441a      	add	r2, r3
 801b410:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b412:	9229      	str	r2, [sp, #164]	@ 0xa4
 801b414:	441d      	add	r5, r3
 801b416:	e63d      	b.n	801b094 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b418:	2800      	cmp	r0, #0
 801b41a:	f43f aedd 	beq.w	801b1d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801b41e:	5c79      	ldrb	r1, [r7, r1]
 801b420:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b424:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b426:	0e09      	lsrs	r1, r1, #24
 801b428:	9114      	str	r1, [sp, #80]	@ 0x50
 801b42a:	e6d5      	b.n	801b1d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801b42c:	b01f      	add	sp, #124	@ 0x7c
 801b42e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b432 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b432:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b436:	b089      	sub	sp, #36	@ 0x24
 801b438:	9101      	str	r1, [sp, #4]
 801b43a:	9801      	ldr	r0, [sp, #4]
 801b43c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801b440:	8800      	ldrh	r0, [r0, #0]
 801b442:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801b446:	1206      	asrs	r6, r0, #8
 801b448:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801b44c:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801b450:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b454:	9602      	str	r6, [sp, #8]
 801b456:	10c6      	asrs	r6, r0, #3
 801b458:	00c0      	lsls	r0, r0, #3
 801b45a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b45e:	b2c0      	uxtb	r0, r0
 801b460:	9603      	str	r6, [sp, #12]
 801b462:	9004      	str	r0, [sp, #16]
 801b464:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801b468:	fb07 100c 	mla	r0, r7, ip, r1
 801b46c:	2f00      	cmp	r7, #0
 801b46e:	eb02 0e00 	add.w	lr, r2, r0
 801b472:	f2c0 810a 	blt.w	801b68a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b476:	45b8      	cmp	r8, r7
 801b478:	f340 8107 	ble.w	801b68a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b47c:	2900      	cmp	r1, #0
 801b47e:	f2c0 8102 	blt.w	801b686 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b482:	458c      	cmp	ip, r1
 801b484:	f340 80ff 	ble.w	801b686 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b488:	5c12      	ldrb	r2, [r2, r0]
 801b48a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b48e:	1c4a      	adds	r2, r1, #1
 801b490:	f100 80fe 	bmi.w	801b690 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b494:	4594      	cmp	ip, r2
 801b496:	f340 80fb 	ble.w	801b690 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b49a:	2d00      	cmp	r5, #0
 801b49c:	f000 80fa 	beq.w	801b694 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b4a0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b4a4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b4a8:	3701      	adds	r7, #1
 801b4aa:	f100 80f7 	bmi.w	801b69c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b4ae:	45b8      	cmp	r8, r7
 801b4b0:	f340 80f4 	ble.w	801b69c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b4b4:	2c00      	cmp	r4, #0
 801b4b6:	f000 80f4 	beq.w	801b6a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b4ba:	2900      	cmp	r1, #0
 801b4bc:	eb0e 020c 	add.w	r2, lr, ip
 801b4c0:	f2c0 80ea 	blt.w	801b698 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b4c4:	458c      	cmp	ip, r1
 801b4c6:	f340 80e7 	ble.w	801b698 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b4ca:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b4ce:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b4d2:	3101      	adds	r1, #1
 801b4d4:	f100 80e8 	bmi.w	801b6a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b4d8:	458c      	cmp	ip, r1
 801b4da:	f340 80e5 	ble.w	801b6a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b4de:	2d00      	cmp	r5, #0
 801b4e0:	f000 80e4 	beq.w	801b6ac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b4e4:	7852      	ldrb	r2, [r2, #1]
 801b4e6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b4ea:	0e0b      	lsrs	r3, r1, #24
 801b4ec:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801b4f0:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b4f4:	9300      	str	r3, [sp, #0]
 801b4f6:	b2a4      	uxth	r4, r4
 801b4f8:	b2ab      	uxth	r3, r5
 801b4fa:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801b4fe:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b502:	fb03 f904 	mul.w	r9, r3, r4
 801b506:	011b      	lsls	r3, r3, #4
 801b508:	fb0a f505 	mul.w	r5, sl, r5
 801b50c:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b510:	eba3 0e09 	sub.w	lr, r3, r9
 801b514:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801b518:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801b51c:	0a28      	lsrs	r0, r5, #8
 801b51e:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801b522:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b526:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801b52a:	fb0a f303 	mul.w	r3, sl, r3
 801b52e:	fb08 f707 	mul.w	r7, r8, r7
 801b532:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b536:	4405      	add	r5, r0
 801b538:	fb08 fc0c 	mul.w	ip, r8, ip
 801b53c:	b2a4      	uxth	r4, r4
 801b53e:	0a2d      	lsrs	r5, r5, #8
 801b540:	fa1f fe8e 	uxth.w	lr, lr
 801b544:	1b12      	subs	r2, r2, r4
 801b546:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801b54a:	b292      	uxth	r2, r2
 801b54c:	9005      	str	r0, [sp, #20]
 801b54e:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801b552:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b556:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b55a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b55e:	0a1b      	lsrs	r3, r3, #8
 801b560:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801b564:	9306      	str	r3, [sp, #24]
 801b566:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801b56a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801b56e:	4460      	add	r0, ip
 801b570:	fb0b f303 	mul.w	r3, fp, r3
 801b574:	fb0b f606 	mul.w	r6, fp, r6
 801b578:	0a00      	lsrs	r0, r0, #8
 801b57a:	0a1d      	lsrs	r5, r3, #8
 801b57c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801b580:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801b584:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b588:	441d      	add	r5, r3
 801b58a:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801b58e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b592:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801b596:	0a2d      	lsrs	r5, r5, #8
 801b598:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b59c:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801b5a0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b5a4:	0a36      	lsrs	r6, r6, #8
 801b5a6:	0a1b      	lsrs	r3, r3, #8
 801b5a8:	fb05 f50e 	mul.w	r5, r5, lr
 801b5ac:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801b5b0:	9307      	str	r3, [sp, #28]
 801b5b2:	0e0b      	lsrs	r3, r1, #24
 801b5b4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b5b8:	fb0e f606 	mul.w	r6, lr, r6
 801b5bc:	435f      	muls	r7, r3
 801b5be:	4359      	muls	r1, r3
 801b5c0:	9b05      	ldr	r3, [sp, #20]
 801b5c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b5c6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b5ca:	fb03 5502 	mla	r5, r3, r2, r5
 801b5ce:	9b06      	ldr	r3, [sp, #24]
 801b5d0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b5d4:	fb0e fe0b 	mul.w	lr, lr, fp
 801b5d8:	44bc      	add	ip, r7
 801b5da:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801b5de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b5e2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b5e6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b5ea:	0a09      	lsrs	r1, r1, #8
 801b5ec:	fb0c 5509 	mla	r5, ip, r9, r5
 801b5f0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b5f4:	fb00 5504 	mla	r5, r0, r4, r5
 801b5f8:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801b5fc:	9b07      	ldr	r3, [sp, #28]
 801b5fe:	fb02 6000 	mla	r0, r2, r0, r6
 801b602:	0a2d      	lsrs	r5, r5, #8
 801b604:	fb02 e20a 	mla	r2, r2, sl, lr
 801b608:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b60c:	fb09 0001 	mla	r0, r9, r1, r0
 801b610:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b614:	fb04 0003 	mla	r0, r4, r3, r0
 801b618:	9b00      	ldr	r3, [sp, #0]
 801b61a:	fb04 2408 	mla	r4, r4, r8, r2
 801b61e:	9a04      	ldr	r2, [sp, #16]
 801b620:	0a00      	lsrs	r0, r0, #8
 801b622:	fb09 4903 	mla	r9, r9, r3, r4
 801b626:	9b02      	ldr	r3, [sp, #8]
 801b628:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801b62c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b630:	4305      	orrs	r5, r0
 801b632:	fa5f f989 	uxtb.w	r9, r9
 801b636:	fb03 f109 	mul.w	r1, r3, r9
 801b63a:	9b03      	ldr	r3, [sp, #12]
 801b63c:	fb03 f309 	mul.w	r3, r3, r9
 801b640:	fb02 f909 	mul.w	r9, r2, r9
 801b644:	1c4a      	adds	r2, r1, #1
 801b646:	1c58      	adds	r0, r3, #1
 801b648:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b64c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b650:	0c2a      	lsrs	r2, r5, #16
 801b652:	0a2b      	lsrs	r3, r5, #8
 801b654:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b658:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b65c:	0212      	lsls	r2, r2, #8
 801b65e:	00db      	lsls	r3, r3, #3
 801b660:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801b664:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b668:	4313      	orrs	r3, r2
 801b66a:	f109 0201 	add.w	r2, r9, #1
 801b66e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b672:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b676:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b67a:	431d      	orrs	r5, r3
 801b67c:	9b01      	ldr	r3, [sp, #4]
 801b67e:	801d      	strh	r5, [r3, #0]
 801b680:	b009      	add	sp, #36	@ 0x24
 801b682:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b686:	2000      	movs	r0, #0
 801b688:	e701      	b.n	801b48e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b68a:	2600      	movs	r6, #0
 801b68c:	4630      	mov	r0, r6
 801b68e:	e70b      	b.n	801b4a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b690:	2600      	movs	r6, #0
 801b692:	e709      	b.n	801b4a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b694:	462e      	mov	r6, r5
 801b696:	e707      	b.n	801b4a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b698:	2700      	movs	r7, #0
 801b69a:	e71a      	b.n	801b4d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b69c:	2100      	movs	r1, #0
 801b69e:	460f      	mov	r7, r1
 801b6a0:	e723      	b.n	801b4ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b6a2:	4621      	mov	r1, r4
 801b6a4:	4627      	mov	r7, r4
 801b6a6:	e720      	b.n	801b4ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b6a8:	2100      	movs	r1, #0
 801b6aa:	e71e      	b.n	801b4ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b6ac:	4629      	mov	r1, r5
 801b6ae:	e71c      	b.n	801b4ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b6b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b6b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6b4:	b09b      	sub	sp, #108	@ 0x6c
 801b6b6:	9218      	str	r2, [sp, #96]	@ 0x60
 801b6b8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b6ba:	9019      	str	r0, [sp, #100]	@ 0x64
 801b6bc:	9116      	str	r1, [sp, #88]	@ 0x58
 801b6be:	6850      	ldr	r0, [r2, #4]
 801b6c0:	9307      	str	r3, [sp, #28]
 801b6c2:	6812      	ldr	r2, [r2, #0]
 801b6c4:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801b6c6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801b6ca:	fb00 1303 	mla	r3, r0, r3, r1
 801b6ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b6d2:	930a      	str	r3, [sp, #40]	@ 0x28
 801b6d4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b6d6:	681b      	ldr	r3, [r3, #0]
 801b6d8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b6da:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b6dc:	685e      	ldr	r6, [r3, #4]
 801b6de:	3604      	adds	r6, #4
 801b6e0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801b6e2:	2b00      	cmp	r3, #0
 801b6e4:	dc03      	bgt.n	801b6ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b6e6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b6e8:	2b00      	cmp	r3, #0
 801b6ea:	f340 8373 	ble.w	801bdd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b6ee:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b6f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b6f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b6f8:	1e48      	subs	r0, r1, #1
 801b6fa:	1e57      	subs	r7, r2, #1
 801b6fc:	9b07      	ldr	r3, [sp, #28]
 801b6fe:	2b00      	cmp	r3, #0
 801b700:	f340 818f 	ble.w	801ba22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801b704:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801b706:	142b      	asrs	r3, r5, #16
 801b708:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b70c:	d406      	bmi.n	801b71c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b70e:	4584      	cmp	ip, r0
 801b710:	da04      	bge.n	801b71c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b712:	2b00      	cmp	r3, #0
 801b714:	db02      	blt.n	801b71c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b716:	42bb      	cmp	r3, r7
 801b718:	f2c0 8184 	blt.w	801ba24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b71c:	f11c 0c01 	adds.w	ip, ip, #1
 801b720:	f100 8172 	bmi.w	801ba08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b724:	4561      	cmp	r1, ip
 801b726:	f2c0 816f 	blt.w	801ba08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b72a:	3301      	adds	r3, #1
 801b72c:	f100 816c 	bmi.w	801ba08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b730:	429a      	cmp	r2, r3
 801b732:	f2c0 8169 	blt.w	801ba08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b736:	9b07      	ldr	r3, [sp, #28]
 801b738:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801b73a:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b73c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801b73e:	2b00      	cmp	r3, #0
 801b740:	f340 818e 	ble.w	801ba60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801b744:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801b746:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b74a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b74e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b752:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b754:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b758:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801b75a:	141b      	asrs	r3, r3, #16
 801b75c:	f100 81d1 	bmi.w	801bb02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b760:	f101 38ff 	add.w	r8, r1, #4294967295
 801b764:	4543      	cmp	r3, r8
 801b766:	f280 81cc 	bge.w	801bb02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b76a:	f1bc 0f00 	cmp.w	ip, #0
 801b76e:	f2c0 81c8 	blt.w	801bb02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b772:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b776:	45c4      	cmp	ip, r8
 801b778:	f280 81c3 	bge.w	801bb02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b77c:	b209      	sxth	r1, r1
 801b77e:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b780:	fb0c 3301 	mla	r3, ip, r1, r3
 801b784:	eb04 0803 	add.w	r8, r4, r3
 801b788:	5ce3      	ldrb	r3, [r4, r3]
 801b78a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b78e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b792:	2a00      	cmp	r2, #0
 801b794:	f000 81aa 	beq.w	801baec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801b798:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b79c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b7a0:	940b      	str	r4, [sp, #44]	@ 0x2c
 801b7a2:	0e24      	lsrs	r4, r4, #24
 801b7a4:	9412      	str	r4, [sp, #72]	@ 0x48
 801b7a6:	b178      	cbz	r0, 801b7c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801b7a8:	eb08 0c01 	add.w	ip, r8, r1
 801b7ac:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b7b0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b7b4:	9108      	str	r1, [sp, #32]
 801b7b6:	0e09      	lsrs	r1, r1, #24
 801b7b8:	9110      	str	r1, [sp, #64]	@ 0x40
 801b7ba:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b7be:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b7c2:	910c      	str	r1, [sp, #48]	@ 0x30
 801b7c4:	0e09      	lsrs	r1, r1, #24
 801b7c6:	9113      	str	r1, [sp, #76]	@ 0x4c
 801b7c8:	b292      	uxth	r2, r2
 801b7ca:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801b7cc:	b280      	uxth	r0, r0
 801b7ce:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b7d0:	fb02 f900 	mul.w	r9, r2, r0
 801b7d4:	0112      	lsls	r2, r2, #4
 801b7d6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b7da:	eba2 0809 	sub.w	r8, r2, r9
 801b7de:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b7e2:	b280      	uxth	r0, r0
 801b7e4:	fa1f f888 	uxth.w	r8, r8
 801b7e8:	1a12      	subs	r2, r2, r0
 801b7ea:	fb08 f101 	mul.w	r1, r8, r1
 801b7ee:	b292      	uxth	r2, r2
 801b7f0:	fb02 110e 	mla	r1, r2, lr, r1
 801b7f4:	fb00 1104 	mla	r1, r0, r4, r1
 801b7f8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b7fa:	fb09 1104 	mla	r1, r9, r4, r1
 801b7fe:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b802:	2900      	cmp	r1, #0
 801b804:	f000 80f5 	beq.w	801b9f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b808:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801b80c:	d01b      	beq.n	801b846 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b80e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b812:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b816:	fb0e fa0a 	mul.w	sl, lr, sl
 801b81a:	fb0e fe03 	mul.w	lr, lr, r3
 801b81e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b822:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b826:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801b82a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b82e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b832:	4453      	add	r3, sl
 801b834:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b838:	0a1b      	lsrs	r3, r3, #8
 801b83a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b83e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b842:	ea43 030c 	orr.w	r3, r3, ip
 801b846:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b848:	2cff      	cmp	r4, #255	@ 0xff
 801b84a:	d021      	beq.n	801b890 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801b84c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b84e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b852:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b854:	fb04 fb0b 	mul.w	fp, r4, fp
 801b858:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b85a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b85e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b860:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b864:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b868:	fb04 fa0a 	mul.w	sl, r4, sl
 801b86c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b870:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b874:	44de      	add	lr, fp
 801b876:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b87a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b87e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b882:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b886:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b88a:	ea4e 040a 	orr.w	r4, lr, sl
 801b88e:	940b      	str	r4, [sp, #44]	@ 0x2c
 801b890:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b892:	2cff      	cmp	r4, #255	@ 0xff
 801b894:	d021      	beq.n	801b8da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b896:	9c08      	ldr	r4, [sp, #32]
 801b898:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b89c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b89e:	fb04 fb0b 	mul.w	fp, r4, fp
 801b8a2:	9c08      	ldr	r4, [sp, #32]
 801b8a4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b8a8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b8aa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b8ae:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b8b2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b8b6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b8ba:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b8be:	44de      	add	lr, fp
 801b8c0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b8c4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b8c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b8cc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b8d0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b8d4:	ea4e 040a 	orr.w	r4, lr, sl
 801b8d8:	9408      	str	r4, [sp, #32]
 801b8da:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b8dc:	2cff      	cmp	r4, #255	@ 0xff
 801b8de:	d021      	beq.n	801b924 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b8e0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801b8e2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b8e6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b8e8:	fb04 fb0b 	mul.w	fp, r4, fp
 801b8ec:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801b8ee:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b8f2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b8f4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b8f8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b8fc:	fb04 fa0a 	mul.w	sl, r4, sl
 801b900:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b904:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b908:	44de      	add	lr, fp
 801b90a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b90e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b912:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b916:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b91a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b91e:	ea4e 040a 	orr.w	r4, lr, sl
 801b922:	940c      	str	r4, [sp, #48]	@ 0x30
 801b924:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b926:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801b92a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b92e:	43c9      	mvns	r1, r1
 801b930:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b934:	9c08      	ldr	r4, [sp, #32]
 801b936:	fb08 fc0c 	mul.w	ip, r8, ip
 801b93a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b93e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b942:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801b944:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b948:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b94c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b94e:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b952:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801b956:	fb08 f80e 	mul.w	r8, r8, lr
 801b95a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b95e:	fa5f fe81 	uxtb.w	lr, r1
 801b962:	fb02 8303 	mla	r3, r2, r3, r8
 801b966:	9a08      	ldr	r2, [sp, #32]
 801b968:	f8b7 8000 	ldrh.w	r8, [r7]
 801b96c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b970:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b974:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801b976:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801b97a:	fb00 330a 	mla	r3, r0, sl, r3
 801b97e:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801b982:	ea4f 2228 	mov.w	r2, r8, asr #8
 801b986:	fb09 3900 	mla	r9, r9, r0, r3
 801b98a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801b98e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b992:	b2c9      	uxtb	r1, r1
 801b994:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b998:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801b99c:	fb02 f20e 	mul.w	r2, r2, lr
 801b9a0:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b9a4:	fb00 f00e 	mul.w	r0, r0, lr
 801b9a8:	1c53      	adds	r3, r2, #1
 801b9aa:	fb01 f10e 	mul.w	r1, r1, lr
 801b9ae:	ea4c 0c09 	orr.w	ip, ip, r9
 801b9b2:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b9b6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801b9ba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b9be:	4a60      	ldr	r2, [pc, #384]	@ (801bb40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801b9c0:	b2db      	uxtb	r3, r3
 801b9c2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801b9c6:	1c43      	adds	r3, r0, #1
 801b9c8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b9cc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801b9d0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b9d4:	00db      	lsls	r3, r3, #3
 801b9d6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b9da:	4313      	orrs	r3, r2
 801b9dc:	1c4a      	adds	r2, r1, #1
 801b9de:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b9e2:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b9e6:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b9ea:	ea4c 0c03 	orr.w	ip, ip, r3
 801b9ee:	f8a7 c000 	strh.w	ip, [r7]
 801b9f2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801b9f4:	3702      	adds	r7, #2
 801b9f6:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801b9f8:	441a      	add	r2, r3
 801b9fa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b9fc:	441d      	add	r5, r3
 801b9fe:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ba00:	9225      	str	r2, [sp, #148]	@ 0x94
 801ba02:	3b01      	subs	r3, #1
 801ba04:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ba06:	e699      	b.n	801b73c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ba08:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ba0a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ba0c:	441c      	add	r4, r3
 801ba0e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ba10:	441d      	add	r5, r3
 801ba12:	9b07      	ldr	r3, [sp, #28]
 801ba14:	9425      	str	r4, [sp, #148]	@ 0x94
 801ba16:	3b01      	subs	r3, #1
 801ba18:	9307      	str	r3, [sp, #28]
 801ba1a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ba1c:	3302      	adds	r3, #2
 801ba1e:	930a      	str	r3, [sp, #40]	@ 0x28
 801ba20:	e66c      	b.n	801b6fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ba22:	d024      	beq.n	801ba6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801ba24:	9b07      	ldr	r3, [sp, #28]
 801ba26:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801ba28:	3b01      	subs	r3, #1
 801ba2a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ba2c:	fb00 4003 	mla	r0, r0, r3, r4
 801ba30:	1400      	asrs	r0, r0, #16
 801ba32:	f53f ae80 	bmi.w	801b736 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ba36:	3901      	subs	r1, #1
 801ba38:	4288      	cmp	r0, r1
 801ba3a:	f6bf ae7c 	bge.w	801b736 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ba3e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801ba40:	fb01 5303 	mla	r3, r1, r3, r5
 801ba44:	141b      	asrs	r3, r3, #16
 801ba46:	f53f ae76 	bmi.w	801b736 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ba4a:	3a01      	subs	r2, #1
 801ba4c:	4293      	cmp	r3, r2
 801ba4e:	f6bf ae72 	bge.w	801b736 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ba52:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ba56:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801ba5a:	f1bb 0f00 	cmp.w	fp, #0
 801ba5e:	dc71      	bgt.n	801bb44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ba60:	9b07      	ldr	r3, [sp, #28]
 801ba62:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ba66:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ba68:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ba6c:	930a      	str	r3, [sp, #40]	@ 0x28
 801ba6e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ba70:	2b00      	cmp	r3, #0
 801ba72:	f340 81af 	ble.w	801bdd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801ba76:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ba7a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ba7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba84:	eef0 6a62 	vmov.f32	s13, s5
 801ba88:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ba8c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba94:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801ba98:	eef0 6a43 	vmov.f32	s13, s6
 801ba9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801baa0:	ee16 5a90 	vmov	r5, s13
 801baa4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801baa8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801baac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bab0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bab4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bab8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801babc:	ee12 2a90 	vmov	r2, s5
 801bac0:	eef0 2a47 	vmov.f32	s5, s14
 801bac4:	fb92 f3f3 	sdiv	r3, r2, r3
 801bac8:	ee13 2a10 	vmov	r2, s6
 801bacc:	9327      	str	r3, [sp, #156]	@ 0x9c
 801bace:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bad0:	eeb0 3a67 	vmov.f32	s6, s15
 801bad4:	fb92 f3f3 	sdiv	r3, r2, r3
 801bad8:	9328      	str	r3, [sp, #160]	@ 0xa0
 801bada:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801badc:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801bade:	3b01      	subs	r3, #1
 801bae0:	9316      	str	r3, [sp, #88]	@ 0x58
 801bae2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bae4:	bf08      	it	eq
 801bae6:	4613      	moveq	r3, r2
 801bae8:	9307      	str	r3, [sp, #28]
 801baea:	e5f9      	b.n	801b6e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801baec:	2800      	cmp	r0, #0
 801baee:	f43f ae6b 	beq.w	801b7c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801baf2:	f818 1001 	ldrb.w	r1, [r8, r1]
 801baf6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bafa:	9108      	str	r1, [sp, #32]
 801bafc:	0e09      	lsrs	r1, r1, #24
 801bafe:	9110      	str	r1, [sp, #64]	@ 0x40
 801bb00:	e662      	b.n	801b7c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801bb02:	f113 0801 	adds.w	r8, r3, #1
 801bb06:	f53f af74 	bmi.w	801b9f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801bb0a:	4541      	cmp	r1, r8
 801bb0c:	f6ff af71 	blt.w	801b9f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801bb10:	f11c 0801 	adds.w	r8, ip, #1
 801bb14:	f53f af6d 	bmi.w	801b9f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801bb18:	45c6      	cmp	lr, r8
 801bb1a:	f6ff af6a 	blt.w	801b9f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801bb1e:	b209      	sxth	r1, r1
 801bb20:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801bb24:	fa0f f38e 	sxth.w	r3, lr
 801bb28:	9100      	str	r1, [sp, #0]
 801bb2a:	4639      	mov	r1, r7
 801bb2c:	9301      	str	r3, [sp, #4]
 801bb2e:	4633      	mov	r3, r6
 801bb30:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801bb34:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801bb36:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801bb38:	f7ff fc7b 	bl	801b432 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801bb3c:	e759      	b.n	801b9f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801bb3e:	bf00      	nop
 801bb40:	fffff800 	.word	0xfffff800
 801bb44:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801bb46:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bb4a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801bb4c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bb50:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bb52:	1427      	asrs	r7, r4, #16
 801bb54:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801bb56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bb5a:	142b      	asrs	r3, r5, #16
 801bb5c:	fb01 7303 	mla	r3, r1, r3, r7
 801bb60:	18e7      	adds	r7, r4, r3
 801bb62:	5ce3      	ldrb	r3, [r4, r3]
 801bb64:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bb68:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bb6c:	2a00      	cmp	r2, #0
 801bb6e:	f000 8127 	beq.w	801bdc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801bb72:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bb76:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bb7a:	940d      	str	r4, [sp, #52]	@ 0x34
 801bb7c:	0e24      	lsrs	r4, r4, #24
 801bb7e:	9414      	str	r4, [sp, #80]	@ 0x50
 801bb80:	b170      	cbz	r0, 801bba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bb82:	eb07 0e01 	add.w	lr, r7, r1
 801bb86:	5c79      	ldrb	r1, [r7, r1]
 801bb88:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb8c:	9109      	str	r1, [sp, #36]	@ 0x24
 801bb8e:	0e09      	lsrs	r1, r1, #24
 801bb90:	9111      	str	r1, [sp, #68]	@ 0x44
 801bb92:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bb96:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb9a:	910e      	str	r1, [sp, #56]	@ 0x38
 801bb9c:	0e09      	lsrs	r1, r1, #24
 801bb9e:	9115      	str	r1, [sp, #84]	@ 0x54
 801bba0:	b292      	uxth	r2, r2
 801bba2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bba4:	b280      	uxth	r0, r0
 801bba6:	fb02 f800 	mul.w	r8, r2, r0
 801bbaa:	0112      	lsls	r2, r2, #4
 801bbac:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bbb0:	eba2 0e08 	sub.w	lr, r2, r8
 801bbb4:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801bbb8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bbba:	b280      	uxth	r0, r0
 801bbbc:	fa1f fe8e 	uxth.w	lr, lr
 801bbc0:	1a09      	subs	r1, r1, r0
 801bbc2:	fb0e f202 	mul.w	r2, lr, r2
 801bbc6:	b289      	uxth	r1, r1
 801bbc8:	fb01 220c 	mla	r2, r1, ip, r2
 801bbcc:	fb00 2204 	mla	r2, r0, r4, r2
 801bbd0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bbd2:	fb08 2204 	mla	r2, r8, r4, r2
 801bbd6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801bbda:	2a00      	cmp	r2, #0
 801bbdc:	f000 80e5 	beq.w	801bdaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801bbe0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801bbe4:	d019      	beq.n	801bc1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801bbe6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bbea:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bbee:	fb0c fa0a 	mul.w	sl, ip, sl
 801bbf2:	fb0c fc03 	mul.w	ip, ip, r3
 801bbf6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bbfa:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bbfe:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801bc02:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bc06:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bc0a:	4453      	add	r3, sl
 801bc0c:	0a3f      	lsrs	r7, r7, #8
 801bc0e:	0a1b      	lsrs	r3, r3, #8
 801bc10:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bc14:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bc18:	433b      	orrs	r3, r7
 801bc1a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bc1c:	2cff      	cmp	r4, #255	@ 0xff
 801bc1e:	d020      	beq.n	801bc62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801bc20:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bc22:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bc26:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bc28:	4367      	muls	r7, r4
 801bc2a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bc2c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc30:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bc34:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bc36:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bc3a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc3e:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc42:	44bc      	add	ip, r7
 801bc44:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bc48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc4c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc50:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc58:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bc5c:	ea4c 040a 	orr.w	r4, ip, sl
 801bc60:	940d      	str	r4, [sp, #52]	@ 0x34
 801bc62:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bc64:	2cff      	cmp	r4, #255	@ 0xff
 801bc66:	d020      	beq.n	801bcaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801bc68:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801bc6a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bc6e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bc70:	4367      	muls	r7, r4
 801bc72:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801bc74:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc78:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bc7c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bc7e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bc82:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc86:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc8a:	44bc      	add	ip, r7
 801bc8c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bc90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc94:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc98:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bca0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bca4:	ea4c 040a 	orr.w	r4, ip, sl
 801bca8:	9409      	str	r4, [sp, #36]	@ 0x24
 801bcaa:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bcac:	2cff      	cmp	r4, #255	@ 0xff
 801bcae:	d020      	beq.n	801bcf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801bcb0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801bcb2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bcb6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bcb8:	4367      	muls	r7, r4
 801bcba:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801bcbc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bcc0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bcc4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bcc6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bcca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bcce:	fb04 fa0a 	mul.w	sl, r4, sl
 801bcd2:	44bc      	add	ip, r7
 801bcd4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bcd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bcdc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bce0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bce4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bce8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bcec:	ea4c 040a 	orr.w	r4, ip, sl
 801bcf0:	940e      	str	r4, [sp, #56]	@ 0x38
 801bcf2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bcf4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801bcf8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bcfc:	43d2      	mvns	r2, r2
 801bcfe:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bd02:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801bd04:	b2d2      	uxtb	r2, r2
 801bd06:	fb0e f707 	mul.w	r7, lr, r7
 801bd0a:	fb01 770c 	mla	r7, r1, ip, r7
 801bd0e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bd12:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801bd14:	fb00 770c 	mla	r7, r0, ip, r7
 801bd18:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bd1c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bd1e:	fb08 770c 	mla	r7, r8, ip, r7
 801bd22:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801bd26:	fb0e fe0c 	mul.w	lr, lr, ip
 801bd2a:	0a3f      	lsrs	r7, r7, #8
 801bd2c:	fb01 e303 	mla	r3, r1, r3, lr
 801bd30:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801bd32:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801bd36:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801bd3a:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801bd3c:	fb00 330a 	mla	r3, r0, sl, r3
 801bd40:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801bd44:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bd48:	f8b9 3000 	ldrh.w	r3, [r9]
 801bd4c:	1218      	asrs	r0, r3, #8
 801bd4e:	10d9      	asrs	r1, r3, #3
 801bd50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd54:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801bd58:	00db      	lsls	r3, r3, #3
 801bd5a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801bd5e:	4350      	muls	r0, r2
 801bd60:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bd64:	b2db      	uxtb	r3, r3
 801bd66:	4351      	muls	r1, r2
 801bd68:	ea47 070c 	orr.w	r7, r7, ip
 801bd6c:	4353      	muls	r3, r2
 801bd6e:	1c42      	adds	r2, r0, #1
 801bd70:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bd74:	0c3a      	lsrs	r2, r7, #16
 801bd76:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bd7a:	4a18      	ldr	r2, [pc, #96]	@ (801bddc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801bd7c:	b2c0      	uxtb	r0, r0
 801bd7e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801bd82:	1c4a      	adds	r2, r1, #1
 801bd84:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bd88:	0a3a      	lsrs	r2, r7, #8
 801bd8a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bd8e:	00c9      	lsls	r1, r1, #3
 801bd90:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801bd94:	4301      	orrs	r1, r0
 801bd96:	1c58      	adds	r0, r3, #1
 801bd98:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bd9c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801bda0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801bda4:	4308      	orrs	r0, r1
 801bda6:	f8a9 0000 	strh.w	r0, [r9]
 801bdaa:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801bdac:	f109 0902 	add.w	r9, r9, #2
 801bdb0:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801bdb2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bdb6:	441a      	add	r2, r3
 801bdb8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bdba:	9225      	str	r2, [sp, #148]	@ 0x94
 801bdbc:	441d      	add	r5, r3
 801bdbe:	e64c      	b.n	801ba5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801bdc0:	2800      	cmp	r0, #0
 801bdc2:	f43f aeed 	beq.w	801bba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bdc6:	5c79      	ldrb	r1, [r7, r1]
 801bdc8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bdcc:	9109      	str	r1, [sp, #36]	@ 0x24
 801bdce:	0e09      	lsrs	r1, r1, #24
 801bdd0:	9111      	str	r1, [sp, #68]	@ 0x44
 801bdd2:	e6e5      	b.n	801bba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bdd4:	b01b      	add	sp, #108	@ 0x6c
 801bdd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bdda:	bf00      	nop
 801bddc:	fffff800 	.word	0xfffff800

0801bde0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801bde0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bde4:	b085      	sub	sp, #20
 801bde6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801bdea:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801bdee:	2800      	cmp	r0, #0
 801bdf0:	9103      	str	r1, [sp, #12]
 801bdf2:	fb00 7406 	mla	r4, r0, r6, r7
 801bdf6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801bdfa:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801bdfe:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801be02:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801be06:	eb03 0904 	add.w	r9, r3, r4
 801be0a:	9501      	str	r5, [sp, #4]
 801be0c:	f2c0 8150 	blt.w	801c0b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801be10:	4583      	cmp	fp, r0
 801be12:	f340 814d 	ble.w	801c0b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801be16:	2f00      	cmp	r7, #0
 801be18:	f2c0 8146 	blt.w	801c0a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801be1c:	42be      	cmp	r6, r7
 801be1e:	f340 8143 	ble.w	801c0a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801be22:	f813 c004 	ldrb.w	ip, [r3, r4]
 801be26:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801be2a:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801be2e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801be32:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801be36:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801be3a:	4355      	muls	r5, r2
 801be3c:	fb0c f203 	mul.w	r2, ip, r3
 801be40:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801be44:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801be48:	441d      	add	r5, r3
 801be4a:	f102 0320 	add.w	r3, r2, #32
 801be4e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801be52:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801be56:	0a1b      	lsrs	r3, r3, #8
 801be58:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801be5c:	431c      	orrs	r4, r3
 801be5e:	1c7b      	adds	r3, r7, #1
 801be60:	f100 812b 	bmi.w	801c0ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801be64:	429e      	cmp	r6, r3
 801be66:	f340 8128 	ble.w	801c0ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801be6a:	2900      	cmp	r1, #0
 801be6c:	f000 8128 	beq.w	801c0c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801be70:	9a01      	ldr	r2, [sp, #4]
 801be72:	f899 3001 	ldrb.w	r3, [r9, #1]
 801be76:	8855      	ldrh	r5, [r2, #2]
 801be78:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801be7c:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801be80:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801be84:	fb08 f802 	mul.w	r8, r8, r2
 801be88:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801be8c:	435d      	muls	r5, r3
 801be8e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801be92:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801be96:	44d0      	add	r8, sl
 801be98:	f105 0a20 	add.w	sl, r5, #32
 801be9c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801bea0:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bea4:	0a2d      	lsrs	r5, r5, #8
 801bea6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801beaa:	432a      	orrs	r2, r5
 801beac:	3001      	adds	r0, #1
 801beae:	f100 810d 	bmi.w	801c0cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801beb2:	4583      	cmp	fp, r0
 801beb4:	f340 810a 	ble.w	801c0cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801beb8:	f1be 0f00 	cmp.w	lr, #0
 801bebc:	f000 810b 	beq.w	801c0d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801bec0:	2f00      	cmp	r7, #0
 801bec2:	f2c0 8100 	blt.w	801c0c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bec6:	42be      	cmp	r6, r7
 801bec8:	f340 80fd 	ble.w	801c0c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801becc:	9801      	ldr	r0, [sp, #4]
 801bece:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801bed2:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bed6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801beda:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bede:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801bee2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801bee6:	fb0a fa00 	mul.w	sl, sl, r0
 801beea:	fb05 f808 	mul.w	r8, r5, r8
 801beee:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801bef2:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801bef6:	4482      	add	sl, r0
 801bef8:	f108 0020 	add.w	r0, r8, #32
 801befc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bf00:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801bf04:	0a00      	lsrs	r0, r0, #8
 801bf06:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bf0a:	ea4b 0b00 	orr.w	fp, fp, r0
 801bf0e:	3701      	adds	r7, #1
 801bf10:	f100 80e6 	bmi.w	801c0e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bf14:	42be      	cmp	r6, r7
 801bf16:	f340 80e3 	ble.w	801c0e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bf1a:	2900      	cmp	r1, #0
 801bf1c:	f000 80e3 	beq.w	801c0e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801bf20:	3601      	adds	r6, #1
 801bf22:	9801      	ldr	r0, [sp, #4]
 801bf24:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bf28:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bf2c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bf30:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801bf34:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bf38:	fb09 f906 	mul.w	r9, r9, r6
 801bf3c:	fb07 f800 	mul.w	r8, r7, r0
 801bf40:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801bf44:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801bf48:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801bf4c:	44d1      	add	r9, sl
 801bf4e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bf52:	f108 0020 	add.w	r0, r8, #32
 801bf56:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bf5a:	0a00      	lsrs	r0, r0, #8
 801bf5c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bf60:	4330      	orrs	r0, r6
 801bf62:	b28e      	uxth	r6, r1
 801bf64:	fa1f f98e 	uxth.w	r9, lr
 801bf68:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801bf6c:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801bf70:	fb06 f809 	mul.w	r8, r6, r9
 801bf74:	0136      	lsls	r6, r6, #4
 801bf76:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801bf7a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bf7e:	9601      	str	r6, [sp, #4]
 801bf80:	ea4a 0404 	orr.w	r4, sl, r4
 801bf84:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bf88:	fa1f f689 	uxth.w	r6, r9
 801bf8c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801bf90:	fb11 f90e 	smulbb	r9, r1, lr
 801bf94:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801bf98:	9602      	str	r6, [sp, #8]
 801bf9a:	4626      	mov	r6, r4
 801bf9c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801bfa0:	f1ce 0410 	rsb	r4, lr, #16
 801bfa4:	ea4a 0202 	orr.w	r2, sl, r2
 801bfa8:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bfac:	1a64      	subs	r4, r4, r1
 801bfae:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801bfb2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801bfb6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801bfba:	434a      	muls	r2, r1
 801bfbc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801bfc0:	ea4a 0000 	orr.w	r0, sl, r0
 801bfc4:	9903      	ldr	r1, [sp, #12]
 801bfc6:	fb04 2406 	mla	r4, r4, r6, r2
 801bfca:	9e02      	ldr	r6, [sp, #8]
 801bfcc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801bfd0:	fb09 4200 	mla	r2, r9, r0, r4
 801bfd4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801bfd8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801bfdc:	8808      	ldrh	r0, [r1, #0]
 801bfde:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801bfe2:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801bfe6:	ea44 0b0b 	orr.w	fp, r4, fp
 801bfea:	9c01      	ldr	r4, [sp, #4]
 801bfec:	b289      	uxth	r1, r1
 801bfee:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801bff2:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801bff6:	1ba4      	subs	r4, r4, r6
 801bff8:	9e01      	ldr	r6, [sp, #4]
 801bffa:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bffe:	eba6 0608 	sub.w	r6, r6, r8
 801c002:	b2a4      	uxth	r4, r4
 801c004:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c008:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c00c:	b2b6      	uxth	r6, r6
 801c00e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c012:	4373      	muls	r3, r6
 801c014:	ea42 0e0e 	orr.w	lr, r2, lr
 801c018:	fb0c 3304 	mla	r3, ip, r4, r3
 801c01c:	9c02      	ldr	r4, [sp, #8]
 801c01e:	fa1f f28e 	uxth.w	r2, lr
 801c022:	fb04 3505 	mla	r5, r4, r5, r3
 801c026:	10d4      	asrs	r4, r2, #3
 801c028:	fb08 5707 	mla	r7, r8, r7, r5
 801c02c:	1215      	asrs	r5, r2, #8
 801c02e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801c032:	00d2      	lsls	r2, r2, #3
 801c034:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c038:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c03c:	b2d2      	uxtb	r2, r2
 801c03e:	434f      	muls	r7, r1
 801c040:	1c7b      	adds	r3, r7, #1
 801c042:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c046:	1203      	asrs	r3, r0, #8
 801c048:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c04c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c050:	b2ff      	uxtb	r7, r7
 801c052:	fb13 f307 	smulbb	r3, r3, r7
 801c056:	fb05 3501 	mla	r5, r5, r1, r3
 801c05a:	10c3      	asrs	r3, r0, #3
 801c05c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c060:	b2ad      	uxth	r5, r5
 801c062:	fb13 f307 	smulbb	r3, r3, r7
 801c066:	fb04 3401 	mla	r4, r4, r1, r3
 801c06a:	00c3      	lsls	r3, r0, #3
 801c06c:	b2db      	uxtb	r3, r3
 801c06e:	b2a4      	uxth	r4, r4
 801c070:	fb13 f307 	smulbb	r3, r3, r7
 801c074:	fb02 3101 	mla	r1, r2, r1, r3
 801c078:	1c6b      	adds	r3, r5, #1
 801c07a:	1c62      	adds	r2, r4, #1
 801c07c:	b289      	uxth	r1, r1
 801c07e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c082:	1c4b      	adds	r3, r1, #1
 801c084:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c088:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c08c:	9a03      	ldr	r2, [sp, #12]
 801c08e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c092:	0964      	lsrs	r4, r4, #5
 801c094:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c098:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801c09c:	432b      	orrs	r3, r5
 801c09e:	4323      	orrs	r3, r4
 801c0a0:	8013      	strh	r3, [r2, #0]
 801c0a2:	b005      	add	sp, #20
 801c0a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0a8:	f04f 0c00 	mov.w	ip, #0
 801c0ac:	4664      	mov	r4, ip
 801c0ae:	e6d6      	b.n	801be5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c0b0:	2300      	movs	r3, #0
 801c0b2:	469c      	mov	ip, r3
 801c0b4:	461a      	mov	r2, r3
 801c0b6:	461c      	mov	r4, r3
 801c0b8:	e6f8      	b.n	801beac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c0ba:	2300      	movs	r3, #0
 801c0bc:	461a      	mov	r2, r3
 801c0be:	e6f5      	b.n	801beac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c0c0:	460b      	mov	r3, r1
 801c0c2:	460a      	mov	r2, r1
 801c0c4:	e6f2      	b.n	801beac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c0c6:	2500      	movs	r5, #0
 801c0c8:	46ab      	mov	fp, r5
 801c0ca:	e720      	b.n	801bf0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c0cc:	2700      	movs	r7, #0
 801c0ce:	463d      	mov	r5, r7
 801c0d0:	4638      	mov	r0, r7
 801c0d2:	46bb      	mov	fp, r7
 801c0d4:	e745      	b.n	801bf62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c0d6:	4677      	mov	r7, lr
 801c0d8:	4675      	mov	r5, lr
 801c0da:	4670      	mov	r0, lr
 801c0dc:	46f3      	mov	fp, lr
 801c0de:	e740      	b.n	801bf62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c0e0:	2700      	movs	r7, #0
 801c0e2:	4638      	mov	r0, r7
 801c0e4:	e73d      	b.n	801bf62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c0e6:	460f      	mov	r7, r1
 801c0e8:	4608      	mov	r0, r1
 801c0ea:	e73a      	b.n	801bf62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c0ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c0ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0f0:	b097      	sub	sp, #92	@ 0x5c
 801c0f2:	9214      	str	r2, [sp, #80]	@ 0x50
 801c0f4:	9308      	str	r3, [sp, #32]
 801c0f6:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c0f8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801c0fc:	9015      	str	r0, [sp, #84]	@ 0x54
 801c0fe:	9312      	str	r3, [sp, #72]	@ 0x48
 801c100:	6850      	ldr	r0, [r2, #4]
 801c102:	9111      	str	r1, [sp, #68]	@ 0x44
 801c104:	6812      	ldr	r2, [r2, #0]
 801c106:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801c10a:	fb00 1303 	mla	r3, r0, r3, r1
 801c10e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c112:	9309      	str	r3, [sp, #36]	@ 0x24
 801c114:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c116:	681b      	ldr	r3, [r3, #0]
 801c118:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c11a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c11c:	685b      	ldr	r3, [r3, #4]
 801c11e:	930c      	str	r3, [sp, #48]	@ 0x30
 801c120:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801c124:	930a      	str	r3, [sp, #40]	@ 0x28
 801c126:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c128:	2b00      	cmp	r3, #0
 801c12a:	dc03      	bgt.n	801c134 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c12c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801c12e:	2b00      	cmp	r3, #0
 801c130:	f340 83cd 	ble.w	801c8ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801c134:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c136:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c13a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c13e:	1e48      	subs	r0, r1, #1
 801c140:	1e55      	subs	r5, r2, #1
 801c142:	9b08      	ldr	r3, [sp, #32]
 801c144:	2b00      	cmp	r3, #0
 801c146:	f340 81a5 	ble.w	801c494 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801c14a:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801c14c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c14e:	1436      	asrs	r6, r6, #16
 801c150:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c154:	d406      	bmi.n	801c164 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c156:	4286      	cmp	r6, r0
 801c158:	da04      	bge.n	801c164 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c15a:	2b00      	cmp	r3, #0
 801c15c:	db02      	blt.n	801c164 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c15e:	42ab      	cmp	r3, r5
 801c160:	f2c0 8199 	blt.w	801c496 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801c164:	3601      	adds	r6, #1
 801c166:	f100 8186 	bmi.w	801c476 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c16a:	42b1      	cmp	r1, r6
 801c16c:	f2c0 8183 	blt.w	801c476 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c170:	3301      	adds	r3, #1
 801c172:	f100 8180 	bmi.w	801c476 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c176:	429a      	cmp	r2, r3
 801c178:	f2c0 817d 	blt.w	801c476 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c17c:	9b08      	ldr	r3, [sp, #32]
 801c17e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801c182:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801c184:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c186:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c188:	2b00      	cmp	r3, #0
 801c18a:	f340 81a6 	ble.w	801c4da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801c18e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c190:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801c192:	1418      	asrs	r0, r3, #16
 801c194:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c196:	142d      	asrs	r5, r5, #16
 801c198:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c19c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c19e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c1a2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c1a4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c1a8:	f100 81fa 	bmi.w	801c5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c1ac:	f102 3eff 	add.w	lr, r2, #4294967295
 801c1b0:	4575      	cmp	r5, lr
 801c1b2:	f280 81f5 	bge.w	801c5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c1b6:	2800      	cmp	r0, #0
 801c1b8:	f2c0 81f2 	blt.w	801c5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c1bc:	f103 3eff 	add.w	lr, r3, #4294967295
 801c1c0:	4570      	cmp	r0, lr
 801c1c2:	f280 81ed 	bge.w	801c5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c1c6:	b212      	sxth	r2, r2
 801c1c8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c1ca:	fa1f fe81 	uxth.w	lr, r1
 801c1ce:	fb00 5002 	mla	r0, r0, r2, r5
 801c1d2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c1d6:	eb03 0a00 	add.w	sl, r3, r0
 801c1da:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c1de:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801c1e2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c1e6:	b29b      	uxth	r3, r3
 801c1e8:	f1bc 0f00 	cmp.w	ip, #0
 801c1ec:	f000 81bb 	beq.w	801c566 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801c1f0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c1f4:	eb0a 0b02 	add.w	fp, sl, r2
 801c1f8:	fa1f fa8c 	uxth.w	sl, ip
 801c1fc:	940d      	str	r4, [sp, #52]	@ 0x34
 801c1fe:	fb0a fe0e 	mul.w	lr, sl, lr
 801c202:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c206:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c20a:	eba5 050e 	sub.w	r5, r5, lr
 801c20e:	940e      	str	r4, [sp, #56]	@ 0x38
 801c210:	fa1f fa8a 	uxth.w	sl, sl
 801c214:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c216:	b2ad      	uxth	r5, r5
 801c218:	eba3 030a 	sub.w	r3, r3, sl
 801c21c:	fb08 f505 	mul.w	r5, r8, r5
 801c220:	b29b      	uxth	r3, r3
 801c222:	fb09 5303 	mla	r3, r9, r3, r5
 801c226:	fb0a 3304 	mla	r3, sl, r4, r3
 801c22a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c22c:	fb0e 3304 	mla	r3, lr, r4, r3
 801c230:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c234:	2b00      	cmp	r3, #0
 801c236:	f000 8111 	beq.w	801c45c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c23a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c23c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c240:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c244:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c248:	f000 8192 	beq.w	801c570 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c24c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c250:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c254:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c258:	fb0a fe0e 	mul.w	lr, sl, lr
 801c25c:	fb09 f000 	mul.w	r0, r9, r0
 801c260:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c264:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c268:	f100 0b20 	add.w	fp, r0, #32
 801c26c:	44ce      	add	lr, r9
 801c26e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c272:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c276:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c27a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c27e:	ea4e 0909 	orr.w	r9, lr, r9
 801c282:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801c286:	8868      	ldrh	r0, [r5, #2]
 801c288:	d019      	beq.n	801c2be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c28a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c28e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c292:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c296:	fb0a fe0e 	mul.w	lr, sl, lr
 801c29a:	fb08 f800 	mul.w	r8, r8, r0
 801c29e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c2a2:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c2a6:	f108 0b20 	add.w	fp, r8, #32
 801c2aa:	4486      	add	lr, r0
 801c2ac:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c2b0:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c2b4:	0a00      	lsrs	r0, r0, #8
 801c2b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c2ba:	ea4e 0000 	orr.w	r0, lr, r0
 801c2be:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c2c2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c2c6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c2ca:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c2ce:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801c2d2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c2d6:	ea4e 0909 	orr.w	r9, lr, r9
 801c2da:	ea4a 0000 	orr.w	r0, sl, r0
 801c2de:	f1bc 0f00 	cmp.w	ip, #0
 801c2e2:	f000 8147 	beq.w	801c574 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801c2e6:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801c2ea:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c2ec:	3a01      	subs	r2, #1
 801c2ee:	2cff      	cmp	r4, #255	@ 0xff
 801c2f0:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801c2f4:	f102 0202 	add.w	r2, r2, #2
 801c2f8:	eb05 0e02 	add.w	lr, r5, r2
 801c2fc:	5aaa      	ldrh	r2, [r5, r2]
 801c2fe:	d018      	beq.n	801c332 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801c300:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801c304:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c308:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c30c:	fb04 fa02 	mul.w	sl, r4, r2
 801c310:	fb08 f805 	mul.w	r8, r8, r5
 801c314:	f10a 0520 	add.w	r5, sl, #32
 801c318:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c31c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c320:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c324:	4442      	add	r2, r8
 801c326:	0a2d      	lsrs	r5, r5, #8
 801c328:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c32c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c330:	432a      	orrs	r2, r5
 801c332:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c334:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c338:	2cff      	cmp	r4, #255	@ 0xff
 801c33a:	d01a      	beq.n	801c372 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801c33c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801c340:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c344:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c348:	fb04 fa05 	mul.w	sl, r4, r5
 801c34c:	fb08 f80e 	mul.w	r8, r8, lr
 801c350:	f10a 0e20 	add.w	lr, sl, #32
 801c354:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c358:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c35c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c360:	4445      	add	r5, r8
 801c362:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c366:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c36a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801c36e:	ea45 050e 	orr.w	r5, r5, lr
 801c372:	fb1c fe01 	smulbb	lr, ip, r1
 801c376:	f1cc 0810 	rsb	r8, ip, #16
 801c37a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c37e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c382:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c386:	eba8 0801 	sub.w	r8, r8, r1
 801c38a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c38e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c392:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c396:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801c39a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c39e:	ea4a 0202 	orr.w	r2, sl, r2
 801c3a2:	4341      	muls	r1, r0
 801c3a4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c3a8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801c3ac:	fb09 1108 	mla	r1, r9, r8, r1
 801c3b0:	ea4b 0505 	orr.w	r5, fp, r5
 801c3b4:	fb0c 1102 	mla	r1, ip, r2, r1
 801c3b8:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c3bc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c3c0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c3c4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c3c8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c3cc:	ea42 0e0e 	orr.w	lr, r2, lr
 801c3d0:	fa1f f28e 	uxth.w	r2, lr
 801c3d4:	2bff      	cmp	r3, #255	@ 0xff
 801c3d6:	d103      	bne.n	801c3e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801c3d8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801c3da:	29ff      	cmp	r1, #255	@ 0xff
 801c3dc:	f000 80de 	beq.w	801c59c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c3e0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801c3e2:	1215      	asrs	r5, r2, #8
 801c3e4:	8838      	ldrh	r0, [r7, #0]
 801c3e6:	434b      	muls	r3, r1
 801c3e8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c3ec:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c3ee:	f103 0c01 	add.w	ip, r3, #1
 801c3f2:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c3f6:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c3fa:	fa5f fc83 	uxtb.w	ip, r3
 801c3fe:	1203      	asrs	r3, r0, #8
 801c400:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c404:	fb13 f30c 	smulbb	r3, r3, ip
 801c408:	fb05 3501 	mla	r5, r5, r1, r3
 801c40c:	10c3      	asrs	r3, r0, #3
 801c40e:	10d1      	asrs	r1, r2, #3
 801c410:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c414:	00d2      	lsls	r2, r2, #3
 801c416:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c41a:	b2ad      	uxth	r5, r5
 801c41c:	fb13 f30c 	smulbb	r3, r3, ip
 801c420:	b2d2      	uxtb	r2, r2
 801c422:	fb01 3104 	mla	r1, r1, r4, r3
 801c426:	00c3      	lsls	r3, r0, #3
 801c428:	b2db      	uxtb	r3, r3
 801c42a:	b289      	uxth	r1, r1
 801c42c:	fb13 f30c 	smulbb	r3, r3, ip
 801c430:	fb02 3304 	mla	r3, r2, r4, r3
 801c434:	b29a      	uxth	r2, r3
 801c436:	1c6b      	adds	r3, r5, #1
 801c438:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c43c:	1c53      	adds	r3, r2, #1
 801c43e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c442:	1c4a      	adds	r2, r1, #1
 801c444:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c448:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c44c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c450:	0949      	lsrs	r1, r1, #5
 801c452:	432b      	orrs	r3, r5
 801c454:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c458:	430b      	orrs	r3, r1
 801c45a:	803b      	strh	r3, [r7, #0]
 801c45c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c45e:	3702      	adds	r7, #2
 801c460:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801c462:	4413      	add	r3, r2
 801c464:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801c466:	9321      	str	r3, [sp, #132]	@ 0x84
 801c468:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c46a:	441a      	add	r2, r3
 801c46c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c46e:	3b01      	subs	r3, #1
 801c470:	9222      	str	r2, [sp, #136]	@ 0x88
 801c472:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c474:	e687      	b.n	801c186 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c476:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c478:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801c47a:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801c47c:	4433      	add	r3, r6
 801c47e:	9321      	str	r3, [sp, #132]	@ 0x84
 801c480:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c482:	441c      	add	r4, r3
 801c484:	9b08      	ldr	r3, [sp, #32]
 801c486:	3b01      	subs	r3, #1
 801c488:	9422      	str	r4, [sp, #136]	@ 0x88
 801c48a:	9308      	str	r3, [sp, #32]
 801c48c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c48e:	3302      	adds	r3, #2
 801c490:	9309      	str	r3, [sp, #36]	@ 0x24
 801c492:	e656      	b.n	801c142 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c494:	d028      	beq.n	801c4e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801c496:	9b08      	ldr	r3, [sp, #32]
 801c498:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801c49a:	3b01      	subs	r3, #1
 801c49c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801c49e:	fb00 5003 	mla	r0, r0, r3, r5
 801c4a2:	1400      	asrs	r0, r0, #16
 801c4a4:	f53f ae6a 	bmi.w	801c17c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c4a8:	3901      	subs	r1, #1
 801c4aa:	4288      	cmp	r0, r1
 801c4ac:	f6bf ae66 	bge.w	801c17c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c4b0:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801c4b2:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801c4b4:	fb01 0303 	mla	r3, r1, r3, r0
 801c4b8:	141b      	asrs	r3, r3, #16
 801c4ba:	f53f ae5f 	bmi.w	801c17c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c4be:	3a01      	subs	r2, #1
 801c4c0:	4293      	cmp	r3, r2
 801c4c2:	f6bf ae5b 	bge.w	801c17c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c4c6:	9b08      	ldr	r3, [sp, #32]
 801c4c8:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801c4cc:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801c4d0:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c4d2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c4d4:	2b00      	cmp	r3, #0
 801c4d6:	f300 8082 	bgt.w	801c5de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801c4da:	9b08      	ldr	r3, [sp, #32]
 801c4dc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c4e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c4e2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c4e6:	9309      	str	r3, [sp, #36]	@ 0x24
 801c4e8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c4ea:	2b00      	cmp	r3, #0
 801c4ec:	f340 81ef 	ble.w	801c8ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801c4f0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c4f4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c4f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c4fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c4fe:	eef0 6a62 	vmov.f32	s13, s5
 801c502:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c506:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c50a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c50e:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801c512:	eef0 6a43 	vmov.f32	s13, s6
 801c516:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c51a:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801c51e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c522:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c526:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c52a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c52e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c532:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c536:	ee12 2a90 	vmov	r2, s5
 801c53a:	eef0 2a47 	vmov.f32	s5, s14
 801c53e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c542:	ee13 2a10 	vmov	r2, s6
 801c546:	9323      	str	r3, [sp, #140]	@ 0x8c
 801c548:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c54a:	eeb0 3a67 	vmov.f32	s6, s15
 801c54e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c552:	9324      	str	r3, [sp, #144]	@ 0x90
 801c554:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c556:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c558:	3b01      	subs	r3, #1
 801c55a:	9311      	str	r3, [sp, #68]	@ 0x44
 801c55c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c55e:	bf08      	it	eq
 801c560:	4613      	moveq	r3, r2
 801c562:	9308      	str	r3, [sp, #32]
 801c564:	e5df      	b.n	801c126 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c566:	fb08 f505 	mul.w	r5, r8, r5
 801c56a:	fb09 5303 	mla	r3, r9, r3, r5
 801c56e:	e65f      	b.n	801c230 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c570:	4681      	mov	r9, r0
 801c572:	e686      	b.n	801c282 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c574:	f1c1 0210 	rsb	r2, r1, #16
 801c578:	4341      	muls	r1, r0
 801c57a:	fb09 1902 	mla	r9, r9, r2, r1
 801c57e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c582:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c586:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c58a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c58e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c592:	ea42 0909 	orr.w	r9, r2, r9
 801c596:	fa1f f289 	uxth.w	r2, r9
 801c59a:	e71b      	b.n	801c3d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801c59c:	803a      	strh	r2, [r7, #0]
 801c59e:	e75d      	b.n	801c45c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c5a0:	f115 0e01 	adds.w	lr, r5, #1
 801c5a4:	f53f af5a 	bmi.w	801c45c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c5a8:	4572      	cmp	r2, lr
 801c5aa:	f6ff af57 	blt.w	801c45c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c5ae:	f110 0e01 	adds.w	lr, r0, #1
 801c5b2:	f53f af53 	bmi.w	801c45c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c5b6:	4573      	cmp	r3, lr
 801c5b8:	f6ff af50 	blt.w	801c45c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c5bc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c5be:	b21b      	sxth	r3, r3
 801c5c0:	b212      	sxth	r2, r2
 801c5c2:	9502      	str	r5, [sp, #8]
 801c5c4:	9301      	str	r3, [sp, #4]
 801c5c6:	9200      	str	r2, [sp, #0]
 801c5c8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c5cc:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c5d0:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801c5d4:	4639      	mov	r1, r7
 801c5d6:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801c5d8:	f7ff fc02 	bl	801bde0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c5dc:	e73e      	b.n	801c45c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c5de:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c5e0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c5e4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c5e6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c5ea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c5ec:	fa1f fc82 	uxth.w	ip, r2
 801c5f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c5f4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c5f6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c5fa:	141f      	asrs	r7, r3, #16
 801c5fc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c5fe:	141b      	asrs	r3, r3, #16
 801c600:	fb01 3707 	mla	r7, r1, r7, r3
 801c604:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c606:	eb03 0a07 	add.w	sl, r3, r7
 801c60a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c60e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801c612:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c616:	b29b      	uxth	r3, r3
 801c618:	2d00      	cmp	r5, #0
 801c61a:	f000 813d 	beq.w	801c898 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801c61e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c622:	eb0a 0b01 	add.w	fp, sl, r1
 801c626:	fa1f fa85 	uxth.w	sl, r5
 801c62a:	940f      	str	r4, [sp, #60]	@ 0x3c
 801c62c:	fb0a fc0c 	mul.w	ip, sl, ip
 801c630:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c634:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c638:	eba0 000c 	sub.w	r0, r0, ip
 801c63c:	9410      	str	r4, [sp, #64]	@ 0x40
 801c63e:	fa1f fa8a 	uxth.w	sl, sl
 801c642:	b280      	uxth	r0, r0
 801c644:	eba3 030a 	sub.w	r3, r3, sl
 801c648:	fb08 f000 	mul.w	r0, r8, r0
 801c64c:	b29b      	uxth	r3, r3
 801c64e:	fb09 0303 	mla	r3, r9, r3, r0
 801c652:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801c654:	fb0a 3300 	mla	r3, sl, r0, r3
 801c658:	fb0c 3304 	mla	r3, ip, r4, r3
 801c65c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c660:	2b00      	cmp	r3, #0
 801c662:	f000 810b 	beq.w	801c87c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801c666:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801c668:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c66c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c66e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c672:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c676:	f000 8114 	beq.w	801c8a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c67a:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801c67e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c682:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c686:	fb0a fc0c 	mul.w	ip, sl, ip
 801c68a:	fb09 f707 	mul.w	r7, r9, r7
 801c68e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c692:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801c696:	f107 0b20 	add.w	fp, r7, #32
 801c69a:	44cc      	add	ip, r9
 801c69c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c6a0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c6a4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c6a8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c6ac:	ea4c 0909 	orr.w	r9, ip, r9
 801c6b0:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801c6b4:	8847      	ldrh	r7, [r0, #2]
 801c6b6:	d019      	beq.n	801c6ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801c6b8:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801c6bc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c6c0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c6c4:	fb0a fc0c 	mul.w	ip, sl, ip
 801c6c8:	fb08 f807 	mul.w	r8, r8, r7
 801c6cc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c6d0:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801c6d4:	f108 0b20 	add.w	fp, r8, #32
 801c6d8:	44bc      	add	ip, r7
 801c6da:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c6de:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c6e2:	0a3f      	lsrs	r7, r7, #8
 801c6e4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c6e8:	ea4c 0707 	orr.w	r7, ip, r7
 801c6ec:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c6f0:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c6f4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c6f8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801c6fc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801c700:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c704:	ea4c 0909 	orr.w	r9, ip, r9
 801c708:	ea4a 0707 	orr.w	r7, sl, r7
 801c70c:	2d00      	cmp	r5, #0
 801c70e:	f000 80ca 	beq.w	801c8a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801c712:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801c716:	3901      	subs	r1, #1
 801c718:	0049      	lsls	r1, r1, #1
 801c71a:	3102      	adds	r1, #2
 801c71c:	eb00 0c01 	add.w	ip, r0, r1
 801c720:	5a41      	ldrh	r1, [r0, r1]
 801c722:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801c724:	28ff      	cmp	r0, #255	@ 0xff
 801c726:	d019      	beq.n	801c75c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801c728:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801c72c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c72e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c732:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c736:	fb04 fa01 	mul.w	sl, r4, r1
 801c73a:	fb08 f800 	mul.w	r8, r8, r0
 801c73e:	f10a 0020 	add.w	r0, sl, #32
 801c742:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c746:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c74a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c74e:	4441      	add	r1, r8
 801c750:	0a00      	lsrs	r0, r0, #8
 801c752:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c756:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c75a:	4301      	orrs	r1, r0
 801c75c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c75e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c762:	2cff      	cmp	r4, #255	@ 0xff
 801c764:	d01a      	beq.n	801c79c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801c766:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801c76a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c76e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c772:	fb04 fa00 	mul.w	sl, r4, r0
 801c776:	fb08 f80c 	mul.w	r8, r8, ip
 801c77a:	f10a 0c20 	add.w	ip, sl, #32
 801c77e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c782:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c786:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c78a:	4440      	add	r0, r8
 801c78c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c790:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c794:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801c798:	ea40 000c 	orr.w	r0, r0, ip
 801c79c:	fb15 fc02 	smulbb	ip, r5, r2
 801c7a0:	f1c5 0810 	rsb	r8, r5, #16
 801c7a4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c7a8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801c7ac:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c7b0:	eba8 0802 	sub.w	r8, r8, r2
 801c7b4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c7b8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c7bc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c7c0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c7c4:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c7c8:	ea4a 0101 	orr.w	r1, sl, r1
 801c7cc:	437a      	muls	r2, r7
 801c7ce:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c7d2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801c7d6:	fb09 2208 	mla	r2, r9, r8, r2
 801c7da:	ea4b 0000 	orr.w	r0, fp, r0
 801c7de:	fb05 2201 	mla	r2, r5, r1, r2
 801c7e2:	fb0c 2200 	mla	r2, ip, r0, r2
 801c7e6:	0d57      	lsrs	r7, r2, #21
 801c7e8:	0952      	lsrs	r2, r2, #5
 801c7ea:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c7ee:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c7f2:	433a      	orrs	r2, r7
 801c7f4:	2bff      	cmp	r3, #255	@ 0xff
 801c7f6:	b292      	uxth	r2, r2
 801c7f8:	d102      	bne.n	801c800 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801c7fa:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801c7fc:	29ff      	cmp	r1, #255	@ 0xff
 801c7fe:	d063      	beq.n	801c8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801c800:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801c802:	1215      	asrs	r5, r2, #8
 801c804:	f8be 1000 	ldrh.w	r1, [lr]
 801c808:	4343      	muls	r3, r0
 801c80a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c80c:	10cf      	asrs	r7, r1, #3
 801c80e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c812:	1c58      	adds	r0, r3, #1
 801c814:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c818:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c81c:	1208      	asrs	r0, r1, #8
 801c81e:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c822:	00c9      	lsls	r1, r1, #3
 801c824:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c828:	b2db      	uxtb	r3, r3
 801c82a:	b2c9      	uxtb	r1, r1
 801c82c:	fb10 f003 	smulbb	r0, r0, r3
 801c830:	fb11 f103 	smulbb	r1, r1, r3
 801c834:	fb05 0504 	mla	r5, r5, r4, r0
 801c838:	10d0      	asrs	r0, r2, #3
 801c83a:	fb17 f703 	smulbb	r7, r7, r3
 801c83e:	00d2      	lsls	r2, r2, #3
 801c840:	b2ad      	uxth	r5, r5
 801c842:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c846:	b2d2      	uxtb	r2, r2
 801c848:	fb00 7004 	mla	r0, r0, r4, r7
 801c84c:	1c6b      	adds	r3, r5, #1
 801c84e:	fb02 1204 	mla	r2, r2, r4, r1
 801c852:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c856:	b292      	uxth	r2, r2
 801c858:	b280      	uxth	r0, r0
 801c85a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c85e:	1c57      	adds	r7, r2, #1
 801c860:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c864:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c868:	433d      	orrs	r5, r7
 801c86a:	1c47      	adds	r7, r0, #1
 801c86c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c870:	097f      	lsrs	r7, r7, #5
 801c872:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c876:	433d      	orrs	r5, r7
 801c878:	f8ae 5000 	strh.w	r5, [lr]
 801c87c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c87e:	f10e 0e02 	add.w	lr, lr, #2
 801c882:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801c884:	4413      	add	r3, r2
 801c886:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801c888:	9321      	str	r3, [sp, #132]	@ 0x84
 801c88a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c88c:	441a      	add	r2, r3
 801c88e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c890:	3b01      	subs	r3, #1
 801c892:	9222      	str	r2, [sp, #136]	@ 0x88
 801c894:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c896:	e61c      	b.n	801c4d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801c898:	fb08 f000 	mul.w	r0, r8, r0
 801c89c:	fb09 0303 	mla	r3, r9, r3, r0
 801c8a0:	e6dc      	b.n	801c65c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801c8a2:	46b9      	mov	r9, r7
 801c8a4:	e704      	b.n	801c6b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801c8a6:	f1c2 0110 	rsb	r1, r2, #16
 801c8aa:	437a      	muls	r2, r7
 801c8ac:	fb09 2901 	mla	r9, r9, r1, r2
 801c8b0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c8b4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c8b8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c8bc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c8c0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c8c4:	4302      	orrs	r2, r0
 801c8c6:	e795      	b.n	801c7f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801c8c8:	f8ae 2000 	strh.w	r2, [lr]
 801c8cc:	e7d6      	b.n	801c87c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801c8ce:	b017      	add	sp, #92	@ 0x5c
 801c8d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c8d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c8d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c8d8:	b085      	sub	sp, #20
 801c8da:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801c8de:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801c8e2:	2800      	cmp	r0, #0
 801c8e4:	9103      	str	r1, [sp, #12]
 801c8e6:	fb00 7406 	mla	r4, r0, r6, r7
 801c8ea:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801c8ee:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801c8f2:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c8f6:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801c8fa:	eb02 0904 	add.w	r9, r2, r4
 801c8fe:	9501      	str	r5, [sp, #4]
 801c900:	f2c0 8141 	blt.w	801cb86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c904:	4583      	cmp	fp, r0
 801c906:	f340 813e 	ble.w	801cb86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c90a:	2f00      	cmp	r7, #0
 801c90c:	f2c0 8137 	blt.w	801cb7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c910:	42be      	cmp	r6, r7
 801c912:	f340 8134 	ble.w	801cb7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c916:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c91a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c91e:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801c922:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c926:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801c92a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c92e:	4355      	muls	r5, r2
 801c930:	fb0c f203 	mul.w	r2, ip, r3
 801c934:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c938:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801c93c:	441d      	add	r5, r3
 801c93e:	f102 0320 	add.w	r3, r2, #32
 801c942:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c946:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c94a:	0a1b      	lsrs	r3, r3, #8
 801c94c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c950:	431c      	orrs	r4, r3
 801c952:	1c7b      	adds	r3, r7, #1
 801c954:	f100 811c 	bmi.w	801cb90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c958:	429e      	cmp	r6, r3
 801c95a:	f340 8119 	ble.w	801cb90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c95e:	2900      	cmp	r1, #0
 801c960:	f000 8119 	beq.w	801cb96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801c964:	9a01      	ldr	r2, [sp, #4]
 801c966:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c96a:	8855      	ldrh	r5, [r2, #2]
 801c96c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c970:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801c974:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c978:	fb08 f802 	mul.w	r8, r8, r2
 801c97c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801c980:	435d      	muls	r5, r3
 801c982:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c986:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c98a:	44d0      	add	r8, sl
 801c98c:	f105 0a20 	add.w	sl, r5, #32
 801c990:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c994:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c998:	0a2d      	lsrs	r5, r5, #8
 801c99a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c99e:	432a      	orrs	r2, r5
 801c9a0:	3001      	adds	r0, #1
 801c9a2:	f100 80fe 	bmi.w	801cba2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c9a6:	4583      	cmp	fp, r0
 801c9a8:	f340 80fb 	ble.w	801cba2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c9ac:	f1be 0f00 	cmp.w	lr, #0
 801c9b0:	f000 80fc 	beq.w	801cbac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801c9b4:	2f00      	cmp	r7, #0
 801c9b6:	f2c0 80f1 	blt.w	801cb9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c9ba:	42be      	cmp	r6, r7
 801c9bc:	f340 80ee 	ble.w	801cb9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c9c0:	9801      	ldr	r0, [sp, #4]
 801c9c2:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801c9c6:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c9ca:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c9ce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c9d2:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801c9d6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801c9da:	fb0a fa00 	mul.w	sl, sl, r0
 801c9de:	fb05 f808 	mul.w	r8, r5, r8
 801c9e2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c9e6:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801c9ea:	4482      	add	sl, r0
 801c9ec:	f108 0020 	add.w	r0, r8, #32
 801c9f0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c9f4:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c9f8:	0a00      	lsrs	r0, r0, #8
 801c9fa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c9fe:	ea4b 0b00 	orr.w	fp, fp, r0
 801ca02:	3701      	adds	r7, #1
 801ca04:	f100 80d7 	bmi.w	801cbb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ca08:	42be      	cmp	r6, r7
 801ca0a:	f340 80d4 	ble.w	801cbb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ca0e:	2900      	cmp	r1, #0
 801ca10:	f000 80d4 	beq.w	801cbbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801ca14:	3601      	adds	r6, #1
 801ca16:	9801      	ldr	r0, [sp, #4]
 801ca18:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ca1c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801ca20:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801ca24:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801ca28:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ca2c:	fb09 f906 	mul.w	r9, r9, r6
 801ca30:	fb07 f800 	mul.w	r8, r7, r0
 801ca34:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801ca38:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801ca3c:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801ca40:	44d1      	add	r9, sl
 801ca42:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801ca46:	f108 0020 	add.w	r0, r8, #32
 801ca4a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ca4e:	0a00      	lsrs	r0, r0, #8
 801ca50:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ca54:	4330      	orrs	r0, r6
 801ca56:	b28e      	uxth	r6, r1
 801ca58:	fa1f f98e 	uxth.w	r9, lr
 801ca5c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ca60:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801ca64:	fb06 f809 	mul.w	r8, r6, r9
 801ca68:	0136      	lsls	r6, r6, #4
 801ca6a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ca6e:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ca72:	9601      	str	r6, [sp, #4]
 801ca74:	ea4a 0404 	orr.w	r4, sl, r4
 801ca78:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ca7c:	fa1f f689 	uxth.w	r6, r9
 801ca80:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ca84:	fb11 f90e 	smulbb	r9, r1, lr
 801ca88:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ca8c:	9602      	str	r6, [sp, #8]
 801ca8e:	4626      	mov	r6, r4
 801ca90:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ca94:	f1ce 0410 	rsb	r4, lr, #16
 801ca98:	ea4a 0202 	orr.w	r2, sl, r2
 801ca9c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801caa0:	1a64      	subs	r4, r4, r1
 801caa2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801caa6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801caaa:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801caae:	434a      	muls	r2, r1
 801cab0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801cab4:	ea4a 0000 	orr.w	r0, sl, r0
 801cab8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801cabc:	fb04 2406 	mla	r4, r4, r6, r2
 801cac0:	9903      	ldr	r1, [sp, #12]
 801cac2:	fb09 4200 	mla	r2, r9, r0, r4
 801cac6:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801caca:	9801      	ldr	r0, [sp, #4]
 801cacc:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801cad0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801cad4:	8809      	ldrh	r1, [r1, #0]
 801cad6:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801cada:	ea44 0b0b 	orr.w	fp, r4, fp
 801cade:	9c02      	ldr	r4, [sp, #8]
 801cae0:	1b00      	subs	r0, r0, r4
 801cae2:	9c01      	ldr	r4, [sp, #4]
 801cae4:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801cae8:	eba4 0608 	sub.w	r6, r4, r8
 801caec:	b280      	uxth	r0, r0
 801caee:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801caf2:	b2b6      	uxth	r6, r6
 801caf4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801caf8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cafc:	4373      	muls	r3, r6
 801cafe:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801cb02:	fb0c 3300 	mla	r3, ip, r0, r3
 801cb06:	9802      	ldr	r0, [sp, #8]
 801cb08:	ea42 0e0e 	orr.w	lr, r2, lr
 801cb0c:	fb00 3505 	mla	r5, r0, r5, r3
 801cb10:	120b      	asrs	r3, r1, #8
 801cb12:	10c8      	asrs	r0, r1, #3
 801cb14:	fb08 5707 	mla	r7, r8, r7, r5
 801cb18:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801cb1c:	00c9      	lsls	r1, r1, #3
 801cb1e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801cb22:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801cb26:	fa1f f28e 	uxth.w	r2, lr
 801cb2a:	b2c9      	uxtb	r1, r1
 801cb2c:	b2ff      	uxtb	r7, r7
 801cb2e:	437b      	muls	r3, r7
 801cb30:	4378      	muls	r0, r7
 801cb32:	434f      	muls	r7, r1
 801cb34:	1c59      	adds	r1, r3, #1
 801cb36:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801cb3a:	1213      	asrs	r3, r2, #8
 801cb3c:	f023 0307 	bic.w	r3, r3, #7
 801cb40:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801cb44:	1c41      	adds	r1, r0, #1
 801cb46:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cb4a:	10d1      	asrs	r1, r2, #3
 801cb4c:	021b      	lsls	r3, r3, #8
 801cb4e:	f021 0103 	bic.w	r1, r1, #3
 801cb52:	00d2      	lsls	r2, r2, #3
 801cb54:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801cb58:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cb5c:	00c9      	lsls	r1, r1, #3
 801cb5e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cb62:	430b      	orrs	r3, r1
 801cb64:	1c79      	adds	r1, r7, #1
 801cb66:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801cb6a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801cb6e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cb72:	431a      	orrs	r2, r3
 801cb74:	9b03      	ldr	r3, [sp, #12]
 801cb76:	801a      	strh	r2, [r3, #0]
 801cb78:	b005      	add	sp, #20
 801cb7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cb7e:	f04f 0c00 	mov.w	ip, #0
 801cb82:	4664      	mov	r4, ip
 801cb84:	e6e5      	b.n	801c952 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801cb86:	2300      	movs	r3, #0
 801cb88:	469c      	mov	ip, r3
 801cb8a:	461a      	mov	r2, r3
 801cb8c:	461c      	mov	r4, r3
 801cb8e:	e707      	b.n	801c9a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cb90:	2300      	movs	r3, #0
 801cb92:	461a      	mov	r2, r3
 801cb94:	e704      	b.n	801c9a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cb96:	460b      	mov	r3, r1
 801cb98:	460a      	mov	r2, r1
 801cb9a:	e701      	b.n	801c9a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cb9c:	2500      	movs	r5, #0
 801cb9e:	46ab      	mov	fp, r5
 801cba0:	e72f      	b.n	801ca02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801cba2:	2700      	movs	r7, #0
 801cba4:	463d      	mov	r5, r7
 801cba6:	4638      	mov	r0, r7
 801cba8:	46bb      	mov	fp, r7
 801cbaa:	e754      	b.n	801ca56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cbac:	4677      	mov	r7, lr
 801cbae:	4675      	mov	r5, lr
 801cbb0:	4670      	mov	r0, lr
 801cbb2:	46f3      	mov	fp, lr
 801cbb4:	e74f      	b.n	801ca56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cbb6:	2700      	movs	r7, #0
 801cbb8:	4638      	mov	r0, r7
 801cbba:	e74c      	b.n	801ca56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cbbc:	460f      	mov	r7, r1
 801cbbe:	4608      	mov	r0, r1
 801cbc0:	e749      	b.n	801ca56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801cbc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cbc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbc8:	b093      	sub	sp, #76	@ 0x4c
 801cbca:	9210      	str	r2, [sp, #64]	@ 0x40
 801cbcc:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801cbce:	9011      	str	r0, [sp, #68]	@ 0x44
 801cbd0:	910e      	str	r1, [sp, #56]	@ 0x38
 801cbd2:	6850      	ldr	r0, [r2, #4]
 801cbd4:	9306      	str	r3, [sp, #24]
 801cbd6:	6812      	ldr	r2, [r2, #0]
 801cbd8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801cbdc:	fb00 1303 	mla	r3, r0, r3, r1
 801cbe0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cbe4:	9307      	str	r3, [sp, #28]
 801cbe6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cbe8:	681b      	ldr	r3, [r3, #0]
 801cbea:	9308      	str	r3, [sp, #32]
 801cbec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cbee:	685b      	ldr	r3, [r3, #4]
 801cbf0:	9309      	str	r3, [sp, #36]	@ 0x24
 801cbf2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801cbf4:	2b00      	cmp	r3, #0
 801cbf6:	dc03      	bgt.n	801cc00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cbf8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801cbfa:	2b00      	cmp	r3, #0
 801cbfc:	f340 83b6 	ble.w	801d36c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801cc00:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cc02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cc06:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cc0a:	1e48      	subs	r0, r1, #1
 801cc0c:	1e55      	subs	r5, r2, #1
 801cc0e:	9b06      	ldr	r3, [sp, #24]
 801cc10:	2b00      	cmp	r3, #0
 801cc12:	f340 8165 	ble.w	801cee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801cc16:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801cc18:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801cc1a:	1436      	asrs	r6, r6, #16
 801cc1c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cc20:	d406      	bmi.n	801cc30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cc22:	4286      	cmp	r6, r0
 801cc24:	da04      	bge.n	801cc30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cc26:	2b00      	cmp	r3, #0
 801cc28:	db02      	blt.n	801cc30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cc2a:	42ab      	cmp	r3, r5
 801cc2c:	f2c0 8159 	blt.w	801cee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801cc30:	3601      	adds	r6, #1
 801cc32:	f100 8146 	bmi.w	801cec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cc36:	42b1      	cmp	r1, r6
 801cc38:	f2c0 8143 	blt.w	801cec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cc3c:	3301      	adds	r3, #1
 801cc3e:	f100 8140 	bmi.w	801cec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cc42:	429a      	cmp	r2, r3
 801cc44:	f2c0 813d 	blt.w	801cec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cc48:	9b06      	ldr	r3, [sp, #24]
 801cc4a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801cc4e:	9f07      	ldr	r7, [sp, #28]
 801cc50:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cc52:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801cc54:	2b00      	cmp	r3, #0
 801cc56:	f340 8166 	ble.w	801cf26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801cc5a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801cc5c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801cc5e:	1418      	asrs	r0, r3, #16
 801cc60:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801cc62:	142d      	asrs	r5, r5, #16
 801cc64:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cc68:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801cc6a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cc6e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cc70:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cc74:	f100 81f0 	bmi.w	801d058 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cc78:	f102 3eff 	add.w	lr, r2, #4294967295
 801cc7c:	4575      	cmp	r5, lr
 801cc7e:	f280 81eb 	bge.w	801d058 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cc82:	2800      	cmp	r0, #0
 801cc84:	f2c0 81e8 	blt.w	801d058 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cc88:	f103 3eff 	add.w	lr, r3, #4294967295
 801cc8c:	4570      	cmp	r0, lr
 801cc8e:	f280 81e3 	bge.w	801d058 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cc92:	b212      	sxth	r2, r2
 801cc94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cc96:	fa1f fe81 	uxth.w	lr, r1
 801cc9a:	fb00 5002 	mla	r0, r0, r2, r5
 801cc9e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cca2:	eb03 0a00 	add.w	sl, r3, r0
 801cca6:	f813 9000 	ldrb.w	r9, [r3, r0]
 801ccaa:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801ccae:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ccb2:	b29b      	uxth	r3, r3
 801ccb4:	f1bc 0f00 	cmp.w	ip, #0
 801ccb8:	f000 817b 	beq.w	801cfb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801ccbc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ccc0:	eb0a 0b02 	add.w	fp, sl, r2
 801ccc4:	fa1f fa8c 	uxth.w	sl, ip
 801ccc8:	940a      	str	r4, [sp, #40]	@ 0x28
 801ccca:	fb0a fe0e 	mul.w	lr, sl, lr
 801ccce:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ccd2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ccd6:	eba5 050e 	sub.w	r5, r5, lr
 801ccda:	940b      	str	r4, [sp, #44]	@ 0x2c
 801ccdc:	fa1f fa8a 	uxth.w	sl, sl
 801cce0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cce2:	b2ad      	uxth	r5, r5
 801cce4:	eba3 030a 	sub.w	r3, r3, sl
 801cce8:	fb08 f505 	mul.w	r5, r8, r5
 801ccec:	b29b      	uxth	r3, r3
 801ccee:	fb09 5303 	mla	r3, r9, r3, r5
 801ccf2:	fb0a 3304 	mla	r3, sl, r4, r3
 801ccf6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ccf8:	fb0e 3304 	mla	r3, lr, r4, r3
 801ccfc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cd00:	2b00      	cmp	r3, #0
 801cd02:	f000 80d1 	beq.w	801cea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cd06:	9c08      	ldr	r4, [sp, #32]
 801cd08:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801cd0c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801cd10:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cd14:	f000 8152 	beq.w	801cfbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cd18:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801cd1c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cd20:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cd24:	fb0a fe0e 	mul.w	lr, sl, lr
 801cd28:	fb09 f000 	mul.w	r0, r9, r0
 801cd2c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cd30:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801cd34:	f100 0b20 	add.w	fp, r0, #32
 801cd38:	44ce      	add	lr, r9
 801cd3a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801cd3e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cd42:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cd46:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801cd4a:	ea4e 0909 	orr.w	r9, lr, r9
 801cd4e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801cd52:	8868      	ldrh	r0, [r5, #2]
 801cd54:	d019      	beq.n	801cd8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801cd56:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801cd5a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cd5e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cd62:	fb0a fe0e 	mul.w	lr, sl, lr
 801cd66:	fb08 f800 	mul.w	r8, r8, r0
 801cd6a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801cd6e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801cd72:	f108 0b20 	add.w	fp, r8, #32
 801cd76:	4486      	add	lr, r0
 801cd78:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801cd7c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cd80:	0a00      	lsrs	r0, r0, #8
 801cd82:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cd86:	ea4e 0000 	orr.w	r0, lr, r0
 801cd8a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801cd8e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cd92:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cd96:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cd9a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801cd9e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cda2:	ea4e 0909 	orr.w	r9, lr, r9
 801cda6:	ea4a 0000 	orr.w	r0, sl, r0
 801cdaa:	f1bc 0f00 	cmp.w	ip, #0
 801cdae:	f000 8107 	beq.w	801cfc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801cdb2:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801cdb6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cdb8:	3a01      	subs	r2, #1
 801cdba:	2cff      	cmp	r4, #255	@ 0xff
 801cdbc:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801cdc0:	f102 0202 	add.w	r2, r2, #2
 801cdc4:	eb05 0e02 	add.w	lr, r5, r2
 801cdc8:	5aaa      	ldrh	r2, [r5, r2]
 801cdca:	d018      	beq.n	801cdfe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801cdcc:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801cdd0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cdd4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cdd8:	fb04 fa02 	mul.w	sl, r4, r2
 801cddc:	fb08 f805 	mul.w	r8, r8, r5
 801cde0:	f10a 0520 	add.w	r5, sl, #32
 801cde4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cde8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801cdec:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cdf0:	4442      	add	r2, r8
 801cdf2:	0a2d      	lsrs	r5, r5, #8
 801cdf4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cdf8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cdfc:	432a      	orrs	r2, r5
 801cdfe:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ce00:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801ce04:	2cff      	cmp	r4, #255	@ 0xff
 801ce06:	d01a      	beq.n	801ce3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ce08:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801ce0c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ce10:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ce14:	fb04 fa05 	mul.w	sl, r4, r5
 801ce18:	fb08 f80e 	mul.w	r8, r8, lr
 801ce1c:	f10a 0e20 	add.w	lr, sl, #32
 801ce20:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801ce24:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ce28:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801ce2c:	4445      	add	r5, r8
 801ce2e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ce32:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801ce36:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801ce3a:	ea45 050e 	orr.w	r5, r5, lr
 801ce3e:	fb1c fe01 	smulbb	lr, ip, r1
 801ce42:	f1cc 0810 	rsb	r8, ip, #16
 801ce46:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ce4a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ce4e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ce52:	eba8 0801 	sub.w	r8, r8, r1
 801ce56:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ce5a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ce5e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ce62:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ce66:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ce6a:	ea4a 0202 	orr.w	r2, sl, r2
 801ce6e:	4341      	muls	r1, r0
 801ce70:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801ce74:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ce78:	fb09 1108 	mla	r1, r9, r8, r1
 801ce7c:	ea4b 0505 	orr.w	r5, fp, r5
 801ce80:	fb0c 1102 	mla	r1, ip, r2, r1
 801ce84:	fb0e 1e05 	mla	lr, lr, r5, r1
 801ce88:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ce8c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ce90:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ce94:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ce98:	ea42 0e0e 	orr.w	lr, r2, lr
 801ce9c:	fa1f f28e 	uxth.w	r2, lr
 801cea0:	2bff      	cmp	r3, #255	@ 0xff
 801cea2:	f040 80a1 	bne.w	801cfe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801cea6:	803a      	strh	r2, [r7, #0]
 801cea8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ceaa:	3702      	adds	r7, #2
 801ceac:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801ceae:	4413      	add	r3, r2
 801ceb0:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801ceb2:	931d      	str	r3, [sp, #116]	@ 0x74
 801ceb4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ceb6:	441a      	add	r2, r3
 801ceb8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ceba:	3b01      	subs	r3, #1
 801cebc:	921e      	str	r2, [sp, #120]	@ 0x78
 801cebe:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cec0:	e6c7      	b.n	801cc52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cec2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801cec4:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801cec6:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801cec8:	4433      	add	r3, r6
 801ceca:	931d      	str	r3, [sp, #116]	@ 0x74
 801cecc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cece:	441c      	add	r4, r3
 801ced0:	9b06      	ldr	r3, [sp, #24]
 801ced2:	3b01      	subs	r3, #1
 801ced4:	941e      	str	r4, [sp, #120]	@ 0x78
 801ced6:	9306      	str	r3, [sp, #24]
 801ced8:	9b07      	ldr	r3, [sp, #28]
 801ceda:	3302      	adds	r3, #2
 801cedc:	9307      	str	r3, [sp, #28]
 801cede:	e696      	b.n	801cc0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cee0:	d028      	beq.n	801cf34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801cee2:	9b06      	ldr	r3, [sp, #24]
 801cee4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801cee6:	3b01      	subs	r3, #1
 801cee8:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801ceea:	fb00 5003 	mla	r0, r0, r3, r5
 801ceee:	1400      	asrs	r0, r0, #16
 801cef0:	f53f aeaa 	bmi.w	801cc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cef4:	3901      	subs	r1, #1
 801cef6:	4288      	cmp	r0, r1
 801cef8:	f6bf aea6 	bge.w	801cc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cefc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801cefe:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801cf00:	fb01 0303 	mla	r3, r1, r3, r0
 801cf04:	141b      	asrs	r3, r3, #16
 801cf06:	f53f ae9f 	bmi.w	801cc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cf0a:	3a01      	subs	r2, #1
 801cf0c:	4293      	cmp	r3, r2
 801cf0e:	f6bf ae9b 	bge.w	801cc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cf12:	9b06      	ldr	r3, [sp, #24]
 801cf14:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801cf18:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801cf1c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cf1e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801cf20:	2b00      	cmp	r3, #0
 801cf22:	f300 80b6 	bgt.w	801d092 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801cf26:	9b06      	ldr	r3, [sp, #24]
 801cf28:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cf2c:	9b07      	ldr	r3, [sp, #28]
 801cf2e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cf32:	9307      	str	r3, [sp, #28]
 801cf34:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801cf36:	2b00      	cmp	r3, #0
 801cf38:	f340 8218 	ble.w	801d36c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801cf3c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cf40:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cf42:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cf46:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cf4a:	eef0 6a62 	vmov.f32	s13, s5
 801cf4e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cf52:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cf56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf5a:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801cf5e:	eef0 6a43 	vmov.f32	s13, s6
 801cf62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf66:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801cf6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cf6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cf72:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cf76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cf7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cf7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cf82:	ee12 2a90 	vmov	r2, s5
 801cf86:	eef0 2a47 	vmov.f32	s5, s14
 801cf8a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf8e:	ee13 2a10 	vmov	r2, s6
 801cf92:	931f      	str	r3, [sp, #124]	@ 0x7c
 801cf94:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cf96:	eeb0 3a67 	vmov.f32	s6, s15
 801cf9a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf9e:	9320      	str	r3, [sp, #128]	@ 0x80
 801cfa0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801cfa2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801cfa4:	3b01      	subs	r3, #1
 801cfa6:	930e      	str	r3, [sp, #56]	@ 0x38
 801cfa8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cfaa:	bf08      	it	eq
 801cfac:	4613      	moveq	r3, r2
 801cfae:	9306      	str	r3, [sp, #24]
 801cfb0:	e61f      	b.n	801cbf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cfb2:	fb08 f505 	mul.w	r5, r8, r5
 801cfb6:	fb09 5303 	mla	r3, r9, r3, r5
 801cfba:	e69f      	b.n	801ccfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801cfbc:	4681      	mov	r9, r0
 801cfbe:	e6c6      	b.n	801cd4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801cfc0:	f1c1 0210 	rsb	r2, r1, #16
 801cfc4:	4341      	muls	r1, r0
 801cfc6:	fb09 1902 	mla	r9, r9, r2, r1
 801cfca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cfce:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cfd2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cfd6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cfda:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cfde:	ea42 0909 	orr.w	r9, r2, r9
 801cfe2:	fa1f f289 	uxth.w	r2, r9
 801cfe6:	e75b      	b.n	801cea0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 801cfe8:	f8b7 c000 	ldrh.w	ip, [r7]
 801cfec:	43db      	mvns	r3, r3
 801cfee:	ea4f 202c 	mov.w	r0, ip, asr #8
 801cff2:	fa5f fe83 	uxtb.w	lr, r3
 801cff6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801cffa:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cffe:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d002:	fb00 f00e 	mul.w	r0, r0, lr
 801d006:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d00a:	b2db      	uxtb	r3, r3
 801d00c:	1c41      	adds	r1, r0, #1
 801d00e:	fb05 f50e 	mul.w	r5, r5, lr
 801d012:	fb03 f30e 	mul.w	r3, r3, lr
 801d016:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d01a:	1211      	asrs	r1, r2, #8
 801d01c:	f021 0107 	bic.w	r1, r1, #7
 801d020:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d024:	48d3      	ldr	r0, [pc, #844]	@ (801d374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801d026:	b2c9      	uxtb	r1, r1
 801d028:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d02c:	1c69      	adds	r1, r5, #1
 801d02e:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d032:	10d1      	asrs	r1, r2, #3
 801d034:	00d2      	lsls	r2, r2, #3
 801d036:	f021 0103 	bic.w	r1, r1, #3
 801d03a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d03e:	00c9      	lsls	r1, r1, #3
 801d040:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d044:	4301      	orrs	r1, r0
 801d046:	1c58      	adds	r0, r3, #1
 801d048:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d04c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d050:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d054:	430a      	orrs	r2, r1
 801d056:	e726      	b.n	801cea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801d058:	f115 0e01 	adds.w	lr, r5, #1
 801d05c:	f53f af24 	bmi.w	801cea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d060:	4572      	cmp	r2, lr
 801d062:	f6ff af21 	blt.w	801cea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d066:	f110 0e01 	adds.w	lr, r0, #1
 801d06a:	f53f af1d 	bmi.w	801cea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d06e:	4573      	cmp	r3, lr
 801d070:	f6ff af1a 	blt.w	801cea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d074:	b21b      	sxth	r3, r3
 801d076:	b212      	sxth	r2, r2
 801d078:	9301      	str	r3, [sp, #4]
 801d07a:	9200      	str	r2, [sp, #0]
 801d07c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d080:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d084:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d088:	4639      	mov	r1, r7
 801d08a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801d08c:	f7ff fc22 	bl	801c8d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d090:	e70a      	b.n	801cea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d092:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d094:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d098:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d09a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d09e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d0a0:	fa1f fc82 	uxth.w	ip, r2
 801d0a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d0a8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d0aa:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d0ae:	141f      	asrs	r7, r3, #16
 801d0b0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d0b2:	141b      	asrs	r3, r3, #16
 801d0b4:	fb01 3707 	mla	r7, r1, r7, r3
 801d0b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d0ba:	eb03 0a07 	add.w	sl, r3, r7
 801d0be:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d0c2:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801d0c6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d0ca:	b29b      	uxth	r3, r3
 801d0cc:	2d00      	cmp	r5, #0
 801d0ce:	f000 80fe 	beq.w	801d2ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801d0d2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d0d6:	eb0a 0b01 	add.w	fp, sl, r1
 801d0da:	fa1f fa85 	uxth.w	sl, r5
 801d0de:	940c      	str	r4, [sp, #48]	@ 0x30
 801d0e0:	fb0a fc0c 	mul.w	ip, sl, ip
 801d0e4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d0e8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d0ec:	eba0 000c 	sub.w	r0, r0, ip
 801d0f0:	940d      	str	r4, [sp, #52]	@ 0x34
 801d0f2:	fa1f fa8a 	uxth.w	sl, sl
 801d0f6:	b280      	uxth	r0, r0
 801d0f8:	eba3 030a 	sub.w	r3, r3, sl
 801d0fc:	fb08 f000 	mul.w	r0, r8, r0
 801d100:	b29b      	uxth	r3, r3
 801d102:	fb09 0303 	mla	r3, r9, r3, r0
 801d106:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d108:	fb0a 3300 	mla	r3, sl, r0, r3
 801d10c:	fb0c 3304 	mla	r3, ip, r4, r3
 801d110:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d114:	2b00      	cmp	r3, #0
 801d116:	f000 80cc 	beq.w	801d2b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801d11a:	9808      	ldr	r0, [sp, #32]
 801d11c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d120:	9c08      	ldr	r4, [sp, #32]
 801d122:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d126:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d12a:	f000 80d5 	beq.w	801d2d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d12e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d132:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d136:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d13a:	fb0a fc0c 	mul.w	ip, sl, ip
 801d13e:	fb09 f707 	mul.w	r7, r9, r7
 801d142:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d146:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d14a:	f107 0b20 	add.w	fp, r7, #32
 801d14e:	44cc      	add	ip, r9
 801d150:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d154:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d158:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d15c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d160:	ea4c 0909 	orr.w	r9, ip, r9
 801d164:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d168:	8847      	ldrh	r7, [r0, #2]
 801d16a:	d019      	beq.n	801d1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 801d16c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d170:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d174:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d178:	fb0a fc0c 	mul.w	ip, sl, ip
 801d17c:	fb08 f807 	mul.w	r8, r8, r7
 801d180:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d184:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d188:	f108 0b20 	add.w	fp, r8, #32
 801d18c:	44bc      	add	ip, r7
 801d18e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d192:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d196:	0a3f      	lsrs	r7, r7, #8
 801d198:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d19c:	ea4c 0707 	orr.w	r7, ip, r7
 801d1a0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d1a4:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d1a8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d1ac:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d1b0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d1b4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d1b8:	ea4c 0909 	orr.w	r9, ip, r9
 801d1bc:	ea4a 0707 	orr.w	r7, sl, r7
 801d1c0:	2d00      	cmp	r5, #0
 801d1c2:	f000 808b 	beq.w	801d2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801d1c6:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d1ca:	3901      	subs	r1, #1
 801d1cc:	0049      	lsls	r1, r1, #1
 801d1ce:	3102      	adds	r1, #2
 801d1d0:	eb00 0c01 	add.w	ip, r0, r1
 801d1d4:	5a41      	ldrh	r1, [r0, r1]
 801d1d6:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d1d8:	28ff      	cmp	r0, #255	@ 0xff
 801d1da:	d019      	beq.n	801d210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 801d1dc:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801d1e0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801d1e2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d1e6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d1ea:	fb04 fa01 	mul.w	sl, r4, r1
 801d1ee:	fb08 f800 	mul.w	r8, r8, r0
 801d1f2:	f10a 0020 	add.w	r0, sl, #32
 801d1f6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d1fa:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d1fe:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d202:	4441      	add	r1, r8
 801d204:	0a00      	lsrs	r0, r0, #8
 801d206:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d20a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d20e:	4301      	orrs	r1, r0
 801d210:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d212:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d216:	2cff      	cmp	r4, #255	@ 0xff
 801d218:	d01a      	beq.n	801d250 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 801d21a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801d21e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d222:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d226:	fb04 fa00 	mul.w	sl, r4, r0
 801d22a:	fb08 f80c 	mul.w	r8, r8, ip
 801d22e:	f10a 0c20 	add.w	ip, sl, #32
 801d232:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d236:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d23a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d23e:	4440      	add	r0, r8
 801d240:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d244:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d248:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d24c:	ea40 000c 	orr.w	r0, r0, ip
 801d250:	fb15 fc02 	smulbb	ip, r5, r2
 801d254:	f1c5 0810 	rsb	r8, r5, #16
 801d258:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d25c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d260:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d264:	eba8 0802 	sub.w	r8, r8, r2
 801d268:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d26c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d270:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d274:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d278:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d27c:	ea4a 0101 	orr.w	r1, sl, r1
 801d280:	437a      	muls	r2, r7
 801d282:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d286:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d28a:	fb09 2208 	mla	r2, r9, r8, r2
 801d28e:	ea4b 0000 	orr.w	r0, fp, r0
 801d292:	fb05 2201 	mla	r2, r5, r1, r2
 801d296:	fb0c 2200 	mla	r2, ip, r0, r2
 801d29a:	0d57      	lsrs	r7, r2, #21
 801d29c:	0952      	lsrs	r2, r2, #5
 801d29e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d2a2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d2a6:	433a      	orrs	r2, r7
 801d2a8:	2bff      	cmp	r3, #255	@ 0xff
 801d2aa:	b292      	uxth	r2, r2
 801d2ac:	d127      	bne.n	801d2fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 801d2ae:	f8ae 2000 	strh.w	r2, [lr]
 801d2b2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d2b4:	f10e 0e02 	add.w	lr, lr, #2
 801d2b8:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d2ba:	4413      	add	r3, r2
 801d2bc:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d2be:	931d      	str	r3, [sp, #116]	@ 0x74
 801d2c0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d2c2:	441a      	add	r2, r3
 801d2c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d2c6:	3b01      	subs	r3, #1
 801d2c8:	921e      	str	r2, [sp, #120]	@ 0x78
 801d2ca:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d2cc:	e627      	b.n	801cf1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d2ce:	fb08 f000 	mul.w	r0, r8, r0
 801d2d2:	fb09 0303 	mla	r3, r9, r3, r0
 801d2d6:	e71b      	b.n	801d110 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 801d2d8:	46b9      	mov	r9, r7
 801d2da:	e743      	b.n	801d164 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 801d2dc:	f1c2 0110 	rsb	r1, r2, #16
 801d2e0:	437a      	muls	r2, r7
 801d2e2:	fb09 2901 	mla	r9, r9, r1, r2
 801d2e6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d2ea:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d2ee:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d2f2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d2f6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d2fa:	4302      	orrs	r2, r0
 801d2fc:	e7d4      	b.n	801d2a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 801d2fe:	f8be 7000 	ldrh.w	r7, [lr]
 801d302:	43db      	mvns	r3, r3
 801d304:	4c1b      	ldr	r4, [pc, #108]	@ (801d374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801d306:	1238      	asrs	r0, r7, #8
 801d308:	fa5f fc83 	uxtb.w	ip, r3
 801d30c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d310:	10fd      	asrs	r5, r7, #3
 801d312:	00fb      	lsls	r3, r7, #3
 801d314:	fb00 f00c 	mul.w	r0, r0, ip
 801d318:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d31c:	b2db      	uxtb	r3, r3
 801d31e:	fb05 f10c 	mul.w	r1, r5, ip
 801d322:	1c45      	adds	r5, r0, #1
 801d324:	fb03 f30c 	mul.w	r3, r3, ip
 801d328:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d32c:	1215      	asrs	r5, r2, #8
 801d32e:	f025 0507 	bic.w	r5, r5, #7
 801d332:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d336:	1c4d      	adds	r5, r1, #1
 801d338:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d33c:	10d1      	asrs	r1, r2, #3
 801d33e:	b2c0      	uxtb	r0, r0
 801d340:	f021 0103 	bic.w	r1, r1, #3
 801d344:	00d2      	lsls	r2, r2, #3
 801d346:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d34a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d34e:	00c9      	lsls	r1, r1, #3
 801d350:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d354:	4308      	orrs	r0, r1
 801d356:	1c59      	adds	r1, r3, #1
 801d358:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d35c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d360:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d364:	4318      	orrs	r0, r3
 801d366:	f8ae 0000 	strh.w	r0, [lr]
 801d36a:	e7a2      	b.n	801d2b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801d36c:	b013      	add	sp, #76	@ 0x4c
 801d36e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d372:	bf00      	nop
 801d374:	fffff800 	.word	0xfffff800

0801d378 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d378:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d37c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801d380:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d384:	fb05 4c03 	mla	ip, r5, r3, r4
 801d388:	2d00      	cmp	r5, #0
 801d38a:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801d38e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801d392:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d396:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801d39a:	8808      	ldrh	r0, [r1, #0]
 801d39c:	f2c0 80a7 	blt.w	801d4ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d3a0:	45aa      	cmp	sl, r5
 801d3a2:	f340 80a4 	ble.w	801d4ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d3a6:	2c00      	cmp	r4, #0
 801d3a8:	f2c0 809f 	blt.w	801d4ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d3ac:	42a3      	cmp	r3, r4
 801d3ae:	f340 809c 	ble.w	801d4ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d3b2:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d3b6:	1c62      	adds	r2, r4, #1
 801d3b8:	f100 809c 	bmi.w	801d4f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d3bc:	4293      	cmp	r3, r2
 801d3be:	f340 8099 	ble.w	801d4f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d3c2:	f1b9 0f00 	cmp.w	r9, #0
 801d3c6:	f000 8095 	beq.w	801d4f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d3ca:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d3ce:	3501      	adds	r5, #1
 801d3d0:	f100 8094 	bmi.w	801d4fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d3d4:	45aa      	cmp	sl, r5
 801d3d6:	f340 8091 	ble.w	801d4fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d3da:	2f00      	cmp	r7, #0
 801d3dc:	f000 808e 	beq.w	801d4fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d3e0:	2c00      	cmp	r4, #0
 801d3e2:	f2c0 8089 	blt.w	801d4f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d3e6:	42a3      	cmp	r3, r4
 801d3e8:	f340 8086 	ble.w	801d4f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d3ec:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d3f0:	3401      	adds	r4, #1
 801d3f2:	f100 8086 	bmi.w	801d502 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d3f6:	42a3      	cmp	r3, r4
 801d3f8:	f340 8083 	ble.w	801d502 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d3fc:	f1b9 0f00 	cmp.w	r9, #0
 801d400:	d07f      	beq.n	801d502 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d402:	3301      	adds	r3, #1
 801d404:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d408:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d40c:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801d410:	fb19 fe07 	smulbb	lr, r9, r7
 801d414:	f1c7 0210 	rsb	r2, r7, #16
 801d418:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d41c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d420:	eba2 0209 	sub.w	r2, r2, r9
 801d424:	ea44 0808 	orr.w	r8, r4, r8
 801d428:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d42c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801d430:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d434:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d438:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d43c:	ea44 0c0c 	orr.w	ip, r4, ip
 801d440:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d444:	fb04 f40c 	mul.w	r4, r4, ip
 801d448:	fb02 4808 	mla	r8, r2, r8, r4
 801d44c:	041a      	lsls	r2, r3, #16
 801d44e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d452:	b2b4      	uxth	r4, r6
 801d454:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801d458:	43f6      	mvns	r6, r6
 801d45a:	4313      	orrs	r3, r2
 801d45c:	042a      	lsls	r2, r5, #16
 801d45e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d462:	b2f6      	uxtb	r6, r6
 801d464:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801d468:	fb0e 8303 	mla	r3, lr, r3, r8
 801d46c:	432a      	orrs	r2, r5
 801d46e:	fb07 3202 	mla	r2, r7, r2, r3
 801d472:	10c7      	asrs	r7, r0, #3
 801d474:	0d53      	lsrs	r3, r2, #21
 801d476:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d47a:	0952      	lsrs	r2, r2, #5
 801d47c:	fb17 f706 	smulbb	r7, r7, r6
 801d480:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d484:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d488:	431a      	orrs	r2, r3
 801d48a:	b293      	uxth	r3, r2
 801d48c:	1202      	asrs	r2, r0, #8
 801d48e:	121d      	asrs	r5, r3, #8
 801d490:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801d494:	00c0      	lsls	r0, r0, #3
 801d496:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d49a:	fb12 f206 	smulbb	r2, r2, r6
 801d49e:	b2c0      	uxtb	r0, r0
 801d4a0:	fb05 2504 	mla	r5, r5, r4, r2
 801d4a4:	10da      	asrs	r2, r3, #3
 801d4a6:	fb10 f006 	smulbb	r0, r0, r6
 801d4aa:	00db      	lsls	r3, r3, #3
 801d4ac:	b2ad      	uxth	r5, r5
 801d4ae:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801d4b2:	b2db      	uxtb	r3, r3
 801d4b4:	fb02 7204 	mla	r2, r2, r4, r7
 801d4b8:	fb03 0004 	mla	r0, r3, r4, r0
 801d4bc:	1c6b      	adds	r3, r5, #1
 801d4be:	b292      	uxth	r2, r2
 801d4c0:	b280      	uxth	r0, r0
 801d4c2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d4c6:	1c43      	adds	r3, r0, #1
 801d4c8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d4cc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d4d0:	1c50      	adds	r0, r2, #1
 801d4d2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d4d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d4da:	0952      	lsrs	r2, r2, #5
 801d4dc:	432b      	orrs	r3, r5
 801d4de:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d4e2:	4313      	orrs	r3, r2
 801d4e4:	800b      	strh	r3, [r1, #0]
 801d4e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d4ea:	4680      	mov	r8, r0
 801d4ec:	e763      	b.n	801d3b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d4ee:	4684      	mov	ip, r0
 801d4f0:	4680      	mov	r8, r0
 801d4f2:	e76c      	b.n	801d3ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d4f4:	4684      	mov	ip, r0
 801d4f6:	e76a      	b.n	801d3ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d4f8:	4605      	mov	r5, r0
 801d4fa:	e779      	b.n	801d3f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d4fc:	4603      	mov	r3, r0
 801d4fe:	4605      	mov	r5, r0
 801d500:	e782      	b.n	801d408 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d502:	4603      	mov	r3, r0
 801d504:	e780      	b.n	801d408 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d506 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d506:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d50a:	b093      	sub	sp, #76	@ 0x4c
 801d50c:	461d      	mov	r5, r3
 801d50e:	9210      	str	r2, [sp, #64]	@ 0x40
 801d510:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d512:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801d516:	910a      	str	r1, [sp, #40]	@ 0x28
 801d518:	920b      	str	r2, [sp, #44]	@ 0x2c
 801d51a:	6859      	ldr	r1, [r3, #4]
 801d51c:	681b      	ldr	r3, [r3, #0]
 801d51e:	9011      	str	r0, [sp, #68]	@ 0x44
 801d520:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801d524:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801d528:	fb01 2707 	mla	r7, r1, r7, r2
 801d52c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d530:	9307      	str	r3, [sp, #28]
 801d532:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d534:	681b      	ldr	r3, [r3, #0]
 801d536:	9309      	str	r3, [sp, #36]	@ 0x24
 801d538:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d53a:	43db      	mvns	r3, r3
 801d53c:	b2db      	uxtb	r3, r3
 801d53e:	9308      	str	r3, [sp, #32]
 801d540:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d542:	2b00      	cmp	r3, #0
 801d544:	dc03      	bgt.n	801d54e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d546:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d548:	2b00      	cmp	r3, #0
 801d54a:	f340 8205 	ble.w	801d958 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d54e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d550:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d554:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d558:	1e48      	subs	r0, r1, #1
 801d55a:	f102 3cff 	add.w	ip, r2, #4294967295
 801d55e:	2d00      	cmp	r5, #0
 801d560:	f340 80da 	ble.w	801d718 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d564:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d568:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d56c:	d406      	bmi.n	801d57c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d56e:	4586      	cmp	lr, r0
 801d570:	da04      	bge.n	801d57c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d572:	2b00      	cmp	r3, #0
 801d574:	db02      	blt.n	801d57c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d576:	4563      	cmp	r3, ip
 801d578:	f2c0 80cf 	blt.w	801d71a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d57c:	f11e 0e01 	adds.w	lr, lr, #1
 801d580:	f100 80c1 	bmi.w	801d706 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d584:	4571      	cmp	r1, lr
 801d586:	f2c0 80be 	blt.w	801d706 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d58a:	3301      	adds	r3, #1
 801d58c:	f100 80bb 	bmi.w	801d706 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d590:	429a      	cmp	r2, r3
 801d592:	f2c0 80b8 	blt.w	801d706 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d596:	46a9      	mov	r9, r5
 801d598:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d59c:	f1b9 0f00 	cmp.w	r9, #0
 801d5a0:	f340 80d8 	ble.w	801d754 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d5a4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d5a6:	1421      	asrs	r1, r4, #16
 801d5a8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d5ac:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d5b0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d5b4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d5b8:	f100 8112 	bmi.w	801d7e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d5bc:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d5c0:	4551      	cmp	r1, sl
 801d5c2:	f280 810d 	bge.w	801d7e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d5c6:	2800      	cmp	r0, #0
 801d5c8:	f2c0 810a 	blt.w	801d7e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d5cc:	f103 3aff 	add.w	sl, r3, #4294967295
 801d5d0:	4550      	cmp	r0, sl
 801d5d2:	f280 8105 	bge.w	801d7e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d5d6:	fa0f f38e 	sxth.w	r3, lr
 801d5da:	fb00 1103 	mla	r1, r0, r3, r1
 801d5de:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801d5e0:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d5e4:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d5e8:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d5ec:	f1bc 0f00 	cmp.w	ip, #0
 801d5f0:	d007      	beq.n	801d602 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d5f2:	005b      	lsls	r3, r3, #1
 801d5f4:	eb0a 0003 	add.w	r0, sl, r3
 801d5f8:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d5fc:	930c      	str	r3, [sp, #48]	@ 0x30
 801d5fe:	8843      	ldrh	r3, [r0, #2]
 801d600:	930d      	str	r3, [sp, #52]	@ 0x34
 801d602:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d606:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d60a:	fb12 f30c 	smulbb	r3, r2, ip
 801d60e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d612:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801d616:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d61a:	10db      	asrs	r3, r3, #3
 801d61c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d620:	ea40 000e 	orr.w	r0, r0, lr
 801d624:	f1cc 0e10 	rsb	lr, ip, #16
 801d628:	ea4a 0101 	orr.w	r1, sl, r1
 801d62c:	9f08      	ldr	r7, [sp, #32]
 801d62e:	ebae 0e02 	sub.w	lr, lr, r2
 801d632:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d636:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d63a:	4351      	muls	r1, r2
 801d63c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801d63e:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d642:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801d644:	0410      	lsls	r0, r2, #16
 801d646:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d64a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801d64e:	4310      	orrs	r0, r2
 801d650:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801d652:	0412      	lsls	r2, r2, #16
 801d654:	fb03 e000 	mla	r0, r3, r0, lr
 801d658:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801d65c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d660:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801d664:	ea42 020e 	orr.w	r2, r2, lr
 801d668:	fb03 0302 	mla	r3, r3, r2, r0
 801d66c:	f8b8 0000 	ldrh.w	r0, [r8]
 801d670:	0d5a      	lsrs	r2, r3, #21
 801d672:	095b      	lsrs	r3, r3, #5
 801d674:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d678:	1201      	asrs	r1, r0, #8
 801d67a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d67e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d682:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801d686:	00c0      	lsls	r0, r0, #3
 801d688:	4313      	orrs	r3, r2
 801d68a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801d68e:	fb11 f107 	smulbb	r1, r1, r7
 801d692:	b2c0      	uxtb	r0, r0
 801d694:	b29b      	uxth	r3, r3
 801d696:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801d69a:	fb10 f007 	smulbb	r0, r0, r7
 801d69e:	fb1e fe07 	smulbb	lr, lr, r7
 801d6a2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d6a6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d6aa:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d6ae:	10d9      	asrs	r1, r3, #3
 801d6b0:	00db      	lsls	r3, r3, #3
 801d6b2:	fa1f fc8c 	uxth.w	ip, ip
 801d6b6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d6ba:	b2db      	uxtb	r3, r3
 801d6bc:	fb01 e102 	mla	r1, r1, r2, lr
 801d6c0:	fb03 0302 	mla	r3, r3, r2, r0
 801d6c4:	b289      	uxth	r1, r1
 801d6c6:	b29a      	uxth	r2, r3
 801d6c8:	f10c 0301 	add.w	r3, ip, #1
 801d6cc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d6d0:	1c53      	adds	r3, r2, #1
 801d6d2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d6d6:	1c4a      	adds	r2, r1, #1
 801d6d8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801d6dc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d6e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d6e4:	0949      	lsrs	r1, r1, #5
 801d6e6:	ea43 030c 	orr.w	r3, r3, ip
 801d6ea:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d6ee:	430b      	orrs	r3, r1
 801d6f0:	f8a8 3000 	strh.w	r3, [r8]
 801d6f4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d6f6:	f108 0802 	add.w	r8, r8, #2
 801d6fa:	f109 39ff 	add.w	r9, r9, #4294967295
 801d6fe:	441c      	add	r4, r3
 801d700:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d702:	441e      	add	r6, r3
 801d704:	e74a      	b.n	801d59c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d706:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d708:	3d01      	subs	r5, #1
 801d70a:	441c      	add	r4, r3
 801d70c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d70e:	441e      	add	r6, r3
 801d710:	9b07      	ldr	r3, [sp, #28]
 801d712:	3302      	adds	r3, #2
 801d714:	9307      	str	r3, [sp, #28]
 801d716:	e722      	b.n	801d55e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d718:	d022      	beq.n	801d760 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d71a:	1e6b      	subs	r3, r5, #1
 801d71c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d71e:	fb00 4003 	mla	r0, r0, r3, r4
 801d722:	1400      	asrs	r0, r0, #16
 801d724:	f53f af37 	bmi.w	801d596 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d728:	3901      	subs	r1, #1
 801d72a:	4288      	cmp	r0, r1
 801d72c:	f6bf af33 	bge.w	801d596 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d730:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801d732:	fb01 6303 	mla	r3, r1, r3, r6
 801d736:	141b      	asrs	r3, r3, #16
 801d738:	f53f af2d 	bmi.w	801d596 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d73c:	3a01      	subs	r2, #1
 801d73e:	4293      	cmp	r3, r2
 801d740:	f6bf af29 	bge.w	801d596 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d744:	46a8      	mov	r8, r5
 801d746:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d74a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801d74e:	f1b8 0f00 	cmp.w	r8, #0
 801d752:	dc60      	bgt.n	801d816 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801d754:	9b07      	ldr	r3, [sp, #28]
 801d756:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d75a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d75e:	9307      	str	r3, [sp, #28]
 801d760:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d762:	2b00      	cmp	r3, #0
 801d764:	f340 80f8 	ble.w	801d958 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d768:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d76c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d76e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d772:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d776:	eef0 6a62 	vmov.f32	s13, s5
 801d77a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d77e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d782:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d786:	ee16 4a90 	vmov	r4, s13
 801d78a:	eef0 6a43 	vmov.f32	s13, s6
 801d78e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d792:	ee16 6a90 	vmov	r6, s13
 801d796:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d79a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d79e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d7a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d7a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d7aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d7ae:	ee12 2a90 	vmov	r2, s5
 801d7b2:	eef0 2a47 	vmov.f32	s5, s14
 801d7b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d7ba:	ee13 2a10 	vmov	r2, s6
 801d7be:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d7c0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d7c2:	eeb0 3a67 	vmov.f32	s6, s15
 801d7c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d7ca:	9320      	str	r3, [sp, #128]	@ 0x80
 801d7cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d7ce:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801d7d0:	3b01      	subs	r3, #1
 801d7d2:	930a      	str	r3, [sp, #40]	@ 0x28
 801d7d4:	bf08      	it	eq
 801d7d6:	4615      	moveq	r5, r2
 801d7d8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d7da:	bf18      	it	ne
 801d7dc:	461d      	movne	r5, r3
 801d7de:	e6af      	b.n	801d540 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d7e0:	f111 0a01 	adds.w	sl, r1, #1
 801d7e4:	d486      	bmi.n	801d6f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d7e6:	45d6      	cmp	lr, sl
 801d7e8:	db84      	blt.n	801d6f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d7ea:	f110 0a01 	adds.w	sl, r0, #1
 801d7ee:	d481      	bmi.n	801d6f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d7f0:	4553      	cmp	r3, sl
 801d7f2:	f6ff af7f 	blt.w	801d6f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d7f6:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801d7f8:	b21b      	sxth	r3, r3
 801d7fa:	9101      	str	r1, [sp, #4]
 801d7fc:	4641      	mov	r1, r8
 801d7fe:	9300      	str	r3, [sp, #0]
 801d800:	fa0f f38e 	sxth.w	r3, lr
 801d804:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d808:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d80c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d80e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801d810:	f7ff fdb2 	bl	801d378 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d814:	e76e      	b.n	801d6f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d816:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d818:	1430      	asrs	r0, r6, #16
 801d81a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801d81c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d820:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d824:	1423      	asrs	r3, r4, #16
 801d826:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d82a:	fb01 3000 	mla	r0, r1, r0, r3
 801d82e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d830:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d834:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d838:	8858      	ldrh	r0, [r3, #2]
 801d83a:	f1be 0f00 	cmp.w	lr, #0
 801d83e:	d00b      	beq.n	801d858 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801d840:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d844:	3901      	subs	r1, #1
 801d846:	0049      	lsls	r1, r1, #1
 801d848:	3102      	adds	r1, #2
 801d84a:	eb03 0b01 	add.w	fp, r3, r1
 801d84e:	5a5b      	ldrh	r3, [r3, r1]
 801d850:	930e      	str	r3, [sp, #56]	@ 0x38
 801d852:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d856:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d858:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d85c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801d860:	fb12 f30e 	smulbb	r3, r2, lr
 801d864:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d868:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801d86c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d870:	10db      	asrs	r3, r3, #3
 801d872:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d876:	ea41 010c 	orr.w	r1, r1, ip
 801d87a:	f1ce 0c10 	rsb	ip, lr, #16
 801d87e:	ea4b 0000 	orr.w	r0, fp, r0
 801d882:	9f08      	ldr	r7, [sp, #32]
 801d884:	ebac 0c02 	sub.w	ip, ip, r2
 801d888:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d88c:	f108 38ff 	add.w	r8, r8, #4294967295
 801d890:	4350      	muls	r0, r2
 801d892:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d896:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d898:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d89c:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801d89e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d8a2:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801d8a6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801d8a8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d8ac:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d8b0:	0412      	lsls	r2, r2, #16
 801d8b2:	ea4b 0101 	orr.w	r1, fp, r1
 801d8b6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801d8ba:	fb03 c101 	mla	r1, r3, r1, ip
 801d8be:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d8c2:	4302      	orrs	r2, r0
 801d8c4:	fb03 1202 	mla	r2, r3, r2, r1
 801d8c8:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d8cc:	0952      	lsrs	r2, r2, #5
 801d8ce:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801d8d2:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801d8d6:	f8b9 2000 	ldrh.w	r2, [r9]
 801d8da:	ea4b 0303 	orr.w	r3, fp, r3
 801d8de:	1211      	asrs	r1, r2, #8
 801d8e0:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d8e4:	b29b      	uxth	r3, r3
 801d8e6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801d8ea:	00d2      	lsls	r2, r2, #3
 801d8ec:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801d8f0:	fb11 f107 	smulbb	r1, r1, r7
 801d8f4:	1218      	asrs	r0, r3, #8
 801d8f6:	fb1c fc07 	smulbb	ip, ip, r7
 801d8fa:	b2d2      	uxtb	r2, r2
 801d8fc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d900:	fb12 f207 	smulbb	r2, r2, r7
 801d904:	fb00 100a 	mla	r0, r0, sl, r1
 801d908:	10d9      	asrs	r1, r3, #3
 801d90a:	00db      	lsls	r3, r3, #3
 801d90c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d910:	b280      	uxth	r0, r0
 801d912:	b2db      	uxtb	r3, r3
 801d914:	fb01 c10a 	mla	r1, r1, sl, ip
 801d918:	fb03 230a 	mla	r3, r3, sl, r2
 801d91c:	1c42      	adds	r2, r0, #1
 801d91e:	b289      	uxth	r1, r1
 801d920:	b29b      	uxth	r3, r3
 801d922:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d926:	f101 0c01 	add.w	ip, r1, #1
 801d92a:	1c5a      	adds	r2, r3, #1
 801d92c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d930:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801d934:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d938:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d93a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d93e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d942:	441c      	add	r4, r3
 801d944:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d948:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d94a:	4310      	orrs	r0, r2
 801d94c:	441e      	add	r6, r3
 801d94e:	ea40 000c 	orr.w	r0, r0, ip
 801d952:	f829 0b02 	strh.w	r0, [r9], #2
 801d956:	e6fa      	b.n	801d74e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d958:	b013      	add	sp, #76	@ 0x4c
 801d95a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d95e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d95e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d962:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d966:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801d96a:	fb0e 4703 	mla	r7, lr, r3, r4
 801d96e:	f1be 0f00 	cmp.w	lr, #0
 801d972:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801d976:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801d97a:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801d97e:	8808      	ldrh	r0, [r1, #0]
 801d980:	db60      	blt.n	801da44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d982:	45f1      	cmp	r9, lr
 801d984:	dd5e      	ble.n	801da44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d986:	2c00      	cmp	r4, #0
 801d988:	db5a      	blt.n	801da40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d98a:	42a3      	cmp	r3, r4
 801d98c:	dd58      	ble.n	801da40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d98e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801d992:	1c62      	adds	r2, r4, #1
 801d994:	d459      	bmi.n	801da4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d996:	4293      	cmp	r3, r2
 801d998:	dd57      	ble.n	801da4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d99a:	2d00      	cmp	r5, #0
 801d99c:	d055      	beq.n	801da4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d99e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801d9a2:	f11e 0e01 	adds.w	lr, lr, #1
 801d9a6:	d454      	bmi.n	801da52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d9a8:	45f1      	cmp	r9, lr
 801d9aa:	dd52      	ble.n	801da52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d9ac:	2e00      	cmp	r6, #0
 801d9ae:	d050      	beq.n	801da52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d9b0:	2c00      	cmp	r4, #0
 801d9b2:	db4c      	blt.n	801da4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d9b4:	42a3      	cmp	r3, r4
 801d9b6:	dd4a      	ble.n	801da4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d9b8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801d9bc:	3401      	adds	r4, #1
 801d9be:	d405      	bmi.n	801d9cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d9c0:	42a3      	cmp	r3, r4
 801d9c2:	dd03      	ble.n	801d9cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d9c4:	b115      	cbz	r5, 801d9cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d9c6:	3301      	adds	r3, #1
 801d9c8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801d9cc:	fb15 f406 	smulbb	r4, r5, r6
 801d9d0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801d9d4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801d9d8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801d9dc:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801d9e0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801d9e4:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801d9e8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d9ec:	ea43 0c0c 	orr.w	ip, r3, ip
 801d9f0:	f1c6 0310 	rsb	r3, r6, #16
 801d9f4:	ea4e 0707 	orr.w	r7, lr, r7
 801d9f8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801d9fc:	1b5b      	subs	r3, r3, r5
 801d9fe:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801da02:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801da06:	437d      	muls	r5, r7
 801da08:	fb03 5c0c 	mla	ip, r3, ip, r5
 801da0c:	0403      	lsls	r3, r0, #16
 801da0e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801da12:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801da16:	4318      	orrs	r0, r3
 801da18:	0413      	lsls	r3, r2, #16
 801da1a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801da1e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801da22:	fb04 c000 	mla	r0, r4, r0, ip
 801da26:	4313      	orrs	r3, r2
 801da28:	fb06 0003 	mla	r0, r6, r3, r0
 801da2c:	0d43      	lsrs	r3, r0, #21
 801da2e:	0940      	lsrs	r0, r0, #5
 801da30:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801da34:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801da38:	4318      	orrs	r0, r3
 801da3a:	8008      	strh	r0, [r1, #0]
 801da3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801da40:	4684      	mov	ip, r0
 801da42:	e7a6      	b.n	801d992 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801da44:	4607      	mov	r7, r0
 801da46:	4684      	mov	ip, r0
 801da48:	e7ab      	b.n	801d9a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801da4a:	4607      	mov	r7, r0
 801da4c:	e7a9      	b.n	801d9a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801da4e:	4602      	mov	r2, r0
 801da50:	e7b4      	b.n	801d9bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801da52:	4602      	mov	r2, r0
 801da54:	e7ba      	b.n	801d9cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801da56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801da56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da5a:	b08f      	sub	sp, #60	@ 0x3c
 801da5c:	461d      	mov	r5, r3
 801da5e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801da60:	9107      	str	r1, [sp, #28]
 801da62:	920c      	str	r2, [sp, #48]	@ 0x30
 801da64:	6859      	ldr	r1, [r3, #4]
 801da66:	681b      	ldr	r3, [r3, #0]
 801da68:	900d      	str	r0, [sp, #52]	@ 0x34
 801da6a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801da6e:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801da72:	fb01 2707 	mla	r7, r1, r7, r2
 801da76:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801da7a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801da7c:	f8d3 8000 	ldr.w	r8, [r3]
 801da80:	9b07      	ldr	r3, [sp, #28]
 801da82:	2b00      	cmp	r3, #0
 801da84:	dc03      	bgt.n	801da8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801da86:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801da88:	2b00      	cmp	r3, #0
 801da8a:	f340 8182 	ble.w	801dd92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801da8e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801da90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801da94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801da98:	1e48      	subs	r0, r1, #1
 801da9a:	f102 3cff 	add.w	ip, r2, #4294967295
 801da9e:	2d00      	cmp	r5, #0
 801daa0:	f340 809b 	ble.w	801dbda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801daa4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801daa8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801daac:	d406      	bmi.n	801dabc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801daae:	4586      	cmp	lr, r0
 801dab0:	da04      	bge.n	801dabc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dab2:	2b00      	cmp	r3, #0
 801dab4:	db02      	blt.n	801dabc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dab6:	4563      	cmp	r3, ip
 801dab8:	f2c0 8090 	blt.w	801dbdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801dabc:	f11e 0e01 	adds.w	lr, lr, #1
 801dac0:	f100 8084 	bmi.w	801dbcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801dac4:	4571      	cmp	r1, lr
 801dac6:	f2c0 8081 	blt.w	801dbcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801daca:	3301      	adds	r3, #1
 801dacc:	d47e      	bmi.n	801dbcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801dace:	429a      	cmp	r2, r3
 801dad0:	db7c      	blt.n	801dbcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801dad2:	46aa      	mov	sl, r5
 801dad4:	46b9      	mov	r9, r7
 801dad6:	f1ba 0f00 	cmp.w	sl, #0
 801dada:	f340 8099 	ble.w	801dc10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801dade:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dae0:	1421      	asrs	r1, r4, #16
 801dae2:	ea4f 4026 	mov.w	r0, r6, asr #16
 801dae6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801daea:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801daee:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801daf2:	f100 80d1 	bmi.w	801dc98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801daf6:	f10e 3bff 	add.w	fp, lr, #4294967295
 801dafa:	4559      	cmp	r1, fp
 801dafc:	f280 80cc 	bge.w	801dc98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801db00:	2800      	cmp	r0, #0
 801db02:	f2c0 80c9 	blt.w	801dc98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801db06:	f103 3bff 	add.w	fp, r3, #4294967295
 801db0a:	4558      	cmp	r0, fp
 801db0c:	f280 80c4 	bge.w	801dc98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801db10:	fa0f fe8e 	sxth.w	lr, lr
 801db14:	fb00 110e 	mla	r1, r0, lr, r1
 801db18:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801db1c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801db20:	8841      	ldrh	r1, [r0, #2]
 801db22:	f1bc 0f00 	cmp.w	ip, #0
 801db26:	d00b      	beq.n	801db40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801db28:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801db2c:	3b01      	subs	r3, #1
 801db2e:	005b      	lsls	r3, r3, #1
 801db30:	3302      	adds	r3, #2
 801db32:	eb00 0e03 	add.w	lr, r0, r3
 801db36:	5ac3      	ldrh	r3, [r0, r3]
 801db38:	9308      	str	r3, [sp, #32]
 801db3a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801db3e:	9309      	str	r3, [sp, #36]	@ 0x24
 801db40:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801db44:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801db48:	fb12 f30c 	smulbb	r3, r2, ip
 801db4c:	f1cc 0e10 	rsb	lr, ip, #16
 801db50:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801db54:	10db      	asrs	r3, r3, #3
 801db56:	ebae 0e02 	sub.w	lr, lr, r2
 801db5a:	ea40 000b 	orr.w	r0, r0, fp
 801db5e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801db62:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801db66:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801db6a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801db6e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801db72:	ea4b 0101 	orr.w	r1, fp, r1
 801db76:	4351      	muls	r1, r2
 801db78:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801db7a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801db7e:	0410      	lsls	r0, r2, #16
 801db80:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801db84:	9908      	ldr	r1, [sp, #32]
 801db86:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801db8a:	4310      	orrs	r0, r2
 801db8c:	9a08      	ldr	r2, [sp, #32]
 801db8e:	0412      	lsls	r2, r2, #16
 801db90:	fb03 e000 	mla	r0, r3, r0, lr
 801db94:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801db98:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801db9c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dba0:	ea42 020e 	orr.w	r2, r2, lr
 801dba4:	fb03 0302 	mla	r3, r3, r2, r0
 801dba8:	0d5a      	lsrs	r2, r3, #21
 801dbaa:	095b      	lsrs	r3, r3, #5
 801dbac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dbb0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801dbb4:	4313      	orrs	r3, r2
 801dbb6:	f8a9 3000 	strh.w	r3, [r9]
 801dbba:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801dbbc:	f109 0902 	add.w	r9, r9, #2
 801dbc0:	f10a 3aff 	add.w	sl, sl, #4294967295
 801dbc4:	441c      	add	r4, r3
 801dbc6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dbc8:	441e      	add	r6, r3
 801dbca:	e784      	b.n	801dad6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801dbcc:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801dbce:	3d01      	subs	r5, #1
 801dbd0:	3702      	adds	r7, #2
 801dbd2:	441c      	add	r4, r3
 801dbd4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dbd6:	441e      	add	r6, r3
 801dbd8:	e761      	b.n	801da9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801dbda:	d01d      	beq.n	801dc18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801dbdc:	1e6b      	subs	r3, r5, #1
 801dbde:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801dbe0:	fb00 4003 	mla	r0, r0, r3, r4
 801dbe4:	1400      	asrs	r0, r0, #16
 801dbe6:	f53f af74 	bmi.w	801dad2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dbea:	3901      	subs	r1, #1
 801dbec:	4288      	cmp	r0, r1
 801dbee:	f6bf af70 	bge.w	801dad2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dbf2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801dbf4:	fb01 6303 	mla	r3, r1, r3, r6
 801dbf8:	141b      	asrs	r3, r3, #16
 801dbfa:	f53f af6a 	bmi.w	801dad2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dbfe:	3a01      	subs	r2, #1
 801dc00:	4293      	cmp	r3, r2
 801dc02:	f6bf af66 	bge.w	801dad2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dc06:	46a9      	mov	r9, r5
 801dc08:	46ba      	mov	sl, r7
 801dc0a:	f1b9 0f00 	cmp.w	r9, #0
 801dc0e:	dc5b      	bgt.n	801dcc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801dc10:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801dc14:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801dc18:	9b07      	ldr	r3, [sp, #28]
 801dc1a:	2b00      	cmp	r3, #0
 801dc1c:	f340 80b9 	ble.w	801dd92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801dc20:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801dc24:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801dc26:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dc2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dc2e:	eef0 6a62 	vmov.f32	s13, s5
 801dc32:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dc36:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dc3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dc3e:	ee16 4a90 	vmov	r4, s13
 801dc42:	eef0 6a43 	vmov.f32	s13, s6
 801dc46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dc4a:	ee16 6a90 	vmov	r6, s13
 801dc4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dc52:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dc56:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dc5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dc5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dc62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dc66:	ee12 2a90 	vmov	r2, s5
 801dc6a:	eef0 2a47 	vmov.f32	s5, s14
 801dc6e:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc72:	ee13 2a10 	vmov	r2, s6
 801dc76:	931b      	str	r3, [sp, #108]	@ 0x6c
 801dc78:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801dc7a:	eeb0 3a67 	vmov.f32	s6, s15
 801dc7e:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc82:	931c      	str	r3, [sp, #112]	@ 0x70
 801dc84:	9b07      	ldr	r3, [sp, #28]
 801dc86:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801dc88:	3b01      	subs	r3, #1
 801dc8a:	9307      	str	r3, [sp, #28]
 801dc8c:	bf08      	it	eq
 801dc8e:	4615      	moveq	r5, r2
 801dc90:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801dc92:	bf18      	it	ne
 801dc94:	461d      	movne	r5, r3
 801dc96:	e6f3      	b.n	801da80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801dc98:	f111 0b01 	adds.w	fp, r1, #1
 801dc9c:	d48d      	bmi.n	801dbba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc9e:	45de      	cmp	lr, fp
 801dca0:	db8b      	blt.n	801dbba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dca2:	f110 0b01 	adds.w	fp, r0, #1
 801dca6:	d488      	bmi.n	801dbba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dca8:	455b      	cmp	r3, fp
 801dcaa:	db86      	blt.n	801dbba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dcac:	b21b      	sxth	r3, r3
 801dcae:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801dcb2:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801dcb6:	9300      	str	r3, [sp, #0]
 801dcb8:	4642      	mov	r2, r8
 801dcba:	fa0f f38e 	sxth.w	r3, lr
 801dcbe:	4649      	mov	r1, r9
 801dcc0:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801dcc2:	f7ff fe4c 	bl	801d95e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801dcc6:	e778      	b.n	801dbba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dcc8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dcca:	1420      	asrs	r0, r4, #16
 801dccc:	1431      	asrs	r1, r6, #16
 801dcce:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801dcd2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801dcd6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dcda:	fb03 0101 	mla	r1, r3, r1, r0
 801dcde:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dce2:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801dce6:	8841      	ldrh	r1, [r0, #2]
 801dce8:	f1be 0f00 	cmp.w	lr, #0
 801dcec:	d00b      	beq.n	801dd06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801dcee:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801dcf2:	3b01      	subs	r3, #1
 801dcf4:	005b      	lsls	r3, r3, #1
 801dcf6:	3302      	adds	r3, #2
 801dcf8:	eb00 0b03 	add.w	fp, r0, r3
 801dcfc:	5ac3      	ldrh	r3, [r0, r3]
 801dcfe:	930a      	str	r3, [sp, #40]	@ 0x28
 801dd00:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801dd04:	930b      	str	r3, [sp, #44]	@ 0x2c
 801dd06:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801dd0a:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801dd0e:	fb12 f30e 	smulbb	r3, r2, lr
 801dd12:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dd16:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801dd1a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801dd1e:	10db      	asrs	r3, r3, #3
 801dd20:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801dd24:	ea40 000c 	orr.w	r0, r0, ip
 801dd28:	f1ce 0c10 	rsb	ip, lr, #16
 801dd2c:	ea4b 0101 	orr.w	r1, fp, r1
 801dd30:	f109 39ff 	add.w	r9, r9, #4294967295
 801dd34:	ebac 0c02 	sub.w	ip, ip, r2
 801dd38:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dd3c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dd40:	4351      	muls	r1, r2
 801dd42:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801dd44:	fb0c 1c00 	mla	ip, ip, r0, r1
 801dd48:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801dd4a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801dd4e:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801dd52:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801dd54:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801dd58:	0412      	lsls	r2, r2, #16
 801dd5a:	ea4b 0000 	orr.w	r0, fp, r0
 801dd5e:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801dd62:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dd66:	fb03 c000 	mla	r0, r3, r0, ip
 801dd6a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dd6e:	ea42 0b0b 	orr.w	fp, r2, fp
 801dd72:	fb03 000b 	mla	r0, r3, fp, r0
 801dd76:	0d43      	lsrs	r3, r0, #21
 801dd78:	0940      	lsrs	r0, r0, #5
 801dd7a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801dd7e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801dd82:	4318      	orrs	r0, r3
 801dd84:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801dd86:	441c      	add	r4, r3
 801dd88:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dd8a:	f82a 0b02 	strh.w	r0, [sl], #2
 801dd8e:	441e      	add	r6, r3
 801dd90:	e73b      	b.n	801dc0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801dd92:	b00f      	add	sp, #60	@ 0x3c
 801dd94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dd98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801dd98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd9c:	b085      	sub	sp, #20
 801dd9e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801dda2:	9102      	str	r1, [sp, #8]
 801dda4:	2c00      	cmp	r4, #0
 801dda6:	fb04 7103 	mla	r1, r4, r3, r7
 801ddaa:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801ddae:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ddb2:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ddb6:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801ddba:	f2c0 811b 	blt.w	801dff4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ddbe:	45a6      	cmp	lr, r4
 801ddc0:	f340 8118 	ble.w	801dff4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ddc4:	2f00      	cmp	r7, #0
 801ddc6:	f2c0 8113 	blt.w	801dff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ddca:	42bb      	cmp	r3, r7
 801ddcc:	f340 8110 	ble.w	801dff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ddd0:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801ddd4:	1c7a      	adds	r2, r7, #1
 801ddd6:	f100 8110 	bmi.w	801dffa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801ddda:	4293      	cmp	r3, r2
 801dddc:	f340 810d 	ble.w	801dffa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dde0:	2e00      	cmp	r6, #0
 801dde2:	f000 810c 	beq.w	801dffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801dde6:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801ddea:	3401      	adds	r4, #1
 801ddec:	f100 810b 	bmi.w	801e006 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801ddf0:	45a6      	cmp	lr, r4
 801ddf2:	f340 8108 	ble.w	801e006 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801ddf6:	2800      	cmp	r0, #0
 801ddf8:	f000 8108 	beq.w	801e00c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801ddfc:	2f00      	cmp	r7, #0
 801ddfe:	f2c0 8100 	blt.w	801e002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801de02:	42bb      	cmp	r3, r7
 801de04:	f340 80fd 	ble.w	801e002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801de08:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801de0c:	3701      	adds	r7, #1
 801de0e:	f100 8100 	bmi.w	801e012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801de12:	42bb      	cmp	r3, r7
 801de14:	f340 80fd 	ble.w	801e012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801de18:	2e00      	cmp	r6, #0
 801de1a:	f000 80fc 	beq.w	801e016 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801de1e:	3301      	adds	r3, #1
 801de20:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801de24:	b2b6      	uxth	r6, r6
 801de26:	b280      	uxth	r0, r0
 801de28:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801de2c:	fb00 fe06 	mul.w	lr, r0, r6
 801de30:	0136      	lsls	r6, r6, #4
 801de32:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801de36:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801de3a:	eba6 070e 	sub.w	r7, r6, lr
 801de3e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801de42:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801de46:	b280      	uxth	r0, r0
 801de48:	b2bf      	uxth	r7, r7
 801de4a:	1a1b      	subs	r3, r3, r0
 801de4c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801de50:	fb0a f607 	mul.w	r6, sl, r7
 801de54:	b29b      	uxth	r3, r3
 801de56:	fb0b 6603 	mla	r6, fp, r3, r6
 801de5a:	fb00 6609 	mla	r6, r0, r9, r6
 801de5e:	fb0e 6608 	mla	r6, lr, r8, r6
 801de62:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801de66:	9600      	str	r6, [sp, #0]
 801de68:	2e00      	cmp	r6, #0
 801de6a:	f000 80be 	beq.w	801dfea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801de6e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801de72:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801de76:	9e02      	ldr	r6, [sp, #8]
 801de78:	fb0b fc0c 	mul.w	ip, fp, ip
 801de7c:	fb0b f505 	mul.w	r5, fp, r5
 801de80:	8836      	ldrh	r6, [r6, #0]
 801de82:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801de86:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801de8a:	9501      	str	r5, [sp, #4]
 801de8c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801de90:	44dc      	add	ip, fp
 801de92:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801de96:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801de9a:	9503      	str	r5, [sp, #12]
 801de9c:	9d01      	ldr	r5, [sp, #4]
 801de9e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801dea2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dea6:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801deaa:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801deae:	fb0a fc0c 	mul.w	ip, sl, ip
 801deb2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801deb6:	fb0a fa01 	mul.w	sl, sl, r1
 801deba:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801debe:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801dec2:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801dec6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801deca:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801dece:	4465      	add	r5, ip
 801ded0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ded4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801ded8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dedc:	fb09 fc0c 	mul.w	ip, r9, ip
 801dee0:	0a2d      	lsrs	r5, r5, #8
 801dee2:	fb09 f904 	mul.w	r9, r9, r4
 801dee6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801deea:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801deee:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801def2:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801def6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801defa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801defe:	437d      	muls	r5, r7
 801df00:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801df04:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801df08:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801df0c:	4461      	add	r1, ip
 801df0e:	fb08 f404 	mul.w	r4, r8, r4
 801df12:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801df16:	fb08 f802 	mul.w	r8, r8, r2
 801df1a:	0a09      	lsrs	r1, r1, #8
 801df1c:	0a22      	lsrs	r2, r4, #8
 801df1e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801df22:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801df26:	fb07 f70a 	mul.w	r7, r7, sl
 801df2a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801df2e:	4414      	add	r4, r2
 801df30:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801df34:	0a24      	lsrs	r4, r4, #8
 801df36:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801df3a:	9a03      	ldr	r2, [sp, #12]
 801df3c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801df40:	fb02 5503 	mla	r5, r2, r3, r5
 801df44:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801df48:	9a00      	ldr	r2, [sp, #0]
 801df4a:	fb04 540e 	mla	r4, r4, lr, r5
 801df4e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801df52:	1235      	asrs	r5, r6, #8
 801df54:	fb01 4100 	mla	r1, r1, r0, r4
 801df58:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801df5c:	0a09      	lsrs	r1, r1, #8
 801df5e:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801df62:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801df66:	fb03 7101 	mla	r1, r3, r1, r7
 801df6a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801df6e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801df72:	fb00 e101 	mla	r1, r0, r1, lr
 801df76:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801df7a:	b287      	uxth	r7, r0
 801df7c:	0a09      	lsrs	r1, r1, #8
 801df7e:	437a      	muls	r2, r7
 801df80:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801df84:	1c53      	adds	r3, r2, #1
 801df86:	4321      	orrs	r1, r4
 801df88:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801df8c:	0c0a      	lsrs	r2, r1, #16
 801df8e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801df92:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801df96:	b2c8      	uxtb	r0, r1
 801df98:	fb12 f207 	smulbb	r2, r2, r7
 801df9c:	fb14 f407 	smulbb	r4, r4, r7
 801dfa0:	b2db      	uxtb	r3, r3
 801dfa2:	fb10 f007 	smulbb	r0, r0, r7
 801dfa6:	fb05 2503 	mla	r5, r5, r3, r2
 801dfaa:	10f2      	asrs	r2, r6, #3
 801dfac:	00f6      	lsls	r6, r6, #3
 801dfae:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801dfb2:	b2ad      	uxth	r5, r5
 801dfb4:	b2f6      	uxtb	r6, r6
 801dfb6:	fb02 4203 	mla	r2, r2, r3, r4
 801dfba:	fb06 0303 	mla	r3, r6, r3, r0
 801dfbe:	b294      	uxth	r4, r2
 801dfc0:	b299      	uxth	r1, r3
 801dfc2:	1c6b      	adds	r3, r5, #1
 801dfc4:	1c62      	adds	r2, r4, #1
 801dfc6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dfca:	1c4b      	adds	r3, r1, #1
 801dfcc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801dfd0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dfd4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801dfd8:	0952      	lsrs	r2, r2, #5
 801dfda:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dfde:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dfe2:	432b      	orrs	r3, r5
 801dfe4:	4313      	orrs	r3, r2
 801dfe6:	9a02      	ldr	r2, [sp, #8]
 801dfe8:	8013      	strh	r3, [r2, #0]
 801dfea:	b005      	add	sp, #20
 801dfec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dff0:	2500      	movs	r5, #0
 801dff2:	e6ef      	b.n	801ddd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801dff4:	2100      	movs	r1, #0
 801dff6:	460d      	mov	r5, r1
 801dff8:	e6f7      	b.n	801ddea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dffa:	2100      	movs	r1, #0
 801dffc:	e6f5      	b.n	801ddea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dffe:	4631      	mov	r1, r6
 801e000:	e6f3      	b.n	801ddea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e002:	2400      	movs	r4, #0
 801e004:	e702      	b.n	801de0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e006:	2200      	movs	r2, #0
 801e008:	4614      	mov	r4, r2
 801e00a:	e70b      	b.n	801de24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e00c:	4602      	mov	r2, r0
 801e00e:	4604      	mov	r4, r0
 801e010:	e708      	b.n	801de24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e012:	2200      	movs	r2, #0
 801e014:	e706      	b.n	801de24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e016:	4632      	mov	r2, r6
 801e018:	e704      	b.n	801de24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e01a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e01a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e01e:	b09d      	sub	sp, #116	@ 0x74
 801e020:	9219      	str	r2, [sp, #100]	@ 0x64
 801e022:	9307      	str	r3, [sp, #28]
 801e024:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801e026:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801e02a:	901b      	str	r0, [sp, #108]	@ 0x6c
 801e02c:	931a      	str	r3, [sp, #104]	@ 0x68
 801e02e:	6850      	ldr	r0, [r2, #4]
 801e030:	9117      	str	r1, [sp, #92]	@ 0x5c
 801e032:	6812      	ldr	r2, [r2, #0]
 801e034:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801e038:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801e03c:	fb00 1303 	mla	r3, r0, r3, r1
 801e040:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e044:	930a      	str	r3, [sp, #40]	@ 0x28
 801e046:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e048:	681b      	ldr	r3, [r3, #0]
 801e04a:	9310      	str	r3, [sp, #64]	@ 0x40
 801e04c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801e050:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e052:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e054:	2b00      	cmp	r3, #0
 801e056:	dc03      	bgt.n	801e060 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e058:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e05a:	2b00      	cmp	r3, #0
 801e05c:	f340 8375 	ble.w	801e74a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e060:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e062:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e066:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e06a:	1e48      	subs	r0, r1, #1
 801e06c:	1e57      	subs	r7, r2, #1
 801e06e:	9b07      	ldr	r3, [sp, #28]
 801e070:	2b00      	cmp	r3, #0
 801e072:	f340 818e 	ble.w	801e392 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e076:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e07a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e07e:	d406      	bmi.n	801e08e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e080:	4584      	cmp	ip, r0
 801e082:	da04      	bge.n	801e08e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e084:	2b00      	cmp	r3, #0
 801e086:	db02      	blt.n	801e08e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e088:	42bb      	cmp	r3, r7
 801e08a:	f2c0 8183 	blt.w	801e394 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e08e:	f11c 0c01 	adds.w	ip, ip, #1
 801e092:	f100 8173 	bmi.w	801e37c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e096:	4561      	cmp	r1, ip
 801e098:	f2c0 8170 	blt.w	801e37c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e09c:	3301      	adds	r3, #1
 801e09e:	f100 816d 	bmi.w	801e37c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e0a2:	429a      	cmp	r2, r3
 801e0a4:	f2c0 816a 	blt.w	801e37c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e0a8:	9b07      	ldr	r3, [sp, #28]
 801e0aa:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801e0ac:	9318      	str	r3, [sp, #96]	@ 0x60
 801e0ae:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e0b0:	2b00      	cmp	r3, #0
 801e0b2:	f340 818c 	ble.w	801e3ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e0b6:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801e0b8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e0bc:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e0be:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e0c2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e0c6:	1422      	asrs	r2, r4, #16
 801e0c8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e0cc:	689b      	ldr	r3, [r3, #8]
 801e0ce:	f100 81cd 	bmi.w	801e46c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e0d2:	f103 38ff 	add.w	r8, r3, #4294967295
 801e0d6:	4542      	cmp	r2, r8
 801e0d8:	f280 81c8 	bge.w	801e46c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e0dc:	f1bc 0f00 	cmp.w	ip, #0
 801e0e0:	f2c0 81c4 	blt.w	801e46c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e0e4:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e0e8:	45c4      	cmp	ip, r8
 801e0ea:	f280 81bf 	bge.w	801e46c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e0ee:	b21b      	sxth	r3, r3
 801e0f0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e0f2:	fb0c 2203 	mla	r2, ip, r3, r2
 801e0f6:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e0fa:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e0fe:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e102:	2800      	cmp	r0, #0
 801e104:	f000 81a9 	beq.w	801e45a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e108:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e10c:	950c      	str	r5, [sp, #48]	@ 0x30
 801e10e:	0e2d      	lsrs	r5, r5, #24
 801e110:	9513      	str	r5, [sp, #76]	@ 0x4c
 801e112:	b181      	cbz	r1, 801e136 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e114:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801e118:	3b01      	subs	r3, #1
 801e11a:	009b      	lsls	r3, r3, #2
 801e11c:	3304      	adds	r3, #4
 801e11e:	eb08 0c03 	add.w	ip, r8, r3
 801e122:	f858 3003 	ldr.w	r3, [r8, r3]
 801e126:	9308      	str	r3, [sp, #32]
 801e128:	0e1b      	lsrs	r3, r3, #24
 801e12a:	9311      	str	r3, [sp, #68]	@ 0x44
 801e12c:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e130:	930d      	str	r3, [sp, #52]	@ 0x34
 801e132:	0e1b      	lsrs	r3, r3, #24
 801e134:	9314      	str	r3, [sp, #80]	@ 0x50
 801e136:	b280      	uxth	r0, r0
 801e138:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e13a:	b289      	uxth	r1, r1
 801e13c:	fb00 f901 	mul.w	r9, r0, r1
 801e140:	0100      	lsls	r0, r0, #4
 801e142:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e146:	eba0 0809 	sub.w	r8, r0, r9
 801e14a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801e14e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e150:	b289      	uxth	r1, r1
 801e152:	fa1f f888 	uxth.w	r8, r8
 801e156:	1a5b      	subs	r3, r3, r1
 801e158:	fb08 f000 	mul.w	r0, r8, r0
 801e15c:	b29b      	uxth	r3, r3
 801e15e:	fb03 000e 	mla	r0, r3, lr, r0
 801e162:	fb01 0005 	mla	r0, r1, r5, r0
 801e166:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e168:	fb09 0005 	mla	r0, r9, r5, r0
 801e16c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e170:	2800      	cmp	r0, #0
 801e172:	f000 80fa 	beq.w	801e36a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e176:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801e17a:	d01b      	beq.n	801e1b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e17c:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801e180:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e184:	fb0e fa0a 	mul.w	sl, lr, sl
 801e188:	fb0e fe02 	mul.w	lr, lr, r2
 801e18c:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e190:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e194:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801e198:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e19c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e1a0:	4452      	add	r2, sl
 801e1a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e1a6:	0a12      	lsrs	r2, r2, #8
 801e1a8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e1ac:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e1b0:	ea42 020c 	orr.w	r2, r2, ip
 801e1b4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e1b6:	2dff      	cmp	r5, #255	@ 0xff
 801e1b8:	d021      	beq.n	801e1fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e1ba:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e1bc:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e1c0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e1c2:	fb05 fb0b 	mul.w	fp, r5, fp
 801e1c6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e1c8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e1cc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e1ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e1d2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e1d6:	fb05 fa0a 	mul.w	sl, r5, sl
 801e1da:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e1de:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e1e2:	44de      	add	lr, fp
 801e1e4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e1e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e1ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e1f0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e1f4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e1f8:	ea4e 050a 	orr.w	r5, lr, sl
 801e1fc:	950c      	str	r5, [sp, #48]	@ 0x30
 801e1fe:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e200:	2dff      	cmp	r5, #255	@ 0xff
 801e202:	d021      	beq.n	801e248 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e204:	9d08      	ldr	r5, [sp, #32]
 801e206:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e20a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e20c:	fb05 fb0b 	mul.w	fp, r5, fp
 801e210:	9d08      	ldr	r5, [sp, #32]
 801e212:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e216:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e218:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e21c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e220:	fb05 fa0a 	mul.w	sl, r5, sl
 801e224:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e228:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e22c:	44de      	add	lr, fp
 801e22e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e232:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e236:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e23a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e23e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e242:	ea4e 050a 	orr.w	r5, lr, sl
 801e246:	9508      	str	r5, [sp, #32]
 801e248:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e24a:	2dff      	cmp	r5, #255	@ 0xff
 801e24c:	d021      	beq.n	801e292 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e24e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e250:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e254:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e256:	fb05 fb0b 	mul.w	fp, r5, fp
 801e25a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e25c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e260:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e262:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e266:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e26a:	fb05 fa0a 	mul.w	sl, r5, sl
 801e26e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e272:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e276:	44de      	add	lr, fp
 801e278:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e27c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e280:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e284:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e288:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e28c:	ea4e 050a 	orr.w	r5, lr, sl
 801e290:	950d      	str	r5, [sp, #52]	@ 0x34
 801e292:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e294:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801e298:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e29c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e2a0:	9d08      	ldr	r5, [sp, #32]
 801e2a2:	fb08 fc0c 	mul.w	ip, r8, ip
 801e2a6:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e2aa:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e2ae:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e2b0:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e2b4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e2b8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e2ba:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e2be:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801e2c2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e2c4:	fb08 f80e 	mul.w	r8, r8, lr
 801e2c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e2cc:	fb03 8202 	mla	r2, r3, r2, r8
 801e2d0:	9b08      	ldr	r3, [sp, #32]
 801e2d2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e2d6:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801e2da:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e2dc:	fb01 220a 	mla	r2, r1, sl, r2
 801e2e0:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801e2e4:	883b      	ldrh	r3, [r7, #0]
 801e2e6:	fb09 2901 	mla	r9, r9, r1, r2
 801e2ea:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e2ec:	1219      	asrs	r1, r3, #8
 801e2ee:	4342      	muls	r2, r0
 801e2f0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e2f4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e2f8:	1c50      	adds	r0, r2, #1
 801e2fa:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801e2fe:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e302:	ea4c 0c09 	orr.w	ip, ip, r9
 801e306:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e30a:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e30e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e312:	fa5f fc8c 	uxtb.w	ip, ip
 801e316:	fb12 f205 	smulbb	r2, r2, r5
 801e31a:	b2c0      	uxtb	r0, r0
 801e31c:	fb1c fc05 	smulbb	ip, ip, r5
 801e320:	fb01 2100 	mla	r1, r1, r0, r2
 801e324:	10da      	asrs	r2, r3, #3
 801e326:	fb1e fe05 	smulbb	lr, lr, r5
 801e32a:	00db      	lsls	r3, r3, #3
 801e32c:	b289      	uxth	r1, r1
 801e32e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e332:	b2db      	uxtb	r3, r3
 801e334:	fb02 e200 	mla	r2, r2, r0, lr
 801e338:	fb03 c300 	mla	r3, r3, r0, ip
 801e33c:	b292      	uxth	r2, r2
 801e33e:	fa1f fc83 	uxth.w	ip, r3
 801e342:	1c4b      	adds	r3, r1, #1
 801e344:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e348:	f10c 0301 	add.w	r3, ip, #1
 801e34c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e350:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801e354:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e358:	430b      	orrs	r3, r1
 801e35a:	1c51      	adds	r1, r2, #1
 801e35c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e360:	0952      	lsrs	r2, r2, #5
 801e362:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e366:	4313      	orrs	r3, r2
 801e368:	803b      	strh	r3, [r7, #0]
 801e36a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e36c:	3702      	adds	r7, #2
 801e36e:	441c      	add	r4, r3
 801e370:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e372:	441e      	add	r6, r3
 801e374:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e376:	3b01      	subs	r3, #1
 801e378:	9318      	str	r3, [sp, #96]	@ 0x60
 801e37a:	e698      	b.n	801e0ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e37c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e37e:	441c      	add	r4, r3
 801e380:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e382:	441e      	add	r6, r3
 801e384:	9b07      	ldr	r3, [sp, #28]
 801e386:	3b01      	subs	r3, #1
 801e388:	9307      	str	r3, [sp, #28]
 801e38a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e38c:	3302      	adds	r3, #2
 801e38e:	930a      	str	r3, [sp, #40]	@ 0x28
 801e390:	e66d      	b.n	801e06e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e392:	d023      	beq.n	801e3dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e394:	9b07      	ldr	r3, [sp, #28]
 801e396:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801e398:	3b01      	subs	r3, #1
 801e39a:	fb00 4003 	mla	r0, r0, r3, r4
 801e39e:	1400      	asrs	r0, r0, #16
 801e3a0:	f53f ae82 	bmi.w	801e0a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e3a4:	3901      	subs	r1, #1
 801e3a6:	4288      	cmp	r0, r1
 801e3a8:	f6bf ae7e 	bge.w	801e0a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e3ac:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801e3ae:	fb01 6303 	mla	r3, r1, r3, r6
 801e3b2:	141b      	asrs	r3, r3, #16
 801e3b4:	f53f ae78 	bmi.w	801e0a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e3b8:	3a01      	subs	r2, #1
 801e3ba:	4293      	cmp	r3, r2
 801e3bc:	f6bf ae74 	bge.w	801e0a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e3c0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e3c4:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801e3c8:	f1bb 0f00 	cmp.w	fp, #0
 801e3cc:	dc6c      	bgt.n	801e4a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e3ce:	9b07      	ldr	r3, [sp, #28]
 801e3d0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e3d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e3d6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e3da:	930a      	str	r3, [sp, #40]	@ 0x28
 801e3dc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e3de:	2b00      	cmp	r3, #0
 801e3e0:	f340 81b3 	ble.w	801e74a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e3e4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e3e8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e3ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e3ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e3f2:	eef0 6a62 	vmov.f32	s13, s5
 801e3f6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e3fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e3fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e402:	ee16 4a90 	vmov	r4, s13
 801e406:	eef0 6a43 	vmov.f32	s13, s6
 801e40a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e40e:	ee16 6a90 	vmov	r6, s13
 801e412:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e416:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e41a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e41e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e422:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e426:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e42a:	ee12 2a90 	vmov	r2, s5
 801e42e:	eef0 2a47 	vmov.f32	s5, s14
 801e432:	fb92 f3f3 	sdiv	r3, r2, r3
 801e436:	ee13 2a10 	vmov	r2, s6
 801e43a:	9329      	str	r3, [sp, #164]	@ 0xa4
 801e43c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e43e:	eeb0 3a67 	vmov.f32	s6, s15
 801e442:	fb92 f3f3 	sdiv	r3, r2, r3
 801e446:	932a      	str	r3, [sp, #168]	@ 0xa8
 801e448:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e44a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801e44c:	3b01      	subs	r3, #1
 801e44e:	9317      	str	r3, [sp, #92]	@ 0x5c
 801e450:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e452:	bf08      	it	eq
 801e454:	4613      	moveq	r3, r2
 801e456:	9307      	str	r3, [sp, #28]
 801e458:	e5fb      	b.n	801e052 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e45a:	2900      	cmp	r1, #0
 801e45c:	f43f ae6b 	beq.w	801e136 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e460:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e464:	9308      	str	r3, [sp, #32]
 801e466:	0e1b      	lsrs	r3, r3, #24
 801e468:	9311      	str	r3, [sp, #68]	@ 0x44
 801e46a:	e664      	b.n	801e136 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e46c:	f112 0801 	adds.w	r8, r2, #1
 801e470:	f53f af7b 	bmi.w	801e36a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e474:	4543      	cmp	r3, r8
 801e476:	f6ff af78 	blt.w	801e36a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e47a:	f11c 0801 	adds.w	r8, ip, #1
 801e47e:	f53f af74 	bmi.w	801e36a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e482:	45c6      	cmp	lr, r8
 801e484:	f6ff af71 	blt.w	801e36a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e488:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801e48a:	b21b      	sxth	r3, r3
 801e48c:	9201      	str	r2, [sp, #4]
 801e48e:	fa0f f28e 	sxth.w	r2, lr
 801e492:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e496:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e49a:	9200      	str	r2, [sp, #0]
 801e49c:	4639      	mov	r1, r7
 801e49e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e4a0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801e4a2:	f7ff fc79 	bl	801dd98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e4a6:	e760      	b.n	801e36a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e4a8:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e4aa:	1427      	asrs	r7, r4, #16
 801e4ac:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e4ae:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e4b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e4b6:	1433      	asrs	r3, r6, #16
 801e4b8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e4bc:	fb01 7303 	mla	r3, r1, r3, r7
 801e4c0:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e4c4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e4c8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e4cc:	2a00      	cmp	r2, #0
 801e4ce:	f000 8133 	beq.w	801e738 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e4d2:	687d      	ldr	r5, [r7, #4]
 801e4d4:	950e      	str	r5, [sp, #56]	@ 0x38
 801e4d6:	0e2d      	lsrs	r5, r5, #24
 801e4d8:	9515      	str	r5, [sp, #84]	@ 0x54
 801e4da:	b178      	cbz	r0, 801e4fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e4dc:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801e4e0:	3901      	subs	r1, #1
 801e4e2:	0089      	lsls	r1, r1, #2
 801e4e4:	3104      	adds	r1, #4
 801e4e6:	eb07 0e01 	add.w	lr, r7, r1
 801e4ea:	5879      	ldr	r1, [r7, r1]
 801e4ec:	9109      	str	r1, [sp, #36]	@ 0x24
 801e4ee:	0e09      	lsrs	r1, r1, #24
 801e4f0:	9112      	str	r1, [sp, #72]	@ 0x48
 801e4f2:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e4f6:	910f      	str	r1, [sp, #60]	@ 0x3c
 801e4f8:	0e09      	lsrs	r1, r1, #24
 801e4fa:	9116      	str	r1, [sp, #88]	@ 0x58
 801e4fc:	b292      	uxth	r2, r2
 801e4fe:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801e500:	b280      	uxth	r0, r0
 801e502:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e504:	fb02 f800 	mul.w	r8, r2, r0
 801e508:	0112      	lsls	r2, r2, #4
 801e50a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e50e:	eba2 0e08 	sub.w	lr, r2, r8
 801e512:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801e516:	b280      	uxth	r0, r0
 801e518:	fa1f fe8e 	uxth.w	lr, lr
 801e51c:	1a12      	subs	r2, r2, r0
 801e51e:	fb0e f101 	mul.w	r1, lr, r1
 801e522:	b292      	uxth	r2, r2
 801e524:	fb02 110c 	mla	r1, r2, ip, r1
 801e528:	fb00 1105 	mla	r1, r0, r5, r1
 801e52c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801e52e:	fb08 1105 	mla	r1, r8, r5, r1
 801e532:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e536:	2900      	cmp	r1, #0
 801e538:	f000 80f5 	beq.w	801e726 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e53c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801e540:	d019      	beq.n	801e576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e542:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801e546:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e54a:	fb0c fa0a 	mul.w	sl, ip, sl
 801e54e:	fb0c fc03 	mul.w	ip, ip, r3
 801e552:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e556:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e55a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801e55e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e562:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e566:	4453      	add	r3, sl
 801e568:	0a3f      	lsrs	r7, r7, #8
 801e56a:	0a1b      	lsrs	r3, r3, #8
 801e56c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801e570:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e574:	433b      	orrs	r3, r7
 801e576:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e578:	2dff      	cmp	r5, #255	@ 0xff
 801e57a:	d020      	beq.n	801e5be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e57c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e57e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e582:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e584:	436f      	muls	r7, r5
 801e586:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e588:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e58c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e590:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e592:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e596:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e59a:	fb05 fa0a 	mul.w	sl, r5, sl
 801e59e:	44bc      	add	ip, r7
 801e5a0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e5a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e5a8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e5ac:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e5b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e5b4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e5b8:	ea4c 050a 	orr.w	r5, ip, sl
 801e5bc:	950e      	str	r5, [sp, #56]	@ 0x38
 801e5be:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e5c0:	2dff      	cmp	r5, #255	@ 0xff
 801e5c2:	d020      	beq.n	801e606 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e5c4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e5c6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e5ca:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e5cc:	436f      	muls	r7, r5
 801e5ce:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e5d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e5d4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e5d8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e5da:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e5de:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e5e2:	fb05 fa0a 	mul.w	sl, r5, sl
 801e5e6:	44bc      	add	ip, r7
 801e5e8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e5ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e5f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e5f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e5f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e5fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e600:	ea4c 050a 	orr.w	r5, ip, sl
 801e604:	9509      	str	r5, [sp, #36]	@ 0x24
 801e606:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801e608:	2dff      	cmp	r5, #255	@ 0xff
 801e60a:	d020      	beq.n	801e64e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e60c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e60e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e612:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801e614:	436f      	muls	r7, r5
 801e616:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e618:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e61c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e620:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801e622:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e626:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e62a:	fb05 fa0a 	mul.w	sl, r5, sl
 801e62e:	44bc      	add	ip, r7
 801e630:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e634:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e638:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e63c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e640:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e644:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e648:	ea4c 050a 	orr.w	r5, ip, sl
 801e64c:	950f      	str	r5, [sp, #60]	@ 0x3c
 801e64e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e650:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801e654:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e658:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e65c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e65e:	fb0e f707 	mul.w	r7, lr, r7
 801e662:	fb02 770c 	mla	r7, r2, ip, r7
 801e666:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e66a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e66c:	fb00 770c 	mla	r7, r0, ip, r7
 801e670:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e674:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e676:	fb08 770c 	mla	r7, r8, ip, r7
 801e67a:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801e67e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e680:	fb0e fe0c 	mul.w	lr, lr, ip
 801e684:	0a3f      	lsrs	r7, r7, #8
 801e686:	fb02 e303 	mla	r3, r2, r3, lr
 801e68a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e68c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801e690:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801e694:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e696:	fb00 330a 	mla	r3, r0, sl, r3
 801e69a:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801e69e:	f8b9 0000 	ldrh.w	r0, [r9]
 801e6a2:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e6a6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e6a8:	1202      	asrs	r2, r0, #8
 801e6aa:	4359      	muls	r1, r3
 801e6ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e6b0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e6b4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e6b8:	1c4b      	adds	r3, r1, #1
 801e6ba:	ea47 070c 	orr.w	r7, r7, ip
 801e6be:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e6c2:	0c3b      	lsrs	r3, r7, #16
 801e6c4:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e6c8:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e6cc:	b2ff      	uxtb	r7, r7
 801e6ce:	fb13 f305 	smulbb	r3, r3, r5
 801e6d2:	b2c9      	uxtb	r1, r1
 801e6d4:	fb17 f705 	smulbb	r7, r7, r5
 801e6d8:	fb02 3201 	mla	r2, r2, r1, r3
 801e6dc:	10c3      	asrs	r3, r0, #3
 801e6de:	fb1c fc05 	smulbb	ip, ip, r5
 801e6e2:	00c0      	lsls	r0, r0, #3
 801e6e4:	b292      	uxth	r2, r2
 801e6e6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801e6ea:	b2c0      	uxtb	r0, r0
 801e6ec:	fb03 c301 	mla	r3, r3, r1, ip
 801e6f0:	fb00 7001 	mla	r0, r0, r1, r7
 801e6f4:	1c51      	adds	r1, r2, #1
 801e6f6:	b29b      	uxth	r3, r3
 801e6f8:	b280      	uxth	r0, r0
 801e6fa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e6fe:	f100 0c01 	add.w	ip, r0, #1
 801e702:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801e706:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e70a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e70e:	ea4c 0202 	orr.w	r2, ip, r2
 801e712:	f103 0c01 	add.w	ip, r3, #1
 801e716:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e71a:	095b      	lsrs	r3, r3, #5
 801e71c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e720:	431a      	orrs	r2, r3
 801e722:	f8a9 2000 	strh.w	r2, [r9]
 801e726:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e728:	f109 0902 	add.w	r9, r9, #2
 801e72c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e730:	441c      	add	r4, r3
 801e732:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e734:	441e      	add	r6, r3
 801e736:	e647      	b.n	801e3c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e738:	2800      	cmp	r0, #0
 801e73a:	f43f aedf 	beq.w	801e4fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e73e:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e742:	9109      	str	r1, [sp, #36]	@ 0x24
 801e744:	0e09      	lsrs	r1, r1, #24
 801e746:	9112      	str	r1, [sp, #72]	@ 0x48
 801e748:	e6d8      	b.n	801e4fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e74a:	b01d      	add	sp, #116	@ 0x74
 801e74c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e750 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e754:	b085      	sub	sp, #20
 801e756:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801e75a:	9102      	str	r1, [sp, #8]
 801e75c:	2c00      	cmp	r4, #0
 801e75e:	fb04 7103 	mla	r1, r4, r3, r7
 801e762:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801e766:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801e76a:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e76e:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801e772:	f2c0 810c 	blt.w	801e98e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e776:	45a6      	cmp	lr, r4
 801e778:	f340 8109 	ble.w	801e98e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e77c:	2f00      	cmp	r7, #0
 801e77e:	f2c0 8104 	blt.w	801e98a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e782:	42bb      	cmp	r3, r7
 801e784:	f340 8101 	ble.w	801e98a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e788:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e78c:	1c7a      	adds	r2, r7, #1
 801e78e:	f100 8101 	bmi.w	801e994 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e792:	4293      	cmp	r3, r2
 801e794:	f340 80fe 	ble.w	801e994 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e798:	2e00      	cmp	r6, #0
 801e79a:	f000 80fd 	beq.w	801e998 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e79e:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e7a2:	3401      	adds	r4, #1
 801e7a4:	f100 80fc 	bmi.w	801e9a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e7a8:	45a6      	cmp	lr, r4
 801e7aa:	f340 80f9 	ble.w	801e9a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e7ae:	2800      	cmp	r0, #0
 801e7b0:	f000 80f9 	beq.w	801e9a6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e7b4:	2f00      	cmp	r7, #0
 801e7b6:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e7ba:	f2c0 80ef 	blt.w	801e99c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e7be:	42bb      	cmp	r3, r7
 801e7c0:	f340 80ec 	ble.w	801e99c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e7c4:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e7c8:	3701      	adds	r7, #1
 801e7ca:	f100 80ef 	bmi.w	801e9ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e7ce:	42bb      	cmp	r3, r7
 801e7d0:	f340 80ec 	ble.w	801e9ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e7d4:	2e00      	cmp	r6, #0
 801e7d6:	f000 80eb 	beq.w	801e9b0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e7da:	6852      	ldr	r2, [r2, #4]
 801e7dc:	b2b6      	uxth	r6, r6
 801e7de:	b280      	uxth	r0, r0
 801e7e0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e7e4:	fb00 fe06 	mul.w	lr, r0, r6
 801e7e8:	0136      	lsls	r6, r6, #4
 801e7ea:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e7ee:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e7f2:	eba6 070e 	sub.w	r7, r6, lr
 801e7f6:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801e7fa:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e7fe:	b280      	uxth	r0, r0
 801e800:	b2bf      	uxth	r7, r7
 801e802:	1a1b      	subs	r3, r3, r0
 801e804:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e808:	fb07 f60a 	mul.w	r6, r7, sl
 801e80c:	b29b      	uxth	r3, r3
 801e80e:	fb0b 6603 	mla	r6, fp, r3, r6
 801e812:	fb00 6609 	mla	r6, r0, r9, r6
 801e816:	fb0e 6608 	mla	r6, lr, r8, r6
 801e81a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e81e:	9600      	str	r6, [sp, #0]
 801e820:	2e00      	cmp	r6, #0
 801e822:	f000 80af 	beq.w	801e984 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e826:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e82a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801e82e:	9e02      	ldr	r6, [sp, #8]
 801e830:	fb0b fc0c 	mul.w	ip, fp, ip
 801e834:	fb0b f505 	mul.w	r5, fp, r5
 801e838:	8836      	ldrh	r6, [r6, #0]
 801e83a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e83e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e842:	9501      	str	r5, [sp, #4]
 801e844:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801e848:	44dc      	add	ip, fp
 801e84a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e84e:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801e852:	9503      	str	r5, [sp, #12]
 801e854:	9d01      	ldr	r5, [sp, #4]
 801e856:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801e85a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e85e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801e862:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e866:	fb0a fc0c 	mul.w	ip, sl, ip
 801e86a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e86e:	fb0a fa01 	mul.w	sl, sl, r1
 801e872:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e876:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e87a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801e87e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e882:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e886:	4465      	add	r5, ip
 801e888:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e88c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801e890:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e894:	fb09 fc0c 	mul.w	ip, r9, ip
 801e898:	0a2d      	lsrs	r5, r5, #8
 801e89a:	fb09 f904 	mul.w	r9, r9, r4
 801e89e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e8a2:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e8a6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e8aa:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801e8ae:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e8b2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e8b6:	437d      	muls	r5, r7
 801e8b8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e8bc:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801e8c0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e8c4:	4461      	add	r1, ip
 801e8c6:	fb08 f404 	mul.w	r4, r8, r4
 801e8ca:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e8ce:	fb08 f802 	mul.w	r8, r8, r2
 801e8d2:	0a09      	lsrs	r1, r1, #8
 801e8d4:	0a22      	lsrs	r2, r4, #8
 801e8d6:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801e8da:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e8de:	fb07 f70a 	mul.w	r7, r7, sl
 801e8e2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e8e6:	4414      	add	r4, r2
 801e8e8:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801e8ec:	0a24      	lsrs	r4, r4, #8
 801e8ee:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e8f2:	9a03      	ldr	r2, [sp, #12]
 801e8f4:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801e8f8:	fb02 5503 	mla	r5, r2, r3, r5
 801e8fc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e900:	fb04 540e 	mla	r4, r4, lr, r5
 801e904:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801e908:	fb01 4100 	mla	r1, r1, r0, r4
 801e90c:	0a09      	lsrs	r1, r1, #8
 801e90e:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801e912:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801e916:	fb03 7101 	mla	r1, r3, r1, r7
 801e91a:	9b00      	ldr	r3, [sp, #0]
 801e91c:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e920:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801e924:	43da      	mvns	r2, r3
 801e926:	1233      	asrs	r3, r6, #8
 801e928:	fb00 e101 	mla	r1, r0, r1, lr
 801e92c:	10f0      	asrs	r0, r6, #3
 801e92e:	b2d2      	uxtb	r2, r2
 801e930:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801e934:	0a09      	lsrs	r1, r1, #8
 801e936:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e93a:	00f6      	lsls	r6, r6, #3
 801e93c:	4353      	muls	r3, r2
 801e93e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e942:	4350      	muls	r0, r2
 801e944:	b2f6      	uxtb	r6, r6
 801e946:	4321      	orrs	r1, r4
 801e948:	4356      	muls	r6, r2
 801e94a:	1c5a      	adds	r2, r3, #1
 801e94c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e950:	0c0b      	lsrs	r3, r1, #16
 801e952:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e956:	1c42      	adds	r2, r0, #1
 801e958:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e95c:	0a0a      	lsrs	r2, r1, #8
 801e95e:	021b      	lsls	r3, r3, #8
 801e960:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e964:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801e968:	00d2      	lsls	r2, r2, #3
 801e96a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e96e:	4313      	orrs	r3, r2
 801e970:	1c72      	adds	r2, r6, #1
 801e972:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e976:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801e97a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e97e:	4319      	orrs	r1, r3
 801e980:	9b02      	ldr	r3, [sp, #8]
 801e982:	8019      	strh	r1, [r3, #0]
 801e984:	b005      	add	sp, #20
 801e986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e98a:	2500      	movs	r5, #0
 801e98c:	e6fe      	b.n	801e78c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801e98e:	2100      	movs	r1, #0
 801e990:	460d      	mov	r5, r1
 801e992:	e706      	b.n	801e7a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e994:	2100      	movs	r1, #0
 801e996:	e704      	b.n	801e7a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e998:	4631      	mov	r1, r6
 801e99a:	e702      	b.n	801e7a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e99c:	2400      	movs	r4, #0
 801e99e:	e713      	b.n	801e7c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801e9a0:	2200      	movs	r2, #0
 801e9a2:	4614      	mov	r4, r2
 801e9a4:	e71a      	b.n	801e7dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e9a6:	4602      	mov	r2, r0
 801e9a8:	4604      	mov	r4, r0
 801e9aa:	e717      	b.n	801e7dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e9ac:	2200      	movs	r2, #0
 801e9ae:	e715      	b.n	801e7dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e9b0:	4632      	mov	r2, r6
 801e9b2:	e713      	b.n	801e7dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

0801e9b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e9b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e9b8:	b09b      	sub	sp, #108	@ 0x6c
 801e9ba:	9218      	str	r2, [sp, #96]	@ 0x60
 801e9bc:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801e9be:	9019      	str	r0, [sp, #100]	@ 0x64
 801e9c0:	9116      	str	r1, [sp, #88]	@ 0x58
 801e9c2:	6850      	ldr	r0, [r2, #4]
 801e9c4:	9307      	str	r3, [sp, #28]
 801e9c6:	6812      	ldr	r2, [r2, #0]
 801e9c8:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801e9cc:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801e9d0:	fb00 1303 	mla	r3, r0, r3, r1
 801e9d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e9d8:	930a      	str	r3, [sp, #40]	@ 0x28
 801e9da:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e9dc:	681b      	ldr	r3, [r3, #0]
 801e9de:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e9e0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801e9e2:	2b00      	cmp	r3, #0
 801e9e4:	dc03      	bgt.n	801e9ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e9e6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e9e8:	2b00      	cmp	r3, #0
 801e9ea:	f340 8387 	ble.w	801f0fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801e9ee:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e9f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e9f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e9f8:	1e48      	subs	r0, r1, #1
 801e9fa:	1e57      	subs	r7, r2, #1
 801e9fc:	9b07      	ldr	r3, [sp, #28]
 801e9fe:	2b00      	cmp	r3, #0
 801ea00:	f340 8166 	ble.w	801ecd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ea04:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ea08:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ea0c:	d406      	bmi.n	801ea1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ea0e:	4584      	cmp	ip, r0
 801ea10:	da04      	bge.n	801ea1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ea12:	2b00      	cmp	r3, #0
 801ea14:	db02      	blt.n	801ea1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ea16:	42bb      	cmp	r3, r7
 801ea18:	f2c0 815b 	blt.w	801ecd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801ea1c:	f11c 0c01 	adds.w	ip, ip, #1
 801ea20:	f100 814b 	bmi.w	801ecba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ea24:	4561      	cmp	r1, ip
 801ea26:	f2c0 8148 	blt.w	801ecba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ea2a:	3301      	adds	r3, #1
 801ea2c:	f100 8145 	bmi.w	801ecba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ea30:	429a      	cmp	r2, r3
 801ea32:	f2c0 8142 	blt.w	801ecba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ea36:	9b07      	ldr	r3, [sp, #28]
 801ea38:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801ea3a:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ea3c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ea3e:	2b00      	cmp	r3, #0
 801ea40:	f340 8165 	ble.w	801ed0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ea44:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801ea46:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ea4a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ea4c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801ea50:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ea54:	1422      	asrs	r2, r4, #16
 801ea56:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ea5a:	689b      	ldr	r3, [r3, #8]
 801ea5c:	f100 81d5 	bmi.w	801ee0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ea60:	f103 38ff 	add.w	r8, r3, #4294967295
 801ea64:	4542      	cmp	r2, r8
 801ea66:	f280 81d0 	bge.w	801ee0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ea6a:	f1bc 0f00 	cmp.w	ip, #0
 801ea6e:	f2c0 81cc 	blt.w	801ee0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ea72:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ea76:	45c4      	cmp	ip, r8
 801ea78:	f280 81c7 	bge.w	801ee0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ea7c:	b21b      	sxth	r3, r3
 801ea7e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ea80:	fb0c 2203 	mla	r2, ip, r3, r2
 801ea84:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ea88:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ea8c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ea90:	2900      	cmp	r1, #0
 801ea92:	f000 8182 	beq.w	801ed9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801ea96:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ea9a:	950b      	str	r5, [sp, #44]	@ 0x2c
 801ea9c:	0e2d      	lsrs	r5, r5, #24
 801ea9e:	9512      	str	r5, [sp, #72]	@ 0x48
 801eaa0:	b180      	cbz	r0, 801eac4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801eaa2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801eaa6:	3b01      	subs	r3, #1
 801eaa8:	009b      	lsls	r3, r3, #2
 801eaaa:	3304      	adds	r3, #4
 801eaac:	eb08 0c03 	add.w	ip, r8, r3
 801eab0:	f858 3003 	ldr.w	r3, [r8, r3]
 801eab4:	9308      	str	r3, [sp, #32]
 801eab6:	0e1b      	lsrs	r3, r3, #24
 801eab8:	9310      	str	r3, [sp, #64]	@ 0x40
 801eaba:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801eabe:	930c      	str	r3, [sp, #48]	@ 0x30
 801eac0:	0e1b      	lsrs	r3, r3, #24
 801eac2:	9313      	str	r3, [sp, #76]	@ 0x4c
 801eac4:	b289      	uxth	r1, r1
 801eac6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801eac8:	b280      	uxth	r0, r0
 801eaca:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801eacc:	fb01 f900 	mul.w	r9, r1, r0
 801ead0:	0109      	lsls	r1, r1, #4
 801ead2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ead6:	eba1 0809 	sub.w	r8, r1, r9
 801eada:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801eade:	b280      	uxth	r0, r0
 801eae0:	fa1f f888 	uxth.w	r8, r8
 801eae4:	1a09      	subs	r1, r1, r0
 801eae6:	fb08 f303 	mul.w	r3, r8, r3
 801eaea:	b289      	uxth	r1, r1
 801eaec:	fb01 330e 	mla	r3, r1, lr, r3
 801eaf0:	fb00 3305 	mla	r3, r0, r5, r3
 801eaf4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801eaf6:	fb09 3305 	mla	r3, r9, r5, r3
 801eafa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eafe:	2b00      	cmp	r3, #0
 801eb00:	f000 80d2 	beq.w	801eca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eb04:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801eb08:	d01b      	beq.n	801eb42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801eb0a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801eb0e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801eb12:	fb0e fa0a 	mul.w	sl, lr, sl
 801eb16:	fb0e fe02 	mul.w	lr, lr, r2
 801eb1a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801eb1e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801eb22:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801eb26:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801eb2a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801eb2e:	4452      	add	r2, sl
 801eb30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb34:	0a12      	lsrs	r2, r2, #8
 801eb36:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801eb3a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801eb3e:	ea42 020c 	orr.w	r2, r2, ip
 801eb42:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801eb44:	2dff      	cmp	r5, #255	@ 0xff
 801eb46:	d021      	beq.n	801eb8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801eb48:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801eb4a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801eb4e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801eb50:	fb05 fb0b 	mul.w	fp, r5, fp
 801eb54:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801eb56:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801eb5a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801eb5c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb60:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801eb64:	fb05 fa0a 	mul.w	sl, r5, sl
 801eb68:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eb6c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801eb70:	44de      	add	lr, fp
 801eb72:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eb76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eb7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb7e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eb82:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801eb86:	ea4e 050a 	orr.w	r5, lr, sl
 801eb8a:	950b      	str	r5, [sp, #44]	@ 0x2c
 801eb8c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801eb8e:	2dff      	cmp	r5, #255	@ 0xff
 801eb90:	d021      	beq.n	801ebd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801eb92:	9d08      	ldr	r5, [sp, #32]
 801eb94:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801eb98:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801eb9a:	fb05 fb0b 	mul.w	fp, r5, fp
 801eb9e:	9d08      	ldr	r5, [sp, #32]
 801eba0:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801eba4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801eba6:	fb05 fa0e 	mul.w	sl, r5, lr
 801ebaa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ebae:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ebb2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ebb6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ebba:	44de      	add	lr, fp
 801ebbc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ebc0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ebc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ebc8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ebcc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ebd0:	ea4e 050a 	orr.w	r5, lr, sl
 801ebd4:	9508      	str	r5, [sp, #32]
 801ebd6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ebd8:	2dff      	cmp	r5, #255	@ 0xff
 801ebda:	d021      	beq.n	801ec20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801ebdc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ebde:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801ebe2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ebe4:	fb05 fb0b 	mul.w	fp, r5, fp
 801ebe8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ebea:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ebee:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ebf0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ebf4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ebf8:	fb05 fa0a 	mul.w	sl, r5, sl
 801ebfc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ec00:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ec04:	44de      	add	lr, fp
 801ec06:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ec0a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ec0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec12:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ec16:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ec1a:	ea4e 050a 	orr.w	r5, lr, sl
 801ec1e:	950c      	str	r5, [sp, #48]	@ 0x30
 801ec20:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ec22:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801ec26:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ec2a:	2bff      	cmp	r3, #255	@ 0xff
 801ec2c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ec30:	9d08      	ldr	r5, [sp, #32]
 801ec32:	fb08 fc0c 	mul.w	ip, r8, ip
 801ec36:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ec3a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ec3e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ec40:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ec44:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ec48:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ec4a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ec4e:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801ec52:	fb08 f80e 	mul.w	r8, r8, lr
 801ec56:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec5a:	fb01 8202 	mla	r2, r1, r2, r8
 801ec5e:	9908      	ldr	r1, [sp, #32]
 801ec60:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ec64:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801ec68:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801ec6a:	fb00 220a 	mla	r2, r0, sl, r2
 801ec6e:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801ec72:	fb09 2900 	mla	r9, r9, r0, r2
 801ec76:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ec7a:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801ec7e:	ea4c 0c09 	orr.w	ip, ip, r9
 801ec82:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801ec86:	f040 8091 	bne.w	801edac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ec8a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801ec8e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801ec92:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ec96:	f022 0207 	bic.w	r2, r2, #7
 801ec9a:	431a      	orrs	r2, r3
 801ec9c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801eca0:	ea4c 0c02 	orr.w	ip, ip, r2
 801eca4:	f8a7 c000 	strh.w	ip, [r7]
 801eca8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ecaa:	3702      	adds	r7, #2
 801ecac:	441c      	add	r4, r3
 801ecae:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ecb0:	441e      	add	r6, r3
 801ecb2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ecb4:	3b01      	subs	r3, #1
 801ecb6:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ecb8:	e6c0      	b.n	801ea3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ecba:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ecbc:	441c      	add	r4, r3
 801ecbe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ecc0:	441e      	add	r6, r3
 801ecc2:	9b07      	ldr	r3, [sp, #28]
 801ecc4:	3b01      	subs	r3, #1
 801ecc6:	9307      	str	r3, [sp, #28]
 801ecc8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ecca:	3302      	adds	r3, #2
 801eccc:	930a      	str	r3, [sp, #40]	@ 0x28
 801ecce:	e695      	b.n	801e9fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ecd0:	d024      	beq.n	801ed1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ecd2:	9b07      	ldr	r3, [sp, #28]
 801ecd4:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801ecd6:	3b01      	subs	r3, #1
 801ecd8:	fb00 4003 	mla	r0, r0, r3, r4
 801ecdc:	1400      	asrs	r0, r0, #16
 801ecde:	f53f aeaa 	bmi.w	801ea36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ece2:	3901      	subs	r1, #1
 801ece4:	4288      	cmp	r0, r1
 801ece6:	f6bf aea6 	bge.w	801ea36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ecea:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801ecec:	fb01 6303 	mla	r3, r1, r3, r6
 801ecf0:	141b      	asrs	r3, r3, #16
 801ecf2:	f53f aea0 	bmi.w	801ea36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ecf6:	3a01      	subs	r2, #1
 801ecf8:	4293      	cmp	r3, r2
 801ecfa:	f6bf ae9c 	bge.w	801ea36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ecfe:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ed02:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801ed06:	f1bb 0f00 	cmp.w	fp, #0
 801ed0a:	f300 809a 	bgt.w	801ee42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ed0e:	9b07      	ldr	r3, [sp, #28]
 801ed10:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ed14:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ed16:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ed1a:	930a      	str	r3, [sp, #40]	@ 0x28
 801ed1c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ed1e:	2b00      	cmp	r3, #0
 801ed20:	f340 81ec 	ble.w	801f0fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801ed24:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ed28:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ed2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ed2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ed32:	eef0 6a62 	vmov.f32	s13, s5
 801ed36:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ed3a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ed3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ed42:	ee16 4a90 	vmov	r4, s13
 801ed46:	eef0 6a43 	vmov.f32	s13, s6
 801ed4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ed4e:	ee16 6a90 	vmov	r6, s13
 801ed52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ed56:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ed5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ed5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ed62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ed66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ed6a:	ee12 2a90 	vmov	r2, s5
 801ed6e:	eef0 2a47 	vmov.f32	s5, s14
 801ed72:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed76:	ee13 2a10 	vmov	r2, s6
 801ed7a:	9327      	str	r3, [sp, #156]	@ 0x9c
 801ed7c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ed7e:	eeb0 3a67 	vmov.f32	s6, s15
 801ed82:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed86:	9328      	str	r3, [sp, #160]	@ 0xa0
 801ed88:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ed8a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801ed8c:	3b01      	subs	r3, #1
 801ed8e:	9316      	str	r3, [sp, #88]	@ 0x58
 801ed90:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ed92:	bf08      	it	eq
 801ed94:	4613      	moveq	r3, r2
 801ed96:	9307      	str	r3, [sp, #28]
 801ed98:	e622      	b.n	801e9e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ed9a:	2800      	cmp	r0, #0
 801ed9c:	f43f ae92 	beq.w	801eac4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801eda0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801eda4:	9308      	str	r3, [sp, #32]
 801eda6:	0e1b      	lsrs	r3, r3, #24
 801eda8:	9310      	str	r3, [sp, #64]	@ 0x40
 801edaa:	e68b      	b.n	801eac4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801edac:	8839      	ldrh	r1, [r7, #0]
 801edae:	43db      	mvns	r3, r3
 801edb0:	4dd4      	ldr	r5, [pc, #848]	@ (801f104 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801edb2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801edb6:	fa5f f883 	uxtb.w	r8, r3
 801edba:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801edbe:	10c8      	asrs	r0, r1, #3
 801edc0:	00cb      	lsls	r3, r1, #3
 801edc2:	fb0e fe08 	mul.w	lr, lr, r8
 801edc6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801edca:	b2db      	uxtb	r3, r3
 801edcc:	f10e 0101 	add.w	r1, lr, #1
 801edd0:	fb00 f008 	mul.w	r0, r0, r8
 801edd4:	fb03 f308 	mul.w	r3, r3, r8
 801edd8:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801eddc:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ede0:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ede4:	f100 0e01 	add.w	lr, r0, #1
 801ede8:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801edec:	b2c9      	uxtb	r1, r1
 801edee:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801edf2:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801edf6:	00d2      	lsls	r2, r2, #3
 801edf8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801edfc:	430a      	orrs	r2, r1
 801edfe:	1c59      	adds	r1, r3, #1
 801ee00:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ee04:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ee08:	e748      	b.n	801ec9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801ee0a:	f112 0801 	adds.w	r8, r2, #1
 801ee0e:	f53f af4b 	bmi.w	801eca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ee12:	4543      	cmp	r3, r8
 801ee14:	f6ff af48 	blt.w	801eca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ee18:	f11c 0801 	adds.w	r8, ip, #1
 801ee1c:	f53f af44 	bmi.w	801eca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ee20:	45c6      	cmp	lr, r8
 801ee22:	f6ff af41 	blt.w	801eca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ee26:	b21b      	sxth	r3, r3
 801ee28:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801ee2c:	fa0f f28e 	sxth.w	r2, lr
 801ee30:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801ee34:	9200      	str	r2, [sp, #0]
 801ee36:	4639      	mov	r1, r7
 801ee38:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ee3a:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801ee3c:	f7ff fc88 	bl	801e750 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801ee40:	e732      	b.n	801eca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ee42:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ee44:	1421      	asrs	r1, r4, #16
 801ee46:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ee48:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ee4c:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801ee50:	1433      	asrs	r3, r6, #16
 801ee52:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ee56:	fb07 1303 	mla	r3, r7, r3, r1
 801ee5a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ee5c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801ee60:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ee64:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ee68:	2a00      	cmp	r2, #0
 801ee6a:	f000 8108 	beq.w	801f07e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 801ee6e:	684d      	ldr	r5, [r1, #4]
 801ee70:	950d      	str	r5, [sp, #52]	@ 0x34
 801ee72:	0e2d      	lsrs	r5, r5, #24
 801ee74:	9514      	str	r5, [sp, #80]	@ 0x50
 801ee76:	b178      	cbz	r0, 801ee98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ee78:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801ee7c:	3f01      	subs	r7, #1
 801ee7e:	00bf      	lsls	r7, r7, #2
 801ee80:	3704      	adds	r7, #4
 801ee82:	eb01 0e07 	add.w	lr, r1, r7
 801ee86:	59c9      	ldr	r1, [r1, r7]
 801ee88:	9109      	str	r1, [sp, #36]	@ 0x24
 801ee8a:	0e09      	lsrs	r1, r1, #24
 801ee8c:	9111      	str	r1, [sp, #68]	@ 0x44
 801ee8e:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ee92:	910e      	str	r1, [sp, #56]	@ 0x38
 801ee94:	0e09      	lsrs	r1, r1, #24
 801ee96:	9115      	str	r1, [sp, #84]	@ 0x54
 801ee98:	b292      	uxth	r2, r2
 801ee9a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ee9c:	b280      	uxth	r0, r0
 801ee9e:	fb02 f900 	mul.w	r9, r2, r0
 801eea2:	0112      	lsls	r2, r2, #4
 801eea4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801eea8:	eba2 0e09 	sub.w	lr, r2, r9
 801eeac:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801eeb0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801eeb2:	b280      	uxth	r0, r0
 801eeb4:	fa1f fe8e 	uxth.w	lr, lr
 801eeb8:	1a09      	subs	r1, r1, r0
 801eeba:	fb0e f202 	mul.w	r2, lr, r2
 801eebe:	b289      	uxth	r1, r1
 801eec0:	fb01 220c 	mla	r2, r1, ip, r2
 801eec4:	fb00 2205 	mla	r2, r0, r5, r2
 801eec8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801eeca:	fb09 2205 	mla	r2, r9, r5, r2
 801eece:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801eed2:	2a00      	cmp	r2, #0
 801eed4:	f000 80ca 	beq.w	801f06c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801eed8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801eedc:	d019      	beq.n	801ef12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801eede:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801eee2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801eee6:	fb0c fa0a 	mul.w	sl, ip, sl
 801eeea:	fb0c fc03 	mul.w	ip, ip, r3
 801eeee:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801eef2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801eef6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801eefa:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801eefe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ef02:	4453      	add	r3, sl
 801ef04:	0a3f      	lsrs	r7, r7, #8
 801ef06:	0a1b      	lsrs	r3, r3, #8
 801ef08:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ef0c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ef10:	433b      	orrs	r3, r7
 801ef12:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ef14:	2dff      	cmp	r5, #255	@ 0xff
 801ef16:	d020      	beq.n	801ef5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801ef18:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ef1a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ef1e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ef20:	436f      	muls	r7, r5
 801ef22:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ef24:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef28:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ef2c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ef2e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ef32:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef36:	fb05 fa0a 	mul.w	sl, r5, sl
 801ef3a:	44bc      	add	ip, r7
 801ef3c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ef40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef44:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef48:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef50:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ef54:	ea4c 050a 	orr.w	r5, ip, sl
 801ef58:	950d      	str	r5, [sp, #52]	@ 0x34
 801ef5a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ef5c:	2dff      	cmp	r5, #255	@ 0xff
 801ef5e:	d020      	beq.n	801efa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801ef60:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ef62:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ef66:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ef68:	436f      	muls	r7, r5
 801ef6a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ef6c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801ef70:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ef72:	fb05 fa0c 	mul.w	sl, r5, ip
 801ef76:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef7a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ef7e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef82:	44bc      	add	ip, r7
 801ef84:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ef88:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef94:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef98:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ef9c:	ea4c 050a 	orr.w	r5, ip, sl
 801efa0:	9509      	str	r5, [sp, #36]	@ 0x24
 801efa2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801efa4:	2dff      	cmp	r5, #255	@ 0xff
 801efa6:	d020      	beq.n	801efea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801efa8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801efaa:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801efae:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801efb0:	436f      	muls	r7, r5
 801efb2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801efb4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801efb8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801efbc:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801efbe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801efc2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801efc6:	fb05 fa0a 	mul.w	sl, r5, sl
 801efca:	44bc      	add	ip, r7
 801efcc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801efd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801efd4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801efd8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801efdc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801efe0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801efe4:	ea4c 050a 	orr.w	r5, ip, sl
 801efe8:	950e      	str	r5, [sp, #56]	@ 0x38
 801efea:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801efec:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801eff0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801eff4:	2aff      	cmp	r2, #255	@ 0xff
 801eff6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801effa:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801effc:	fb0e f707 	mul.w	r7, lr, r7
 801f000:	fb01 770c 	mla	r7, r1, ip, r7
 801f004:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f008:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f00a:	fb00 770c 	mla	r7, r0, ip, r7
 801f00e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f012:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f014:	fb09 770c 	mla	r7, r9, ip, r7
 801f018:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f01c:	fb0e fe0c 	mul.w	lr, lr, ip
 801f020:	ea4f 2717 	mov.w	r7, r7, lsr #8
 801f024:	fb01 e303 	mla	r3, r1, r3, lr
 801f028:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801f02a:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f02e:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f032:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801f034:	fb00 330a 	mla	r3, r0, sl, r3
 801f038:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801f03c:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f040:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f044:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f048:	ea47 070c 	orr.w	r7, r7, ip
 801f04c:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f050:	d11e      	bne.n	801f090 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 801f052:	097a      	lsrs	r2, r7, #5
 801f054:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801f058:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f05c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f060:	f023 0307 	bic.w	r3, r3, #7
 801f064:	4313      	orrs	r3, r2
 801f066:	431f      	orrs	r7, r3
 801f068:	f8a8 7000 	strh.w	r7, [r8]
 801f06c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f06e:	f108 0802 	add.w	r8, r8, #2
 801f072:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f076:	441c      	add	r4, r3
 801f078:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f07a:	441e      	add	r6, r3
 801f07c:	e643      	b.n	801ed06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f07e:	2800      	cmp	r0, #0
 801f080:	f43f af0a 	beq.w	801ee98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f084:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f088:	9109      	str	r1, [sp, #36]	@ 0x24
 801f08a:	0e09      	lsrs	r1, r1, #24
 801f08c:	9111      	str	r1, [sp, #68]	@ 0x44
 801f08e:	e703      	b.n	801ee98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f090:	f8b8 1000 	ldrh.w	r1, [r8]
 801f094:	43d2      	mvns	r2, r2
 801f096:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f09a:	fa5f fe82 	uxtb.w	lr, r2
 801f09e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f0a2:	10c8      	asrs	r0, r1, #3
 801f0a4:	00ca      	lsls	r2, r1, #3
 801f0a6:	fb0c fc0e 	mul.w	ip, ip, lr
 801f0aa:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f0ae:	b2d2      	uxtb	r2, r2
 801f0b0:	f10c 0101 	add.w	r1, ip, #1
 801f0b4:	fb00 f00e 	mul.w	r0, r0, lr
 801f0b8:	fb02 f20e 	mul.w	r2, r2, lr
 801f0bc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f0c0:	0c39      	lsrs	r1, r7, #16
 801f0c2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f0c6:	490f      	ldr	r1, [pc, #60]	@ (801f104 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801f0c8:	fa5f fc8c 	uxtb.w	ip, ip
 801f0cc:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f0d0:	1c41      	adds	r1, r0, #1
 801f0d2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f0d6:	1c51      	adds	r1, r2, #1
 801f0d8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f0dc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f0e0:	00c0      	lsls	r0, r0, #3
 801f0e2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f0e6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f0ea:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f0ee:	ea4c 0c00 	orr.w	ip, ip, r0
 801f0f2:	ea47 0c0c 	orr.w	ip, r7, ip
 801f0f6:	f8a8 c000 	strh.w	ip, [r8]
 801f0fa:	e7b7      	b.n	801f06c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801f0fc:	b01b      	add	sp, #108	@ 0x6c
 801f0fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f102:	bf00      	nop
 801f104:	fffff800 	.word	0xfffff800

0801f108 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f108:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f10c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801f110:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f114:	2d00      	cmp	r5, #0
 801f116:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801f11a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801f11e:	fb05 0e03 	mla	lr, r5, r3, r0
 801f122:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801f126:	f2c0 808c 	blt.w	801f242 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f12a:	45a9      	cmp	r9, r5
 801f12c:	f340 8089 	ble.w	801f242 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f130:	2800      	cmp	r0, #0
 801f132:	f2c0 8084 	blt.w	801f23e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f136:	4580      	cmp	r8, r0
 801f138:	f340 8081 	ble.w	801f23e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f13c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f140:	f01e 0f01 	tst.w	lr, #1
 801f144:	5d16      	ldrb	r6, [r2, r4]
 801f146:	bf0c      	ite	eq
 801f148:	f006 060f 	andeq.w	r6, r6, #15
 801f14c:	1136      	asrne	r6, r6, #4
 801f14e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f152:	b2f6      	uxtb	r6, r6
 801f154:	1c44      	adds	r4, r0, #1
 801f156:	d477      	bmi.n	801f248 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f158:	45a0      	cmp	r8, r4
 801f15a:	dd75      	ble.n	801f248 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f15c:	2f00      	cmp	r7, #0
 801f15e:	d075      	beq.n	801f24c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f160:	f10e 0a01 	add.w	sl, lr, #1
 801f164:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f168:	f01a 0f01 	tst.w	sl, #1
 801f16c:	5d14      	ldrb	r4, [r2, r4]
 801f16e:	bf0c      	ite	eq
 801f170:	f004 040f 	andeq.w	r4, r4, #15
 801f174:	1124      	asrne	r4, r4, #4
 801f176:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f17a:	b2e4      	uxtb	r4, r4
 801f17c:	3501      	adds	r5, #1
 801f17e:	d469      	bmi.n	801f254 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f180:	45a9      	cmp	r9, r5
 801f182:	dd67      	ble.n	801f254 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f184:	f1bc 0f00 	cmp.w	ip, #0
 801f188:	d067      	beq.n	801f25a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f18a:	2800      	cmp	r0, #0
 801f18c:	db60      	blt.n	801f250 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f18e:	4580      	cmp	r8, r0
 801f190:	dd5e      	ble.n	801f250 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f192:	eb03 090e 	add.w	r9, r3, lr
 801f196:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f19a:	f019 0f01 	tst.w	r9, #1
 801f19e:	5d55      	ldrb	r5, [r2, r5]
 801f1a0:	bf0c      	ite	eq
 801f1a2:	f005 050f 	andeq.w	r5, r5, #15
 801f1a6:	112d      	asrne	r5, r5, #4
 801f1a8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f1ac:	b2ed      	uxtb	r5, r5
 801f1ae:	3001      	adds	r0, #1
 801f1b0:	d456      	bmi.n	801f260 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f1b2:	4580      	cmp	r8, r0
 801f1b4:	dd54      	ble.n	801f260 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f1b6:	2f00      	cmp	r7, #0
 801f1b8:	d054      	beq.n	801f264 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f1ba:	3301      	adds	r3, #1
 801f1bc:	449e      	add	lr, r3
 801f1be:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f1c2:	f01e 0f01 	tst.w	lr, #1
 801f1c6:	5cd0      	ldrb	r0, [r2, r3]
 801f1c8:	bf0c      	ite	eq
 801f1ca:	f000 000f 	andeq.w	r0, r0, #15
 801f1ce:	1100      	asrne	r0, r0, #4
 801f1d0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f1d4:	b2c3      	uxtb	r3, r0
 801f1d6:	b2ba      	uxth	r2, r7
 801f1d8:	fa1f fc8c 	uxth.w	ip, ip
 801f1dc:	fb02 f00c 	mul.w	r0, r2, ip
 801f1e0:	0112      	lsls	r2, r2, #4
 801f1e2:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f1e6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801f1ea:	1a12      	subs	r2, r2, r0
 801f1ec:	fa1f fc8c 	uxth.w	ip, ip
 801f1f0:	b292      	uxth	r2, r2
 801f1f2:	eba7 070c 	sub.w	r7, r7, ip
 801f1f6:	4362      	muls	r2, r4
 801f1f8:	b2bf      	uxth	r7, r7
 801f1fa:	fb06 2207 	mla	r2, r6, r7, r2
 801f1fe:	fb0c 2505 	mla	r5, ip, r5, r2
 801f202:	fb00 5303 	mla	r3, r0, r3, r5
 801f206:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f20a:	b1b3      	cbz	r3, 801f23a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f20c:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801f210:	435a      	muls	r2, r3
 801f212:	1c53      	adds	r3, r2, #1
 801f214:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f218:	4a2d      	ldr	r2, [pc, #180]	@ (801f2d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f21a:	121b      	asrs	r3, r3, #8
 801f21c:	6812      	ldr	r2, [r2, #0]
 801f21e:	2bff      	cmp	r3, #255	@ 0xff
 801f220:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f224:	d120      	bne.n	801f268 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f226:	0950      	lsrs	r0, r2, #5
 801f228:	4b2a      	ldr	r3, [pc, #168]	@ (801f2d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f22a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f22e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f232:	4033      	ands	r3, r6
 801f234:	4318      	orrs	r0, r3
 801f236:	4302      	orrs	r2, r0
 801f238:	800a      	strh	r2, [r1, #0]
 801f23a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f23e:	2600      	movs	r6, #0
 801f240:	e788      	b.n	801f154 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f242:	2400      	movs	r4, #0
 801f244:	4626      	mov	r6, r4
 801f246:	e799      	b.n	801f17c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f248:	2400      	movs	r4, #0
 801f24a:	e797      	b.n	801f17c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f24c:	463c      	mov	r4, r7
 801f24e:	e795      	b.n	801f17c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f250:	2500      	movs	r5, #0
 801f252:	e7ac      	b.n	801f1ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f254:	2300      	movs	r3, #0
 801f256:	461d      	mov	r5, r3
 801f258:	e7bd      	b.n	801f1d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f25a:	4663      	mov	r3, ip
 801f25c:	4665      	mov	r5, ip
 801f25e:	e7ba      	b.n	801f1d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f260:	2300      	movs	r3, #0
 801f262:	e7b8      	b.n	801f1d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f264:	463b      	mov	r3, r7
 801f266:	e7b6      	b.n	801f1d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f268:	880d      	ldrh	r5, [r1, #0]
 801f26a:	b29f      	uxth	r7, r3
 801f26c:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f270:	43db      	mvns	r3, r3
 801f272:	122c      	asrs	r4, r5, #8
 801f274:	fb10 f007 	smulbb	r0, r0, r7
 801f278:	b2db      	uxtb	r3, r3
 801f27a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f27e:	b2f6      	uxtb	r6, r6
 801f280:	b2d2      	uxtb	r2, r2
 801f282:	fb04 0403 	mla	r4, r4, r3, r0
 801f286:	10e8      	asrs	r0, r5, #3
 801f288:	fb12 f207 	smulbb	r2, r2, r7
 801f28c:	00ed      	lsls	r5, r5, #3
 801f28e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f292:	b2a4      	uxth	r4, r4
 801f294:	fb16 f607 	smulbb	r6, r6, r7
 801f298:	b2ed      	uxtb	r5, r5
 801f29a:	fb00 6603 	mla	r6, r0, r3, r6
 801f29e:	fb05 2303 	mla	r3, r5, r3, r2
 801f2a2:	b2b0      	uxth	r0, r6
 801f2a4:	b29a      	uxth	r2, r3
 801f2a6:	1c63      	adds	r3, r4, #1
 801f2a8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f2ac:	1c53      	adds	r3, r2, #1
 801f2ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f2b2:	1c42      	adds	r2, r0, #1
 801f2b4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801f2b8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f2bc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f2c0:	0940      	lsrs	r0, r0, #5
 801f2c2:	4323      	orrs	r3, r4
 801f2c4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f2c8:	4303      	orrs	r3, r0
 801f2ca:	800b      	strh	r3, [r1, #0]
 801f2cc:	e7b5      	b.n	801f23a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f2ce:	bf00      	nop
 801f2d0:	20016b84 	.word	0x20016b84
 801f2d4:	00fff800 	.word	0x00fff800

0801f2d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f2d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f2dc:	b097      	sub	sp, #92	@ 0x5c
 801f2de:	9214      	str	r2, [sp, #80]	@ 0x50
 801f2e0:	9309      	str	r3, [sp, #36]	@ 0x24
 801f2e2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801f2e4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801f2e8:	9015      	str	r0, [sp, #84]	@ 0x54
 801f2ea:	910d      	str	r1, [sp, #52]	@ 0x34
 801f2ec:	6850      	ldr	r0, [r2, #4]
 801f2ee:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f2f0:	6812      	ldr	r2, [r2, #0]
 801f2f2:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801f2f6:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801f2fa:	fb00 1303 	mla	r3, r0, r3, r1
 801f2fe:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f302:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f304:	689b      	ldr	r3, [r3, #8]
 801f306:	3301      	adds	r3, #1
 801f308:	f023 0301 	bic.w	r3, r3, #1
 801f30c:	930a      	str	r3, [sp, #40]	@ 0x28
 801f30e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f310:	681f      	ldr	r7, [r3, #0]
 801f312:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f314:	2b00      	cmp	r3, #0
 801f316:	dc03      	bgt.n	801f320 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f318:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801f31a:	2b00      	cmp	r3, #0
 801f31c:	f340 8289 	ble.w	801f832 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801f320:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f322:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f326:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f32a:	1e48      	subs	r0, r1, #1
 801f32c:	f102 3cff 	add.w	ip, r2, #4294967295
 801f330:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f332:	2b00      	cmp	r3, #0
 801f334:	f340 80c5 	ble.w	801f4c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f338:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f33c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f340:	d406      	bmi.n	801f350 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f342:	4586      	cmp	lr, r0
 801f344:	da04      	bge.n	801f350 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f346:	2b00      	cmp	r3, #0
 801f348:	db02      	blt.n	801f350 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f34a:	4563      	cmp	r3, ip
 801f34c:	f2c0 80ba 	blt.w	801f4c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801f350:	f11e 0e01 	adds.w	lr, lr, #1
 801f354:	f100 80ab 	bmi.w	801f4ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f358:	4571      	cmp	r1, lr
 801f35a:	f2c0 80a8 	blt.w	801f4ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f35e:	3301      	adds	r3, #1
 801f360:	f100 80a5 	bmi.w	801f4ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f364:	429a      	cmp	r2, r3
 801f366:	f2c0 80a2 	blt.w	801f4ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f36a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f36c:	46c8      	mov	r8, r9
 801f36e:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801f372:	930e      	str	r3, [sp, #56]	@ 0x38
 801f374:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f376:	2b00      	cmp	r3, #0
 801f378:	f340 80c4 	ble.w	801f504 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801f37c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f37e:	1430      	asrs	r0, r6, #16
 801f380:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f384:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f388:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f38c:	1423      	asrs	r3, r4, #16
 801f38e:	f100 814f 	bmi.w	801f630 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f392:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f396:	455b      	cmp	r3, fp
 801f398:	f280 814a 	bge.w	801f630 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f39c:	2800      	cmp	r0, #0
 801f39e:	f2c0 8147 	blt.w	801f630 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f3a2:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f3a6:	4558      	cmp	r0, fp
 801f3a8:	f280 8142 	bge.w	801f630 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f3ac:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801f3ae:	fb00 3305 	mla	r3, r0, r5, r3
 801f3b2:	0858      	lsrs	r0, r3, #1
 801f3b4:	07dd      	lsls	r5, r3, #31
 801f3b6:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f3ba:	bf54      	ite	pl
 801f3bc:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f3c0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f3c4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f3c8:	fa5f fc8c 	uxtb.w	ip, ip
 801f3cc:	2a00      	cmp	r2, #0
 801f3ce:	f000 80dd 	beq.w	801f58c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801f3d2:	1c58      	adds	r0, r3, #1
 801f3d4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f3d8:	07c0      	lsls	r0, r0, #31
 801f3da:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f3de:	bf54      	ite	pl
 801f3e0:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f3e4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f3e8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f3ec:	fa5f f08e 	uxtb.w	r0, lr
 801f3f0:	9010      	str	r0, [sp, #64]	@ 0x40
 801f3f2:	b1d9      	cbz	r1, 801f42c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801f3f4:	4453      	add	r3, sl
 801f3f6:	0858      	lsrs	r0, r3, #1
 801f3f8:	07dd      	lsls	r5, r3, #31
 801f3fa:	f103 0301 	add.w	r3, r3, #1
 801f3fe:	5c38      	ldrb	r0, [r7, r0]
 801f400:	bf54      	ite	pl
 801f402:	f000 000f 	andpl.w	r0, r0, #15
 801f406:	1100      	asrmi	r0, r0, #4
 801f408:	07dd      	lsls	r5, r3, #31
 801f40a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f40e:	b2c0      	uxtb	r0, r0
 801f410:	900b      	str	r0, [sp, #44]	@ 0x2c
 801f412:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801f416:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f41a:	bf54      	ite	pl
 801f41c:	f00e 030f 	andpl.w	r3, lr, #15
 801f420:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f424:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f428:	b2db      	uxtb	r3, r3
 801f42a:	9311      	str	r3, [sp, #68]	@ 0x44
 801f42c:	b292      	uxth	r2, r2
 801f42e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f430:	b289      	uxth	r1, r1
 801f432:	fb02 f301 	mul.w	r3, r2, r1
 801f436:	0112      	lsls	r2, r2, #4
 801f438:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f43c:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801f440:	1ad2      	subs	r2, r2, r3
 801f442:	b289      	uxth	r1, r1
 801f444:	b292      	uxth	r2, r2
 801f446:	1a40      	subs	r0, r0, r1
 801f448:	436a      	muls	r2, r5
 801f44a:	b280      	uxth	r0, r0
 801f44c:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f450:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f452:	fb01 c102 	mla	r1, r1, r2, ip
 801f456:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801f458:	fb03 1302 	mla	r3, r3, r2, r1
 801f45c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f460:	b1db      	cbz	r3, 801f49a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f462:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f464:	4353      	muls	r3, r2
 801f466:	1c5a      	adds	r2, r3, #1
 801f468:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f46c:	4ac6      	ldr	r2, [pc, #792]	@ (801f788 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801f46e:	121b      	asrs	r3, r3, #8
 801f470:	6812      	ldr	r2, [r2, #0]
 801f472:	2bff      	cmp	r3, #255	@ 0xff
 801f474:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f478:	f040 8099 	bne.w	801f5ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801f47c:	0953      	lsrs	r3, r2, #5
 801f47e:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801f482:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f486:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f48a:	f02c 0c07 	bic.w	ip, ip, #7
 801f48e:	ea43 0c0c 	orr.w	ip, r3, ip
 801f492:	ea4c 0202 	orr.w	r2, ip, r2
 801f496:	f8a8 2000 	strh.w	r2, [r8]
 801f49a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801f49c:	f108 0802 	add.w	r8, r8, #2
 801f4a0:	441c      	add	r4, r3
 801f4a2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f4a4:	441e      	add	r6, r3
 801f4a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f4a8:	3b01      	subs	r3, #1
 801f4aa:	930e      	str	r3, [sp, #56]	@ 0x38
 801f4ac:	e762      	b.n	801f374 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f4ae:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801f4b0:	f109 0902 	add.w	r9, r9, #2
 801f4b4:	441c      	add	r4, r3
 801f4b6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f4b8:	441e      	add	r6, r3
 801f4ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f4bc:	3b01      	subs	r3, #1
 801f4be:	9309      	str	r3, [sp, #36]	@ 0x24
 801f4c0:	e736      	b.n	801f330 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f4c2:	d024      	beq.n	801f50e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801f4c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f4c6:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801f4c8:	3b01      	subs	r3, #1
 801f4ca:	fb00 4003 	mla	r0, r0, r3, r4
 801f4ce:	1400      	asrs	r0, r0, #16
 801f4d0:	f53f af4b 	bmi.w	801f36a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f4d4:	3901      	subs	r1, #1
 801f4d6:	4288      	cmp	r0, r1
 801f4d8:	f6bf af47 	bge.w	801f36a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f4dc:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801f4de:	fb01 6303 	mla	r3, r1, r3, r6
 801f4e2:	141b      	asrs	r3, r3, #16
 801f4e4:	f53f af41 	bmi.w	801f36a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f4e8:	3a01      	subs	r2, #1
 801f4ea:	4293      	cmp	r3, r2
 801f4ec:	f6bf af3d 	bge.w	801f36a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f4f0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801f4f4:	46c8      	mov	r8, r9
 801f4f6:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801f4fa:	930e      	str	r3, [sp, #56]	@ 0x38
 801f4fc:	f1bb 0f00 	cmp.w	fp, #0
 801f500:	f300 80b7 	bgt.w	801f672 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 801f504:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f506:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f50a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f50e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f510:	2b00      	cmp	r3, #0
 801f512:	f340 818e 	ble.w	801f832 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801f516:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f51a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f51c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f520:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f524:	eef0 6a62 	vmov.f32	s13, s5
 801f528:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f52c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f530:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f534:	ee16 4a90 	vmov	r4, s13
 801f538:	eef0 6a43 	vmov.f32	s13, s6
 801f53c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f540:	ee16 6a90 	vmov	r6, s13
 801f544:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f548:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f54c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f550:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f554:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f558:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f55c:	ee12 2a90 	vmov	r2, s5
 801f560:	eef0 2a47 	vmov.f32	s5, s14
 801f564:	fb92 f3f3 	sdiv	r3, r2, r3
 801f568:	ee13 2a10 	vmov	r2, s6
 801f56c:	9323      	str	r3, [sp, #140]	@ 0x8c
 801f56e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f570:	eeb0 3a67 	vmov.f32	s6, s15
 801f574:	fb92 f3f3 	sdiv	r3, r2, r3
 801f578:	9324      	str	r3, [sp, #144]	@ 0x90
 801f57a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f57c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f57e:	3b01      	subs	r3, #1
 801f580:	930d      	str	r3, [sp, #52]	@ 0x34
 801f582:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f584:	bf08      	it	eq
 801f586:	4613      	moveq	r3, r2
 801f588:	9309      	str	r3, [sp, #36]	@ 0x24
 801f58a:	e6c2      	b.n	801f312 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f58c:	2900      	cmp	r1, #0
 801f58e:	f43f af4d 	beq.w	801f42c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801f592:	eb0a 0003 	add.w	r0, sl, r3
 801f596:	0843      	lsrs	r3, r0, #1
 801f598:	07c0      	lsls	r0, r0, #31
 801f59a:	5cfb      	ldrb	r3, [r7, r3]
 801f59c:	bf54      	ite	pl
 801f59e:	f003 030f 	andpl.w	r3, r3, #15
 801f5a2:	111b      	asrmi	r3, r3, #4
 801f5a4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f5a8:	b2db      	uxtb	r3, r3
 801f5aa:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f5ac:	e73e      	b.n	801f42c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801f5ae:	f8b8 e000 	ldrh.w	lr, [r8]
 801f5b2:	fa1f fb83 	uxth.w	fp, r3
 801f5b6:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f5ba:	43db      	mvns	r3, r3
 801f5bc:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f5c0:	fb11 f10b 	smulbb	r1, r1, fp
 801f5c4:	b2db      	uxtb	r3, r3
 801f5c6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f5ca:	fa5f fc8c 	uxtb.w	ip, ip
 801f5ce:	b2d2      	uxtb	r2, r2
 801f5d0:	fb00 1003 	mla	r0, r0, r3, r1
 801f5d4:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f5d8:	fb1c fc0b 	smulbb	ip, ip, fp
 801f5dc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f5e0:	b280      	uxth	r0, r0
 801f5e2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f5e6:	fb12 fb0b 	smulbb	fp, r2, fp
 801f5ea:	fa5f fe8e 	uxtb.w	lr, lr
 801f5ee:	fb01 cc03 	mla	ip, r1, r3, ip
 801f5f2:	fb0e bb03 	mla	fp, lr, r3, fp
 801f5f6:	1c43      	adds	r3, r0, #1
 801f5f8:	fa1f fc8c 	uxth.w	ip, ip
 801f5fc:	fa1f fb8b 	uxth.w	fp, fp
 801f600:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f604:	f10c 0101 	add.w	r1, ip, #1
 801f608:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801f60c:	f10b 0001 	add.w	r0, fp, #1
 801f610:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f614:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f618:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f61c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f620:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801f624:	4318      	orrs	r0, r3
 801f626:	ea40 000c 	orr.w	r0, r0, ip
 801f62a:	f8a8 0000 	strh.w	r0, [r8]
 801f62e:	e734      	b.n	801f49a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f630:	f113 0b01 	adds.w	fp, r3, #1
 801f634:	f53f af31 	bmi.w	801f49a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f638:	45dc      	cmp	ip, fp
 801f63a:	f6ff af2e 	blt.w	801f49a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f63e:	f110 0b01 	adds.w	fp, r0, #1
 801f642:	f53f af2a 	bmi.w	801f49a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f646:	45de      	cmp	lr, fp
 801f648:	f6ff af27 	blt.w	801f49a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f64c:	9302      	str	r3, [sp, #8]
 801f64e:	fa0f f38e 	sxth.w	r3, lr
 801f652:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f654:	9301      	str	r3, [sp, #4]
 801f656:	fa0f f38c 	sxth.w	r3, ip
 801f65a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f65e:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f662:	9300      	str	r3, [sp, #0]
 801f664:	463a      	mov	r2, r7
 801f666:	4653      	mov	r3, sl
 801f668:	4641      	mov	r1, r8
 801f66a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801f66c:	f7ff fd4c 	bl	801f108 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f670:	e713      	b.n	801f49a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f672:	1422      	asrs	r2, r4, #16
 801f674:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801f676:	1433      	asrs	r3, r6, #16
 801f678:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f67c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f680:	fb05 2303 	mla	r3, r5, r3, r2
 801f684:	085a      	lsrs	r2, r3, #1
 801f686:	07dd      	lsls	r5, r3, #31
 801f688:	5cba      	ldrb	r2, [r7, r2]
 801f68a:	bf54      	ite	pl
 801f68c:	f002 020f 	andpl.w	r2, r2, #15
 801f690:	1112      	asrmi	r2, r2, #4
 801f692:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f696:	b2d2      	uxtb	r2, r2
 801f698:	2900      	cmp	r1, #0
 801f69a:	d077      	beq.n	801f78c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801f69c:	f103 0e01 	add.w	lr, r3, #1
 801f6a0:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f6a4:	f01e 0f01 	tst.w	lr, #1
 801f6a8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f6ac:	bf0c      	ite	eq
 801f6ae:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f6b2:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f6b6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f6ba:	fa5f f58c 	uxtb.w	r5, ip
 801f6be:	9512      	str	r5, [sp, #72]	@ 0x48
 801f6c0:	b308      	cbz	r0, 801f706 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801f6c2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f6c4:	442b      	add	r3, r5
 801f6c6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f6ca:	07dd      	lsls	r5, r3, #31
 801f6cc:	f103 0301 	add.w	r3, r3, #1
 801f6d0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f6d4:	bf54      	ite	pl
 801f6d6:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f6da:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f6de:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f6e2:	fa5f f58c 	uxtb.w	r5, ip
 801f6e6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f6ea:	950c      	str	r5, [sp, #48]	@ 0x30
 801f6ec:	07dd      	lsls	r5, r3, #31
 801f6ee:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f6f2:	bf54      	ite	pl
 801f6f4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f6f8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f6fc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f700:	fa5f f38c 	uxtb.w	r3, ip
 801f704:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f706:	b289      	uxth	r1, r1
 801f708:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f70a:	b280      	uxth	r0, r0
 801f70c:	fb01 f300 	mul.w	r3, r1, r0
 801f710:	0109      	lsls	r1, r1, #4
 801f712:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f716:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801f71a:	1ac9      	subs	r1, r1, r3
 801f71c:	b280      	uxth	r0, r0
 801f71e:	b289      	uxth	r1, r1
 801f720:	ebac 0c00 	sub.w	ip, ip, r0
 801f724:	4369      	muls	r1, r5
 801f726:	fa1f fc8c 	uxth.w	ip, ip
 801f72a:	fb02 120c 	mla	r2, r2, ip, r1
 801f72e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f730:	fb00 2001 	mla	r0, r0, r1, r2
 801f734:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801f736:	fb03 0302 	mla	r3, r3, r2, r0
 801f73a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f73e:	b1d3      	cbz	r3, 801f776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801f740:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f742:	4353      	muls	r3, r2
 801f744:	1c5a      	adds	r2, r3, #1
 801f746:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f74a:	4a0f      	ldr	r2, [pc, #60]	@ (801f788 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801f74c:	121b      	asrs	r3, r3, #8
 801f74e:	6812      	ldr	r2, [r2, #0]
 801f750:	2bff      	cmp	r3, #255	@ 0xff
 801f752:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f756:	d12d      	bne.n	801f7b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 801f758:	0953      	lsrs	r3, r2, #5
 801f75a:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801f75e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f762:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f766:	f02c 0c07 	bic.w	ip, ip, #7
 801f76a:	ea43 0c0c 	orr.w	ip, r3, ip
 801f76e:	ea4c 0202 	orr.w	r2, ip, r2
 801f772:	f8a8 2000 	strh.w	r2, [r8]
 801f776:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801f778:	f108 0802 	add.w	r8, r8, #2
 801f77c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f780:	441c      	add	r4, r3
 801f782:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f784:	441e      	add	r6, r3
 801f786:	e6b9      	b.n	801f4fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801f788:	20016b84 	.word	0x20016b84
 801f78c:	2800      	cmp	r0, #0
 801f78e:	d0ba      	beq.n	801f706 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801f790:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f792:	442b      	add	r3, r5
 801f794:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f798:	07db      	lsls	r3, r3, #31
 801f79a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f79e:	bf54      	ite	pl
 801f7a0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f7a4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f7a8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f7ac:	fa5f f38c 	uxtb.w	r3, ip
 801f7b0:	930c      	str	r3, [sp, #48]	@ 0x30
 801f7b2:	e7a8      	b.n	801f706 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801f7b4:	f8b8 e000 	ldrh.w	lr, [r8]
 801f7b8:	fa1f fa83 	uxth.w	sl, r3
 801f7bc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f7c0:	43db      	mvns	r3, r3
 801f7c2:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f7c6:	fb11 f10a 	smulbb	r1, r1, sl
 801f7ca:	b2db      	uxtb	r3, r3
 801f7cc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f7d0:	b2d2      	uxtb	r2, r2
 801f7d2:	fa5f fc8c 	uxtb.w	ip, ip
 801f7d6:	fb00 1003 	mla	r0, r0, r3, r1
 801f7da:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f7de:	fb12 f20a 	smulbb	r2, r2, sl
 801f7e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f7e6:	b280      	uxth	r0, r0
 801f7e8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f7ec:	fb1c fc0a 	smulbb	ip, ip, sl
 801f7f0:	fa5f fe8e 	uxtb.w	lr, lr
 801f7f4:	fb0e 2203 	mla	r2, lr, r3, r2
 801f7f8:	fb01 cc03 	mla	ip, r1, r3, ip
 801f7fc:	1c43      	adds	r3, r0, #1
 801f7fe:	b292      	uxth	r2, r2
 801f800:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f804:	1c51      	adds	r1, r2, #1
 801f806:	fa1f fc8c 	uxth.w	ip, ip
 801f80a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801f80e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f812:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f816:	4308      	orrs	r0, r1
 801f818:	f10c 0101 	add.w	r1, ip, #1
 801f81c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f820:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f824:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801f828:	ea40 000c 	orr.w	r0, r0, ip
 801f82c:	f8a8 0000 	strh.w	r0, [r8]
 801f830:	e7a1      	b.n	801f776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801f832:	b017      	add	sp, #92	@ 0x5c
 801f834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f838 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f838:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f83c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801f840:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f844:	2d00      	cmp	r5, #0
 801f846:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801f84a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801f84e:	fb05 0e03 	mla	lr, r5, r3, r0
 801f852:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801f856:	f2c0 80b0 	blt.w	801f9ba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f85a:	45a9      	cmp	r9, r5
 801f85c:	f340 80ad 	ble.w	801f9ba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f860:	2800      	cmp	r0, #0
 801f862:	f2c0 80a8 	blt.w	801f9b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f866:	4580      	cmp	r8, r0
 801f868:	f340 80a5 	ble.w	801f9b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f86c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f870:	f01e 0f01 	tst.w	lr, #1
 801f874:	5d16      	ldrb	r6, [r2, r4]
 801f876:	bf0c      	ite	eq
 801f878:	f006 060f 	andeq.w	r6, r6, #15
 801f87c:	1136      	asrne	r6, r6, #4
 801f87e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f882:	b2f6      	uxtb	r6, r6
 801f884:	1c44      	adds	r4, r0, #1
 801f886:	f100 809b 	bmi.w	801f9c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f88a:	45a0      	cmp	r8, r4
 801f88c:	f340 8098 	ble.w	801f9c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f890:	2f00      	cmp	r7, #0
 801f892:	f000 8097 	beq.w	801f9c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f896:	f10e 0a01 	add.w	sl, lr, #1
 801f89a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f89e:	f01a 0f01 	tst.w	sl, #1
 801f8a2:	5d14      	ldrb	r4, [r2, r4]
 801f8a4:	bf0c      	ite	eq
 801f8a6:	f004 040f 	andeq.w	r4, r4, #15
 801f8aa:	1124      	asrne	r4, r4, #4
 801f8ac:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f8b0:	b2e4      	uxtb	r4, r4
 801f8b2:	3501      	adds	r5, #1
 801f8b4:	f100 808a 	bmi.w	801f9cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f8b8:	45a9      	cmp	r9, r5
 801f8ba:	f340 8087 	ble.w	801f9cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f8be:	f1bc 0f00 	cmp.w	ip, #0
 801f8c2:	f000 8086 	beq.w	801f9d2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f8c6:	2800      	cmp	r0, #0
 801f8c8:	db7e      	blt.n	801f9c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f8ca:	4580      	cmp	r8, r0
 801f8cc:	dd7c      	ble.n	801f9c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f8ce:	eb03 090e 	add.w	r9, r3, lr
 801f8d2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f8d6:	f019 0f01 	tst.w	r9, #1
 801f8da:	5d55      	ldrb	r5, [r2, r5]
 801f8dc:	bf0c      	ite	eq
 801f8de:	f005 050f 	andeq.w	r5, r5, #15
 801f8e2:	112d      	asrne	r5, r5, #4
 801f8e4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f8e8:	b2ed      	uxtb	r5, r5
 801f8ea:	3001      	adds	r0, #1
 801f8ec:	d474      	bmi.n	801f9d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f8ee:	4580      	cmp	r8, r0
 801f8f0:	dd72      	ble.n	801f9d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f8f2:	2f00      	cmp	r7, #0
 801f8f4:	d072      	beq.n	801f9dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f8f6:	3301      	adds	r3, #1
 801f8f8:	449e      	add	lr, r3
 801f8fa:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f8fe:	f01e 0f01 	tst.w	lr, #1
 801f902:	5cd0      	ldrb	r0, [r2, r3]
 801f904:	bf0c      	ite	eq
 801f906:	f000 000f 	andeq.w	r0, r0, #15
 801f90a:	1100      	asrne	r0, r0, #4
 801f90c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f910:	b2c3      	uxtb	r3, r0
 801f912:	b2ba      	uxth	r2, r7
 801f914:	fa1f fc8c 	uxth.w	ip, ip
 801f918:	fb02 f00c 	mul.w	r0, r2, ip
 801f91c:	0112      	lsls	r2, r2, #4
 801f91e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f922:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801f926:	1a12      	subs	r2, r2, r0
 801f928:	fa1f fc8c 	uxth.w	ip, ip
 801f92c:	b292      	uxth	r2, r2
 801f92e:	eba7 070c 	sub.w	r7, r7, ip
 801f932:	4362      	muls	r2, r4
 801f934:	b2bf      	uxth	r7, r7
 801f936:	fb06 2207 	mla	r2, r6, r7, r2
 801f93a:	fb0c 2505 	mla	r5, ip, r5, r2
 801f93e:	fb00 5303 	mla	r3, r0, r3, r5
 801f942:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f946:	b3a3      	cbz	r3, 801f9b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f948:	4a25      	ldr	r2, [pc, #148]	@ (801f9e0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f94a:	880e      	ldrh	r6, [r1, #0]
 801f94c:	6815      	ldr	r5, [r2, #0]
 801f94e:	b29a      	uxth	r2, r3
 801f950:	1234      	asrs	r4, r6, #8
 801f952:	43db      	mvns	r3, r3
 801f954:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f958:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f95c:	b2db      	uxtb	r3, r3
 801f95e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f962:	fb10 f002 	smulbb	r0, r0, r2
 801f966:	b2ed      	uxtb	r5, r5
 801f968:	fb17 f702 	smulbb	r7, r7, r2
 801f96c:	fb04 0403 	mla	r4, r4, r3, r0
 801f970:	10f0      	asrs	r0, r6, #3
 801f972:	fb15 f202 	smulbb	r2, r5, r2
 801f976:	00f6      	lsls	r6, r6, #3
 801f978:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f97c:	b2a4      	uxth	r4, r4
 801f97e:	b2f6      	uxtb	r6, r6
 801f980:	fb00 7003 	mla	r0, r0, r3, r7
 801f984:	fb06 2303 	mla	r3, r6, r3, r2
 801f988:	b280      	uxth	r0, r0
 801f98a:	b29a      	uxth	r2, r3
 801f98c:	1c63      	adds	r3, r4, #1
 801f98e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f992:	1c53      	adds	r3, r2, #1
 801f994:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f998:	1c42      	adds	r2, r0, #1
 801f99a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801f99e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f9a2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f9a6:	0940      	lsrs	r0, r0, #5
 801f9a8:	4323      	orrs	r3, r4
 801f9aa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f9ae:	4303      	orrs	r3, r0
 801f9b0:	800b      	strh	r3, [r1, #0]
 801f9b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f9b6:	2600      	movs	r6, #0
 801f9b8:	e764      	b.n	801f884 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801f9ba:	2400      	movs	r4, #0
 801f9bc:	4626      	mov	r6, r4
 801f9be:	e778      	b.n	801f8b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f9c0:	2400      	movs	r4, #0
 801f9c2:	e776      	b.n	801f8b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f9c4:	463c      	mov	r4, r7
 801f9c6:	e774      	b.n	801f8b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f9c8:	2500      	movs	r5, #0
 801f9ca:	e78e      	b.n	801f8ea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801f9cc:	2300      	movs	r3, #0
 801f9ce:	461d      	mov	r5, r3
 801f9d0:	e79f      	b.n	801f912 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f9d2:	4663      	mov	r3, ip
 801f9d4:	4665      	mov	r5, ip
 801f9d6:	e79c      	b.n	801f912 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f9d8:	2300      	movs	r3, #0
 801f9da:	e79a      	b.n	801f912 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f9dc:	463b      	mov	r3, r7
 801f9de:	e798      	b.n	801f912 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f9e0:	20016b84 	.word	0x20016b84

0801f9e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f9e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f9e8:	b093      	sub	sp, #76	@ 0x4c
 801f9ea:	461d      	mov	r5, r3
 801f9ec:	920c      	str	r2, [sp, #48]	@ 0x30
 801f9ee:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801f9f0:	9011      	str	r0, [sp, #68]	@ 0x44
 801f9f2:	9107      	str	r1, [sp, #28]
 801f9f4:	6850      	ldr	r0, [r2, #4]
 801f9f6:	6812      	ldr	r2, [r2, #0]
 801f9f8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801f9fc:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801fa00:	fb00 1303 	mla	r3, r0, r3, r1
 801fa04:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fa08:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fa0a:	689b      	ldr	r3, [r3, #8]
 801fa0c:	3301      	adds	r3, #1
 801fa0e:	f023 0301 	bic.w	r3, r3, #1
 801fa12:	9306      	str	r3, [sp, #24]
 801fa14:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fa16:	681f      	ldr	r7, [r3, #0]
 801fa18:	9b07      	ldr	r3, [sp, #28]
 801fa1a:	2b00      	cmp	r3, #0
 801fa1c:	dc03      	bgt.n	801fa26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801fa1e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fa20:	2b00      	cmp	r3, #0
 801fa22:	f340 8267 	ble.w	801fef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fa26:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fa28:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fa2c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fa30:	1e48      	subs	r0, r1, #1
 801fa32:	f102 3cff 	add.w	ip, r2, #4294967295
 801fa36:	2d00      	cmp	r5, #0
 801fa38:	f340 80b7 	ble.w	801fbaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801fa3c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fa40:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fa44:	d406      	bmi.n	801fa54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fa46:	4586      	cmp	lr, r0
 801fa48:	da04      	bge.n	801fa54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fa4a:	2b00      	cmp	r3, #0
 801fa4c:	db02      	blt.n	801fa54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fa4e:	4563      	cmp	r3, ip
 801fa50:	f2c0 80ac 	blt.w	801fbac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801fa54:	f11e 0e01 	adds.w	lr, lr, #1
 801fa58:	f100 809f 	bmi.w	801fb9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801fa5c:	4571      	cmp	r1, lr
 801fa5e:	f2c0 809c 	blt.w	801fb9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801fa62:	3301      	adds	r3, #1
 801fa64:	f100 8099 	bmi.w	801fb9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801fa68:	429a      	cmp	r2, r3
 801fa6a:	f2c0 8096 	blt.w	801fb9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801fa6e:	46c8      	mov	r8, r9
 801fa70:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801fa74:	9509      	str	r5, [sp, #36]	@ 0x24
 801fa76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fa78:	2b00      	cmp	r3, #0
 801fa7a:	f340 80b5 	ble.w	801fbe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fa7e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801fa82:	1430      	asrs	r0, r6, #16
 801fa84:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fa88:	9308      	str	r3, [sp, #32]
 801fa8a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fa8c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fa90:	1423      	asrs	r3, r4, #16
 801fa92:	f100 813f 	bmi.w	801fd14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fa96:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fa9a:	455b      	cmp	r3, fp
 801fa9c:	f280 813a 	bge.w	801fd14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801faa0:	2800      	cmp	r0, #0
 801faa2:	f2c0 8137 	blt.w	801fd14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801faa6:	f10e 3bff 	add.w	fp, lr, #4294967295
 801faaa:	4558      	cmp	r0, fp
 801faac:	f280 8132 	bge.w	801fd14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fab0:	9a06      	ldr	r2, [sp, #24]
 801fab2:	fb00 3302 	mla	r3, r0, r2, r3
 801fab6:	0858      	lsrs	r0, r3, #1
 801fab8:	07da      	lsls	r2, r3, #31
 801faba:	9a08      	ldr	r2, [sp, #32]
 801fabc:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fac0:	bf54      	ite	pl
 801fac2:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fac6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801faca:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801face:	fa5f fc8c 	uxtb.w	ip, ip
 801fad2:	2a00      	cmp	r2, #0
 801fad4:	f000 80cc 	beq.w	801fc70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fad8:	1c58      	adds	r0, r3, #1
 801fada:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fade:	07c0      	lsls	r0, r0, #31
 801fae0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fae4:	bf54      	ite	pl
 801fae6:	f00e 0e0f 	andpl.w	lr, lr, #15
 801faea:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801faee:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801faf2:	fa5f fe8e 	uxtb.w	lr, lr
 801faf6:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 801fafa:	b1b9      	cbz	r1, 801fb2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801fafc:	4453      	add	r3, sl
 801fafe:	0858      	lsrs	r0, r3, #1
 801fb00:	07da      	lsls	r2, r3, #31
 801fb02:	5c38      	ldrb	r0, [r7, r0]
 801fb04:	bf54      	ite	pl
 801fb06:	f000 000f 	andpl.w	r0, r0, #15
 801fb0a:	1100      	asrmi	r0, r0, #4
 801fb0c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fb10:	b2c0      	uxtb	r0, r0
 801fb12:	900a      	str	r0, [sp, #40]	@ 0x28
 801fb14:	1c58      	adds	r0, r3, #1
 801fb16:	0843      	lsrs	r3, r0, #1
 801fb18:	07c2      	lsls	r2, r0, #31
 801fb1a:	5cfb      	ldrb	r3, [r7, r3]
 801fb1c:	bf54      	ite	pl
 801fb1e:	f003 030f 	andpl.w	r3, r3, #15
 801fb22:	111b      	asrmi	r3, r3, #4
 801fb24:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fb28:	b2db      	uxtb	r3, r3
 801fb2a:	930e      	str	r3, [sp, #56]	@ 0x38
 801fb2c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801fb30:	b289      	uxth	r1, r1
 801fb32:	fb02 f301 	mul.w	r3, r2, r1
 801fb36:	0112      	lsls	r2, r2, #4
 801fb38:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fb3c:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801fb40:	1ad2      	subs	r2, r2, r3
 801fb42:	b289      	uxth	r1, r1
 801fb44:	b292      	uxth	r2, r2
 801fb46:	1a40      	subs	r0, r0, r1
 801fb48:	fa1f fe80 	uxth.w	lr, r0
 801fb4c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801fb4e:	4342      	muls	r2, r0
 801fb50:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801fb54:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801fb56:	fb01 c102 	mla	r1, r1, r2, ip
 801fb5a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801fb5c:	fb03 1302 	mla	r3, r3, r2, r1
 801fb60:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fb64:	2bff      	cmp	r3, #255	@ 0xff
 801fb66:	f040 8094 	bne.w	801fc92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801fb6a:	4bbf      	ldr	r3, [pc, #764]	@ (801fe68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fb6c:	681a      	ldr	r2, [r3, #0]
 801fb6e:	4bbf      	ldr	r3, [pc, #764]	@ (801fe6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fb70:	0951      	lsrs	r1, r2, #5
 801fb72:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fb76:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fb7a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801fb7e:	430b      	orrs	r3, r1
 801fb80:	4313      	orrs	r3, r2
 801fb82:	f8a8 3000 	strh.w	r3, [r8]
 801fb86:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fb88:	f108 0802 	add.w	r8, r8, #2
 801fb8c:	441c      	add	r4, r3
 801fb8e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fb90:	441e      	add	r6, r3
 801fb92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fb94:	3b01      	subs	r3, #1
 801fb96:	9309      	str	r3, [sp, #36]	@ 0x24
 801fb98:	e76d      	b.n	801fa76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fb9a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fb9c:	3d01      	subs	r5, #1
 801fb9e:	f109 0902 	add.w	r9, r9, #2
 801fba2:	441c      	add	r4, r3
 801fba4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fba6:	441e      	add	r6, r3
 801fba8:	e745      	b.n	801fa36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fbaa:	d021      	beq.n	801fbf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801fbac:	1e6b      	subs	r3, r5, #1
 801fbae:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801fbb0:	fb00 4003 	mla	r0, r0, r3, r4
 801fbb4:	1400      	asrs	r0, r0, #16
 801fbb6:	f53f af5a 	bmi.w	801fa6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fbba:	3901      	subs	r1, #1
 801fbbc:	4288      	cmp	r0, r1
 801fbbe:	f6bf af56 	bge.w	801fa6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fbc2:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801fbc4:	fb01 6303 	mla	r3, r1, r3, r6
 801fbc8:	141b      	asrs	r3, r3, #16
 801fbca:	f53f af50 	bmi.w	801fa6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fbce:	3a01      	subs	r2, #1
 801fbd0:	4293      	cmp	r3, r2
 801fbd2:	f6bf af4c 	bge.w	801fa6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fbd6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801fbda:	46a8      	mov	r8, r5
 801fbdc:	46ce      	mov	lr, r9
 801fbde:	9308      	str	r3, [sp, #32]
 801fbe0:	f1b8 0f00 	cmp.w	r8, #0
 801fbe4:	f300 80b6 	bgt.w	801fd54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fbe8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fbec:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fbf0:	9b07      	ldr	r3, [sp, #28]
 801fbf2:	2b00      	cmp	r3, #0
 801fbf4:	f340 817e 	ble.w	801fef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fbf8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fbfc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fbfe:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fc02:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fc06:	eef0 6a62 	vmov.f32	s13, s5
 801fc0a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fc0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fc12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc16:	ee16 4a90 	vmov	r4, s13
 801fc1a:	eef0 6a43 	vmov.f32	s13, s6
 801fc1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc22:	ee16 6a90 	vmov	r6, s13
 801fc26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fc2a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fc2e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fc3e:	ee12 2a90 	vmov	r2, s5
 801fc42:	eef0 2a47 	vmov.f32	s5, s14
 801fc46:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc4a:	ee13 2a10 	vmov	r2, s6
 801fc4e:	931f      	str	r3, [sp, #124]	@ 0x7c
 801fc50:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fc52:	eeb0 3a67 	vmov.f32	s6, s15
 801fc56:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc5a:	9320      	str	r3, [sp, #128]	@ 0x80
 801fc5c:	9b07      	ldr	r3, [sp, #28]
 801fc5e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801fc60:	3b01      	subs	r3, #1
 801fc62:	9307      	str	r3, [sp, #28]
 801fc64:	bf08      	it	eq
 801fc66:	4615      	moveq	r5, r2
 801fc68:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fc6a:	bf18      	it	ne
 801fc6c:	461d      	movne	r5, r3
 801fc6e:	e6d3      	b.n	801fa18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801fc70:	2900      	cmp	r1, #0
 801fc72:	f43f af5b 	beq.w	801fb2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801fc76:	eb0a 0003 	add.w	r0, sl, r3
 801fc7a:	0843      	lsrs	r3, r0, #1
 801fc7c:	07c0      	lsls	r0, r0, #31
 801fc7e:	5cfb      	ldrb	r3, [r7, r3]
 801fc80:	bf54      	ite	pl
 801fc82:	f003 030f 	andpl.w	r3, r3, #15
 801fc86:	111b      	asrmi	r3, r3, #4
 801fc88:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fc8c:	b2db      	uxtb	r3, r3
 801fc8e:	930a      	str	r3, [sp, #40]	@ 0x28
 801fc90:	e74c      	b.n	801fb2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801fc92:	2b00      	cmp	r3, #0
 801fc94:	f43f af77 	beq.w	801fb86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fc98:	4a73      	ldr	r2, [pc, #460]	@ (801fe68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fc9a:	fa1f fe83 	uxth.w	lr, r3
 801fc9e:	f8b8 c000 	ldrh.w	ip, [r8]
 801fca2:	43db      	mvns	r3, r3
 801fca4:	6810      	ldr	r0, [r2, #0]
 801fca6:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fcaa:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fcae:	b2db      	uxtb	r3, r3
 801fcb0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801fcb4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fcb8:	fb12 f20e 	smulbb	r2, r2, lr
 801fcbc:	b2c0      	uxtb	r0, r0
 801fcbe:	fb1b fb0e 	smulbb	fp, fp, lr
 801fcc2:	fb01 2103 	mla	r1, r1, r3, r2
 801fcc6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fcca:	fb10 fe0e 	smulbb	lr, r0, lr
 801fcce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fcd2:	b289      	uxth	r1, r1
 801fcd4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801fcd8:	fa5f fc8c 	uxtb.w	ip, ip
 801fcdc:	fb02 b203 	mla	r2, r2, r3, fp
 801fce0:	1c48      	adds	r0, r1, #1
 801fce2:	fb0c e303 	mla	r3, ip, r3, lr
 801fce6:	b292      	uxth	r2, r2
 801fce8:	b29b      	uxth	r3, r3
 801fcea:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801fcee:	f102 0b01 	add.w	fp, r2, #1
 801fcf2:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 801fcf6:	1c59      	adds	r1, r3, #1
 801fcf8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fcfc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fd00:	0952      	lsrs	r2, r2, #5
 801fd02:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fd06:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fd0a:	4301      	orrs	r1, r0
 801fd0c:	4311      	orrs	r1, r2
 801fd0e:	f8a8 1000 	strh.w	r1, [r8]
 801fd12:	e738      	b.n	801fb86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fd14:	f113 0b01 	adds.w	fp, r3, #1
 801fd18:	f53f af35 	bmi.w	801fb86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fd1c:	45dc      	cmp	ip, fp
 801fd1e:	f6ff af32 	blt.w	801fb86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fd22:	f110 0b01 	adds.w	fp, r0, #1
 801fd26:	f53f af2e 	bmi.w	801fb86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fd2a:	45de      	cmp	lr, fp
 801fd2c:	f6ff af2b 	blt.w	801fb86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fd30:	9302      	str	r3, [sp, #8]
 801fd32:	fa0f f38e 	sxth.w	r3, lr
 801fd36:	9a08      	ldr	r2, [sp, #32]
 801fd38:	9301      	str	r3, [sp, #4]
 801fd3a:	fa0f f38c 	sxth.w	r3, ip
 801fd3e:	9105      	str	r1, [sp, #20]
 801fd40:	4641      	mov	r1, r8
 801fd42:	9300      	str	r3, [sp, #0]
 801fd44:	4653      	mov	r3, sl
 801fd46:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fd4a:	463a      	mov	r2, r7
 801fd4c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801fd4e:	f7ff fd73 	bl	801f838 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801fd52:	e718      	b.n	801fb86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fd54:	1422      	asrs	r2, r4, #16
 801fd56:	9906      	ldr	r1, [sp, #24]
 801fd58:	1433      	asrs	r3, r6, #16
 801fd5a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fd5e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fd62:	fb01 2303 	mla	r3, r1, r3, r2
 801fd66:	085a      	lsrs	r2, r3, #1
 801fd68:	07d9      	lsls	r1, r3, #31
 801fd6a:	5cba      	ldrb	r2, [r7, r2]
 801fd6c:	bf54      	ite	pl
 801fd6e:	f002 020f 	andpl.w	r2, r2, #15
 801fd72:	1112      	asrmi	r2, r2, #4
 801fd74:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fd78:	b2d2      	uxtb	r2, r2
 801fd7a:	2800      	cmp	r0, #0
 801fd7c:	d063      	beq.n	801fe46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 801fd7e:	f103 0a01 	add.w	sl, r3, #1
 801fd82:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801fd86:	f01a 0f01 	tst.w	sl, #1
 801fd8a:	5c79      	ldrb	r1, [r7, r1]
 801fd8c:	bf0c      	ite	eq
 801fd8e:	f001 010f 	andeq.w	r1, r1, #15
 801fd92:	1109      	asrne	r1, r1, #4
 801fd94:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fd98:	b2c9      	uxtb	r1, r1
 801fd9a:	910f      	str	r1, [sp, #60]	@ 0x3c
 801fd9c:	f1bc 0f00 	cmp.w	ip, #0
 801fda0:	d01a      	beq.n	801fdd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801fda2:	9908      	ldr	r1, [sp, #32]
 801fda4:	440b      	add	r3, r1
 801fda6:	0859      	lsrs	r1, r3, #1
 801fda8:	f013 0f01 	tst.w	r3, #1
 801fdac:	f103 0301 	add.w	r3, r3, #1
 801fdb0:	5c79      	ldrb	r1, [r7, r1]
 801fdb2:	bf0c      	ite	eq
 801fdb4:	f001 010f 	andeq.w	r1, r1, #15
 801fdb8:	1109      	asrne	r1, r1, #4
 801fdba:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fdbe:	b2c9      	uxtb	r1, r1
 801fdc0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801fdc2:	0859      	lsrs	r1, r3, #1
 801fdc4:	07db      	lsls	r3, r3, #31
 801fdc6:	5c79      	ldrb	r1, [r7, r1]
 801fdc8:	bf54      	ite	pl
 801fdca:	f001 010f 	andpl.w	r1, r1, #15
 801fdce:	1109      	asrmi	r1, r1, #4
 801fdd0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fdd4:	b2c9      	uxtb	r1, r1
 801fdd6:	9110      	str	r1, [sp, #64]	@ 0x40
 801fdd8:	b280      	uxth	r0, r0
 801fdda:	fa1f fc8c 	uxth.w	ip, ip
 801fdde:	fb00 f30c 	mul.w	r3, r0, ip
 801fde2:	0100      	lsls	r0, r0, #4
 801fde4:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801fde8:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 801fdec:	1ac0      	subs	r0, r0, r3
 801fdee:	fa1f fc8c 	uxth.w	ip, ip
 801fdf2:	b280      	uxth	r0, r0
 801fdf4:	eba1 010c 	sub.w	r1, r1, ip
 801fdf8:	fa1f fa81 	uxth.w	sl, r1
 801fdfc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801fdfe:	4348      	muls	r0, r1
 801fe00:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801fe02:	fb02 020a 	mla	r2, r2, sl, r0
 801fe06:	fb0c 2c01 	mla	ip, ip, r1, r2
 801fe0a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801fe0c:	fb03 c302 	mla	r3, r3, r2, ip
 801fe10:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fe14:	2bff      	cmp	r3, #255	@ 0xff
 801fe16:	d12b      	bne.n	801fe70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801fe18:	4b13      	ldr	r3, [pc, #76]	@ (801fe68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fe1a:	681a      	ldr	r2, [r3, #0]
 801fe1c:	4b13      	ldr	r3, [pc, #76]	@ (801fe6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fe1e:	0951      	lsrs	r1, r2, #5
 801fe20:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fe24:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fe28:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801fe2c:	430b      	orrs	r3, r1
 801fe2e:	4313      	orrs	r3, r2
 801fe30:	f8ae 3000 	strh.w	r3, [lr]
 801fe34:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fe36:	f10e 0e02 	add.w	lr, lr, #2
 801fe3a:	f108 38ff 	add.w	r8, r8, #4294967295
 801fe3e:	441c      	add	r4, r3
 801fe40:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fe42:	441e      	add	r6, r3
 801fe44:	e6cc      	b.n	801fbe0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801fe46:	f1bc 0f00 	cmp.w	ip, #0
 801fe4a:	d0c5      	beq.n	801fdd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801fe4c:	9908      	ldr	r1, [sp, #32]
 801fe4e:	440b      	add	r3, r1
 801fe50:	0859      	lsrs	r1, r3, #1
 801fe52:	07db      	lsls	r3, r3, #31
 801fe54:	5c79      	ldrb	r1, [r7, r1]
 801fe56:	bf54      	ite	pl
 801fe58:	f001 010f 	andpl.w	r1, r1, #15
 801fe5c:	1109      	asrmi	r1, r1, #4
 801fe5e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fe62:	b2c9      	uxtb	r1, r1
 801fe64:	910b      	str	r1, [sp, #44]	@ 0x2c
 801fe66:	e7b7      	b.n	801fdd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801fe68:	20016b84 	.word	0x20016b84
 801fe6c:	fffff800 	.word	0xfffff800
 801fe70:	2b00      	cmp	r3, #0
 801fe72:	d0df      	beq.n	801fe34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801fe74:	4a21      	ldr	r2, [pc, #132]	@ (801fefc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801fe76:	fa1f fa83 	uxth.w	sl, r3
 801fe7a:	f8be c000 	ldrh.w	ip, [lr]
 801fe7e:	43db      	mvns	r3, r3
 801fe80:	6810      	ldr	r0, [r2, #0]
 801fe82:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fe86:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fe8a:	b2db      	uxtb	r3, r3
 801fe8c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801fe90:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fe94:	fb12 f20a 	smulbb	r2, r2, sl
 801fe98:	b2c0      	uxtb	r0, r0
 801fe9a:	fb1b fb0a 	smulbb	fp, fp, sl
 801fe9e:	fb01 2103 	mla	r1, r1, r3, r2
 801fea2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fea6:	fb10 f00a 	smulbb	r0, r0, sl
 801feaa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801feae:	b289      	uxth	r1, r1
 801feb0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801feb4:	fa5f fc8c 	uxtb.w	ip, ip
 801feb8:	fb02 b203 	mla	r2, r2, r3, fp
 801febc:	fb0c 0003 	mla	r0, ip, r3, r0
 801fec0:	1c4b      	adds	r3, r1, #1
 801fec2:	b292      	uxth	r2, r2
 801fec4:	b280      	uxth	r0, r0
 801fec6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801feca:	f100 0b01 	add.w	fp, r0, #1
 801fece:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801fed2:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801fed6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801feda:	ea4b 0101 	orr.w	r1, fp, r1
 801fede:	f102 0b01 	add.w	fp, r2, #1
 801fee2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fee6:	0952      	lsrs	r2, r2, #5
 801fee8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801feec:	4311      	orrs	r1, r2
 801feee:	f8ae 1000 	strh.w	r1, [lr]
 801fef2:	e79f      	b.n	801fe34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801fef4:	b013      	add	sp, #76	@ 0x4c
 801fef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fefa:	bf00      	nop
 801fefc:	20016b84 	.word	0x20016b84

0801ff00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801ff00:	b570      	push	{r4, r5, r6, lr}
 801ff02:	1208      	asrs	r0, r1, #8
 801ff04:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801ff08:	b29e      	uxth	r6, r3
 801ff0a:	1213      	asrs	r3, r2, #8
 801ff0c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ff10:	10cc      	asrs	r4, r1, #3
 801ff12:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801ff16:	00c9      	lsls	r1, r1, #3
 801ff18:	fb10 f006 	smulbb	r0, r0, r6
 801ff1c:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801ff20:	fb13 f305 	smulbb	r3, r3, r5
 801ff24:	fb14 f406 	smulbb	r4, r4, r6
 801ff28:	4418      	add	r0, r3
 801ff2a:	10d3      	asrs	r3, r2, #3
 801ff2c:	00d2      	lsls	r2, r2, #3
 801ff2e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801ff32:	b280      	uxth	r0, r0
 801ff34:	b2d2      	uxtb	r2, r2
 801ff36:	fb13 f305 	smulbb	r3, r3, r5
 801ff3a:	fb12 f205 	smulbb	r2, r2, r5
 801ff3e:	441c      	add	r4, r3
 801ff40:	b2cb      	uxtb	r3, r1
 801ff42:	fb13 f306 	smulbb	r3, r3, r6
 801ff46:	b2a4      	uxth	r4, r4
 801ff48:	4413      	add	r3, r2
 801ff4a:	1c42      	adds	r2, r0, #1
 801ff4c:	b29b      	uxth	r3, r3
 801ff4e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ff52:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 801ff56:	1c58      	adds	r0, r3, #1
 801ff58:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ff5c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ff60:	4310      	orrs	r0, r2
 801ff62:	1c62      	adds	r2, r4, #1
 801ff64:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801ff68:	0964      	lsrs	r4, r4, #5
 801ff6a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801ff6e:	4320      	orrs	r0, r4
 801ff70:	bd70      	pop	{r4, r5, r6, pc}
	...

0801ff74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801ff74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff78:	b08f      	sub	sp, #60	@ 0x3c
 801ff7a:	461c      	mov	r4, r3
 801ff7c:	460d      	mov	r5, r1
 801ff7e:	4616      	mov	r6, r2
 801ff80:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801ff84:	9004      	str	r0, [sp, #16]
 801ff86:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ff88:	2f00      	cmp	r7, #0
 801ff8a:	f000 80f6 	beq.w	802017a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801ff8e:	6820      	ldr	r0, [r4, #0]
 801ff90:	aa0a      	add	r2, sp, #40	@ 0x28
 801ff92:	6861      	ldr	r1, [r4, #4]
 801ff94:	f04f 0802 	mov.w	r8, #2
 801ff98:	3604      	adds	r6, #4
 801ff9a:	c203      	stmia	r2!, {r0, r1}
 801ff9c:	6818      	ldr	r0, [r3, #0]
 801ff9e:	aa0c      	add	r2, sp, #48	@ 0x30
 801ffa0:	6859      	ldr	r1, [r3, #4]
 801ffa2:	c203      	stmia	r2!, {r0, r1}
 801ffa4:	a80a      	add	r0, sp, #40	@ 0x28
 801ffa6:	f7ef fde1 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ffaa:	4621      	mov	r1, r4
 801ffac:	a80c      	add	r0, sp, #48	@ 0x30
 801ffae:	f7ef fe05 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ffb2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801ffb6:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801ffba:	f002 0301 	and.w	r3, r2, #1
 801ffbe:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801ffc2:	9306      	str	r3, [sp, #24]
 801ffc4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801ffc8:	f003 0101 	and.w	r1, r3, #1
 801ffcc:	9105      	str	r1, [sp, #20]
 801ffce:	9805      	ldr	r0, [sp, #20]
 801ffd0:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801ffd4:	4403      	add	r3, r0
 801ffd6:	fb01 2303 	mla	r3, r1, r3, r2
 801ffda:	fb93 f3f8 	sdiv	r3, r3, r8
 801ffde:	441d      	add	r5, r3
 801ffe0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801ffe4:	441a      	add	r2, r3
 801ffe6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801ffea:	4419      	add	r1, r3
 801ffec:	4b64      	ldr	r3, [pc, #400]	@ (8020180 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801ffee:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801fff2:	6818      	ldr	r0, [r3, #0]
 801fff4:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801fff8:	6803      	ldr	r3, [r0, #0]
 801fffa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801fffc:	4798      	blx	r3
 801fffe:	4a61      	ldr	r2, [pc, #388]	@ (8020184 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8020000:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020004:	2fff      	cmp	r7, #255	@ 0xff
 8020006:	8813      	ldrh	r3, [r2, #0]
 8020008:	4611      	mov	r1, r2
 802000a:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 802000e:	fb03 fb0b 	mul.w	fp, r3, fp
 8020012:	fb03 a404 	mla	r4, r3, r4, sl
 8020016:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802001a:	d06b      	beq.n	80200f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 802001c:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 8020020:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8020024:	9303      	str	r3, [sp, #12]
 8020026:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802002a:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802002e:	9b07      	ldr	r3, [sp, #28]
 8020030:	42a3      	cmp	r3, r4
 8020032:	f240 809d 	bls.w	8020170 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8020036:	9b06      	ldr	r3, [sp, #24]
 8020038:	2b00      	cmp	r3, #0
 802003a:	d039      	beq.n	80200b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 802003c:	782b      	ldrb	r3, [r5, #0]
 802003e:	f105 0801 	add.w	r8, r5, #1
 8020042:	f109 3bff 	add.w	fp, r9, #4294967295
 8020046:	8822      	ldrh	r2, [r4, #0]
 8020048:	f003 030f 	and.w	r3, r3, #15
 802004c:	9804      	ldr	r0, [sp, #16]
 802004e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020052:	9b03      	ldr	r3, [sp, #12]
 8020054:	9300      	str	r3, [sp, #0]
 8020056:	463b      	mov	r3, r7
 8020058:	f7ff ff52 	bl	801ff00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802005c:	f824 0b02 	strh.w	r0, [r4], #2
 8020060:	f1bb 0f01 	cmp.w	fp, #1
 8020064:	46a2      	mov	sl, r4
 8020066:	f104 0404 	add.w	r4, r4, #4
 802006a:	dd24      	ble.n	80200b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 802006c:	f898 3000 	ldrb.w	r3, [r8]
 8020070:	f1ab 0b02 	sub.w	fp, fp, #2
 8020074:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020078:	091b      	lsrs	r3, r3, #4
 802007a:	9804      	ldr	r0, [sp, #16]
 802007c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020080:	9b03      	ldr	r3, [sp, #12]
 8020082:	9300      	str	r3, [sp, #0]
 8020084:	463b      	mov	r3, r7
 8020086:	f7ff ff3b 	bl	801ff00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802008a:	f824 0c04 	strh.w	r0, [r4, #-4]
 802008e:	f818 3b01 	ldrb.w	r3, [r8], #1
 8020092:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020096:	f003 030f 	and.w	r3, r3, #15
 802009a:	9804      	ldr	r0, [sp, #16]
 802009c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80200a0:	9b03      	ldr	r3, [sp, #12]
 80200a2:	9300      	str	r3, [sp, #0]
 80200a4:	463b      	mov	r3, r7
 80200a6:	f7ff ff2b 	bl	801ff00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80200aa:	f824 0c02 	strh.w	r0, [r4, #-2]
 80200ae:	e7d7      	b.n	8020060 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 80200b0:	46a8      	mov	r8, r5
 80200b2:	46cb      	mov	fp, r9
 80200b4:	e7d4      	b.n	8020060 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 80200b6:	d10e      	bne.n	80200d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 80200b8:	f898 3000 	ldrb.w	r3, [r8]
 80200bc:	f8ba 2000 	ldrh.w	r2, [sl]
 80200c0:	091b      	lsrs	r3, r3, #4
 80200c2:	9804      	ldr	r0, [sp, #16]
 80200c4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80200c8:	9b03      	ldr	r3, [sp, #12]
 80200ca:	9300      	str	r3, [sp, #0]
 80200cc:	463b      	mov	r3, r7
 80200ce:	f7ff ff17 	bl	801ff00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80200d2:	f82a 0b02 	strh.w	r0, [sl], #2
 80200d6:	9b08      	ldr	r3, [sp, #32]
 80200d8:	9a05      	ldr	r2, [sp, #20]
 80200da:	881c      	ldrh	r4, [r3, #0]
 80200dc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80200e0:	eba4 0409 	sub.w	r4, r4, r9
 80200e4:	4413      	add	r3, r2
 80200e6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80200e8:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80200ec:	fb93 f3f2 	sdiv	r3, r3, r2
 80200f0:	441d      	add	r5, r3
 80200f2:	e79c      	b.n	802002e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 80200f4:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80200f8:	45a3      	cmp	fp, r4
 80200fa:	d939      	bls.n	8020170 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80200fc:	9b06      	ldr	r3, [sp, #24]
 80200fe:	b1fb      	cbz	r3, 8020140 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8020100:	782b      	ldrb	r3, [r5, #0]
 8020102:	1c6a      	adds	r2, r5, #1
 8020104:	f109 30ff 	add.w	r0, r9, #4294967295
 8020108:	3402      	adds	r4, #2
 802010a:	f003 030f 	and.w	r3, r3, #15
 802010e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020112:	f824 3c02 	strh.w	r3, [r4, #-2]
 8020116:	2801      	cmp	r0, #1
 8020118:	4623      	mov	r3, r4
 802011a:	f104 0404 	add.w	r4, r4, #4
 802011e:	dd12      	ble.n	8020146 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8020120:	7813      	ldrb	r3, [r2, #0]
 8020122:	3802      	subs	r0, #2
 8020124:	091b      	lsrs	r3, r3, #4
 8020126:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802012a:	f824 3c04 	strh.w	r3, [r4, #-4]
 802012e:	f812 3b01 	ldrb.w	r3, [r2], #1
 8020132:	f003 030f 	and.w	r3, r3, #15
 8020136:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802013a:	f824 3c02 	strh.w	r3, [r4, #-2]
 802013e:	e7ea      	b.n	8020116 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020140:	462a      	mov	r2, r5
 8020142:	4648      	mov	r0, r9
 8020144:	e7e7      	b.n	8020116 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020146:	d106      	bne.n	8020156 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8020148:	7812      	ldrb	r2, [r2, #0]
 802014a:	3302      	adds	r3, #2
 802014c:	0912      	lsrs	r2, r2, #4
 802014e:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020152:	f823 2c02 	strh.w	r2, [r3, #-2]
 8020156:	880c      	ldrh	r4, [r1, #0]
 8020158:	9a05      	ldr	r2, [sp, #20]
 802015a:	eba4 0409 	sub.w	r4, r4, r9
 802015e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8020162:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020166:	4413      	add	r3, r2
 8020168:	fb93 f3f8 	sdiv	r3, r3, r8
 802016c:	441d      	add	r5, r3
 802016e:	e7c3      	b.n	80200f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 8020170:	4b03      	ldr	r3, [pc, #12]	@ (8020180 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8020172:	6818      	ldr	r0, [r3, #0]
 8020174:	6803      	ldr	r3, [r0, #0]
 8020176:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020178:	4798      	blx	r3
 802017a:	b00f      	add	sp, #60	@ 0x3c
 802017c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020180:	20016b74 	.word	0x20016b74
 8020184:	20016b6e 	.word	0x20016b6e

08020188 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8020188:	b5f0      	push	{r4, r5, r6, r7, lr}
 802018a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802018e:	0a0f      	lsrs	r7, r1, #8
 8020190:	2dff      	cmp	r5, #255	@ 0xff
 8020192:	d10c      	bne.n	80201ae <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8020194:	2bff      	cmp	r3, #255	@ 0xff
 8020196:	d10a      	bne.n	80201ae <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8020198:	0948      	lsrs	r0, r1, #5
 802019a:	4b25      	ldr	r3, [pc, #148]	@ (8020230 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 802019c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80201a0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80201a4:	403b      	ands	r3, r7
 80201a6:	4318      	orrs	r0, r3
 80201a8:	4308      	orrs	r0, r1
 80201aa:	b280      	uxth	r0, r0
 80201ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80201ae:	fb15 f503 	smulbb	r5, r5, r3
 80201b2:	1214      	asrs	r4, r2, #8
 80201b4:	10d6      	asrs	r6, r2, #3
 80201b6:	b2ab      	uxth	r3, r5
 80201b8:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80201bc:	00d0      	lsls	r0, r2, #3
 80201be:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80201c2:	1c5d      	adds	r5, r3, #1
 80201c4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80201c8:	b2c0      	uxtb	r0, r0
 80201ca:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80201ce:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80201d2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80201d6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80201da:	fa1f fc85 	uxth.w	ip, r5
 80201de:	43ed      	mvns	r5, r5
 80201e0:	fb12 f20c 	smulbb	r2, r2, ip
 80201e4:	b2eb      	uxtb	r3, r5
 80201e6:	b2fd      	uxtb	r5, r7
 80201e8:	fb04 2403 	mla	r4, r4, r3, r2
 80201ec:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80201f0:	fb15 f50c 	smulbb	r5, r5, ip
 80201f4:	b2c8      	uxtb	r0, r1
 80201f6:	b2a4      	uxth	r4, r4
 80201f8:	fb10 f00c 	smulbb	r0, r0, ip
 80201fc:	fb06 5503 	mla	r5, r6, r3, r5
 8020200:	fb02 0003 	mla	r0, r2, r3, r0
 8020204:	b2ad      	uxth	r5, r5
 8020206:	b283      	uxth	r3, r0
 8020208:	1c60      	adds	r0, r4, #1
 802020a:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802020e:	1c58      	adds	r0, r3, #1
 8020210:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020214:	1c6b      	adds	r3, r5, #1
 8020216:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802021a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802021e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020222:	096d      	lsrs	r5, r5, #5
 8020224:	4320      	orrs	r0, r4
 8020226:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802022a:	4328      	orrs	r0, r5
 802022c:	e7be      	b.n	80201ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 802022e:	bf00      	nop
 8020230:	00fff800 	.word	0x00fff800

08020234 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8020234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020238:	461c      	mov	r4, r3
 802023a:	b08d      	sub	sp, #52	@ 0x34
 802023c:	460d      	mov	r5, r1
 802023e:	4616      	mov	r6, r2
 8020240:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020242:	4680      	mov	r8, r0
 8020244:	6861      	ldr	r1, [r4, #4]
 8020246:	aa08      	add	r2, sp, #32
 8020248:	6820      	ldr	r0, [r4, #0]
 802024a:	f04f 0a02 	mov.w	sl, #2
 802024e:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8020252:	3604      	adds	r6, #4
 8020254:	c203      	stmia	r2!, {r0, r1}
 8020256:	6818      	ldr	r0, [r3, #0]
 8020258:	aa0a      	add	r2, sp, #40	@ 0x28
 802025a:	6859      	ldr	r1, [r3, #4]
 802025c:	c203      	stmia	r2!, {r0, r1}
 802025e:	a808      	add	r0, sp, #32
 8020260:	f7ef fc84 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020264:	4621      	mov	r1, r4
 8020266:	a80a      	add	r0, sp, #40	@ 0x28
 8020268:	f7ef fca8 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802026c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8020270:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8020274:	f002 0301 	and.w	r3, r2, #1
 8020278:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 802027c:	9303      	str	r3, [sp, #12]
 802027e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020282:	f003 0101 	and.w	r1, r3, #1
 8020286:	9102      	str	r1, [sp, #8]
 8020288:	9802      	ldr	r0, [sp, #8]
 802028a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 802028e:	4403      	add	r3, r0
 8020290:	fb01 2303 	mla	r3, r1, r3, r2
 8020294:	fb93 f3fa 	sdiv	r3, r3, sl
 8020298:	441d      	add	r5, r3
 802029a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 802029e:	441a      	add	r2, r3
 80202a0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80202a4:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80202a8:	4419      	add	r1, r3
 80202aa:	4a3e      	ldr	r2, [pc, #248]	@ (80203a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80202ac:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 80202b0:	6810      	ldr	r0, [r2, #0]
 80202b2:	9205      	str	r2, [sp, #20]
 80202b4:	6803      	ldr	r3, [r0, #0]
 80202b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80202b8:	4798      	blx	r3
 80202ba:	4b3b      	ldr	r3, [pc, #236]	@ (80203a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80202bc:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 80202c0:	8819      	ldrh	r1, [r3, #0]
 80202c2:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 80202c6:	434f      	muls	r7, r1
 80202c8:	fb01 c404 	mla	r4, r1, r4, ip
 80202cc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80202d0:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80202d4:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80202d8:	9204      	str	r2, [sp, #16]
 80202da:	9b04      	ldr	r3, [sp, #16]
 80202dc:	429c      	cmp	r4, r3
 80202de:	d258      	bcs.n	8020392 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80202e0:	9b03      	ldr	r3, [sp, #12]
 80202e2:	2b00      	cmp	r3, #0
 80202e4:	d034      	beq.n	8020350 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80202e6:	782b      	ldrb	r3, [r5, #0]
 80202e8:	1c6f      	adds	r7, r5, #1
 80202ea:	f003 030f 	and.w	r3, r3, #15
 80202ee:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80202f2:	0e0b      	lsrs	r3, r1, #24
 80202f4:	d006      	beq.n	8020304 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80202f6:	8822      	ldrh	r2, [r4, #0]
 80202f8:	4640      	mov	r0, r8
 80202fa:	9300      	str	r3, [sp, #0]
 80202fc:	464b      	mov	r3, r9
 80202fe:	f7ff ff43 	bl	8020188 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020302:	8020      	strh	r0, [r4, #0]
 8020304:	3402      	adds	r4, #2
 8020306:	f10b 3aff 	add.w	sl, fp, #4294967295
 802030a:	f1ba 0f01 	cmp.w	sl, #1
 802030e:	dd22      	ble.n	8020356 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8020310:	783b      	ldrb	r3, [r7, #0]
 8020312:	091b      	lsrs	r3, r3, #4
 8020314:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020318:	0e0b      	lsrs	r3, r1, #24
 802031a:	d006      	beq.n	802032a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 802031c:	8822      	ldrh	r2, [r4, #0]
 802031e:	4640      	mov	r0, r8
 8020320:	9300      	str	r3, [sp, #0]
 8020322:	464b      	mov	r3, r9
 8020324:	f7ff ff30 	bl	8020188 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020328:	8020      	strh	r0, [r4, #0]
 802032a:	f817 3b01 	ldrb.w	r3, [r7], #1
 802032e:	f003 030f 	and.w	r3, r3, #15
 8020332:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020336:	0e0b      	lsrs	r3, r1, #24
 8020338:	d006      	beq.n	8020348 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802033a:	8862      	ldrh	r2, [r4, #2]
 802033c:	4640      	mov	r0, r8
 802033e:	9300      	str	r3, [sp, #0]
 8020340:	464b      	mov	r3, r9
 8020342:	f7ff ff21 	bl	8020188 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020346:	8060      	strh	r0, [r4, #2]
 8020348:	3404      	adds	r4, #4
 802034a:	f1aa 0a02 	sub.w	sl, sl, #2
 802034e:	e7dc      	b.n	802030a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020350:	462f      	mov	r7, r5
 8020352:	46da      	mov	sl, fp
 8020354:	e7d9      	b.n	802030a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020356:	d10d      	bne.n	8020374 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8020358:	783b      	ldrb	r3, [r7, #0]
 802035a:	091b      	lsrs	r3, r3, #4
 802035c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020360:	0e0b      	lsrs	r3, r1, #24
 8020362:	d006      	beq.n	8020372 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8020364:	8822      	ldrh	r2, [r4, #0]
 8020366:	4640      	mov	r0, r8
 8020368:	9300      	str	r3, [sp, #0]
 802036a:	464b      	mov	r3, r9
 802036c:	f7ff ff0c 	bl	8020188 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020370:	8020      	strh	r0, [r4, #0]
 8020372:	3402      	adds	r4, #2
 8020374:	9b06      	ldr	r3, [sp, #24]
 8020376:	9a02      	ldr	r2, [sp, #8]
 8020378:	881b      	ldrh	r3, [r3, #0]
 802037a:	eba3 030b 	sub.w	r3, r3, fp
 802037e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020382:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020386:	4413      	add	r3, r2
 8020388:	9a07      	ldr	r2, [sp, #28]
 802038a:	fb93 f3f2 	sdiv	r3, r3, r2
 802038e:	441d      	add	r5, r3
 8020390:	e7a3      	b.n	80202da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8020392:	9b05      	ldr	r3, [sp, #20]
 8020394:	6818      	ldr	r0, [r3, #0]
 8020396:	6803      	ldr	r3, [r0, #0]
 8020398:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802039a:	4798      	blx	r3
 802039c:	b00d      	add	sp, #52	@ 0x34
 802039e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80203a2:	bf00      	nop
 80203a4:	20016b74 	.word	0x20016b74
 80203a8:	20016b6e 	.word	0x20016b6e

080203ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80203ac:	b570      	push	{r4, r5, r6, lr}
 80203ae:	1214      	asrs	r4, r2, #8
 80203b0:	788d      	ldrb	r5, [r1, #2]
 80203b2:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80203b6:	10d0      	asrs	r0, r2, #3
 80203b8:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80203bc:	00d2      	lsls	r2, r2, #3
 80203be:	fb15 f503 	smulbb	r5, r5, r3
 80203c2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80203c6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80203ca:	b2d2      	uxtb	r2, r2
 80203cc:	fb04 5506 	mla	r5, r4, r6, r5
 80203d0:	784c      	ldrb	r4, [r1, #1]
 80203d2:	7809      	ldrb	r1, [r1, #0]
 80203d4:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80203d8:	fb14 f403 	smulbb	r4, r4, r3
 80203dc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80203e0:	fb11 f303 	smulbb	r3, r1, r3
 80203e4:	b2ad      	uxth	r5, r5
 80203e6:	fb00 4406 	mla	r4, r0, r6, r4
 80203ea:	fb02 3306 	mla	r3, r2, r6, r3
 80203ee:	1c68      	adds	r0, r5, #1
 80203f0:	b2a4      	uxth	r4, r4
 80203f2:	b29b      	uxth	r3, r3
 80203f4:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80203f8:	1c62      	adds	r2, r4, #1
 80203fa:	1c58      	adds	r0, r3, #1
 80203fc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020400:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020404:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020408:	0964      	lsrs	r4, r4, #5
 802040a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802040e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020412:	4328      	orrs	r0, r5
 8020414:	4320      	orrs	r0, r4
 8020416:	bd70      	pop	{r4, r5, r6, pc}

08020418 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8020418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802041c:	b08f      	sub	sp, #60	@ 0x3c
 802041e:	461c      	mov	r4, r3
 8020420:	4682      	mov	sl, r0
 8020422:	460e      	mov	r6, r1
 8020424:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8020428:	4615      	mov	r5, r2
 802042a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802042c:	2f00      	cmp	r7, #0
 802042e:	f000 8141 	beq.w	80206b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 8020432:	6820      	ldr	r0, [r4, #0]
 8020434:	aa0a      	add	r2, sp, #40	@ 0x28
 8020436:	6861      	ldr	r1, [r4, #4]
 8020438:	f04f 0802 	mov.w	r8, #2
 802043c:	3504      	adds	r5, #4
 802043e:	c203      	stmia	r2!, {r0, r1}
 8020440:	6818      	ldr	r0, [r3, #0]
 8020442:	aa0c      	add	r2, sp, #48	@ 0x30
 8020444:	6859      	ldr	r1, [r3, #4]
 8020446:	c203      	stmia	r2!, {r0, r1}
 8020448:	a80a      	add	r0, sp, #40	@ 0x28
 802044a:	f7ef fb8f 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802044e:	4621      	mov	r1, r4
 8020450:	a80c      	add	r0, sp, #48	@ 0x30
 8020452:	f7ef fbb3 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020456:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802045a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802045e:	f002 0301 	and.w	r3, r2, #1
 8020462:	9306      	str	r3, [sp, #24]
 8020464:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020468:	f003 0101 	and.w	r1, r3, #1
 802046c:	9105      	str	r1, [sp, #20]
 802046e:	9805      	ldr	r0, [sp, #20]
 8020470:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020474:	4403      	add	r3, r0
 8020476:	fb01 2303 	mla	r3, r1, r3, r2
 802047a:	fb93 f3f8 	sdiv	r3, r3, r8
 802047e:	441e      	add	r6, r3
 8020480:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8020484:	441a      	add	r2, r3
 8020486:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802048a:	4419      	add	r1, r3
 802048c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8020490:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020494:	9303      	str	r3, [sp, #12]
 8020496:	4b89      	ldr	r3, [pc, #548]	@ (80206bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020498:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802049c:	6818      	ldr	r0, [r3, #0]
 802049e:	6803      	ldr	r3, [r0, #0]
 80204a0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80204a2:	4798      	blx	r3
 80204a4:	4a86      	ldr	r2, [pc, #536]	@ (80206c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80204a6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80204aa:	2fff      	cmp	r7, #255	@ 0xff
 80204ac:	8813      	ldrh	r3, [r2, #0]
 80204ae:	4694      	mov	ip, r2
 80204b0:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 80204b4:	fb03 9404 	mla	r4, r3, r4, r9
 80204b8:	fb03 f30b 	mul.w	r3, r3, fp
 80204bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80204c0:	d071      	beq.n	80205a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 80204c2:	43f9      	mvns	r1, r7
 80204c4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80204c8:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80204cc:	b2c9      	uxtb	r1, r1
 80204ce:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80204d2:	9104      	str	r1, [sp, #16]
 80204d4:	9b07      	ldr	r3, [sp, #28]
 80204d6:	42a3      	cmp	r3, r4
 80204d8:	f240 80e7 	bls.w	80206aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 80204dc:	9b06      	ldr	r3, [sp, #24]
 80204de:	2b00      	cmp	r3, #0
 80204e0:	d03d      	beq.n	802055e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 80204e2:	7831      	ldrb	r1, [r6, #0]
 80204e4:	4650      	mov	r0, sl
 80204e6:	9b04      	ldr	r3, [sp, #16]
 80204e8:	f106 0801 	add.w	r8, r6, #1
 80204ec:	f001 010f 	and.w	r1, r1, #15
 80204f0:	8822      	ldrh	r2, [r4, #0]
 80204f2:	9300      	str	r3, [sp, #0]
 80204f4:	463b      	mov	r3, r7
 80204f6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80204fa:	4429      	add	r1, r5
 80204fc:	f7ff ff56 	bl	80203ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020500:	9b03      	ldr	r3, [sp, #12]
 8020502:	f824 0b02 	strh.w	r0, [r4], #2
 8020506:	f103 3bff 	add.w	fp, r3, #4294967295
 802050a:	f1bb 0f01 	cmp.w	fp, #1
 802050e:	46a1      	mov	r9, r4
 8020510:	f104 0404 	add.w	r4, r4, #4
 8020514:	dd27      	ble.n	8020566 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 8020516:	f898 1000 	ldrb.w	r1, [r8]
 802051a:	4650      	mov	r0, sl
 802051c:	9b04      	ldr	r3, [sp, #16]
 802051e:	f1ab 0b02 	sub.w	fp, fp, #2
 8020522:	0909      	lsrs	r1, r1, #4
 8020524:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020528:	9300      	str	r3, [sp, #0]
 802052a:	463b      	mov	r3, r7
 802052c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020530:	4429      	add	r1, r5
 8020532:	f7ff ff3b 	bl	80203ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020536:	f824 0c04 	strh.w	r0, [r4, #-4]
 802053a:	f818 1b01 	ldrb.w	r1, [r8], #1
 802053e:	4650      	mov	r0, sl
 8020540:	9b04      	ldr	r3, [sp, #16]
 8020542:	f001 010f 	and.w	r1, r1, #15
 8020546:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802054a:	9300      	str	r3, [sp, #0]
 802054c:	463b      	mov	r3, r7
 802054e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020552:	4429      	add	r1, r5
 8020554:	f7ff ff2a 	bl	80203ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020558:	f824 0c02 	strh.w	r0, [r4, #-2]
 802055c:	e7d5      	b.n	802050a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 802055e:	46b0      	mov	r8, r6
 8020560:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8020564:	e7d1      	b.n	802050a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 8020566:	d10f      	bne.n	8020588 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 8020568:	f898 1000 	ldrb.w	r1, [r8]
 802056c:	4650      	mov	r0, sl
 802056e:	9b04      	ldr	r3, [sp, #16]
 8020570:	0909      	lsrs	r1, r1, #4
 8020572:	f8b9 2000 	ldrh.w	r2, [r9]
 8020576:	9300      	str	r3, [sp, #0]
 8020578:	463b      	mov	r3, r7
 802057a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802057e:	4429      	add	r1, r5
 8020580:	f7ff ff14 	bl	80203ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020584:	f829 0b02 	strh.w	r0, [r9], #2
 8020588:	9b08      	ldr	r3, [sp, #32]
 802058a:	9a05      	ldr	r2, [sp, #20]
 802058c:	881c      	ldrh	r4, [r3, #0]
 802058e:	9b03      	ldr	r3, [sp, #12]
 8020590:	1ae4      	subs	r4, r4, r3
 8020592:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020596:	4413      	add	r3, r2
 8020598:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802059a:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802059e:	fb93 f3f2 	sdiv	r3, r3, r2
 80205a2:	441e      	add	r6, r3
 80205a4:	e796      	b.n	80204d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 80205a6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80205aa:	4f46      	ldr	r7, [pc, #280]	@ (80206c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80205ac:	42a3      	cmp	r3, r4
 80205ae:	d97c      	bls.n	80206aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 80205b0:	9a06      	ldr	r2, [sp, #24]
 80205b2:	2a00      	cmp	r2, #0
 80205b4:	d054      	beq.n	8020660 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 80205b6:	7830      	ldrb	r0, [r6, #0]
 80205b8:	1c71      	adds	r1, r6, #1
 80205ba:	f000 000f 	and.w	r0, r0, #15
 80205be:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80205c2:	eb05 0e00 	add.w	lr, r5, r0
 80205c6:	5c28      	ldrb	r0, [r5, r0]
 80205c8:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80205cc:	f89e e001 	ldrb.w	lr, [lr, #1]
 80205d0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80205d4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80205d8:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80205dc:	ea42 020e 	orr.w	r2, r2, lr
 80205e0:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80205e4:	f824 2b02 	strh.w	r2, [r4], #2
 80205e8:	9a03      	ldr	r2, [sp, #12]
 80205ea:	f102 3eff 	add.w	lr, r2, #4294967295
 80205ee:	f1be 0f01 	cmp.w	lr, #1
 80205f2:	4620      	mov	r0, r4
 80205f4:	f104 0404 	add.w	r4, r4, #4
 80205f8:	dd36      	ble.n	8020668 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 80205fa:	7808      	ldrb	r0, [r1, #0]
 80205fc:	f1ae 0e02 	sub.w	lr, lr, #2
 8020600:	0900      	lsrs	r0, r0, #4
 8020602:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020606:	eb05 0a00 	add.w	sl, r5, r0
 802060a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802060e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020612:	00d2      	lsls	r2, r2, #3
 8020614:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020618:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802061c:	ea49 0202 	orr.w	r2, r9, r2
 8020620:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020624:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020628:	f824 2c04 	strh.w	r2, [r4, #-4]
 802062c:	f811 0b01 	ldrb.w	r0, [r1], #1
 8020630:	f000 000f 	and.w	r0, r0, #15
 8020634:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020638:	eb05 0a00 	add.w	sl, r5, r0
 802063c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020640:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020644:	00d2      	lsls	r2, r2, #3
 8020646:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802064a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802064e:	ea49 0202 	orr.w	r2, r9, r2
 8020652:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020656:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802065a:	f824 2c02 	strh.w	r2, [r4, #-2]
 802065e:	e7c6      	b.n	80205ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8020660:	4631      	mov	r1, r6
 8020662:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8020666:	e7c2      	b.n	80205ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8020668:	d111      	bne.n	802068e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 802066a:	7809      	ldrb	r1, [r1, #0]
 802066c:	0909      	lsrs	r1, r1, #4
 802066e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020672:	186c      	adds	r4, r5, r1
 8020674:	5c69      	ldrb	r1, [r5, r1]
 8020676:	78a2      	ldrb	r2, [r4, #2]
 8020678:	7864      	ldrb	r4, [r4, #1]
 802067a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802067e:	00e4      	lsls	r4, r4, #3
 8020680:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020684:	4322      	orrs	r2, r4
 8020686:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 802068a:	f820 2b02 	strh.w	r2, [r0], #2
 802068e:	9a03      	ldr	r2, [sp, #12]
 8020690:	f8bc 4000 	ldrh.w	r4, [ip]
 8020694:	9905      	ldr	r1, [sp, #20]
 8020696:	1aa4      	subs	r4, r4, r2
 8020698:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 802069c:	440a      	add	r2, r1
 802069e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80206a2:	fb92 f2f8 	sdiv	r2, r2, r8
 80206a6:	4416      	add	r6, r2
 80206a8:	e780      	b.n	80205ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 80206aa:	4b04      	ldr	r3, [pc, #16]	@ (80206bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80206ac:	6818      	ldr	r0, [r3, #0]
 80206ae:	6803      	ldr	r3, [r0, #0]
 80206b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80206b2:	4798      	blx	r3
 80206b4:	b00f      	add	sp, #60	@ 0x3c
 80206b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80206ba:	bf00      	nop
 80206bc:	20016b74 	.word	0x20016b74
 80206c0:	20016b6e 	.word	0x20016b6e
 80206c4:	fffff800 	.word	0xfffff800

080206c8 <CRC_Lock>:
 80206c8:	4a20      	ldr	r2, [pc, #128]	@ (802074c <CRC_Lock+0x84>)
 80206ca:	b530      	push	{r4, r5, lr}
 80206cc:	6813      	ldr	r3, [r2, #0]
 80206ce:	f64f 74f0 	movw	r4, #65520	@ 0xfff0
 80206d2:	f24c 2540 	movw	r5, #49728	@ 0xc240
 80206d6:	f023 0301 	bic.w	r3, r3, #1
 80206da:	6013      	str	r3, [r2, #0]
 80206dc:	4b1c      	ldr	r3, [pc, #112]	@ (8020750 <CRC_Lock+0x88>)
 80206de:	681a      	ldr	r2, [r3, #0]
 80206e0:	4022      	ands	r2, r4
 80206e2:	42aa      	cmp	r2, r5
 80206e4:	d005      	beq.n	80206f2 <CRC_Lock+0x2a>
 80206e6:	681b      	ldr	r3, [r3, #0]
 80206e8:	f24c 2270 	movw	r2, #49776	@ 0xc270
 80206ec:	4023      	ands	r3, r4
 80206ee:	4293      	cmp	r3, r2
 80206f0:	d124      	bne.n	802073c <CRC_Lock+0x74>
 80206f2:	4b18      	ldr	r3, [pc, #96]	@ (8020754 <CRC_Lock+0x8c>)
 80206f4:	681b      	ldr	r3, [r3, #0]
 80206f6:	bb0b      	cbnz	r3, 802073c <CRC_Lock+0x74>
 80206f8:	4b17      	ldr	r3, [pc, #92]	@ (8020758 <CRC_Lock+0x90>)
 80206fa:	681a      	ldr	r2, [r3, #0]
 80206fc:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020700:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8020704:	d00d      	beq.n	8020722 <CRC_Lock+0x5a>
 8020706:	681a      	ldr	r2, [r3, #0]
 8020708:	f240 4483 	movw	r4, #1155	@ 0x483
 802070c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020710:	42a2      	cmp	r2, r4
 8020712:	d006      	beq.n	8020722 <CRC_Lock+0x5a>
 8020714:	681b      	ldr	r3, [r3, #0]
 8020716:	f240 4285 	movw	r2, #1157	@ 0x485
 802071a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802071e:	4293      	cmp	r3, r2
 8020720:	d10c      	bne.n	802073c <CRC_Lock+0x74>
 8020722:	4b0e      	ldr	r3, [pc, #56]	@ (802075c <CRC_Lock+0x94>)
 8020724:	2201      	movs	r2, #1
 8020726:	601a      	str	r2, [r3, #0]
 8020728:	681a      	ldr	r2, [r3, #0]
 802072a:	2a00      	cmp	r2, #0
 802072c:	d1fc      	bne.n	8020728 <CRC_Lock+0x60>
 802072e:	4b0c      	ldr	r3, [pc, #48]	@ (8020760 <CRC_Lock+0x98>)
 8020730:	6018      	str	r0, [r3, #0]
 8020732:	6818      	ldr	r0, [r3, #0]
 8020734:	1a43      	subs	r3, r0, r1
 8020736:	4258      	negs	r0, r3
 8020738:	4158      	adcs	r0, r3
 802073a:	bd30      	pop	{r4, r5, pc}
 802073c:	4b09      	ldr	r3, [pc, #36]	@ (8020764 <CRC_Lock+0x9c>)
 802073e:	2201      	movs	r2, #1
 8020740:	601a      	str	r2, [r3, #0]
 8020742:	681a      	ldr	r2, [r3, #0]
 8020744:	2a00      	cmp	r2, #0
 8020746:	d1fc      	bne.n	8020742 <CRC_Lock+0x7a>
 8020748:	4b07      	ldr	r3, [pc, #28]	@ (8020768 <CRC_Lock+0xa0>)
 802074a:	e7f1      	b.n	8020730 <CRC_Lock+0x68>
 802074c:	e0002000 	.word	0xe0002000
 8020750:	e000ed00 	.word	0xe000ed00
 8020754:	e0042000 	.word	0xe0042000
 8020758:	5c001000 	.word	0x5c001000
 802075c:	58024c08 	.word	0x58024c08
 8020760:	58024c00 	.word	0x58024c00
 8020764:	40023008 	.word	0x40023008
 8020768:	40023000 	.word	0x40023000

0802076c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 802076c:	6101      	str	r1, [r0, #16]
 802076e:	4770      	bx	lr

08020770 <_ZN8touchgfx8Gestures4tickEv>:
 8020770:	7b83      	ldrb	r3, [r0, #14]
 8020772:	b14b      	cbz	r3, 8020788 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8020774:	8903      	ldrh	r3, [r0, #8]
 8020776:	3301      	adds	r3, #1
 8020778:	b29b      	uxth	r3, r3
 802077a:	2b07      	cmp	r3, #7
 802077c:	8103      	strh	r3, [r0, #8]
 802077e:	bf81      	itttt	hi
 8020780:	2300      	movhi	r3, #0
 8020782:	8143      	strhhi	r3, [r0, #10]
 8020784:	8183      	strhhi	r3, [r0, #12]
 8020786:	7383      	strbhi	r3, [r0, #14]
 8020788:	4770      	bx	lr
	...

0802078c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 802078c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020790:	4698      	mov	r8, r3
 8020792:	8883      	ldrh	r3, [r0, #4]
 8020794:	4604      	mov	r4, r0
 8020796:	4617      	mov	r7, r2
 8020798:	f8ad 3006 	strh.w	r3, [sp, #6]
 802079c:	eba8 0303 	sub.w	r3, r8, r3
 80207a0:	4a19      	ldr	r2, [pc, #100]	@ (8020808 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80207a2:	460e      	mov	r6, r1
 80207a4:	b21b      	sxth	r3, r3
 80207a6:	88c1      	ldrh	r1, [r0, #6]
 80207a8:	9200      	str	r2, [sp, #0]
 80207aa:	2000      	movs	r0, #0
 80207ac:	2b00      	cmp	r3, #0
 80207ae:	8aa2      	ldrh	r2, [r4, #20]
 80207b0:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 80207b4:	bfb8      	it	lt
 80207b6:	425b      	neglt	r3, r3
 80207b8:	f88d 0004 	strb.w	r0, [sp, #4]
 80207bc:	f8ad 1008 	strh.w	r1, [sp, #8]
 80207c0:	b21b      	sxth	r3, r3
 80207c2:	f8ad 800a 	strh.w	r8, [sp, #10]
 80207c6:	f8ad 500c 	strh.w	r5, [sp, #12]
 80207ca:	4293      	cmp	r3, r2
 80207cc:	dc07      	bgt.n	80207de <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 80207ce:	1a69      	subs	r1, r5, r1
 80207d0:	b209      	sxth	r1, r1
 80207d2:	2900      	cmp	r1, #0
 80207d4:	bfb8      	it	lt
 80207d6:	4249      	neglt	r1, r1
 80207d8:	b209      	sxth	r1, r1
 80207da:	428a      	cmp	r2, r1
 80207dc:	da10      	bge.n	8020800 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 80207de:	6920      	ldr	r0, [r4, #16]
 80207e0:	4669      	mov	r1, sp
 80207e2:	eba8 0606 	sub.w	r6, r8, r6
 80207e6:	1bef      	subs	r7, r5, r7
 80207e8:	6803      	ldr	r3, [r0, #0]
 80207ea:	685b      	ldr	r3, [r3, #4]
 80207ec:	4798      	blx	r3
 80207ee:	2300      	movs	r3, #0
 80207f0:	2001      	movs	r0, #1
 80207f2:	8166      	strh	r6, [r4, #10]
 80207f4:	8123      	strh	r3, [r4, #8]
 80207f6:	81a7      	strh	r7, [r4, #12]
 80207f8:	f8a4 8004 	strh.w	r8, [r4, #4]
 80207fc:	80e5      	strh	r5, [r4, #6]
 80207fe:	73a0      	strb	r0, [r4, #14]
 8020800:	b004      	add	sp, #16
 8020802:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020806:	bf00      	nop
 8020808:	08024a4c 	.word	0x08024a4c

0802080c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 802080c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802080e:	461e      	mov	r6, r3
 8020810:	1e4b      	subs	r3, r1, #1
 8020812:	b085      	sub	sp, #20
 8020814:	4604      	mov	r4, r0
 8020816:	2b01      	cmp	r3, #1
 8020818:	460d      	mov	r5, r1
 802081a:	4617      	mov	r7, r2
 802081c:	d84b      	bhi.n	80208b6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802081e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8020822:	1cd3      	adds	r3, r2, #3
 8020824:	b29b      	uxth	r3, r3
 8020826:	2b06      	cmp	r3, #6
 8020828:	d916      	bls.n	8020858 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802082a:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80208cc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802082e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020832:	f8cd c004 	str.w	ip, [sp, #4]
 8020836:	f04f 0c00 	mov.w	ip, #0
 802083a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802083e:	6900      	ldr	r0, [r0, #16]
 8020840:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020844:	a901      	add	r1, sp, #4
 8020846:	f88d c008 	strb.w	ip, [sp, #8]
 802084a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802084e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020852:	6803      	ldr	r3, [r0, #0]
 8020854:	689b      	ldr	r3, [r3, #8]
 8020856:	4798      	blx	r3
 8020858:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802085c:	1cd3      	adds	r3, r2, #3
 802085e:	b29b      	uxth	r3, r3
 8020860:	2b06      	cmp	r3, #6
 8020862:	d916      	bls.n	8020892 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020864:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80208cc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020868:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802086c:	f8cd c004 	str.w	ip, [sp, #4]
 8020870:	f04f 0c01 	mov.w	ip, #1
 8020874:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020878:	6920      	ldr	r0, [r4, #16]
 802087a:	f8ad 100c 	strh.w	r1, [sp, #12]
 802087e:	a901      	add	r1, sp, #4
 8020880:	f88d c008 	strb.w	ip, [sp, #8]
 8020884:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020888:	f8ad 300e 	strh.w	r3, [sp, #14]
 802088c:	6803      	ldr	r3, [r0, #0]
 802088e:	689b      	ldr	r3, [r3, #8]
 8020890:	4798      	blx	r3
 8020892:	4b0d      	ldr	r3, [pc, #52]	@ (80208c8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8020894:	a901      	add	r1, sp, #4
 8020896:	6920      	ldr	r0, [r4, #16]
 8020898:	9301      	str	r3, [sp, #4]
 802089a:	2300      	movs	r3, #0
 802089c:	f88d 5008 	strb.w	r5, [sp, #8]
 80208a0:	f8ad 700a 	strh.w	r7, [sp, #10]
 80208a4:	f8ad 600c 	strh.w	r6, [sp, #12]
 80208a8:	f8ad 300e 	strh.w	r3, [sp, #14]
 80208ac:	6803      	ldr	r3, [r0, #0]
 80208ae:	681b      	ldr	r3, [r3, #0]
 80208b0:	4798      	blx	r3
 80208b2:	b005      	add	sp, #20
 80208b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80208b6:	2900      	cmp	r1, #0
 80208b8:	d1eb      	bne.n	8020892 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80208ba:	80a2      	strh	r2, [r4, #4]
 80208bc:	80c6      	strh	r6, [r0, #6]
 80208be:	60a1      	str	r1, [r4, #8]
 80208c0:	81a1      	strh	r1, [r4, #12]
 80208c2:	73a1      	strb	r1, [r4, #14]
 80208c4:	e7e5      	b.n	8020892 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80208c6:	bf00      	nop
 80208c8:	08024a38 	.word	0x08024a38
 80208cc:	08024a60 	.word	0x08024a60

080208d0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 80208d0:	10c9      	asrs	r1, r1, #3
 80208d2:	2900      	cmp	r1, #0
 80208d4:	bfb8      	it	lt
 80208d6:	4249      	neglt	r1, r1
 80208d8:	2801      	cmp	r0, #1
 80208da:	d108      	bne.n	80208ee <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 80208dc:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80208e0:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 80208e4:	4601      	mov	r1, r0
 80208e6:	dd02      	ble.n	80208ee <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 80208e8:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 80208ec:	4770      	bx	lr
 80208ee:	29ff      	cmp	r1, #255	@ 0xff
 80208f0:	bfa8      	it	ge
 80208f2:	21ff      	movge	r1, #255	@ 0xff
 80208f4:	4608      	mov	r0, r1
 80208f6:	4770      	bx	lr

080208f8 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80208f8:	b410      	push	{r4}
 80208fa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80208fe:	429c      	cmp	r4, r3
 8020900:	d803      	bhi.n	802090a <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8020902:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020906:	f7ed bc27 	b.w	800e158 <_ZN8touchgfx7Outline6lineToEii>
 802090a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802090e:	4770      	bx	lr

08020910 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8020910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020914:	b08b      	sub	sp, #44	@ 0x2c
 8020916:	4606      	mov	r6, r0
 8020918:	468a      	mov	sl, r1
 802091a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802091e:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8020922:	9308      	str	r3, [sp, #32]
 8020924:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8020928:	9309      	str	r3, [sp, #36]	@ 0x24
 802092a:	f7ed fd80 	bl	800e42e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802092e:	68b5      	ldr	r5, [r6, #8]
 8020930:	4604      	mov	r4, r0
 8020932:	2d00      	cmp	r5, #0
 8020934:	d044      	beq.n	80209c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020936:	6873      	ldr	r3, [r6, #4]
 8020938:	42ab      	cmp	r3, r5
 802093a:	d33d      	bcc.n	80209b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 802093c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8020940:	f04f 0800 	mov.w	r8, #0
 8020944:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8020948:	eb02 0b03 	add.w	fp, r2, r3
 802094c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8020950:	fb02 1203 	mla	r2, r2, r3, r1
 8020954:	9205      	str	r2, [sp, #20]
 8020956:	1e6a      	subs	r2, r5, #1
 8020958:	9204      	str	r2, [sp, #16]
 802095a:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802095e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8020962:	454b      	cmp	r3, r9
 8020964:	463a      	mov	r2, r7
 8020966:	d008      	beq.n	802097a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8020968:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 802096c:	eb03 0b09 	add.w	fp, r3, r9
 8020970:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8020974:	fb03 1309 	mla	r3, r3, r9, r1
 8020978:	9305      	str	r3, [sp, #20]
 802097a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802097e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8020982:	4498      	add	r8, r3
 8020984:	9b04      	ldr	r3, [sp, #16]
 8020986:	3b01      	subs	r3, #1
 8020988:	9304      	str	r3, [sp, #16]
 802098a:	9b04      	ldr	r3, [sp, #16]
 802098c:	3301      	adds	r3, #1
 802098e:	d015      	beq.n	80209bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8020990:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8020994:	42bb      	cmp	r3, r7
 8020996:	d117      	bne.n	80209c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8020998:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 802099c:	9b04      	ldr	r3, [sp, #16]
 802099e:	4548      	cmp	r0, r9
 80209a0:	f103 33ff 	add.w	r3, r3, #4294967295
 80209a4:	d17d      	bne.n	8020aa2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
 80209a6:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80209aa:	4401      	add	r1, r0
 80209ac:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80209b0:	4480      	add	r8, r0
 80209b2:	e7e9      	b.n	8020988 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80209b4:	461f      	mov	r7, r3
 80209b6:	e042      	b.n	8020a3e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
 80209b8:	2000      	movs	r0, #0
 80209ba:	e002      	b.n	80209c2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80209bc:	2900      	cmp	r1, #0
 80209be:	d16d      	bne.n	8020a9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80209c0:	2001      	movs	r0, #1
 80209c2:	b00b      	add	sp, #44	@ 0x2c
 80209c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209c8:	b379      	cbz	r1, 8020a2a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
 80209ca:	2f00      	cmp	r7, #0
 80209cc:	db29      	blt.n	8020a22 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 80209ce:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 80209d2:	42bb      	cmp	r3, r7
 80209d4:	dd25      	ble.n	8020a22 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 80209d6:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80209da:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 80209de:	f7ff ff77 	bl	80208d0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 80209e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80209e4:	fb10 f003 	smulbb	r0, r0, r3
 80209e8:	b280      	uxth	r0, r0
 80209ea:	1c41      	adds	r1, r0, #1
 80209ec:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80209f0:	1209      	asrs	r1, r1, #8
 80209f2:	f011 0fff 	tst.w	r1, #255	@ 0xff
 80209f6:	d014      	beq.n	8020a22 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 80209f8:	b2c9      	uxtb	r1, r1
 80209fa:	9808      	ldr	r0, [sp, #32]
 80209fc:	b2ba      	uxth	r2, r7
 80209fe:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8020a00:	9102      	str	r1, [sp, #8]
 8020a02:	2101      	movs	r1, #1
 8020a04:	4413      	add	r3, r2
 8020a06:	4402      	add	r2, r0
 8020a08:	9101      	str	r1, [sp, #4]
 8020a0a:	fa0f f18b 	sxth.w	r1, fp
 8020a0e:	f8da 0000 	ldr.w	r0, [sl]
 8020a12:	b21b      	sxth	r3, r3
 8020a14:	9100      	str	r1, [sp, #0]
 8020a16:	b212      	sxth	r2, r2
 8020a18:	6941      	ldr	r1, [r0, #20]
 8020a1a:	4650      	mov	r0, sl
 8020a1c:	460d      	mov	r5, r1
 8020a1e:	9905      	ldr	r1, [sp, #20]
 8020a20:	47a8      	blx	r5
 8020a22:	9b04      	ldr	r3, [sp, #16]
 8020a24:	1c7a      	adds	r2, r7, #1
 8020a26:	3301      	adds	r3, #1
 8020a28:	d0ca      	beq.n	80209c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020a2a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8020a2e:	1abb      	subs	r3, r7, r2
 8020a30:	2b00      	cmp	r3, #0
 8020a32:	dd31      	ble.n	8020a98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8020a34:	2a00      	cmp	r2, #0
 8020a36:	dabd      	bge.n	80209b4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8020a38:	2f00      	cmp	r7, #0
 8020a3a:	dd2d      	ble.n	8020a98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8020a3c:	2200      	movs	r2, #0
 8020a3e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8020a42:	19d1      	adds	r1, r2, r7
 8020a44:	4299      	cmp	r1, r3
 8020a46:	db02      	blt.n	8020a4e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
 8020a48:	1a9f      	subs	r7, r3, r2
 8020a4a:	2f00      	cmp	r7, #0
 8020a4c:	dd24      	ble.n	8020a98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8020a4e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8020a52:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8020a56:	f7ff ff3b 	bl	80208d0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8020a5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020a5c:	fb10 f003 	smulbb	r0, r0, r3
 8020a60:	b280      	uxth	r0, r0
 8020a62:	1c41      	adds	r1, r0, #1
 8020a64:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020a68:	1209      	asrs	r1, r1, #8
 8020a6a:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8020a6e:	d013      	beq.n	8020a98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8020a70:	b292      	uxth	r2, r2
 8020a72:	9808      	ldr	r0, [sp, #32]
 8020a74:	b2c9      	uxtb	r1, r1
 8020a76:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8020a78:	b23f      	sxth	r7, r7
 8020a7a:	4413      	add	r3, r2
 8020a7c:	9102      	str	r1, [sp, #8]
 8020a7e:	4402      	add	r2, r0
 8020a80:	fa0f f18b 	sxth.w	r1, fp
 8020a84:	f8da 0000 	ldr.w	r0, [sl]
 8020a88:	b21b      	sxth	r3, r3
 8020a8a:	9100      	str	r1, [sp, #0]
 8020a8c:	b212      	sxth	r2, r2
 8020a8e:	9701      	str	r7, [sp, #4]
 8020a90:	9905      	ldr	r1, [sp, #20]
 8020a92:	6947      	ldr	r7, [r0, #20]
 8020a94:	4650      	mov	r0, sl
 8020a96:	47b8      	blx	r7
 8020a98:	464b      	mov	r3, r9
 8020a9a:	e75e      	b.n	802095a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8020a9c:	2f00      	cmp	r7, #0
 8020a9e:	da96      	bge.n	80209ce <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
 8020aa0:	e78e      	b.n	80209c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020aa2:	2900      	cmp	r1, #0
 8020aa4:	d0f8      	beq.n	8020a98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8020aa6:	e790      	b.n	80209ca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

08020aa8 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8020aa8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8020aac:	461e      	mov	r6, r3
 8020aae:	4b36      	ldr	r3, [pc, #216]	@ (8020b88 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 8020ab0:	2500      	movs	r5, #0
 8020ab2:	f100 0814 	add.w	r8, r0, #20
 8020ab6:	4604      	mov	r4, r0
 8020ab8:	4617      	mov	r7, r2
 8020aba:	e9c0 3100 	strd	r3, r1, [r0]
 8020abe:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8020ac2:	8185      	strh	r5, [r0, #12]
 8020ac4:	8103      	strh	r3, [r0, #8]
 8020ac6:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8020aca:	81c5      	strh	r5, [r0, #14]
 8020acc:	7283      	strb	r3, [r0, #10]
 8020ace:	8205      	strh	r5, [r0, #16]
 8020ad0:	8245      	strh	r5, [r0, #18]
 8020ad2:	4640      	mov	r0, r8
 8020ad4:	f7ec fe86 	bl	800d7e4 <_ZN8touchgfx7OutlineC1Ev>
 8020ad8:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8020adc:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 8020ae0:	466b      	mov	r3, sp
 8020ae2:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 8020ae6:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 8020aea:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 8020aee:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 8020af2:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8020af6:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8020afa:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 8020afe:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 8020b02:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8020b06:	6830      	ldr	r0, [r6, #0]
 8020b08:	6871      	ldr	r1, [r6, #4]
 8020b0a:	8872      	ldrh	r2, [r6, #2]
 8020b0c:	8835      	ldrh	r5, [r6, #0]
 8020b0e:	c303      	stmia	r3!, {r0, r1}
 8020b10:	887b      	ldrh	r3, [r7, #2]
 8020b12:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 8020b16:	4413      	add	r3, r2
 8020b18:	883a      	ldrh	r2, [r7, #0]
 8020b1a:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 8020b1e:	442a      	add	r2, r5
 8020b20:	81e3      	strh	r3, [r4, #14]
 8020b22:	8220      	strh	r0, [r4, #16]
 8020b24:	4668      	mov	r0, sp
 8020b26:	81a2      	strh	r2, [r4, #12]
 8020b28:	8261      	strh	r1, [r4, #18]
 8020b2a:	4639      	mov	r1, r7
 8020b2c:	f7ef f846 	bl	800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020b30:	f104 000c 	add.w	r0, r4, #12
 8020b34:	f7ef f81a 	bl	800fb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020b38:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020b3c:	f8bd 2000 	ldrh.w	r2, [sp]
 8020b40:	4640      	mov	r0, r8
 8020b42:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8020b46:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8020b4a:	f7ec fe2f 	bl	800d7ac <_ZN8touchgfx7Outline5resetEv>
 8020b4e:	f9bd 3000 	ldrsh.w	r3, [sp]
 8020b52:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 8020b56:	4620      	mov	r0, r4
 8020b58:	015b      	lsls	r3, r3, #5
 8020b5a:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8020b5c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020b60:	015b      	lsls	r3, r3, #5
 8020b62:	6523      	str	r3, [r4, #80]	@ 0x50
 8020b64:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8020b68:	015b      	lsls	r3, r3, #5
 8020b6a:	6563      	str	r3, [r4, #84]	@ 0x54
 8020b6c:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020b70:	015b      	lsls	r3, r3, #5
 8020b72:	65a3      	str	r3, [r4, #88]	@ 0x58
 8020b74:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8020b78:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8020b7c:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 8020b80:	b002      	add	sp, #8
 8020b82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020b86:	bf00      	nop
 8020b88:	08024d84 	.word	0x08024d84

08020b8c <_ZN8touchgfx6Canvas5closeEv>:
 8020b8c:	b538      	push	{r3, r4, r5, lr}
 8020b8e:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8020b92:	4604      	mov	r4, r0
 8020b94:	b193      	cbz	r3, 8020bbc <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020b96:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8020b9a:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 8020b9e:	4213      	tst	r3, r2
 8020ba0:	d10c      	bne.n	8020bbc <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020ba2:	f100 0514 	add.w	r5, r0, #20
 8020ba6:	b123      	cbz	r3, 8020bb2 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8020ba8:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8020bac:	4628      	mov	r0, r5
 8020bae:	f7ff fea3 	bl	80208f8 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020bb2:	4628      	mov	r0, r5
 8020bb4:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 8020bb8:	f7ff fe9e 	bl	80208f8 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020bbc:	2300      	movs	r3, #0
 8020bbe:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8020bc2:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 8020bc6:	4298      	cmp	r0, r3
 8020bc8:	bf34      	ite	cc
 8020bca:	2000      	movcc	r0, #0
 8020bcc:	2001      	movcs	r0, #1
 8020bce:	bd38      	pop	{r3, r4, r5, pc}

08020bd0 <_ZN8touchgfx6Canvas6renderEh>:
 8020bd0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8020bd4:	7a85      	ldrb	r5, [r0, #10]
 8020bd6:	4604      	mov	r4, r0
 8020bd8:	4369      	muls	r1, r5
 8020bda:	1c4d      	adds	r5, r1, #1
 8020bdc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8020be0:	122d      	asrs	r5, r5, #8
 8020be2:	f000 8098 	beq.w	8020d16 <_ZN8touchgfx6Canvas6renderEh+0x146>
 8020be6:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 8020bea:	2b00      	cmp	r3, #0
 8020bec:	f000 8093 	beq.w	8020d16 <_ZN8touchgfx6Canvas6renderEh+0x146>
 8020bf0:	f7ff ffcc 	bl	8020b8c <_ZN8touchgfx6Canvas5closeEv>
 8020bf4:	4607      	mov	r7, r0
 8020bf6:	2800      	cmp	r0, #0
 8020bf8:	d045      	beq.n	8020c86 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8020bfa:	6860      	ldr	r0, [r4, #4]
 8020bfc:	4e47      	ldr	r6, [pc, #284]	@ (8020d1c <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 8020bfe:	6803      	ldr	r3, [r0, #0]
 8020c00:	6837      	ldr	r7, [r6, #0]
 8020c02:	689b      	ldr	r3, [r3, #8]
 8020c04:	4798      	blx	r3
 8020c06:	4601      	mov	r1, r0
 8020c08:	4638      	mov	r0, r7
 8020c0a:	f7ea fa85 	bl	800b118 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8020c0e:	4607      	mov	r7, r0
 8020c10:	f7e1 fbe4 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 8020c14:	6803      	ldr	r3, [r0, #0]
 8020c16:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020c18:	4798      	blx	r3
 8020c1a:	4680      	mov	r8, r0
 8020c1c:	f7e1 fbde 	bl	80023dc <_ZN8touchgfx3HAL3lcdEv>
 8020c20:	6803      	ldr	r3, [r0, #0]
 8020c22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020c24:	4798      	blx	r3
 8020c26:	280b      	cmp	r0, #11
 8020c28:	d85a      	bhi.n	8020ce0 <_ZN8touchgfx6Canvas6renderEh+0x110>
 8020c2a:	e8df f000 	tbb	[pc, r0]
 8020c2e:	5b50      	.short	0x5b50
 8020c30:	3059066b 	.word	0x3059066b
 8020c34:	64646440 	.word	0x64646440
 8020c38:	6464      	.short	0x6464
 8020c3a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8020c3e:	2208      	movs	r2, #8
 8020c40:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8020c44:	fb91 f2f2 	sdiv	r2, r1, r2
 8020c48:	fb08 2303 	mla	r3, r8, r3, r2
 8020c4c:	441f      	add	r7, r3
 8020c4e:	424b      	negs	r3, r1
 8020c50:	f001 0107 	and.w	r1, r1, #7
 8020c54:	f003 0307 	and.w	r3, r3, #7
 8020c58:	bf58      	it	pl
 8020c5a:	4259      	negpl	r1, r3
 8020c5c:	b2c9      	uxtb	r1, r1
 8020c5e:	b2ed      	uxtb	r5, r5
 8020c60:	463a      	mov	r2, r7
 8020c62:	fa0f f388 	sxth.w	r3, r8
 8020c66:	f104 0014 	add.w	r0, r4, #20
 8020c6a:	e9cd 1500 	strd	r1, r5, [sp]
 8020c6e:	6861      	ldr	r1, [r4, #4]
 8020c70:	f7ff fe4e 	bl	8020910 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8020c74:	4607      	mov	r7, r0
 8020c76:	6860      	ldr	r0, [r4, #4]
 8020c78:	6803      	ldr	r3, [r0, #0]
 8020c7a:	691b      	ldr	r3, [r3, #16]
 8020c7c:	4798      	blx	r3
 8020c7e:	6830      	ldr	r0, [r6, #0]
 8020c80:	6803      	ldr	r3, [r0, #0]
 8020c82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020c84:	4798      	blx	r3
 8020c86:	4638      	mov	r0, r7
 8020c88:	b002      	add	sp, #8
 8020c8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020c8e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8020c92:	2204      	movs	r2, #4
 8020c94:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8020c98:	fb91 f2f2 	sdiv	r2, r1, r2
 8020c9c:	fb08 2303 	mla	r3, r8, r3, r2
 8020ca0:	441f      	add	r7, r3
 8020ca2:	424b      	negs	r3, r1
 8020ca4:	f001 0103 	and.w	r1, r1, #3
 8020ca8:	f003 0303 	and.w	r3, r3, #3
 8020cac:	e7d4      	b.n	8020c58 <_ZN8touchgfx6Canvas6renderEh+0x88>
 8020cae:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8020cb2:	2202      	movs	r2, #2
 8020cb4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8020cb8:	2900      	cmp	r1, #0
 8020cba:	fb91 f2f2 	sdiv	r2, r1, r2
 8020cbe:	f001 0101 	and.w	r1, r1, #1
 8020cc2:	fb08 2303 	mla	r3, r8, r3, r2
 8020cc6:	bfb8      	it	lt
 8020cc8:	4249      	neglt	r1, r1
 8020cca:	441f      	add	r7, r3
 8020ccc:	e7c6      	b.n	8020c5c <_ZN8touchgfx6Canvas6renderEh+0x8c>
 8020cce:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8020cd2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020cd6:	fb08 f303 	mul.w	r3, r8, r3
 8020cda:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8020cde:	441f      	add	r7, r3
 8020ce0:	2100      	movs	r1, #0
 8020ce2:	e7bc      	b.n	8020c5e <_ZN8touchgfx6Canvas6renderEh+0x8e>
 8020ce4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8020ce8:	2103      	movs	r1, #3
 8020cea:	fb08 f203 	mul.w	r2, r8, r3
 8020cee:	89a3      	ldrh	r3, [r4, #12]
 8020cf0:	fb13 2301 	smlabb	r3, r3, r1, r2
 8020cf4:	e7f3      	b.n	8020cde <_ZN8touchgfx6Canvas6renderEh+0x10e>
 8020cf6:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8020cfa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020cfe:	fb08 2303 	mla	r3, r8, r3, r2
 8020d02:	e7ec      	b.n	8020cde <_ZN8touchgfx6Canvas6renderEh+0x10e>
 8020d04:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8020d08:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020d0c:	fb08 f303 	mul.w	r3, r8, r3
 8020d10:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8020d14:	e7e3      	b.n	8020cde <_ZN8touchgfx6Canvas6renderEh+0x10e>
 8020d16:	2701      	movs	r7, #1
 8020d18:	e7b5      	b.n	8020c86 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8020d1a:	bf00      	nop
 8020d1c:	20016b74 	.word	0x20016b74

08020d20 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8020d20:	4b06      	ldr	r3, [pc, #24]	@ (8020d3c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 8020d22:	b510      	push	{r4, lr}
 8020d24:	781b      	ldrb	r3, [r3, #0]
 8020d26:	2b01      	cmp	r3, #1
 8020d28:	d107      	bne.n	8020d3a <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 8020d2a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8020d2e:	680b      	ldr	r3, [r1, #0]
 8020d30:	6814      	ldr	r4, [r2, #0]
 8020d32:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8020d36:	6013      	str	r3, [r2, #0]
 8020d38:	600c      	str	r4, [r1, #0]
 8020d3a:	bd10      	pop	{r4, pc}
 8020d3c:	20016b6c 	.word	0x20016b6c

08020d40 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8020d40:	b513      	push	{r0, r1, r4, lr}
 8020d42:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8020d46:	4604      	mov	r4, r0
 8020d48:	e9cd 2100 	strd	r2, r1, [sp]
 8020d4c:	b9a3      	cbnz	r3, 8020d78 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8020d4e:	466a      	mov	r2, sp
 8020d50:	a901      	add	r1, sp, #4
 8020d52:	4620      	mov	r0, r4
 8020d54:	f7ff ffe4 	bl	8020d20 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8020d58:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8020d5a:	9901      	ldr	r1, [sp, #4]
 8020d5c:	9a00      	ldr	r2, [sp, #0]
 8020d5e:	1ac9      	subs	r1, r1, r3
 8020d60:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8020d62:	1ad2      	subs	r2, r2, r3
 8020d64:	9101      	str	r1, [sp, #4]
 8020d66:	2a00      	cmp	r2, #0
 8020d68:	9200      	str	r2, [sp, #0]
 8020d6a:	da0b      	bge.n	8020d84 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8020d6c:	2301      	movs	r3, #1
 8020d6e:	2900      	cmp	r1, #0
 8020d70:	da0e      	bge.n	8020d90 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020d72:	f043 0304 	orr.w	r3, r3, #4
 8020d76:	e013      	b.n	8020da0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8020d78:	f7ff ff08 	bl	8020b8c <_ZN8touchgfx6Canvas5closeEv>
 8020d7c:	2800      	cmp	r0, #0
 8020d7e:	d1e6      	bne.n	8020d4e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020d80:	b002      	add	sp, #8
 8020d82:	bd10      	pop	{r4, pc}
 8020d84:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8020d86:	429a      	cmp	r2, r3
 8020d88:	bfac      	ite	ge
 8020d8a:	2302      	movge	r3, #2
 8020d8c:	2300      	movlt	r3, #0
 8020d8e:	e7ee      	b.n	8020d6e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020d90:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8020d92:	4281      	cmp	r1, r0
 8020d94:	bfac      	ite	ge
 8020d96:	2008      	movge	r0, #8
 8020d98:	2000      	movlt	r0, #0
 8020d9a:	4318      	orrs	r0, r3
 8020d9c:	b2c3      	uxtb	r3, r0
 8020d9e:	b158      	cbz	r0, 8020db8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020da0:	2200      	movs	r2, #0
 8020da2:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 8020da6:	9901      	ldr	r1, [sp, #4]
 8020da8:	9a00      	ldr	r2, [sp, #0]
 8020daa:	66e1      	str	r1, [r4, #108]	@ 0x6c
 8020dac:	6722      	str	r2, [r4, #112]	@ 0x70
 8020dae:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 8020db2:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 8020db6:	e7e3      	b.n	8020d80 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8020db8:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8020dbc:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8020dc0:	4298      	cmp	r0, r3
 8020dc2:	d803      	bhi.n	8020dcc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8020dc4:	f104 0014 	add.w	r0, r4, #20
 8020dc8:	f7ed f9e0 	bl	800e18c <_ZN8touchgfx7Outline6moveToEii>
 8020dcc:	2301      	movs	r3, #1
 8020dce:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8020dd2:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8020dd6:	2300      	movs	r3, #0
 8020dd8:	e7e5      	b.n	8020da6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08020dda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8020dda:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8020ddc:	ab02      	add	r3, sp, #8
 8020dde:	4604      	mov	r4, r0
 8020de0:	9101      	str	r1, [sp, #4]
 8020de2:	a901      	add	r1, sp, #4
 8020de4:	f843 2d08 	str.w	r2, [r3, #-8]!
 8020de8:	461a      	mov	r2, r3
 8020dea:	f7ff ff99 	bl	8020d20 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8020dee:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8020df0:	9901      	ldr	r1, [sp, #4]
 8020df2:	9a00      	ldr	r2, [sp, #0]
 8020df4:	1ac9      	subs	r1, r1, r3
 8020df6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8020df8:	1ad2      	subs	r2, r2, r3
 8020dfa:	9101      	str	r1, [sp, #4]
 8020dfc:	2a00      	cmp	r2, #0
 8020dfe:	9200      	str	r2, [sp, #0]
 8020e00:	db1c      	blt.n	8020e3c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8020e02:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8020e04:	429a      	cmp	r2, r3
 8020e06:	bfac      	ite	ge
 8020e08:	2002      	movge	r0, #2
 8020e0a:	2000      	movlt	r0, #0
 8020e0c:	2900      	cmp	r1, #0
 8020e0e:	db17      	blt.n	8020e40 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8020e10:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8020e12:	4299      	cmp	r1, r3
 8020e14:	bfac      	ite	ge
 8020e16:	2308      	movge	r3, #8
 8020e18:	2300      	movlt	r3, #0
 8020e1a:	4303      	orrs	r3, r0
 8020e1c:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 8020e20:	b2dd      	uxtb	r5, r3
 8020e22:	b978      	cbnz	r0, 8020e44 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8020e24:	f104 0014 	add.w	r0, r4, #20
 8020e28:	f7ff fd66 	bl	80208f8 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020e2c:	9b01      	ldr	r3, [sp, #4]
 8020e2e:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 8020e32:	6623      	str	r3, [r4, #96]	@ 0x60
 8020e34:	9b00      	ldr	r3, [sp, #0]
 8020e36:	6663      	str	r3, [r4, #100]	@ 0x64
 8020e38:	b002      	add	sp, #8
 8020e3a:	bd70      	pop	{r4, r5, r6, pc}
 8020e3c:	2001      	movs	r0, #1
 8020e3e:	e7e5      	b.n	8020e0c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8020e40:	2304      	movs	r3, #4
 8020e42:	e7ea      	b.n	8020e1a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8020e44:	b113      	cbz	r3, 8020e4c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8020e46:	ea10 0305 	ands.w	r3, r0, r5
 8020e4a:	d11c      	bne.n	8020e86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8020e4c:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8020e50:	f104 0614 	add.w	r6, r4, #20
 8020e54:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8020e58:	b98b      	cbnz	r3, 8020e7e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8020e5a:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8020e5e:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8020e62:	4298      	cmp	r0, r3
 8020e64:	d802      	bhi.n	8020e6c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8020e66:	4630      	mov	r0, r6
 8020e68:	f7ed f990 	bl	800e18c <_ZN8touchgfx7Outline6moveToEii>
 8020e6c:	2301      	movs	r3, #1
 8020e6e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8020e72:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8020e76:	4630      	mov	r0, r6
 8020e78:	e9dd 2100 	ldrd	r2, r1, [sp]
 8020e7c:	e7d4      	b.n	8020e28 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020e7e:	4630      	mov	r0, r6
 8020e80:	f7ff fd3a 	bl	80208f8 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020e84:	e7f7      	b.n	8020e76 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8020e86:	461d      	mov	r5, r3
 8020e88:	e7d0      	b.n	8020e2c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08020e8c <_ZN8touchgfx6CanvasD1Ev>:
 8020e8c:	4b04      	ldr	r3, [pc, #16]	@ (8020ea0 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8020e8e:	b510      	push	{r4, lr}
 8020e90:	4604      	mov	r4, r0
 8020e92:	f840 3b14 	str.w	r3, [r0], #20
 8020e96:	f7ec fc81 	bl	800d79c <_ZN8touchgfx7OutlineD1Ev>
 8020e9a:	4620      	mov	r0, r4
 8020e9c:	bd10      	pop	{r4, pc}
 8020e9e:	bf00      	nop
 8020ea0:	08024d84 	.word	0x08024d84

08020ea4 <_ZN8touchgfx6CanvasD0Ev>:
 8020ea4:	b510      	push	{r4, lr}
 8020ea6:	4604      	mov	r4, r0
 8020ea8:	f7ff fff0 	bl	8020e8c <_ZN8touchgfx6CanvasD1Ev>
 8020eac:	2174      	movs	r1, #116	@ 0x74
 8020eae:	4620      	mov	r0, r4
 8020eb0:	f000 f826 	bl	8020f00 <_ZdlPvj>
 8020eb4:	4620      	mov	r0, r4
 8020eb6:	bd10      	pop	{r4, pc}

08020eb8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8020eb8:	790b      	ldrb	r3, [r1, #4]
 8020eba:	2b00      	cmp	r3, #0
 8020ebc:	bf0c      	ite	eq
 8020ebe:	2301      	moveq	r3, #1
 8020ec0:	2300      	movne	r3, #0
 8020ec2:	b570      	push	{r4, r5, r6, lr}
 8020ec4:	4604      	mov	r4, r0
 8020ec6:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 8020eca:	460e      	mov	r6, r1
 8020ecc:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8020ed0:	d109      	bne.n	8020ee6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8020ed2:	b14d      	cbz	r5, 8020ee8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8020ed4:	7933      	ldrb	r3, [r6, #4]
 8020ed6:	2b01      	cmp	r3, #1
 8020ed8:	d10c      	bne.n	8020ef4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8020eda:	6823      	ldr	r3, [r4, #0]
 8020edc:	4620      	mov	r0, r4
 8020ede:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8020ee0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8020ee4:	4718      	bx	r3
 8020ee6:	b12d      	cbz	r5, 8020ef4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8020ee8:	6823      	ldr	r3, [r4, #0]
 8020eea:	4620      	mov	r0, r4
 8020eec:	695b      	ldr	r3, [r3, #20]
 8020eee:	4798      	blx	r3
 8020ef0:	2d00      	cmp	r5, #0
 8020ef2:	d1ef      	bne.n	8020ed4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8020ef4:	bd70      	pop	{r4, r5, r6, pc}

08020ef6 <__aeabi_atexit>:
 8020ef6:	460b      	mov	r3, r1
 8020ef8:	4601      	mov	r1, r0
 8020efa:	4618      	mov	r0, r3
 8020efc:	f000 be4c 	b.w	8021b98 <__cxa_atexit>

08020f00 <_ZdlPvj>:
 8020f00:	f000 b812 	b.w	8020f28 <_ZdlPv>

08020f04 <__cxa_guard_acquire>:
 8020f04:	6802      	ldr	r2, [r0, #0]
 8020f06:	07d2      	lsls	r2, r2, #31
 8020f08:	4603      	mov	r3, r0
 8020f0a:	d405      	bmi.n	8020f18 <__cxa_guard_acquire+0x14>
 8020f0c:	7842      	ldrb	r2, [r0, #1]
 8020f0e:	b102      	cbz	r2, 8020f12 <__cxa_guard_acquire+0xe>
 8020f10:	deff      	udf	#255	@ 0xff
 8020f12:	2001      	movs	r0, #1
 8020f14:	7058      	strb	r0, [r3, #1]
 8020f16:	4770      	bx	lr
 8020f18:	2000      	movs	r0, #0
 8020f1a:	4770      	bx	lr

08020f1c <__cxa_guard_release>:
 8020f1c:	2301      	movs	r3, #1
 8020f1e:	6003      	str	r3, [r0, #0]
 8020f20:	4770      	bx	lr

08020f22 <__cxa_pure_virtual>:
 8020f22:	b508      	push	{r3, lr}
 8020f24:	f000 f80e 	bl	8020f44 <_ZSt9terminatev>

08020f28 <_ZdlPv>:
 8020f28:	f000 bd80 	b.w	8021a2c <free>

08020f2c <_ZN10__cxxabiv111__terminateEPFvvE>:
 8020f2c:	b508      	push	{r3, lr}
 8020f2e:	4780      	blx	r0
 8020f30:	f000 fd48 	bl	80219c4 <abort>

08020f34 <_ZSt13get_terminatev>:
 8020f34:	4b02      	ldr	r3, [pc, #8]	@ (8020f40 <_ZSt13get_terminatev+0xc>)
 8020f36:	6818      	ldr	r0, [r3, #0]
 8020f38:	f3bf 8f5b 	dmb	ish
 8020f3c:	4770      	bx	lr
 8020f3e:	bf00      	nop
 8020f40:	200000c0 	.word	0x200000c0

08020f44 <_ZSt9terminatev>:
 8020f44:	b508      	push	{r3, lr}
 8020f46:	f7ff fff5 	bl	8020f34 <_ZSt13get_terminatev>
 8020f4a:	f7ff ffef 	bl	8020f2c <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08020f50 <sinf>:
 8020f50:	ee10 3a10 	vmov	r3, s0
 8020f54:	b507      	push	{r0, r1, r2, lr}
 8020f56:	4a1f      	ldr	r2, [pc, #124]	@ (8020fd4 <sinf+0x84>)
 8020f58:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8020f5c:	4293      	cmp	r3, r2
 8020f5e:	d807      	bhi.n	8020f70 <sinf+0x20>
 8020f60:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8020fd8 <sinf+0x88>
 8020f64:	2000      	movs	r0, #0
 8020f66:	b003      	add	sp, #12
 8020f68:	f85d eb04 	ldr.w	lr, [sp], #4
 8020f6c:	f000 b88e 	b.w	802108c <__kernel_sinf>
 8020f70:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8020f74:	d304      	bcc.n	8020f80 <sinf+0x30>
 8020f76:	ee30 0a40 	vsub.f32	s0, s0, s0
 8020f7a:	b003      	add	sp, #12
 8020f7c:	f85d fb04 	ldr.w	pc, [sp], #4
 8020f80:	4668      	mov	r0, sp
 8020f82:	f000 f8cb 	bl	802111c <__ieee754_rem_pio2f>
 8020f86:	f000 0003 	and.w	r0, r0, #3
 8020f8a:	2801      	cmp	r0, #1
 8020f8c:	d00a      	beq.n	8020fa4 <sinf+0x54>
 8020f8e:	2802      	cmp	r0, #2
 8020f90:	d00f      	beq.n	8020fb2 <sinf+0x62>
 8020f92:	b9c0      	cbnz	r0, 8020fc6 <sinf+0x76>
 8020f94:	eddd 0a01 	vldr	s1, [sp, #4]
 8020f98:	ed9d 0a00 	vldr	s0, [sp]
 8020f9c:	2001      	movs	r0, #1
 8020f9e:	f000 f875 	bl	802108c <__kernel_sinf>
 8020fa2:	e7ea      	b.n	8020f7a <sinf+0x2a>
 8020fa4:	eddd 0a01 	vldr	s1, [sp, #4]
 8020fa8:	ed9d 0a00 	vldr	s0, [sp]
 8020fac:	f000 f816 	bl	8020fdc <__kernel_cosf>
 8020fb0:	e7e3      	b.n	8020f7a <sinf+0x2a>
 8020fb2:	eddd 0a01 	vldr	s1, [sp, #4]
 8020fb6:	ed9d 0a00 	vldr	s0, [sp]
 8020fba:	2001      	movs	r0, #1
 8020fbc:	f000 f866 	bl	802108c <__kernel_sinf>
 8020fc0:	eeb1 0a40 	vneg.f32	s0, s0
 8020fc4:	e7d9      	b.n	8020f7a <sinf+0x2a>
 8020fc6:	eddd 0a01 	vldr	s1, [sp, #4]
 8020fca:	ed9d 0a00 	vldr	s0, [sp]
 8020fce:	f000 f805 	bl	8020fdc <__kernel_cosf>
 8020fd2:	e7f5      	b.n	8020fc0 <sinf+0x70>
 8020fd4:	3f490fd8 	.word	0x3f490fd8
 8020fd8:	00000000 	.word	0x00000000

08020fdc <__kernel_cosf>:
 8020fdc:	ee10 3a10 	vmov	r3, s0
 8020fe0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8020fe4:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8020fe8:	eef0 6a40 	vmov.f32	s13, s0
 8020fec:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8020ff0:	d204      	bcs.n	8020ffc <__kernel_cosf+0x20>
 8020ff2:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8020ff6:	ee17 2a90 	vmov	r2, s15
 8020ffa:	b342      	cbz	r2, 802104e <__kernel_cosf+0x72>
 8020ffc:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8021000:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 802106c <__kernel_cosf+0x90>
 8021004:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8021070 <__kernel_cosf+0x94>
 8021008:	4a1a      	ldr	r2, [pc, #104]	@ (8021074 <__kernel_cosf+0x98>)
 802100a:	eea7 6a27 	vfma.f32	s12, s14, s15
 802100e:	4293      	cmp	r3, r2
 8021010:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8021078 <__kernel_cosf+0x9c>
 8021014:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021018:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 802107c <__kernel_cosf+0xa0>
 802101c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021020:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8021080 <__kernel_cosf+0xa4>
 8021024:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021028:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8021084 <__kernel_cosf+0xa8>
 802102c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021030:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8021034:	ee26 6a07 	vmul.f32	s12, s12, s14
 8021038:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802103c:	eee7 0a06 	vfma.f32	s1, s14, s12
 8021040:	ee67 7a27 	vmul.f32	s15, s14, s15
 8021044:	d804      	bhi.n	8021050 <__kernel_cosf+0x74>
 8021046:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802104a:	ee30 0a67 	vsub.f32	s0, s0, s15
 802104e:	4770      	bx	lr
 8021050:	4a0d      	ldr	r2, [pc, #52]	@ (8021088 <__kernel_cosf+0xac>)
 8021052:	4293      	cmp	r3, r2
 8021054:	bf9a      	itte	ls
 8021056:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 802105a:	ee07 3a10 	vmovls	s14, r3
 802105e:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8021062:	ee30 0a47 	vsub.f32	s0, s0, s14
 8021066:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802106a:	e7ec      	b.n	8021046 <__kernel_cosf+0x6a>
 802106c:	ad47d74e 	.word	0xad47d74e
 8021070:	310f74f6 	.word	0x310f74f6
 8021074:	3e999999 	.word	0x3e999999
 8021078:	b493f27c 	.word	0xb493f27c
 802107c:	37d00d01 	.word	0x37d00d01
 8021080:	bab60b61 	.word	0xbab60b61
 8021084:	3d2aaaab 	.word	0x3d2aaaab
 8021088:	3f480000 	.word	0x3f480000

0802108c <__kernel_sinf>:
 802108c:	ee10 3a10 	vmov	r3, s0
 8021090:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021094:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8021098:	d204      	bcs.n	80210a4 <__kernel_sinf+0x18>
 802109a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802109e:	ee17 3a90 	vmov	r3, s15
 80210a2:	b35b      	cbz	r3, 80210fc <__kernel_sinf+0x70>
 80210a4:	ee20 7a00 	vmul.f32	s14, s0, s0
 80210a8:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8021100 <__kernel_sinf+0x74>
 80210ac:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8021104 <__kernel_sinf+0x78>
 80210b0:	eea7 6a27 	vfma.f32	s12, s14, s15
 80210b4:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8021108 <__kernel_sinf+0x7c>
 80210b8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80210bc:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 802110c <__kernel_sinf+0x80>
 80210c0:	eea7 6a87 	vfma.f32	s12, s15, s14
 80210c4:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8021110 <__kernel_sinf+0x84>
 80210c8:	ee60 6a07 	vmul.f32	s13, s0, s14
 80210cc:	eee6 7a07 	vfma.f32	s15, s12, s14
 80210d0:	b930      	cbnz	r0, 80210e0 <__kernel_sinf+0x54>
 80210d2:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8021114 <__kernel_sinf+0x88>
 80210d6:	eea7 6a27 	vfma.f32	s12, s14, s15
 80210da:	eea6 0a26 	vfma.f32	s0, s12, s13
 80210de:	4770      	bx	lr
 80210e0:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80210e4:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80210e8:	eee0 7a86 	vfma.f32	s15, s1, s12
 80210ec:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80210f0:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8021118 <__kernel_sinf+0x8c>
 80210f4:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80210f8:	ee30 0a60 	vsub.f32	s0, s0, s1
 80210fc:	4770      	bx	lr
 80210fe:	bf00      	nop
 8021100:	2f2ec9d3 	.word	0x2f2ec9d3
 8021104:	b2d72f34 	.word	0xb2d72f34
 8021108:	3638ef1b 	.word	0x3638ef1b
 802110c:	b9500d01 	.word	0xb9500d01
 8021110:	3c088889 	.word	0x3c088889
 8021114:	be2aaaab 	.word	0xbe2aaaab
 8021118:	3e2aaaab 	.word	0x3e2aaaab

0802111c <__ieee754_rem_pio2f>:
 802111c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802111e:	ee10 6a10 	vmov	r6, s0
 8021122:	4b88      	ldr	r3, [pc, #544]	@ (8021344 <__ieee754_rem_pio2f+0x228>)
 8021124:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8021128:	429d      	cmp	r5, r3
 802112a:	b087      	sub	sp, #28
 802112c:	4604      	mov	r4, r0
 802112e:	d805      	bhi.n	802113c <__ieee754_rem_pio2f+0x20>
 8021130:	2300      	movs	r3, #0
 8021132:	ed80 0a00 	vstr	s0, [r0]
 8021136:	6043      	str	r3, [r0, #4]
 8021138:	2000      	movs	r0, #0
 802113a:	e022      	b.n	8021182 <__ieee754_rem_pio2f+0x66>
 802113c:	4b82      	ldr	r3, [pc, #520]	@ (8021348 <__ieee754_rem_pio2f+0x22c>)
 802113e:	429d      	cmp	r5, r3
 8021140:	d83a      	bhi.n	80211b8 <__ieee754_rem_pio2f+0x9c>
 8021142:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8021146:	2e00      	cmp	r6, #0
 8021148:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 802134c <__ieee754_rem_pio2f+0x230>
 802114c:	4a80      	ldr	r2, [pc, #512]	@ (8021350 <__ieee754_rem_pio2f+0x234>)
 802114e:	f023 030f 	bic.w	r3, r3, #15
 8021152:	dd18      	ble.n	8021186 <__ieee754_rem_pio2f+0x6a>
 8021154:	4293      	cmp	r3, r2
 8021156:	ee70 7a47 	vsub.f32	s15, s0, s14
 802115a:	bf09      	itett	eq
 802115c:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8021354 <__ieee754_rem_pio2f+0x238>
 8021160:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 8021358 <__ieee754_rem_pio2f+0x23c>
 8021164:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 802135c <__ieee754_rem_pio2f+0x240>
 8021168:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802116c:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8021170:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021174:	ed80 7a00 	vstr	s14, [r0]
 8021178:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802117c:	edc0 7a01 	vstr	s15, [r0, #4]
 8021180:	2001      	movs	r0, #1
 8021182:	b007      	add	sp, #28
 8021184:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021186:	4293      	cmp	r3, r2
 8021188:	ee70 7a07 	vadd.f32	s15, s0, s14
 802118c:	bf09      	itett	eq
 802118e:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8021354 <__ieee754_rem_pio2f+0x238>
 8021192:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 8021358 <__ieee754_rem_pio2f+0x23c>
 8021196:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 802135c <__ieee754_rem_pio2f+0x240>
 802119a:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802119e:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80211a2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80211a6:	ed80 7a00 	vstr	s14, [r0]
 80211aa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80211ae:	edc0 7a01 	vstr	s15, [r0, #4]
 80211b2:	f04f 30ff 	mov.w	r0, #4294967295
 80211b6:	e7e4      	b.n	8021182 <__ieee754_rem_pio2f+0x66>
 80211b8:	4b69      	ldr	r3, [pc, #420]	@ (8021360 <__ieee754_rem_pio2f+0x244>)
 80211ba:	429d      	cmp	r5, r3
 80211bc:	d873      	bhi.n	80212a6 <__ieee754_rem_pio2f+0x18a>
 80211be:	f000 f8dd 	bl	802137c <fabsf>
 80211c2:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8021364 <__ieee754_rem_pio2f+0x248>
 80211c6:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80211ca:	eee0 7a07 	vfma.f32	s15, s0, s14
 80211ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80211d2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80211d6:	ee17 0a90 	vmov	r0, s15
 80211da:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802134c <__ieee754_rem_pio2f+0x230>
 80211de:	eea7 0a67 	vfms.f32	s0, s14, s15
 80211e2:	281f      	cmp	r0, #31
 80211e4:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8021358 <__ieee754_rem_pio2f+0x23c>
 80211e8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80211ec:	eeb1 6a47 	vneg.f32	s12, s14
 80211f0:	ee70 6a67 	vsub.f32	s13, s0, s15
 80211f4:	ee16 1a90 	vmov	r1, s13
 80211f8:	dc09      	bgt.n	802120e <__ieee754_rem_pio2f+0xf2>
 80211fa:	4a5b      	ldr	r2, [pc, #364]	@ (8021368 <__ieee754_rem_pio2f+0x24c>)
 80211fc:	1e47      	subs	r7, r0, #1
 80211fe:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8021202:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8021206:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 802120a:	4293      	cmp	r3, r2
 802120c:	d107      	bne.n	802121e <__ieee754_rem_pio2f+0x102>
 802120e:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8021212:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8021216:	2a08      	cmp	r2, #8
 8021218:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802121c:	dc14      	bgt.n	8021248 <__ieee754_rem_pio2f+0x12c>
 802121e:	6021      	str	r1, [r4, #0]
 8021220:	ed94 7a00 	vldr	s14, [r4]
 8021224:	ee30 0a47 	vsub.f32	s0, s0, s14
 8021228:	2e00      	cmp	r6, #0
 802122a:	ee30 0a67 	vsub.f32	s0, s0, s15
 802122e:	ed84 0a01 	vstr	s0, [r4, #4]
 8021232:	daa6      	bge.n	8021182 <__ieee754_rem_pio2f+0x66>
 8021234:	eeb1 7a47 	vneg.f32	s14, s14
 8021238:	eeb1 0a40 	vneg.f32	s0, s0
 802123c:	ed84 7a00 	vstr	s14, [r4]
 8021240:	ed84 0a01 	vstr	s0, [r4, #4]
 8021244:	4240      	negs	r0, r0
 8021246:	e79c      	b.n	8021182 <__ieee754_rem_pio2f+0x66>
 8021248:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8021354 <__ieee754_rem_pio2f+0x238>
 802124c:	eef0 6a40 	vmov.f32	s13, s0
 8021250:	eee6 6a25 	vfma.f32	s13, s12, s11
 8021254:	ee70 7a66 	vsub.f32	s15, s0, s13
 8021258:	eee6 7a25 	vfma.f32	s15, s12, s11
 802125c:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 802135c <__ieee754_rem_pio2f+0x240>
 8021260:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8021264:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8021268:	ee15 2a90 	vmov	r2, s11
 802126c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8021270:	1a5b      	subs	r3, r3, r1
 8021272:	2b19      	cmp	r3, #25
 8021274:	dc04      	bgt.n	8021280 <__ieee754_rem_pio2f+0x164>
 8021276:	edc4 5a00 	vstr	s11, [r4]
 802127a:	eeb0 0a66 	vmov.f32	s0, s13
 802127e:	e7cf      	b.n	8021220 <__ieee754_rem_pio2f+0x104>
 8021280:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 802136c <__ieee754_rem_pio2f+0x250>
 8021284:	eeb0 0a66 	vmov.f32	s0, s13
 8021288:	eea6 0a25 	vfma.f32	s0, s12, s11
 802128c:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8021290:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8021370 <__ieee754_rem_pio2f+0x254>
 8021294:	eee6 7a25 	vfma.f32	s15, s12, s11
 8021298:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802129c:	ee30 7a67 	vsub.f32	s14, s0, s15
 80212a0:	ed84 7a00 	vstr	s14, [r4]
 80212a4:	e7bc      	b.n	8021220 <__ieee754_rem_pio2f+0x104>
 80212a6:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 80212aa:	d306      	bcc.n	80212ba <__ieee754_rem_pio2f+0x19e>
 80212ac:	ee70 7a40 	vsub.f32	s15, s0, s0
 80212b0:	edc0 7a01 	vstr	s15, [r0, #4]
 80212b4:	edc0 7a00 	vstr	s15, [r0]
 80212b8:	e73e      	b.n	8021138 <__ieee754_rem_pio2f+0x1c>
 80212ba:	15ea      	asrs	r2, r5, #23
 80212bc:	3a86      	subs	r2, #134	@ 0x86
 80212be:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80212c2:	ee07 3a90 	vmov	s15, r3
 80212c6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80212ca:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8021374 <__ieee754_rem_pio2f+0x258>
 80212ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80212d2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80212d6:	ed8d 7a03 	vstr	s14, [sp, #12]
 80212da:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80212de:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80212e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80212e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80212ea:	ed8d 7a04 	vstr	s14, [sp, #16]
 80212ee:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80212f2:	eef5 7a40 	vcmp.f32	s15, #0.0
 80212f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80212fa:	edcd 7a05 	vstr	s15, [sp, #20]
 80212fe:	d11e      	bne.n	802133e <__ieee754_rem_pio2f+0x222>
 8021300:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8021304:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021308:	bf0c      	ite	eq
 802130a:	2301      	moveq	r3, #1
 802130c:	2302      	movne	r3, #2
 802130e:	491a      	ldr	r1, [pc, #104]	@ (8021378 <__ieee754_rem_pio2f+0x25c>)
 8021310:	9101      	str	r1, [sp, #4]
 8021312:	2102      	movs	r1, #2
 8021314:	9100      	str	r1, [sp, #0]
 8021316:	a803      	add	r0, sp, #12
 8021318:	4621      	mov	r1, r4
 802131a:	f000 f837 	bl	802138c <__kernel_rem_pio2f>
 802131e:	2e00      	cmp	r6, #0
 8021320:	f6bf af2f 	bge.w	8021182 <__ieee754_rem_pio2f+0x66>
 8021324:	edd4 7a00 	vldr	s15, [r4]
 8021328:	eef1 7a67 	vneg.f32	s15, s15
 802132c:	edc4 7a00 	vstr	s15, [r4]
 8021330:	edd4 7a01 	vldr	s15, [r4, #4]
 8021334:	eef1 7a67 	vneg.f32	s15, s15
 8021338:	edc4 7a01 	vstr	s15, [r4, #4]
 802133c:	e782      	b.n	8021244 <__ieee754_rem_pio2f+0x128>
 802133e:	2303      	movs	r3, #3
 8021340:	e7e5      	b.n	802130e <__ieee754_rem_pio2f+0x1f2>
 8021342:	bf00      	nop
 8021344:	3f490fd8 	.word	0x3f490fd8
 8021348:	4016cbe3 	.word	0x4016cbe3
 802134c:	3fc90f80 	.word	0x3fc90f80
 8021350:	3fc90fd0 	.word	0x3fc90fd0
 8021354:	37354400 	.word	0x37354400
 8021358:	37354443 	.word	0x37354443
 802135c:	2e85a308 	.word	0x2e85a308
 8021360:	43490f80 	.word	0x43490f80
 8021364:	3f22f984 	.word	0x3f22f984
 8021368:	08024d90 	.word	0x08024d90
 802136c:	2e85a300 	.word	0x2e85a300
 8021370:	248d3132 	.word	0x248d3132
 8021374:	43800000 	.word	0x43800000
 8021378:	08024e10 	.word	0x08024e10

0802137c <fabsf>:
 802137c:	ee10 3a10 	vmov	r3, s0
 8021380:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021384:	ee00 3a10 	vmov	s0, r3
 8021388:	4770      	bx	lr
	...

0802138c <__kernel_rem_pio2f>:
 802138c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021390:	ed2d 8b04 	vpush	{d8-d9}
 8021394:	b0d9      	sub	sp, #356	@ 0x164
 8021396:	4690      	mov	r8, r2
 8021398:	9001      	str	r0, [sp, #4]
 802139a:	4ab9      	ldr	r2, [pc, #740]	@ (8021680 <__kernel_rem_pio2f+0x2f4>)
 802139c:	9866      	ldr	r0, [sp, #408]	@ 0x198
 802139e:	f118 0f04 	cmn.w	r8, #4
 80213a2:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 80213a6:	460f      	mov	r7, r1
 80213a8:	f103 3bff 	add.w	fp, r3, #4294967295
 80213ac:	db27      	blt.n	80213fe <__kernel_rem_pio2f+0x72>
 80213ae:	f1b8 0203 	subs.w	r2, r8, #3
 80213b2:	bf48      	it	mi
 80213b4:	f108 0204 	addmi.w	r2, r8, #4
 80213b8:	10d2      	asrs	r2, r2, #3
 80213ba:	1c55      	adds	r5, r2, #1
 80213bc:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 80213be:	ed9f 7ab4 	vldr	s14, [pc, #720]	@ 8021690 <__kernel_rem_pio2f+0x304>
 80213c2:	00e8      	lsls	r0, r5, #3
 80213c4:	eba2 060b 	sub.w	r6, r2, fp
 80213c8:	9002      	str	r0, [sp, #8]
 80213ca:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 80213ce:	eb0a 0c0b 	add.w	ip, sl, fp
 80213d2:	ac1c      	add	r4, sp, #112	@ 0x70
 80213d4:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 80213d8:	2000      	movs	r0, #0
 80213da:	4560      	cmp	r0, ip
 80213dc:	dd11      	ble.n	8021402 <__kernel_rem_pio2f+0x76>
 80213de:	a91c      	add	r1, sp, #112	@ 0x70
 80213e0:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 80213e4:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 80213e8:	f04f 0c00 	mov.w	ip, #0
 80213ec:	45d4      	cmp	ip, sl
 80213ee:	dc27      	bgt.n	8021440 <__kernel_rem_pio2f+0xb4>
 80213f0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80213f4:	eddf 7aa6 	vldr	s15, [pc, #664]	@ 8021690 <__kernel_rem_pio2f+0x304>
 80213f8:	4606      	mov	r6, r0
 80213fa:	2400      	movs	r4, #0
 80213fc:	e016      	b.n	802142c <__kernel_rem_pio2f+0xa0>
 80213fe:	2200      	movs	r2, #0
 8021400:	e7db      	b.n	80213ba <__kernel_rem_pio2f+0x2e>
 8021402:	42c6      	cmn	r6, r0
 8021404:	bf5d      	ittte	pl
 8021406:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 802140a:	ee07 1a90 	vmovpl	s15, r1
 802140e:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8021412:	eef0 7a47 	vmovmi.f32	s15, s14
 8021416:	ece4 7a01 	vstmia	r4!, {s15}
 802141a:	3001      	adds	r0, #1
 802141c:	e7dd      	b.n	80213da <__kernel_rem_pio2f+0x4e>
 802141e:	ecfe 6a01 	vldmia	lr!, {s13}
 8021422:	ed96 7a00 	vldr	s14, [r6]
 8021426:	eee6 7a87 	vfma.f32	s15, s13, s14
 802142a:	3401      	adds	r4, #1
 802142c:	455c      	cmp	r4, fp
 802142e:	f1a6 0604 	sub.w	r6, r6, #4
 8021432:	ddf4      	ble.n	802141e <__kernel_rem_pio2f+0x92>
 8021434:	ece9 7a01 	vstmia	r9!, {s15}
 8021438:	f10c 0c01 	add.w	ip, ip, #1
 802143c:	3004      	adds	r0, #4
 802143e:	e7d5      	b.n	80213ec <__kernel_rem_pio2f+0x60>
 8021440:	a908      	add	r1, sp, #32
 8021442:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8021446:	9104      	str	r1, [sp, #16]
 8021448:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802144a:	eddf 8a90 	vldr	s17, [pc, #576]	@ 802168c <__kernel_rem_pio2f+0x300>
 802144e:	ed9f 9a8e 	vldr	s18, [pc, #568]	@ 8021688 <__kernel_rem_pio2f+0x2fc>
 8021452:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8021456:	9203      	str	r2, [sp, #12]
 8021458:	4654      	mov	r4, sl
 802145a:	00a2      	lsls	r2, r4, #2
 802145c:	9205      	str	r2, [sp, #20]
 802145e:	aa58      	add	r2, sp, #352	@ 0x160
 8021460:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8021464:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8021468:	a944      	add	r1, sp, #272	@ 0x110
 802146a:	aa08      	add	r2, sp, #32
 802146c:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8021470:	4694      	mov	ip, r2
 8021472:	4626      	mov	r6, r4
 8021474:	2e00      	cmp	r6, #0
 8021476:	f1a0 0004 	sub.w	r0, r0, #4
 802147a:	dc4c      	bgt.n	8021516 <__kernel_rem_pio2f+0x18a>
 802147c:	4628      	mov	r0, r5
 802147e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8021482:	f000 f9f5 	bl	8021870 <scalbnf>
 8021486:	eeb0 8a40 	vmov.f32	s16, s0
 802148a:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 802148e:	ee28 0a00 	vmul.f32	s0, s16, s0
 8021492:	f000 fa53 	bl	802193c <floorf>
 8021496:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 802149a:	eea0 8a67 	vfms.f32	s16, s0, s15
 802149e:	2d00      	cmp	r5, #0
 80214a0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80214a4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80214a8:	ee17 9a90 	vmov	r9, s15
 80214ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80214b0:	ee38 8a67 	vsub.f32	s16, s16, s15
 80214b4:	dd41      	ble.n	802153a <__kernel_rem_pio2f+0x1ae>
 80214b6:	f104 3cff 	add.w	ip, r4, #4294967295
 80214ba:	a908      	add	r1, sp, #32
 80214bc:	f1c5 0e08 	rsb	lr, r5, #8
 80214c0:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 80214c4:	fa46 f00e 	asr.w	r0, r6, lr
 80214c8:	4481      	add	r9, r0
 80214ca:	fa00 f00e 	lsl.w	r0, r0, lr
 80214ce:	1a36      	subs	r6, r6, r0
 80214d0:	f1c5 0007 	rsb	r0, r5, #7
 80214d4:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 80214d8:	4106      	asrs	r6, r0
 80214da:	2e00      	cmp	r6, #0
 80214dc:	dd3c      	ble.n	8021558 <__kernel_rem_pio2f+0x1cc>
 80214de:	f04f 0e00 	mov.w	lr, #0
 80214e2:	f109 0901 	add.w	r9, r9, #1
 80214e6:	4670      	mov	r0, lr
 80214e8:	4574      	cmp	r4, lr
 80214ea:	dc68      	bgt.n	80215be <__kernel_rem_pio2f+0x232>
 80214ec:	2d00      	cmp	r5, #0
 80214ee:	dd03      	ble.n	80214f8 <__kernel_rem_pio2f+0x16c>
 80214f0:	2d01      	cmp	r5, #1
 80214f2:	d074      	beq.n	80215de <__kernel_rem_pio2f+0x252>
 80214f4:	2d02      	cmp	r5, #2
 80214f6:	d07d      	beq.n	80215f4 <__kernel_rem_pio2f+0x268>
 80214f8:	2e02      	cmp	r6, #2
 80214fa:	d12d      	bne.n	8021558 <__kernel_rem_pio2f+0x1cc>
 80214fc:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8021500:	ee30 8a48 	vsub.f32	s16, s0, s16
 8021504:	b340      	cbz	r0, 8021558 <__kernel_rem_pio2f+0x1cc>
 8021506:	4628      	mov	r0, r5
 8021508:	9306      	str	r3, [sp, #24]
 802150a:	f000 f9b1 	bl	8021870 <scalbnf>
 802150e:	9b06      	ldr	r3, [sp, #24]
 8021510:	ee38 8a40 	vsub.f32	s16, s16, s0
 8021514:	e020      	b.n	8021558 <__kernel_rem_pio2f+0x1cc>
 8021516:	ee60 7a28 	vmul.f32	s15, s0, s17
 802151a:	3e01      	subs	r6, #1
 802151c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8021520:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021524:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8021528:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802152c:	ecac 0a01 	vstmia	ip!, {s0}
 8021530:	ed90 0a00 	vldr	s0, [r0]
 8021534:	ee37 0a80 	vadd.f32	s0, s15, s0
 8021538:	e79c      	b.n	8021474 <__kernel_rem_pio2f+0xe8>
 802153a:	d105      	bne.n	8021548 <__kernel_rem_pio2f+0x1bc>
 802153c:	1e60      	subs	r0, r4, #1
 802153e:	a908      	add	r1, sp, #32
 8021540:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8021544:	11f6      	asrs	r6, r6, #7
 8021546:	e7c8      	b.n	80214da <__kernel_rem_pio2f+0x14e>
 8021548:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802154c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8021550:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021554:	da31      	bge.n	80215ba <__kernel_rem_pio2f+0x22e>
 8021556:	2600      	movs	r6, #0
 8021558:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802155c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021560:	f040 8098 	bne.w	8021694 <__kernel_rem_pio2f+0x308>
 8021564:	1e60      	subs	r0, r4, #1
 8021566:	2200      	movs	r2, #0
 8021568:	4550      	cmp	r0, sl
 802156a:	da4b      	bge.n	8021604 <__kernel_rem_pio2f+0x278>
 802156c:	2a00      	cmp	r2, #0
 802156e:	d065      	beq.n	802163c <__kernel_rem_pio2f+0x2b0>
 8021570:	3c01      	subs	r4, #1
 8021572:	ab08      	add	r3, sp, #32
 8021574:	3d08      	subs	r5, #8
 8021576:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802157a:	2b00      	cmp	r3, #0
 802157c:	d0f8      	beq.n	8021570 <__kernel_rem_pio2f+0x1e4>
 802157e:	4628      	mov	r0, r5
 8021580:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8021584:	f000 f974 	bl	8021870 <scalbnf>
 8021588:	1c63      	adds	r3, r4, #1
 802158a:	aa44      	add	r2, sp, #272	@ 0x110
 802158c:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 802168c <__kernel_rem_pio2f+0x300>
 8021590:	0099      	lsls	r1, r3, #2
 8021592:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8021596:	4623      	mov	r3, r4
 8021598:	2b00      	cmp	r3, #0
 802159a:	f280 80a9 	bge.w	80216f0 <__kernel_rem_pio2f+0x364>
 802159e:	4623      	mov	r3, r4
 80215a0:	2b00      	cmp	r3, #0
 80215a2:	f2c0 80c7 	blt.w	8021734 <__kernel_rem_pio2f+0x3a8>
 80215a6:	aa44      	add	r2, sp, #272	@ 0x110
 80215a8:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80215ac:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8021684 <__kernel_rem_pio2f+0x2f8>
 80215b0:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8021690 <__kernel_rem_pio2f+0x304>
 80215b4:	2000      	movs	r0, #0
 80215b6:	1ae2      	subs	r2, r4, r3
 80215b8:	e0b1      	b.n	802171e <__kernel_rem_pio2f+0x392>
 80215ba:	2602      	movs	r6, #2
 80215bc:	e78f      	b.n	80214de <__kernel_rem_pio2f+0x152>
 80215be:	f852 1b04 	ldr.w	r1, [r2], #4
 80215c2:	b948      	cbnz	r0, 80215d8 <__kernel_rem_pio2f+0x24c>
 80215c4:	b121      	cbz	r1, 80215d0 <__kernel_rem_pio2f+0x244>
 80215c6:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 80215ca:	f842 1c04 	str.w	r1, [r2, #-4]
 80215ce:	2101      	movs	r1, #1
 80215d0:	f10e 0e01 	add.w	lr, lr, #1
 80215d4:	4608      	mov	r0, r1
 80215d6:	e787      	b.n	80214e8 <__kernel_rem_pio2f+0x15c>
 80215d8:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 80215dc:	e7f5      	b.n	80215ca <__kernel_rem_pio2f+0x23e>
 80215de:	f104 3cff 	add.w	ip, r4, #4294967295
 80215e2:	aa08      	add	r2, sp, #32
 80215e4:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80215e8:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80215ec:	a908      	add	r1, sp, #32
 80215ee:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 80215f2:	e781      	b.n	80214f8 <__kernel_rem_pio2f+0x16c>
 80215f4:	f104 3cff 	add.w	ip, r4, #4294967295
 80215f8:	aa08      	add	r2, sp, #32
 80215fa:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80215fe:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8021602:	e7f3      	b.n	80215ec <__kernel_rem_pio2f+0x260>
 8021604:	a908      	add	r1, sp, #32
 8021606:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 802160a:	3801      	subs	r0, #1
 802160c:	430a      	orrs	r2, r1
 802160e:	e7ab      	b.n	8021568 <__kernel_rem_pio2f+0x1dc>
 8021610:	3201      	adds	r2, #1
 8021612:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 8021616:	2e00      	cmp	r6, #0
 8021618:	d0fa      	beq.n	8021610 <__kernel_rem_pio2f+0x284>
 802161a:	9905      	ldr	r1, [sp, #20]
 802161c:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 8021620:	eb0d 0001 	add.w	r0, sp, r1
 8021624:	18e6      	adds	r6, r4, r3
 8021626:	a91c      	add	r1, sp, #112	@ 0x70
 8021628:	f104 0c01 	add.w	ip, r4, #1
 802162c:	384c      	subs	r0, #76	@ 0x4c
 802162e:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8021632:	4422      	add	r2, r4
 8021634:	4562      	cmp	r2, ip
 8021636:	da04      	bge.n	8021642 <__kernel_rem_pio2f+0x2b6>
 8021638:	4614      	mov	r4, r2
 802163a:	e70e      	b.n	802145a <__kernel_rem_pio2f+0xce>
 802163c:	9804      	ldr	r0, [sp, #16]
 802163e:	2201      	movs	r2, #1
 8021640:	e7e7      	b.n	8021612 <__kernel_rem_pio2f+0x286>
 8021642:	9903      	ldr	r1, [sp, #12]
 8021644:	f8dd e004 	ldr.w	lr, [sp, #4]
 8021648:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 802164c:	9105      	str	r1, [sp, #20]
 802164e:	ee07 1a90 	vmov	s15, r1
 8021652:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021656:	2400      	movs	r4, #0
 8021658:	ece6 7a01 	vstmia	r6!, {s15}
 802165c:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8021690 <__kernel_rem_pio2f+0x304>
 8021660:	46b1      	mov	r9, r6
 8021662:	455c      	cmp	r4, fp
 8021664:	dd04      	ble.n	8021670 <__kernel_rem_pio2f+0x2e4>
 8021666:	ece0 7a01 	vstmia	r0!, {s15}
 802166a:	f10c 0c01 	add.w	ip, ip, #1
 802166e:	e7e1      	b.n	8021634 <__kernel_rem_pio2f+0x2a8>
 8021670:	ecfe 6a01 	vldmia	lr!, {s13}
 8021674:	ed39 7a01 	vldmdb	r9!, {s14}
 8021678:	3401      	adds	r4, #1
 802167a:	eee6 7a87 	vfma.f32	s15, s13, s14
 802167e:	e7f0      	b.n	8021662 <__kernel_rem_pio2f+0x2d6>
 8021680:	08025154 	.word	0x08025154
 8021684:	08025128 	.word	0x08025128
 8021688:	43800000 	.word	0x43800000
 802168c:	3b800000 	.word	0x3b800000
 8021690:	00000000 	.word	0x00000000
 8021694:	9b02      	ldr	r3, [sp, #8]
 8021696:	eeb0 0a48 	vmov.f32	s0, s16
 802169a:	eba3 0008 	sub.w	r0, r3, r8
 802169e:	f000 f8e7 	bl	8021870 <scalbnf>
 80216a2:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8021688 <__kernel_rem_pio2f+0x2fc>
 80216a6:	eeb4 0ac7 	vcmpe.f32	s0, s14
 80216aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80216ae:	db19      	blt.n	80216e4 <__kernel_rem_pio2f+0x358>
 80216b0:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 802168c <__kernel_rem_pio2f+0x300>
 80216b4:	ee60 7a27 	vmul.f32	s15, s0, s15
 80216b8:	aa08      	add	r2, sp, #32
 80216ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80216be:	3508      	adds	r5, #8
 80216c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80216c4:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80216c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80216cc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80216d0:	ee10 3a10 	vmov	r3, s0
 80216d4:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80216d8:	ee17 3a90 	vmov	r3, s15
 80216dc:	3401      	adds	r4, #1
 80216de:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80216e2:	e74c      	b.n	802157e <__kernel_rem_pio2f+0x1f2>
 80216e4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80216e8:	aa08      	add	r2, sp, #32
 80216ea:	ee10 3a10 	vmov	r3, s0
 80216ee:	e7f6      	b.n	80216de <__kernel_rem_pio2f+0x352>
 80216f0:	a808      	add	r0, sp, #32
 80216f2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80216f6:	9001      	str	r0, [sp, #4]
 80216f8:	ee07 0a90 	vmov	s15, r0
 80216fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021700:	3b01      	subs	r3, #1
 8021702:	ee67 7a80 	vmul.f32	s15, s15, s0
 8021706:	ee20 0a07 	vmul.f32	s0, s0, s14
 802170a:	ed62 7a01 	vstmdb	r2!, {s15}
 802170e:	e743      	b.n	8021598 <__kernel_rem_pio2f+0x20c>
 8021710:	ecfc 6a01 	vldmia	ip!, {s13}
 8021714:	ecb5 7a01 	vldmia	r5!, {s14}
 8021718:	eee6 7a87 	vfma.f32	s15, s13, s14
 802171c:	3001      	adds	r0, #1
 802171e:	4550      	cmp	r0, sl
 8021720:	dc01      	bgt.n	8021726 <__kernel_rem_pio2f+0x39a>
 8021722:	4282      	cmp	r2, r0
 8021724:	daf4      	bge.n	8021710 <__kernel_rem_pio2f+0x384>
 8021726:	a858      	add	r0, sp, #352	@ 0x160
 8021728:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802172c:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 8021730:	3b01      	subs	r3, #1
 8021732:	e735      	b.n	80215a0 <__kernel_rem_pio2f+0x214>
 8021734:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8021736:	2b02      	cmp	r3, #2
 8021738:	dc09      	bgt.n	802174e <__kernel_rem_pio2f+0x3c2>
 802173a:	2b00      	cmp	r3, #0
 802173c:	dc2b      	bgt.n	8021796 <__kernel_rem_pio2f+0x40a>
 802173e:	d044      	beq.n	80217ca <__kernel_rem_pio2f+0x43e>
 8021740:	f009 0007 	and.w	r0, r9, #7
 8021744:	b059      	add	sp, #356	@ 0x164
 8021746:	ecbd 8b04 	vpop	{d8-d9}
 802174a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802174e:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8021750:	2b03      	cmp	r3, #3
 8021752:	d1f5      	bne.n	8021740 <__kernel_rem_pio2f+0x3b4>
 8021754:	aa30      	add	r2, sp, #192	@ 0xc0
 8021756:	1f0b      	subs	r3, r1, #4
 8021758:	4413      	add	r3, r2
 802175a:	461a      	mov	r2, r3
 802175c:	4620      	mov	r0, r4
 802175e:	2800      	cmp	r0, #0
 8021760:	f1a2 0204 	sub.w	r2, r2, #4
 8021764:	dc52      	bgt.n	802180c <__kernel_rem_pio2f+0x480>
 8021766:	4622      	mov	r2, r4
 8021768:	2a01      	cmp	r2, #1
 802176a:	f1a3 0304 	sub.w	r3, r3, #4
 802176e:	dc5d      	bgt.n	802182c <__kernel_rem_pio2f+0x4a0>
 8021770:	ab30      	add	r3, sp, #192	@ 0xc0
 8021772:	ed5f 7a39 	vldr	s15, [pc, #-228]	@ 8021690 <__kernel_rem_pio2f+0x304>
 8021776:	440b      	add	r3, r1
 8021778:	2c01      	cmp	r4, #1
 802177a:	dc67      	bgt.n	802184c <__kernel_rem_pio2f+0x4c0>
 802177c:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8021780:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8021784:	2e00      	cmp	r6, #0
 8021786:	d167      	bne.n	8021858 <__kernel_rem_pio2f+0x4cc>
 8021788:	edc7 6a00 	vstr	s13, [r7]
 802178c:	ed87 7a01 	vstr	s14, [r7, #4]
 8021790:	edc7 7a02 	vstr	s15, [r7, #8]
 8021794:	e7d4      	b.n	8021740 <__kernel_rem_pio2f+0x3b4>
 8021796:	ab30      	add	r3, sp, #192	@ 0xc0
 8021798:	ed1f 7a43 	vldr	s14, [pc, #-268]	@ 8021690 <__kernel_rem_pio2f+0x304>
 802179c:	440b      	add	r3, r1
 802179e:	4622      	mov	r2, r4
 80217a0:	2a00      	cmp	r2, #0
 80217a2:	da24      	bge.n	80217ee <__kernel_rem_pio2f+0x462>
 80217a4:	b34e      	cbz	r6, 80217fa <__kernel_rem_pio2f+0x46e>
 80217a6:	eef1 7a47 	vneg.f32	s15, s14
 80217aa:	edc7 7a00 	vstr	s15, [r7]
 80217ae:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 80217b2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80217b6:	aa31      	add	r2, sp, #196	@ 0xc4
 80217b8:	2301      	movs	r3, #1
 80217ba:	429c      	cmp	r4, r3
 80217bc:	da20      	bge.n	8021800 <__kernel_rem_pio2f+0x474>
 80217be:	b10e      	cbz	r6, 80217c4 <__kernel_rem_pio2f+0x438>
 80217c0:	eef1 7a67 	vneg.f32	s15, s15
 80217c4:	edc7 7a01 	vstr	s15, [r7, #4]
 80217c8:	e7ba      	b.n	8021740 <__kernel_rem_pio2f+0x3b4>
 80217ca:	ab30      	add	r3, sp, #192	@ 0xc0
 80217cc:	ed5f 7a50 	vldr	s15, [pc, #-320]	@ 8021690 <__kernel_rem_pio2f+0x304>
 80217d0:	440b      	add	r3, r1
 80217d2:	2c00      	cmp	r4, #0
 80217d4:	da05      	bge.n	80217e2 <__kernel_rem_pio2f+0x456>
 80217d6:	b10e      	cbz	r6, 80217dc <__kernel_rem_pio2f+0x450>
 80217d8:	eef1 7a67 	vneg.f32	s15, s15
 80217dc:	edc7 7a00 	vstr	s15, [r7]
 80217e0:	e7ae      	b.n	8021740 <__kernel_rem_pio2f+0x3b4>
 80217e2:	ed33 7a01 	vldmdb	r3!, {s14}
 80217e6:	3c01      	subs	r4, #1
 80217e8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80217ec:	e7f1      	b.n	80217d2 <__kernel_rem_pio2f+0x446>
 80217ee:	ed73 7a01 	vldmdb	r3!, {s15}
 80217f2:	3a01      	subs	r2, #1
 80217f4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80217f8:	e7d2      	b.n	80217a0 <__kernel_rem_pio2f+0x414>
 80217fa:	eef0 7a47 	vmov.f32	s15, s14
 80217fe:	e7d4      	b.n	80217aa <__kernel_rem_pio2f+0x41e>
 8021800:	ecb2 7a01 	vldmia	r2!, {s14}
 8021804:	3301      	adds	r3, #1
 8021806:	ee77 7a87 	vadd.f32	s15, s15, s14
 802180a:	e7d6      	b.n	80217ba <__kernel_rem_pio2f+0x42e>
 802180c:	edd2 7a00 	vldr	s15, [r2]
 8021810:	edd2 6a01 	vldr	s13, [r2, #4]
 8021814:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8021818:	3801      	subs	r0, #1
 802181a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802181e:	ed82 7a00 	vstr	s14, [r2]
 8021822:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8021826:	edc2 7a01 	vstr	s15, [r2, #4]
 802182a:	e798      	b.n	802175e <__kernel_rem_pio2f+0x3d2>
 802182c:	edd3 7a00 	vldr	s15, [r3]
 8021830:	edd3 6a01 	vldr	s13, [r3, #4]
 8021834:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8021838:	3a01      	subs	r2, #1
 802183a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802183e:	ed83 7a00 	vstr	s14, [r3]
 8021842:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8021846:	edc3 7a01 	vstr	s15, [r3, #4]
 802184a:	e78d      	b.n	8021768 <__kernel_rem_pio2f+0x3dc>
 802184c:	ed33 7a01 	vldmdb	r3!, {s14}
 8021850:	3c01      	subs	r4, #1
 8021852:	ee77 7a87 	vadd.f32	s15, s15, s14
 8021856:	e78f      	b.n	8021778 <__kernel_rem_pio2f+0x3ec>
 8021858:	eef1 6a66 	vneg.f32	s13, s13
 802185c:	eeb1 7a47 	vneg.f32	s14, s14
 8021860:	edc7 6a00 	vstr	s13, [r7]
 8021864:	ed87 7a01 	vstr	s14, [r7, #4]
 8021868:	eef1 7a67 	vneg.f32	s15, s15
 802186c:	e790      	b.n	8021790 <__kernel_rem_pio2f+0x404>
 802186e:	bf00      	nop

08021870 <scalbnf>:
 8021870:	ee10 3a10 	vmov	r3, s0
 8021874:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8021878:	d02b      	beq.n	80218d2 <scalbnf+0x62>
 802187a:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802187e:	d302      	bcc.n	8021886 <scalbnf+0x16>
 8021880:	ee30 0a00 	vadd.f32	s0, s0, s0
 8021884:	4770      	bx	lr
 8021886:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 802188a:	d123      	bne.n	80218d4 <scalbnf+0x64>
 802188c:	4b24      	ldr	r3, [pc, #144]	@ (8021920 <scalbnf+0xb0>)
 802188e:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8021924 <scalbnf+0xb4>
 8021892:	4298      	cmp	r0, r3
 8021894:	ee20 0a27 	vmul.f32	s0, s0, s15
 8021898:	db17      	blt.n	80218ca <scalbnf+0x5a>
 802189a:	ee10 3a10 	vmov	r3, s0
 802189e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80218a2:	3a19      	subs	r2, #25
 80218a4:	f24c 3150 	movw	r1, #50000	@ 0xc350
 80218a8:	4288      	cmp	r0, r1
 80218aa:	dd15      	ble.n	80218d8 <scalbnf+0x68>
 80218ac:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8021928 <scalbnf+0xb8>
 80218b0:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 802192c <scalbnf+0xbc>
 80218b4:	ee10 3a10 	vmov	r3, s0
 80218b8:	eeb0 7a67 	vmov.f32	s14, s15
 80218bc:	2b00      	cmp	r3, #0
 80218be:	bfb8      	it	lt
 80218c0:	eef0 7a66 	vmovlt.f32	s15, s13
 80218c4:	ee27 0a87 	vmul.f32	s0, s15, s14
 80218c8:	4770      	bx	lr
 80218ca:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8021930 <scalbnf+0xc0>
 80218ce:	ee27 0a80 	vmul.f32	s0, s15, s0
 80218d2:	4770      	bx	lr
 80218d4:	0dd2      	lsrs	r2, r2, #23
 80218d6:	e7e5      	b.n	80218a4 <scalbnf+0x34>
 80218d8:	4410      	add	r0, r2
 80218da:	28fe      	cmp	r0, #254	@ 0xfe
 80218dc:	dce6      	bgt.n	80218ac <scalbnf+0x3c>
 80218de:	2800      	cmp	r0, #0
 80218e0:	dd06      	ble.n	80218f0 <scalbnf+0x80>
 80218e2:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80218e6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80218ea:	ee00 3a10 	vmov	s0, r3
 80218ee:	4770      	bx	lr
 80218f0:	f110 0f16 	cmn.w	r0, #22
 80218f4:	da09      	bge.n	802190a <scalbnf+0x9a>
 80218f6:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8021930 <scalbnf+0xc0>
 80218fa:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8021934 <scalbnf+0xc4>
 80218fe:	ee10 3a10 	vmov	r3, s0
 8021902:	eeb0 7a67 	vmov.f32	s14, s15
 8021906:	2b00      	cmp	r3, #0
 8021908:	e7d9      	b.n	80218be <scalbnf+0x4e>
 802190a:	3019      	adds	r0, #25
 802190c:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8021910:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8021914:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8021938 <scalbnf+0xc8>
 8021918:	ee07 3a90 	vmov	s15, r3
 802191c:	e7d7      	b.n	80218ce <scalbnf+0x5e>
 802191e:	bf00      	nop
 8021920:	ffff3cb0 	.word	0xffff3cb0
 8021924:	4c000000 	.word	0x4c000000
 8021928:	7149f2ca 	.word	0x7149f2ca
 802192c:	f149f2ca 	.word	0xf149f2ca
 8021930:	0da24260 	.word	0x0da24260
 8021934:	8da24260 	.word	0x8da24260
 8021938:	33000000 	.word	0x33000000

0802193c <floorf>:
 802193c:	ee10 3a10 	vmov	r3, s0
 8021940:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8021944:	3a7f      	subs	r2, #127	@ 0x7f
 8021946:	2a16      	cmp	r2, #22
 8021948:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802194c:	dc2b      	bgt.n	80219a6 <floorf+0x6a>
 802194e:	2a00      	cmp	r2, #0
 8021950:	da12      	bge.n	8021978 <floorf+0x3c>
 8021952:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80219b8 <floorf+0x7c>
 8021956:	ee30 0a27 	vadd.f32	s0, s0, s15
 802195a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802195e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021962:	dd06      	ble.n	8021972 <floorf+0x36>
 8021964:	2b00      	cmp	r3, #0
 8021966:	da24      	bge.n	80219b2 <floorf+0x76>
 8021968:	2900      	cmp	r1, #0
 802196a:	4b14      	ldr	r3, [pc, #80]	@ (80219bc <floorf+0x80>)
 802196c:	bf08      	it	eq
 802196e:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 8021972:	ee00 3a10 	vmov	s0, r3
 8021976:	4770      	bx	lr
 8021978:	4911      	ldr	r1, [pc, #68]	@ (80219c0 <floorf+0x84>)
 802197a:	4111      	asrs	r1, r2
 802197c:	420b      	tst	r3, r1
 802197e:	d0fa      	beq.n	8021976 <floorf+0x3a>
 8021980:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 80219b8 <floorf+0x7c>
 8021984:	ee30 0a27 	vadd.f32	s0, s0, s15
 8021988:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802198c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021990:	ddef      	ble.n	8021972 <floorf+0x36>
 8021992:	2b00      	cmp	r3, #0
 8021994:	bfbe      	ittt	lt
 8021996:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 802199a:	fa40 f202 	asrlt.w	r2, r0, r2
 802199e:	189b      	addlt	r3, r3, r2
 80219a0:	ea23 0301 	bic.w	r3, r3, r1
 80219a4:	e7e5      	b.n	8021972 <floorf+0x36>
 80219a6:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 80219aa:	d3e4      	bcc.n	8021976 <floorf+0x3a>
 80219ac:	ee30 0a00 	vadd.f32	s0, s0, s0
 80219b0:	4770      	bx	lr
 80219b2:	2300      	movs	r3, #0
 80219b4:	e7dd      	b.n	8021972 <floorf+0x36>
 80219b6:	bf00      	nop
 80219b8:	7149f2ca 	.word	0x7149f2ca
 80219bc:	bf800000 	.word	0xbf800000
 80219c0:	007fffff 	.word	0x007fffff

080219c4 <abort>:
 80219c4:	b508      	push	{r3, lr}
 80219c6:	2006      	movs	r0, #6
 80219c8:	f000 faf6 	bl	8021fb8 <raise>
 80219cc:	2001      	movs	r0, #1
 80219ce:	f7df fc53 	bl	8001278 <_exit>
	...

080219d4 <__assert_func>:
 80219d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80219d6:	4614      	mov	r4, r2
 80219d8:	461a      	mov	r2, r3
 80219da:	4b09      	ldr	r3, [pc, #36]	@ (8021a00 <__assert_func+0x2c>)
 80219dc:	681b      	ldr	r3, [r3, #0]
 80219de:	4605      	mov	r5, r0
 80219e0:	68d8      	ldr	r0, [r3, #12]
 80219e2:	b954      	cbnz	r4, 80219fa <__assert_func+0x26>
 80219e4:	4b07      	ldr	r3, [pc, #28]	@ (8021a04 <__assert_func+0x30>)
 80219e6:	461c      	mov	r4, r3
 80219e8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80219ec:	9100      	str	r1, [sp, #0]
 80219ee:	462b      	mov	r3, r5
 80219f0:	4905      	ldr	r1, [pc, #20]	@ (8021a08 <__assert_func+0x34>)
 80219f2:	f000 f983 	bl	8021cfc <fiprintf>
 80219f6:	f7ff ffe5 	bl	80219c4 <abort>
 80219fa:	4b04      	ldr	r3, [pc, #16]	@ (8021a0c <__assert_func+0x38>)
 80219fc:	e7f4      	b.n	80219e8 <__assert_func+0x14>
 80219fe:	bf00      	nop
 8021a00:	200000d0 	.word	0x200000d0
 8021a04:	0802519b 	.word	0x0802519b
 8021a08:	0802516d 	.word	0x0802516d
 8021a0c:	08025160 	.word	0x08025160

08021a10 <atexit>:
 8021a10:	2300      	movs	r3, #0
 8021a12:	4601      	mov	r1, r0
 8021a14:	461a      	mov	r2, r3
 8021a16:	4618      	mov	r0, r3
 8021a18:	f000 bb7c 	b.w	8022114 <__register_exitproc>

08021a1c <malloc>:
 8021a1c:	4b02      	ldr	r3, [pc, #8]	@ (8021a28 <malloc+0xc>)
 8021a1e:	4601      	mov	r1, r0
 8021a20:	6818      	ldr	r0, [r3, #0]
 8021a22:	f000 b82d 	b.w	8021a80 <_malloc_r>
 8021a26:	bf00      	nop
 8021a28:	200000d0 	.word	0x200000d0

08021a2c <free>:
 8021a2c:	4b02      	ldr	r3, [pc, #8]	@ (8021a38 <free+0xc>)
 8021a2e:	4601      	mov	r1, r0
 8021a30:	6818      	ldr	r0, [r3, #0]
 8021a32:	f000 bbcb 	b.w	80221cc <_free_r>
 8021a36:	bf00      	nop
 8021a38:	200000d0 	.word	0x200000d0

08021a3c <sbrk_aligned>:
 8021a3c:	b570      	push	{r4, r5, r6, lr}
 8021a3e:	4e0f      	ldr	r6, [pc, #60]	@ (8021a7c <sbrk_aligned+0x40>)
 8021a40:	460c      	mov	r4, r1
 8021a42:	6831      	ldr	r1, [r6, #0]
 8021a44:	4605      	mov	r5, r0
 8021a46:	b911      	cbnz	r1, 8021a4e <sbrk_aligned+0x12>
 8021a48:	f000 fb06 	bl	8022058 <_sbrk_r>
 8021a4c:	6030      	str	r0, [r6, #0]
 8021a4e:	4621      	mov	r1, r4
 8021a50:	4628      	mov	r0, r5
 8021a52:	f000 fb01 	bl	8022058 <_sbrk_r>
 8021a56:	1c43      	adds	r3, r0, #1
 8021a58:	d103      	bne.n	8021a62 <sbrk_aligned+0x26>
 8021a5a:	f04f 34ff 	mov.w	r4, #4294967295
 8021a5e:	4620      	mov	r0, r4
 8021a60:	bd70      	pop	{r4, r5, r6, pc}
 8021a62:	1cc4      	adds	r4, r0, #3
 8021a64:	f024 0403 	bic.w	r4, r4, #3
 8021a68:	42a0      	cmp	r0, r4
 8021a6a:	d0f8      	beq.n	8021a5e <sbrk_aligned+0x22>
 8021a6c:	1a21      	subs	r1, r4, r0
 8021a6e:	4628      	mov	r0, r5
 8021a70:	f000 faf2 	bl	8022058 <_sbrk_r>
 8021a74:	3001      	adds	r0, #1
 8021a76:	d1f2      	bne.n	8021a5e <sbrk_aligned+0x22>
 8021a78:	e7ef      	b.n	8021a5a <sbrk_aligned+0x1e>
 8021a7a:	bf00      	nop
 8021a7c:	200174c8 	.word	0x200174c8

08021a80 <_malloc_r>:
 8021a80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021a84:	1ccd      	adds	r5, r1, #3
 8021a86:	f025 0503 	bic.w	r5, r5, #3
 8021a8a:	3508      	adds	r5, #8
 8021a8c:	2d0c      	cmp	r5, #12
 8021a8e:	bf38      	it	cc
 8021a90:	250c      	movcc	r5, #12
 8021a92:	2d00      	cmp	r5, #0
 8021a94:	4606      	mov	r6, r0
 8021a96:	db01      	blt.n	8021a9c <_malloc_r+0x1c>
 8021a98:	42a9      	cmp	r1, r5
 8021a9a:	d904      	bls.n	8021aa6 <_malloc_r+0x26>
 8021a9c:	230c      	movs	r3, #12
 8021a9e:	6033      	str	r3, [r6, #0]
 8021aa0:	2000      	movs	r0, #0
 8021aa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021aa6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8021b7c <_malloc_r+0xfc>
 8021aaa:	f000 f869 	bl	8021b80 <__malloc_lock>
 8021aae:	f8d8 3000 	ldr.w	r3, [r8]
 8021ab2:	461c      	mov	r4, r3
 8021ab4:	bb44      	cbnz	r4, 8021b08 <_malloc_r+0x88>
 8021ab6:	4629      	mov	r1, r5
 8021ab8:	4630      	mov	r0, r6
 8021aba:	f7ff ffbf 	bl	8021a3c <sbrk_aligned>
 8021abe:	1c43      	adds	r3, r0, #1
 8021ac0:	4604      	mov	r4, r0
 8021ac2:	d158      	bne.n	8021b76 <_malloc_r+0xf6>
 8021ac4:	f8d8 4000 	ldr.w	r4, [r8]
 8021ac8:	4627      	mov	r7, r4
 8021aca:	2f00      	cmp	r7, #0
 8021acc:	d143      	bne.n	8021b56 <_malloc_r+0xd6>
 8021ace:	2c00      	cmp	r4, #0
 8021ad0:	d04b      	beq.n	8021b6a <_malloc_r+0xea>
 8021ad2:	6823      	ldr	r3, [r4, #0]
 8021ad4:	4639      	mov	r1, r7
 8021ad6:	4630      	mov	r0, r6
 8021ad8:	eb04 0903 	add.w	r9, r4, r3
 8021adc:	f000 fabc 	bl	8022058 <_sbrk_r>
 8021ae0:	4581      	cmp	r9, r0
 8021ae2:	d142      	bne.n	8021b6a <_malloc_r+0xea>
 8021ae4:	6821      	ldr	r1, [r4, #0]
 8021ae6:	1a6d      	subs	r5, r5, r1
 8021ae8:	4629      	mov	r1, r5
 8021aea:	4630      	mov	r0, r6
 8021aec:	f7ff ffa6 	bl	8021a3c <sbrk_aligned>
 8021af0:	3001      	adds	r0, #1
 8021af2:	d03a      	beq.n	8021b6a <_malloc_r+0xea>
 8021af4:	6823      	ldr	r3, [r4, #0]
 8021af6:	442b      	add	r3, r5
 8021af8:	6023      	str	r3, [r4, #0]
 8021afa:	f8d8 3000 	ldr.w	r3, [r8]
 8021afe:	685a      	ldr	r2, [r3, #4]
 8021b00:	bb62      	cbnz	r2, 8021b5c <_malloc_r+0xdc>
 8021b02:	f8c8 7000 	str.w	r7, [r8]
 8021b06:	e00f      	b.n	8021b28 <_malloc_r+0xa8>
 8021b08:	6822      	ldr	r2, [r4, #0]
 8021b0a:	1b52      	subs	r2, r2, r5
 8021b0c:	d420      	bmi.n	8021b50 <_malloc_r+0xd0>
 8021b0e:	2a0b      	cmp	r2, #11
 8021b10:	d917      	bls.n	8021b42 <_malloc_r+0xc2>
 8021b12:	1961      	adds	r1, r4, r5
 8021b14:	42a3      	cmp	r3, r4
 8021b16:	6025      	str	r5, [r4, #0]
 8021b18:	bf18      	it	ne
 8021b1a:	6059      	strne	r1, [r3, #4]
 8021b1c:	6863      	ldr	r3, [r4, #4]
 8021b1e:	bf08      	it	eq
 8021b20:	f8c8 1000 	streq.w	r1, [r8]
 8021b24:	5162      	str	r2, [r4, r5]
 8021b26:	604b      	str	r3, [r1, #4]
 8021b28:	4630      	mov	r0, r6
 8021b2a:	f000 f82f 	bl	8021b8c <__malloc_unlock>
 8021b2e:	f104 000b 	add.w	r0, r4, #11
 8021b32:	1d23      	adds	r3, r4, #4
 8021b34:	f020 0007 	bic.w	r0, r0, #7
 8021b38:	1ac2      	subs	r2, r0, r3
 8021b3a:	bf1c      	itt	ne
 8021b3c:	1a1b      	subne	r3, r3, r0
 8021b3e:	50a3      	strne	r3, [r4, r2]
 8021b40:	e7af      	b.n	8021aa2 <_malloc_r+0x22>
 8021b42:	6862      	ldr	r2, [r4, #4]
 8021b44:	42a3      	cmp	r3, r4
 8021b46:	bf0c      	ite	eq
 8021b48:	f8c8 2000 	streq.w	r2, [r8]
 8021b4c:	605a      	strne	r2, [r3, #4]
 8021b4e:	e7eb      	b.n	8021b28 <_malloc_r+0xa8>
 8021b50:	4623      	mov	r3, r4
 8021b52:	6864      	ldr	r4, [r4, #4]
 8021b54:	e7ae      	b.n	8021ab4 <_malloc_r+0x34>
 8021b56:	463c      	mov	r4, r7
 8021b58:	687f      	ldr	r7, [r7, #4]
 8021b5a:	e7b6      	b.n	8021aca <_malloc_r+0x4a>
 8021b5c:	461a      	mov	r2, r3
 8021b5e:	685b      	ldr	r3, [r3, #4]
 8021b60:	42a3      	cmp	r3, r4
 8021b62:	d1fb      	bne.n	8021b5c <_malloc_r+0xdc>
 8021b64:	2300      	movs	r3, #0
 8021b66:	6053      	str	r3, [r2, #4]
 8021b68:	e7de      	b.n	8021b28 <_malloc_r+0xa8>
 8021b6a:	230c      	movs	r3, #12
 8021b6c:	6033      	str	r3, [r6, #0]
 8021b6e:	4630      	mov	r0, r6
 8021b70:	f000 f80c 	bl	8021b8c <__malloc_unlock>
 8021b74:	e794      	b.n	8021aa0 <_malloc_r+0x20>
 8021b76:	6005      	str	r5, [r0, #0]
 8021b78:	e7d6      	b.n	8021b28 <_malloc_r+0xa8>
 8021b7a:	bf00      	nop
 8021b7c:	200174cc 	.word	0x200174cc

08021b80 <__malloc_lock>:
 8021b80:	4801      	ldr	r0, [pc, #4]	@ (8021b88 <__malloc_lock+0x8>)
 8021b82:	f000 bab6 	b.w	80220f2 <__retarget_lock_acquire_recursive>
 8021b86:	bf00      	nop
 8021b88:	20017610 	.word	0x20017610

08021b8c <__malloc_unlock>:
 8021b8c:	4801      	ldr	r0, [pc, #4]	@ (8021b94 <__malloc_unlock+0x8>)
 8021b8e:	f000 bab1 	b.w	80220f4 <__retarget_lock_release_recursive>
 8021b92:	bf00      	nop
 8021b94:	20017610 	.word	0x20017610

08021b98 <__cxa_atexit>:
 8021b98:	b510      	push	{r4, lr}
 8021b9a:	4604      	mov	r4, r0
 8021b9c:	4804      	ldr	r0, [pc, #16]	@ (8021bb0 <__cxa_atexit+0x18>)
 8021b9e:	4613      	mov	r3, r2
 8021ba0:	b120      	cbz	r0, 8021bac <__cxa_atexit+0x14>
 8021ba2:	460a      	mov	r2, r1
 8021ba4:	2002      	movs	r0, #2
 8021ba6:	4621      	mov	r1, r4
 8021ba8:	f000 fab4 	bl	8022114 <__register_exitproc>
 8021bac:	bd10      	pop	{r4, pc}
 8021bae:	bf00      	nop
 8021bb0:	08022115 	.word	0x08022115

08021bb4 <std>:
 8021bb4:	2300      	movs	r3, #0
 8021bb6:	b510      	push	{r4, lr}
 8021bb8:	4604      	mov	r4, r0
 8021bba:	e9c0 3300 	strd	r3, r3, [r0]
 8021bbe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8021bc2:	6083      	str	r3, [r0, #8]
 8021bc4:	8181      	strh	r1, [r0, #12]
 8021bc6:	6643      	str	r3, [r0, #100]	@ 0x64
 8021bc8:	81c2      	strh	r2, [r0, #14]
 8021bca:	6183      	str	r3, [r0, #24]
 8021bcc:	4619      	mov	r1, r3
 8021bce:	2208      	movs	r2, #8
 8021bd0:	305c      	adds	r0, #92	@ 0x5c
 8021bd2:	f000 f99b 	bl	8021f0c <memset>
 8021bd6:	4b0d      	ldr	r3, [pc, #52]	@ (8021c0c <std+0x58>)
 8021bd8:	6263      	str	r3, [r4, #36]	@ 0x24
 8021bda:	4b0d      	ldr	r3, [pc, #52]	@ (8021c10 <std+0x5c>)
 8021bdc:	62a3      	str	r3, [r4, #40]	@ 0x28
 8021bde:	4b0d      	ldr	r3, [pc, #52]	@ (8021c14 <std+0x60>)
 8021be0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8021be2:	4b0d      	ldr	r3, [pc, #52]	@ (8021c18 <std+0x64>)
 8021be4:	6323      	str	r3, [r4, #48]	@ 0x30
 8021be6:	4b0d      	ldr	r3, [pc, #52]	@ (8021c1c <std+0x68>)
 8021be8:	6224      	str	r4, [r4, #32]
 8021bea:	429c      	cmp	r4, r3
 8021bec:	d006      	beq.n	8021bfc <std+0x48>
 8021bee:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8021bf2:	4294      	cmp	r4, r2
 8021bf4:	d002      	beq.n	8021bfc <std+0x48>
 8021bf6:	33d0      	adds	r3, #208	@ 0xd0
 8021bf8:	429c      	cmp	r4, r3
 8021bfa:	d105      	bne.n	8021c08 <std+0x54>
 8021bfc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8021c00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021c04:	f000 ba74 	b.w	80220f0 <__retarget_lock_init_recursive>
 8021c08:	bd10      	pop	{r4, pc}
 8021c0a:	bf00      	nop
 8021c0c:	08021d5d 	.word	0x08021d5d
 8021c10:	08021d7f 	.word	0x08021d7f
 8021c14:	08021db7 	.word	0x08021db7
 8021c18:	08021ddb 	.word	0x08021ddb
 8021c1c:	200174d0 	.word	0x200174d0

08021c20 <stdio_exit_handler>:
 8021c20:	4a02      	ldr	r2, [pc, #8]	@ (8021c2c <stdio_exit_handler+0xc>)
 8021c22:	4903      	ldr	r1, [pc, #12]	@ (8021c30 <stdio_exit_handler+0x10>)
 8021c24:	4803      	ldr	r0, [pc, #12]	@ (8021c34 <stdio_exit_handler+0x14>)
 8021c26:	f000 b87b 	b.w	8021d20 <_fwalk_sglue>
 8021c2a:	bf00      	nop
 8021c2c:	200000c4 	.word	0x200000c4
 8021c30:	08022909 	.word	0x08022909
 8021c34:	200000d4 	.word	0x200000d4

08021c38 <cleanup_stdio>:
 8021c38:	6841      	ldr	r1, [r0, #4]
 8021c3a:	4b0c      	ldr	r3, [pc, #48]	@ (8021c6c <cleanup_stdio+0x34>)
 8021c3c:	4299      	cmp	r1, r3
 8021c3e:	b510      	push	{r4, lr}
 8021c40:	4604      	mov	r4, r0
 8021c42:	d001      	beq.n	8021c48 <cleanup_stdio+0x10>
 8021c44:	f000 fe60 	bl	8022908 <_fflush_r>
 8021c48:	68a1      	ldr	r1, [r4, #8]
 8021c4a:	4b09      	ldr	r3, [pc, #36]	@ (8021c70 <cleanup_stdio+0x38>)
 8021c4c:	4299      	cmp	r1, r3
 8021c4e:	d002      	beq.n	8021c56 <cleanup_stdio+0x1e>
 8021c50:	4620      	mov	r0, r4
 8021c52:	f000 fe59 	bl	8022908 <_fflush_r>
 8021c56:	68e1      	ldr	r1, [r4, #12]
 8021c58:	4b06      	ldr	r3, [pc, #24]	@ (8021c74 <cleanup_stdio+0x3c>)
 8021c5a:	4299      	cmp	r1, r3
 8021c5c:	d004      	beq.n	8021c68 <cleanup_stdio+0x30>
 8021c5e:	4620      	mov	r0, r4
 8021c60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021c64:	f000 be50 	b.w	8022908 <_fflush_r>
 8021c68:	bd10      	pop	{r4, pc}
 8021c6a:	bf00      	nop
 8021c6c:	200174d0 	.word	0x200174d0
 8021c70:	20017538 	.word	0x20017538
 8021c74:	200175a0 	.word	0x200175a0

08021c78 <global_stdio_init.part.0>:
 8021c78:	b510      	push	{r4, lr}
 8021c7a:	4b0b      	ldr	r3, [pc, #44]	@ (8021ca8 <global_stdio_init.part.0+0x30>)
 8021c7c:	4c0b      	ldr	r4, [pc, #44]	@ (8021cac <global_stdio_init.part.0+0x34>)
 8021c7e:	4a0c      	ldr	r2, [pc, #48]	@ (8021cb0 <global_stdio_init.part.0+0x38>)
 8021c80:	601a      	str	r2, [r3, #0]
 8021c82:	4620      	mov	r0, r4
 8021c84:	2200      	movs	r2, #0
 8021c86:	2104      	movs	r1, #4
 8021c88:	f7ff ff94 	bl	8021bb4 <std>
 8021c8c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8021c90:	2201      	movs	r2, #1
 8021c92:	2109      	movs	r1, #9
 8021c94:	f7ff ff8e 	bl	8021bb4 <std>
 8021c98:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8021c9c:	2202      	movs	r2, #2
 8021c9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021ca2:	2112      	movs	r1, #18
 8021ca4:	f7ff bf86 	b.w	8021bb4 <std>
 8021ca8:	20017608 	.word	0x20017608
 8021cac:	200174d0 	.word	0x200174d0
 8021cb0:	08021c21 	.word	0x08021c21

08021cb4 <__sfp_lock_acquire>:
 8021cb4:	4801      	ldr	r0, [pc, #4]	@ (8021cbc <__sfp_lock_acquire+0x8>)
 8021cb6:	f000 ba1c 	b.w	80220f2 <__retarget_lock_acquire_recursive>
 8021cba:	bf00      	nop
 8021cbc:	20017612 	.word	0x20017612

08021cc0 <__sfp_lock_release>:
 8021cc0:	4801      	ldr	r0, [pc, #4]	@ (8021cc8 <__sfp_lock_release+0x8>)
 8021cc2:	f000 ba17 	b.w	80220f4 <__retarget_lock_release_recursive>
 8021cc6:	bf00      	nop
 8021cc8:	20017612 	.word	0x20017612

08021ccc <__sinit>:
 8021ccc:	b510      	push	{r4, lr}
 8021cce:	4604      	mov	r4, r0
 8021cd0:	f7ff fff0 	bl	8021cb4 <__sfp_lock_acquire>
 8021cd4:	6a23      	ldr	r3, [r4, #32]
 8021cd6:	b11b      	cbz	r3, 8021ce0 <__sinit+0x14>
 8021cd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021cdc:	f7ff bff0 	b.w	8021cc0 <__sfp_lock_release>
 8021ce0:	4b04      	ldr	r3, [pc, #16]	@ (8021cf4 <__sinit+0x28>)
 8021ce2:	6223      	str	r3, [r4, #32]
 8021ce4:	4b04      	ldr	r3, [pc, #16]	@ (8021cf8 <__sinit+0x2c>)
 8021ce6:	681b      	ldr	r3, [r3, #0]
 8021ce8:	2b00      	cmp	r3, #0
 8021cea:	d1f5      	bne.n	8021cd8 <__sinit+0xc>
 8021cec:	f7ff ffc4 	bl	8021c78 <global_stdio_init.part.0>
 8021cf0:	e7f2      	b.n	8021cd8 <__sinit+0xc>
 8021cf2:	bf00      	nop
 8021cf4:	08021c39 	.word	0x08021c39
 8021cf8:	20017608 	.word	0x20017608

08021cfc <fiprintf>:
 8021cfc:	b40e      	push	{r1, r2, r3}
 8021cfe:	b503      	push	{r0, r1, lr}
 8021d00:	4601      	mov	r1, r0
 8021d02:	ab03      	add	r3, sp, #12
 8021d04:	4805      	ldr	r0, [pc, #20]	@ (8021d1c <fiprintf+0x20>)
 8021d06:	f853 2b04 	ldr.w	r2, [r3], #4
 8021d0a:	6800      	ldr	r0, [r0, #0]
 8021d0c:	9301      	str	r3, [sp, #4]
 8021d0e:	f000 fad1 	bl	80222b4 <_vfiprintf_r>
 8021d12:	b002      	add	sp, #8
 8021d14:	f85d eb04 	ldr.w	lr, [sp], #4
 8021d18:	b003      	add	sp, #12
 8021d1a:	4770      	bx	lr
 8021d1c:	200000d0 	.word	0x200000d0

08021d20 <_fwalk_sglue>:
 8021d20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021d24:	4607      	mov	r7, r0
 8021d26:	4688      	mov	r8, r1
 8021d28:	4614      	mov	r4, r2
 8021d2a:	2600      	movs	r6, #0
 8021d2c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8021d30:	f1b9 0901 	subs.w	r9, r9, #1
 8021d34:	d505      	bpl.n	8021d42 <_fwalk_sglue+0x22>
 8021d36:	6824      	ldr	r4, [r4, #0]
 8021d38:	2c00      	cmp	r4, #0
 8021d3a:	d1f7      	bne.n	8021d2c <_fwalk_sglue+0xc>
 8021d3c:	4630      	mov	r0, r6
 8021d3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021d42:	89ab      	ldrh	r3, [r5, #12]
 8021d44:	2b01      	cmp	r3, #1
 8021d46:	d907      	bls.n	8021d58 <_fwalk_sglue+0x38>
 8021d48:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8021d4c:	3301      	adds	r3, #1
 8021d4e:	d003      	beq.n	8021d58 <_fwalk_sglue+0x38>
 8021d50:	4629      	mov	r1, r5
 8021d52:	4638      	mov	r0, r7
 8021d54:	47c0      	blx	r8
 8021d56:	4306      	orrs	r6, r0
 8021d58:	3568      	adds	r5, #104	@ 0x68
 8021d5a:	e7e9      	b.n	8021d30 <_fwalk_sglue+0x10>

08021d5c <__sread>:
 8021d5c:	b510      	push	{r4, lr}
 8021d5e:	460c      	mov	r4, r1
 8021d60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021d64:	f000 f952 	bl	802200c <_read_r>
 8021d68:	2800      	cmp	r0, #0
 8021d6a:	bfab      	itete	ge
 8021d6c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8021d6e:	89a3      	ldrhlt	r3, [r4, #12]
 8021d70:	181b      	addge	r3, r3, r0
 8021d72:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8021d76:	bfac      	ite	ge
 8021d78:	6563      	strge	r3, [r4, #84]	@ 0x54
 8021d7a:	81a3      	strhlt	r3, [r4, #12]
 8021d7c:	bd10      	pop	{r4, pc}

08021d7e <__swrite>:
 8021d7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021d82:	461f      	mov	r7, r3
 8021d84:	898b      	ldrh	r3, [r1, #12]
 8021d86:	05db      	lsls	r3, r3, #23
 8021d88:	4605      	mov	r5, r0
 8021d8a:	460c      	mov	r4, r1
 8021d8c:	4616      	mov	r6, r2
 8021d8e:	d505      	bpl.n	8021d9c <__swrite+0x1e>
 8021d90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021d94:	2302      	movs	r3, #2
 8021d96:	2200      	movs	r2, #0
 8021d98:	f000 f926 	bl	8021fe8 <_lseek_r>
 8021d9c:	89a3      	ldrh	r3, [r4, #12]
 8021d9e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021da2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8021da6:	81a3      	strh	r3, [r4, #12]
 8021da8:	4632      	mov	r2, r6
 8021daa:	463b      	mov	r3, r7
 8021dac:	4628      	mov	r0, r5
 8021dae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021db2:	f000 b961 	b.w	8022078 <_write_r>

08021db6 <__sseek>:
 8021db6:	b510      	push	{r4, lr}
 8021db8:	460c      	mov	r4, r1
 8021dba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021dbe:	f000 f913 	bl	8021fe8 <_lseek_r>
 8021dc2:	1c43      	adds	r3, r0, #1
 8021dc4:	89a3      	ldrh	r3, [r4, #12]
 8021dc6:	bf15      	itete	ne
 8021dc8:	6560      	strne	r0, [r4, #84]	@ 0x54
 8021dca:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8021dce:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8021dd2:	81a3      	strheq	r3, [r4, #12]
 8021dd4:	bf18      	it	ne
 8021dd6:	81a3      	strhne	r3, [r4, #12]
 8021dd8:	bd10      	pop	{r4, pc}

08021dda <__sclose>:
 8021dda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021dde:	f000 b8f3 	b.w	8021fc8 <_close_r>

08021de2 <__swbuf_r>:
 8021de2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021de4:	460e      	mov	r6, r1
 8021de6:	4614      	mov	r4, r2
 8021de8:	4605      	mov	r5, r0
 8021dea:	b118      	cbz	r0, 8021df4 <__swbuf_r+0x12>
 8021dec:	6a03      	ldr	r3, [r0, #32]
 8021dee:	b90b      	cbnz	r3, 8021df4 <__swbuf_r+0x12>
 8021df0:	f7ff ff6c 	bl	8021ccc <__sinit>
 8021df4:	69a3      	ldr	r3, [r4, #24]
 8021df6:	60a3      	str	r3, [r4, #8]
 8021df8:	89a3      	ldrh	r3, [r4, #12]
 8021dfa:	071a      	lsls	r2, r3, #28
 8021dfc:	d501      	bpl.n	8021e02 <__swbuf_r+0x20>
 8021dfe:	6923      	ldr	r3, [r4, #16]
 8021e00:	b943      	cbnz	r3, 8021e14 <__swbuf_r+0x32>
 8021e02:	4621      	mov	r1, r4
 8021e04:	4628      	mov	r0, r5
 8021e06:	f000 f82b 	bl	8021e60 <__swsetup_r>
 8021e0a:	b118      	cbz	r0, 8021e14 <__swbuf_r+0x32>
 8021e0c:	f04f 37ff 	mov.w	r7, #4294967295
 8021e10:	4638      	mov	r0, r7
 8021e12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021e14:	6823      	ldr	r3, [r4, #0]
 8021e16:	6922      	ldr	r2, [r4, #16]
 8021e18:	1a98      	subs	r0, r3, r2
 8021e1a:	6963      	ldr	r3, [r4, #20]
 8021e1c:	b2f6      	uxtb	r6, r6
 8021e1e:	4283      	cmp	r3, r0
 8021e20:	4637      	mov	r7, r6
 8021e22:	dc05      	bgt.n	8021e30 <__swbuf_r+0x4e>
 8021e24:	4621      	mov	r1, r4
 8021e26:	4628      	mov	r0, r5
 8021e28:	f000 fd6e 	bl	8022908 <_fflush_r>
 8021e2c:	2800      	cmp	r0, #0
 8021e2e:	d1ed      	bne.n	8021e0c <__swbuf_r+0x2a>
 8021e30:	68a3      	ldr	r3, [r4, #8]
 8021e32:	3b01      	subs	r3, #1
 8021e34:	60a3      	str	r3, [r4, #8]
 8021e36:	6823      	ldr	r3, [r4, #0]
 8021e38:	1c5a      	adds	r2, r3, #1
 8021e3a:	6022      	str	r2, [r4, #0]
 8021e3c:	701e      	strb	r6, [r3, #0]
 8021e3e:	6962      	ldr	r2, [r4, #20]
 8021e40:	1c43      	adds	r3, r0, #1
 8021e42:	429a      	cmp	r2, r3
 8021e44:	d004      	beq.n	8021e50 <__swbuf_r+0x6e>
 8021e46:	89a3      	ldrh	r3, [r4, #12]
 8021e48:	07db      	lsls	r3, r3, #31
 8021e4a:	d5e1      	bpl.n	8021e10 <__swbuf_r+0x2e>
 8021e4c:	2e0a      	cmp	r6, #10
 8021e4e:	d1df      	bne.n	8021e10 <__swbuf_r+0x2e>
 8021e50:	4621      	mov	r1, r4
 8021e52:	4628      	mov	r0, r5
 8021e54:	f000 fd58 	bl	8022908 <_fflush_r>
 8021e58:	2800      	cmp	r0, #0
 8021e5a:	d0d9      	beq.n	8021e10 <__swbuf_r+0x2e>
 8021e5c:	e7d6      	b.n	8021e0c <__swbuf_r+0x2a>
	...

08021e60 <__swsetup_r>:
 8021e60:	b538      	push	{r3, r4, r5, lr}
 8021e62:	4b29      	ldr	r3, [pc, #164]	@ (8021f08 <__swsetup_r+0xa8>)
 8021e64:	4605      	mov	r5, r0
 8021e66:	6818      	ldr	r0, [r3, #0]
 8021e68:	460c      	mov	r4, r1
 8021e6a:	b118      	cbz	r0, 8021e74 <__swsetup_r+0x14>
 8021e6c:	6a03      	ldr	r3, [r0, #32]
 8021e6e:	b90b      	cbnz	r3, 8021e74 <__swsetup_r+0x14>
 8021e70:	f7ff ff2c 	bl	8021ccc <__sinit>
 8021e74:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021e78:	0719      	lsls	r1, r3, #28
 8021e7a:	d422      	bmi.n	8021ec2 <__swsetup_r+0x62>
 8021e7c:	06da      	lsls	r2, r3, #27
 8021e7e:	d407      	bmi.n	8021e90 <__swsetup_r+0x30>
 8021e80:	2209      	movs	r2, #9
 8021e82:	602a      	str	r2, [r5, #0]
 8021e84:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8021e88:	81a3      	strh	r3, [r4, #12]
 8021e8a:	f04f 30ff 	mov.w	r0, #4294967295
 8021e8e:	e033      	b.n	8021ef8 <__swsetup_r+0x98>
 8021e90:	0758      	lsls	r0, r3, #29
 8021e92:	d512      	bpl.n	8021eba <__swsetup_r+0x5a>
 8021e94:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8021e96:	b141      	cbz	r1, 8021eaa <__swsetup_r+0x4a>
 8021e98:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8021e9c:	4299      	cmp	r1, r3
 8021e9e:	d002      	beq.n	8021ea6 <__swsetup_r+0x46>
 8021ea0:	4628      	mov	r0, r5
 8021ea2:	f000 f993 	bl	80221cc <_free_r>
 8021ea6:	2300      	movs	r3, #0
 8021ea8:	6363      	str	r3, [r4, #52]	@ 0x34
 8021eaa:	89a3      	ldrh	r3, [r4, #12]
 8021eac:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8021eb0:	81a3      	strh	r3, [r4, #12]
 8021eb2:	2300      	movs	r3, #0
 8021eb4:	6063      	str	r3, [r4, #4]
 8021eb6:	6923      	ldr	r3, [r4, #16]
 8021eb8:	6023      	str	r3, [r4, #0]
 8021eba:	89a3      	ldrh	r3, [r4, #12]
 8021ebc:	f043 0308 	orr.w	r3, r3, #8
 8021ec0:	81a3      	strh	r3, [r4, #12]
 8021ec2:	6923      	ldr	r3, [r4, #16]
 8021ec4:	b94b      	cbnz	r3, 8021eda <__swsetup_r+0x7a>
 8021ec6:	89a3      	ldrh	r3, [r4, #12]
 8021ec8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8021ecc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8021ed0:	d003      	beq.n	8021eda <__swsetup_r+0x7a>
 8021ed2:	4621      	mov	r1, r4
 8021ed4:	4628      	mov	r0, r5
 8021ed6:	f000 fd65 	bl	80229a4 <__smakebuf_r>
 8021eda:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021ede:	f013 0201 	ands.w	r2, r3, #1
 8021ee2:	d00a      	beq.n	8021efa <__swsetup_r+0x9a>
 8021ee4:	2200      	movs	r2, #0
 8021ee6:	60a2      	str	r2, [r4, #8]
 8021ee8:	6962      	ldr	r2, [r4, #20]
 8021eea:	4252      	negs	r2, r2
 8021eec:	61a2      	str	r2, [r4, #24]
 8021eee:	6922      	ldr	r2, [r4, #16]
 8021ef0:	b942      	cbnz	r2, 8021f04 <__swsetup_r+0xa4>
 8021ef2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8021ef6:	d1c5      	bne.n	8021e84 <__swsetup_r+0x24>
 8021ef8:	bd38      	pop	{r3, r4, r5, pc}
 8021efa:	0799      	lsls	r1, r3, #30
 8021efc:	bf58      	it	pl
 8021efe:	6962      	ldrpl	r2, [r4, #20]
 8021f00:	60a2      	str	r2, [r4, #8]
 8021f02:	e7f4      	b.n	8021eee <__swsetup_r+0x8e>
 8021f04:	2000      	movs	r0, #0
 8021f06:	e7f7      	b.n	8021ef8 <__swsetup_r+0x98>
 8021f08:	200000d0 	.word	0x200000d0

08021f0c <memset>:
 8021f0c:	4402      	add	r2, r0
 8021f0e:	4603      	mov	r3, r0
 8021f10:	4293      	cmp	r3, r2
 8021f12:	d100      	bne.n	8021f16 <memset+0xa>
 8021f14:	4770      	bx	lr
 8021f16:	f803 1b01 	strb.w	r1, [r3], #1
 8021f1a:	e7f9      	b.n	8021f10 <memset+0x4>

08021f1c <strncmp>:
 8021f1c:	b510      	push	{r4, lr}
 8021f1e:	b16a      	cbz	r2, 8021f3c <strncmp+0x20>
 8021f20:	3901      	subs	r1, #1
 8021f22:	1884      	adds	r4, r0, r2
 8021f24:	f810 2b01 	ldrb.w	r2, [r0], #1
 8021f28:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8021f2c:	429a      	cmp	r2, r3
 8021f2e:	d103      	bne.n	8021f38 <strncmp+0x1c>
 8021f30:	42a0      	cmp	r0, r4
 8021f32:	d001      	beq.n	8021f38 <strncmp+0x1c>
 8021f34:	2a00      	cmp	r2, #0
 8021f36:	d1f5      	bne.n	8021f24 <strncmp+0x8>
 8021f38:	1ad0      	subs	r0, r2, r3
 8021f3a:	bd10      	pop	{r4, pc}
 8021f3c:	4610      	mov	r0, r2
 8021f3e:	e7fc      	b.n	8021f3a <strncmp+0x1e>

08021f40 <strncpy>:
 8021f40:	b510      	push	{r4, lr}
 8021f42:	3901      	subs	r1, #1
 8021f44:	4603      	mov	r3, r0
 8021f46:	b132      	cbz	r2, 8021f56 <strncpy+0x16>
 8021f48:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8021f4c:	f803 4b01 	strb.w	r4, [r3], #1
 8021f50:	3a01      	subs	r2, #1
 8021f52:	2c00      	cmp	r4, #0
 8021f54:	d1f7      	bne.n	8021f46 <strncpy+0x6>
 8021f56:	441a      	add	r2, r3
 8021f58:	2100      	movs	r1, #0
 8021f5a:	4293      	cmp	r3, r2
 8021f5c:	d100      	bne.n	8021f60 <strncpy+0x20>
 8021f5e:	bd10      	pop	{r4, pc}
 8021f60:	f803 1b01 	strb.w	r1, [r3], #1
 8021f64:	e7f9      	b.n	8021f5a <strncpy+0x1a>

08021f66 <_raise_r>:
 8021f66:	291f      	cmp	r1, #31
 8021f68:	b538      	push	{r3, r4, r5, lr}
 8021f6a:	4605      	mov	r5, r0
 8021f6c:	460c      	mov	r4, r1
 8021f6e:	d904      	bls.n	8021f7a <_raise_r+0x14>
 8021f70:	2316      	movs	r3, #22
 8021f72:	6003      	str	r3, [r0, #0]
 8021f74:	f04f 30ff 	mov.w	r0, #4294967295
 8021f78:	bd38      	pop	{r3, r4, r5, pc}
 8021f7a:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8021f7c:	b112      	cbz	r2, 8021f84 <_raise_r+0x1e>
 8021f7e:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8021f82:	b94b      	cbnz	r3, 8021f98 <_raise_r+0x32>
 8021f84:	4628      	mov	r0, r5
 8021f86:	f000 f865 	bl	8022054 <_getpid_r>
 8021f8a:	4622      	mov	r2, r4
 8021f8c:	4601      	mov	r1, r0
 8021f8e:	4628      	mov	r0, r5
 8021f90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8021f94:	f000 b84c 	b.w	8022030 <_kill_r>
 8021f98:	2b01      	cmp	r3, #1
 8021f9a:	d00a      	beq.n	8021fb2 <_raise_r+0x4c>
 8021f9c:	1c59      	adds	r1, r3, #1
 8021f9e:	d103      	bne.n	8021fa8 <_raise_r+0x42>
 8021fa0:	2316      	movs	r3, #22
 8021fa2:	6003      	str	r3, [r0, #0]
 8021fa4:	2001      	movs	r0, #1
 8021fa6:	e7e7      	b.n	8021f78 <_raise_r+0x12>
 8021fa8:	2100      	movs	r1, #0
 8021faa:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8021fae:	4620      	mov	r0, r4
 8021fb0:	4798      	blx	r3
 8021fb2:	2000      	movs	r0, #0
 8021fb4:	e7e0      	b.n	8021f78 <_raise_r+0x12>
	...

08021fb8 <raise>:
 8021fb8:	4b02      	ldr	r3, [pc, #8]	@ (8021fc4 <raise+0xc>)
 8021fba:	4601      	mov	r1, r0
 8021fbc:	6818      	ldr	r0, [r3, #0]
 8021fbe:	f7ff bfd2 	b.w	8021f66 <_raise_r>
 8021fc2:	bf00      	nop
 8021fc4:	200000d0 	.word	0x200000d0

08021fc8 <_close_r>:
 8021fc8:	b538      	push	{r3, r4, r5, lr}
 8021fca:	4d06      	ldr	r5, [pc, #24]	@ (8021fe4 <_close_r+0x1c>)
 8021fcc:	2300      	movs	r3, #0
 8021fce:	4604      	mov	r4, r0
 8021fd0:	4608      	mov	r0, r1
 8021fd2:	602b      	str	r3, [r5, #0]
 8021fd4:	f7df f972 	bl	80012bc <_close>
 8021fd8:	1c43      	adds	r3, r0, #1
 8021fda:	d102      	bne.n	8021fe2 <_close_r+0x1a>
 8021fdc:	682b      	ldr	r3, [r5, #0]
 8021fde:	b103      	cbz	r3, 8021fe2 <_close_r+0x1a>
 8021fe0:	6023      	str	r3, [r4, #0]
 8021fe2:	bd38      	pop	{r3, r4, r5, pc}
 8021fe4:	2001760c 	.word	0x2001760c

08021fe8 <_lseek_r>:
 8021fe8:	b538      	push	{r3, r4, r5, lr}
 8021fea:	4d07      	ldr	r5, [pc, #28]	@ (8022008 <_lseek_r+0x20>)
 8021fec:	4604      	mov	r4, r0
 8021fee:	4608      	mov	r0, r1
 8021ff0:	4611      	mov	r1, r2
 8021ff2:	2200      	movs	r2, #0
 8021ff4:	602a      	str	r2, [r5, #0]
 8021ff6:	461a      	mov	r2, r3
 8021ff8:	f7df f96a 	bl	80012d0 <_lseek>
 8021ffc:	1c43      	adds	r3, r0, #1
 8021ffe:	d102      	bne.n	8022006 <_lseek_r+0x1e>
 8022000:	682b      	ldr	r3, [r5, #0]
 8022002:	b103      	cbz	r3, 8022006 <_lseek_r+0x1e>
 8022004:	6023      	str	r3, [r4, #0]
 8022006:	bd38      	pop	{r3, r4, r5, pc}
 8022008:	2001760c 	.word	0x2001760c

0802200c <_read_r>:
 802200c:	b538      	push	{r3, r4, r5, lr}
 802200e:	4d07      	ldr	r5, [pc, #28]	@ (802202c <_read_r+0x20>)
 8022010:	4604      	mov	r4, r0
 8022012:	4608      	mov	r0, r1
 8022014:	4611      	mov	r1, r2
 8022016:	2200      	movs	r2, #0
 8022018:	602a      	str	r2, [r5, #0]
 802201a:	461a      	mov	r2, r3
 802201c:	f7df f932 	bl	8001284 <_read>
 8022020:	1c43      	adds	r3, r0, #1
 8022022:	d102      	bne.n	802202a <_read_r+0x1e>
 8022024:	682b      	ldr	r3, [r5, #0]
 8022026:	b103      	cbz	r3, 802202a <_read_r+0x1e>
 8022028:	6023      	str	r3, [r4, #0]
 802202a:	bd38      	pop	{r3, r4, r5, pc}
 802202c:	2001760c 	.word	0x2001760c

08022030 <_kill_r>:
 8022030:	b538      	push	{r3, r4, r5, lr}
 8022032:	4d07      	ldr	r5, [pc, #28]	@ (8022050 <_kill_r+0x20>)
 8022034:	2300      	movs	r3, #0
 8022036:	4604      	mov	r4, r0
 8022038:	4608      	mov	r0, r1
 802203a:	4611      	mov	r1, r2
 802203c:	602b      	str	r3, [r5, #0]
 802203e:	f7df f913 	bl	8001268 <_kill>
 8022042:	1c43      	adds	r3, r0, #1
 8022044:	d102      	bne.n	802204c <_kill_r+0x1c>
 8022046:	682b      	ldr	r3, [r5, #0]
 8022048:	b103      	cbz	r3, 802204c <_kill_r+0x1c>
 802204a:	6023      	str	r3, [r4, #0]
 802204c:	bd38      	pop	{r3, r4, r5, pc}
 802204e:	bf00      	nop
 8022050:	2001760c 	.word	0x2001760c

08022054 <_getpid_r>:
 8022054:	f7df b906 	b.w	8001264 <_getpid>

08022058 <_sbrk_r>:
 8022058:	b538      	push	{r3, r4, r5, lr}
 802205a:	4d06      	ldr	r5, [pc, #24]	@ (8022074 <_sbrk_r+0x1c>)
 802205c:	2300      	movs	r3, #0
 802205e:	4604      	mov	r4, r0
 8022060:	4608      	mov	r0, r1
 8022062:	602b      	str	r3, [r5, #0]
 8022064:	f7df f936 	bl	80012d4 <_sbrk>
 8022068:	1c43      	adds	r3, r0, #1
 802206a:	d102      	bne.n	8022072 <_sbrk_r+0x1a>
 802206c:	682b      	ldr	r3, [r5, #0]
 802206e:	b103      	cbz	r3, 8022072 <_sbrk_r+0x1a>
 8022070:	6023      	str	r3, [r4, #0]
 8022072:	bd38      	pop	{r3, r4, r5, pc}
 8022074:	2001760c 	.word	0x2001760c

08022078 <_write_r>:
 8022078:	b538      	push	{r3, r4, r5, lr}
 802207a:	4d07      	ldr	r5, [pc, #28]	@ (8022098 <_write_r+0x20>)
 802207c:	4604      	mov	r4, r0
 802207e:	4608      	mov	r0, r1
 8022080:	4611      	mov	r1, r2
 8022082:	2200      	movs	r2, #0
 8022084:	602a      	str	r2, [r5, #0]
 8022086:	461a      	mov	r2, r3
 8022088:	f7df f90a 	bl	80012a0 <_write>
 802208c:	1c43      	adds	r3, r0, #1
 802208e:	d102      	bne.n	8022096 <_write_r+0x1e>
 8022090:	682b      	ldr	r3, [r5, #0]
 8022092:	b103      	cbz	r3, 8022096 <_write_r+0x1e>
 8022094:	6023      	str	r3, [r4, #0]
 8022096:	bd38      	pop	{r3, r4, r5, pc}
 8022098:	2001760c 	.word	0x2001760c

0802209c <__errno>:
 802209c:	4b01      	ldr	r3, [pc, #4]	@ (80220a4 <__errno+0x8>)
 802209e:	6818      	ldr	r0, [r3, #0]
 80220a0:	4770      	bx	lr
 80220a2:	bf00      	nop
 80220a4:	200000d0 	.word	0x200000d0

080220a8 <__libc_init_array>:
 80220a8:	b570      	push	{r4, r5, r6, lr}
 80220aa:	4d0d      	ldr	r5, [pc, #52]	@ (80220e0 <__libc_init_array+0x38>)
 80220ac:	4c0d      	ldr	r4, [pc, #52]	@ (80220e4 <__libc_init_array+0x3c>)
 80220ae:	1b64      	subs	r4, r4, r5
 80220b0:	10a4      	asrs	r4, r4, #2
 80220b2:	2600      	movs	r6, #0
 80220b4:	42a6      	cmp	r6, r4
 80220b6:	d109      	bne.n	80220cc <__libc_init_array+0x24>
 80220b8:	4d0b      	ldr	r5, [pc, #44]	@ (80220e8 <__libc_init_array+0x40>)
 80220ba:	4c0c      	ldr	r4, [pc, #48]	@ (80220ec <__libc_init_array+0x44>)
 80220bc:	f000 fcd0 	bl	8022a60 <_init>
 80220c0:	1b64      	subs	r4, r4, r5
 80220c2:	10a4      	asrs	r4, r4, #2
 80220c4:	2600      	movs	r6, #0
 80220c6:	42a6      	cmp	r6, r4
 80220c8:	d105      	bne.n	80220d6 <__libc_init_array+0x2e>
 80220ca:	bd70      	pop	{r4, r5, r6, pc}
 80220cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80220d0:	4798      	blx	r3
 80220d2:	3601      	adds	r6, #1
 80220d4:	e7ee      	b.n	80220b4 <__libc_init_array+0xc>
 80220d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80220da:	4798      	blx	r3
 80220dc:	3601      	adds	r6, #1
 80220de:	e7f2      	b.n	80220c6 <__libc_init_array+0x1e>
 80220e0:	080251ec 	.word	0x080251ec
 80220e4:	080251ec 	.word	0x080251ec
 80220e8:	080251ec 	.word	0x080251ec
 80220ec:	08025204 	.word	0x08025204

080220f0 <__retarget_lock_init_recursive>:
 80220f0:	4770      	bx	lr

080220f2 <__retarget_lock_acquire_recursive>:
 80220f2:	4770      	bx	lr

080220f4 <__retarget_lock_release_recursive>:
 80220f4:	4770      	bx	lr

080220f6 <memcpy>:
 80220f6:	440a      	add	r2, r1
 80220f8:	4291      	cmp	r1, r2
 80220fa:	f100 33ff 	add.w	r3, r0, #4294967295
 80220fe:	d100      	bne.n	8022102 <memcpy+0xc>
 8022100:	4770      	bx	lr
 8022102:	b510      	push	{r4, lr}
 8022104:	f811 4b01 	ldrb.w	r4, [r1], #1
 8022108:	f803 4f01 	strb.w	r4, [r3, #1]!
 802210c:	4291      	cmp	r1, r2
 802210e:	d1f9      	bne.n	8022104 <memcpy+0xe>
 8022110:	bd10      	pop	{r4, pc}
	...

08022114 <__register_exitproc>:
 8022114:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022118:	4d27      	ldr	r5, [pc, #156]	@ (80221b8 <__register_exitproc+0xa4>)
 802211a:	4607      	mov	r7, r0
 802211c:	6828      	ldr	r0, [r5, #0]
 802211e:	4691      	mov	r9, r2
 8022120:	460e      	mov	r6, r1
 8022122:	4698      	mov	r8, r3
 8022124:	f7ff ffe5 	bl	80220f2 <__retarget_lock_acquire_recursive>
 8022128:	4a24      	ldr	r2, [pc, #144]	@ (80221bc <__register_exitproc+0xa8>)
 802212a:	6814      	ldr	r4, [r2, #0]
 802212c:	b93c      	cbnz	r4, 802213e <__register_exitproc+0x2a>
 802212e:	4b24      	ldr	r3, [pc, #144]	@ (80221c0 <__register_exitproc+0xac>)
 8022130:	6013      	str	r3, [r2, #0]
 8022132:	4a24      	ldr	r2, [pc, #144]	@ (80221c4 <__register_exitproc+0xb0>)
 8022134:	b112      	cbz	r2, 802213c <__register_exitproc+0x28>
 8022136:	6812      	ldr	r2, [r2, #0]
 8022138:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 802213c:	4c20      	ldr	r4, [pc, #128]	@ (80221c0 <__register_exitproc+0xac>)
 802213e:	6863      	ldr	r3, [r4, #4]
 8022140:	2b1f      	cmp	r3, #31
 8022142:	dd06      	ble.n	8022152 <__register_exitproc+0x3e>
 8022144:	6828      	ldr	r0, [r5, #0]
 8022146:	f7ff ffd5 	bl	80220f4 <__retarget_lock_release_recursive>
 802214a:	f04f 30ff 	mov.w	r0, #4294967295
 802214e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022152:	b32f      	cbz	r7, 80221a0 <__register_exitproc+0x8c>
 8022154:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8022158:	b968      	cbnz	r0, 8022176 <__register_exitproc+0x62>
 802215a:	4b1b      	ldr	r3, [pc, #108]	@ (80221c8 <__register_exitproc+0xb4>)
 802215c:	2b00      	cmp	r3, #0
 802215e:	d0f1      	beq.n	8022144 <__register_exitproc+0x30>
 8022160:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8022164:	f7ff fc5a 	bl	8021a1c <malloc>
 8022168:	2800      	cmp	r0, #0
 802216a:	d0eb      	beq.n	8022144 <__register_exitproc+0x30>
 802216c:	2300      	movs	r3, #0
 802216e:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8022172:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8022176:	6863      	ldr	r3, [r4, #4]
 8022178:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802217c:	2201      	movs	r2, #1
 802217e:	409a      	lsls	r2, r3
 8022180:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8022184:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8022188:	4313      	orrs	r3, r2
 802218a:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802218e:	2f02      	cmp	r7, #2
 8022190:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8022194:	bf02      	ittt	eq
 8022196:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 802219a:	4313      	orreq	r3, r2
 802219c:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 80221a0:	6863      	ldr	r3, [r4, #4]
 80221a2:	6828      	ldr	r0, [r5, #0]
 80221a4:	1c5a      	adds	r2, r3, #1
 80221a6:	3302      	adds	r3, #2
 80221a8:	6062      	str	r2, [r4, #4]
 80221aa:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 80221ae:	f7ff ffa1 	bl	80220f4 <__retarget_lock_release_recursive>
 80221b2:	2000      	movs	r0, #0
 80221b4:	e7cb      	b.n	802214e <__register_exitproc+0x3a>
 80221b6:	bf00      	nop
 80221b8:	20000120 	.word	0x20000120
 80221bc:	200176a0 	.word	0x200176a0
 80221c0:	20017614 	.word	0x20017614
 80221c4:	0802519c 	.word	0x0802519c
 80221c8:	08021a1d 	.word	0x08021a1d

080221cc <_free_r>:
 80221cc:	b538      	push	{r3, r4, r5, lr}
 80221ce:	4605      	mov	r5, r0
 80221d0:	2900      	cmp	r1, #0
 80221d2:	d041      	beq.n	8022258 <_free_r+0x8c>
 80221d4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80221d8:	1f0c      	subs	r4, r1, #4
 80221da:	2b00      	cmp	r3, #0
 80221dc:	bfb8      	it	lt
 80221de:	18e4      	addlt	r4, r4, r3
 80221e0:	f7ff fcce 	bl	8021b80 <__malloc_lock>
 80221e4:	4a1d      	ldr	r2, [pc, #116]	@ (802225c <_free_r+0x90>)
 80221e6:	6813      	ldr	r3, [r2, #0]
 80221e8:	b933      	cbnz	r3, 80221f8 <_free_r+0x2c>
 80221ea:	6063      	str	r3, [r4, #4]
 80221ec:	6014      	str	r4, [r2, #0]
 80221ee:	4628      	mov	r0, r5
 80221f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80221f4:	f7ff bcca 	b.w	8021b8c <__malloc_unlock>
 80221f8:	42a3      	cmp	r3, r4
 80221fa:	d908      	bls.n	802220e <_free_r+0x42>
 80221fc:	6820      	ldr	r0, [r4, #0]
 80221fe:	1821      	adds	r1, r4, r0
 8022200:	428b      	cmp	r3, r1
 8022202:	bf01      	itttt	eq
 8022204:	6819      	ldreq	r1, [r3, #0]
 8022206:	685b      	ldreq	r3, [r3, #4]
 8022208:	1809      	addeq	r1, r1, r0
 802220a:	6021      	streq	r1, [r4, #0]
 802220c:	e7ed      	b.n	80221ea <_free_r+0x1e>
 802220e:	461a      	mov	r2, r3
 8022210:	685b      	ldr	r3, [r3, #4]
 8022212:	b10b      	cbz	r3, 8022218 <_free_r+0x4c>
 8022214:	42a3      	cmp	r3, r4
 8022216:	d9fa      	bls.n	802220e <_free_r+0x42>
 8022218:	6811      	ldr	r1, [r2, #0]
 802221a:	1850      	adds	r0, r2, r1
 802221c:	42a0      	cmp	r0, r4
 802221e:	d10b      	bne.n	8022238 <_free_r+0x6c>
 8022220:	6820      	ldr	r0, [r4, #0]
 8022222:	4401      	add	r1, r0
 8022224:	1850      	adds	r0, r2, r1
 8022226:	4283      	cmp	r3, r0
 8022228:	6011      	str	r1, [r2, #0]
 802222a:	d1e0      	bne.n	80221ee <_free_r+0x22>
 802222c:	6818      	ldr	r0, [r3, #0]
 802222e:	685b      	ldr	r3, [r3, #4]
 8022230:	6053      	str	r3, [r2, #4]
 8022232:	4408      	add	r0, r1
 8022234:	6010      	str	r0, [r2, #0]
 8022236:	e7da      	b.n	80221ee <_free_r+0x22>
 8022238:	d902      	bls.n	8022240 <_free_r+0x74>
 802223a:	230c      	movs	r3, #12
 802223c:	602b      	str	r3, [r5, #0]
 802223e:	e7d6      	b.n	80221ee <_free_r+0x22>
 8022240:	6820      	ldr	r0, [r4, #0]
 8022242:	1821      	adds	r1, r4, r0
 8022244:	428b      	cmp	r3, r1
 8022246:	bf04      	itt	eq
 8022248:	6819      	ldreq	r1, [r3, #0]
 802224a:	685b      	ldreq	r3, [r3, #4]
 802224c:	6063      	str	r3, [r4, #4]
 802224e:	bf04      	itt	eq
 8022250:	1809      	addeq	r1, r1, r0
 8022252:	6021      	streq	r1, [r4, #0]
 8022254:	6054      	str	r4, [r2, #4]
 8022256:	e7ca      	b.n	80221ee <_free_r+0x22>
 8022258:	bd38      	pop	{r3, r4, r5, pc}
 802225a:	bf00      	nop
 802225c:	200174cc 	.word	0x200174cc

08022260 <__sfputc_r>:
 8022260:	6893      	ldr	r3, [r2, #8]
 8022262:	3b01      	subs	r3, #1
 8022264:	2b00      	cmp	r3, #0
 8022266:	b410      	push	{r4}
 8022268:	6093      	str	r3, [r2, #8]
 802226a:	da08      	bge.n	802227e <__sfputc_r+0x1e>
 802226c:	6994      	ldr	r4, [r2, #24]
 802226e:	42a3      	cmp	r3, r4
 8022270:	db01      	blt.n	8022276 <__sfputc_r+0x16>
 8022272:	290a      	cmp	r1, #10
 8022274:	d103      	bne.n	802227e <__sfputc_r+0x1e>
 8022276:	f85d 4b04 	ldr.w	r4, [sp], #4
 802227a:	f7ff bdb2 	b.w	8021de2 <__swbuf_r>
 802227e:	6813      	ldr	r3, [r2, #0]
 8022280:	1c58      	adds	r0, r3, #1
 8022282:	6010      	str	r0, [r2, #0]
 8022284:	7019      	strb	r1, [r3, #0]
 8022286:	4608      	mov	r0, r1
 8022288:	f85d 4b04 	ldr.w	r4, [sp], #4
 802228c:	4770      	bx	lr

0802228e <__sfputs_r>:
 802228e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022290:	4606      	mov	r6, r0
 8022292:	460f      	mov	r7, r1
 8022294:	4614      	mov	r4, r2
 8022296:	18d5      	adds	r5, r2, r3
 8022298:	42ac      	cmp	r4, r5
 802229a:	d101      	bne.n	80222a0 <__sfputs_r+0x12>
 802229c:	2000      	movs	r0, #0
 802229e:	e007      	b.n	80222b0 <__sfputs_r+0x22>
 80222a0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80222a4:	463a      	mov	r2, r7
 80222a6:	4630      	mov	r0, r6
 80222a8:	f7ff ffda 	bl	8022260 <__sfputc_r>
 80222ac:	1c43      	adds	r3, r0, #1
 80222ae:	d1f3      	bne.n	8022298 <__sfputs_r+0xa>
 80222b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080222b4 <_vfiprintf_r>:
 80222b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80222b8:	460d      	mov	r5, r1
 80222ba:	b09d      	sub	sp, #116	@ 0x74
 80222bc:	4614      	mov	r4, r2
 80222be:	4698      	mov	r8, r3
 80222c0:	4606      	mov	r6, r0
 80222c2:	b118      	cbz	r0, 80222cc <_vfiprintf_r+0x18>
 80222c4:	6a03      	ldr	r3, [r0, #32]
 80222c6:	b90b      	cbnz	r3, 80222cc <_vfiprintf_r+0x18>
 80222c8:	f7ff fd00 	bl	8021ccc <__sinit>
 80222cc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80222ce:	07d9      	lsls	r1, r3, #31
 80222d0:	d405      	bmi.n	80222de <_vfiprintf_r+0x2a>
 80222d2:	89ab      	ldrh	r3, [r5, #12]
 80222d4:	059a      	lsls	r2, r3, #22
 80222d6:	d402      	bmi.n	80222de <_vfiprintf_r+0x2a>
 80222d8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80222da:	f7ff ff0a 	bl	80220f2 <__retarget_lock_acquire_recursive>
 80222de:	89ab      	ldrh	r3, [r5, #12]
 80222e0:	071b      	lsls	r3, r3, #28
 80222e2:	d501      	bpl.n	80222e8 <_vfiprintf_r+0x34>
 80222e4:	692b      	ldr	r3, [r5, #16]
 80222e6:	b99b      	cbnz	r3, 8022310 <_vfiprintf_r+0x5c>
 80222e8:	4629      	mov	r1, r5
 80222ea:	4630      	mov	r0, r6
 80222ec:	f7ff fdb8 	bl	8021e60 <__swsetup_r>
 80222f0:	b170      	cbz	r0, 8022310 <_vfiprintf_r+0x5c>
 80222f2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80222f4:	07dc      	lsls	r4, r3, #31
 80222f6:	d504      	bpl.n	8022302 <_vfiprintf_r+0x4e>
 80222f8:	f04f 30ff 	mov.w	r0, #4294967295
 80222fc:	b01d      	add	sp, #116	@ 0x74
 80222fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022302:	89ab      	ldrh	r3, [r5, #12]
 8022304:	0598      	lsls	r0, r3, #22
 8022306:	d4f7      	bmi.n	80222f8 <_vfiprintf_r+0x44>
 8022308:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802230a:	f7ff fef3 	bl	80220f4 <__retarget_lock_release_recursive>
 802230e:	e7f3      	b.n	80222f8 <_vfiprintf_r+0x44>
 8022310:	2300      	movs	r3, #0
 8022312:	9309      	str	r3, [sp, #36]	@ 0x24
 8022314:	2320      	movs	r3, #32
 8022316:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 802231a:	f8cd 800c 	str.w	r8, [sp, #12]
 802231e:	2330      	movs	r3, #48	@ 0x30
 8022320:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80224d0 <_vfiprintf_r+0x21c>
 8022324:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8022328:	f04f 0901 	mov.w	r9, #1
 802232c:	4623      	mov	r3, r4
 802232e:	469a      	mov	sl, r3
 8022330:	f813 2b01 	ldrb.w	r2, [r3], #1
 8022334:	b10a      	cbz	r2, 802233a <_vfiprintf_r+0x86>
 8022336:	2a25      	cmp	r2, #37	@ 0x25
 8022338:	d1f9      	bne.n	802232e <_vfiprintf_r+0x7a>
 802233a:	ebba 0b04 	subs.w	fp, sl, r4
 802233e:	d00b      	beq.n	8022358 <_vfiprintf_r+0xa4>
 8022340:	465b      	mov	r3, fp
 8022342:	4622      	mov	r2, r4
 8022344:	4629      	mov	r1, r5
 8022346:	4630      	mov	r0, r6
 8022348:	f7ff ffa1 	bl	802228e <__sfputs_r>
 802234c:	3001      	adds	r0, #1
 802234e:	f000 80a7 	beq.w	80224a0 <_vfiprintf_r+0x1ec>
 8022352:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022354:	445a      	add	r2, fp
 8022356:	9209      	str	r2, [sp, #36]	@ 0x24
 8022358:	f89a 3000 	ldrb.w	r3, [sl]
 802235c:	2b00      	cmp	r3, #0
 802235e:	f000 809f 	beq.w	80224a0 <_vfiprintf_r+0x1ec>
 8022362:	2300      	movs	r3, #0
 8022364:	f04f 32ff 	mov.w	r2, #4294967295
 8022368:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802236c:	f10a 0a01 	add.w	sl, sl, #1
 8022370:	9304      	str	r3, [sp, #16]
 8022372:	9307      	str	r3, [sp, #28]
 8022374:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8022378:	931a      	str	r3, [sp, #104]	@ 0x68
 802237a:	4654      	mov	r4, sl
 802237c:	2205      	movs	r2, #5
 802237e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022382:	4853      	ldr	r0, [pc, #332]	@ (80224d0 <_vfiprintf_r+0x21c>)
 8022384:	f7dd ff44 	bl	8000210 <memchr>
 8022388:	9a04      	ldr	r2, [sp, #16]
 802238a:	b9d8      	cbnz	r0, 80223c4 <_vfiprintf_r+0x110>
 802238c:	06d1      	lsls	r1, r2, #27
 802238e:	bf44      	itt	mi
 8022390:	2320      	movmi	r3, #32
 8022392:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8022396:	0713      	lsls	r3, r2, #28
 8022398:	bf44      	itt	mi
 802239a:	232b      	movmi	r3, #43	@ 0x2b
 802239c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80223a0:	f89a 3000 	ldrb.w	r3, [sl]
 80223a4:	2b2a      	cmp	r3, #42	@ 0x2a
 80223a6:	d015      	beq.n	80223d4 <_vfiprintf_r+0x120>
 80223a8:	9a07      	ldr	r2, [sp, #28]
 80223aa:	4654      	mov	r4, sl
 80223ac:	2000      	movs	r0, #0
 80223ae:	f04f 0c0a 	mov.w	ip, #10
 80223b2:	4621      	mov	r1, r4
 80223b4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80223b8:	3b30      	subs	r3, #48	@ 0x30
 80223ba:	2b09      	cmp	r3, #9
 80223bc:	d94b      	bls.n	8022456 <_vfiprintf_r+0x1a2>
 80223be:	b1b0      	cbz	r0, 80223ee <_vfiprintf_r+0x13a>
 80223c0:	9207      	str	r2, [sp, #28]
 80223c2:	e014      	b.n	80223ee <_vfiprintf_r+0x13a>
 80223c4:	eba0 0308 	sub.w	r3, r0, r8
 80223c8:	fa09 f303 	lsl.w	r3, r9, r3
 80223cc:	4313      	orrs	r3, r2
 80223ce:	9304      	str	r3, [sp, #16]
 80223d0:	46a2      	mov	sl, r4
 80223d2:	e7d2      	b.n	802237a <_vfiprintf_r+0xc6>
 80223d4:	9b03      	ldr	r3, [sp, #12]
 80223d6:	1d19      	adds	r1, r3, #4
 80223d8:	681b      	ldr	r3, [r3, #0]
 80223da:	9103      	str	r1, [sp, #12]
 80223dc:	2b00      	cmp	r3, #0
 80223de:	bfbb      	ittet	lt
 80223e0:	425b      	neglt	r3, r3
 80223e2:	f042 0202 	orrlt.w	r2, r2, #2
 80223e6:	9307      	strge	r3, [sp, #28]
 80223e8:	9307      	strlt	r3, [sp, #28]
 80223ea:	bfb8      	it	lt
 80223ec:	9204      	strlt	r2, [sp, #16]
 80223ee:	7823      	ldrb	r3, [r4, #0]
 80223f0:	2b2e      	cmp	r3, #46	@ 0x2e
 80223f2:	d10a      	bne.n	802240a <_vfiprintf_r+0x156>
 80223f4:	7863      	ldrb	r3, [r4, #1]
 80223f6:	2b2a      	cmp	r3, #42	@ 0x2a
 80223f8:	d132      	bne.n	8022460 <_vfiprintf_r+0x1ac>
 80223fa:	9b03      	ldr	r3, [sp, #12]
 80223fc:	1d1a      	adds	r2, r3, #4
 80223fe:	681b      	ldr	r3, [r3, #0]
 8022400:	9203      	str	r2, [sp, #12]
 8022402:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8022406:	3402      	adds	r4, #2
 8022408:	9305      	str	r3, [sp, #20]
 802240a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80224e0 <_vfiprintf_r+0x22c>
 802240e:	7821      	ldrb	r1, [r4, #0]
 8022410:	2203      	movs	r2, #3
 8022412:	4650      	mov	r0, sl
 8022414:	f7dd fefc 	bl	8000210 <memchr>
 8022418:	b138      	cbz	r0, 802242a <_vfiprintf_r+0x176>
 802241a:	9b04      	ldr	r3, [sp, #16]
 802241c:	eba0 000a 	sub.w	r0, r0, sl
 8022420:	2240      	movs	r2, #64	@ 0x40
 8022422:	4082      	lsls	r2, r0
 8022424:	4313      	orrs	r3, r2
 8022426:	3401      	adds	r4, #1
 8022428:	9304      	str	r3, [sp, #16]
 802242a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802242e:	4829      	ldr	r0, [pc, #164]	@ (80224d4 <_vfiprintf_r+0x220>)
 8022430:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8022434:	2206      	movs	r2, #6
 8022436:	f7dd feeb 	bl	8000210 <memchr>
 802243a:	2800      	cmp	r0, #0
 802243c:	d03f      	beq.n	80224be <_vfiprintf_r+0x20a>
 802243e:	4b26      	ldr	r3, [pc, #152]	@ (80224d8 <_vfiprintf_r+0x224>)
 8022440:	bb1b      	cbnz	r3, 802248a <_vfiprintf_r+0x1d6>
 8022442:	9b03      	ldr	r3, [sp, #12]
 8022444:	3307      	adds	r3, #7
 8022446:	f023 0307 	bic.w	r3, r3, #7
 802244a:	3308      	adds	r3, #8
 802244c:	9303      	str	r3, [sp, #12]
 802244e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022450:	443b      	add	r3, r7
 8022452:	9309      	str	r3, [sp, #36]	@ 0x24
 8022454:	e76a      	b.n	802232c <_vfiprintf_r+0x78>
 8022456:	fb0c 3202 	mla	r2, ip, r2, r3
 802245a:	460c      	mov	r4, r1
 802245c:	2001      	movs	r0, #1
 802245e:	e7a8      	b.n	80223b2 <_vfiprintf_r+0xfe>
 8022460:	2300      	movs	r3, #0
 8022462:	3401      	adds	r4, #1
 8022464:	9305      	str	r3, [sp, #20]
 8022466:	4619      	mov	r1, r3
 8022468:	f04f 0c0a 	mov.w	ip, #10
 802246c:	4620      	mov	r0, r4
 802246e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8022472:	3a30      	subs	r2, #48	@ 0x30
 8022474:	2a09      	cmp	r2, #9
 8022476:	d903      	bls.n	8022480 <_vfiprintf_r+0x1cc>
 8022478:	2b00      	cmp	r3, #0
 802247a:	d0c6      	beq.n	802240a <_vfiprintf_r+0x156>
 802247c:	9105      	str	r1, [sp, #20]
 802247e:	e7c4      	b.n	802240a <_vfiprintf_r+0x156>
 8022480:	fb0c 2101 	mla	r1, ip, r1, r2
 8022484:	4604      	mov	r4, r0
 8022486:	2301      	movs	r3, #1
 8022488:	e7f0      	b.n	802246c <_vfiprintf_r+0x1b8>
 802248a:	ab03      	add	r3, sp, #12
 802248c:	9300      	str	r3, [sp, #0]
 802248e:	462a      	mov	r2, r5
 8022490:	4b12      	ldr	r3, [pc, #72]	@ (80224dc <_vfiprintf_r+0x228>)
 8022492:	a904      	add	r1, sp, #16
 8022494:	4630      	mov	r0, r6
 8022496:	f3af 8000 	nop.w
 802249a:	4607      	mov	r7, r0
 802249c:	1c78      	adds	r0, r7, #1
 802249e:	d1d6      	bne.n	802244e <_vfiprintf_r+0x19a>
 80224a0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80224a2:	07d9      	lsls	r1, r3, #31
 80224a4:	d405      	bmi.n	80224b2 <_vfiprintf_r+0x1fe>
 80224a6:	89ab      	ldrh	r3, [r5, #12]
 80224a8:	059a      	lsls	r2, r3, #22
 80224aa:	d402      	bmi.n	80224b2 <_vfiprintf_r+0x1fe>
 80224ac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80224ae:	f7ff fe21 	bl	80220f4 <__retarget_lock_release_recursive>
 80224b2:	89ab      	ldrh	r3, [r5, #12]
 80224b4:	065b      	lsls	r3, r3, #25
 80224b6:	f53f af1f 	bmi.w	80222f8 <_vfiprintf_r+0x44>
 80224ba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80224bc:	e71e      	b.n	80222fc <_vfiprintf_r+0x48>
 80224be:	ab03      	add	r3, sp, #12
 80224c0:	9300      	str	r3, [sp, #0]
 80224c2:	462a      	mov	r2, r5
 80224c4:	4b05      	ldr	r3, [pc, #20]	@ (80224dc <_vfiprintf_r+0x228>)
 80224c6:	a904      	add	r1, sp, #16
 80224c8:	4630      	mov	r0, r6
 80224ca:	f000 f879 	bl	80225c0 <_printf_i>
 80224ce:	e7e4      	b.n	802249a <_vfiprintf_r+0x1e6>
 80224d0:	080251a0 	.word	0x080251a0
 80224d4:	080251aa 	.word	0x080251aa
 80224d8:	00000000 	.word	0x00000000
 80224dc:	0802228f 	.word	0x0802228f
 80224e0:	080251a6 	.word	0x080251a6

080224e4 <_printf_common>:
 80224e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80224e8:	4616      	mov	r6, r2
 80224ea:	4698      	mov	r8, r3
 80224ec:	688a      	ldr	r2, [r1, #8]
 80224ee:	690b      	ldr	r3, [r1, #16]
 80224f0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80224f4:	4293      	cmp	r3, r2
 80224f6:	bfb8      	it	lt
 80224f8:	4613      	movlt	r3, r2
 80224fa:	6033      	str	r3, [r6, #0]
 80224fc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8022500:	4607      	mov	r7, r0
 8022502:	460c      	mov	r4, r1
 8022504:	b10a      	cbz	r2, 802250a <_printf_common+0x26>
 8022506:	3301      	adds	r3, #1
 8022508:	6033      	str	r3, [r6, #0]
 802250a:	6823      	ldr	r3, [r4, #0]
 802250c:	0699      	lsls	r1, r3, #26
 802250e:	bf42      	ittt	mi
 8022510:	6833      	ldrmi	r3, [r6, #0]
 8022512:	3302      	addmi	r3, #2
 8022514:	6033      	strmi	r3, [r6, #0]
 8022516:	6825      	ldr	r5, [r4, #0]
 8022518:	f015 0506 	ands.w	r5, r5, #6
 802251c:	d106      	bne.n	802252c <_printf_common+0x48>
 802251e:	f104 0a19 	add.w	sl, r4, #25
 8022522:	68e3      	ldr	r3, [r4, #12]
 8022524:	6832      	ldr	r2, [r6, #0]
 8022526:	1a9b      	subs	r3, r3, r2
 8022528:	42ab      	cmp	r3, r5
 802252a:	dc26      	bgt.n	802257a <_printf_common+0x96>
 802252c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8022530:	6822      	ldr	r2, [r4, #0]
 8022532:	3b00      	subs	r3, #0
 8022534:	bf18      	it	ne
 8022536:	2301      	movne	r3, #1
 8022538:	0692      	lsls	r2, r2, #26
 802253a:	d42b      	bmi.n	8022594 <_printf_common+0xb0>
 802253c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8022540:	4641      	mov	r1, r8
 8022542:	4638      	mov	r0, r7
 8022544:	47c8      	blx	r9
 8022546:	3001      	adds	r0, #1
 8022548:	d01e      	beq.n	8022588 <_printf_common+0xa4>
 802254a:	6823      	ldr	r3, [r4, #0]
 802254c:	6922      	ldr	r2, [r4, #16]
 802254e:	f003 0306 	and.w	r3, r3, #6
 8022552:	2b04      	cmp	r3, #4
 8022554:	bf02      	ittt	eq
 8022556:	68e5      	ldreq	r5, [r4, #12]
 8022558:	6833      	ldreq	r3, [r6, #0]
 802255a:	1aed      	subeq	r5, r5, r3
 802255c:	68a3      	ldr	r3, [r4, #8]
 802255e:	bf0c      	ite	eq
 8022560:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8022564:	2500      	movne	r5, #0
 8022566:	4293      	cmp	r3, r2
 8022568:	bfc4      	itt	gt
 802256a:	1a9b      	subgt	r3, r3, r2
 802256c:	18ed      	addgt	r5, r5, r3
 802256e:	2600      	movs	r6, #0
 8022570:	341a      	adds	r4, #26
 8022572:	42b5      	cmp	r5, r6
 8022574:	d11a      	bne.n	80225ac <_printf_common+0xc8>
 8022576:	2000      	movs	r0, #0
 8022578:	e008      	b.n	802258c <_printf_common+0xa8>
 802257a:	2301      	movs	r3, #1
 802257c:	4652      	mov	r2, sl
 802257e:	4641      	mov	r1, r8
 8022580:	4638      	mov	r0, r7
 8022582:	47c8      	blx	r9
 8022584:	3001      	adds	r0, #1
 8022586:	d103      	bne.n	8022590 <_printf_common+0xac>
 8022588:	f04f 30ff 	mov.w	r0, #4294967295
 802258c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022590:	3501      	adds	r5, #1
 8022592:	e7c6      	b.n	8022522 <_printf_common+0x3e>
 8022594:	18e1      	adds	r1, r4, r3
 8022596:	1c5a      	adds	r2, r3, #1
 8022598:	2030      	movs	r0, #48	@ 0x30
 802259a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802259e:	4422      	add	r2, r4
 80225a0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80225a4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80225a8:	3302      	adds	r3, #2
 80225aa:	e7c7      	b.n	802253c <_printf_common+0x58>
 80225ac:	2301      	movs	r3, #1
 80225ae:	4622      	mov	r2, r4
 80225b0:	4641      	mov	r1, r8
 80225b2:	4638      	mov	r0, r7
 80225b4:	47c8      	blx	r9
 80225b6:	3001      	adds	r0, #1
 80225b8:	d0e6      	beq.n	8022588 <_printf_common+0xa4>
 80225ba:	3601      	adds	r6, #1
 80225bc:	e7d9      	b.n	8022572 <_printf_common+0x8e>
	...

080225c0 <_printf_i>:
 80225c0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80225c4:	7e0f      	ldrb	r7, [r1, #24]
 80225c6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80225c8:	2f78      	cmp	r7, #120	@ 0x78
 80225ca:	4691      	mov	r9, r2
 80225cc:	4680      	mov	r8, r0
 80225ce:	460c      	mov	r4, r1
 80225d0:	469a      	mov	sl, r3
 80225d2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80225d6:	d807      	bhi.n	80225e8 <_printf_i+0x28>
 80225d8:	2f62      	cmp	r7, #98	@ 0x62
 80225da:	d80a      	bhi.n	80225f2 <_printf_i+0x32>
 80225dc:	2f00      	cmp	r7, #0
 80225de:	f000 80d2 	beq.w	8022786 <_printf_i+0x1c6>
 80225e2:	2f58      	cmp	r7, #88	@ 0x58
 80225e4:	f000 80b9 	beq.w	802275a <_printf_i+0x19a>
 80225e8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80225ec:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80225f0:	e03a      	b.n	8022668 <_printf_i+0xa8>
 80225f2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80225f6:	2b15      	cmp	r3, #21
 80225f8:	d8f6      	bhi.n	80225e8 <_printf_i+0x28>
 80225fa:	a101      	add	r1, pc, #4	@ (adr r1, 8022600 <_printf_i+0x40>)
 80225fc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8022600:	08022659 	.word	0x08022659
 8022604:	0802266d 	.word	0x0802266d
 8022608:	080225e9 	.word	0x080225e9
 802260c:	080225e9 	.word	0x080225e9
 8022610:	080225e9 	.word	0x080225e9
 8022614:	080225e9 	.word	0x080225e9
 8022618:	0802266d 	.word	0x0802266d
 802261c:	080225e9 	.word	0x080225e9
 8022620:	080225e9 	.word	0x080225e9
 8022624:	080225e9 	.word	0x080225e9
 8022628:	080225e9 	.word	0x080225e9
 802262c:	0802276d 	.word	0x0802276d
 8022630:	08022697 	.word	0x08022697
 8022634:	08022727 	.word	0x08022727
 8022638:	080225e9 	.word	0x080225e9
 802263c:	080225e9 	.word	0x080225e9
 8022640:	0802278f 	.word	0x0802278f
 8022644:	080225e9 	.word	0x080225e9
 8022648:	08022697 	.word	0x08022697
 802264c:	080225e9 	.word	0x080225e9
 8022650:	080225e9 	.word	0x080225e9
 8022654:	0802272f 	.word	0x0802272f
 8022658:	6833      	ldr	r3, [r6, #0]
 802265a:	1d1a      	adds	r2, r3, #4
 802265c:	681b      	ldr	r3, [r3, #0]
 802265e:	6032      	str	r2, [r6, #0]
 8022660:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8022664:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8022668:	2301      	movs	r3, #1
 802266a:	e09d      	b.n	80227a8 <_printf_i+0x1e8>
 802266c:	6833      	ldr	r3, [r6, #0]
 802266e:	6820      	ldr	r0, [r4, #0]
 8022670:	1d19      	adds	r1, r3, #4
 8022672:	6031      	str	r1, [r6, #0]
 8022674:	0606      	lsls	r6, r0, #24
 8022676:	d501      	bpl.n	802267c <_printf_i+0xbc>
 8022678:	681d      	ldr	r5, [r3, #0]
 802267a:	e003      	b.n	8022684 <_printf_i+0xc4>
 802267c:	0645      	lsls	r5, r0, #25
 802267e:	d5fb      	bpl.n	8022678 <_printf_i+0xb8>
 8022680:	f9b3 5000 	ldrsh.w	r5, [r3]
 8022684:	2d00      	cmp	r5, #0
 8022686:	da03      	bge.n	8022690 <_printf_i+0xd0>
 8022688:	232d      	movs	r3, #45	@ 0x2d
 802268a:	426d      	negs	r5, r5
 802268c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8022690:	4859      	ldr	r0, [pc, #356]	@ (80227f8 <_printf_i+0x238>)
 8022692:	230a      	movs	r3, #10
 8022694:	e011      	b.n	80226ba <_printf_i+0xfa>
 8022696:	6821      	ldr	r1, [r4, #0]
 8022698:	6833      	ldr	r3, [r6, #0]
 802269a:	0608      	lsls	r0, r1, #24
 802269c:	f853 5b04 	ldr.w	r5, [r3], #4
 80226a0:	d402      	bmi.n	80226a8 <_printf_i+0xe8>
 80226a2:	0649      	lsls	r1, r1, #25
 80226a4:	bf48      	it	mi
 80226a6:	b2ad      	uxthmi	r5, r5
 80226a8:	2f6f      	cmp	r7, #111	@ 0x6f
 80226aa:	4853      	ldr	r0, [pc, #332]	@ (80227f8 <_printf_i+0x238>)
 80226ac:	6033      	str	r3, [r6, #0]
 80226ae:	bf14      	ite	ne
 80226b0:	230a      	movne	r3, #10
 80226b2:	2308      	moveq	r3, #8
 80226b4:	2100      	movs	r1, #0
 80226b6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80226ba:	6866      	ldr	r6, [r4, #4]
 80226bc:	60a6      	str	r6, [r4, #8]
 80226be:	2e00      	cmp	r6, #0
 80226c0:	bfa2      	ittt	ge
 80226c2:	6821      	ldrge	r1, [r4, #0]
 80226c4:	f021 0104 	bicge.w	r1, r1, #4
 80226c8:	6021      	strge	r1, [r4, #0]
 80226ca:	b90d      	cbnz	r5, 80226d0 <_printf_i+0x110>
 80226cc:	2e00      	cmp	r6, #0
 80226ce:	d04b      	beq.n	8022768 <_printf_i+0x1a8>
 80226d0:	4616      	mov	r6, r2
 80226d2:	fbb5 f1f3 	udiv	r1, r5, r3
 80226d6:	fb03 5711 	mls	r7, r3, r1, r5
 80226da:	5dc7      	ldrb	r7, [r0, r7]
 80226dc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80226e0:	462f      	mov	r7, r5
 80226e2:	42bb      	cmp	r3, r7
 80226e4:	460d      	mov	r5, r1
 80226e6:	d9f4      	bls.n	80226d2 <_printf_i+0x112>
 80226e8:	2b08      	cmp	r3, #8
 80226ea:	d10b      	bne.n	8022704 <_printf_i+0x144>
 80226ec:	6823      	ldr	r3, [r4, #0]
 80226ee:	07df      	lsls	r7, r3, #31
 80226f0:	d508      	bpl.n	8022704 <_printf_i+0x144>
 80226f2:	6923      	ldr	r3, [r4, #16]
 80226f4:	6861      	ldr	r1, [r4, #4]
 80226f6:	4299      	cmp	r1, r3
 80226f8:	bfde      	ittt	le
 80226fa:	2330      	movle	r3, #48	@ 0x30
 80226fc:	f806 3c01 	strble.w	r3, [r6, #-1]
 8022700:	f106 36ff 	addle.w	r6, r6, #4294967295
 8022704:	1b92      	subs	r2, r2, r6
 8022706:	6122      	str	r2, [r4, #16]
 8022708:	f8cd a000 	str.w	sl, [sp]
 802270c:	464b      	mov	r3, r9
 802270e:	aa03      	add	r2, sp, #12
 8022710:	4621      	mov	r1, r4
 8022712:	4640      	mov	r0, r8
 8022714:	f7ff fee6 	bl	80224e4 <_printf_common>
 8022718:	3001      	adds	r0, #1
 802271a:	d14a      	bne.n	80227b2 <_printf_i+0x1f2>
 802271c:	f04f 30ff 	mov.w	r0, #4294967295
 8022720:	b004      	add	sp, #16
 8022722:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022726:	6823      	ldr	r3, [r4, #0]
 8022728:	f043 0320 	orr.w	r3, r3, #32
 802272c:	6023      	str	r3, [r4, #0]
 802272e:	4833      	ldr	r0, [pc, #204]	@ (80227fc <_printf_i+0x23c>)
 8022730:	2778      	movs	r7, #120	@ 0x78
 8022732:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8022736:	6823      	ldr	r3, [r4, #0]
 8022738:	6831      	ldr	r1, [r6, #0]
 802273a:	061f      	lsls	r7, r3, #24
 802273c:	f851 5b04 	ldr.w	r5, [r1], #4
 8022740:	d402      	bmi.n	8022748 <_printf_i+0x188>
 8022742:	065f      	lsls	r7, r3, #25
 8022744:	bf48      	it	mi
 8022746:	b2ad      	uxthmi	r5, r5
 8022748:	6031      	str	r1, [r6, #0]
 802274a:	07d9      	lsls	r1, r3, #31
 802274c:	bf44      	itt	mi
 802274e:	f043 0320 	orrmi.w	r3, r3, #32
 8022752:	6023      	strmi	r3, [r4, #0]
 8022754:	b11d      	cbz	r5, 802275e <_printf_i+0x19e>
 8022756:	2310      	movs	r3, #16
 8022758:	e7ac      	b.n	80226b4 <_printf_i+0xf4>
 802275a:	4827      	ldr	r0, [pc, #156]	@ (80227f8 <_printf_i+0x238>)
 802275c:	e7e9      	b.n	8022732 <_printf_i+0x172>
 802275e:	6823      	ldr	r3, [r4, #0]
 8022760:	f023 0320 	bic.w	r3, r3, #32
 8022764:	6023      	str	r3, [r4, #0]
 8022766:	e7f6      	b.n	8022756 <_printf_i+0x196>
 8022768:	4616      	mov	r6, r2
 802276a:	e7bd      	b.n	80226e8 <_printf_i+0x128>
 802276c:	6833      	ldr	r3, [r6, #0]
 802276e:	6825      	ldr	r5, [r4, #0]
 8022770:	6961      	ldr	r1, [r4, #20]
 8022772:	1d18      	adds	r0, r3, #4
 8022774:	6030      	str	r0, [r6, #0]
 8022776:	062e      	lsls	r6, r5, #24
 8022778:	681b      	ldr	r3, [r3, #0]
 802277a:	d501      	bpl.n	8022780 <_printf_i+0x1c0>
 802277c:	6019      	str	r1, [r3, #0]
 802277e:	e002      	b.n	8022786 <_printf_i+0x1c6>
 8022780:	0668      	lsls	r0, r5, #25
 8022782:	d5fb      	bpl.n	802277c <_printf_i+0x1bc>
 8022784:	8019      	strh	r1, [r3, #0]
 8022786:	2300      	movs	r3, #0
 8022788:	6123      	str	r3, [r4, #16]
 802278a:	4616      	mov	r6, r2
 802278c:	e7bc      	b.n	8022708 <_printf_i+0x148>
 802278e:	6833      	ldr	r3, [r6, #0]
 8022790:	1d1a      	adds	r2, r3, #4
 8022792:	6032      	str	r2, [r6, #0]
 8022794:	681e      	ldr	r6, [r3, #0]
 8022796:	6862      	ldr	r2, [r4, #4]
 8022798:	2100      	movs	r1, #0
 802279a:	4630      	mov	r0, r6
 802279c:	f7dd fd38 	bl	8000210 <memchr>
 80227a0:	b108      	cbz	r0, 80227a6 <_printf_i+0x1e6>
 80227a2:	1b80      	subs	r0, r0, r6
 80227a4:	6060      	str	r0, [r4, #4]
 80227a6:	6863      	ldr	r3, [r4, #4]
 80227a8:	6123      	str	r3, [r4, #16]
 80227aa:	2300      	movs	r3, #0
 80227ac:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80227b0:	e7aa      	b.n	8022708 <_printf_i+0x148>
 80227b2:	6923      	ldr	r3, [r4, #16]
 80227b4:	4632      	mov	r2, r6
 80227b6:	4649      	mov	r1, r9
 80227b8:	4640      	mov	r0, r8
 80227ba:	47d0      	blx	sl
 80227bc:	3001      	adds	r0, #1
 80227be:	d0ad      	beq.n	802271c <_printf_i+0x15c>
 80227c0:	6823      	ldr	r3, [r4, #0]
 80227c2:	079b      	lsls	r3, r3, #30
 80227c4:	d413      	bmi.n	80227ee <_printf_i+0x22e>
 80227c6:	68e0      	ldr	r0, [r4, #12]
 80227c8:	9b03      	ldr	r3, [sp, #12]
 80227ca:	4298      	cmp	r0, r3
 80227cc:	bfb8      	it	lt
 80227ce:	4618      	movlt	r0, r3
 80227d0:	e7a6      	b.n	8022720 <_printf_i+0x160>
 80227d2:	2301      	movs	r3, #1
 80227d4:	4632      	mov	r2, r6
 80227d6:	4649      	mov	r1, r9
 80227d8:	4640      	mov	r0, r8
 80227da:	47d0      	blx	sl
 80227dc:	3001      	adds	r0, #1
 80227de:	d09d      	beq.n	802271c <_printf_i+0x15c>
 80227e0:	3501      	adds	r5, #1
 80227e2:	68e3      	ldr	r3, [r4, #12]
 80227e4:	9903      	ldr	r1, [sp, #12]
 80227e6:	1a5b      	subs	r3, r3, r1
 80227e8:	42ab      	cmp	r3, r5
 80227ea:	dcf2      	bgt.n	80227d2 <_printf_i+0x212>
 80227ec:	e7eb      	b.n	80227c6 <_printf_i+0x206>
 80227ee:	2500      	movs	r5, #0
 80227f0:	f104 0619 	add.w	r6, r4, #25
 80227f4:	e7f5      	b.n	80227e2 <_printf_i+0x222>
 80227f6:	bf00      	nop
 80227f8:	080251b1 	.word	0x080251b1
 80227fc:	080251c2 	.word	0x080251c2

08022800 <__sflush_r>:
 8022800:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8022804:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022808:	0716      	lsls	r6, r2, #28
 802280a:	4605      	mov	r5, r0
 802280c:	460c      	mov	r4, r1
 802280e:	d454      	bmi.n	80228ba <__sflush_r+0xba>
 8022810:	684b      	ldr	r3, [r1, #4]
 8022812:	2b00      	cmp	r3, #0
 8022814:	dc02      	bgt.n	802281c <__sflush_r+0x1c>
 8022816:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8022818:	2b00      	cmp	r3, #0
 802281a:	dd48      	ble.n	80228ae <__sflush_r+0xae>
 802281c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802281e:	2e00      	cmp	r6, #0
 8022820:	d045      	beq.n	80228ae <__sflush_r+0xae>
 8022822:	2300      	movs	r3, #0
 8022824:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8022828:	682f      	ldr	r7, [r5, #0]
 802282a:	6a21      	ldr	r1, [r4, #32]
 802282c:	602b      	str	r3, [r5, #0]
 802282e:	d030      	beq.n	8022892 <__sflush_r+0x92>
 8022830:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8022832:	89a3      	ldrh	r3, [r4, #12]
 8022834:	0759      	lsls	r1, r3, #29
 8022836:	d505      	bpl.n	8022844 <__sflush_r+0x44>
 8022838:	6863      	ldr	r3, [r4, #4]
 802283a:	1ad2      	subs	r2, r2, r3
 802283c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802283e:	b10b      	cbz	r3, 8022844 <__sflush_r+0x44>
 8022840:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8022842:	1ad2      	subs	r2, r2, r3
 8022844:	2300      	movs	r3, #0
 8022846:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8022848:	6a21      	ldr	r1, [r4, #32]
 802284a:	4628      	mov	r0, r5
 802284c:	47b0      	blx	r6
 802284e:	1c43      	adds	r3, r0, #1
 8022850:	89a3      	ldrh	r3, [r4, #12]
 8022852:	d106      	bne.n	8022862 <__sflush_r+0x62>
 8022854:	6829      	ldr	r1, [r5, #0]
 8022856:	291d      	cmp	r1, #29
 8022858:	d82b      	bhi.n	80228b2 <__sflush_r+0xb2>
 802285a:	4a2a      	ldr	r2, [pc, #168]	@ (8022904 <__sflush_r+0x104>)
 802285c:	410a      	asrs	r2, r1
 802285e:	07d6      	lsls	r6, r2, #31
 8022860:	d427      	bmi.n	80228b2 <__sflush_r+0xb2>
 8022862:	2200      	movs	r2, #0
 8022864:	6062      	str	r2, [r4, #4]
 8022866:	04d9      	lsls	r1, r3, #19
 8022868:	6922      	ldr	r2, [r4, #16]
 802286a:	6022      	str	r2, [r4, #0]
 802286c:	d504      	bpl.n	8022878 <__sflush_r+0x78>
 802286e:	1c42      	adds	r2, r0, #1
 8022870:	d101      	bne.n	8022876 <__sflush_r+0x76>
 8022872:	682b      	ldr	r3, [r5, #0]
 8022874:	b903      	cbnz	r3, 8022878 <__sflush_r+0x78>
 8022876:	6560      	str	r0, [r4, #84]	@ 0x54
 8022878:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802287a:	602f      	str	r7, [r5, #0]
 802287c:	b1b9      	cbz	r1, 80228ae <__sflush_r+0xae>
 802287e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8022882:	4299      	cmp	r1, r3
 8022884:	d002      	beq.n	802288c <__sflush_r+0x8c>
 8022886:	4628      	mov	r0, r5
 8022888:	f7ff fca0 	bl	80221cc <_free_r>
 802288c:	2300      	movs	r3, #0
 802288e:	6363      	str	r3, [r4, #52]	@ 0x34
 8022890:	e00d      	b.n	80228ae <__sflush_r+0xae>
 8022892:	2301      	movs	r3, #1
 8022894:	4628      	mov	r0, r5
 8022896:	47b0      	blx	r6
 8022898:	4602      	mov	r2, r0
 802289a:	1c50      	adds	r0, r2, #1
 802289c:	d1c9      	bne.n	8022832 <__sflush_r+0x32>
 802289e:	682b      	ldr	r3, [r5, #0]
 80228a0:	2b00      	cmp	r3, #0
 80228a2:	d0c6      	beq.n	8022832 <__sflush_r+0x32>
 80228a4:	2b1d      	cmp	r3, #29
 80228a6:	d001      	beq.n	80228ac <__sflush_r+0xac>
 80228a8:	2b16      	cmp	r3, #22
 80228aa:	d11e      	bne.n	80228ea <__sflush_r+0xea>
 80228ac:	602f      	str	r7, [r5, #0]
 80228ae:	2000      	movs	r0, #0
 80228b0:	e022      	b.n	80228f8 <__sflush_r+0xf8>
 80228b2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80228b6:	b21b      	sxth	r3, r3
 80228b8:	e01b      	b.n	80228f2 <__sflush_r+0xf2>
 80228ba:	690f      	ldr	r7, [r1, #16]
 80228bc:	2f00      	cmp	r7, #0
 80228be:	d0f6      	beq.n	80228ae <__sflush_r+0xae>
 80228c0:	0793      	lsls	r3, r2, #30
 80228c2:	680e      	ldr	r6, [r1, #0]
 80228c4:	bf08      	it	eq
 80228c6:	694b      	ldreq	r3, [r1, #20]
 80228c8:	600f      	str	r7, [r1, #0]
 80228ca:	bf18      	it	ne
 80228cc:	2300      	movne	r3, #0
 80228ce:	eba6 0807 	sub.w	r8, r6, r7
 80228d2:	608b      	str	r3, [r1, #8]
 80228d4:	f1b8 0f00 	cmp.w	r8, #0
 80228d8:	dde9      	ble.n	80228ae <__sflush_r+0xae>
 80228da:	6a21      	ldr	r1, [r4, #32]
 80228dc:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80228de:	4643      	mov	r3, r8
 80228e0:	463a      	mov	r2, r7
 80228e2:	4628      	mov	r0, r5
 80228e4:	47b0      	blx	r6
 80228e6:	2800      	cmp	r0, #0
 80228e8:	dc08      	bgt.n	80228fc <__sflush_r+0xfc>
 80228ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80228ee:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80228f2:	81a3      	strh	r3, [r4, #12]
 80228f4:	f04f 30ff 	mov.w	r0, #4294967295
 80228f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80228fc:	4407      	add	r7, r0
 80228fe:	eba8 0800 	sub.w	r8, r8, r0
 8022902:	e7e7      	b.n	80228d4 <__sflush_r+0xd4>
 8022904:	dfbffffe 	.word	0xdfbffffe

08022908 <_fflush_r>:
 8022908:	b538      	push	{r3, r4, r5, lr}
 802290a:	690b      	ldr	r3, [r1, #16]
 802290c:	4605      	mov	r5, r0
 802290e:	460c      	mov	r4, r1
 8022910:	b913      	cbnz	r3, 8022918 <_fflush_r+0x10>
 8022912:	2500      	movs	r5, #0
 8022914:	4628      	mov	r0, r5
 8022916:	bd38      	pop	{r3, r4, r5, pc}
 8022918:	b118      	cbz	r0, 8022922 <_fflush_r+0x1a>
 802291a:	6a03      	ldr	r3, [r0, #32]
 802291c:	b90b      	cbnz	r3, 8022922 <_fflush_r+0x1a>
 802291e:	f7ff f9d5 	bl	8021ccc <__sinit>
 8022922:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022926:	2b00      	cmp	r3, #0
 8022928:	d0f3      	beq.n	8022912 <_fflush_r+0xa>
 802292a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 802292c:	07d0      	lsls	r0, r2, #31
 802292e:	d404      	bmi.n	802293a <_fflush_r+0x32>
 8022930:	0599      	lsls	r1, r3, #22
 8022932:	d402      	bmi.n	802293a <_fflush_r+0x32>
 8022934:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8022936:	f7ff fbdc 	bl	80220f2 <__retarget_lock_acquire_recursive>
 802293a:	4628      	mov	r0, r5
 802293c:	4621      	mov	r1, r4
 802293e:	f7ff ff5f 	bl	8022800 <__sflush_r>
 8022942:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8022944:	07da      	lsls	r2, r3, #31
 8022946:	4605      	mov	r5, r0
 8022948:	d4e4      	bmi.n	8022914 <_fflush_r+0xc>
 802294a:	89a3      	ldrh	r3, [r4, #12]
 802294c:	059b      	lsls	r3, r3, #22
 802294e:	d4e1      	bmi.n	8022914 <_fflush_r+0xc>
 8022950:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8022952:	f7ff fbcf 	bl	80220f4 <__retarget_lock_release_recursive>
 8022956:	e7dd      	b.n	8022914 <_fflush_r+0xc>

08022958 <__swhatbuf_r>:
 8022958:	b570      	push	{r4, r5, r6, lr}
 802295a:	460c      	mov	r4, r1
 802295c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022960:	2900      	cmp	r1, #0
 8022962:	b096      	sub	sp, #88	@ 0x58
 8022964:	4615      	mov	r5, r2
 8022966:	461e      	mov	r6, r3
 8022968:	da0d      	bge.n	8022986 <__swhatbuf_r+0x2e>
 802296a:	89a3      	ldrh	r3, [r4, #12]
 802296c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8022970:	f04f 0100 	mov.w	r1, #0
 8022974:	bf14      	ite	ne
 8022976:	2340      	movne	r3, #64	@ 0x40
 8022978:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 802297c:	2000      	movs	r0, #0
 802297e:	6031      	str	r1, [r6, #0]
 8022980:	602b      	str	r3, [r5, #0]
 8022982:	b016      	add	sp, #88	@ 0x58
 8022984:	bd70      	pop	{r4, r5, r6, pc}
 8022986:	466a      	mov	r2, sp
 8022988:	f000 f848 	bl	8022a1c <_fstat_r>
 802298c:	2800      	cmp	r0, #0
 802298e:	dbec      	blt.n	802296a <__swhatbuf_r+0x12>
 8022990:	9901      	ldr	r1, [sp, #4]
 8022992:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8022996:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802299a:	4259      	negs	r1, r3
 802299c:	4159      	adcs	r1, r3
 802299e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80229a2:	e7eb      	b.n	802297c <__swhatbuf_r+0x24>

080229a4 <__smakebuf_r>:
 80229a4:	898b      	ldrh	r3, [r1, #12]
 80229a6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80229a8:	079d      	lsls	r5, r3, #30
 80229aa:	4606      	mov	r6, r0
 80229ac:	460c      	mov	r4, r1
 80229ae:	d507      	bpl.n	80229c0 <__smakebuf_r+0x1c>
 80229b0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80229b4:	6023      	str	r3, [r4, #0]
 80229b6:	6123      	str	r3, [r4, #16]
 80229b8:	2301      	movs	r3, #1
 80229ba:	6163      	str	r3, [r4, #20]
 80229bc:	b003      	add	sp, #12
 80229be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80229c0:	ab01      	add	r3, sp, #4
 80229c2:	466a      	mov	r2, sp
 80229c4:	f7ff ffc8 	bl	8022958 <__swhatbuf_r>
 80229c8:	9f00      	ldr	r7, [sp, #0]
 80229ca:	4605      	mov	r5, r0
 80229cc:	4639      	mov	r1, r7
 80229ce:	4630      	mov	r0, r6
 80229d0:	f7ff f856 	bl	8021a80 <_malloc_r>
 80229d4:	b948      	cbnz	r0, 80229ea <__smakebuf_r+0x46>
 80229d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80229da:	059a      	lsls	r2, r3, #22
 80229dc:	d4ee      	bmi.n	80229bc <__smakebuf_r+0x18>
 80229de:	f023 0303 	bic.w	r3, r3, #3
 80229e2:	f043 0302 	orr.w	r3, r3, #2
 80229e6:	81a3      	strh	r3, [r4, #12]
 80229e8:	e7e2      	b.n	80229b0 <__smakebuf_r+0xc>
 80229ea:	89a3      	ldrh	r3, [r4, #12]
 80229ec:	6020      	str	r0, [r4, #0]
 80229ee:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80229f2:	81a3      	strh	r3, [r4, #12]
 80229f4:	9b01      	ldr	r3, [sp, #4]
 80229f6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80229fa:	b15b      	cbz	r3, 8022a14 <__smakebuf_r+0x70>
 80229fc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8022a00:	4630      	mov	r0, r6
 8022a02:	f000 f81d 	bl	8022a40 <_isatty_r>
 8022a06:	b128      	cbz	r0, 8022a14 <__smakebuf_r+0x70>
 8022a08:	89a3      	ldrh	r3, [r4, #12]
 8022a0a:	f023 0303 	bic.w	r3, r3, #3
 8022a0e:	f043 0301 	orr.w	r3, r3, #1
 8022a12:	81a3      	strh	r3, [r4, #12]
 8022a14:	89a3      	ldrh	r3, [r4, #12]
 8022a16:	431d      	orrs	r5, r3
 8022a18:	81a5      	strh	r5, [r4, #12]
 8022a1a:	e7cf      	b.n	80229bc <__smakebuf_r+0x18>

08022a1c <_fstat_r>:
 8022a1c:	b538      	push	{r3, r4, r5, lr}
 8022a1e:	4d07      	ldr	r5, [pc, #28]	@ (8022a3c <_fstat_r+0x20>)
 8022a20:	2300      	movs	r3, #0
 8022a22:	4604      	mov	r4, r0
 8022a24:	4608      	mov	r0, r1
 8022a26:	4611      	mov	r1, r2
 8022a28:	602b      	str	r3, [r5, #0]
 8022a2a:	f7de fc4a 	bl	80012c2 <_fstat>
 8022a2e:	1c43      	adds	r3, r0, #1
 8022a30:	d102      	bne.n	8022a38 <_fstat_r+0x1c>
 8022a32:	682b      	ldr	r3, [r5, #0]
 8022a34:	b103      	cbz	r3, 8022a38 <_fstat_r+0x1c>
 8022a36:	6023      	str	r3, [r4, #0]
 8022a38:	bd38      	pop	{r3, r4, r5, pc}
 8022a3a:	bf00      	nop
 8022a3c:	2001760c 	.word	0x2001760c

08022a40 <_isatty_r>:
 8022a40:	b538      	push	{r3, r4, r5, lr}
 8022a42:	4d06      	ldr	r5, [pc, #24]	@ (8022a5c <_isatty_r+0x1c>)
 8022a44:	2300      	movs	r3, #0
 8022a46:	4604      	mov	r4, r0
 8022a48:	4608      	mov	r0, r1
 8022a4a:	602b      	str	r3, [r5, #0]
 8022a4c:	f7de fc3e 	bl	80012cc <_isatty>
 8022a50:	1c43      	adds	r3, r0, #1
 8022a52:	d102      	bne.n	8022a5a <_isatty_r+0x1a>
 8022a54:	682b      	ldr	r3, [r5, #0]
 8022a56:	b103      	cbz	r3, 8022a5a <_isatty_r+0x1a>
 8022a58:	6023      	str	r3, [r4, #0]
 8022a5a:	bd38      	pop	{r3, r4, r5, pc}
 8022a5c:	2001760c 	.word	0x2001760c

08022a60 <_init>:
 8022a60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022a62:	bf00      	nop
 8022a64:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8022a66:	bc08      	pop	{r3}
 8022a68:	469e      	mov	lr, r3
 8022a6a:	4770      	bx	lr

08022a6c <_fini>:
 8022a6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022a6e:	bf00      	nop
 8022a70:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8022a72:	bc08      	pop	{r3}
 8022a74:	469e      	mov	lr, r3
 8022a76:	4770      	bx	lr
